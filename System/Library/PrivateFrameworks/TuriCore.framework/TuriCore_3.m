turi::random::source_registry *turi::random::source_registry::source_registry(turi::random::source_registry *this)
{
  uint64_t v2;
  const char *v3;

  *((void *)this + 2) = 0;
  *((void *)this + 1) = 0;
  *(void *)this = (char *)this + 8;
  turi::random::generator::generator((turi::random::source_registry *)((char *)this + 24));
  v2 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 6376), 0);
  assert_msg(v2 == 0, v3, v2);
  return this;
}

void sub_223F32DD4(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<unsigned long long,double>,std::__map_value_compare<unsigned long long,std::__value_type<unsigned long long,double>,std::less<unsigned long long>,true>,std::allocator<std::__value_type<unsigned long long,double>>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void turi::random::source_registry::~source_registry(turi::random::source_registry *this)
{
}

void turi::random::source_registry::register_generator(turi::random::generator *)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/random/random.cpp", 88);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  v2 = (void *)std::ostream::operator<<();
  v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"tls_ptr != __null", 17);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/random/random.cpp", "operator()", 191, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::random::source_registry::register_generator(turi::random::generator *)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F32F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t turi::random::generator::seed(turi::random::generator *this, turi::random::generator *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  v4 = (pthread_mutex_t *)((char *)this + 6288);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 6288));
  boost::random::detail::seed_array_real<48,607ul,boost::random::lagged_fibonacci_01_engine<double,48,607u,273u>,double>();
  *(_DWORD *)this = 607;
  boost::random::detail::generate_from_int<boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>,unsigned int *>((int *)a2 + 1216, __src, (unsigned int *)&v8);
  memcpy((char *)this + 4864, __src, 0x57CuLL);
  *((void *)this + 784) = 351;
  boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::normalize_state((unsigned int *)this + 1216);
  unint64_t v5 = 0x5DEECE66DLL * *((void *)a2 + 785) + 11;
  *((void *)a2 + 785) = v5 & 0xFFFFFFFFFFFFLL;
  *((void *)this + 785) = (v5 >> 1) & 0x7FFFFFFF0000 | 0x330E;
  return pthread_mutex_unlock(v4);
}

void boost::random::detail::seed_array_real<48,607ul,boost::random::lagged_fibonacci_01_engine<double,48,607u,273u>,double>()
{
  v0 = (int *)MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v7 = *MEMORY[0x263EF8340];
  boost::random::detail::generate_from_real<boost::random::lagged_fibonacci_01_engine<double,48,607u,273u>,unsigned int *>(v0, v6, (unsigned int *)&v7);
  unint64_t v4 = -4856;
  do
  {
    LODWORD(v3) = v6[v4 / 4 + 1214];
    unint64_t v5 = 0x3CF0000000000000;
    LOWORD(v5) = *(_WORD *)((char *)&v7 + v4 + 4);
    double v3 = (double)*(unint64_t *)&v3 * 3.55271368e-15 + 0.0 + (double)v5 * 0.0000152587891;
    *(double *)(v2 + v4 + 4856) = v3;
    v4 += 8;
  }
  while (v4);
}

void boost::random::detail::generate_from_real<boost::random::lagged_fibonacci_01_engine<double,48,607u,273u>,unsigned int *>(int *a1, unsigned int *a2, unsigned int *a3)
{
  unsigned int v6 = 0;
  for (int i = 0; ; int i = v11)
  {
    int v8 = *a1;
    if (*a1 >= 0x25F)
    {
      boost::random::lagged_fibonacci_01_engine<double,48,607u,273u>::fill(a1);
      int v8 = *a1;
    }
    *a1 = v8 + 1;
    double v9 = *(double *)&a1[2 * v8 + 2];
    double v10 = v9 * 2.81474977e14;
    if (!i) {
      break;
    }
    *a2++ = (fmod(v9 * 2.81474977e14, 4294967300.0) << i) | v6;
    if (a2 == a3) {
      return;
    }
    int v11 = i + 16;
    double v10 = v10 / (double)(1 << -(char)i);
    if (i + 16 >= 32) {
      goto LABEL_9;
    }
LABEL_12:
    unsigned int v6 = v10;
  }
  int v11 = 48;
LABEL_9:
  unsigned int v12 = v11;
  while (1)
  {
    *a2++ = fmod(v10, 4294967300.0);
    if (a2 == a3) {
      break;
    }
    double v10 = v10 * 2.32830644e-10;
    int v11 = v12 - 32;
    BOOL v13 = v12 > 0x3F;
    v12 -= 32;
    if (!v13) {
      goto LABEL_12;
    }
  }
}

int *boost::random::detail::generate_from_int<boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>,unsigned int *>(int *result, unsigned int *a2, unsigned int *a3)
{
  unint64_t v5 = result;
  uint64_t v6 = *((void *)result + 176);
  do
  {
    if (v6 == 351)
    {
      result = boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::twist(v5);
      uint64_t v6 = *((void *)v5 + 176);
    }
    unsigned int v7 = v5[v6++];
    *((void *)v5 + 176) = v6;
    int v8 = ((v7 ^ (v7 >> 11)) << 7) & 0x31B6AB00 ^ v7 ^ (v7 >> 11);
    *a2++ = (v8 << 15) & 0xFFE50000 ^ v8 ^ (((v8 << 15) & 0xFFE50000 ^ v8) >> 17);
  }
  while (a2 != a3);
  return result;
}

int *boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::twist(int *result)
{
  uint64_t v1 = 0;
  int v2 = *result;
  do
  {
    unsigned int v3 = v2 & 0xFFF80000;
    int v2 = result[v1 + 1];
    result[v1] = result[v1 + 175] ^ ((v2 & 0x7FFFE | v3) >> 1) ^ (v2 << 31 >> 31) & 0xCCAB8EE7;
    ++v1;
  }
  while (v1 != 174);
  uint64_t v4 = 0;
  unint64_t v5 = (const float *)(result + 174);
  int8x8_t v6 = (int8x8_t)vld1_dup_f32(v5);
  *((int8x8_t *)result + 87) = veor_s8((int8x8_t)vshr_n_u32((uint32x2_t)vorr_s8(vand_s8(*(int8x8_t *)(result + 175), (int8x8_t)vdup_n_s32(0x7FFFEu)), vand_s8(vext_s8(v6, *(int8x8_t *)(result + 175), 4uLL), (int8x8_t)0x700000007)), 1uLL), veor_s8(*(int8x8_t *)(result + 349), vbic_s8((int8x8_t)vdup_n_s32(0xCCAB8EE7), (int8x8_t)vceqz_s32((int32x2_t)vand_s8(*(int8x8_t *)(result + 175), (int8x8_t)0x100000001)))));
  int v7 = result[176];
  do
  {
    unsigned int v8 = v7 & 0xFFF80000;
    int v7 = result[v4 + 177];
    result[v4 + 176] = result[v4] ^ ((v7 & 0x7FFFE | v8) >> 1) ^ (v7 << 31 >> 31) & 0xCCAB8EE7;
    ++v4;
  }
  while (v4 != 174);
  result[350] = result[174] ^ ((*result & 0x7FFFE | result[350] & 0xFFF80000) >> 1) ^ (*result << 31 >> 31) & 0xCCAB8EE7;
  *((void *)result + 176) = 0;
  return result;
}

pthread_mutex_t *turi::random::nondet_generator::nondet_generator(pthread_mutex_t *this)
{
  uint64_t v2 = MEMORY[0x263F8C308] + 64;
  *(void *)&this[6].__opaque[32] = MEMORY[0x263F8C308] + 64;
  unsigned int v3 = &this->__opaque[8];
  uint64_t v4 = *(void *)(MEMORY[0x263F8C2A8] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x263F8C2A8] + 8);
  this->__sig = v5;
  *(uint64_t *)((char *)&this->__sig + *(void *)(v5 - 24)) = v4;
  *(void *)this->__opaque = 0;
  int8x8_t v6 = (std::ios_base *)((char *)this + *(void *)(this->__sig - 24));
  std::ios_base::init(v6, &this->__opaque[8]);
  uint64_t v7 = MEMORY[0x263F8C308] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  this->__sig = v7;
  *(void *)&this[6].__opaque[32] = v2;
  MEMORY[0x22A614840](v3);
  uint64_t v8 = pthread_mutex_init(this + 9, 0);
  assert_msg(v8 == 0, v9, v8);
  std::ifstream::open();
  if (*(_DWORD *)&this->__opaque[*(void *)(this->__sig - 24) + 24]) {
    turi::random::nondet_generator::nondet_generator(void)::{lambda(void)#1}::operator()();
  }
  return this;
}

void sub_223F3369C(_Unwind_Exception *a1)
{
  turi::mutex::~mutex(v2);
  std::ifstream::~ifstream(v1);
  _Unwind_Resume(a1);
}

void turi::random::nondet_generator::nondet_generator(void)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/random/random.cpp", 88);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  unsigned int v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"rnd_dev.good()", 14);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/random/random.cpp", "operator()", 78, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::random::nondet_generator::nondet_generator(void)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F337E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void *std::ifstream::~ifstream(void *a1)
{
  uint64_t v2 = MEMORY[0x263F8C2A8];
  uint64_t v3 = *MEMORY[0x263F8C2A8];
  *a1 = *MEMORY[0x263F8C2A8];
  *(void *)((char *)a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  MEMORY[0x22A614850](a1 + 2);
  std::istream::~istream();
  MEMORY[0x22A614E30](a1 + 53);
  return a1;
}

void turi::random::nondet_generator::~nondet_generator(pthread_mutex_t *this)
{
  uint64_t v2 = &this->__opaque[8];
  if (!std::filebuf::close()) {
    std::ios_base::clear((std::ios_base *)((char *)this + *(void *)(this->__sig - 24)), *(_DWORD *)&this->__opaque[*(void *)(this->__sig - 24) + 24] | 4);
  }
  turi::mutex::~mutex(this + 9);
  uint64_t v3 = MEMORY[0x263F8C2A8];
  uint64_t v4 = *MEMORY[0x263F8C2A8];
  this->__sig = *MEMORY[0x263F8C2A8];
  *(uint64_t *)((char *)&this->__sig + *(void *)(v4 - 24)) = *(void *)(v3 + 24);
  MEMORY[0x22A614850](v2);
  std::istream::~istream();
  MEMORY[0x22A614E30](&this[6].__opaque[32]);
}

void turi::random::nondet_generator::operator()(void)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/random/random.cpp", 88);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"rnd_dev.good()", 14);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/random/random.cpp", "operator()", 115, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::random::nondet_generator::operator()(void)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F33BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::random::nondet_generator::operator()(void)::{lambda(void)#2}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/random/random.cpp", 88);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"rnd_dev.good()", 14);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/random/random.cpp", "operator()", 117, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::random::nondet_generator::operator()(void)::{lambda(void)#2}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F33DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

unsigned int **boost::random::detail::seed_array_real<48,607ul,boost::random::detail::generator_seed_seq<boost::random::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>>,double>()
{
  result = (unsigned int **)MEMORY[0x270FA5388]();
  uint64_t v3 = 0;
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v4 = *result;
  unint64_t v5 = **result;
  do
  {
    unint64_t v5 = 16807 * v5 % 0x7FFFFFFF;
    *(_DWORD *)&v8[4 * v3++] = v5;
  }
  while (v3 != 1214);
  _DWORD *v4 = v5;
  uint64_t v6 = -4856;
  do
  {
    LODWORD(v2) = *(_DWORD *)&v8[v6 + 4856];
    unint64_t v7 = 0x3CF0000000000000;
    LOWORD(v7) = *(_WORD *)((char *)&v9 + v6 + 4);
    double v2 = (double)*(unint64_t *)&v2 * 3.55271368e-15 + 0.0 + (double)v7 * 0.0000152587891;
    *(double *)(v1 + v6 + 4856) = v2;
    v6 += 8;
  }
  while (v6);
  return result;
}

std::string *turi::block_cache::init(std::string *a1, const std::string *a2, std::string::size_type a3)
{
  if (a1->__r_.__value_.__s.__data_[0]) {
    turi::block_cache::init(std::string const&,unsigned long)::$_0::operator()();
  }
  result = std::string::operator=(a1 + 1, a2);
  a1[692].__r_.__value_.__r.__words[0] = a3;
  a1->__r_.__value_.__s.__data_[0] = 1;
  return result;
}

uint64_t std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (*((char *)a2 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  uint64_t result = std::string::basic_string[abi:ne180100](a3, v6 + v5);
  if (*(char *)(result + 23) >= 0) {
    uint64_t v8 = (char *)result;
  }
  else {
    uint64_t v8 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a1 + 23) >= 0) {
      uint64_t v9 = a1;
    }
    else {
      uint64_t v9 = *a1;
    }
    uint64_t result = (uint64_t)memmove(v8, v9, v5);
  }
  double v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0) {
      int v11 = a2;
    }
    else {
      int v11 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

void turi::general_ofstream::~general_ofstream(turi::general_ofstream *this)
{
  *(void *)this = &unk_26D75C318;
  double v2 = (char *)this + 232;
  *((void *)this + 29) = &unk_26D75C340;
  if (*((char *)this + 231) < 0) {
    operator delete(*((void **)this + 26));
  }
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)this + 8);
  MEMORY[0x22A614E30](v2);
}

{
  char *v2;
  uint64_t vars8;

  *(void *)this = &unk_26D75C318;
  double v2 = (char *)this + 232;
  *((void *)this + 29) = &unk_26D75C340;
  if (*((char *)this + 231) < 0) {
    operator delete(*((void **)this + 26));
  }
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)this + 8);
  MEMORY[0x22A614E30](v2);
  JUMPOUT(0x22A614FA0);
}

void turi::block_cache::~block_cache(turi::block_cache *this)
{
  if (*(unsigned char *)this)
  {
    double v2 = (char *)*((void *)this + 14);
    uint64_t v3 = (char *)this + 120;
    if (v2 != (char *)this + 120)
    {
      do
      {
        turi::fileio::delete_path((uint64_t)(v2 + 32), 3);
        uint64_t v4 = (char *)*((void *)v2 + 1);
        if (v4)
        {
          do
          {
            size_t v5 = v4;
            uint64_t v4 = *(char **)v4;
          }
          while (v4);
        }
        else
        {
          do
          {
            size_t v5 = (char *)*((void *)v2 + 2);
            BOOL v6 = *(void *)v5 == (void)v2;
            double v2 = v5;
          }
          while (!v6);
        }
        double v2 = v5;
      }
      while (v5 != v3);
    }
  }
  boost::multi_index::multi_index_container<std::pair<std::string,BOOL>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,BOOL>>>::~multi_index_container((uint64_t)this + 16632);
  boost::multi_index::multi_index_container<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>>>::~multi_index_container((uint64_t)this + 16528);
  for (uint64_t i = 16464; i != 80; i -= 64)
    turi::mutex::~mutex((pthread_mutex_t *)((char *)this + i));
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)this + 112, *((char **)this + 15));
  turi::mutex::~mutex((pthread_mutex_t *)((char *)this + 48));
  if (*((char *)this + 47) < 0) {
    operator delete(*((void **)this + 3));
  }
  uint64_t v8 = (std::__shared_weak_count *)*((void *)this + 2);
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
}

uint64_t std::shared_ptr<turi::block_cache>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  double v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  return a1;
}

uint64_t turi::block_cache::get_instance(turi::block_cache *this)
{
  if (atomic_load_explicit((atomic_ullong *volatile)&turi::block_cache_is_initialized, memory_order_acquire) != -1)
  {
    uint64_t v4 = &v2;
    uint64_t v3 = &v4;
    std::__call_once(&turi::block_cache_is_initialized, &v3, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<turi::block_cache::get_instance(void)::$_0 &&>>);
  }
  uint64_t result = turi::bc;
  if (!(void)turi::bc) {
    turi::block_cache::get_instance(void)::$_1::operator()();
  }
  return result;
}

void virtual thunk to'turi::general_ofstream::~general_ofstream(turi::general_ofstream *this)
{
  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 24);
  *(void *)uint64_t v1 = &unk_26D75C318;
  *((void *)v1 + 29) = &unk_26D75C340;
  if (v1[231] < 0) {
    operator delete(*((void **)v1 + 26));
  }
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)(v1 + 8));
  JUMPOUT(0x22A614E30);
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 24);
  *(void *)uint64_t v1 = &unk_26D75C318;
  *((void *)v1 + 29) = &unk_26D75C340;
  if (v1[231] < 0) {
    operator delete(*((void **)v1 + 26));
  }
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)(v1 + 8));
  MEMORY[0x22A614E30](v1 + 232);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::iostreams::stream<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>>::~stream(uint64_t a1)
{
  uint64_t v2 = std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v2 + 8);
  MEMORY[0x22A614E30](a1 + 208);
  return a1;
}

void boost::iostreams::stream<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>>::~stream(uint64_t a1)
{
  uint64_t v2 = std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v2 + 8);
  MEMORY[0x22A614E30](a1 + 208);
  JUMPOUT(0x22A614FA0);
}

void virtual thunk to'boost::iostreams::stream<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>>::~stream(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)(v1 + 8));
  JUMPOUT(0x22A614E30);
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)(v1 + 8));
  MEMORY[0x22A614E30](v1 + 208);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,std::ostream>::~stream_base(uint64_t a1)
{
  uint64_t v2 = std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v2 + 8);
  MEMORY[0x22A614E30](a1 + 208);
  return a1;
}

void boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,std::ostream>::~stream_base(uint64_t a1)
{
  uint64_t v2 = std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v2 + 8);
  MEMORY[0x22A614E30](a1 + 208);
  JUMPOUT(0x22A614FA0);
}

void virtual thunk to'boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,std::ostream>::~stream_base(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)(v1 + 8));
  JUMPOUT(0x22A614E30);
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)(v1 + 8));
  MEMORY[0x22A614E30](v1 + 208);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(uint64_t a1)
{
  *(void *)a1 = &unk_26D75C508;
  if ((~*(_DWORD *)(a1 + 192) & 5) == 0) {
    boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_sink>>>,boost::iostreams::detail::clear_flags_operation<int>>((_DWORD *)a1, 8, (_DWORD *)a1, 16, (turi::fileio_impl::general_fstream_sink *)(a1 + 72), (_DWORD *)(a1 + 192));
  }
  *(void *)a1 = &unk_26D75C600;
  uint64_t v2 = *(void **)(a1 + 168);
  if (v2) {
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 152))
  {
    turi::fileio_impl::general_fstream_sink::~general_fstream_sink((turi::fileio_impl::general_fstream_sink *)(a1 + 72));
    *(unsigned char *)(a1 + 152) = 0;
  }
  return std::streambuf::~streambuf();
}

void sub_223F34900(void *a1)
{
}

void boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(uint64_t a1)
{
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(a1);
  JUMPOUT(0x22A614FA0);
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::imbue(uint64_t a1, const std::locale *a2)
{
  if (*(unsigned char *)(a1 + 192))
  {
    uint64_t v2 = *(std::locale **)(a1 + 160);
    if (v2)
    {
      uint64_t v4 = v2 + 1;
      (*((void (**)(std::locale *))v2->__locale_ + 2))(v2);
      std::locale::locale(&v5, v4);
      std::locale::operator=(v4, a2);
      std::locale::~locale(&v5);
    }
  }
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::seekpos(uint64_t a1, uint64_t a2, int a3)
{
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::sync(uint64_t a1)
{
  boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::sync_impl((const char *)a1);
  uint64_t result = *(void *)(a1 + 160);
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 48))(result);
    return 0;
  }
  return result;
}

void sub_223F34A30(void *a1)
{
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::underflow(void *a1)
{
  uint64_t v2 = (unsigned __int8 *)a1[3];
  if (!v2)
  {
    (*(void (**)(void *))(*a1 + 168))(a1);
    uint64_t v2 = (unsigned __int8 *)a1[3];
  }
  if ((unint64_t)v2 >= a1[4])
  {
    uint64_t v4 = a1[23];
    if (v4 >= (uint64_t)&v2[-a1[2]]) {
      size_t v5 = (size_t)&v2[-a1[2]];
    }
    else {
      size_t v5 = a1[23];
    }
    if (v5)
    {
      uint64_t v6 = -(uint64_t)v5;
      memmove((void *)(a1[21] + v4 - v5), &v2[-v5], v5);
      uint64_t v4 = a1[23];
    }
    else
    {
      uint64_t v6 = 0;
    }
    uint64_t v7 = a1[21] + v4;
    a1[2] = v7 + v6;
    a1[3] = v7;
    a1[4] = v7;
    boost::iostreams::detail::device_wrapper_impl<boost::iostreams::output>::read<turi::fileio_impl::general_fstream_sink,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>();
  }
  return *v2;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::overflow(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 192) & 2) != 0 && !*(void *)(a1 + 48)) {
    (*(void (**)(uint64_t))(*(void *)a1 + 176))(a1);
  }
  if (a2 == -1) {
    return 0;
  }
  if ((*(unsigned char *)(a1 + 192) & 2) == 0)
  {
    char v6 = a2;
    if (turi::fileio_impl::general_fstream_sink::write((turi::fileio_impl::general_fstream_sink *)(a1 + 72), &v6, 1) == (const char *)1) {
      return a2;
    }
    return 0xFFFFFFFFLL;
  }
  uint64_t v4 = *(unsigned char **)(a1 + 48);
  if (v4 == *(unsigned char **)(a1 + 56))
  {
    boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::sync_impl((const char *)a1);
    uint64_t v4 = *(unsigned char **)(a1 + 48);
    if (v4 == *(unsigned char **)(a1 + 56)) {
      return 0xFFFFFFFFLL;
    }
  }
  unsigned char *v4 = a2;
  ++*(void *)(a1 + 48);
  return a2;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::set_next(uint64_t result, uint64_t a2)
{
  *(void *)(result + 160) = a2;
  return result;
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::close_impl(void *a1, int a2)
{
  if (a2 != 8)
  {
    if (a2 == 16)
    {
      (*(void (**)(void *))(*a1 + 48))(a1);
      a1[6] = 0;
      a1[7] = 0;
      a1[5] = 0;
    }
    turi::fileio_impl::general_fstream_sink::close((turi::fileio_impl::general_fstream_sink *)(a1 + 9));
  }
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::auto_close(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 192) >> 2) & 1;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::set_auto_close(uint64_t result, int a2)
{
  if (a2) {
    int v2 = 4;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(result + 192) = *(_DWORD *)(result + 192) & 0xFFFFFFFB | v2;
  return result;
}

BOOL boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::strict_sync(uint64_t a1)
{
  boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::sync_impl((const char *)a1);
  uint64_t v2 = *(void *)(a1 + 160);
  return !v2 || (*(unsigned int (**)(uint64_t))(*(void *)v2 + 48))(v2) != -1;
}

void sub_223F34D38(void *a1)
{
}

void *boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::component_type()
{
}

void *boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::init_get_area(void *result)
{
  uint64_t v1 = result[21];
  result[2] = v1;
  result[3] = v1;
  result[4] = v1;
  return result;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::init_put_area(uint64_t result)
{
  if ((*(unsigned char *)(result + 192) & 2) != 0)
  {
    uint64_t v1 = *(void *)(result + 168);
    uint64_t v2 = v1 + *(void *)(result + 176);
  }
  else
  {
    uint64_t v1 = 0;
    uint64_t v2 = 0;
  }
  *(void *)(result + 40) = v1;
  *(void *)(result + 48) = v1;
  *(void *)(result + 56) = v2;
  return result;
}

uint64_t boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_sink>>>,boost::iostreams::detail::clear_flags_operation<int>>(_DWORD *a1, int a2, _DWORD *a3, int a4, turi::fileio_impl::general_fstream_sink *a5, _DWORD *a6)
{
  uint64_t result = boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_sink>>>>(a1, a2, a3, a4, a5);
  *a6 = 0;
  return result;
}

void sub_223F34DB4(void *a1)
{
  __cxa_begin_catch(a1);
  *uint64_t v1 = 0;
  __cxa_rethrow();
}

void sub_223F34DC4(_Unwind_Exception *a1)
{
}

uint64_t boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_sink>>>>(_DWORD *a1, int a2, _DWORD *a3, int a4, turi::fileio_impl::general_fstream_sink *a5)
{
  uint64_t v6 = boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>>(a1, a2, a3, a4);
  if (*((unsigned char *)a5 + 80))
  {
    turi::fileio_impl::general_fstream_sink::~general_fstream_sink(a5);
    *((unsigned char *)a5 + 80) = 0;
  }
  return v6;
}

void sub_223F34E18(void *a1)
{
  __cxa_begin_catch(a1);
  if (*((unsigned char *)v1 + 80))
  {
    turi::fileio_impl::general_fstream_sink::~general_fstream_sink(v1);
    *((unsigned char *)v1 + 80) = 0;
  }
  __cxa_rethrow();
}

void sub_223F34E38(_Unwind_Exception *a1)
{
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~indirect_streambuf(uint64_t a1)
{
  *(void *)a1 = &unk_26D75C600;
  uint64_t v2 = *(void **)(a1 + 168);
  if (v2) {
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 152))
  {
    turi::fileio_impl::general_fstream_sink::~general_fstream_sink((turi::fileio_impl::general_fstream_sink *)(a1 + 72));
    *(unsigned char *)(a1 + 152) = 0;
  }
  return std::streambuf::~streambuf();
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~indirect_streambuf(uint64_t a1)
{
  *(void *)a1 = &unk_26D75C600;
  uint64_t v2 = *(void **)(a1 + 168);
  if (v2) {
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 152))
  {
    turi::fileio_impl::general_fstream_sink::~general_fstream_sink((turi::fileio_impl::general_fstream_sink *)(a1 + 72));
    *(unsigned char *)(a1 + 152) = 0;
  }
  std::streambuf::~streambuf();
  JUMPOUT(0x22A614FA0);
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::seek_impl(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (a3 != 1
    || a4 != 8
    || (uint64_t v5 = *(void *)(a1 + 24)) == 0
    || *(void *)(a1 + 16) - v5 > a2
    || *(void *)(a1 + 32) - v5 < a2)
  {
    if (*(void *)(a1 + 48)) {
      (*(void (**)(uint64_t))(*(void *)a1 + 48))(a1);
    }
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<turi::fileio_impl::general_fstream_sink>();
  }
  *(void *)(a1 + 24) = v5 + (int)a2;
  boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<turi::fileio_impl::general_fstream_sink>();
}

void boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<turi::fileio_impl::general_fstream_sink>()
{
  *(void *)&__ec.__val_ = 1;
  __ec.__cat_ = std::iostream_category();
  std::ios_base::failure::failure(&v0, "no random access", &__ec);
  boost::throw_exception<std::ios_base::failure>((uint64_t)&v0);
}

void sub_223F3513C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

const char *boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::sync_impl(const char *result)
{
  uint64_t v1 = (const char *)*((void *)result + 5);
  uint64_t v2 = *((void *)result + 6);
  uint64_t v3 = (const char *)(v2 - (void)v1);
  if (v2 - (uint64_t)v1 >= 1)
  {
    uint64_t v4 = result;
    uint64_t result = turi::fileio_impl::general_fstream_sink::write((turi::fileio_impl::general_fstream_sink *)(result + 72), v1, v2 - (void)v1);
    if (result == v3)
    {
      uint64_t v5 = (const char *)*((void *)v4 + 21);
      uint64_t v6 = &v5[*((void *)v4 + 22)];
      *((void *)v4 + 5) = v5;
    }
    else
    {
      uint64_t v7 = *((void *)v4 + 21);
      uint64_t v8 = &result[v7];
      uint64_t v6 = (const char *)(v7 + *((void *)v4 + 22));
      uint64_t v5 = &v8[*((_DWORD *)v4 + 12) - (int)v8];
      *((void *)v4 + 5) = v8;
    }
    *((void *)v4 + 6) = v5;
    *((void *)v4 + 7) = v6;
  }
  return result;
}

void boost::iostreams::detail::device_wrapper_impl<boost::iostreams::output>::read<turi::fileio_impl::general_fstream_sink,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>()
{
  *(void *)&__ec.__val_ = 1;
  __ec.__cat_ = std::iostream_category();
  std::ios_base::failure::failure(&v0, "no read access", &__ec);
  boost::throw_exception<std::ios_base::failure>((uint64_t)&v0);
}

void sub_223F35208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

uint64_t boost::multi_index::multi_index_container<std::pair<std::string,BOOL>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,BOOL>>>::~multi_index_container(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void ***)(v2 + 48);
  uint64_t v4 = (void **)(v2 + 48);
  uint64_t v3 = v5;
  if (v5 != v4)
  {
    do
    {
      uint64_t v6 = (void **)*v3;
      boost::multi_index::multi_index_container<std::pair<std::string,BOOL>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,BOOL>>>::delete_node_(a1, v3 - 6);
      uint64_t v3 = v6;
    }
    while (v6 != v4);
  }
  if (*(void *)(a1 + 40)) {
    operator delete(*(void **)(a1 + 48));
  }
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void boost::multi_index::multi_index_container<std::pair<std::string,BOOL>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,BOOL>>>::delete_node_(int a1, void **__p)
{
  if (*((char *)__p + 23) < 0) {
    operator delete(*__p);
  }
  operator delete(__p);
}

uint64_t boost::multi_index::multi_index_container<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>>>::~multi_index_container(uint64_t a1)
{
  if (*(void *)(a1 + 40)) {
    operator delete(*(void **)(a1 + 48));
  }
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void boost::multi_index::detail::hashed_index<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,boost::hash<std::string>,std::equal_to<std::string>,boost::multi_index::detail::nth_layer<1,std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>>>,boost::mpl::vector0<mpl_::na>,boost::multi_index::detail::hashed_unique_tag>::delete_all_nodes_(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 - 8);
  uint64_t v4 = *(void **)(v1 + 56);
  uint64_t v3 = (void *)(v1 + 56);
  uint64_t v2 = v4;
  if (v4 != v3)
  {
    do
    {
      uint64_t v6 = (void *)*v2;
      uint64_t v5 = v2 - 7;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<turi::unity_sarray_base>>,0>((uint64_t)v5);
      operator delete(v5);
      uint64_t v2 = v6;
    }
    while (v6 != v3);
  }
}

uint64_t *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__find_equal<std::string>((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

uint64_t boost::multi_index::detail::bucket_array<std::allocator<std::pair<std::string,BOOL>>>::bucket_array(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v6 = 60;
  uint64_t v7 = "5";
  do
  {
    unint64_t v8 = v6 >> 1;
    uint64_t v9 = &v7[8 * (v6 >> 1)];
    unint64_t v11 = *(void *)v9;
    double v10 = v9 + 8;
    v6 += ~(v6 >> 1);
    if (v11 < a4) {
      uint64_t v7 = v10;
    }
    else {
      unint64_t v6 = v8;
    }
  }
  while (v6);
  if (v7 == "NSt3__120__shared_ptr_emplaceIN4turi16general_ifstreamENS_9allocatorIS2_EEEE") {
    uint64_t v7 = (char *)&unk_2246C86C0;
  }
  *(void *)a1 = (v7 - "5") >> 3;
  boost::multi_index::detail::auto_space<boost::multi_index::detail::hashed_index_base_node_impl<std::allocator<char>>,std::allocator<std::pair<std::string,BOOL>>>::auto_space(a1 + 8, a2, *(void *)v7 + 1);
  uint64_t v12 = *(void *)&boost::multi_index::detail::bucket_array_base<true>::sizes[8 * *(void *)a1];
  bzero(*(void **)(a1 + 24), 8 * v12);
  *a3 = a3;
  *(void *)(*(void *)(a1 + 24) + 8 * v12) = a3;
  a3[1] = *(void *)(a1 + 24) + 8 * v12;
  return a1;
}

uint64_t boost::multi_index::detail::auto_space<boost::multi_index::detail::hashed_index_base_node_impl<std::allocator<char>>,std::allocator<std::pair<std::string,BOOL>>>::auto_space(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)(a1 + 8) = a3;
  if (a3)
  {
    if (a3 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v4 = operator new(8 * a3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + 16) = v4;
  return a1;
}

std::string *std::allocate_shared[abi:ne180100]<turi::general_ifstream,std::allocator<turi::general_ifstream>,std::string &,void>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (std::string *)operator new(0x188uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::general_ifstream>::__shared_ptr_emplace[abi:ne180100]<std::string &,std::allocator<turi::general_ifstream>,0>(v4, a1);
  *a2 = v4 + 1;
  a2[1] = v4;
  return result;
}

void sub_223F35540(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

std::string *std::__shared_ptr_emplace<turi::general_ifstream>::__shared_ptr_emplace[abi:ne180100]<std::string &,std::allocator<turi::general_ifstream>,0>(std::string *a1, uint64_t a2)
{
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D75C8B8;
  std::allocator<turi::general_ifstream>::construct[abi:ne180100]<turi::general_ifstream,std::string &>((uint64_t)&v4, a1 + 1, a2);
  return a1;
}

void sub_223F355B0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::general_ifstream>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C8B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::general_ifstream>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C8B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<turi::general_ifstream>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::allocator<turi::general_ifstream>::construct[abi:ne180100]<turi::general_ifstream,std::string &>(uint64_t a1, std::string *a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  turi::general_ifstream::general_ifstream(a2, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223F356CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__tree<std::string>::__erase_unique<std::string>(uint64_t **a1, const void **a2)
{
  uint64_t v3 = std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::find<std::string>((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  std::__tree<std::string>::erase(a1, v3);
  return 1;
}

uint64_t *std::__tree<std::string>::erase(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = std::__tree<std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>,std::__map_value_compare<std::string,std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>>>::__remove_node_pointer(a1, (uint64_t *)a2);
  if (*(char *)(a2 + 55) < 0) {
    operator delete(*(void **)(a2 + 32));
  }
  operator delete((void *)a2);
  return v3;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<turi::block_cache::get_instance(void)::$_0 &&>>()
{
  _ZNSt3__115allocate_sharedB8ne180100IN4turi11block_cacheENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(v7);
  long long v0 = *(_OWORD *)v7;
  v7[0] = 0;
  v7[1] = 0;
  uint64_t v1 = (std::__shared_weak_count *)*((void *)&turi::bc + 1);
  turi::bc = v0;
  if (v1)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
    if (v7[1]) {
      std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v7[1]);
    }
  }
  uint64_t v2 = turi::bc;
  turi::fileio::fixed_size_cache_manager::hold_instance(&v8);
  uint64_t v4 = v8;
  uint64_t v3 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = *(std::__shared_weak_count **)(v2 + 16);
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = v3;
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "block_caches-");
  turi::get_temp_name_prefer_hdfs((turi::fs_impl *)&__p);
}

void sub_223F35BAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *_ZNSt3__115allocate_sharedB8ne180100IN4turi11block_cacheENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x4178uLL);
  uint64_t result = _ZNSt3__120__shared_ptr_emplaceIN4turi11block_cacheENS_9allocatorIS2_EEEC2B8ne180100IJES4_Li0EEES4_DpOT_(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_223F35C5C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *_ZNSt3__120__shared_ptr_emplaceIN4turi11block_cacheENS_9allocatorIS2_EEEC2B8ne180100IJES4_Li0EEES4_DpOT_(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75C908;
  uint64_t v2 = (turi::block_cache *)(a1 + 3);
  bzero(a1 + 3, 0x4160uLL);
  turi::block_cache::block_cache(v2);
  return a1;
}

void sub_223F35CCC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::block_cache>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C908;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::block_cache>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C908;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::block_cache>::__on_zero_shared(uint64_t a1)
{
}

turi::block_cache *turi::block_cache::block_cache(turi::block_cache *this)
{
  *(unsigned char *)this = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  uint64_t v2 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 48), 0);
  assert_msg(v2 == 0, v3, v2);
  uint64_t v4 = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 14) = (char *)this + 120;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  do
  {
    uint64_t v5 = pthread_mutex_init((pthread_mutex_t *)((char *)this + v4 + 144), 0);
    assert_msg(v5 == 0, v6, v5);
    v4 += 64;
  }
  while (v4 != 0x4000);
  boost::multi_index::multi_index_container<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>>>::multi_index_container((uint64_t)this + 16528);
  *((void *)this + 2076) = -1;
  *((void *)this + 2078) = 0;
  *((void *)this + 2077) = 0;
  boost::multi_index::multi_index_container<std::pair<std::string,BOOL>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,BOOL>>>::multi_index_container((uint64_t)this + 16632);
  *((void *)this + 2089) = -1;
  *((void *)this + 2091) = 0;
  *((void *)this + 2090) = 0;
  return this;
}

void sub_223F35E5C(_Unwind_Exception *a1)
{
  uint64_t v6 = v4;
  boost::multi_index::multi_index_container<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>>>::~multi_index_container(v6);
  for (uint64_t i = 16464; i != 80; i -= 64)
    turi::mutex::~mutex((pthread_mutex_t *)(v1 + i));
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy(v3, *v5);
  turi::mutex::~mutex(v2);
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  uint64_t v9 = *(std::__shared_weak_count **)(v1 + 16);
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  _Unwind_Resume(a1);
}

uint64_t boost::multi_index::multi_index_container<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>>>::multi_index_container(uint64_t a1)
{
  *(void *)(a1 + 8) = operator new(0x48uLL);
  v4[0] = 0;
  boost::multi_index::detail::hashed_index<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,boost::hash<std::string>,std::equal_to<std::string>,boost::multi_index::detail::nth_layer<1,std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>>>,boost::mpl::vector0<mpl_::na>,boost::multi_index::detail::hashed_unique_tag>::hashed_index(a1 + 16, v4, (uint64_t)&v3);
  *(void *)(a1 + 72) = 0;
  return a1;
}

void sub_223F35F3C(_Unwind_Exception *a1)
{
  operator delete(*(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t boost::multi_index::detail::hashed_index<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,boost::hash<std::string>,std::equal_to<std::string>,boost::multi_index::detail::nth_layer<1,std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>,std::string,&std::pair<std::string,std::shared_ptr<turi::general_ifstream>>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,std::shared_ptr<turi::general_ifstream>>>>,boost::mpl::vector0<mpl_::na>,boost::multi_index::detail::hashed_unique_tag>::hashed_index(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 - 8);
  *(void *)(v4 + 48) = v4 + 40;
  *(void *)(*(void *)(a1 - 8) + 40) = v4 + 40;
  boost::multi_index::detail::bucket_array<std::allocator<std::pair<std::string,BOOL>>>::bucket_array(a1 + 8, a3, (void *)(*(void *)(a1 - 8) + 56), *a2);
  *(_DWORD *)(a1 + 40) = 1065353216;
  float v5 = (float)*(unint64_t *)&boost::multi_index::detail::bucket_array_base<true>::sizes[8 * *(void *)(a1 + 8)];
  unint64_t v6 = (unint64_t)v5;
  if (v5 >= 1.8447e19) {
    unint64_t v6 = -1;
  }
  *(void *)(a1 + 48) = v6;
  return a1;
}

uint64_t boost::multi_index::multi_index_container<std::pair<std::string,BOOL>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,BOOL>>>::multi_index_container(uint64_t a1)
{
  *(void *)(a1 + 8) = operator new(0x40uLL);
  v4[0] = 0;
  boost::multi_index::detail::hashed_index<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,boost::hash<std::string>,std::equal_to<std::string>,boost::multi_index::detail::nth_layer<1,std::pair<std::string,BOOL>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,BOOL>>>,boost::mpl::vector0<mpl_::na>,boost::multi_index::detail::hashed_unique_tag>::hashed_index(a1 + 16, v4, (uint64_t)&v3);
  *(void *)(a1 + 72) = 0;
  return a1;
}

void sub_223F36028(_Unwind_Exception *a1)
{
  operator delete(*(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t boost::multi_index::detail::hashed_index<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,boost::hash<std::string>,std::equal_to<std::string>,boost::multi_index::detail::nth_layer<1,std::pair<std::string,BOOL>,boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::member<std::pair<std::string,BOOL>,std::string,&std::pair<std::string,BOOL>::first>,mpl_::na,mpl_::na,mpl_::na>,boost::multi_index::sequenced<boost::multi_index::tag<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>,std::allocator<std::pair<std::string,BOOL>>>,boost::mpl::vector0<mpl_::na>,boost::multi_index::detail::hashed_unique_tag>::hashed_index(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 - 8);
  *(void *)(v4 + 40) = v4 + 32;
  *(void *)(*(void *)(a1 - 8) + 32) = v4 + 32;
  boost::multi_index::detail::bucket_array<std::allocator<std::pair<std::string,BOOL>>>::bucket_array(a1 + 8, a3, (void *)(*(void *)(a1 - 8) + 48), *a2);
  *(_DWORD *)(a1 + 40) = 1065353216;
  float v5 = (float)*(unint64_t *)&boost::multi_index::detail::bucket_array_base<true>::sizes[8 * *(void *)(a1 + 8)];
  unint64_t v6 = (unint64_t)v5;
  if (v5 >= 1.8447e19) {
    unint64_t v6 = -1;
  }
  *(void *)(a1 + 48) = v6;
  return a1;
}

uint64_t *turi::fileio_impl::cache_stream_sink::cache_stream_sink(uint64_t *a1, uint64_t a2)
{
  uint64_t instance = turi::fileio::fixed_size_cache_manager::get_instance((turi::fileio::fixed_size_cache_manager *)a1);
  *a1 = instance;
  float v5 = a1 + 1;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v24, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v24 = *(std::string *)a2;
  }
  turi::fileio::fixed_size_cache_manager::new_cache(instance, (uint64_t)&v24, a1 + 1);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  a1[3] = 0;
  a1[4] = 0;
  uint64_t v6 = a1[1];
  if (*(char *)(v6 + 79) < 0)
  {
    if (!*(void *)(v6 + 64)) {
      return a1;
    }
  }
  else if (!*(unsigned char *)(v6 + 79))
  {
    return a1;
  }
  uint64_t v7 = (int *)global_logger();
  if (v7[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v7)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    uint64_t v8 = (file_logger *)global_logger();
    started = file_logger::start_stream(v8, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/cache_stream_sink.cpp", "cache_stream_sink", 15, 1);
    double v10 = pthread_getspecific(*((void *)started + 74));
    if (v10 && *((unsigned char *)v10 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10 + 2, (uint64_t)"Writing ", 8);
    }
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v23, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string v23 = *(std::string *)a2;
    }
    uint64_t v11 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v23);
    uint64_t v12 = pthread_getspecific(*(void *)(v11 + 592));
    if (v12 && *((unsigned char *)v12 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12 + 2, (uint64_t)" from ", 6);
    }
    uint64_t v13 = *v5;
    if (*(char *)(*v5 + 79) < 0) {
      std::string::__init_copy_ctor_external(&v22, *(const std::string::value_type **)(v13 + 56), *(void *)(v13 + 64));
    }
    else {
      std::string v22 = *(std::string *)(v13 + 56);
    }
    uint64_t v14 = file_logger::operator<<<std::string>(v11, (uint64_t)&v22);
    v15 = pthread_getspecific(*(void *)(v14 + 592));
    if (v15)
    {
      if (*((unsigned char *)v15 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v15 + *(void *)(v15[2] - 24) + 16));
        v16 = std::locale::use_facet((const std::locale *)&v21, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
        std::locale::~locale((std::locale *)&v21);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v14);
        if (*(_DWORD *)(v14 + 600) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v23.__r_.__value_.__l.__data_);
    }
  }
  std::allocate_shared[abi:ne180100]<turi::fileio_impl::general_fstream_sink,std::allocator<turi::fileio_impl::general_fstream_sink>,std::string const&,void>(*v5 + 56, &v21);
  long long v17 = v21;
  long long v21 = 0uLL;
  v18 = (std::__shared_weak_count *)a1[4];
  *(_OWORD *)(a1 + 3) = v17;
  if (v18)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
    if (*((void *)&v21 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v21 + 1));
    }
  }
  return a1;
}

void sub_223F363B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  std::locale::~locale((std::locale *)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  v32 = *(std::__shared_weak_count **)(v30 + 32);
  if (v32) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v32);
  }
  v33 = *(std::__shared_weak_count **)(v30 + 16);
  if (v33) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v33);
  }
  _Unwind_Resume(a1);
}

void turi::fileio_impl::cache_stream_sink::~cache_stream_sink(turi::fileio_impl::cache_stream_sink *this)
{
  uint64_t v2 = (turi::fileio_impl::general_fstream_sink *)*((void *)this + 3);
  if (v2) {
    turi::fileio_impl::general_fstream_sink::close(v2);
  }
  char v3 = (std::__shared_weak_count *)*((void *)this + 4);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  uint64_t v4 = (std::__shared_weak_count *)*((void *)this + 2);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void turi::fileio_impl::cache_stream_sink::close(turi::fileio_impl::cache_stream_sink *this)
{
  uint64_t v1 = (turi::fileio_impl::general_fstream_sink *)*((void *)this + 3);
  if (v1) {
    turi::fileio_impl::general_fstream_sink::close(v1);
  }
}

const char *turi::fileio_impl::cache_stream_sink::write(turi::fileio_impl::cache_stream_sink *this, const char *a2, size_t a3)
{
  uint64_t v6 = (turi::fileio_impl::general_fstream_sink *)*((void *)this + 3);
  if (!v6)
  {
    uint64_t v8 = (turi::fileio::cache_block *)*((void *)this + 1);
    uint64_t v9 = *((void *)v8 + 6);
    if (v9)
    {
      uint64_t v10 = *((void *)v8 + 5);
      if (v10 + a3 <= *((void *)v8 + 4))
      {
LABEL_9:
        memcpy((void *)(v9 + v10), a2, a3);
        *((void *)v8 + 5) += a3;
        return (const char *)a3;
      }
      if (turi::fileio::cache_block::extend_capacity(*((turi::fileio::cache_block **)this + 1), v10 + a3))
      {
        uint64_t v10 = *((void *)v8 + 5);
        uint64_t v9 = *((void *)v8 + 6);
        goto LABEL_9;
      }
      uint64_t v8 = (turi::fileio::cache_block *)*((void *)this + 1);
    }
    turi::fileio::cache_block::write_to_file(v8);
  }
  return turi::fileio_impl::general_fstream_sink::write(v6, a2, a3);
}

void *std::allocate_shared[abi:ne180100]<turi::fileio_impl::general_fstream_sink,std::allocator<turi::fileio_impl::general_fstream_sink>,std::string const&,void>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x68uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_sink>::__shared_ptr_emplace[abi:ne180100]<std::string const&,std::allocator<turi::fileio_impl::general_fstream_sink>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_223F365E8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_sink>::__shared_ptr_emplace[abi:ne180100]<std::string const&,std::allocator<turi::fileio_impl::general_fstream_sink>,0>(void *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75C958;
  std::allocator<turi::fileio_impl::general_fstream_sink>::construct[abi:ne180100]<turi::fileio_impl::general_fstream_sink,std::string const&>((uint64_t)&v4, (uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_223F36658(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_sink>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C958;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_sink>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C958;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_sink>::__on_zero_shared(uint64_t a1)
{
}

void std::allocator<turi::fileio_impl::general_fstream_sink>::construct[abi:ne180100]<turi::fileio_impl::general_fstream_sink,std::string const&>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  turi::fileio_impl::general_fstream_sink::general_fstream_sink(a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223F36758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::fileio_impl::cache_stream_source::cache_stream_source(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 24) = 0u;
  char v4 = (uint64_t *)(a1 + 24);
  *(_OWORD *)(a1 + 40) = 0u;
  uint64_t instance = turi::fileio::fixed_size_cache_manager::get_instance((turi::fileio::fixed_size_cache_manager *)a1);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v25, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v25 = *(std::string *)a2;
  }
  turi::fileio::fixed_size_cache_manager::get_cache(instance, (std::string::size_type)&v25, v26);
  long long v6 = *(_OWORD *)&v26[0].__locale_;
  v26[0].__locale_ = 0;
  v26[1].__locale_ = 0;
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  if (v7)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    if (v26[1].__locale_) {
      std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v26[1].__locale_);
    }
  }
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
  uint64_t v8 = (void *)*v4;
  if (*(char *)(*v4 + 79) < 0)
  {
    if (v8[8]) {
      goto LABEL_11;
    }
LABEL_19:
    *(void *)a1 = v8[6];
    *(void *)(a1 + 8) = v8[5];
    *(void *)(a1 + 16) = 0;
    return a1;
  }
  if (!*(unsigned char *)(*v4 + 79)) {
    goto LABEL_19;
  }
LABEL_11:
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v9 = (int *)global_logger();
  if (v9[169] <= 2)
  {
    if (cppipc::must_cancel((cppipc *)v9)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    uint64_t v10 = (file_logger *)global_logger();
    started = file_logger::start_stream(v10, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/cache_stream_source.cpp", "cache_stream_source", 27, 1);
    uint64_t v12 = pthread_getspecific(*((void *)started + 74));
    if (v12 && *((unsigned char *)v12 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12 + 2, (uint64_t)"Reading ", 8);
    }
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v24, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string v24 = *(std::string *)a2;
    }
    uint64_t v13 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v24);
    uint64_t v14 = pthread_getspecific(*(void *)(v13 + 592));
    if (v14 && *((unsigned char *)v14 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14 + 2, (uint64_t)" from ", 6);
    }
    uint64_t v15 = *v4;
    if (*(char *)(*v4 + 79) < 0) {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v15 + 56), *(void *)(v15 + 64));
    }
    else {
      std::string __p = *(std::string *)(v15 + 56);
    }
    uint64_t v16 = file_logger::operator<<<std::string>(v13, (uint64_t)&__p);
    long long v17 = pthread_getspecific(*(void *)(v16 + 592));
    if (v17)
    {
      if (*((unsigned char *)v17 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v17 + *(void *)(v17[2] - 24) + 16));
        v18 = std::locale::use_facet(v26, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
        std::locale::~locale(v26);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v16);
        if (*(_DWORD *)(v16 + 600) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
  std::allocate_shared[abi:ne180100]<turi::fileio_impl::general_fstream_source,std::allocator<turi::fileio_impl::general_fstream_source>,std::string const&,void>(*v4 + 56, v26);
  long long v19 = *(_OWORD *)&v26[0].__locale_;
  v26[0].__locale_ = 0;
  v26[1].__locale_ = 0;
  v20 = *(std::__shared_weak_count **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = v19;
  if (v20)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v20);
    if (v26[1].__locale_) {
      std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v26[1].__locale_);
    }
  }
  return a1;
}

void sub_223F36AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  std::locale::~locale((std::locale *)(v29 - 80));
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  v31 = *(std::__shared_weak_count **)(v28 + 48);
  if (v31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
  }
  v32 = *(std::__shared_weak_count **)(v28 + 32);
  if (v32) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v32);
  }
  _Unwind_Resume(a1);
}

size_t turi::fileio_impl::cache_stream_source::read(turi::fileio_impl::cache_stream_source *this, char *__dst, unint64_t a3)
{
  if (*(void *)this)
  {
    uint64_t v4 = *((void *)this + 2);
    if (*((void *)this + 1) - v4 >= a3) {
      size_t v5 = a3;
    }
    else {
      size_t v5 = *((void *)this + 1) - v4;
    }
    memcpy(__dst, (const void *)(*(void *)this + v4), v5);
    *((void *)this + 2) += v5;
    return v5;
  }
  else
  {
    uint64_t v7 = (turi::fileio_impl::general_fstream_source *)*((void *)this + 5);
    return turi::fileio_impl::general_fstream_source::read(v7, __dst, a3);
  }
}

void turi::fileio_impl::cache_stream_source::close(turi::fileio_impl::cache_stream_source *this)
{
  uint64_t v1 = (turi::fileio_impl::general_fstream_source *)*((void *)this + 5);
  if (v1) {
    turi::fileio_impl::general_fstream_source::close(v1);
  }
}

void *turi::fileio_impl::cache_stream_source::seek@<X0>(void *this@<X0>, uint64_t a2@<X2>, const char *a3@<X1>, uint64_t a4@<X8>)
{
  if (*this)
  {
    *(void *)(a4 + 128) = 0;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 112) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    if (a2 == 2)
    {
      a3 = &a3[this[1] - 1];
      *(_OWORD *)a4 = 0uLL;
      *(_OWORD *)(a4 + 16) = 0uLL;
      *(_OWORD *)(a4 + 32) = 0uLL;
      *(_OWORD *)(a4 + 48) = 0uLL;
      *(_OWORD *)(a4 + 64) = 0uLL;
      *(_OWORD *)(a4 + 80) = 0uLL;
      *(_OWORD *)(a4 + 96) = 0uLL;
      *(_OWORD *)(a4 + 112) = 0uLL;
    }
    else if (a2 == 1)
    {
      uint64_t v6 = this[2];
      *(_OWORD *)a4 = 0uLL;
      *(_OWORD *)(a4 + 16) = 0uLL;
      *(_OWORD *)(a4 + 32) = 0uLL;
      *(_OWORD *)(a4 + 48) = 0uLL;
      *(_OWORD *)(a4 + 64) = 0uLL;
      *(_OWORD *)(a4 + 80) = 0uLL;
      *(_OWORD *)(a4 + 96) = 0uLL;
      *(_OWORD *)(a4 + 112) = 0uLL;
      a3 += v6;
    }
    else
    {
      uint64_t v4 = 0;
      if (a2)
      {
LABEL_12:
        if ((uint64_t)v4 < this[1])
        {
          this[2] = v4;
          return this;
        }
LABEL_14:
        turi::fileio_impl::cache_stream_source::seek(long long,std::ios_base::seekdir)::$_0::operator()();
      }
      *(_OWORD *)(a4 + 96) = 0uLL;
      *(_OWORD *)(a4 + 112) = 0uLL;
      *(_OWORD *)(a4 + 64) = 0uLL;
      *(_OWORD *)(a4 + 80) = 0uLL;
      *(_OWORD *)(a4 + 32) = 0uLL;
      *(_OWORD *)(a4 + 48) = 0uLL;
      *(_OWORD *)a4 = 0uLL;
      *(_OWORD *)(a4 + 16) = 0uLL;
    }
    *(void *)(a4 + 128) = a3;
    uint64_t v4 = a3;
    if (((unint64_t)a3 & 0x8000000000000000) != 0) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  size_t v5 = (turi::fileio_impl::general_fstream_source *)this[5];
  return (void *)turi::fileio_impl::general_fstream_source::seek(v5, a3, a2);
}

uint64_t turi::fileio_impl::cache_stream_source::file_size(turi::fileio_impl::cache_stream_source *this)
{
  uint64_t v2 = (turi::neural_net::shared_float_array **)*((void *)this + 5);
  if (v2) {
    return turi::fileio_impl::general_fstream_source::file_size(v2);
  }
  else {
    return *((void *)this + 1);
  }
}

void turi::fileio_impl::cache_stream_source::get_underlying_stream(turi::fileio_impl::cache_stream_source *this@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)this)
  {
    uint64_t v4 = *(void *)(*((void *)this + 3) + 40);
    *(void *)&long long v6 = *(void *)(*((void *)this + 3) + 48);
    uint64_t v7 = v4;
    std::allocate_shared[abi:ne180100]<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>,std::allocator<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>,char *,unsigned long,void>(&v6, &v7, &v8);
    *(_OWORD *)a2 = v8;
  }
  else
  {
    turi::fileio_impl::general_fstream_source::get_underlying_stream(*((void **)this + 5), &v8);
    if ((void)v8)
    {
      uint64_t v5 = *((void *)&v8 + 1);
      *(void *)a2 = v8;
      *(void *)(a2 + 8) = v5;
    }
    else
    {
      std::allocate_shared[abi:ne180100]<turi::general_ifstream,std::allocator<turi::general_ifstream>,std::string const&,void>(*((void *)this + 3) + 56, &v6);
      *(_OWORD *)a2 = v6;
      if (*((void *)&v8 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v8 + 1));
      }
    }
  }
}

void sub_223F36D50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

void *std::allocate_shared[abi:ne180100]<turi::fileio_impl::general_fstream_source,std::allocator<turi::fileio_impl::general_fstream_source>,std::string const&,void>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x50uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_source>::__shared_ptr_emplace[abi:ne180100]<std::string const&,std::allocator<turi::fileio_impl::general_fstream_source>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_223F36DB0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_source>::__shared_ptr_emplace[abi:ne180100]<std::string const&,std::allocator<turi::fileio_impl::general_fstream_source>,0>(void *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75C9A8;
  std::allocator<turi::fileio_impl::general_fstream_source>::construct[abi:ne180100]<turi::fileio_impl::general_fstream_source,std::string const&>((uint64_t)&v4, (uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_223F36E20(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_source>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C9A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_source>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C9A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_source>::__on_zero_shared(uint64_t a1)
{
}

void std::allocator<turi::fileio_impl::general_fstream_source>::construct[abi:ne180100]<turi::fileio_impl::general_fstream_source,std::string const&>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  turi::fileio_impl::general_fstream_source::general_fstream_source(a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223F36F20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::allocate_shared[abi:ne180100]<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>,std::allocator<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>,char *,unsigned long,void>@<X0>(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  long long v6 = operator new(0x148uLL);
  uint64_t result = std::__shared_ptr_emplace<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>::__shared_ptr_emplace[abi:ne180100]<char *,unsigned long,std::allocator<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>,0>(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_223F36F8C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>::__shared_ptr_emplace[abi:ne180100]<char *,unsigned long,std::allocator<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>,0>(void *a1, void *a2, void *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75C9F8;
  boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>::stream<char *,unsigned long>(a1 + 3, a2, a3);
  return a1;
}

void sub_223F36FEC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C9F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C9F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>::stream<char *,unsigned long>(void *a1, void *a2, void *a3)
{
  a1[19] = MEMORY[0x263F8C368] + 16;
  boost::iostreams::detail::stream_base<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,std::istream>::stream_base((uint64_t)a1, (uint64_t *)&off_26D75CA90);
  *a1 = &unk_26D75CA50;
  a1[19] = &unk_26D75CA78;
  uint64_t v6 = *a2 + *a3;
  *(void *)&long long v8 = *a2;
  *((void *)&v8 + 1) = v6;
  boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>::open_impl(a1, &v8);
  return a1;
}

void sub_223F3716C(_Unwind_Exception *a1)
{
  std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](v1);
  _Unwind_Resume(a1);
}

uint64_t boost::iostreams::detail::stream_base<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,std::istream>::stream_base(uint64_t a1, uint64_t *a2)
{
  char v4 = (void *)(a1 + 16);
  std::streambuf::basic_streambuf();
  *(unsigned char *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(unsigned char *)(a1 + 144) = 1;
  *(_DWORD *)(a1 + 80) = 1;
  *(void *)(a1 + 16) = &unk_26D75CBC8;
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v5 - 24)) = a2[3];
  uint64_t v6 = a2[1];
  *(void *)a1 = v6;
  *(void *)(a1 + *(void *)(v6 - 24)) = a2[2];
  *(void *)(a1 + 8) = 0;
  uint64_t v7 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v7, v4);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  uint64_t v8 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v8 - 24)) = a2[3];
  return a1;
}

void sub_223F373C4(_Unwind_Exception *a1)
{
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v1);
  _Unwind_Resume(a1);
}

double boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>::open_impl(void *a1, long long *a2)
{
  uint64_t v3 = (uint64_t)(a1 + 2);
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), 0);
  long long v5 = *a2;
  return boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open_impl(v3, &v5);
}

uint64_t boost::iostreams::detail::stream_base<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,std::istream>::~stream_base(uint64_t a1)
{
  uint64_t v2 = std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](a1 + 152);
  return a1;
}

void boost::iostreams::detail::stream_base<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,std::istream>::~stream_base(uint64_t a1)
{
  uint64_t v2 = std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](a1 + 152);
  JUMPOUT(0x22A614FA0);
}

void virtual thunk to'boost::iostreams::detail::stream_base<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,std::istream>::~stream_base(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  JUMPOUT(0x22A614E30);
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  MEMORY[0x22A614E30](v1 + 152);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>::~stream(uint64_t a1)
{
  uint64_t v2 = std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](a1 + 152);
  return a1;
}

void boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>::~stream(uint64_t a1)
{
  uint64_t v2 = std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](a1 + 152);
  JUMPOUT(0x22A614FA0);
}

void virtual thunk to'boost::iostreams::stream<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>>::~stream(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  JUMPOUT(0x22A614E30);
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::istream::~istream();
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  MEMORY[0x22A614E30](v1 + 152);
  JUMPOUT(0x22A614FA0);
}

void boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(uint64_t a1)
{
  boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(a1);
  JUMPOUT(0x22A614FA0);
}

double boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::seekpos@<D0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::seek_impl(a1, *(void *)(a2 + 128), 0, a3, a4);
}

uint64_t boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::underflow(void *a1)
{
  if (!a1[12])
  {
    boost::iostreams::detail::cant_read(&v4);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v4);
  }
  uint64_t v2 = (unsigned __int8 *)a1[3];
  if (!v2)
  {
    boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::init_get_area((uint64_t)a1);
    uint64_t v2 = (unsigned __int8 *)a1[3];
  }
  if (v2 == (unsigned __int8 *)a1[13]) {
    return 0xFFFFFFFFLL;
  }
  else {
    return *v2;
  }
}

void sub_223F37820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

boost::iostreams::detail *boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::pbackfail(uint64_t a1, boost::iostreams::detail *this)
{
  uint64_t v2 = *(void *)(a1 + 96);
  if (!v2)
  {
    boost::iostreams::detail::cant_read(&v6);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v6);
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3) {
    BOOL v4 = v3 == v2;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    boost::iostreams::detail::bad_putback(&v6);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v6);
  }
  *(void *)(a1 + 24) = v3 - 1;
  if (this == -1) {
    return 0;
  }
  *(unsigned char *)(v3 - 1) = (_BYTE)this;
  return this;
}

void sub_223F378B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

uint64_t boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::overflow(void *a1, uint64_t a2)
{
  if (!a1[14])
  {
    *(void *)&v6.__val_ = 1;
    v6.__cat_ = std::iostream_category();
    std::ios_base::failure::failure(&v7, "no write access", &v6);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v7);
  }
  if (!a1[6]) {
    boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::init_put_area((uint64_t)a1);
  }
  if (a2 == -1) {
    return 0;
  }
  BOOL v4 = (unsigned char *)a1[6];
  if (v4 == (unsigned char *)a1[15])
  {
    *(void *)&v6.__val_ = 1;
    v6.__cat_ = std::iostream_category();
    std::ios_base::failure::failure(&v7, "write area exhausted", &v6);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v7);
  }
  unsigned char *v4 = a2;
  ++a1[6];
  return a2;
}

void sub_223F379A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
}

void *boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::close_impl(void *result, int a2)
{
  if (a2 == 16)
  {
    uint64_t v2 = result + 14;
    if (!result[14]) {
      return result;
    }
    uint64_t v3 = result + 5;
    uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 48))(result);
    goto LABEL_7;
  }
  if (a2 == 8)
  {
    uint64_t v2 = result + 12;
    if (result[12])
    {
      uint64_t v3 = result + 2;
LABEL_7:
      void *v3 = 0;
      v3[1] = 0;
      v3[2] = 0;
      void *v2 = 0;
      v2[1] = 0;
    }
  }
  return result;
}

uint64_t boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::auto_close(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 128);
}

uint64_t boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::set_auto_close(uint64_t result, char a2)
{
  *(unsigned char *)(result + 128) = a2;
  return result;
}

void *boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::component_type()
{
}

uint64_t boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::~direct_streambuf(uint64_t a1)
{
  *(void *)a1 = &unk_26D75CCB0;
  if (*(unsigned char *)(a1 + 88)) {
    *(unsigned char *)(a1 + 88) = 0;
  }
  return std::streambuf::~streambuf();
}

void boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::~direct_streambuf(uint64_t a1)
{
  *(void *)a1 = &unk_26D75CCB0;
  if (*(unsigned char *)(a1 + 88)) {
    *(unsigned char *)(a1 + 88) = 0;
  }
  std::streambuf::~streambuf();
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(uint64_t a1)
{
  *(void *)a1 = &unk_26D75CBC8;
  if ((*(void *)(a1 + 96) || *(void *)(a1 + 112)) && *(unsigned char *)(a1 + 128)) {
    boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::basic_array_source<char>>>>((_DWORD *)a1, 8, (_DWORD *)a1, 16, a1 + 72);
  }
  *(void *)a1 = &unk_26D75CCB0;
  if (*(unsigned char *)(a1 + 88)) {
    *(unsigned char *)(a1 + 88) = 0;
  }
  return std::streambuf::~streambuf();
}

void sub_223F37B88(void *a1)
{
}

uint64_t boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::basic_array_source<char>>>>(_DWORD *a1, int a2, _DWORD *a3, int a4, uint64_t a5)
{
  uint64_t result = boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>>(a1, a2, a3, a4);
  if (*(unsigned char *)(a5 + 16)) {
    *(unsigned char *)(a5 + 16) = 0;
  }
  return result;
}

void sub_223F37BC8(void *a1)
{
  __cxa_begin_catch(a1);
  if (*(unsigned char *)(v1 + 16)) {
    *(unsigned char *)(v1 + 16) = 0;
  }
  __cxa_rethrow();
}

void sub_223F37BE0(_Unwind_Exception *a1)
{
}

double boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::seek_impl@<D0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = a1[12];
  if (!v10)
  {
LABEL_21:
    char v15 = 0;
    uint64_t v16 = -1;
    if ((a4 & 0x10) == 0) {
      goto LABEL_50;
    }
    goto LABEL_36;
  }
  uint64_t v11 = a1[14];
  if (v10 != v11 && (a4 & 0x18) == 24 && v11 != 0)
  {
    boost::iostreams::detail::bad_seek(&v25);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v25);
  }
  if (v11) {
    BOOL v14 = v10 == v11;
  }
  else {
    BOOL v14 = 0;
  }
  char v15 = v14;
  if (v14)
  {
    if (a1[6] || !a1[3]) {
      boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::init_get_area((uint64_t)a1);
    }
  }
  else if ((a4 & 8) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v17 = a1[3];
  if (!v17)
  {
    long long v18 = *((_OWORD *)a1 + 6);
    a1[2] = v18;
    *(_OWORD *)(a1 + 3) = v18;
    uint64_t v17 = v18;
  }
  uint64_t v16 = a2;
  if (a3)
  {
    if (a3 != 1)
    {
      if (a3 != 2)
      {
        uint64_t v16 = 0;
        goto LABEL_34;
      }
      uint64_t v17 = a1[13];
    }
    uint64_t v16 = v17 + a2 - a1[12];
  }
  if (v16 < 0)
  {
LABEL_51:
    boost::iostreams::detail::bad_seek(&v25);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v25);
  }
LABEL_34:
  uint64_t v20 = a1[12];
  uint64_t v19 = a1[13];
  if (v16 > v19 - v20) {
    goto LABEL_51;
  }
  a1[2] = v20;
  a1[3] = v20 + v16;
  a1[4] = v19;
  if ((a4 & 0x10) == 0) {
    goto LABEL_50;
  }
LABEL_36:
  if (v15) {
    goto LABEL_50;
  }
  uint64_t v21 = a1[14];
  if (!v21) {
    goto LABEL_50;
  }
  uint64_t v22 = a1[6];
  if (!v22)
  {
    uint64_t v23 = a1[15];
    a1[5] = v21;
    a1[6] = v21;
    a1[7] = v23;
    uint64_t v22 = v21;
  }
  switch(a3)
  {
    case 0:
      goto LABEL_45;
    case 2:
      a2 = a2 - v21 + a1[15];
LABEL_45:
      uint64_t v16 = a2;
      if (a2 < 0)
      {
LABEL_52:
        boost::iostreams::detail::bad_seek(&v25);
        boost::throw_exception<std::ios_base::failure>((uint64_t)&v25);
      }
      goto LABEL_48;
    case 1:
      a2 = a2 - v21 + v22;
      goto LABEL_45;
  }
  uint64_t v16 = 0;
LABEL_48:
  if (v16 > a1[15] - v21) {
    goto LABEL_52;
  }
  a1[6] = v22 + (int)v16 + (int)v21 - (int)v22;
LABEL_50:
  double result = 0.0;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(void *)(a5 + 128) = v16;
  return result;
}

void sub_223F37DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

std::ios_base::failure *boost::iostreams::detail::bad_seek@<X0>(std::ios_base::failure *a1@<X8>)
{
  *(void *)&v4.__val_ = 1;
  v4.__cat_ = std::iostream_category();
  return std::ios_base::failure::failure(a1, "bad seek", &v4);
}

uint64_t boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::init_get_area(uint64_t result)
{
  long long v1 = *(_OWORD *)(result + 96);
  *(void *)(result + 16) = v1;
  *(_OWORD *)(result + 24) = v1;
  if ((void)v1)
  {
    uint64_t v2 = *(void *)(result + 112);
    if (v2) {
      BOOL v3 = (void)v1 == v2;
    }
    else {
      BOOL v3 = 0;
    }
    if (v3)
    {
      uint64_t v4 = *(void *)(result + 48);
      if (v4)
      {
        *(void *)(result + 24) = v1 + (int)v4 - (int)v1;
        *(void *)(result + 48) = 0;
        *(void *)(result + 56) = 0;
        *(void *)(result + 40) = 0;
      }
    }
  }
  return result;
}

std::ios_base::failure *boost::iostreams::detail::cant_read@<X0>(std::ios_base::failure *a1@<X8>)
{
  *(void *)&v4.__val_ = 1;
  v4.__cat_ = std::iostream_category();
  return std::ios_base::failure::failure(a1, "no read access", &v4);
}

uint64_t boost::iostreams::detail::direct_streambuf<boost::iostreams::basic_array_source<char>,std::char_traits<char>>::init_put_area(uint64_t result)
{
  long long v1 = *(_OWORD *)(result + 112);
  *(void *)(result + 40) = v1;
  *(_OWORD *)(result + 48) = v1;
  uint64_t v2 = *(void *)(result + 96);
  if (v2) {
    BOOL v3 = (void)v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3 && v2 == (void)v1)
  {
    uint64_t v5 = *(void *)(result + 24);
    if (v5)
    {
      *(void *)(result + 48) = v1 + (int)v5 - (int)v1;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = 0;
    }
  }
  return result;
}

double boost::iostreams::stream_buffer<boost::iostreams::basic_array_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open_impl(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 96) || *(void *)(a1 + 112))
  {
    *(void *)&v3.__val_ = 1;
    v3.__cat_ = std::iostream_category();
    std::ios_base::failure::failure(&v4, "already open", &v3);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v4);
  }
  if (*(unsigned char *)(a1 + 88)) {
    *(unsigned char *)(a1 + 88) = 0;
  }
  *(_OWORD *)(a1 + 72) = *a2;
  *(unsigned char *)(a1 + 88) = 1;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a1 + 72);
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_DWORD *)(a1 + 64) &= 0xFFFFFFF9;
  return result;
}

void sub_223F37FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
}

std::string *std::allocate_shared[abi:ne180100]<turi::general_ifstream,std::allocator<turi::general_ifstream>,std::string const&,void>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  std::ios_base::failure v4 = (std::string *)operator new(0x188uLL);
  double result = std::__shared_ptr_emplace<turi::general_ifstream>::__shared_ptr_emplace[abi:ne180100]<std::string &,std::allocator<turi::general_ifstream>,0>(v4, a1);
  *a2 = v4 + 1;
  a2[1] = v4;
  return result;
}

void sub_223F3800C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void turi::download_url(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v31[19] = *MEMORY[0x263EF8340];
  int v4 = *(char *)(a1 + 23);
  uint64_t v5 = *(const std::string::value_type **)a1;
  std::string::size_type v6 = *(void *)(a1 + 8);
  if (v4 >= 0) {
    std::ios_base::failure v7 = (const std::string::value_type *)a1;
  }
  else {
    std::ios_base::failure v7 = *(const std::string::value_type **)a1;
  }
  if (v4 >= 0) {
    uint64_t v8 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v8 = *(void *)(a1 + 8);
  }
  if (v8)
  {
    uint64_t v9 = &v7[v8];
    uint64_t v10 = v8 - 1;
    uint64_t v11 = v7;
    while (1)
    {
      uint64_t v12 = 0;
      while (v11[v12] == asc_22468A6A6[v12])
      {
        uint64_t v13 = v12 + 1;
        if (v10 != v12 && v12++ != 2) {
          continue;
        }
        char v15 = &asc_22468A6A6[v13];
        uint64_t v16 = &v11[v13];
        goto LABEL_16;
      }
      char v15 = &asc_22468A6A6[v12];
      uint64_t v16 = &v11[v12];
LABEL_16:
      if (v15 == "") {
        break;
      }
      ++v11;
      --v10;
      if (v11 == v9) {
        goto LABEL_36;
      }
    }
    if (v11 != v16)
    {
      std::ifstream::basic_ifstream(v29);
      int v17 = *(char *)(a1 + 23);
      uint64_t v18 = *(void *)(a1 + 8);
      if (v17 >= 0) {
        uint64_t v18 = *(unsigned __int8 *)(a1 + 23);
      }
      if (!v18) {
        goto LABEL_32;
      }
      uint64_t v19 = 0;
      if (v17 >= 0) {
        uint64_t v20 = (const std::string::value_type *)a1;
      }
      else {
        uint64_t v20 = *(const std::string::value_type **)a1;
      }
      unint64_t v21 = v18 - 1;
      if (v21 >= 6) {
        unint64_t v21 = 6;
      }
      unint64_t v22 = v21 + 1;
      do
      {
        if (v20[v19] != aFile[v19]) {
          goto LABEL_32;
        }
        ++v19;
      }
      while (v22 != v19);
      if (v19 != 7)
      {
LABEL_32:
        std::string::basic_string[abi:ne180100]<0>(&__p, "");
        turi::get_temp_name((turi::fs_impl *)&__p);
      }
      std::string::basic_string(&v27, (const std::string *)a1, 7uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__p);
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&__p, v27.__r_.__value_.__l.__data_, v27.__r_.__value_.__l.__size_);
      }
      else {
        std::string __p = v27;
      }
      boost::filesystem::detail::status((uint64_t)&__p, 0, &v28);
      int v24 = v28;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v24 == 3)
      {
        *(_DWORD *)a2 = 0;
        *(unsigned char *)(a2 + 4) = 0;
        std::ios_base::failure v25 = (std::string *)(a2 + 8);
        if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
        {
LABEL_48:
          std::string::__init_copy_ctor_external(v25, v27.__r_.__value_.__l.__data_, v27.__r_.__value_.__l.__size_);
          if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v27.__r_.__value_.__l.__data_);
          }
          goto LABEL_35;
        }
      }
      else
      {
        std::ifstream::open();
        if (*(_DWORD *)&v30[*(void *)(v29[0] - 24) + 16])
        {
          if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v27.__r_.__value_.__l.__data_);
          }
          goto LABEL_32;
        }
        *(_DWORD *)a2 = 0;
        *(unsigned char *)(a2 + 4) = 0;
        std::ios_base::failure v25 = (std::string *)(a2 + 8);
        if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_48;
        }
      }
      *std::ios_base::failure v25 = v27;
LABEL_35:
      v29[0] = *MEMORY[0x263F8C2A8];
      *(uint64_t *)((char *)v29 + *(void *)(v29[0] - 24)) = *(void *)(MEMORY[0x263F8C2A8] + 24);
      MEMORY[0x22A614850](v30);
      std::istream::~istream();
      MEMORY[0x22A614E30](v31);
      return;
    }
  }
LABEL_36:
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 0;
  uint64_t v23 = (std::string *)(a2 + 8);
  if (v4 < 0)
  {
    std::string::__init_copy_ctor_external(v23, v5, v6);
  }
  else
  {
    *(_OWORD *)&v23->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    *(void *)(a2 + 24) = *(void *)(a1 + 16);
  }
}

void sub_223F3859C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  if (a34 < 0) {
    operator delete(__p);
  }
  std::ifstream::~ifstream(&a38);
  _Unwind_Resume(a1);
}

void sub_223F38640()
{
}

uint64_t *std::ifstream::basic_ifstream(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x263F8C308] + 64;
  a1[53] = MEMORY[0x263F8C308] + 64;
  std::error_code v3 = a1 + 2;
  uint64_t v4 = *(void *)(MEMORY[0x263F8C2A8] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x263F8C2A8] + 8);
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = v4;
  a1[1] = 0;
  std::string::size_type v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 2);
  uint64_t v7 = MEMORY[0x263F8C308] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *a1 = v7;
  a1[53] = v2;
  MEMORY[0x22A614840](v3);
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  std::ios_base *v6;
  uint64_t v7;

  uint64_t v2 = MEMORY[0x263F8C308] + 64;
  a1[53] = MEMORY[0x263F8C308] + 64;
  std::error_code v3 = a1 + 2;
  uint64_t v4 = *(void *)(MEMORY[0x263F8C2A8] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x263F8C2A8] + 8);
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = v4;
  a1[1] = 0;
  std::string::size_type v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 2);
  uint64_t v7 = MEMORY[0x263F8C308] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *a1 = v7;
  a1[53] = v2;
  MEMORY[0x22A614840](v3);
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

void sub_223F387D4(_Unwind_Exception *a1)
{
  std::istream::~istream();
  MEMORY[0x22A614E30](v1);
  _Unwind_Resume(a1);
}

void turi::get_curl_error_string(turi *this)
{
}

void turi::file_download_cache::~file_download_cache(turi::file_download_cache *this)
{
  turi::file_download_cache::clear(this);
  turi::mutex::~mutex((pthread_mutex_t *)((char *)this + 40));
  std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::~__hash_table((uint64_t)this);
}

void sub_223F3885C(void *a1)
{
  __cxa_begin_catch(a1);
  if (*((int *)global_logger() + 169) <= 5)
  {
    uint64_t v1 = log_stream_dispatch<true>::exec((cppipc *)5, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_download_cache.cpp", "~file_download_cache", 24, 1);
    uint64_t v2 = file_logger::operator<<((pthread_key_t *)v1, "Error clearning file download cache");
    file_logger::operator<<((uint64_t)v2, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
  }
  __cxa_end_catch();
  JUMPOUT(0x223F38834);
}

void turi::file_download_cache::clear(turi::file_download_cache *this)
{
  for (uint64_t i = (long long *)*((void *)this + 2); i; uint64_t i = *(long long **)i)
  {
    std::pair<std::string const,turi::file_download_cache::file_metadata>::pair[abi:ne180100](&v4, i + 1);
    if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&__p, v5.__r_.__value_.__l.__data_, v5.__r_.__value_.__l.__size_);
    }
    else {
      std::string __p = v5;
    }
    turi::delete_temp_file((uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(v6);
    }
    if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v5.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v4.__r_.__value_.__l.__data_);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::clear((uint64_t)this);
}

void sub_223F38988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

void turi::file_download_cache::get_file(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  std::string::size_type v6 = (pthread_mutex_t *)(a1 + 40);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 40));
  if (std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>((void *)a1, (unsigned __int8 *)a2))
  {
    BOOL v14 = (long long *)a2;
    char v7 = std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(a1, (unsigned __int8 *)a2, (uint64_t)&std::piecewise_construct, &v14);
    if ((char)v7[63] < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)a3, *((const std::string::value_type **)v7 + 5), *((void *)v7 + 6));
    }
    else
    {
      long long v8 = *(_OWORD *)(v7 + 40);
      *(void *)(a3 + 16) = *((void *)v7 + 7);
      *(_OWORD *)a3 = v8;
    }
    pthread_mutex_unlock(v6);
  }
  else
  {
    pthread_mutex_unlock(v6);
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(void *)a3 = 0;
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string __p = *(std::string *)a2;
    }
    turi::download_url((uint64_t)&__p, (uint64_t)&v14);
    int v9 = (int)v14;
    int v17 = (int)v14;
    int v10 = BYTE4(v14);
    if (*(char *)(a3 + 23) < 0) {
      operator delete(*(void **)a3);
    }
    *(_OWORD *)a3 = v15;
    *(void *)(a3 + 16) = v16;
    HIBYTE(v16) = 0;
    LOBYTE(v15) = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v9)
    {
      BOOL v14 = (long long *)a2;
      *(void *)&long long v15 = &v17;
      turi::file_download_cache::get_file(std::string const&)::$_0::operator()((uint64_t)&v14);
    }
    if (v10)
    {
      pthread_mutex_lock(v6);
      BOOL v14 = (long long *)a2;
      uint64_t v11 = std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(a1, (unsigned __int8 *)a2, (uint64_t)&std::piecewise_construct, &v14);
      std::string::operator=((std::string *)(v11 + 40), (const std::string *)a3);
      BOOL v14 = (long long *)a2;
      uint64_t v12 = std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(a1, (unsigned __int8 *)a2, (uint64_t)&std::piecewise_construct, &v14);
      MEMORY[0x22A614700](v12 + 64, "");
      pthread_mutex_unlock(v6);
    }
  }
}

void sub_223F38B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

void *turi::file_download_cache::get_instance(turi::file_download_cache *this)
{
  {
    turi::file_download_cache::file_download_cache((turi::file_download_cache *)&turi::file_download_cache::get_instance(void)::cache);
    __cxa_atexit((void (*)(void *))turi::file_download_cache::~file_download_cache, &turi::file_download_cache::get_instance(void)::cache, &dword_223D44000);
  }
  return &turi::file_download_cache::get_instance(void)::cache;
}

void sub_223F38C40(_Unwind_Exception *a1)
{
}

turi::file_download_cache *turi::file_download_cache::file_download_cache(turi::file_download_cache *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  uint64_t v2 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 40), 0);
  assert_msg(v2 == 0, v3, v2);
  return this;
}

void sub_223F38CB4(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string const,turi::file_download_cache::file_metadata>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

std::string *std::pair<std::string const,turi::file_download_cache::file_metadata>::pair[abi:ne180100](std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  if (*((char *)a2 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *((const std::string::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(long long *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v5;
  }
  std::string::size_type v6 = this + 2;
  if (*((char *)a2 + 71) < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)a2 + 6), *((void *)a2 + 7));
  }
  else
  {
    long long v7 = a2[3];
    this[2].__r_.__value_.__r.__words[2] = *((void *)a2 + 8);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  return this;
}

void sub_223F38DD0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__deallocate_node(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__deallocate_node(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      std::error_code v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,turi::file_download_cache::file_metadata>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,turi::file_download_cache::file_metadata>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  long long v8 = (void *)(a1 + 24);
  unint64_t v9 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::__rehash<true>(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *uint64_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  v26[0] = 0;
  ++*v8;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,void *>>>>::reset[abi:ne180100]((uint64_t)v26, 0);
  return i;
}

void sub_223F39170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

double std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  long long v8 = (char *)operator new(0x58uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)long long v8 = 0;
  *((void *)v8 + 1) = a2;
  unint64_t v9 = (std::string *)(v8 + 16);
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    *((void *)v8 + 4) = *((void *)v10 + 2);
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = v11;
  }
  double result = 0.0;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_223F3921C(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,turi::file_download_cache::file_metadata>,0>((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::clear(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    std::__hash_table<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::file_download_cache::file_metadata>>>::__deallocate_node(a1, *(void **)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

pthread_mutex_t *turi::fileio::file_handle_pool::get_instance(turi::fileio::file_handle_pool *this)
{
  {
    turi::fileio::file_handle_pool::file_handle_pool(&turi::fileio::file_handle_pool::get_instance(void)::instance);
    __cxa_atexit((void (*)(void *))turi::fileio::file_handle_pool::~file_handle_pool, &turi::fileio::file_handle_pool::get_instance(void)::instance, &dword_223D44000);
  }
  return &turi::fileio::file_handle_pool::get_instance(void)::instance;
}

void sub_223F39368(_Unwind_Exception *a1)
{
}

pthread_mutex_t *turi::fileio::file_handle_pool::file_handle_pool(pthread_mutex_t *this)
{
  uint64_t v2 = pthread_mutex_init(this, 0);
  assert_msg(v2 == 0, v3, v2);
  *(void *)&this[1].__opaque[16] = 0;
  *(void *)&this[1].__opaque[8] = 0;
  this[1].__sig = 0;
  *(void *)this[1].__opaque = (char *)this + 80;
  return this;
}

void turi::fileio::file_handle_pool::~file_handle_pool(turi::fileio::file_handle_pool *this)
{
  std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::destroy((uint64_t)this + 72, *((void **)this + 10));
  turi::mutex::~mutex((pthread_mutex_t *)this);
}

uint64_t turi::fileio::file_handle_pool::register_file@<X0>(uint64_t a1@<X0>, std::string *a2@<X1>, uint64_t *a3@<X8>)
{
  pthread_mutex_lock((pthread_mutex_t *)a1);
  turi::fileio::file_handle_pool::get_file_handle(a1, (const void **)&a2->__r_.__value_.__l.__data_, a3);
  std::string::size_type v6 = (int *)global_logger();
  if (v6[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v6)) {
      goto LABEL_65;
    }
    uint64_t v7 = (file_logger *)global_logger();
    started = file_logger::start_stream(v7, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_handle_pool.cpp", "register_file", 27, 1);
    unint64_t v9 = pthread_getspecific(*((void *)started + 74));
    if (v9 && *((unsigned char *)v9 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9 + 2, (uint64_t)"register_file_handle for file ", 30);
    }
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v48, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }
    else {
      std::string v48 = *a2;
    }
    turi::sanitize_url((__n128 *)&v48, &v49);
    uint64_t v10 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v49);
    long long v11 = pthread_getspecific(*(void *)(v10 + 592));
    if (v11)
    {
      if (*((unsigned char *)v11 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(v11[2] - 24) + 16));
        uint8x8_t v12 = std::locale::use_facet(&v43, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
        std::locale::~locale(&v43);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v10);
        if (*(_DWORD *)(v10 + 600) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (v50 < 0) {
      operator delete((void *)v49.n128_u64[0]);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
  }
  if (*a3) {
    goto LABEL_52;
  }
  unint64_t v13 = (int *)global_logger();
  if (v13[169] <= 1)
  {
    if (!cppipc::must_cancel((cppipc *)v13))
    {
      uint64_t v14 = (file_logger *)global_logger();
      long long v15 = file_logger::start_stream(v14, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_handle_pool.cpp", "register_file", 31, 1);
      unint64_t v16 = pthread_getspecific(*((void *)v15 + 74));
      if (v16 && *((unsigned char *)v16 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16 + 2, (uint64_t)"register_file_handle for file ", 30);
      }
      if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v45, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
      }
      else {
        std::string v45 = *a2;
      }
      turi::sanitize_url((__n128 *)&v45, &__p);
      uint64_t v17 = file_logger::operator<<<std::string>((uint64_t)v15, (uint64_t)&__p);
      float v18 = pthread_getspecific(*(void *)(v17 + 592));
      if (v18)
      {
        if (*((unsigned char *)v18 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(v18[2] - 24) + 16));
          BOOL v19 = std::locale::use_facet(&v43, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v19->__vftable[2].~facet_0)(v19, 10);
          std::locale::~locale(&v43);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v17);
          if (*(_DWORD *)(v17 + 600) == 7)
          {
            __print_back_trace();
            v41 = __cxa_allocate_exception(8uLL);
            void *v41 = "LOG_FATAL encountered";
            __cxa_throw(v41, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      if (v47 < 0) {
        operator delete((void *)__p.n128_u64[0]);
      }
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v45.__r_.__value_.__l.__data_);
      }
      goto LABEL_32;
    }
LABEL_65:
    log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
  }
LABEL_32:
  std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  int v21 = (char)size;
  if ((size & 0x80u) != 0) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  if (size)
  {
    if (v21 >= 0) {
      size_t v22 = a2;
    }
    else {
      size_t v22 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    unint64_t v23 = size - 1;
    uint64_t v24 = 7;
    if (v23 < 7) {
      uint64_t v24 = v23;
    }
    uint64_t v25 = v24 + 1;
    v26 = "cache://";
    while (v22->__r_.__value_.__s.__data_[0] == *(unsigned __int8 *)v26)
    {
      size_t v22 = (std::string *)((char *)v22 + 1);
      ++v26;
      if (!--v25)
      {
        BOOL v27 = v23 > 6;
        goto LABEL_45;
      }
    }
  }
  BOOL v27 = 0;
LABEL_45:
  BOOL v42 = v27;
  std::allocate_shared[abi:ne180100]<turi::fileio::file_ownership_handle,std::allocator<turi::fileio::file_ownership_handle>,std::string const&,BOOL,void>(a2, (std::string::value_type *)&v42, &v43);
  locale = v43.__locale_;
  uint64_t v28 = v44;
  v43.__locale_ = 0;
  v44 = 0;
  uint64_t v30 = (std::__shared_weak_count *)a3[1];
  *a3 = (uint64_t)locale;
  a3[1] = (uint64_t)v28;
  if (v30)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v30);
    if (v44) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v44);
    }
  }
  v43.__locale_ = (std::locale::__imp *)a2;
  v31 = std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)(a1 + 72), (const void **)&a2->__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (long long **)&v43);
  if (v28) {
    atomic_fetch_add_explicit(&v28->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  v32 = (std::__shared_weak_count *)v31[8];
  v31[7] = (uint64_t)locale;
  v31[8] = (uint64_t)v28;
  if (v32) {
    std::__shared_weak_count::__release_weak(v32);
  }
LABEL_52:
  uint64_t v33 = *(void *)(a1 + 64) + 1;
  *(void *)(a1 + 64) = v33;
  if ((v33 & 0x3FFF) == 0)
  {
    v34 = *(uint64_t **)(a1 + 72);
    if (v34 != (uint64_t *)(a1 + 80))
    {
      do
      {
        uint64_t v35 = v34[8];
        if (!v35 || *(void *)(v35 + 8) == -1)
        {
          v37 = std::__tree<std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>,std::__map_value_compare<std::string,std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>>>::__remove_node_pointer((uint64_t **)(a1 + 72), v34);
          std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::weak_ptr<turi::fileio::file_ownership_handle>>,0>((uint64_t)(v34 + 4));
          operator delete(v34);
        }
        else
        {
          v36 = (uint64_t *)v34[1];
          if (v36)
          {
            do
            {
              v37 = v36;
              v36 = (uint64_t *)*v36;
            }
            while (v36);
          }
          else
          {
            do
            {
              v37 = (uint64_t *)v34[2];
              BOOL v38 = *v37 == (void)v34;
              v34 = v37;
            }
            while (!v38);
          }
        }
        v34 = v37;
      }
      while (v37 != (uint64_t *)(a1 + 80));
    }
  }
  return pthread_mutex_unlock((pthread_mutex_t *)a1);
}

void sub_223F3994C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::locale a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  std::locale::~locale(&a11);
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  uint64_t v33 = *(std::__shared_weak_count **)(v31 + 8);
  if (v33) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v33);
  }
  pthread_mutex_unlock(v30);
  _Unwind_Resume(a1);
}

uint64_t turi::fileio::file_handle_pool::get_file_handle@<X0>(uint64_t a1@<X0>, const void **a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  std::string::size_type v6 = (uint64_t **)(a1 + 72);
  uint64_t result = std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::find<std::string>(a1 + 72, a2);
  if (a1 + 80 != result)
  {
    long long v11 = a2;
    long long v8 = std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v6, a2, (uint64_t)&std::piecewise_construct, (long long **)&v11);
    unint64_t v9 = (std::__shared_weak_count *)v8[8];
    if (v9 && (uint64_t result = (uint64_t)std::__shared_weak_count::lock(v9)) != 0)
    {
      uint64_t v10 = v8[7];
      *a3 = v10;
      a3[1] = result;
      if (v10) {
        return result;
      }
    }
    else
    {
      *a3 = 0;
      a3[1] = 0;
    }
    return std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::__erase_unique<std::string>(v6, a2);
  }
  return result;
}

void sub_223F39AB4(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL turi::fileio::file_handle_pool::mark_file_for_delete(pthread_mutex_t *a1, uint64_t a2)
{
  unint64_t v4 = (int *)global_logger();
  if (v4[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v4)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    long long v5 = (file_logger *)global_logger();
    started = file_logger::start_stream(v5, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_handle_pool.cpp", "mark_file_for_delete", 62, 1);
    uint64_t v7 = pthread_getspecific(*((void *)started + 74));
    if (v7 && *((unsigned char *)v7 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7 + 2, (uint64_t)"Function entry", 14);
    }
    long long v8 = pthread_getspecific(*((void *)started + 74));
    if (v8)
    {
      if (*((unsigned char *)v8 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(v8[2] - 24) + 16));
        unint64_t v9 = std::locale::use_facet(&v23, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v9->__vftable[2].~facet_0)(v9, 10);
        std::locale::~locale(&v23);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush(started);
        if (*((_DWORD *)started + 150) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
  }
  pthread_mutex_lock(a1);
  turi::fileio::file_handle_pool::get_file_handle((uint64_t)a1, (const void **)a2, (uint64_t *)&v23);
  locale = v23.__locale_;
  if (v23.__locale_)
  {
    long long v11 = (int *)global_logger();
    if (v11[169] <= 1)
    {
      if (cppipc::must_cancel((cppipc *)v11)) {
        log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
      }
      uint8x8_t v12 = (file_logger *)global_logger();
      unint64_t v13 = file_logger::start_stream(v12, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_handle_pool.cpp", "mark_file_for_delete", 73, 1);
      uint64_t v14 = pthread_getspecific(*((void *)v13 + 74));
      if (v14 && *((unsigned char *)v14 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14 + 2, (uint64_t)"mark file ", 10);
      }
      if (*(char *)(a2 + 23) < 0) {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
      }
      else {
        std::string __p = *(std::string *)a2;
      }
      uint64_t v15 = file_logger::operator<<<std::string>((uint64_t)v13, (uint64_t)&__p);
      unint64_t v16 = pthread_getspecific(*(void *)(v15 + 592));
      if (v16 && *((unsigned char *)v16 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16 + 2, (uint64_t)" for deletion ", 14);
      }
      uint64_t v17 = pthread_getspecific(*(void *)(v15 + 592));
      if (v17)
      {
        if (*((unsigned char *)v17 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v17 + *(void *)(v17[2] - 24) + 16));
          float v18 = std::locale::use_facet(&v25, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
          std::locale::~locale(&v25);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v15);
          if (*(_DWORD *)(v15 + 600) == 7)
          {
            __print_back_trace();
            int v21 = __cxa_allocate_exception(8uLL);
            *int v21 = "LOG_FATAL encountered";
            __cxa_throw(v21, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    *((unsigned char *)locale + 24) = 1;
  }
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  pthread_mutex_unlock(a1);
  return locale != 0;
}

void sub_223F39E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, std::__shared_weak_count *a16, std::locale a17)
{
  std::locale::~locale(&a17);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  pthread_mutex_unlock(v17);
  _Unwind_Resume(a1);
}

BOOL turi::fileio::file_handle_pool::unmark_file_for_delete(pthread_mutex_t *a1, uint64_t a2)
{
  unint64_t v4 = (int *)global_logger();
  if (v4[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v4)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    long long v5 = (file_logger *)global_logger();
    started = file_logger::start_stream(v5, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_handle_pool.cpp", "unmark_file_for_delete", 81, 1);
    uint64_t v7 = pthread_getspecific(*((void *)started + 74));
    if (v7 && *((unsigned char *)v7 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7 + 2, (uint64_t)"Function entry", 14);
    }
    long long v8 = pthread_getspecific(*((void *)started + 74));
    if (v8)
    {
      if (*((unsigned char *)v8 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(v8[2] - 24) + 16));
        unint64_t v9 = std::locale::use_facet(&v23, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v9->__vftable[2].~facet_0)(v9, 10);
        std::locale::~locale(&v23);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush(started);
        if (*((_DWORD *)started + 150) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
  }
  pthread_mutex_lock(a1);
  turi::fileio::file_handle_pool::get_file_handle((uint64_t)a1, (const void **)a2, (uint64_t *)&v23);
  locale = v23.__locale_;
  if (v23.__locale_)
  {
    long long v11 = (int *)global_logger();
    if (v11[169] <= 1)
    {
      if (cppipc::must_cancel((cppipc *)v11)) {
        log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
      }
      uint8x8_t v12 = (file_logger *)global_logger();
      unint64_t v13 = file_logger::start_stream(v12, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_handle_pool.cpp", "unmark_file_for_delete", 92, 1);
      uint64_t v14 = pthread_getspecific(*((void *)v13 + 74));
      if (v14 && *((unsigned char *)v14 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14 + 2, (uint64_t)"unmark file ", 12);
      }
      if (*(char *)(a2 + 23) < 0) {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
      }
      else {
        std::string __p = *(std::string *)a2;
      }
      uint64_t v15 = file_logger::operator<<<std::string>((uint64_t)v13, (uint64_t)&__p);
      unint64_t v16 = pthread_getspecific(*(void *)(v15 + 592));
      if (v16 && *((unsigned char *)v16 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16 + 2, (uint64_t)" for deletion ", 14);
      }
      uint64_t v17 = pthread_getspecific(*(void *)(v15 + 592));
      if (v17)
      {
        if (*((unsigned char *)v17 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v17 + *(void *)(v17[2] - 24) + 16));
          float v18 = std::locale::use_facet(&v25, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
          std::locale::~locale(&v25);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v15);
          if (*(_DWORD *)(v15 + 600) == 7)
          {
            __print_back_trace();
            int v21 = __cxa_allocate_exception(8uLL);
            *int v21 = "LOG_FATAL encountered";
            __cxa_throw(v21, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    *((unsigned char *)locale + 24) = 0;
  }
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  pthread_mutex_unlock(a1);
  return locale != 0;
}

void sub_223F3A210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, std::__shared_weak_count *a16, std::locale a17)
{
  std::locale::~locale(&a17);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  pthread_mutex_unlock(v17);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::weak_ptr<turi::fileio::file_ownership_handle>>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::weak_ptr<turi::fileio::file_ownership_handle>>,0>(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    std::error_code v3 = *(void **)a1;
    operator delete(v3);
  }
}

std::string *std::allocate_shared[abi:ne180100]<turi::fileio::file_ownership_handle,std::allocator<turi::fileio::file_ownership_handle>,std::string const&,BOOL,void>@<X0>(std::string *a1@<X1>, std::string::value_type *a2@<X2>, void *a3@<X8>)
{
  std::string::size_type v6 = (std::string *)operator new(0x38uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::fileio::file_ownership_handle>::__shared_ptr_emplace[abi:ne180100]<std::string const&,BOOL,std::allocator<turi::fileio::file_ownership_handle>,0>(v6, a1, a2);
  *a3 = v6 + 1;
  a3[1] = v6;
  return result;
}

void sub_223F3A378(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

std::string *std::__shared_ptr_emplace<turi::fileio::file_ownership_handle>::__shared_ptr_emplace[abi:ne180100]<std::string const&,BOOL,std::allocator<turi::fileio::file_ownership_handle>,0>(std::string *a1, std::string *__str, std::string::value_type *a3)
{
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D75CE50;
  std::allocator<turi::fileio::file_ownership_handle>::construct[abi:ne180100]<turi::fileio::file_ownership_handle,std::string const&,BOOL>((int)&v5, a1 + 1, __str, a3);
  return a1;
}

void sub_223F3A3EC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::fileio::file_ownership_handle>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75CE50;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::fileio::file_ownership_handle>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75CE50;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::fileio::file_ownership_handle>::__on_zero_shared(std::string *a1)
{
}

std::string *std::allocator<turi::fileio::file_ownership_handle>::construct[abi:ne180100]<turi::fileio::file_ownership_handle,std::string const&,BOOL>(int a1, std::string *this, std::string *__str, std::string::value_type *a4)
{
  std::string::value_type v5 = *a4;
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  LOWORD(this[1].__r_.__value_.__l.__data_) = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = std::string::operator=(this, __str);
  this[1].__r_.__value_.__s.__data_[0] = v5;
  this[1].__r_.__value_.__s.__data_[1] = 0;
  return result;
}

void sub_223F3A4C4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void turi::fileio::file_ownership_handle::~file_ownership_handle(std::string *this)
{
  if (!this[1].__r_.__value_.__s.__data_[0]) {
    goto LABEL_35;
  }
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    if (!this->__r_.__value_.__l.__size_) {
      goto LABEL_35;
    }
LABEL_6:
    if (this[1].__r_.__value_.__s.__data_[1])
    {
      uint64_t v2 = (int *)global_logger();
      if (v2[169] > 1)
      {
LABEL_27:
        turi::fileio::delete_path_recursive((uint64_t)this);
        goto LABEL_35;
      }
      if (!cppipc::must_cancel((cppipc *)v2))
      {
        std::error_code v3 = (file_logger *)global_logger();
        started = file_logger::start_stream(v3, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_ownership_handle.hpp", "~file_ownership_handle", 66, 1);
        std::string::value_type v5 = pthread_getspecific(*((void *)started + 74));
        if (v5 && *((unsigned char *)v5 + 280)) {
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5 + 2, (uint64_t)"deleting directory ", 19);
        }
        if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
          std::string::__init_copy_ctor_external(&v19, this->__r_.__value_.__l.__data_, this->__r_.__value_.__l.__size_);
        }
        else {
          std::string v19 = *this;
        }
        uint64_t v10 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v19);
        long long v11 = pthread_getspecific(*(void *)(v10 + 592));
        if (v11)
        {
          if (*((unsigned char *)v11 + 280))
          {
            std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(v11[2] - 24) + 16));
            uint8x8_t v12 = std::locale::use_facet(&v20, MEMORY[0x263F8C108]);
            ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
            std::locale::~locale(&v20);
            std::ostream::put();
            std::ostream::flush();
            file_logger::stream_flush((file_logger *)v10);
            if (*(_DWORD *)(v10 + 600) == 7)
            {
              __print_back_trace();
              exception = __cxa_allocate_exception(8uLL);
              void *exception = "LOG_FATAL encountered";
              __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
            }
          }
        }
        if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v19.__r_.__value_.__l.__data_);
        }
        goto LABEL_27;
      }
LABEL_38:
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    std::string::size_type v6 = (int *)global_logger();
    if (v6[169] <= 1)
    {
      if (cppipc::must_cancel((cppipc *)v6)) {
        goto LABEL_38;
      }
      uint64_t v7 = (file_logger *)global_logger();
      long long v8 = file_logger::start_stream(v7, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_ownership_handle.hpp", "~file_ownership_handle", 69, 1);
      unint64_t v9 = pthread_getspecific(*((void *)v8 + 74));
      if (v9 && *((unsigned char *)v9 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9 + 2, (uint64_t)"deleting file ", 14);
      }
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v18, this->__r_.__value_.__l.__data_, this->__r_.__value_.__l.__size_);
      }
      else {
        std::string v18 = *this;
      }
      uint64_t v13 = file_logger::operator<<<std::string>((uint64_t)v8, (uint64_t)&v18);
      uint64_t v14 = pthread_getspecific(*(void *)(v13 + 592));
      if (v14)
      {
        if (*((unsigned char *)v14 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v14 + *(void *)(v14[2] - 24) + 16));
          uint64_t v15 = std::locale::use_facet(&v20, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v15->__vftable[2].~facet_0)(v15, 10);
          std::locale::~locale(&v20);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v13);
          if (*(_DWORD *)(v13 + 600) == 7)
          {
            __print_back_trace();
            uint64_t v17 = __cxa_allocate_exception(8uLL);
            *uint64_t v17 = "LOG_FATAL encountered";
            __cxa_throw(v17, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v18.__r_.__value_.__l.__data_);
      }
    }
    turi::fileio::delete_path_impl((uint64_t)this, 3);
    goto LABEL_35;
  }
  if (*((unsigned char *)&this->__r_.__value_.__s + 23)) {
    goto LABEL_6;
  }
LABEL_35:
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    operator delete(this->__r_.__value_.__l.__data_);
  }
}

void sub_223F3A874(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  std::locale::~locale((std::locale *)(v25 - 40));
  if (a17 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  if (*((int *)global_logger() + 169) <= 6)
  {
    BOOL v27 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/file_ownership_handle.hpp", "~file_ownership_handle", 74, 1);
    uint64_t v28 = file_logger::operator<<((pthread_key_t *)v27, "Exception on attempted deletion of ");
    if (*((char *)v24 + 23) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)&a9, *(const std::string::value_type **)v24, *((void *)v24 + 1));
    }
    else
    {
      a9 = *v24;
      a10 = *((void *)v24 + 2);
    }
    uint64_t v29 = file_logger::operator<<<std::string>((uint64_t)v28, (uint64_t)&a9);
    file_logger::operator<<(v29, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    if (SHIBYTE(a10) < 0) {
      operator delete((void *)a9);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x223F3A7E8);
}

uint64_t *std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  std::string::size_type v6 = (uint64_t **)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__find_equal<std::string>((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    long long v8 = v6;
    std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

void std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  std::string::size_type v6 = operator new(0x48uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v7 = (std::string *)(v6 + 4);
  long long v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_223F3AA98(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::weak_ptr<turi::fileio::file_ownership_handle>>,0>((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t std::__tree<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::weak_ptr<turi::fileio::file_ownership_handle>>>>::__erase_unique<std::string>(uint64_t **a1, const void **a2)
{
  std::error_code v3 = (uint64_t *)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::find<std::string>((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  unint64_t v4 = v3;
  std::__tree<std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>,std::__map_value_compare<std::string,std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,boost::variant<boost::detail::variant::recursive_flag<turi::flexible_type>,std::shared_ptr<turi::unity_sgraph_base>,turi::dataframe_t,std::shared_ptr<turi::model_base>,std::shared_ptr<turi::unity_sframe_base>,std::shared_ptr<turi::unity_sarray_base>,std::map<std::string,boost::recursive_variant_>,std::vector<boost::recursive_variant_>,boost::recursive_wrapper<turi::function_closure_info>>>>>::__remove_node_pointer(a1, v3);
  std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::weak_ptr<turi::fileio::file_ownership_handle>>,0>((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

void *turi::fileio::get_cache_prefix@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "cache://");
}

void *turi::fileio::get_temp_cache_prefix@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "cache://tmp/");
}

void turi::fileio::check_cache_file_location(std::string *a1)
{
  __dst[3] = *MEMORY[0x263EF8340];
  MEMORY[0x22A614D20](v2);
  LODWORD(v3.__locale_) = 0x4000;
  std::locale::locale(v4, v2);
  boost::algorithm::trim_if<std::string,boost::algorithm::detail::is_classifiedF>(a1, &v3);
  std::locale::~locale(v4);
  std::locale::~locale(v2);
  v3.__locale_ = 0;
  v4[0].__locale_ = 0;
  v4[1].__locale_ = 0;
  v2[0].__locale_ = (std::locale::__imp *)":";
  v2[1].__locale_ = (std::locale::__imp *)"";
  boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<boost::iterator_range<char const*>>(__dst, (uint64_t)v2);
  boost::algorithm::split<std::vector<std::string>,std::string,boost::algorithm::detail::is_any_ofF<char>>((uint64_t)&v3, (uint64_t)a1, __dst, 1);
}

void sub_223F3AEAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,std::locale a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v30 & 1) == 0)
    {
LABEL_8:
      if (a28 < 0) {
        operator delete(a23.__locale_);
      }
      std::string __p = &a29;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
      _Unwind_Resume(a1);
    }
  }
  else if (!v30)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v29);
  goto LABEL_8;
}

void turi::fileio::get_cache_file_locations(std::string *a1@<X8>)
{
  if (byte_268089EC7 < 0)
  {
    std::string::__init_copy_ctor_external(a1, (const std::string::value_type *)turi::fileio::CACHE_FILE_LOCATIONS, *((std::string::size_type *)&turi::fileio::CACHE_FILE_LOCATIONS + 1));
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = turi::fileio::CACHE_FILE_LOCATIONS;
    a1->__r_.__value_.__r.__words[2] = unk_268089EC0;
  }
}

std::string *turi::fileio::set_cache_file_locations(std::string *__str)
{
  return std::string::operator=((std::string *)&turi::fileio::CACHE_FILE_LOCATIONS, __str);
}

BOOL turi::fileio::set_max_remote_fs_cache_entries(uint64_t this)
{
  if ((this & 0x8000000000000000) == 0)
  {
    uint64_t instance = turi::block_cache::get_instance((turi::block_cache *)this);
    boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::set_next(instance, this);
  }
  return this >= 0;
}

void boost::algorithm::split<std::vector<std::string>,std::string,boost::algorithm::detail::is_any_ofF<char>>(uint64_t a1, uint64_t a2, void *__src, int a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  size_t v7 = __src[2];
  size_t __n = v7;
  __srca[0] = 0;
  if (v7 < 0x11)
  {
    memcpy(__srca, __src, v7);
    size_t v13 = __n;
    v12[0] = 0;
    if (__n < 0x11)
    {
      memcpy(v12, __srca, __n);
      __dst[2] = v13;
      __dst[0] = 0;
      if (v13 <= 0x10)
      {
        memcpy(__dst, v12, v13);
        int v11 = a4;
        boost::algorithm::iter_split<std::vector<std::string>,std::string,boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(a1, a2, (uint64_t)__dst);
      }
      operator new[]();
    }
    operator new[]();
  }
  operator new[]();
}

void sub_223F3B240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a17) {
    MEMORY[0x22A614F80](a17, 0x1000C8077774924);
  }
  if (v17 >= 0x11)
  {
    if (a10) {
      MEMORY[0x22A614F80](a10, 0x1000C8077774924);
    }
  }
  _Unwind_Resume(exception_object);
}

void boost::algorithm::trim_if<std::string,boost::algorithm::detail::is_classifiedF>(std::string *a1, std::locale *a2)
{
  unint64_t v4 = a2 + 1;
  LODWORD(v16.__locale_) = a2->__locale_;
  std::locale::locale(&v17, a2 + 1);
  boost::algorithm::trim_right_if<std::string,boost::algorithm::detail::is_classifiedF>(a1, &v16);
  std::locale::~locale(&v17);
  int locale = (int)a2->__locale_;
  std::locale::locale(&v15, v4);
  int v5 = SHIBYTE(a1->__r_.__value_.__r.__words[2]);
  if (v5 >= 0) {
    std::string::size_type v6 = a1;
  }
  else {
    std::string::size_type v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
  }
  if (v5 >= 0) {
    std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
  }
  int v18 = locale;
  std::locale::locale(&v19, &v15);
  if (size)
  {
    long long v8 = (unsigned __int8 *)v6 + size;
    long long v9 = (std::locale::id *)MEMORY[0x263F8C108];
    uint64_t v10 = v6;
    while (1)
    {
      uint64_t v11 = v10->__r_.__value_.__s.__data_[0];
      uint8x8_t v12 = std::locale::use_facet(&v19, v9);
      if ((v11 & 0x80) != 0 || (*((_DWORD *)&v12[1].~facet + v11) & v18) == 0) {
        break;
      }
      uint64_t v10 = (std::string *)((char *)v10 + 1);
      if (!--size)
      {
        uint64_t v10 = (std::string *)v8;
        break;
      }
    }
  }
  else
  {
    uint64_t v10 = v6;
  }
  if ((a1->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = (std::string::size_type)a1;
  }
  else {
    std::string::size_type v13 = a1->__r_.__value_.__r.__words[0];
  }
  std::string::erase(a1, (std::string::size_type)v6 - v13, (char *)v10 - (char *)v6);
  std::locale::~locale(&v19);
  std::locale::~locale(&v15);
}

void sub_223F3B404(_Unwind_Exception *a1)
{
  std::locale::~locale(v2);
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

void boost::algorithm::iter_split<std::vector<std::string>,std::string,boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  int v4 = *(char *)(a2 + 23);
  BOOL v5 = v4 < 0;
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *(void *)a2;
  }
  uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  if (v5) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  uint64_t v8 = v6 + v7;
  size_t v9 = *(void *)(a3 + 16);
  v11[2] = v9;
  v11[0] = 0;
  if (v9 < 0x11)
  {
    memcpy(v11, (const void *)a3, v9);
    int v12 = *(_DWORD *)(a3 + 24);
    boost::algorithm::split_iterator<std::__wrap_iter<char *>>::split_iterator<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(v10, v6, v8, (uint64_t)v11);
  }
  operator new[]();
}

void sub_223F3B5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  boost::function0<void>::~function0(&a9);
  boost::function0<void>::~function0(&a19);
  boost::function0<void>::~function0(&a42);
  boost::function0<void>::~function0((uint64_t *)(v42 - 176));
  _Unwind_Resume(a1);
}

uint64_t boost::algorithm::split_iterator<std::__wrap_iter<char *>>::split_iterator(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = 0;
  uint64_t v4 = *a2;
  if (*a2)
  {
    *(void *)a1 = v4;
    if (v4)
    {
      long long v5 = *(_OWORD *)(a2 + 1);
      *(void *)(a1 + 24) = a2[3];
      *(_OWORD *)(a1 + 8) = v5;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(a2 + 1, a1 + 8, 0);
    }
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  return a1;
}

void boost::algorithm::split_iterator<std::__wrap_iter<char *>>::split_iterator<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  size_t v6 = *(void *)(a4 + 16);
  v7[2] = v6;
  v7[0] = 0;
  if (v6 < 0x11)
  {
    memcpy(v7, (const void *)a4, v6);
    int v8 = *(_DWORD *)(a4 + 24);
    boost::algorithm::detail::find_iterator_base<std::__wrap_iter<char *>>::find_iterator_base<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(a1, (uint64_t)v7);
  }
  operator new[]();
}

void sub_223F3B81C(_Unwind_Exception *a1)
{
  boost::function0<void>::~function0(v1);
  _Unwind_Resume(a1);
}

void boost::algorithm::detail::find_iterator_base<std::__wrap_iter<char *>>::find_iterator_base<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  size_t v4 = *(void *)(a2 + 16);
  v5[2] = v4;
  v5[0] = 0;
  if (v4 < 0x11)
  {
    memcpy(v5, (const void *)a2, v4);
    int v6 = *(_DWORD *)(a2 + 24);
    boost::function2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::function2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(a1, (uint64_t)v5);
  }
  operator new[]();
}

void sub_223F3B94C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a12 >= 0x11) {
    boost::algorithm::detail::find_iterator_base<std::__wrap_iter<char *>>::find_iterator_base<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(&a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t boost::algorithm::split_iterator<std::__wrap_iter<char *>>::increment(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  if (*(void *)a1)
  {
    uint64_t result = boost::function2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::operator()((void *)a1);
    uint64_t v2 = *(void *)(a1 + 56);
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t result = v4;
  }
  BOOL v5 = result == v2 && v4 == v2;
  if (v5 && *(void *)(a1 + 40) == v2) {
    *(unsigned char *)(a1 + 64) = 1;
  }
  *(void *)(a1 + 32) = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = result;
  *(void *)(a1 + 48) = v4;
  return result;
}

void boost::function2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::function2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  *a1 = 0;
  size_t v4 = *(void *)(a2 + 16);
  v5[2] = v4;
  v5[0] = 0;
  if (v4 < 0x11)
  {
    memcpy(v5, (const void *)a2, v4);
    int v6 = *(_DWORD *)(a2 + 24);
    boost::function2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>((uint64_t)a1, (uint64_t)v5);
  }
  operator new[]();
}

void sub_223F3BAD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a12 >= 0x11) {
    boost::algorithm::detail::find_iterator_base<std::__wrap_iter<char *>>::find_iterator_base<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(&a10);
  }
  _Unwind_Resume(exception_object);
}

void boost::function2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  size_t v3 = *(void *)(a2 + 16);
  std::locale v4[2] = v3;
  v4[0] = 0;
  if (v3 < 0x11)
  {
    memcpy(v4, (const void *)a2, v3);
    int v5 = *(_DWORD *)(a2 + 24);
    boost::detail::function::basic_vtable2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>((uint64_t)boost::function2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>)::stored_vtable, (uint64_t)v4);
  }
  operator new[]();
}

void sub_223F3BBFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a12 >= 0x11) {
    boost::algorithm::detail::find_iterator_base<std::__wrap_iter<char *>>::find_iterator_base<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(&a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

char *boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>,boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::invoke(uint64_t *a1, char *a2, char *a3)
{
  return boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>::operator()<std::__wrap_iter<char *>>(*a1, a2, a3);
}

void boost::detail::function::basic_vtable2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  size_t v4 = *(void *)(a2 + 16);
  v5[2] = v4;
  v5[0] = 0;
  if (v4 < 0x11)
  {
    memcpy(v5, (const void *)a2, v4);
    int v6 = *(_DWORD *)(a2 + 24);
    boost::detail::function::basic_vtable2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(a1, (uint64_t)v5);
  }
  operator new[]();
}

{
  size_t v3;
  void v4[3];
  int v5;
  uint64_t v6;

  int v6 = *MEMORY[0x263EF8340];
  size_t v3 = *(void *)(a2 + 16);
  std::locale v4[2] = v3;
  v4[0] = 0;
  if (v3 < 0x11)
  {
    memcpy(v4, (const void *)a2, v3);
    int v5 = *(_DWORD *)(a2 + 24);
    boost::detail::function::basic_vtable2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::assign_functor<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>();
  }
  operator new[]();
}

void sub_223F3BD40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a12 >= 0x11) {
    boost::algorithm::detail::find_iterator_base<std::__wrap_iter<char *>>::find_iterator_base<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(&a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  size_t v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      int v5 = *(void **)a2;
      if (*(void *)a2)
      {
        if (v5[2] >= 0x11uLL)
        {
          if (*v5) {
            MEMORY[0x22A614F80](*v5, 0x1000C8077774924);
          }
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x1012C405C87E9CELL);
      }
      goto LABEL_10;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C8BF5 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C8BF5 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_10:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223F3BEE8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1012C405C87E9CELL);
  _Unwind_Resume(a1);
}

char *boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>::operator()<std::__wrap_iter<char *>>(uint64_t a1, char *a2, char *a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  size_t v6 = *(void *)(a1 + 16);
  unint64_t v10 = v6;
  v9[0] = 0;
  if (v6 >= 0x11) {
    operator new[]();
  }
  memcpy(v9, (const void *)a1, v6);
  while (a2 != a3)
  {
    if (boost::algorithm::detail::is_any_ofF<char>::operator()<char>(v9, *a2)) {
      goto LABEL_8;
    }
    ++a2;
  }
  a2 = a3;
LABEL_8:
  if (v10 >= 0x11 && v9[0]) {
    MEMORY[0x22A614F80](v9[0], 0x1000C8077774924);
  }
  if (a2 == a3) {
    return a3;
  }
  if (!*(_DWORD *)(a1 + 24))
  {
    uint64_t v7 = a2;
    do
    {
      if (!boost::algorithm::detail::is_any_ofF<char>::operator()<char>((void *)a1, *v7)) {
        break;
      }
      ++v7;
    }
    while (v7 != a3);
  }
  return a2;
}

void sub_223F3C060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  if (a11 >= 0x11) {
    boost::algorithm::detail::find_iterator_base<std::__wrap_iter<char *>>::find_iterator_base<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(&a9);
  }
  _Unwind_Resume(exception_object);
}

BOOL boost::algorithm::detail::is_any_ofF<char>::operator()<char>(void *a1, int a2)
{
  unint64_t v2 = a1[2];
  if (v2 >= 0x11)
  {
    a1 = (void *)*a1;
    size_t v3 = (void *)((char *)a1 + v2);
  }
  else
  {
    size_t v3 = (void *)((char *)a1 + v2);
    if (!v2) {
      return a1 != v3 && *(char *)a1 <= a2;
    }
  }
  do
  {
    size_t v4 = (char *)a1 + (v2 >> 1);
    int v6 = *v4;
    int v5 = v4 + 1;
    unint64_t v7 = v2 >> 1;
    v2 += ~(v2 >> 1);
    if (v6 < a2) {
      a1 = v5;
    }
    else {
      unint64_t v2 = v7;
    }
  }
  while (v2);
  return a1 != v3 && *(char *)a1 <= a2;
}

void sub_223F3C1E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a12 >= 0x11) {
    boost::algorithm::detail::find_iterator_base<std::__wrap_iter<char *>>::find_iterator_base<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(&a10);
  }
  _Unwind_Resume(exception_object);
}

void boost::detail::function::basic_vtable2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::assign_functor<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>()
{
}

void sub_223F3C2A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1012C405C87E9CELL);
  _Unwind_Resume(a1);
}

uint64_t boost::function2<boost::iterator_range<std::__wrap_iter<char *>>,std::__wrap_iter<char *>,std::__wrap_iter<char *>>::operator()(void *a1)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v4, "call to empty boost::function");
    v4.__vftable = (std::runtime_error_vtbl *)&unk_26D758738;
    boost::throw_exception<boost::bad_function_call>(&v4);
  }
  uint64_t v1 = *(uint64_t (**)(void *))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  unint64_t v2 = a1 + 1;
  return v1(v2);
}

void sub_223F3C34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

std::vector<std::string> *std::vector<std::string>::vector<boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string,std::__wrap_iter<char *>>,boost::algorithm::split_iterator<std::__wrap_iter<char *>>,boost::iterators::use_default,boost::iterators::use_default>,0>(std::vector<std::string> *a1, uint64_t *a2, uint64_t *a3)
{
  a1->__begin_ = 0;
  a1->__end_ = 0;
  a1->__end_cap_.__value_ = 0;
  boost::algorithm::split_iterator<std::__wrap_iter<char *>>::split_iterator((uint64_t)v7, a2);
  boost::algorithm::split_iterator<std::__wrap_iter<char *>>::split_iterator((uint64_t)v6, a3);
  std::vector<std::string>::__init_with_sentinel[abi:ne180100]<boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string,std::__wrap_iter<char *>>,boost::algorithm::split_iterator<std::__wrap_iter<char *>>,boost::iterators::use_default,boost::iterators::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string,std::__wrap_iter<char *>>,boost::algorithm::split_iterator<std::__wrap_iter<char *>>,boost::iterators::use_default,boost::iterators::use_default>>(a1, (uint64_t)v7, (uint64_t)v6);
  boost::function0<void>::~function0(v6);
  boost::function0<void>::~function0(v7);
  return a1;
}

void sub_223F3C3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
}

BOOL std::vector<std::string>::__init_with_sentinel[abi:ne180100]<boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string,std::__wrap_iter<char *>>,boost::algorithm::split_iterator<std::__wrap_iter<char *>>,boost::iterators::use_default,boost::iterators::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string,std::__wrap_iter<char *>>,boost::algorithm::split_iterator<std::__wrap_iter<char *>>,boost::iterators::use_default,boost::iterators::use_default>>(std::vector<std::string> *a1, uint64_t a2, uint64_t a3)
{
  size_t v22 = a1;
  char v23 = 0;
  p_end_cap = (std::allocator<std::string> *)&a1->__end_cap_;
  while (1)
  {
    BOOL result = boost::algorithm::split_iterator<std::__wrap_iter<char *>>::equal(a2, a3);
    if (result) {
      break;
    }
    std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char *>,std::__wrap_iter<char *>>(__p, *(char **)(a2 + 32), *(char **)(a2 + 40), *(void *)(a2 + 40) - *(void *)(a2 + 32));
    std::vector<std::string>::pointer end = a1->__end_;
    value = a1->__end_cap_.__value_;
    if (end >= value)
    {
      unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)a1->__begin_) >> 3);
      unint64_t v12 = v11 + 1;
      if (v11 + 1 > 0xAAAAAAAAAAAAAAALL) {
        std::vector<float>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * (((char *)value - (char *)a1->__begin_) >> 3);
      if (2 * v13 > v12) {
        unint64_t v12 = 2 * v13;
      }
      if (v13 >= 0x555555555555555) {
        unint64_t v14 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v14 = v12;
      }
      __v.__end_cap_.__value_ = p_end_cap;
      if (v14) {
        std::locale v15 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)p_end_cap, v14);
      }
      else {
        std::locale v15 = 0;
      }
      std::locale v16 = v15 + v11;
      __v.__first_ = v15;
      __v.__begin_ = v16;
      __v.__end_cap_.__value_ = &v15[v14];
      long long v17 = *(_OWORD *)__p;
      v16->__r_.__value_.__r.__words[2] = v21;
      *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
      __p[1] = 0;
      std::string::size_type v21 = 0;
      __p[0] = 0;
      __v.__end_ = v16 + 1;
      std::vector<std::string>::__swap_out_circular_buffer(a1, &__v);
      int v18 = a1->__end_;
      std::__split_buffer<std::string>::~__split_buffer(&__v);
      int v19 = SHIBYTE(v21);
      a1->__end_ = v18;
      if (v19 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      long long v10 = *(_OWORD *)__p;
      end->__r_.__value_.__r.__words[2] = v21;
      *(_OWORD *)&end->__r_.__value_.__l.__data_ = v10;
      a1->__end_ = end + 1;
    }
    boost::algorithm::split_iterator<std::__wrap_iter<char *>>::increment(a2);
  }
  return result;
}

void sub_223F3C574(_Unwind_Exception *__p, uint64_t a2, int a3, __int16 a4, char a5, char a6, char a7, uint64_t a8, std::__split_buffer<std::string> *__pa, uint64_t a10, int a11, __int16 a12, char a13, char a14, void **a15)
{
  if (a14 < 0) {
    operator delete(__pa);
  }
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a15);
  _Unwind_Resume(__p);
}

BOOL boost::algorithm::split_iterator<std::__wrap_iter<char *>>::equal(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1) {
    BOOL v4 = *(unsigned char *)(a1 + 64) != 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!*(void *)a2)
  {
    BOOL v5 = 1;
    return v4 ^ v5 ^ 1;
  }
  BOOL v5 = *(unsigned char *)(a2 + 64) != 0;
  if (*(unsigned char *)(a2 + 64)) {
    int v6 = 1;
  }
  else {
    int v6 = v4;
  }
  if (v6 == 1) {
    return v4 ^ v5 ^ 1;
  }
  unint64_t v7 = *(const void **)(a1 + 32);
  int v8 = *(const void **)(a2 + 32);
  size_t v9 = *(void *)(a1 + 40) - (void)v7;
  return v9 == *(void *)(a2 + 40) - (void)v8
      && !memcmp(v7, v8, v9)
      && *(void *)(a1 + 48) == *(void *)(a2 + 48)
      && *(void *)(a1 + 56) == *(void *)(a2 + 56);
}

void *std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char *>,std::__wrap_iter<char *>>(void *result, char *a2, char *a3, unint64_t a4)
{
  BOOL v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (a4 > 0x16)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17) {
      uint64_t v8 = a4 | 7;
    }
    uint64_t v9 = v8 + 1;
    BOOL result = operator new(v8 + 1);
    v4[1] = a4;
    std::locale v4[2] = v9 | 0x8000000000000000;
    void *v4 = result;
    BOOL v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    char v10 = *a2++;
    *(unsigned char *)BOOL v4 = v10;
    BOOL v4 = (void *)((char *)v4 + 1);
  }
  *(unsigned char *)BOOL v4 = 0;
  return result;
}

void *boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<boost::iterator_range<char const*>>(void *__dst, uint64_t a2)
{
  *__dst = 0;
  BOOL v4 = *(unsigned char **)a2;
  BOOL v5 = *(unsigned char **)(a2 + 8);
  __dst[2] = v5 - v4;
  if ((unint64_t)(v5 - v4) >= 0x11) {
    operator new[]();
  }
  if (v5 != v4) {
    memmove(__dst, v4, v5 - v4);
  }
  std::__sort<std::__less<char,char> &,char *>();
  return __dst;
}

void *std::__function::__func<BOOL (*)(std::string),std::allocator<BOOL (*)(std::string)>,BOOL ()(std::string)>::__clone(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &unk_26D75CEC0;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<BOOL (*)(std::string),std::allocator<BOOL (*)(std::string)>,BOOL ()(std::string)>::operator()(uint64_t a1, uint64_t a2)
{
  return std::__invoke_void_return_wrapper<BOOL,false>::__call[abi:ne180100]<BOOL (*&)(std::string),std::string>((uint64_t (**)(void **))(a1 + 8), a2);
}

uint64_t std::__function::__func<BOOL (*)(std::string),std::allocator<BOOL (*)(std::string)>,BOOL ()(std::string)>::target(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

void *std::__function::__func<BOOL (*)(std::string),std::allocator<BOOL (*)(std::string)>,BOOL ()(std::string)>::target_type()
{
}

uint64_t std::__invoke_void_return_wrapper<BOOL,false>::__call[abi:ne180100]<BOOL (*&)(std::string),std::string>(uint64_t (**a1)(void **), uint64_t a2)
{
  unint64_t v2 = *a1;
  *(_OWORD *)std::string __p = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v3 = v2(__p);
  if (SHIBYTE(v6) < 0) {
    operator delete(__p[0]);
  }
  return v3;
}

void sub_223F3C8B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::__function::__func<BOOL (*)(long long),std::allocator<BOOL (*)(long long)>,BOOL ()(long long)>::__clone(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &unk_26D75CF70;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<BOOL (*)(long long),std::allocator<BOOL (*)(long long)>,BOOL ()(long long)>::operator()(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void))(a1 + 8))(*a2);
}

uint64_t std::__function::__func<BOOL (*)(long long),std::allocator<BOOL (*)(long long)>,BOOL ()(long long)>::target(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

void *std::__function::__func<BOOL (*)(long long),std::allocator<BOOL (*)(long long)>,BOOL ()(long long)>::target_type()
{
}

void OUTLINED_FUNCTION_0_6()
{
  JUMPOUT(0x22A614F80);
}

void CoreML::Specification::protobuf_Identity_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Identity_2eproto::TableStruct *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _tc_google::protobuf::internal::VerifyVersion((_tc_google::protobuf::internal *)0x2DD278, (_tc_google::protobuf::internal *)0x2DD278, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/external/coremltools_wrap/coremltools/mlmodel/build/format/Identity.pb.cc", a4);
  _tc_google::protobuf::internal::InitProtobufDefaults(v4);
  CoreML::Specification::_Identity_default_instance_ = (uint64_t)&unk_26D75D020;
  *(void *)algn_268089F28 = 0;
  dword_268089F30 = 0;
  byte_268089F38 = 1;
}

void CoreML::Specification::protobuf_Identity_2eproto::InitDefaults(CoreML::Specification::protobuf_Identity_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_Identity_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v2[0] = &unk_26D7768F8;
    v2[1] = CoreML::Specification::protobuf_Identity_2eproto::TableStruct::InitDefaultsImpl;
    char v3 = 0;
    _tc_google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Identity_2eproto::InitDefaults(void)::once, (uint64_t)v2);
    _tc_google::protobuf::internal::FunctionClosure0::~FunctionClosure0((_tc_google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_223F3CA80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::FunctionClosure0::~FunctionClosure0((_tc_google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CoreML::Specification::Identity *CoreML::Specification::Identity::Identity(CoreML::Specification::Identity *this)
{
  *(void *)this = &unk_26D75D020;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Identity *)&CoreML::Specification::_Identity_default_instance_) {
    CoreML::Specification::protobuf_Identity_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F3CAF4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::Identity::~Identity(CoreML::Specification::Identity *this)
{
  *(void *)this = &unk_26D75D020;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75D020;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::Identity::default_instance(CoreML::Specification::Identity *this)
{
  return &CoreML::Specification::_Identity_default_instance_;
}

void CoreML::Specification::Identity::New(CoreML::Specification::Identity *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F3CC28(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::Identity>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::Identity>);
  }
  return result;
}

uint64_t CoreML::Specification::Identity::MergePartialFromCodedStream(CoreML::Specification::Identity *this, char **a2, unsigned int a3)
{
  do
  {
    BOOL v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::Identity::ByteSizeLong(CoreML::Specification::Identity *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::Identity::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

std::string *CoreML::Specification::Identity::MergeFrom(std::string *this, const CoreML::Specification::Identity *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::Identity::IsInitialized(CoreML::Specification::Identity *this)
{
  return 1;
}

void *CoreML::Specification::Identity::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Identity");
}

void CoreML::Specification::Identity::New(CoreML::Specification::Identity *this)
{
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::Identity>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

turi::fileio::cache_block *turi::fileio::cache_block::cache_block(turi::fileio::cache_block *this, long long *a2, size_t a3, uint64_t a4)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v7 = *a2;
    *((void *)this + 2) = *((void *)a2 + 2);
    *(_OWORD *)this = v7;
  }
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 9) = 0;
  *((void *)this + 1CoreML::Specification::Identity::New(this, 0) = a4;
  turi::fileio::cache_block::initialize_memory(this, a3);
  return this;
}

void sub_223F3CDF4(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*(void **)(v1 + 56));
  }
  turi::fileio::cache_block::cache_block(v1);
  _Unwind_Resume(a1);
}

size_t turi::fileio::cache_block::initialize_memory(turi::fileio::cache_block *this, size_t a2)
{
  turi::fileio::cache_block::clear(this);
  if (a2 <= 0x400) {
    size_t result = a2;
  }
  else {
    size_t result = 1024;
  }
  *((void *)this + 3) = a2;
  *((void *)this + 4) = result;
  *((void *)this + 5) = 0;
  if (result)
  {
    size_t result = (size_t)malloc_type_malloc(result, 0x100004077774924uLL);
    *((void *)this + 6) = result;
    if (!result)
    {
      exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
      BOOL v6 = std::bad_alloc::bad_alloc(exception);
      __cxa_throw(v6, MEMORY[0x263F8C218], MEMORY[0x263F8C170]);
    }
    atomic_fetch_add((atomic_ullong *volatile)(*((void *)this + 10) + 8), *((void *)this + 4));
  }
  else
  {
    *((void *)this + 6) = 0;
  }
  return result;
}

uint64_t turi::fileio::cache_block::extend_capacity(turi::fileio::cache_block *this, unint64_t a2)
{
  uint64_t result = *((void *)this + 6);
  if (result)
  {
    unint64_t v4 = *((void *)this + 3);
    if (v4 < a2) {
      return 0;
    }
    unint64_t v5 = *((void *)this + 4);
    if (a2 <= v5) {
      return 1;
    }
    unint64_t v6 = 2 * v5;
    if (2 * v5 <= a2) {
      unint64_t v6 = a2;
    }
    if (v4 >= v6) {
      size_t v7 = v6;
    }
    else {
      size_t v7 = *((void *)this + 3);
    }
    uint64_t v8 = *(void *)(*((void *)this + 10) + 8);
    if (v7 - v5 + v8 > turi::fileio::FILEIO_MAXIMUM_CACHE_CAPACITY)
    {
      size_t v7 = a2;
      if (a2 - v5 + v8 > turi::fileio::FILEIO_MAXIMUM_CACHE_CAPACITY) {
        return 0;
      }
    }
    uint64_t result = (uint64_t)malloc_type_realloc((void *)result, v7, 0x52224B82uLL);
    if (result)
    {
      *((void *)this + 6) = result;
      atomic_fetch_add((atomic_ullong *volatile)(*((void *)this + 10) + 8), v7 - *((void *)this + 4));
      *((void *)this + 4) = v7;
      return 1;
    }
  }
  return result;
}

void turi::fileio::cache_block::write_to_file(turi::fileio::cache_block *this)
{
  if (*((char *)this + 79) < 0)
  {
    if (!*((void *)this + 8))
    {
LABEL_3:
      std::string::basic_string[abi:ne180100]<0>(__p, "");
      turi::get_temp_name_prefer_hdfs((turi::fs_impl *)__p);
    }
  }
  else if (!*((unsigned char *)this + 79))
  {
    goto LABEL_3;
  }
  turi::fileio::cache_block::write_to_file(void)::$_0::operator()();
}

void sub_223F3D208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::locale a22)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void turi::fileio::cache_block::write_to_file(void)::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", 114);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  char v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"filename.empty()", 16);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    unint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "operator()", 69, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::fileio::cache_block::write_to_file(void)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F3D358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::fileio::cache_block::clear(turi::fileio::cache_block *this)
{
  if (*((void *)this + 6))
  {
    uint64_t v2 = (int *)global_logger();
    if (v2[169] > 1)
    {
LABEL_26:
      unint64_t v13 = (void *)*((void *)this + 6);
      if (v13)
      {
        free(v13);
        atomic_fetch_add((atomic_ullong *volatile)(*((void *)this + 10) + 8), -*((void *)this + 4));
      }
      *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      return;
    }
    if (!cppipc::must_cancel((cppipc *)v2))
    {
      char v3 = (file_logger *)global_logger();
      started = file_logger::start_stream(v3, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "clear", 105, 1);
      unint64_t v5 = pthread_getspecific(*((void *)started + 74));
      if (v5 && *((unsigned char *)v5 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5 + 2, (uint64_t)"Releasing cache ID ", 19);
      }
      if (*((char *)this + 23) < 0) {
        std::string::__init_copy_ctor_external(&v31, *(const std::string::value_type **)this, *((void *)this + 1));
      }
      else {
        std::string v31 = *(std::string *)this;
      }
      uint64_t v10 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v31);
      unint64_t v11 = pthread_getspecific(*(void *)(v10 + 592));
      if (v11)
      {
        if (*((unsigned char *)v11 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(v11[2] - 24) + 16));
          unint64_t v12 = std::locale::use_facet(&v32, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
          std::locale::~locale(&v32);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v10);
          if (*(_DWORD *)(v10 + 600) == 7)
          {
            __print_back_trace();
            exception = __cxa_allocate_exception(8uLL);
            void *exception = "LOG_FATAL encountered";
            __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v31.__r_.__value_.__l.__data_);
      }
      goto LABEL_26;
    }
LABEL_57:
    log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
  }
  if (*((char *)this + 79) < 0)
  {
    if (!*((void *)this + 8)) {
      return;
    }
  }
  else if (!*((unsigned char *)this + 79))
  {
    return;
  }
  unint64_t v6 = (int *)global_logger();
  if (v6[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v6)) {
      goto LABEL_57;
    }
    char v7 = (file_logger *)global_logger();
    uint64_t v8 = file_logger::start_stream(v7, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "clear", 108, 1);
    uint64_t v9 = pthread_getspecific(*((void *)v8 + 74));
    if (v9 && *((unsigned char *)v9 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9 + 2, (uint64_t)"Releasing cache ID ", 19);
    }
    if (*((char *)this + 23) < 0) {
      std::string::__init_copy_ctor_external(&v30, *(const std::string::value_type **)this, *((void *)this + 1));
    }
    else {
      std::string v30 = *(std::string *)this;
    }
    uint64_t v14 = file_logger::operator<<<std::string>((uint64_t)v8, (uint64_t)&v30);
    std::locale v15 = pthread_getspecific(*(void *)(v14 + 592));
    if (v15)
    {
      if (*((unsigned char *)v15 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v15 + *(void *)(v15[2] - 24) + 16));
        std::locale v16 = std::locale::use_facet(&v32, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
        std::locale::~locale(&v32);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v14);
        if (*(_DWORD *)(v14 + 600) == 7)
        {
          __print_back_trace();
          v26 = __cxa_allocate_exception(8uLL);
          void *v26 = "LOG_FATAL encountered";
          __cxa_throw(v26, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
  }
  long long v17 = (_OWORD *)((char *)this + 56);
  int v18 = (int *)global_logger();
  if (v18[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v18)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    int v19 = (file_logger *)global_logger();
    std::locale v20 = file_logger::start_stream(v19, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "clear", 111, 1);
    std::string::size_type v21 = pthread_getspecific(*((void *)v20 + 74));
    if (v21 && *((unsigned char *)v21 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21 + 2, (uint64_t)"Deleting cached file ", 21);
    }
    if (*((char *)this + 79) < 0)
    {
      std::string::__init_copy_ctor_external(&v29, *((const std::string::value_type **)this + 7), *((void *)this + 8));
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *v17;
      v29.__r_.__value_.__r.__words[2] = *((void *)this + 9);
    }
    uint64_t v22 = file_logger::operator<<<std::string>((uint64_t)v20, (uint64_t)&v29);
    char v23 = pthread_getspecific(*(void *)(v22 + 592));
    if (v23)
    {
      if (*((unsigned char *)v23 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v23 + *(void *)(v23[2] - 24) + 16));
        uint64_t v24 = std::locale::use_facet(&v32, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v24->__vftable[2].~facet_0)(v24, 10);
        std::locale::~locale(&v32);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v22);
        if (*(_DWORD *)(v22 + 600) == 7)
        {
          __print_back_trace();
          BOOL v27 = __cxa_allocate_exception(8uLL);
          *BOOL v27 = "LOG_FATAL encountered";
          __cxa_throw(v27, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
  }
  if (*((char *)this + 79) < 0)
  {
    std::string::__init_copy_ctor_external(&v28, *((const std::string::value_type **)this + 7), *((void *)this + 8));
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *v17;
    v28.__r_.__value_.__r.__words[2] = *((void *)this + 9);
  }
  turi::delete_temp_file((uint64_t)&v28);
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  if (*((char *)this + 79) < 0)
  {
    **((unsigned char **)this + 7) = 0;
    *((void *)this + 8) = 0;
  }
  else
  {
    *((unsigned char *)this + 56) = 0;
    *((unsigned char *)this + 79) = 0;
  }
}

void sub_223F3D9E0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,char a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::locale::~locale((std::locale *)(v33 - 56));
  if (a24 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  if (*((int *)global_logger() + 169) <= 5)
  {
    uint64_t v35 = log_stream_dispatch<true>::exec((cppipc *)5, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "clear", 114, 1);
    v36 = file_logger::operator<<((pthread_key_t *)v35, "Failed to delete temporary file: ");
    if (*(char *)(v31 + 79) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)&a9, *(const std::string::value_type **)(v31 + 56), *(void *)(v31 + 64));
    }
    else
    {
      a9 = *v32;
      a10 = *((void *)v32 + 2);
    }
    uint64_t v37 = file_logger::operator<<<std::string>((uint64_t)v36, (uint64_t)&a9);
    file_logger::operator<<(v37, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    if (SHIBYTE(a10) < 0) {
      operator delete((void *)a9);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x223F3D924);
}

void sub_223F3DAFC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x223F3DB3CLL);
}

void turi::fileio::cache_block::~cache_block(void **this)
{
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void turi::fileio::fixed_size_cache_manager::hold_instance(void *a1@<X8>)
{
  {
    operator new();
  }
  {
    __cxa_atexit(MEMORY[0x263F8C118], &turi::fileio::fixed_size_cache_manager::hold_instance(void)::mx, &dword_223D44000);
  }
  std::mutex::lock(&turi::fileio::fixed_size_cache_manager::hold_instance(void)::mx);
  uint64_t v3 = unk_268081E70;
  *a1 = turi::fileio::fixed_size_cache_manager::hold_instance(void)::instance;
  a1[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  std::mutex::unlock(&turi::fileio::fixed_size_cache_manager::hold_instance(void)::mx);
}

void sub_223F3DCCC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A0C40B396A53CLL);
  _Unwind_Resume(a1);
}

uint64_t std::shared_ptr<turi::fileio::fixed_size_cache_manager const>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  return a1;
}

uint64_t turi::fileio::fixed_size_cache_manager::get_instance(turi::fileio::fixed_size_cache_manager *this)
{
  {
    turi::fileio::fixed_size_cache_manager::hold_instance(&turi::fileio::fixed_size_cache_manager::get_instance(void)::instance);
    __cxa_atexit((void (*)(void *))std::shared_ptr<turi::fileio::fixed_size_cache_manager const>::~shared_ptr[abi:ne180100], &turi::fileio::fixed_size_cache_manager::get_instance(void)::instance, &dword_223D44000);
  }
  return turi::fileio::fixed_size_cache_manager::get_instance(void)::instance;
}

void sub_223F3DDB8(_Unwind_Exception *a1)
{
}

turi::fileio::fixed_size_cache_manager *turi::fileio::fixed_size_cache_manager::fixed_size_cache_manager(turi::fileio::fixed_size_cache_manager *this)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  uint64_t v2 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 16), 0);
  assert_msg(v2 == 0, v3, v2);
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_DWORD *)this + 28) = 1065353216;
  return this;
}

uint64_t turi::fileio::fixed_size_cache_manager::get_temp_cache_id@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  unint64_t v6 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v22);
  v21.__r_.__value_.__s.__data_[0] = 48;
  char v7 = std::operator<<[abi:ne180100]<std::char_traits<char>>(v23, (char *)&v21);
  *(void *)((char *)v7 + *(void *)(*v7 - 24) + 24) = 6;
  std::ostream::operator<<();
  ++*(void *)a1;
  turi::fileio::get_temp_cache_prefix(&v20);
  std::stringbuf::str();
  if ((v19 & 0x80u) == 0) {
    uint64_t v8 = __p;
  }
  else {
    uint64_t v8 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v9 = v19;
  }
  else {
    std::string::size_type v9 = (std::string::size_type)__p[1];
  }
  uint64_t v10 = std::string::append(&v20, (const std::string::value_type *)v8, v9);
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = *(char *)(a2 + 23);
  if (v12 >= 0) {
    unint64_t v13 = (const std::string::value_type *)a2;
  }
  else {
    unint64_t v13 = *(const std::string::value_type **)a2;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v14 = *(void *)(a2 + 8);
  }
  std::locale v15 = std::string::append(&v21, v13, v14);
  *a3 = *v15;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if ((char)v19 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  v22[0] = *MEMORY[0x263F8C2B8];
  uint64_t v16 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v22 + *(void *)(v22[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v23[0] = v16;
  v23[1] = MEMORY[0x263F8C318] + 16;
  if (v24 < 0) {
    operator delete((void *)v23[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x22A614E30](&v25);
  return pthread_mutex_unlock(v6);
}

void sub_223F3E0B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a27);
  pthread_mutex_unlock(v27);
  _Unwind_Resume(a1);
}

void sub_223F3E120()
{
}

uint64_t turi::fileio::fixed_size_cache_manager::new_cache@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = (pthread_mutex_t *)(a1 + 16);
  char v7 = (turi::timer *)pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  float v9 = turi::timer::approx_time_seconds(v7);
  float v10 = *(float *)&turi::fileio::fixed_size_cache_manager::new_cache(std::string)::last_print + 5.0;
  if ((float)(*(float *)&turi::fileio::fixed_size_cache_manager::new_cache(std::string)::last_print + 5.0) <= v9) {
    turi::fileio::fixed_size_cache_manager::new_cache(std::string)::last_print = LODWORD(v9);
  }
  if (cppipc::must_cancel(v8)) {
    log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
  }
  long long v11 = (file_logger *)global_logger();
  started = file_logger::start_stream(v11, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "new_cache", 163, v10 <= v9);
  unint64_t v13 = pthread_getspecific(*((void *)started + 74));
  if (v13 && *((unsigned char *)v13 + 280)) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13 + 2, (uint64_t)"Cache Utilization:", 18);
  }
  uint64_t v14 = file_logger::operator<<<unsigned long>((uint64_t)started);
  std::locale v15 = pthread_getspecific(*(void *)(v14 + 592));
  if (v15)
  {
    if (*((unsigned char *)v15 + 280))
    {
      std::ios_base::getloc((const std::ios_base *)((char *)v15 + *(void *)(v15[2] - 24) + 16));
      uint64_t v16 = std::locale::use_facet(&v49, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
      std::locale::~locale(&v49);
      std::ostream::put();
      std::ostream::flush();
      file_logger::stream_flush((file_logger *)v14);
      if (*(_DWORD *)(v14 + 600) == 7)
      {
        __print_back_trace();
        exception = __cxa_allocate_exception(8uLL);
        void *exception = "LOG_FATAL encountered";
        __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
      }
    }
  }
  unint64_t v17 = turi::fileio::FILEIO_MAXIMUM_CACHE_CAPACITY;
  if (*(void *)(a1 + 8) >= (unint64_t)turi::fileio::FILEIO_MAXIMUM_CACHE_CAPACITY)
  {
    turi::fileio::fixed_size_cache_manager::try_cache_evict((turi::fileio::fixed_size_cache_manager *)a1);
    unint64_t v17 = turi::fileio::FILEIO_MAXIMUM_CACHE_CAPACITY;
  }
  unint64_t v18 = *(void *)(a1 + 8);
  uint64_t v19 = v17 - v18;
  if (v17 - v18 >= turi::fileio::FILEIO_MAXIMUM_CACHE_CAPACITY_PER_FILE) {
    uint64_t v19 = turi::fileio::FILEIO_MAXIMUM_CACHE_CAPACITY_PER_FILE;
  }
  if (v17 <= v18) {
    size_t v20 = 0;
  }
  else {
    size_t v20 = v19;
  }
  std::string v21 = (void *)(a1 + 80);
  if (!std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>((void *)(a1 + 80), (unsigned __int8 *)a2))
  {
    v26 = (int *)global_logger();
    if (v26[169] <= 1)
    {
      if (cppipc::must_cancel((cppipc *)v26)) {
        goto LABEL_60;
      }
      BOOL v27 = (file_logger *)global_logger();
      std::string v28 = file_logger::start_stream(v27, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "new_cache", 179, 1);
      std::string v29 = pthread_getspecific(*((void *)v28 + 74));
      if (v29 && *((unsigned char *)v29 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v29 + 2, (uint64_t)"New cache block ", 16);
      }
      if (*(char *)(a2 + 23) < 0) {
        std::string::__init_copy_ctor_external(&v48, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
      }
      else {
        std::string v48 = *(std::string *)a2;
      }
      uint64_t v38 = file_logger::operator<<<std::string>((uint64_t)v28, (uint64_t)&v48);
      v39 = pthread_getspecific(*(void *)(v38 + 592));
      if (v39 && *((unsigned char *)v39 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v39 + 2, (uint64_t)" Capacity = ", 12);
      }
      uint64_t v40 = file_logger::operator<<<unsigned long>(v38);
      v41 = pthread_getspecific(*(void *)(v40 + 592));
      if (v41)
      {
        if (*((unsigned char *)v41 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v41 + *(void *)(v41[2] - 24) + 16));
          uint64_t v42 = std::locale::use_facet(&v49, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v42->__vftable[2].~facet_0)(v42, 10);
          std::locale::~locale(&v49);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v40);
          if (*(_DWORD *)(v40 + 600) == 7)
          {
            __print_back_trace();
            v46 = __cxa_allocate_exception(8uLL);
            void *v46 = "LOG_FATAL encountered";
            __cxa_throw(v46, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v48.__r_.__value_.__l.__data_);
      }
    }
    operator new();
  }
  uint64_t v22 = (int *)global_logger();
  if (v22[169] > 1) {
    goto LABEL_41;
  }
  if (cppipc::must_cancel((cppipc *)v22)) {
LABEL_60:
  }
    log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
  char v23 = (file_logger *)global_logger();
  char v24 = file_logger::start_stream(v23, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "new_cache", 186, 1);
  uint64_t v25 = pthread_getspecific(*((void *)v24 + 74));
  if (v25 && *((unsigned char *)v25 + 280)) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v25 + 2, (uint64_t)"Overwrite cache block ", 22);
  }
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  uint64_t v30 = file_logger::operator<<<std::string>((uint64_t)v24, (uint64_t)&__p);
  uint64_t v31 = pthread_getspecific(*(void *)(v30 + 592));
  if (v31 && *((unsigned char *)v31 + 280)) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v31 + 2, (uint64_t)" Capacity = ", 12);
  }
  uint64_t v32 = file_logger::operator<<<unsigned long>(v30);
  uint64_t v33 = pthread_getspecific(*(void *)(v32 + 592));
  if (v33)
  {
    if (*((unsigned char *)v33 + 280))
    {
      std::ios_base::getloc((const std::ios_base *)((char *)v33 + *(void *)(v33[2] - 24) + 16));
      v34 = std::locale::use_facet(&v49, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v34->__vftable[2].~facet_0)(v34, 10);
      std::locale::~locale(&v49);
      std::ostream::put();
      std::ostream::flush();
      file_logger::stream_flush((file_logger *)v32);
      if (*(_DWORD *)(v32 + 600) == 7)
      {
        __print_back_trace();
        std::string v45 = __cxa_allocate_exception(8uLL);
        *std::string v45 = "LOG_FATAL encountered";
        __cxa_throw(v45, MEMORY[0x263F8C1D8], 0);
      }
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_41:
  uint64_t v35 = std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>(v21, (unsigned __int8 *)a2);
  uint64_t v36 = *((void *)v35 + 5);
  *a3 = v36;
  uint64_t v37 = *((void *)v35 + 6);
  a3[1] = v37;
  if (v37) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v37 + 8), 1uLL, memory_order_relaxed);
  }
  if (*(char *)(v36 + 79) < 0)
  {
    if (*(void *)(v36 + 64)) {
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (!*(unsigned char *)(v36 + 79)) {
LABEL_45:
  }
    size_t v20 = *(void *)(v36 + 24);
LABEL_46:
  turi::fileio::cache_block::initialize_memory((turi::fileio::cache_block *)v36, v20);
  return pthread_mutex_unlock(v6);
}

void sub_223F3E7FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,std::locale a31)
{
  MEMORY[0x22A614FA0](v32, 0x1032C40A8A00B57);
  pthread_mutex_unlock(v31);
  _Unwind_Resume(a1);
}

void turi::fileio::fixed_size_cache_manager::try_cache_evict(turi::fileio::fixed_size_cache_manager *this)
{
  uint64_t v2 = (std::string *)pthread_mutex_trylock((pthread_mutex_t *)((char *)this + 16));
  if (!v2) {
    turi::fileio::fixed_size_cache_manager::try_cache_evict(void)::$_0::operator()();
  }
  memset(&v23, 0, sizeof(v23));
  uint64_t v3 = (uint64_t *)*((void *)this + 12);
  if (v3)
  {
    unint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = v3[6];
      if (v7 && !*(void *)(v7 + 8))
      {
        uint64_t v8 = v3[5];
        if (*(char *)(v8 + 79) < 0)
        {
          if (!*(void *)(v8 + 64))
          {
LABEL_10:
            if (*(void *)(v8 + 40) > v4)
            {
              uint64_t v2 = std::string::operator=(&v23, (const std::string *)(v3 + 2));
              unint64_t v5 = (turi::fileio::cache_block *)v3[5];
              float v9 = (std::__shared_weak_count *)v3[6];
              if (v9) {
                atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              if (v6) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v6);
              }
              unint64_t v4 = *((void *)v5 + 5);
              unint64_t v6 = v9;
            }
          }
        }
        else if (!*(unsigned char *)(v8 + 79))
        {
          goto LABEL_10;
        }
      }
      uint64_t v3 = (uint64_t *)*v3;
      if (!v3)
      {
        if (v5)
        {
          float v11 = turi::timer::approx_time_seconds((turi::timer *)v2);
          float v12 = *(float *)&turi::fileio::fixed_size_cache_manager::try_cache_evict(void)::last_print + 5.0;
          if ((float)(*(float *)&turi::fileio::fixed_size_cache_manager::try_cache_evict(void)::last_print + 5.0) <= v11) {
            turi::fileio::fixed_size_cache_manager::try_cache_evict(void)::last_print = LODWORD(v11);
          }
          if (!cppipc::must_cancel(v10))
          {
            unint64_t v13 = (file_logger *)global_logger();
            started = file_logger::start_stream(v13, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "try_cache_evict", 245, v12 <= v11);
            std::locale v15 = pthread_getspecific(*((void *)started + 74));
            if (v15 && *((unsigned char *)v15 + 280)) {
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15 + 2, (uint64_t)"Evicting ", 9);
            }
            if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
              std::string::__init_copy_ctor_external(&v22, v23.__r_.__value_.__l.__data_, v23.__r_.__value_.__l.__size_);
            }
            else {
              std::string v22 = v23;
            }
            uint64_t v16 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v22);
            unint64_t v17 = pthread_getspecific(*(void *)(v16 + 592));
            if (v17 && *((unsigned char *)v17 + 280)) {
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17 + 2, (uint64_t)" with size ", 11);
            }
            uint64_t v18 = file_logger::operator<<<unsigned long>(v16);
            uint64_t v19 = pthread_getspecific(*(void *)(v18 + 592));
            if (!v19
              || !v19[280]
              || (std::ios_base::getloc((const std::ios_base *)&v19[*(void *)(*((void *)v19 + 2) - 24) + 16]),
                  size_t v20 = std::locale::use_facet(&v24, MEMORY[0x263F8C108]),
                  ((void (*)(const std::locale::facet *, uint64_t))v20->__vftable[2].~facet_0)(v20, 10),
                  std::locale::~locale(&v24),
                  std::ostream::put(),
                  std::ostream::flush(),
                  file_logger::stream_flush((file_logger *)v18),
                  *(_DWORD *)(v18 + 600) != 7))
            {
              if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v22.__r_.__value_.__l.__data_);
              }
              turi::fileio::cache_block::write_to_file(v5);
            }
            __print_back_trace();
            exception = __cxa_allocate_exception(8uLL);
            void *exception = "LOG_FATAL encountered";
            __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
          }
          log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
        }
        if (v6) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v6);
        }
        break;
      }
    }
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
}

void sub_223F3ED5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,std::locale a24)
{
  std::locale::~locale(&a24);
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t turi::fileio::fixed_size_cache_manager::free(uint64_t a1, long long **a2)
{
  unint64_t v4 = (int *)global_logger();
  if (v4[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v4)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    unint64_t v5 = (file_logger *)global_logger();
    started = file_logger::start_stream(v5, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "free", 202, 1);
    uint64_t v7 = pthread_getspecific(*((void *)started + 74));
    if (v7 && *((unsigned char *)v7 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7 + 2, (uint64_t)"Free cache block ", 17);
    }
    uint64_t v8 = *a2;
    if (*((char *)*a2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)v8, *((void *)v8 + 1));
    }
    else
    {
      long long v9 = *v8;
      v21.__r_.__value_.__r.__words[2] = *((void *)v8 + 2);
      *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v9;
    }
    uint64_t v10 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v21);
    float v11 = pthread_getspecific(*(void *)(v10 + 592));
    if (v11)
    {
      if (*((unsigned char *)v11 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(v11[2] - 24) + 16));
        float v12 = std::locale::use_facet(&v22, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
        std::locale::~locale(&v22);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v10);
        if (*(_DWORD *)(v10 + 600) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
  }
  unint64_t v13 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  uint64_t v14 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v14, *((void *)v14 + 1));
  }
  else
  {
    long long v15 = *v14;
    __p.__r_.__value_.__r.__words[2] = *((void *)v14 + 2);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v15;
  }
  uint64_t v16 = (void *)(a1 + 80);
  unint64_t v17 = std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>(v16, (unsigned __int8 *)&__p);
  if (!v17) {
    turi::fileio::fixed_size_cache_manager::free(std::shared_ptr<turi::fileio::cache_block>)::$_0::operator()();
  }
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::remove(v16, v17, (uint64_t)&v22);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v22, 0);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return pthread_mutex_unlock(v13);
}

void sub_223F3F020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::locale a22)
{
  pthread_mutex_unlock(v22);
  _Unwind_Resume(a1);
}

void turi::fileio::fixed_size_cache_manager::free(std::shared_ptr<turi::fileio::cache_block>)::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", 114);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"iter != cache_blocks.end()", 26);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    unint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "operator()", 206, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::fileio::fixed_size_cache_manager::free(std::shared_ptr<turi::fileio::cache_block>)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F3F17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t turi::fileio::fixed_size_cache_manager::get_cache@<X0>(uint64_t a1@<X0>, std::string::size_type a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = (int *)global_logger();
  if (v6[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v6)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    char v7 = (file_logger *)global_logger();
    started = file_logger::start_stream(v7, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "get_cache", 211, 1);
    long long v9 = pthread_getspecific(*((void *)started + 74));
    if (v9 && *((unsigned char *)v9 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9 + 2, (uint64_t)"Get cache block ", 16);
    }
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string v21 = *(std::string *)a2;
    }
    uint64_t v10 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v21);
    float v11 = pthread_getspecific(*(void *)(v10 + 592));
    if (v11)
    {
      if (*((unsigned char *)v11 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(v11[2] - 24) + 16));
        float v12 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
        std::locale::~locale((std::locale *)&v20);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v10);
        if (*(_DWORD *)(v10 + 600) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
  }
  unint64_t v13 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  uint64_t v14 = (void *)(a1 + 80);
  if (!std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>(v14, (unsigned __int8 *)a2))
  {
    uint64_t v18 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    std::logic_error::logic_error(v18, &v20);
    v18->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
    __cxa_throw(v18, (struct type_info *)off_2646D6748, MEMORY[0x263F8C068]);
  }
  v20.__r_.__value_.__r.__words[0] = a2;
  long long v15 = std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t)v14, (unsigned __int8 *)a2, (uint64_t)&std::piecewise_construct, (long long **)&v20);
  uint64_t v16 = *((void *)v15 + 6);
  *a3 = *((void *)v15 + 5);
  a3[1] = v16;
  if (v16) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
  }
  return pthread_mutex_unlock(v13);
}

void sub_223F3F51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void turi::fileio::fixed_size_cache_manager::try_cache_evict(void)::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", 114);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"!(mutex.try_lock())", 19);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    unint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fixed_size_cache_manager.cpp", "operator()", 229, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::fileio::fixed_size_cache_manager::try_cache_evict(void)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F3F694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void *std::allocate_shared[abi:ne180100]<turi::fileio_impl::general_fstream_sink,std::allocator<turi::fileio_impl::general_fstream_sink>,std::string &,void>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  unint64_t v4 = operator new(0x68uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::fileio_impl::general_fstream_sink>::__shared_ptr_emplace[abi:ne180100]<std::string const&,std::allocator<turi::fileio_impl::general_fstream_sink>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_223F3F7E0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::shared_ptr<turi::fileio::fixed_size_cache_manager const>::shared_ptr[abi:ne180100]<turi::fileio::fixed_size_cache_manager,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223F3F864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a10 = 0;
  if (v10) {
    std::default_delete<turi::fileio::fixed_size_cache_manager>::operator()[abi:ne180100]((uint64_t)&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_pointer<turi::fileio::fixed_size_cache_manager *,std::shared_ptr<turi::fileio::fixed_size_cache_manager const>::__shared_ptr_default_delete<turi::fileio::fixed_size_cache_manager const,turi::fileio::fixed_size_cache_manager>,std::allocator<turi::fileio::fixed_size_cache_manager>>::__on_zero_shared(uint64_t a1)
{
}

uint64_t std::__shared_ptr_pointer<turi::fileio::fixed_size_cache_manager *,std::shared_ptr<turi::fileio::fixed_size_cache_manager const>::__shared_ptr_default_delete<turi::fileio::fixed_size_cache_manager const,turi::fileio::fixed_size_cache_manager>,std::allocator<turi::fileio::fixed_size_cache_manager>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::default_delete<turi::fileio::fixed_size_cache_manager>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = a2 + 80;
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::clear(a2 + 80);
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::~__hash_table(v3);
    turi::mutex::~mutex((pthread_mutex_t *)(a2 + 16));
    JUMPOUT(0x22A614FA0);
  }
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::__deallocate_node(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::__deallocate_node(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<turi::unity_sarray_base>>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::clear(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::__deallocate_node(a1, *(void **)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

void std::shared_ptr<turi::fileio::cache_block>::shared_ptr[abi:ne180100]<turi::fileio::cache_block,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223F3FA84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<turi::fileio::cache_block>::reset[abi:ne180100]((void ***)va, 0);
  _Unwind_Resume(a1);
}

void **std::__shared_ptr_pointer<turi::fileio::cache_block *,std::shared_ptr<turi::fileio::cache_block>::__shared_ptr_default_delete<turi::fileio::cache_block,turi::fileio::cache_block>,std::allocator<turi::fileio::cache_block>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void ***)(a1 + 24);
  if (result)
  {
    turi::fileio::cache_block::~cache_block(result);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::fileio::cache_block *,std::shared_ptr<turi::fileio::cache_block>::__shared_ptr_default_delete<turi::fileio::cache_block,turi::fileio::cache_block>,std::allocator<turi::fileio::cache_block>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void **std::unique_ptr<turi::fileio::cache_block>::reset[abi:ne180100](void ***a1, void **a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    turi::fileio::cache_block::~cache_block(result);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  uint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::__rehash<true>(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  std::string v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *std::string v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  v26[0] = 0;
  ++*v8;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>>>>::reset[abi:ne180100]((uint64_t)v26, 0);
  return i;
}

void sub_223F3FDFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  uint64_t v8 = operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *uint64_t v8 = 0;
  v8[1] = a2;
  unint64_t v9 = (std::string *)(v8 + 2);
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    v8[4] = *((void *)v10 + 2);
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = v11;
  }
  v8[5] = 0;
  v8[6] = 0;
  *(unsigned char *)(a4 + 16) = 1;
}

void sub_223F3FE9C(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<turi::unity_sarray_base>>,0>((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<turi::fileio::cache_block>>>>::remove@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  unint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    uint64_t v7 = v6;
    unint64_t v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *uint64_t v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void boost::filesystem::filesystem_error::~filesystem_error(atomic_uint **this)
{
  *this = (atomic_uint *)&unk_26D75D1F0;
  boost::detail::shared_count::~shared_count(this + 8);
  boost::system::system_error::~system_error((std::runtime_error *)this);
}

{
  uint64_t vars8;

  *this = (atomic_uint *)&unk_26D75D1F0;
  boost::detail::shared_count::~shared_count(this + 8);
  boost::system::system_error::~system_error((std::runtime_error *)this);
  JUMPOUT(0x22A614FA0);
}

void turi::fileio::get_protocol(const std::string *__s@<X0>, std::string::size_type a2@<X8>)
{
  if (SHIBYTE(__s->__r_.__value_.__r.__words[2]) < 0)
  {
    uint8x8_t v5 = (const std::string *)__s->__r_.__value_.__r.__words[0];
    uint64_t size = __s->__r_.__value_.__l.__size_;
  }
  else
  {
    uint64_t size = HIBYTE(__s->__r_.__value_.__r.__words[2]);
    uint8x8_t v5 = __s;
  }
  if (size >= 3)
  {
    unint64_t v6 = (char *)v5 + size;
    uint64_t v7 = (std::string *)v5;
    do
    {
      unint64_t v8 = (char *)memchr(v7, 58, size - 2);
      if (!v8) {
        break;
      }
      if (*(_WORD *)v8 == 12090 && v8[2] == 47)
      {
        if (v8 == v6 || v8 - (char *)v5 == -1) {
          break;
        }
        std::string::basic_string(&v18, __s, 0, v8 - (char *)v5, (std::allocator<char> *)&v17);
        MEMORY[0x22A614D20](&v17);
        if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v10 = &v18;
        }
        else {
          uint64_t v10 = (std::string *)v18.__r_.__value_.__r.__words[0];
        }
        std::string::size_type v11 = HIBYTE(v18.__r_.__value_.__r.__words[2]);
        if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v11 = v18.__r_.__value_.__l.__size_;
        }
        std::string::__init_with_sentinel[abi:ne180100]<boost::iterators::transform_iterator<boost::algorithm::detail::to_lowerF<char>,std::__wrap_iter<char const*>,boost::iterators::use_default,boost::iterators::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::to_lowerF<char>,std::__wrap_iter<char const*>,boost::iterators::use_default,boost::iterators::use_default>>((std::string *)a2, (char *)v10, &v17, (char *)v10 + v11);
        std::locale::~locale(&v17);
        if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v18.__r_.__value_.__l.__data_);
        }
        if (*(char *)(a2 + 23) >= 0) {
          uint8x8_t v12 = (unsigned char *)a2;
        }
        else {
          uint8x8_t v12 = *(unsigned char **)a2;
        }
        MEMORY[0x22A614D20](&v17);
        int v13 = *(char *)(a2 + 23);
        BOOL v14 = v13 < 0;
        std::string::size_type v15 = *(void *)a2;
        if (v13 >= 0) {
          std::string::size_type v15 = a2;
        }
        uint64_t v16 = *(unsigned __int8 *)(a2 + 23);
        if (v14) {
          uint64_t v16 = *(void *)(a2 + 8);
        }
        v18.__r_.__value_.__r.__words[0] = v15;
        v18.__r_.__value_.__l.__size_ = v15 + v16;
        boost::algorithm::detail::transform_range_copy<std::__wrap_iter<char *>,boost::iterator_range<std::__wrap_iter<char const*>>,boost::algorithm::detail::to_lowerF<char>>(v12, &v18.__r_.__value_.__l.__data_, &v17);
        std::locale::~locale(&v17);
        return;
      }
      uint64_t v7 = (std::string *)(v8 + 1);
      uint64_t size = v6 - (char *)v7;
    }
    while (v6 - (char *)v7 >= 3);
  }
  std::string::basic_string[abi:ne180100]<0>((void *)a2, "");
}

void sub_223F40234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  std::locale::~locale((std::locale *)&a9);
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(a1);
}

void turi::fileio::get_file_status(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  turi::fileio::get_cache_prefix(&__p);
  MEMORY[0x22A614D20](&v25);
  std::locale::locale(v19, &v25);
  int v4 = *(char *)(a1 + 23);
  BOOL v5 = v4 < 0;
  if (v4 >= 0) {
    unint64_t v6 = (char *)a1;
  }
  else {
    unint64_t v6 = *(char **)a1;
  }
  uint64_t v7 = *(unsigned __int8 *)(a1 + 23);
  if (v5) {
    uint64_t v7 = *(void *)(a1 + 8);
  }
  if ((__p.st_gid & 0x80000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = *(stat **)&__p.st_dev;
  }
  if ((__p.st_gid & 0x80000000) == 0) {
    __darwin_ino64_t st_gid_high = HIBYTE(__p.st_gid);
  }
  else {
    __darwin_ino64_t st_gid_high = __p.st_ino;
  }
  if (v7) {
    BOOL v10 = st_gid_high == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10)
  {
    BOOL v14 = (char *)p_p;
LABEL_18:
    BOOL v11 = v14 == (char *)p_p + st_gid_high;
  }
  else
  {
    __darwin_ino64_t v12 = st_gid_high - 1;
    uint64_t v13 = v7 - 1;
    BOOL v14 = (char *)p_p;
    while (boost::algorithm::is_iequal::operator()<char,char>(v19, v6, v14))
    {
      ++v14;
      if (v13)
      {
        ++v6;
        __darwin_ino64_t v15 = v12--;
        --v13;
        if (v15) {
          continue;
        }
      }
      goto LABEL_18;
    }
    BOOL v11 = 0;
  }
  std::locale::~locale(v19);
  std::locale::~locale(&v25);
  if (SHIBYTE(__p.st_gid) < 0)
  {
    operator delete(*(void **)&__p.st_dev);
    if (v11) {
      goto LABEL_26;
    }
LABEL_29:
    if (*(char *)(a1 + 23) >= 0) {
      std::string v18 = (const char *)a1;
    }
    else {
      std::string v18 = *(const char **)a1;
    }
    if (stat(v18, &__p))
    {
      std::operator+<char>();
      *(_DWORD *)a2 = 0;
      *(_OWORD *)(a2 + 8) = *(_OWORD *)&v19[0].__locale_;
      *(void *)(a2 + 24) = v20;
    }
    else
    {
      if ((__p.st_mode & 0xF000) == 0x4000) {
        *(_DWORD *)a2 = 2;
      }
      else {
        *(_DWORD *)a2 = 1;
      }
      std::string::basic_string[abi:ne180100]<0>((void *)(a2 + 8), "");
    }
    return;
  }
  if (!v11) {
    goto LABEL_29;
  }
LABEL_26:
  uint64_t instance = turi::fileio::fixed_size_cache_manager::get_instance(v16);
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v22, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v22 = *(std::string *)a1;
  }
  turi::fileio::fixed_size_cache_manager::get_cache(instance, (std::string::size_type)&v22, &v23);
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  *(_DWORD *)a2 = 1;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
}

void sub_223F40494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15)
{
}

void turi::fileio::get_directory_listing(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  turi::fileio::get_cache_prefix(&__p);
  MEMORY[0x22A614D20](&v17);
  std::locale::locale(&v15, (const std::locale *)&v17);
  int v3 = *(char *)(a1 + 23);
  BOOL v4 = v3 < 0;
  if (v3 >= 0) {
    BOOL v5 = (char *)a1;
  }
  else {
    BOOL v5 = *(char **)a1;
  }
  uint64_t v6 = *(unsigned __int8 *)(a1 + 23);
  if (v4) {
    uint64_t v6 = *(void *)(a1 + 8);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (v6) {
    BOOL v9 = size == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9)
  {
    uint64_t v13 = (char *)p_p;
LABEL_18:
    BOOL v10 = v13 == (char *)p_p + size;
  }
  else
  {
    std::string::size_type v11 = size - 1;
    uint64_t v12 = v6 - 1;
    uint64_t v13 = (char *)p_p;
    while (boost::algorithm::is_iequal::operator()<char,char>(&v15, v5, v13))
    {
      ++v13;
      if (v12)
      {
        ++v5;
        std::string::size_type v14 = v11--;
        --v12;
        if (v14) {
          continue;
        }
      }
      goto LABEL_18;
    }
    BOOL v10 = 0;
  }
  std::locale::~locale(&v15);
  std::locale::~locale((std::locale *)&v17);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v10) {
      return;
    }
LABEL_28:
    if (*(char *)(a1 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v17, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
      if (*(char *)(a1 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
LABEL_32:
        boost::filesystem::directory_iterator::directory_iterator((boost::filesystem::directory_iterator *)&v16, (const boost::filesystem::path *)&__p);
      }
    }
    else
    {
      std::string v17 = *(std::string *)a1;
    }
    std::string __p = *(std::string *)a1;
    goto LABEL_32;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (!v10) {
    goto LABEL_28;
  }
}

void sub_223F409C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  if (a25 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x223F4095CLL);
}

void turi::fileio::convert_to_generic(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(a2, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *a2 = __p;
  }
}

void sub_223F40B54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::fileio::create_directory(uint64_t a1)
{
  turi::fileio::get_file_status(a1, (uint64_t)&v15);
  if (v15)
  {
    uint64_t v2 = 0;
    goto LABEL_32;
  }
  turi::fileio::get_cache_prefix(&__p);
  int v3 = *(const std::string::value_type **)a1;
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
  }
  else
  {
    int v3 = (const std::string::value_type *)a1;
    uint64_t v4 = *(unsigned __int8 *)(a1 + 23);
  }
  std::string::size_type size = __p.__r_.__value_.__l.__size_;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  if (v4) {
    BOOL v7 = size == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    std::string::size_type v9 = size - 1;
    uint64_t v10 = v4 - 1;
    std::string::size_type v11 = p_p;
    while (*(unsigned __int8 *)v3 == v11->__r_.__value_.__s.__data_[0])
    {
      std::string::size_type v11 = (std::string *)((char *)v11 + 1);
      if (v10)
      {
        ++v3;
        std::string::size_type v12 = v9--;
        --v10;
        if (v12) {
          continue;
        }
      }
      goto LABEL_17;
    }
    BOOL v8 = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_25;
    }
LABEL_18:
    if (!v8) {
      goto LABEL_26;
    }
    goto LABEL_31;
  }
  std::string::size_type v11 = p_p;
LABEL_17:
  BOOL v8 = v11 == (std::string *)((char *)p_p + size);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_18;
  }
LABEL_25:
  operator delete(__p.__r_.__value_.__l.__data_);
  if (!v8)
  {
LABEL_26:
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string __p = *(std::string *)a1;
    }
    boost::filesystem::detail::create_directories((uint64_t)&__p, 0);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
LABEL_31:
  uint64_t v2 = 1;
LABEL_32:
  if (v17 < 0) {
    operator delete(v16);
  }
  return v2;
}

void sub_223F40CBC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void sub_223F40CE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::fileio::create_directory_or_throw(uint64_t a1)
{
  uint64_t directory = turi::fileio::create_directory(a1);
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __s = *(std::string *)a1;
  }
  turi::fileio::get_protocol(&__s, (std::string::size_type)&v9);
  if (v11 < 0)
  {
    BOOL v3 = __p == (void *)2 && *v9 == 13171;
    operator delete(v9);
  }
  else
  {
    BOOL v3 = v11 == 2 && (unsigned __int16)v9 == 13171;
  }
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if (!v3) {
      return directory;
    }
  }
  else if (!v3)
  {
    return directory;
  }
  turi::fileio::get_file_status(a1, (uint64_t)&v9);
  if (v9 != 2)
  {
    if (v9)
    {
      if (v9 == 1)
      {
        v8[0] = (long long *)a1;
        turi::fileio::create_directory_or_throw(std::string const&)::$_1::operator()(v8);
      }
      BOOL v5 = __error();
      uint64_t v6 = strerror(*v5);
      std::string::basic_string[abi:ne180100]<0>(v8, v6);
      *__error() = 0;
      BOOL v7 = v8;
      turi::fileio::create_directory_or_throw(std::string const&)::$_2::operator()(&v7);
    }
    v8[0] = (long long *)a1;
    v8[1] = (long long *)&v9;
    turi::fileio::create_directory_or_throw(std::string const&)::$_0::operator()(v8);
  }
  if (v12 < 0) {
    operator delete(__p);
  }
  return directory;
}

void sub_223F40E74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::fileio::delete_path(uint64_t a1, int a2)
{
  int locale = a2;
  if (a2 != 3
    || (turi::fileio::get_file_status(a1, (uint64_t)&v22), int locale = (int)v22.__locale_, (v24 & 0x80000000) == 0))
  {
    if (locale) {
      goto LABEL_4;
    }
    return 0;
  }
  operator delete(v23);
  if (!locale) {
    return 0;
  }
LABEL_4:
  if (locale != 1) {
    return turi::fileio::delete_path_impl(a1, locale);
  }
  uint64_t instance = turi::fileio::file_handle_pool::get_instance((turi::fileio::file_handle_pool *)a1);
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v21 = *(std::string *)a1;
  }
  BOOL v6 = turi::fileio::file_handle_pool::mark_file_for_delete(instance, (uint64_t)&v21);
  BOOL v7 = v6;
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v21.__r_.__value_.__l.__data_);
    if (v7) {
      goto LABEL_12;
    }
    return turi::fileio::delete_path_impl(a1, locale);
  }
  if (!v6) {
    return turi::fileio::delete_path_impl(a1, locale);
  }
LABEL_12:
  BOOL v8 = (int *)global_logger();
  if (v8[169] <= 2)
  {
    if (cppipc::must_cancel((cppipc *)v8)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    std::string::size_type v9 = (file_logger *)global_logger();
    started = file_logger::start_stream(v9, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fs_utils.cpp", "delete_path", 332, 1);
    char v11 = pthread_getspecific(*((void *)started + 74));
    if (v11 && *((unsigned char *)v11 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11 + 2, (uint64_t)"Attempting to delete ", 21);
    }
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string v18 = *(std::string *)a1;
    }
    turi::sanitize_url((__n128 *)&v18, &__p);
    uint64_t v12 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&__p);
    uint64_t v13 = pthread_getspecific(*(void *)(v12 + 592));
    if (v13 && *((unsigned char *)v13 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13 + 2, (uint64_t)" but it is still in use. It will be deleted", 43);
    }
    std::string::size_type v14 = pthread_getspecific(*(void *)(v12 + 592));
    if (v14 && *((unsigned char *)v14 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14 + 2, (uint64_t)" when all references to the file are closed", 43);
    }
    int v15 = pthread_getspecific(*(void *)(v12 + 592));
    if (v15)
    {
      if (*((unsigned char *)v15 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v15 + *(void *)(v15[2] - 24) + 16));
        uint64_t v16 = std::locale::use_facet(&v22, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
        std::locale::~locale(&v22);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v12);
        if (*(_DWORD *)(v12 + 600) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (v20 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
  }
  return 1;
}

void sub_223F411A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::locale::~locale((std::locale *)(v26 - 64));
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(a1);
}

uint64_t turi::fileio::delete_path_impl(uint64_t a1, int a2)
{
  int data = a2;
  if (a2 != 3
    || (turi::fileio::get_file_status(a1, (uint64_t)&__p),
        int data = (int)__p.__r_.__value_.__l.__data_,
        (v35 & 0x80000000) == 0))
  {
    if (data) {
      goto LABEL_4;
    }
    return 0;
  }
  operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (!data) {
    return 0;
  }
LABEL_4:
  uint64_t v4 = (int *)global_logger();
  if (v4[169] <= 2)
  {
    if (cppipc::must_cancel((cppipc *)v4)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    BOOL v5 = (file_logger *)global_logger();
    started = file_logger::start_stream(v5, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/fs_utils.cpp", "delete_path_impl", 347, 1);
    BOOL v7 = pthread_getspecific(*((void *)started + 74));
    if (v7 && *((unsigned char *)v7 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7 + 2, (uint64_t)"Deleting ", 9);
    }
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v31, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string v31 = *(std::string *)a1;
    }
    turi::sanitize_url((__n128 *)&v31, &v32);
    uint64_t v9 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v32);
    uint64_t v10 = pthread_getspecific(*(void *)(v9 + 592));
    if (v10)
    {
      if (*((unsigned char *)v10 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v10 + *(void *)(v10[2] - 24) + 16));
        char v11 = std::locale::use_facet((const std::locale *)&__p, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v11->__vftable[2].~facet_0)(v11, 10);
        std::locale::~locale((std::locale *)&__p);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v9);
        if (*(_DWORD *)(v9 + 600) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    if (v33 < 0) {
      operator delete((void *)v32.n128_u64[0]);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v31.__r_.__value_.__l.__data_);
    }
  }
  turi::fileio::get_cache_prefix(&__p);
  MEMORY[0x22A614D20](&v30);
  std::locale::locale(&v36, &v30);
  int v12 = *(char *)(a1 + 23);
  BOOL v13 = v12 < 0;
  if (v12 >= 0) {
    std::string::size_type v14 = (char *)a1;
  }
  else {
    std::string::size_type v14 = *(char **)a1;
  }
  uint64_t v15 = *(unsigned __int8 *)(a1 + 23);
  if (v13) {
    uint64_t v15 = *(void *)(a1 + 8);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (v15 && size)
  {
    std::string::size_type v18 = size - 1;
    uint64_t v19 = v15 - 1;
    char v20 = (char *)p_p;
    while (boost::algorithm::is_iequal::operator()<char,char>(&v36, v14, v20))
    {
      ++v20;
      if (v19)
      {
        ++v14;
        std::string::size_type v21 = v18--;
        --v19;
        if (v21) {
          continue;
        }
      }
      goto LABEL_40;
    }
    BOOL v22 = 0;
  }
  else
  {
    char v20 = (char *)p_p;
LABEL_40:
    BOOL v22 = v20 == (char *)p_p + size;
  }
  std::locale::~locale(&v36);
  std::locale::~locale(&v30);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v22) {
      goto LABEL_44;
    }
LABEL_47:
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string __p = *(std::string *)a1;
    }
    boost::filesystem::detail::remove((boost::system::detail *)&__p, 0);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return 1;
  }
  if (!v22) {
    goto LABEL_47;
  }
LABEL_44:
  uint64_t instance = turi::fileio::fixed_size_cache_manager::get_instance(v23);
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v29, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v29 = *(std::string *)a1;
  }
  cache = (turi::fileio::fixed_size_cache_manager *)turi::fileio::fixed_size_cache_manager::get_cache(instance, (std::string::size_type)&v29, &__p);
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
  uint64_t v26 = turi::fileio::fixed_size_cache_manager::get_instance(cache);
  long long v28 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  if (__p.__r_.__value_.__l.__size_) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(__p.__r_.__value_.__l.__size_ + 8), 1uLL, memory_order_relaxed);
  }
  turi::fileio::fixed_size_cache_manager::free(v26, (long long **)&v28);
  if (*((void *)&v28 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v28 + 1));
  }
  if (__p.__r_.__value_.__l.__size_) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
  }
  return 1;
}

void sub_223F415CC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,std::locale a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
}

void sub_223F41674(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::locale a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::locale::~locale((std::locale *)(v26 - 72));
  std::locale::~locale(&a14);
  if (a26 < 0) {
    JUMPOUT(0x223F41694);
  }
  JUMPOUT(0x223F41698);
}

uint64_t turi::fileio::delete_path_recursive(uint64_t a1)
{
  turi::fileio::get_file_status(a1, (uint64_t)&v16);
  if (v16)
  {
    if (v16 == 1)
    {
      turi::fileio::delete_path(a1, 3);
      goto LABEL_34;
    }
    turi::fileio::get_cache_prefix(&__p);
    MEMORY[0x22A614D20](&v14);
    std::locale::locale(&v19, &v14);
    int v2 = *(char *)(a1 + 23);
    BOOL v3 = v2 < 0;
    if (v2 >= 0) {
      uint64_t v4 = (char *)a1;
    }
    else {
      uint64_t v4 = *(char **)a1;
    }
    uint64_t v5 = *(unsigned __int8 *)(a1 + 23);
    if (v3) {
      uint64_t v5 = *(void *)(a1 + 8);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (v5 && size)
    {
      std::string::size_type v8 = size - 1;
      uint64_t v9 = v5 - 1;
      uint64_t v10 = (char *)p_p;
      while (boost::algorithm::is_iequal::operator()<char,char>(&v19, v4, v10))
      {
        ++v10;
        if (v9)
        {
          ++v4;
          std::string::size_type v11 = v8--;
          --v9;
          if (v11) {
            continue;
          }
        }
        goto LABEL_23;
      }
      BOOL v12 = 0;
    }
    else
    {
      uint64_t v10 = (char *)p_p;
LABEL_23:
      BOOL v12 = v10 == (char *)p_p + size;
    }
    std::locale::~locale(&v19);
    std::locale::~locale(&v14);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if (v12) {
        goto LABEL_34;
      }
    }
    else if (v12)
    {
      goto LABEL_34;
    }
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string __p = *(std::string *)a1;
    }
    boost::filesystem::detail::remove_all((boost::system::detail *)&__p, 0);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
LABEL_34:
  if (v18 < 0) {
    operator delete(v17);
  }
  return 1;
}

void sub_223F41840(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_223F41870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,std::locale a24)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL turi::fileio::is_writable_protocol(uint64_t *a1)
{
  if ((*((char *)a1 + 23) & 0x80000000) == 0)
  {
    int v1 = *((unsigned __int8 *)a1 + 23);
    if (*((unsigned char *)a1 + 23))
    {
      if (v1 != 4)
      {
        if (v1 != 5) {
          return 0;
        }
        return *(_DWORD *)a1 == 1751343459 && *((unsigned char *)a1 + 4) == 101;
      }
      if (*(_DWORD *)a1 != 1701603686) {
        return 0;
      }
    }
    return 1;
  }
  uint64_t v2 = a1[1];
  if (!v2 || v2 == 4 && *(_DWORD *)*a1 == 1701603686) {
    return 1;
  }
  if (v2 != 5) {
    return 0;
  }
  a1 = (uint64_t *)*a1;
  return *(_DWORD *)a1 == 1751343459 && *((unsigned char *)a1 + 4) == 101;
}

BOOL turi::fileio::is_web_protocol(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  BOOL is_writable_protocol = turi::fileio::is_writable_protocol((uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return !is_writable_protocol;
}

__n128 turi::fileio::remove_protocol@<Q0>(const std::string *__s@<X0>, std::string *a2@<X8>)
{
  if (SHIBYTE(__s->__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v5 = (const std::string *)__s->__r_.__value_.__r.__words[0];
    uint64_t size = __s->__r_.__value_.__l.__size_;
  }
  else
  {
    uint64_t size = HIBYTE(__s->__r_.__value_.__r.__words[2]);
    uint64_t v5 = __s;
  }
  if (size >= 3)
  {
    BOOL v6 = (char *)v5 + size;
    BOOL v7 = (std::string *)v5;
    do
    {
      std::string::size_type v8 = (char *)memchr(v7, 58, size - 2);
      if (!v8) {
        break;
      }
      if (*(_WORD *)v8 == 12090 && v8[2] == 47)
      {
        if (v8 != v6 && v8 - (char *)v5 != -1)
        {
          std::string::basic_string(a2, __s, v8 - (char *)v5 + 3, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v11);
          return result;
        }
        break;
      }
      BOOL v7 = (std::string *)(v8 + 1);
      uint64_t size = v6 - (char *)v7;
    }
    while (v6 - (char *)v7 >= 3);
  }
  __n128 result = *(__n128 *)&__s->__r_.__value_.__l.__data_;
  *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)&__s->__r_.__value_.__l.__data_;
  a2->__r_.__value_.__r.__words[2] = __s->__r_.__value_.__r.__words[2];
  __s->__r_.__value_.__l.__size_ = 0;
  __s->__r_.__value_.__r.__words[2] = 0;
  __s->__r_.__value_.__r.__words[0] = 0;
  return result;
}

void turi::fileio::get_filename(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v3, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v3 = *(std::string *)a1;
  }
  boost::filesystem::path::filename((boost::filesystem::path *)&v3, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(a2, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *a2 = __p;
  }
  if (SHIBYTE(v3.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v3.__r_.__value_.__l.__data_);
  }
}

void sub_223F41B54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void turi::fileio::get_dirname(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string v3 = a2;
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v16, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v16 = *(std::string *)a1;
  }
  turi::fileio::get_protocol(&v16, (std::string::size_type)v17);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __s = *(std::string *)a1;
  }
  turi::fileio::remove_protocol(&__s, &v15);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s.__r_.__value_.__l.__data_);
  }
  if ((v18 & 0x80u) == 0) {
    std::string::size_type v4 = v18;
  }
  else {
    std::string::size_type v4 = (std::string::size_type)v17[1];
  }
  if (v4)
  {
    uint64_t v5 = (v18 & 0x80u) == 0 ? (const std::string::value_type *)v17 : (const std::string::value_type *)v17[0];
    std::string::append(v3, v5, v4);
    std::string::basic_string[abi:ne180100]<0>(&__p, "://");
    BOOL v6 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
       ? &__p
       : (std::string *)__p.__r_.__value_.__r.__words[0];
    std::string::size_type v7 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
       ? HIBYTE(__p.__r_.__value_.__r.__words[2])
       : __p.__r_.__value_.__l.__size_;
    std::string::append(v3, (const std::string::value_type *)v6, v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v12, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
  }
  else {
    std::string v12 = v15;
  }
  boost::filesystem::path::parent_path((boost::filesystem::path *)&v12, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(v3, (const std::string::value_type *)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    if (!v10) {
      goto LABEL_48;
    }
  }
  else
  {
    std::string::size_type v10 = HIBYTE(v3->__r_.__value_.__r.__words[2]);
    if (!*((unsigned char *)&v3->__r_.__value_.__s + 23)) {
      goto LABEL_48;
    }
  }
  if (*std::string::at(v3, v10 - 1) == 47)
  {
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v11 = v3->__r_.__value_.__l.__size_ - 1;
      v3->__r_.__value_.__l.__size_ = v11;
      std::string v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
    }
    else
    {
      uint64_t v11 = HIBYTE(v3->__r_.__value_.__r.__words[2]) - 1;
      *((unsigned char *)&v3->__r_.__value_.__s + 23) = v11 & 0x7F;
    }
    v3->__r_.__value_.__s.__data_[v11] = 0;
  }
LABEL_48:
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  if ((char)v18 < 0) {
    operator delete(v17[0]);
  }
}

void sub_223F41DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v33 - 17) < 0) {
    operator delete(*(void **)(v33 - 40));
  }
  if (*(char *)(v32 + 23) < 0) {
    operator delete(*(void **)v32);
  }
  _Unwind_Resume(exception_object);
}

double turi::fileio::make_relative_path@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  void __dst[3] = *MEMORY[0x263EF8340];
  turi::fileio::convert_to_generic(a1, (std::string *)&__v);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)&__v.__first_;
  *(void *)(a1 + 16) = __v.__end_;
  turi::fileio::convert_to_generic(a2, (std::string *)&__v);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  *(_OWORD *)a2 = *(_OWORD *)&__v.__first_;
  *(void *)(a2 + 16) = __v.__end_;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v25, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v25 = *(std::string *)a2;
  }
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v24, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v24 = *(std::string *)a1;
  }
  turi::fileio::get_protocol(&v24, (std::string::size_type)&__v);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v20, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v20 = *(std::string *)a2;
  }
  turi::fileio::get_protocol(&v20, (std::string::size_type)&__p);
  if (SHIBYTE(__v.__end_) >= 0) {
    std::__split_buffer<std::string>::pointer end_high = (std::__split_buffer<std::string>::pointer)HIBYTE(__v.__end_);
  }
  else {
    std::__split_buffer<std::string>::pointer end_high = __v.__begin_;
  }
  std::__split_buffer<std::string>::pointer v7 = (std::__split_buffer<std::string>::pointer)HIBYTE(v23);
  int v8 = SHIBYTE(v23);
  if (v23 < 0) {
    std::__split_buffer<std::string>::pointer v7 = v22;
  }
  if (end_high != v7)
  {
    BOOL v15 = 1;
    if ((SHIBYTE(v23) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_40;
  }
  if (v23 >= 0) {
    p_p = (unsigned __int8 *)&__p;
  }
  else {
    p_p = (unsigned __int8 *)__p;
  }
  if ((HIBYTE(__v.__end_) & 0x80) != 0)
  {
    BOOL v15 = memcmp(__v.__first_, p_p, (size_t)__v.__begin_) != 0;
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_40;
  }
  if (!HIBYTE(__v.__end_))
  {
    BOOL v15 = 0;
    if ((SHIBYTE(v23) & 0x80000000) == 0) {
      goto LABEL_32;
    }
LABEL_40:
    operator delete(__p);
    goto LABEL_32;
  }
  uint64_t v10 = HIBYTE(__v.__end_) - 1;
  p_v = &__v;
  do
  {
    int first_low = LOBYTE(p_v->__first_);
    p_v = (std::__split_buffer<std::string> *)((char *)p_v + 1);
    int v12 = first_low;
    int v14 = *p_p++;
    BOOL v15 = v12 != v14;
  }
  while (v12 == v14 && v10-- != 0);
  if (SHIBYTE(v23) < 0) {
    goto LABEL_40;
  }
LABEL_32:
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__v.__end_) < 0) {
    operator delete(__v.__first_);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v24.__r_.__value_.__l.__data_);
    if (v15) {
      goto LABEL_38;
    }
LABEL_42:
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string __s = *(std::string *)a1;
    }
    turi::fileio::remove_protocol(&__s, (std::string *)&__v);
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)&__v.__first_;
    *(void *)(a1 + 16) = __v.__end_;
    HIBYTE(__v.__end_) = 0;
    LOBYTE(__v.__first_) = 0;
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__s.__r_.__value_.__l.__data_);
    }
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string v18 = *(std::string *)a2;
    }
    turi::fileio::remove_protocol(&v18, (std::string *)&__v);
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(_OWORD *)a2 = *(_OWORD *)&__v.__first_;
    *(void *)(a2 + 16) = __v.__end_;
    HIBYTE(__v.__end_) = 0;
    LOBYTE(__v.__first_) = 0;
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
    if (*(char *)(a1 + 23) < 0)
    {
      if (*(void *)(a1 + 8)) {
        goto LABEL_63;
      }
    }
    else if (*(unsigned char *)(a1 + 23))
    {
      goto LABEL_63;
    }
    MEMORY[0x22A614700](a1, "/");
LABEL_63:
    std::string __p = 0;
    BOOL v22 = 0;
    uint64_t v23 = 0;
    __v.__first_ = (std::__split_buffer<std::string>::pointer)"/";
    __v.__begin_ = (std::__split_buffer<std::string>::pointer)"";
    boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<boost::iterator_range<char const*>>(__dst, (uint64_t)&__v);
    boost::algorithm::split<std::vector<std::string>,std::string,boost::algorithm::detail::is_any_ofF<char>>((uint64_t)&__p, a1, __dst, 1);
  }
  if (!v15) {
    goto LABEL_42;
  }
LABEL_38:
  double result = *(double *)&v25.__r_.__value_.__l.__data_;
  *a3 = v25;
  return result;
}

void sub_223F425D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57)
{
  if (a57 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *boost::algorithm::join<std::vector<std::string>,char [2]>@<X0>(char *__s@<X1>, uint64_t *result@<X0>, uint64_t a3@<X8>)
{
  uint64_t v5 = *result;
  uint64_t v6 = result[1];
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = 0;
  if (v5 == v6) {
    goto LABEL_10;
  }
  int v7 = *(char *)(v5 + 23);
  if (v7 >= 0) {
    int v8 = (std::string::value_type *)v5;
  }
  else {
    int v8 = *(std::string::value_type **)v5;
  }
  if (v7 >= 0) {
    std::string::size_type v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    std::string::size_type v9 = *(void *)(v5 + 8);
  }
  for (double result = (uint64_t *)std::string::__insert_with_size<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>((std::string *)a3, a3, v8, &v8[v9], v9);
        ;
        double result = (uint64_t *)std::string::__insert_with_size<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>((std::string *)a3, v16, v18, &v18[v19], v19))
  {
    v5 += 24;
LABEL_10:
    if (v5 == v6) {
      break;
    }
    uint64_t v10 = *(unsigned __int8 *)(a3 + 23);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = a3;
    }
    else {
      uint64_t v11 = *(void *)a3;
    }
    if ((v10 & 0x80u) != 0) {
      uint64_t v10 = *(void *)(a3 + 8);
    }
    uint64_t v12 = v11 + v10;
    size_t v13 = strlen(__s);
    std::string::__insert_with_size<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>((std::string *)a3, v12, __s, &__s[v13], v13);
    uint64_t v14 = *(unsigned __int8 *)(a3 + 23);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = a3;
    }
    else {
      uint64_t v15 = *(void *)a3;
    }
    if ((v14 & 0x80u) != 0) {
      uint64_t v14 = *(void *)(a3 + 8);
    }
    uint64_t v16 = v15 + v14;
    int v17 = *(char *)(v5 + 23);
    if (v17 >= 0) {
      std::string v18 = (std::string::value_type *)v5;
    }
    else {
      std::string v18 = *(std::string::value_type **)v5;
    }
    if (v17 >= 0) {
      std::string::size_type v19 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      std::string::size_type v19 = *(void *)(v5 + 8);
    }
  }
  return result;
}

void sub_223F4283C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

void turi::fileio::make_absolute_path(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  turi::fileio::convert_to_generic(a1, &v31);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  *(std::string *)a1 = v31;
  turi::fileio::convert_to_generic(a2, &v31);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  uint64_t v6 = 0;
  *(std::string *)a2 = v31;
  int v7 = *(char *)(a1 + 23);
  size_t v8 = *(void *)(a1 + 8);
  if (v7 >= 0) {
    std::string::size_type v9 = (char *)a1;
  }
  else {
    std::string::size_type v9 = *(char **)a1;
  }
  size_t v10 = *(unsigned __int8 *)(a1 + 23);
  if (v7 >= 0) {
    uint64_t v11 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v11 = *(void *)(a1 + 8);
  }
  while (-v11 != v6 && v6 != -3)
  {
    int v12 = v9[v11 - 1 + v6];
    int v13 = asc_22468A6A6[v6-- + 2];
    if (v12 != v13) {
      goto LABEL_16;
    }
  }
  if (v6 == -3) {
    goto LABEL_25;
  }
LABEL_16:
  uint64_t v14 = 0;
  uint64_t v15 = (uint64_t)&v9[v11 - 1];
  while (-v11 != v14 && v14 != -1)
  {
    int v16 = *(unsigned __int8 *)(v15 + v14);
    int v17 = asc_224681862[v14--];
    if (v16 != v17) {
      goto LABEL_25;
    }
  }
  if (v14 == -1)
  {
    std::string::basic_string(&v31, (const std::string *)a1, 0, v11 - 1, (std::allocator<char> *)&v32);
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)&v31.__r_.__value_.__l.__data_;
    unint64_t v18 = v31.__r_.__value_.__r.__words[2];
    *(void *)(a1 + 16) = *((void *)&v31.__r_.__value_.__l + 2);
    size_t v10 = HIBYTE(v18);
    size_t v8 = *(void *)(a1 + 8);
    LOBYTE(v7) = v10;
  }
LABEL_25:
  if ((v7 & 0x80u) == 0) {
    size_t v19 = v10;
  }
  else {
    size_t v19 = v8;
  }
  std::string v20 = &v31;
  std::string::basic_string[abi:ne180100]((uint64_t)&v31, v19 + 1);
  if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string v20 = (std::string *)v31.__r_.__value_.__r.__words[0];
  }
  if (v19)
  {
    if (*(char *)(a1 + 23) >= 0) {
      std::string::size_type v21 = (const void *)a1;
    }
    else {
      std::string::size_type v21 = *(const void **)a1;
    }
    memmove(v20, v21, v19);
  }
  *(_WORD *)((char *)&v20->__r_.__value_.__l.__data_ + v19) = 47;
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  *(std::string *)a1 = v31;
  uint64_t v22 = *(unsigned __int8 *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0)
  {
    if (!*(void *)(a2 + 8))
    {
LABEL_58:
      *(_OWORD *)a3 = *(_OWORD *)a2;
      *(void *)(a3 + 16) = *(void *)(a2 + 16);
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)a2 = 0;
      return;
    }
  }
  else if (!*(unsigned char *)(a2 + 23))
  {
    goto LABEL_58;
  }
  uint64_t v23 = *(unsigned char **)a2;
  if ((v22 & 0x80u) != 0) {
    uint64_t v22 = *(void *)(a2 + 8);
  }
  else {
    uint64_t v23 = (unsigned char *)a2;
  }
  if (v22)
  {
    uint64_t v24 = v22 - 1;
    std::string v25 = v23;
    while (1)
    {
      uint64_t v26 = 0;
      while (v25[v26] == asc_22468A6A6[v26])
      {
        uint64_t v27 = v26 + 1;
        if (v24 != v26 && v26++ != 2) {
          continue;
        }
        std::string v29 = &asc_22468A6A6[v27];
        std::locale v30 = &v25[v27];
        goto LABEL_53;
      }
      std::string v29 = &asc_22468A6A6[v26];
      std::locale v30 = &v25[v26];
LABEL_53:
      if (v29 == "") {
        break;
      }
      ++v25;
      --v24;
      if (v25 == &v23[v22]) {
        goto LABEL_57;
      }
    }
    if (v25 != v30) {
      goto LABEL_58;
    }
LABEL_57:
    if (*v23 == 47) {
      goto LABEL_58;
    }
  }
  std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)a1, (const void **)a2, a3);
}

void turi::fileio::glob_to_regex(uint64_t a1@<X0>, std::regex_traits<char> *a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  char v3 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  std::string::size_type size = __p.__r_.__value_.__l.__size_;
  std::string::size_type v4 = __p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  std::string::size_type v7 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v8 = __p.__r_.__value_.__l.__size_;
  }
  if (v8)
  {
    std::string::size_type v9 = p_p;
    while (1)
    {
      int v10 = v9->__r_.__value_.__s.__data_[0];
      std::string::size_type v9 = (std::string *)((char *)v9 + 1);
      if (v10 == 47) {
        break;
      }
      p_p = (std::string *)((char *)p_p + 1);
      if (!--v8) {
        goto LABEL_16;
      }
    }
    size_t v19 = "/";
    std::string v20 = "";
    boost::algorithm::detail::find_format_all_impl2<std::string,boost::algorithm::detail::first_finderF<char const*,boost::algorithm::is_equal>,boost::algorithm::detail::const_formatF<boost::iterator_range<char const*>>,boost::iterator_range<std::__wrap_iter<char *>>,boost::iterator_range<char const*>>((uint64_t)&__p, (uint64_t *)&v19, "\\/", "", p_p, &p_p->__r_.__value_.__s.__data_[1], "\\/", "");
    std::string::size_type v7 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
    std::string::size_type v4 = __p.__r_.__value_.__r.__words[0];
    char v3 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
LABEL_16:
  if (v3 >= 0) {
    uint64_t v11 = &__p;
  }
  else {
    uint64_t v11 = (std::string *)v4;
  }
  if (v3 >= 0) {
    std::string::size_type v12 = v7;
  }
  else {
    std::string::size_type v12 = size;
  }
  if (v12)
  {
    int v13 = v11;
    while (1)
    {
      int v14 = v13->__r_.__value_.__s.__data_[0];
      int v13 = (std::string *)((char *)v13 + 1);
      if (v14 == 63) {
        break;
      }
      uint64_t v11 = (std::string *)((char *)v11 + 1);
      if (!--v12) {
        goto LABEL_28;
      }
    }
    size_t v19 = "?";
    std::string v20 = "";
    boost::algorithm::detail::find_format_all_impl2<std::string,boost::algorithm::detail::first_finderF<char const*,boost::algorithm::is_equal>,boost::algorithm::detail::const_formatF<boost::iterator_range<char const*>>,boost::iterator_range<std::__wrap_iter<char *>>,boost::iterator_range<char const*>>((uint64_t)&__p, (uint64_t *)&v19, ".", "", v11, &v11->__r_.__value_.__s.__data_[1], ".", "");
    std::string::size_type v7 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
    std::string::size_type v4 = __p.__r_.__value_.__r.__words[0];
    char v3 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
LABEL_28:
  if (v3 >= 0) {
    uint64_t v15 = &__p;
  }
  else {
    uint64_t v15 = (std::string *)v4;
  }
  if (v3 < 0) {
    std::string::size_type v7 = size;
  }
  if (v7)
  {
    int v16 = v15;
    while (1)
    {
      int v17 = v16->__r_.__value_.__s.__data_[0];
      int v16 = (std::string *)((char *)v16 + 1);
      if (v17 == 42) {
        break;
      }
      uint64_t v15 = (std::string *)((char *)v15 + 1);
      if (!--v7) {
        goto LABEL_39;
      }
    }
    size_t v19 = "*";
    std::string v20 = "";
    boost::algorithm::detail::find_format_all_impl2<std::string,boost::algorithm::detail::first_finderF<char const*,boost::algorithm::is_equal>,boost::algorithm::detail::const_formatF<boost::iterator_range<char const*>>,boost::iterator_range<std::__wrap_iter<char *>>,boost::iterator_range<char const*>>((uint64_t)&__p, (uint64_t *)&v19, ".*", "", v15, &v15->__r_.__value_.__s.__data_[1], ".*", "");
  }
LABEL_39:
  std::basic_regex<char,std::regex_traits<char>>::basic_regex[abi:ne180100]<std::char_traits<char>,std::allocator<char>>(a2, (uint64_t)&__p, 0);
}

void sub_223F42D54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::fileio::split_path_elements(uint64_t a1@<X0>, _DWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  a3[1] = 0u;
  a3[2] = 0u;
  *a3 = 0u;
  if (*a2 == 2)
  {
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string v10 = *(std::string *)a1;
    }
    v11.__r_.__value_.__r.__words[0] = (std::string::size_type)"";
    std::pair<std::string,std::string>::operator=[abi:ne180100]<std::string,char const*,(void *)0>((uint64_t)a3, (long long *)&v10);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v5 = (void *)v10.__r_.__value_.__r.__words[0];
LABEL_25:
      operator delete(v5);
    }
  }
  else
  {
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v8, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string v8 = *(std::string *)a1;
    }
    turi::fileio::get_dirname((uint64_t)&v8, &v9);
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v6, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string v6 = *(std::string *)a1;
    }
    turi::fileio::get_filename((uint64_t)&v6, &__p);
    std::string v10 = v9;
    memset(&v9, 0, sizeof(v9));
    std::string v11 = __p;
    memset(&__p, 0, sizeof(__p));
    std::pair<std::string,std::string>::operator=[abi:ne180100]((uint64_t)a3, (long long *)&v10);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v11.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v6.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v5 = (void *)v8.__r_.__value_.__r.__words[0];
      goto LABEL_25;
    }
  }
}

void sub_223F42F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  std::pair<std::string,std::string>::~pair(v29);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string,std::string>::operator=[abi:ne180100]<std::string,char const*,(void *)0>(uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  MEMORY[0x22A614700](a1 + 24, *((void *)a2 + 3));
  return a1;
}

uint64_t std::pair<std::string,std::string>::operator=[abi:ne180100](uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  uint64_t v5 = (void **)(a1 + 24);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*v5);
  }
  long long v6 = *(long long *)((char *)a2 + 24);
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = *((void *)a2 + 5);
  *(_OWORD *)uint64_t v5 = v6;
  *((unsigned char *)a2 + 47) = 0;
  *((unsigned char *)a2 + 24) = 0;
  return a1;
}

void turi::fileio::get_glob_files(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v48, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v48 = *(std::string *)a1;
  }
  MEMORY[0x22A614D20](&v37);
  LODWORD(v49.__r_.__value_.__l.__data_) = 0x4000;
  std::locale::locale((std::locale *)&v49.__r_.__value_.__r.__words[1], (const std::locale *)&v37);
  boost::algorithm::trim_if<std::string,boost::algorithm::detail::is_classifiedF>(&v48, (std::locale *)&v49);
  std::locale::~locale((std::locale *)&v49.__r_.__value_.__r.__words[1]);
  std::locale::~locale((std::locale *)&v37);
  turi::fileio::get_file_status((uint64_t)&v48, (uint64_t)&v45);
  if (v45 == 1)
  {
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v49, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string v49 = *(std::string *)a1;
    }
    LODWORD(v5CoreML::Specification::Identity::New(this, 0) = 1;
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
    v37.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    v37.__r_.__value_.__s.__data_[8] = 0;
    long long v4 = (std::string *)operator new(0x20uLL);
    *a2 = (uint64_t)v4;
    a2[1] = (uint64_t)v4;
    a2[2] = (uint64_t)&v4[1].__r_.__value_.__l.__size_;
    a2[1] = (uint64_t)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<std::string,turi::fileio::file_status>>,std::pair<std::string,turi::fileio::file_status> const*,std::pair<std::string,turi::fileio::file_status> const*,std::pair<std::string,turi::fileio::file_status>*>((uint64_t)(a2 + 2), (long long *)&v49, v51, v4);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v5 = (void *)v49.__r_.__value_.__r.__words[0];
LABEL_53:
      operator delete(v5);
    }
  }
  else
  {
    if (v45 == 3)
    {
      v49.__r_.__value_.__r.__words[0] = (std::string::size_type)&v45;
      turi::fileio::get_glob_files(std::string const&)::$_0::operator()();
    }
    turi::fileio::split_path_elements((uint64_t)&v48, &v45, &v41);
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    if (v44 < 0)
    {
      if (v43[1]) {
LABEL_8:
      }
        turi::fileio::glob_to_regex((uint64_t)v43, (std::regex_traits<char> *)&v37);
    }
    else if (v44)
    {
      goto LABEL_8;
    }
    turi::fileio::get_directory_listing((uint64_t)&v48, __p);
    long long v6 = (char *)__p[0];
    for (uint64_t i = (char *)__p[1]; v6 != i; v6 += 32)
    {
      if (v6[23] < 0)
      {
        std::string::__init_copy_ctor_external(&v37, *(const std::string::value_type **)v6, *((void *)v6 + 1));
      }
      else
      {
        long long v8 = *(_OWORD *)v6;
        v37.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v8;
      }
      int v9 = *((_DWORD *)v6 + 6);
      int v38 = v9;
      if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external(&v39, v37.__r_.__value_.__l.__data_, v37.__r_.__value_.__l.__size_);
        int v9 = v38;
      }
      else
      {
        std::string v39 = v37;
      }
      int v40 = v9;
      unint64_t v10 = a2[1];
      unint64_t v11 = a2[2];
      if (v10 >= v11)
      {
        uint64_t v13 = (uint64_t)(v10 - *a2) >> 5;
        unint64_t v14 = v13 + 1;
        if ((unint64_t)(v13 + 1) >> 59) {
          std::vector<float>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v15 = v11 - *a2;
        if (v15 >> 4 > v14) {
          unint64_t v14 = v15 >> 4;
        }
        if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v16 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v16 = v14;
        }
        *(void *)&v51[0] = a2 + 2;
        int v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<turi::flexible_type,turi::flexible_type>>>((uint64_t)(a2 + 2), v16);
        std::string::size_type v18 = (std::string::size_type)&v17[32 * v13];
        v49.__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
        v49.__r_.__value_.__l.__size_ = v18;
        char v50 = &v17[32 * v19];
        long long v20 = *(_OWORD *)&v39.__r_.__value_.__l.__data_;
        *(void *)(v18 + 16) = *((void *)&v39.__r_.__value_.__l + 2);
        *(_OWORD *)std::string::size_type v18 = v20;
        memset(&v39, 0, sizeof(v39));
        *(_DWORD *)(v18 + 24) = v40;
        v49.__r_.__value_.__r.__words[2] = v18 + 32;
        std::vector<std::pair<std::string,turi::fileio::file_status>>::__swap_out_circular_buffer(a2, &v49);
        uint64_t v21 = a2[1];
        std::__split_buffer<std::pair<std::string,unsigned long>>::~__split_buffer((uint64_t)&v49);
        int v22 = SHIBYTE(v39.__r_.__value_.__r.__words[2]);
        a2[1] = v21;
        if (v22 < 0) {
          operator delete(v39.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        long long v12 = *(_OWORD *)&v39.__r_.__value_.__l.__data_;
        *(void *)(v10 + 16) = *((void *)&v39.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v10 = v12;
        memset(&v39, 0, sizeof(v39));
        *(_DWORD *)(v10 + 24) = v40;
        a2[1] = v10 + 32;
      }
      if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v37.__r_.__value_.__l.__data_);
      }
    }
    v49.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    std::vector<std::pair<std::string,unsigned long>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v49);
    unint64_t v23 = a2[1];
    if (v23 == *a2)
    {
      if (*(char *)(a1 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v37, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
        unint64_t v23 = a2[1];
      }
      else
      {
        std::string v37 = *(std::string *)a1;
      }
      int v38 = 0;
      unint64_t v24 = a2[2];
      if (v23 >= v24)
      {
        uint64_t v26 = (uint64_t)(v23 - *a2) >> 5;
        unint64_t v27 = v26 + 1;
        if ((unint64_t)(v26 + 1) >> 59) {
          std::vector<float>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v28 = v24 - *a2;
        if (v28 >> 4 > v27) {
          unint64_t v27 = v28 >> 4;
        }
        if ((unint64_t)v28 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v29 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v29 = v27;
        }
        *(void *)&v51[0] = a2 + 2;
        std::locale v30 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<turi::flexible_type,turi::flexible_type>>>((uint64_t)(a2 + 2), v29);
        std::string::size_type v31 = (std::string::size_type)&v30[32 * v26];
        v49.__r_.__value_.__r.__words[0] = (std::string::size_type)v30;
        v49.__r_.__value_.__l.__size_ = v31;
        char v50 = &v30[32 * v32];
        long long v33 = *(_OWORD *)&v37.__r_.__value_.__l.__data_;
        *(void *)(v31 + 16) = *((void *)&v37.__r_.__value_.__l + 2);
        *(_OWORD *)std::string::size_type v31 = v33;
        memset(&v37, 0, sizeof(v37));
        *(_DWORD *)(v31 + 24) = v38;
        v49.__r_.__value_.__r.__words[2] = v31 + 32;
        std::vector<std::pair<std::string,turi::fileio::file_status>>::__swap_out_circular_buffer(a2, &v49);
        uint64_t v34 = a2[1];
        std::__split_buffer<std::pair<std::string,unsigned long>>::~__split_buffer((uint64_t)&v49);
        int v35 = SHIBYTE(v37.__r_.__value_.__r.__words[2]);
        a2[1] = v34;
        if (v35 < 0) {
          operator delete(v37.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        long long v25 = *(_OWORD *)&v37.__r_.__value_.__l.__data_;
        *(void *)(v23 + 16) = *((void *)&v37.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v23 = v25;
        memset(&v37, 0, sizeof(v37));
        *(_DWORD *)(v23 + 24) = v38;
        a2[1] = v23 + 32;
      }
    }
    if (v44 < 0) {
      operator delete(v43[0]);
    }
    if (v42 < 0)
    {
      uint64_t v5 = (void *)v41;
      goto LABEL_53;
    }
  }
  if (v47 < 0) {
    operator delete(v46);
  }
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
}

void sub_223F437AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,uint64_t a24,std::locale a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  std::vector<std::pair<std::string,unsigned long>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a25);
  std::pair<std::string,std::string>::~pair((uint64_t)&a43);
  if (a55 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v55 - 217) < 0) {
    operator delete(*(void **)(v55 - 240));
  }
  _Unwind_Resume(a1);
}

void std::basic_regex<char,std::regex_traits<char>>::~basic_regex(std::locale *this)
{
  int locale = (std::__shared_weak_count *)this[6].__locale_;
  if (locale) {
    std::__shared_weak_count::__release_shared[abi:ne180100](locale);
  }
  std::locale::~locale(this);
}

uint64_t turi::fileio::get_io_parallelism_id(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __s = *(std::string *)a1;
  }
  turi::fileio::get_protocol(&__s, (std::string::size_type)&v19);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v17, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
  }
  else {
    std::string v17 = v19;
  }
  BOOL is_web_protocol = turi::fileio::is_web_protocol((uint64_t)&v17);
  if (is_web_protocol) {
    goto LABEL_10;
  }
  if ((SHIBYTE(v19.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (HIBYTE(v19.__r_.__value_.__r.__words[2]) != 2)
    {
      if (HIBYTE(v19.__r_.__value_.__r.__words[2]) == 4)
      {
        char v3 = &v19;
LABEL_20:
        BOOL v4 = LODWORD(v3->__r_.__value_.__l.__data_) == 1936090216;
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    if (LOWORD(v19.__r_.__value_.__l.__data_) != 13171) {
      goto LABEL_22;
    }
LABEL_10:
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
    goto LABEL_25;
  }
  if (v19.__r_.__value_.__l.__size_ == 2 && *(_WORD *)v19.__r_.__value_.__l.__data_ == 13171) {
    goto LABEL_10;
  }
  if (v19.__r_.__value_.__l.__size_ == 4)
  {
    char v3 = (std::string *)v19.__r_.__value_.__r.__words[0];
    goto LABEL_20;
  }
LABEL_22:
  BOOL v4 = 0;
LABEL_23:
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v17.__r_.__value_.__l.__data_);
    if (v4) {
      goto LABEL_25;
    }
  }
  else if (v4)
  {
LABEL_25:
    uint64_t v1 = -1;
    goto LABEL_55;
  }
  if ((SHIBYTE(v19.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) == 5)
    {
      uint64_t v5 = &v19;
      goto LABEL_32;
    }
LABEL_54:
    uint64_t v1 = 0;
    goto LABEL_55;
  }
  if (v19.__r_.__value_.__l.__size_ != 5) {
    goto LABEL_54;
  }
  uint64_t v5 = (std::string *)v19.__r_.__value_.__r.__words[0];
LABEL_32:
  int data = (int)v5->__r_.__value_.__l.__data_;
  int v7 = v5->__r_.__value_.__s.__data_[4];
  if (data != 1751343459 || v7 != 101) {
    goto LABEL_54;
  }
  uint64_t instance = turi::fileio::fixed_size_cache_manager::get_instance((turi::fileio::fixed_size_cache_manager *)is_web_protocol);
  if (*(char *)(v1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)v1, *(void *)(v1 + 8));
  }
  else {
    std::string v14 = *(std::string *)v1;
  }
  turi::fileio::fixed_size_cache_manager::get_cache(instance, (std::string::size_type)&v14, &v15);
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  if (v15)
  {
    if (*(char *)(v15 + 79) < 0)
    {
      if (*(void *)(v15 + 64))
      {
        std::string::__init_copy_ctor_external(&v13, *(const std::string::value_type **)(v15 + 56), *(void *)(v15 + 64));
LABEL_49:
        turi::get_temp_directories(&v12);
      }
    }
    else if (*(unsigned char *)(v15 + 79))
    {
      std::string v13 = *(std::string *)(v15 + 56);
      goto LABEL_49;
    }
    char v10 = 0;
    uint64_t v1 = -1;
  }
  else
  {
    char v10 = 1;
  }
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  if (v10) {
    goto LABEL_54;
  }
LABEL_55:
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v1;
}

void sub_223F43D58(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,std::__shared_weak_count *a28)
{
  if (a28) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a28);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x223F43D30);
}

void sub_223F43DB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 25) < 0) {
    operator delete(*(void **)(v28 - 48));
  }
  _Unwind_Resume(exception_object);
}

BOOL turi::fileio::try_to_open_file(uint64_t a1)
{
  v11[19] = *MEMORY[0x263EF8340];
  turi::fileio::get_file_status(a1, (uint64_t)&v6);
  int data = (int)v6.__r_.__value_.__l.__data_;
  if (v7 < 0) {
    operator delete((void *)v6.__r_.__value_.__l.__size_);
  }
  if (data != 1) {
    return 0;
  }
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v5, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v5 = *(std::string *)a1;
  }
  turi::general_ifstream::general_ifstream(&v6, (uint64_t)&v5);
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v5.__r_.__value_.__l.__data_);
  }
  BOOL v3 = (*(_DWORD *)&v8[*(void *)(v6.__r_.__value_.__r.__words[0] - 24)] & 5) == 0;
  v6.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D758EF8;
  v11[0] = &unk_26D758F20;
  if (v10 < 0) {
    operator delete(v9);
  }
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)&v6.__r_.__value_.__r.__words[2]);
  MEMORY[0x22A614E30](v11);
  return v3;
}

uint64_t turi::fileio::copy(char *a1, char *a2)
{
  BOOL v3 = a1;
  v18[19] = *MEMORY[0x263EF8340];
  if (a1[23] < 0) {
    BOOL v3 = *(char **)a1;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, v3);
  turi::general_ifstream::general_ifstream(v15, (uint64_t)__p);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  if (a2[23] < 0) {
    a2 = *(char **)a2;
  }
  std::string::basic_string[abi:ne180100]<0>(v6, a2);
  turi::general_ofstream::general_ofstream(&v10, (uint64_t)v6);
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  std::vector<char>::vector(&v5, 0x100000uLL);
  while ((*((unsigned char *)&v15[1].__r_.__value_.__r.__words[1] + *(void *)(v15[0].__r_.__value_.__r.__words[0] - 24)) & 5) == 0)
  {
    std::istream::read();
    std::ostream::write();
  }
  if (v5.__begin_)
  {
    v5.__end_ = v5.__begin_;
    operator delete(v5.__begin_);
  }
  char v10 = &unk_26D75C318;
  std::string v14 = &unk_26D75C340;
  if (v13 < 0) {
    operator delete(v12);
  }
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer((uint64_t)&v11);
  MEMORY[0x22A614E30](&v14);
  v15[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D758EF8;
  v18[0] = &unk_26D758F20;
  if (v17 < 0) {
    operator delete(v16);
  }
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)&v15[0].__r_.__value_.__r.__words[2]);
  return MEMORY[0x22A614E30](v18);
}

void sub_223F441C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  turi::general_ofstream::~general_ofstream((turi::general_ofstream *)&a18);
  turi::general_ifstream::~general_ifstream((turi::general_ifstream *)&a66);
  _Unwind_Resume(a1);
}

BOOL turi::fileio::change_file_mode(uint64_t a1)
{
  turi::fileio::get_file_status(a1, (uint64_t)&v22);
  if (!v22) {
    goto LABEL_15;
  }
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __s = *(std::string *)a1;
  }
  turi::fileio::get_protocol(&__s, (std::string::size_type)&v19);
  if ((char)v21 < 0)
  {
    BOOL v2 = v20 == 4 && *(_DWORD *)v19 == 1936090216;
    operator delete(v19);
  }
  else
  {
    BOOL v2 = v21 == 4 && v19 == 1936090216;
  }
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if (v2) {
      goto LABEL_15;
    }
  }
  else if (v2)
  {
LABEL_15:
    BOOL v3 = 0;
    goto LABEL_16;
  }
  turi::fileio::get_cache_prefix(&v19);
  MEMORY[0x22A614D20](&v17);
  std::locale::locale(&v25, &v17);
  int v5 = *(char *)(a1 + 23);
  BOOL v6 = v5 < 0;
  if (v5 >= 0) {
    char v7 = (char *)a1;
  }
  else {
    char v7 = *(char **)a1;
  }
  uint64_t v8 = *(unsigned __int8 *)(a1 + 23);
  if (v6) {
    uint64_t v8 = *(void *)(a1 + 8);
  }
  if ((v21 & 0x80u) == 0) {
    char v9 = (char *)&v19;
  }
  else {
    char v9 = (char *)v19;
  }
  if ((v21 & 0x80u) == 0) {
    uint64_t v10 = v21;
  }
  else {
    uint64_t v10 = v20;
  }
  if (v8 && v10)
  {
    uint64_t v11 = v10 - 1;
    uint64_t v12 = v8 - 1;
    char v13 = v9;
    while (boost::algorithm::is_iequal::operator()<char,char>(&v25, v7, v13))
    {
      ++v13;
      if (v12)
      {
        ++v7;
        uint64_t v14 = v11--;
        --v12;
        if (v14) {
          continue;
        }
      }
      goto LABEL_39;
    }
    BOOL v15 = 0;
  }
  else
  {
    char v13 = v9;
LABEL_39:
    BOOL v15 = v13 == &v9[v10];
  }
  std::locale::~locale(&v25);
  std::locale::~locale(&v17);
  if ((char)v21 < 0)
  {
    operator delete(v19);
    if (v15) {
      goto LABEL_43;
    }
  }
  else if (v15)
  {
LABEL_43:
    BOOL v3 = 1;
    goto LABEL_16;
  }
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v16, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v16 = *(std::string *)a1;
  }
  turi::fileio::get_protocol(&v16, (std::string::size_type)&v19);
  if ((char)v21 < 0)
  {
    BOOL v3 = v20 == 2 && *(unsigned __int16 *)v19 == 13171;
    operator delete(v19);
  }
  else
  {
    BOOL v3 = v21 == 2 && (unsigned __int16)v19 == 13171;
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
LABEL_16:
  if (v24 < 0) {
    operator delete(__p);
  }
  return v3;
}

void sub_223F444C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL boost::filesystem::path::has_root_directory(boost::filesystem::path *this)
{
  boost::filesystem::path::root_directory(this, &v3);
  if ((SHIBYTE(v3.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    return SHIBYTE(v3.__r_.__value_.__r.__words[2]) != 0;
  }
  BOOL v1 = v3.__r_.__value_.__l.__size_ != 0;
  operator delete(v3.__r_.__value_.__l.__data_);
  return v1;
}

std::runtime_error *boost::filesystem::filesystem_error::what(std::runtime_error *this)
{
  imp = this[3].__imp_.__imp_;
  if (imp)
  {
    if (imp[71] < 0)
    {
      if (*((void *)imp + 7)) {
        goto LABEL_31;
      }
    }
    else if (imp[71])
    {
      goto LABEL_31;
    }
    BOOL v4 = boost::system::system_error::what(this);
    MEMORY[0x22A614700](this[3].__imp_.__imp_ + 48, v4);
    imp = this[3].__imp_.__imp_;
    if (imp[23] < 0)
    {
      if (!*((void *)imp + 1))
      {
LABEL_20:
        if ((imp[47] & 0x80000000) == 0)
        {
          if (!imp[47]) {
            goto LABEL_31;
          }
LABEL_24:
          std::string::append((std::string *)imp + 2, ", \"");
          char v9 = this[3].__imp_.__imp_;
          uint64_t v12 = (const std::string::value_type *)*((void *)v9 + 3);
          uint64_t v10 = v9 + 24;
          uint64_t v11 = v12;
          int v13 = v10[23];
          if (v13 >= 0) {
            uint64_t v14 = v10;
          }
          else {
            uint64_t v14 = v11;
          }
          if (v13 >= 0) {
            std::string::size_type v15 = *((unsigned __int8 *)v10 + 23);
          }
          else {
            std::string::size_type v15 = *((void *)v10 + 1);
          }
          std::string::append((std::string *)v10 + 1, v14, v15);
          std::string::append((std::string *)this[3].__imp_.__imp_ + 2, "\"");
          imp = this[3].__imp_.__imp_;
          goto LABEL_31;
        }
        if (*((void *)imp + 4)) {
          goto LABEL_24;
        }
LABEL_31:
        std::string v16 = imp + 48;
        if (imp[71] < 0) {
          return *(std::runtime_error **)v16;
        }
        return (std::runtime_error *)v16;
      }
    }
    else if (!imp[23])
    {
      goto LABEL_20;
    }
    std::string::append((std::string *)imp + 2, ": \"");
    int v5 = this[3].__imp_.__imp_;
    int v6 = v5[23];
    if (v6 >= 0) {
      char v7 = this[3].__imp_.__imp_;
    }
    else {
      char v7 = *(const char **)v5;
    }
    if (v6 >= 0) {
      std::string::size_type v8 = *((unsigned __int8 *)v5 + 23);
    }
    else {
      std::string::size_type v8 = *((void *)v5 + 1);
    }
    std::string::append((std::string *)v5 + 2, v7, v8);
    std::string::append((std::string *)this[3].__imp_.__imp_ + 2, "\"");
    imp = this[3].__imp_.__imp_;
    goto LABEL_20;
  }
  return boost::system::system_error::what(this);
}

void sub_223F44758(void *a1)
{
  __cxa_begin_catch(a1);
  boost::system::system_error::what(v1);
  __cxa_end_catch();
  JUMPOUT(0x223F44748);
}

void boost::system::system_error::~system_error(std::runtime_error *this)
{
  boost::system::system_error::~system_error(this);
  JUMPOUT(0x22A614FA0);
}

{
  uint64_t vars8;

  this->__vftable = (std::runtime_error_vtbl *)&unk_26D75D218;
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[2].__vftable);
  }
  std::runtime_error::~runtime_error(this);
}

std::runtime_error *boost::system::system_error::what(std::runtime_error *this)
{
  int v2 = SHIBYTE(this[3].__vftable);
  if (v2 < 0) {
    imp = this[2].__imp_.__imp_;
  }
  else {
    imp = (const char *)HIBYTE(this[3].__vftable);
  }
  BOOL v4 = this + 2;
  if (!imp)
  {
    int v5 = std::runtime_error::what(this);
    MEMORY[0x22A614700](&this[2], v5);
    if (SHIBYTE(this[3].__vftable) < 0)
    {
      if (!this[2].__imp_.__imp_) {
        goto LABEL_12;
      }
    }
    else if (!HIBYTE(this[3].__vftable))
    {
LABEL_12:
      (*(void (**)(void **__return_ptr))(*(void *)this[1].__imp_.__imp_ + 24))(__p);
      if ((v10 & 0x80u) == 0) {
        int v6 = __p;
      }
      else {
        int v6 = (void **)__p[0];
      }
      if ((v10 & 0x80u) == 0) {
        std::string::size_type v7 = v10;
      }
      else {
        std::string::size_type v7 = (std::string::size_type)__p[1];
      }
      std::string::append((std::string *)&this[2], (const std::string::value_type *)v6, v7);
      if ((char)v10 < 0) {
        operator delete(__p[0]);
      }
      if ((HIBYTE(this[3].__vftable) & 0x80) != 0) {
        return (std::runtime_error *)v4->__vftable;
      }
      return v4;
    }
    std::string::append((std::string *)&this[2], ": ");
    goto LABEL_12;
  }
  if ((v2 & 0x80) != 0) {
    return (std::runtime_error *)v4->__vftable;
  }
  return v4;
}

void sub_223F448B8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  std::runtime_error::what(v15);
  __cxa_end_catch();
  JUMPOUT(0x223F448A0);
}

void boost::filesystem::directory_iterator::directory_iterator(boost::filesystem::directory_iterator *this, const boost::filesystem::path *a2)
{
}

void sub_223F449D0(_Unwind_Exception *a1)
{
  boost::detail::shared_count::~shared_count((atomic_uint **)(v1 + 8));
  _Unwind_Resume(a1);
}

void boost::shared_ptr<boost::filesystem::detail::dir_itr_imp>::shared_ptr<boost::filesystem::detail::dir_itr_imp>(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  boost::detail::shared_count::shared_count<boost::filesystem::detail::dir_itr_imp>(&v2);
}

void sub_223F44A3C(_Unwind_Exception *a1)
{
  boost::detail::shared_count::~shared_count(v1);
  _Unwind_Resume(a1);
}

void boost::detail::shared_count::shared_count<boost::filesystem::detail::dir_itr_imp>(void *a1)
{
  *a1 = 0;
  operator new();
}

void sub_223F44AC0(void *a1)
{
  __cxa_begin_catch(a1);
  boost::checked_delete<boost::filesystem::detail::dir_itr_imp>(v1, v2, v3);
  __cxa_rethrow();
}

void sub_223F44AD4(_Unwind_Exception *a1)
{
}

boost::filesystem::detail::dir_itr_imp *boost::checked_delete<boost::filesystem::detail::dir_itr_imp>(boost::filesystem::detail::dir_itr_imp *result, uint64_t a2, void **a3)
{
  if (result)
  {
    boost::filesystem::detail::dir_itr_imp::~dir_itr_imp(result, a2, a3);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

boost::filesystem::detail::dir_itr_imp *boost::detail::sp_counted_impl_p<boost::filesystem::detail::dir_itr_imp>::dispose(uint64_t a1, uint64_t a2, void **a3)
{
  double result = *(boost::filesystem::detail::dir_itr_imp **)(a1 + 16);
  if (result)
  {
    boost::filesystem::detail::dir_itr_imp::~dir_itr_imp(result, a2, a3);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

void boost::filesystem::detail::dir_itr_imp::~dir_itr_imp(boost::filesystem::detail::dir_itr_imp *this, uint64_t a2, void **a3)
{
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

uint64_t std::vector<std::pair<std::string,turi::fileio::file_status>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<std::string,turi::fileio::file_status>>,std::reverse_iterator<std::pair<std::string,turi::fileio::file_status>*>,std::reverse_iterator<std::pair<std::string,turi::fileio::file_status>*>,std::reverse_iterator<std::pair<std::string,turi::fileio::file_status>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<std::string,turi::fileio::file_status>>,std::reverse_iterator<std::pair<std::string,turi::fileio::file_status>*>,std::reverse_iterator<std::pair<std::string,turi::fileio::file_status>*>,std::reverse_iterator<std::pair<std::string,turi::fileio::file_status>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      long long v9 = *(_OWORD *)(a3 - 32);
      *(void *)(v8 - 16) = *(void *)(a3 - 16);
      *(_OWORD *)(v8 - 32) = v9;
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 32) = 0;
      *(_DWORD *)(v8 - 8) = *(_DWORD *)(a3 - 8);
      v8 -= 32;
      v7 -= 32;
      a3 -= 32;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v8;
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,turi::fileio::file_status>>,std::reverse_iterator<std::pair<std::string,turi::fileio::file_status>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,turi::fileio::file_status>>,std::reverse_iterator<std::pair<std::string,turi::fileio::file_status>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::reverse_iterator<std::pair<std::string,unsigned long>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

unsigned char *boost::algorithm::detail::transform_range_copy<std::__wrap_iter<char *>,boost::iterator_range<std::__wrap_iter<char const*>>,boost::algorithm::detail::to_lowerF<char>>(unsigned char *a1, char **a2, std::locale *this)
{
  std::string v3 = a1;
  BOOL v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    uint64_t v7 = a1;
    std::string v3 = (unsigned char *)(&v5[(void)a1] - v4);
    uint64_t v8 = (std::locale::id *)MEMORY[0x263F8C108];
    do
    {
      unsigned int v9 = *v4++;
      uint64_t v10 = std::locale::use_facet(this, v8);
      *v7++ = ((uint64_t (*)(const std::locale::facet *, void))v10->__vftable[1].__on_zero_shared)(v10, v9);
    }
    while (v4 != v5);
  }
  return v3;
}

std::vector<std::string>::iterator std::vector<std::string>::insert(std::vector<std::string> *this, std::vector<std::string>::const_iterator __position, std::vector<std::string>::const_reference __x)
{
  uint64_t i = (std::string *)__position.__i_;
  std::vector<std::string>::pointer end = this->__end_;
  value = this->__end_cap_.__value_;
  p_end_cap = &this->__end_cap_;
  uint64_t v8 = value;
  if (end >= value)
  {
    std::vector<std::string>::pointer begin = this->__begin_;
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)this->__begin_) >> 3) + 1;
    if (v11 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * (((char *)__position.__i_ - (char *)begin) >> 3);
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)begin) >> 3);
    unint64_t v14 = 2 * v13;
    if (2 * v13 <= v11) {
      unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)this->__begin_) >> 3) + 1;
    }
    if (v13 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v14;
    }
    __v.__end_cap_.__value_ = (std::allocator<std::string> *)p_end_cap;
    if (v15) {
      std::string v16 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)p_end_cap, v15);
    }
    else {
      std::string v16 = 0;
    }
    __v.__first_ = v16;
    __v.__begin_ = v16 + v12;
    __v.__end_ = __v.__begin_;
    __v.__end_cap_.__value_ = &v16[v15];
    std::__split_buffer<std::string>::push_back[abi:ne180100]((uint64_t)&__v, (long long *)__x);
    uint64_t i = std::vector<std::string>::__swap_out_circular_buffer(this, &__v, i);
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
  else if (__position.__i_ == end)
  {
    std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)this, (long long *)__x);
  }
  else
  {
    std::vector<std::string>::__move_range(this, (std::vector<std::string>::pointer)__position.__i_, end, (std::vector<std::string>::pointer)&__position.__i_[1]);
    if (i <= __x) {
      __x += this->__end_ > __x;
    }
    std::string::operator=(i, __x);
  }
  return (std::vector<std::string>::iterator)i;
}

void sub_223F44F18(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void std::__split_buffer<std::string>::push_back[abi:ne180100](uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 == *(void *)(a1 + 24))
  {
    uint64_t v5 = *(long long **)(a1 + 8);
    if ((unint64_t)v5 <= *(void *)a1)
    {
      uint64_t v11 = v4 - *(void *)a1;
      BOOL v10 = v11 == 0;
      uint64_t v12 = 0x5555555555555556 * (v11 >> 3);
      if (v10) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v13 >> 2;
      uint64_t v15 = *(void *)(a1 + 32);
      v29.__end_cap_.__value_ = *(std::allocator<std::string> **)(a1 + 32);
      std::string v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>(v15, v13);
      std::string::size_type v18 = &v16[24 * v14];
      unint64_t v19 = *(void *)(a1 + 8);
      int64_t v20 = *(void *)(a1 + 16) - v19;
      if (v20)
      {
        uint64_t v21 = v20 / 24;
        int v22 = &v18[24 * v21];
        uint64_t v23 = 24 * v21;
        char v24 = &v16[24 * v14];
        do
        {
          long long v25 = *(_OWORD *)v19;
          *((void *)v24 + 2) = *(void *)(v19 + 16);
          *(_OWORD *)char v24 = v25;
          v24 += 24;
          *(void *)(v19 + 8) = 0;
          *(void *)(v19 + 16) = 0;
          *(void *)unint64_t v19 = 0;
          v19 += 24;
          v23 -= 24;
        }
        while (v23);
        int64x2_t v26 = *(int64x2_t *)(a1 + 8);
      }
      else
      {
        int64x2_t v26 = vdupq_n_s64(v19);
        int v22 = &v16[24 * v14];
      }
      v29.__first_ = *(std::__split_buffer<std::string>::pointer *)a1;
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v18;
      *(int64x2_t *)&v29.__begin_ = v26;
      unint64_t v27 = *(std::string **)(a1 + 24);
      *(void *)(a1 + 16) = v22;
      *(void *)(a1 + 24) = &v16[24 * v17];
      v29.__end_cap_.__value_ = v27;
      std::__split_buffer<std::string>::~__split_buffer(&v29);
      uint64_t v4 = *(void *)(a1 + 16);
    }
    else
    {
      int64_t v6 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v5 - *(void *)a1) >> 3);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = -3 * (v7 >> 1);
      std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::string *,std::string *,std::string *>((uint64_t)&v29, v5, (long long *)v4, (uint64_t)v5 - 24 * (v7 >> 1));
      uint64_t v4 = v9;
      *(void *)(a1 + 8) += 8 * v8;
      *(void *)(a1 + 16) = v9;
    }
  }
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)v4, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v28 = *a2;
    *(void *)(v4 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v4 = v28;
  }
  *(void *)(a1 + 16) += 24;
}

void std::basic_regex<char,std::regex_traits<char>>::basic_regex[abi:ne180100]<std::char_traits<char>,std::allocator<char>>(std::regex_traits<char> *a1, uint64_t a2, int a3)
{
  uint64_t v4 = std::regex_traits<char>::regex_traits(a1);
  LODWORD(v4[1].__loc_.__locale_) = a3;
  *(_OWORD *)((char *)&v4[1].__loc_.__locale_ + 4) = 0u;
  *(_OWORD *)((char *)&v4[1].__col_ + 4) = 0u;
  HIDWORD(v4[2].__ct_) = 0;
  std::basic_regex<char,std::regex_traits<char>>::__parse<std::__wrap_iter<char const*>>();
}

void sub_223F45138(_Unwind_Exception *a1)
{
  int locale = (std::__shared_weak_count *)v1[6].__locale_;
  if (locale) {
    std::__shared_weak_count::__release_shared[abi:ne180100](locale);
  }
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

std::regex_traits<char> *__cdecl std::regex_traits<char>::regex_traits(std::regex_traits<char> *this)
{
  uint64_t v2 = (const std::locale *)MEMORY[0x22A614D20]();
  this->__ct_ = (const std::ctype<char> *)std::locale::use_facet(v2, MEMORY[0x263F8C108]);
  this->__col_ = (const std::collate<char> *)std::locale::use_facet(&this->__loc_, MEMORY[0x263F8C130]);
  return this;
}

void sub_223F451A4(_Unwind_Exception *a1)
{
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

void std::basic_regex<char,std::regex_traits<char>>::__parse<std::__wrap_iter<char const*>>()
{
}

void sub_223F45378(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)17>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 17);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F453F0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::shared_ptr<std::__empty_state<char>>::reset[abi:ne180100]<std::__empty_state<char>,void>(uint64_t a1, uint64_t a2)
{
  std::shared_ptr<std::__empty_state<char>>::shared_ptr[abi:ne180100]<std::__empty_state<char>,void>(&v2, a2);
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_ecma_exp<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, unsigned __int8 *a2, char *a3)
{
  std::vector<std::string>::pointer end = a1->__end_;
  uint64_t v7 = std::basic_regex<char,std::regex_traits<char>>::__parse_alternative<std::__wrap_iter<char const*>>(a1, a2, a3);
  if (v7 == a2) {
    operator new();
  }
  while (v7 != (unsigned __int8 *)a3)
  {
    if (*v7 != 124) {
      return v7;
    }
    uint64_t v8 = a1->__end_;
    uint64_t v9 = v7 + 1;
    uint64_t v7 = std::basic_regex<char,std::regex_traits<char>>::__parse_alternative<std::__wrap_iter<char const*>>(a1, v7 + 1, a3);
    if (v9 == v7) {
      operator new();
    }
    std::basic_regex<char,std::regex_traits<char>>::__push_alternation(a1, end, v8);
  }
  return (unsigned __int8 *)a3;
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_basic_reg_exp<std::__wrap_iter<char const*>>(std::basic_regex<char> *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  std::string v3 = a2;
  if (a2 == a3) {
    return (char *)a2;
  }
  uint64_t v4 = (char *)a3;
  if (*a2 == 94)
  {
    std::basic_regex<char,std::regex_traits<char>>::__push_l_anchor(this);
    ++v3;
  }
  if (v3 != (unsigned __int8 *)v4)
  {
    do
    {
      int64_t v6 = v3;
      std::string v3 = std::basic_regex<char,std::regex_traits<char>>::__parse_simple_RE<std::__wrap_iter<char const*>>(this, (char *)v3, v4);
    }
    while (v6 != v3);
    if (v6 != v4)
    {
      if (v6 + 1 != v4 || *v6 != 36) {
        std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)15>();
      }
      std::basic_regex<char,std::regex_traits<char>>::__push_r_anchor(this);
    }
  }
  return v4;
}

std::basic_regex<char> *std::basic_regex<char,std::regex_traits<char>>::__parse_extended_reg_exp<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, std::basic_regex<char> *a2, std::basic_regex<char> *a3)
{
  std::vector<std::string>::pointer end = a1->__end_;
  uint64_t v7 = std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_branch<std::__wrap_iter<char const*>>(a1, a2, a3);
  if (v7 == (unsigned __int8 *)a2) {
LABEL_9:
  }
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)15>();
  uint64_t v8 = v7;
  while (v8 != (unsigned __int8 *)a3)
  {
    if (*v8 != 124) {
      return (std::basic_regex<char> *)v8;
    }
    uint64_t v9 = a1->__end_;
    BOOL v10 = std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_branch<std::__wrap_iter<char const*>>(a1, (std::basic_regex<char> *)(v8 + 1), a3);
    if (v8 + 1 == v10) {
      goto LABEL_9;
    }
    uint64_t v8 = v10;
    std::basic_regex<char,std::regex_traits<char>>::__push_alternation(a1, end, v9);
  }
  return a3;
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_grep<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, unsigned __int8 *__s, unsigned __int8 *a3)
{
  std::vector<std::string>::pointer end = a1->__end_;
  uint64_t v7 = (unsigned __int8 *)memchr(__s, 10, a3 - __s);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = a3;
  }
  if (v8 == __s) {
    operator new();
  }
  std::basic_regex<char,std::regex_traits<char>>::__parse_basic_reg_exp<std::__wrap_iter<char const*>>(a1, __s, v8);
  while (1)
  {
    uint64_t v11 = v8 == a3 ? v8 : v8 + 1;
    if (v11 == a3) {
      break;
    }
    uint64_t v9 = (unsigned __int8 *)memchr(v11, 10, a3 - v11);
    if (v9) {
      uint64_t v8 = v9;
    }
    else {
      uint64_t v8 = a3;
    }
    BOOL v10 = a1->__end_;
    if (v8 == v11) {
      operator new();
    }
    std::basic_regex<char,std::regex_traits<char>>::__parse_basic_reg_exp<std::__wrap_iter<char const*>>(a1, v11, v8);
    std::basic_regex<char,std::regex_traits<char>>::__push_alternation(a1, end, v10);
  }
  return a3;
}

std::basic_regex<char> *std::basic_regex<char,std::regex_traits<char>>::__parse_egrep<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, std::basic_regex<char> *__s, std::basic_regex<char> *a3)
{
  std::vector<std::string>::pointer end = a1->__end_;
  uint64_t v7 = (std::basic_regex<char> *)memchr(__s, 10, (char *)a3 - (char *)__s);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = a3;
  }
  if (v8 == __s) {
    operator new();
  }
  std::basic_regex<char,std::regex_traits<char>>::__parse_extended_reg_exp<std::__wrap_iter<char const*>>(a1, __s, v8);
  while (1)
  {
    uint64_t v11 = v8 == a3 ? v8 : (std::basic_regex<char> *)((char *)&v8->__traits_.__loc_.__locale_ + 1);
    if (v11 == a3) {
      break;
    }
    uint64_t v9 = (std::basic_regex<char> *)memchr(v11, 10, (char *)a3 - (char *)v11);
    if (v9) {
      uint64_t v8 = v9;
    }
    else {
      uint64_t v8 = a3;
    }
    BOOL v10 = a1->__end_;
    if (v8 == v11) {
      operator new();
    }
    std::basic_regex<char,std::regex_traits<char>>::__parse_extended_reg_exp<std::__wrap_iter<char const*>>(a1, v11, v8);
    std::basic_regex<char,std::regex_traits<char>>::__push_alternation(a1, end, v10);
  }
  return a3;
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)14>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 14);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F459EC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__end_state<char>::~__end_state()
{
}

void std::__end_state<char>::__exec(uint64_t a1, _DWORD *a2)
{
  *a2 = -1000;
}

void std::shared_ptr<std::__empty_state<char>>::shared_ptr[abi:ne180100]<std::__empty_state<char>,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223F45A90(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::shared_ptr<std::__empty_state<char>>::shared_ptr[abi:ne180100]<std::__empty_state<char>,void>(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__shared_ptr_pointer<std::__empty_state<char> *,std::shared_ptr<std::__empty_state<char>>::__shared_ptr_default_delete<std::__empty_state<char>,std::__empty_state<char>>,std::allocator<std::__empty_state<char>>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<std::__empty_state<char> *,std::shared_ptr<std::__empty_state<char>>::__shared_ptr_default_delete<std::__empty_state<char>,std::__empty_state<char>>,std::allocator<std::__empty_state<char>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::__empty_state<char>::~__empty_state(std::__owns_one_state<char> *this)
{
  first = this->__first_;
  if (first) {
    ((void (*)(std::__node<char> *))first->~__node_0)(first);
  }
}

{
  std::__node<char> *first;
  uint64_t vars8;

  first = this->__first_;
  if (first) {
    ((void (*)(std::__node<char> *))first->~__node_0)(first);
  }
  JUMPOUT(0x22A614FA0);
}

void std::__empty_state<char>::__exec(const std::__empty_state<char> *this, std::__empty_state<char>::__state *a2)
{
  a2->__do_ = -994;
  a2->__node_ = this->__first_;
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_alternative<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, unsigned __int8 *a2, char *a3)
{
  do
  {
    uint64_t v5 = a2;
    a2 = std::basic_regex<char,std::regex_traits<char>>::__parse_term<std::__wrap_iter<char const*>>(a1, (char *)a2, a3);
  }
  while (v5 != a2);
  return v5;
}

void std::basic_regex<char,std::regex_traits<char>>::__push_alternation(std::basic_regex<char> *this, std::__owns_one_state<char> *__sa, std::__owns_one_state<char> *__sb)
{
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_term<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, char *a2, char *a3)
{
  uint64_t result = (unsigned __int8 *)std::basic_regex<char,std::regex_traits<char>>::__parse_assertion<std::__wrap_iter<char const*>>(a1, a2, a3);
  if (result == (unsigned __int8 *)a2)
  {
    std::vector<std::string>::pointer end = a1->__end_;
    unsigned int marked_count = a1->__marked_count_;
    uint64_t v9 = std::basic_regex<char,std::regex_traits<char>>::__parse_atom<std::__wrap_iter<char const*>>(a1, (unsigned __int8 *)a2, a3);
    uint64_t result = (unsigned __int8 *)a2;
    if (v9 != (unsigned __int8 *)a2)
    {
      size_t v10 = a1->__marked_count_ + 1;
      return std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_dupl_symbol<std::__wrap_iter<char const*>>((uint64_t)a1, v9, (unsigned __int8 *)a3, end, marked_count + 1, v10);
    }
  }
  return result;
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_assertion<std::__wrap_iter<char const*>>(std::basic_regex<char> *this, char *a2, char *a3)
{
  std::string v3 = a2;
  if (a2 == a3) {
    return v3;
  }
  int v6 = *a2;
  if (v6 <= 91)
  {
    if (v6 != 36)
    {
      if (v6 == 40 && a2 + 1 != a3 && a2[1] == 63 && a2 + 2 != a3)
      {
        int v7 = a2[2];
        if (v7 == 33)
        {
          std::regex_traits<char>::regex_traits(&v14.__traits_);
          memset(&v14.__flags_, 0, 40);
          v14.__flags_ = this->__flags_;
          uint64_t v8 = (char *)std::basic_regex<char,std::regex_traits<char>>::__parse<std::__wrap_iter<char const*>>(&v14, v3 + 3, a3);
          unsigned int marked_count = v14.__marked_count_;
          std::basic_regex<char,std::regex_traits<char>>::__push_lookahead(this, &v14, 1, this->__marked_count_);
          this->__marked_count_ += marked_count;
          if (v8 == a3 || *v8 != 41) {
            std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)6>();
          }
          goto LABEL_27;
        }
        if (v7 == 61)
        {
          std::regex_traits<char>::regex_traits(&v14.__traits_);
          memset(&v14.__flags_, 0, 40);
          v14.__flags_ = this->__flags_;
          uint64_t v8 = (char *)std::basic_regex<char,std::regex_traits<char>>::__parse<std::__wrap_iter<char const*>>(&v14, v3 + 3, a3);
          unsigned int v9 = v14.__marked_count_;
          std::basic_regex<char,std::regex_traits<char>>::__push_lookahead(this, &v14, 0, this->__marked_count_);
          this->__marked_count_ += v9;
          if (v8 == a3 || *v8 != 41) {
            std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)6>();
          }
LABEL_27:
          std::string v3 = v8 + 1;
          std::basic_regex<char,std::regex_traits<char>>::~basic_regex(&v14.__traits_.__loc_);
          return v3;
        }
      }
      return v3;
    }
    std::basic_regex<char,std::regex_traits<char>>::__push_r_anchor(this);
    return ++v3;
  }
  if (v6 != 92)
  {
    if (v6 != 94) {
      return v3;
    }
    std::basic_regex<char,std::regex_traits<char>>::__push_l_anchor(this);
    return ++v3;
  }
  if (a2 + 1 != a3)
  {
    int v11 = a2[1];
    if (v11 == 66)
    {
      BOOL v12 = 1;
    }
    else
    {
      if (v11 != 98) {
        return v3;
      }
      BOOL v12 = 0;
    }
    std::basic_regex<char,std::regex_traits<char>>::__push_word_boundary(this, v12);
    v3 += 2;
  }
  return v3;
}

void sub_223F4601C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_atom<std::__wrap_iter<char const*>>(std::basic_regex<char> *this, unsigned __int8 *a2, char *a3)
{
  std::string v3 = a2;
  if (a2 != (unsigned __int8 *)a3)
  {
    int v6 = (char)*a2;
    if (v6 <= 62)
    {
      if (v6 != 40)
      {
        if (v6 == 46) {
          operator new();
        }
        if ((v6 - 42) >= 2) {
          return std::basic_regex<char,std::regex_traits<char>>::__parse_pattern_character<std::__wrap_iter<char const*>>(this, a2, a3);
        }
LABEL_28:
        std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)11>();
      }
      uint64_t v8 = a2 + 1;
      if (a2 + 1 != (unsigned __int8 *)a3)
      {
        if (a2 + 2 != (unsigned __int8 *)a3 && *v8 == 63 && a2[2] == 58)
        {
          ++this->__open_count_;
          unsigned int v9 = (char *)std::basic_regex<char,std::regex_traits<char>>::__parse_ecma_exp<std::__wrap_iter<char const*>>(this, a2 + 3, a3);
          if (v9 != a3 && *v9 == 41)
          {
            --this->__open_count_;
            return (unsigned __int8 *)(v9 + 1);
          }
        }
        else
        {
          std::basic_regex<char,std::regex_traits<char>>::__push_begin_marked_subexpression(this);
          unsigned int marked_count = this->__marked_count_;
          ++this->__open_count_;
          int v11 = (char *)std::basic_regex<char,std::regex_traits<char>>::__parse_ecma_exp<std::__wrap_iter<char const*>>(this, v8, a3);
          if (v11 != a3)
          {
            BOOL v12 = v11;
            if (*v11 == 41)
            {
              std::basic_regex<char,std::regex_traits<char>>::__push_end_marked_subexpression(this, marked_count);
              --this->__open_count_;
              return (unsigned __int8 *)(v12 + 1);
            }
          }
        }
      }
      std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)6>();
    }
    if (v6 > 91)
    {
      if (v6 == 92) {
        return std::basic_regex<char,std::regex_traits<char>>::__parse_atom_escape<std::__wrap_iter<char const*>>(this, a2, (unsigned __int8 *)a3);
      }
      if (v6 == 123) {
        goto LABEL_28;
      }
    }
    else
    {
      if (v6 == 91) {
        return (unsigned __int8 *)std::basic_regex<char,std::regex_traits<char>>::__parse_bracket_expression<std::__wrap_iter<char const*>>((uint64_t)this, (char *)a2, a3);
      }
      if (v6 == 63) {
        goto LABEL_28;
      }
    }
    return std::basic_regex<char,std::regex_traits<char>>::__parse_pattern_character<std::__wrap_iter<char const*>>(this, a2, a3);
  }
  return v3;
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_dupl_symbol<std::__wrap_iter<char const*>>(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, std::__owns_one_state<char> *__s, size_t a5, size_t a6)
{
  if (a2 == a3) {
    return a2;
  }
  unsigned int v6 = a6;
  unsigned int v7 = a5;
  uint64_t v10 = a1;
  int v11 = *(_DWORD *)(a1 + 24) & 0x1F0;
  int v12 = (char)*a2;
  if (v12 > 62)
  {
    if (v12 == 63)
    {
      unint64_t v13 = a2 + 1;
      if (v11) {
        BOOL v20 = 1;
      }
      else {
        BOOL v20 = v13 == a3;
      }
      if (!v20 && *v13 == 63)
      {
        unint64_t v13 = a2 + 2;
        a5 = a5;
        a6 = a6;
        size_t v14 = 0;
        size_t v18 = 1;
        goto LABEL_33;
      }
      a5 = a5;
      a6 = a6;
      size_t v14 = 0;
      size_t v18 = 1;
      goto LABEL_45;
    }
    unint64_t v13 = a2;
    if (v12 != 123) {
      return v13;
    }
    uint64_t v15 = a2 + 1;
    std::string v16 = std::basic_regex<char,std::regex_traits<char>>::__parse_DUP_COUNT<std::__wrap_iter<char const*>>(a1, a2 + 1, a3, (int *)&__max);
    if (v15 != v16)
    {
      if (v16 != a3)
      {
        int v17 = (char)*v16;
        if (v17 != 44)
        {
          if (v17 == 125)
          {
            unint64_t v13 = v16 + 1;
            if (!v11 && v13 != a3 && *v13 == 63)
            {
              unint64_t v13 = v16 + 2;
              size_t v14 = (int)__max;
              a5 = v7;
              a6 = v6;
              a1 = v10;
              size_t v18 = (int)__max;
LABEL_33:
              uint64_t v21 = __s;
              BOOL v22 = 0;
LABEL_46:
              std::basic_regex<char,std::regex_traits<char>>::__push_loop((std::basic_regex<char> *)a1, v14, v18, v21, a5, a6, v22);
              return v13;
            }
            size_t v14 = (int)__max;
            a5 = v7;
            a6 = v6;
            a1 = v10;
            size_t v18 = (int)__max;
LABEL_45:
            uint64_t v21 = __s;
            BOOL v22 = 1;
            goto LABEL_46;
          }
          goto LABEL_58;
        }
        uint64_t v23 = v16 + 1;
        if (v16 + 1 == a3) {
          goto LABEL_58;
        }
        if (*v23 == 125)
        {
          unint64_t v13 = v16 + 2;
          if (!v11 && v13 != a3 && *v13 == 63)
          {
            unint64_t v13 = v16 + 3;
            size_t v14 = (int)__max;
            a5 = v7;
            a6 = v6;
            a1 = v10;
            goto LABEL_26;
          }
          size_t v14 = (int)__max;
          a5 = v7;
          a6 = v6;
          a1 = v10;
LABEL_36:
          size_t v18 = -1;
          goto LABEL_45;
        }
        int v27 = -1;
        long long v25 = std::basic_regex<char,std::regex_traits<char>>::__parse_DUP_COUNT<std::__wrap_iter<char const*>>(v10, v23, a3, &v27);
        if (v23 != v25 && v25 != a3 && *v25 == 125)
        {
          size_t v18 = v27;
          size_t v14 = (int)__max;
          if (v27 >= (int)__max)
          {
            unint64_t v13 = v25 + 1;
            BOOL v22 = 1;
            if (!v11 && v13 != a3)
            {
              int v26 = v25[1];
              BOOL v22 = v26 != 63;
              if (v26 == 63) {
                unint64_t v13 = v25 + 2;
              }
            }
            a5 = v7;
            a6 = v6;
            a1 = v10;
            uint64_t v21 = __s;
            goto LABEL_46;
          }
          goto LABEL_58;
        }
      }
      std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)7>();
    }
LABEL_58:
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)8>();
  }
  if (v12 == 42)
  {
    unint64_t v13 = a2 + 1;
    if (v11) {
      BOOL v19 = 1;
    }
    else {
      BOOL v19 = v13 == a3;
    }
    if (!v19 && *v13 == 63)
    {
      unint64_t v13 = a2 + 2;
      a5 = a5;
      a6 = a6;
      size_t v14 = 0;
      goto LABEL_26;
    }
    a5 = a5;
    a6 = a6;
    size_t v14 = 0;
    goto LABEL_36;
  }
  unint64_t v13 = a2;
  if (v12 == 43)
  {
    unint64_t v13 = a2 + 1;
    if (!v11 && v13 != a3 && *v13 == 63)
    {
      unint64_t v13 = a2 + 2;
      a5 = a5;
      a6 = a6;
      size_t v14 = 1;
LABEL_26:
      size_t v18 = -1;
      goto LABEL_33;
    }
    a5 = a5;
    a6 = a6;
    size_t v14 = 1;
    goto LABEL_36;
  }
  return v13;
}

void std::basic_regex<char,std::regex_traits<char>>::__push_l_anchor(std::basic_regex<char> *this)
{
}

void std::basic_regex<char,std::regex_traits<char>>::__push_r_anchor(std::basic_regex<char> *this)
{
}

void std::basic_regex<char,std::regex_traits<char>>::__push_word_boundary(std::basic_regex<char> *this, BOOL a2)
{
}

void std::basic_regex<char,std::regex_traits<char>>::__push_lookahead(std::basic_regex<char> *this, const std::basic_regex<char> *a2, BOOL a3, unsigned int a4)
{
}

void sub_223F46760(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E1C4030FC3181);
  _Unwind_Resume(a1);
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)6>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 6);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F467C8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__l_anchor_multiline<char>::~__l_anchor_multiline(void (__cdecl ***a1)(std::__owns_one_state<char> *__hidden this))
{
  uint64_t v1 = a1[1];
  if (v1) {
    (*((void (**)(void (__cdecl **)(std::__owns_one_state<char> *__hidden)))*v1 + 1))(v1);
  }
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__l_anchor_multiline<char>::__exec(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 92))
  {
    if (*(void *)(a2 + 16) != *(void *)(a2 + 8) || (*(unsigned char *)(a2 + 88) & 1) != 0)
    {
LABEL_12:
      uint64_t v4 = 0;
      *(_DWORD *)a2 = -993;
      goto LABEL_13;
    }
  }
  else
  {
    if (!*(unsigned char *)(result + 16)) {
      goto LABEL_12;
    }
    int v2 = *(unsigned __int8 *)(*(void *)(a2 + 16) - 1);
    if (v2 != 13 && v2 != 10) {
      goto LABEL_12;
    }
  }
  *(_DWORD *)a2 = -994;
  uint64_t v4 = *(void *)(result + 8);
LABEL_13:
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v4;
  return result;
}

uint64_t std::__r_anchor_multiline<char>::__exec(uint64_t result, uint64_t a2)
{
  int v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) && (*(unsigned char *)(a2 + 88) & 2) == 0
    || *(unsigned char *)(result + 16) && ((int v3 = *v2, v3 != 13) ? (v4 = v3 == 10) : (v4 = 1), v4))
  {
    *(_DWORD *)a2 = -994;
    uint64_t v5 = *(void *)(result + 8);
  }
  else
  {
    uint64_t v5 = 0;
    *(_DWORD *)a2 = -993;
  }
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v5;
  return result;
}

std::locale *std::__word_boundary<char,std::regex_traits<char>>::~__word_boundary(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D4A8;
  std::locale::~locale(a1 + 2);
  int locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void std::__word_boundary<char,std::regex_traits<char>>::~__word_boundary(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D4A8;
  std::locale::~locale(a1 + 2);
  int locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__word_boundary<char,std::regex_traits<char>>::__exec(uint64_t result, uint64_t a2)
{
  int v2 = *(unsigned __int8 **)(a2 + 8);
  int v3 = *(unsigned __int8 **)(a2 + 24);
  if (v2 == v3) {
    goto LABEL_17;
  }
  BOOL v4 = *(unsigned __int8 **)(a2 + 16);
  if (v4 == v3)
  {
    if ((*(unsigned char *)(a2 + 88) & 8) == 0)
    {
      uint64_t v6 = *(v3 - 1);
      goto LABEL_13;
    }
LABEL_17:
    int v10 = 0;
    goto LABEL_25;
  }
  if (v4 == v2)
  {
    int v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 0x80) == 0)
    {
      if ((v5 & 4) == 0)
      {
        uint64_t v6 = *v2;
LABEL_13:
        if (v6 == 95
          || (v6 & 0x80) == 0 && (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v6) & 0x500) != 0)
        {
          int v10 = 1;
          goto LABEL_25;
        }
        goto LABEL_17;
      }
      goto LABEL_17;
    }
  }
  uint64_t v7 = *(v4 - 1);
  uint64_t v8 = *v4;
  int v9 = v7 == 95 || (v7 & 0x80) == 0 && (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v7) & 0x500) != 0;
  int v11 = v8 == 95
     || (v8 & 0x80) == 0 && (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v8) & 0x500) != 0;
  int v10 = v9 != v11;
LABEL_25:
  if (*(unsigned __int8 *)(result + 40) == v10)
  {
    uint64_t v12 = 0;
    int v13 = -993;
  }
  else
  {
    uint64_t v12 = *(void *)(result + 8);
    int v13 = -994;
  }
  *(_DWORD *)a2 = v13;
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v12;
  return result;
}

uint64_t std::__lookahead<char,std::regex_traits<char>>::__lookahead[abi:ne180100](uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5)
{
  *(void *)a1 = &unk_26D75D4F0;
  *(void *)(a1 + 8) = a4;
  std::locale::locale((std::locale *)(a1 + 16), (const std::locale *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = *(_OWORD *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 40);
  *(void *)(a1 + 64) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 8CoreML::Specification::Identity::New(this, 0) = a5;
  *(unsigned char *)(a1 + 84) = a3;
  return a1;
}

void (__cdecl ***std::__lookahead<char,std::regex_traits<char>>::~__lookahead(void (__cdecl ***a1)(std::__owns_one_state<char> *__hidden this)))(std::__owns_one_state<char> *__hidden this)
{
  *a1 = (void (__cdecl **)(std::__owns_one_state<char> *__hidden))&unk_26D75D4F0;
  int v2 = (std::locale *)(a1 + 2);
  int v3 = (std::__shared_weak_count *)a1[8];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  std::locale::~locale(v2);
  BOOL v4 = a1[1];
  if (v4) {
    (*((void (**)(void (__cdecl **)(std::__owns_one_state<char> *__hidden)))*v4 + 1))(v4);
  }
  return a1;
}

void std::__lookahead<char,std::regex_traits<char>>::~__lookahead(void (__cdecl ***a1)(std::__owns_one_state<char> *__hidden this))
{
  *a1 = (void (__cdecl **)(std::__owns_one_state<char> *__hidden))&unk_26D75D4F0;
  int v2 = (std::locale *)(a1 + 2);
  int v3 = (std::__shared_weak_count *)a1[8];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  std::locale::~locale(v2);
  BOOL v4 = a1[1];
  if (v4) {
    (*((void (**)(void (__cdecl **)(std::__owns_one_state<char> *__hidden)))*v4 + 1))(v4);
  }
  JUMPOUT(0x22A614FA0);
}

void std::__lookahead<char,std::regex_traits<char>>::__exec(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  char v21 = 0;
  memset(&v22, 0, 17);
  char v23 = 0;
  uint64_t v24 = 0;
  memset(&__p, 0, sizeof(__p));
  std::vector<std::csub_match>::size_type v4 = (*(_DWORD *)(a1 + 44) + 1);
  uint64_t v5 = *(void *)(a2 + 16);
  v18.first = *(const char **)(a2 + 24);
  v18.second = v18.first;
  v18.matched = 0;
  std::vector<std::sub_match<char const*>>::assign(&__p, v4, &v18);
  uint64_t v19 = v5;
  uint64_t v20 = v5;
  char v21 = 0;
  std::vector<std::csub_match>::value_type v22 = v18;
  uint64_t v24 = v5;
  char v23 = 1;
  uint64_t v6 = *(const char **)(a2 + 16);
  if (*(unsigned char *)(a2 + 92)) {
    BOOL v7 = v6 == *(const char **)(a2 + 8);
  }
  else {
    BOOL v7 = 0;
  }
  char v8 = v7;
  if (*(unsigned __int8 *)(a1 + 84) == std::basic_regex<char,std::regex_traits<char>>::__match_at_start_ecma<std::allocator<std::sub_match<char const*>>>(a1 + 16, v6, *(const char **)(a2 + 24), (uint64_t *)&__p, *(_DWORD *)(a2 + 88) & 0xFBF | 0x40u, v8))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = 0;
    std::vector<std::string>::pointer begin = __p.__begin_;
    goto LABEL_13;
  }
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = *(void *)(a1 + 8);
  std::vector<std::string>::pointer begin = __p.__begin_;
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)__p.__end_ - (char *)__p.__begin_) >> 3);
  if (v10 < 2)
  {
LABEL_13:
    if (!begin) {
      return;
    }
    goto LABEL_14;
  }
  int v11 = 0;
  int v12 = *(_DWORD *)(a1 + 80);
  uint64_t v13 = *(void *)(a2 + 32);
  unint64_t v14 = 1;
  do
  {
    uint64_t v15 = &begin[v14];
    uint64_t v16 = v13 + 24 * (v12 + v11);
    *(std::pair<const char *, const char *> *)uint64_t v16 = v15->std::pair<const char *, const char *>;
    *(unsigned char *)(v16 + 16) = v15->matched;
    unint64_t v14 = (v11 + 2);
    ++v11;
  }
  while (v10 > v14);
LABEL_14:
  __p.__end_ = begin;
  operator delete(begin);
}

void sub_223F46EC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::match_results<char const*>::__init(std::match_results<const char *> *this, unsigned int __s, const char *__f, const char *__l, BOOL __no_update_pos)
{
  this->__unmatched_.first = __l;
  p_unmatched = &this->__unmatched_;
  this->__unmatched_.second = __l;
  this->__unmatched_.matched = 0;
  std::vector<std::sub_match<char const*>>::assign(&this->__matches_, __s, &this->__unmatched_);
  this->__prefix_.first = __f;
  this->__prefix_.second = __f;
  this->__prefix_.matched = 0;
  this->__suffix_ = *p_unmatched;
  if (!__no_update_pos) {
    this->__position_start_ = __f;
  }
  this->__ready_ = 1;
}

uint64_t std::basic_regex<char,std::regex_traits<char>>::__match_at_start_ecma<std::allocator<std::sub_match<char const*>>>(uint64_t a1, const char *a2, const char *a3, uint64_t *a4, int a5, char a6)
{
  long long v41 = 0;
  char v42 = 0;
  unint64_t v43 = 0;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    __x.first = a3;
    __x.second = a3;
    __x.matched = 0;
    *(_DWORD *)std::string v37 = 0;
    memset(&v37[8], 0, 48);
    *(_OWORD *)std::vector<std::csub_match> __p = 0u;
    memset(v39, 0, 21);
    char v42 = (_OWORD *)std::vector<std::__state<char>>::__push_back_slow_path<std::__state<char>>((uint64_t *)&v41, (uint64_t)v37);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (*(void *)&v37[32])
    {
      *(void *)&v37[40] = *(void *)&v37[32];
      operator delete(*(void **)&v37[32]);
    }
    int v35 = a4;
    int v12 = v42;
    *((_DWORD *)v42 - 24) = 0;
    *((void *)v12 - 11) = a2;
    *((void *)v12 - 1CoreML::Specification::Identity::New(this, 0) = a2;
    *((void *)v12 - 9) = a3;
    std::vector<std::sub_match<char const*>>::resize((std::vector<std::csub_match> *)(v12 - 4), *(unsigned int *)(a1 + 28), &__x);
    std::vector<std::pair<unsigned long,char const*>>::resize((std::vector<std::pair<unsigned long, const char *>> *)((char *)v42 - 40), *(unsigned int *)(a1 + 32));
    uint64_t v13 = v42;
    *((void *)v42 - 2) = v6;
    *((_DWORD *)v13 - 2) = a5;
    *((unsigned char *)v13 - 4) = a6;
    unsigned int v14 = 1;
    while (2)
    {
      if ((v14 & 0xFFF) == 0 && (int)(v14 >> 12) >= (int)a3 - (int)a2) {
        std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)12>();
      }
      uint64_t v16 = v13 - 1;
      uint64_t v15 = *((void *)v13 - 2);
      int v17 = v13 - 6;
      if (v15) {
        (*(void (**)(uint64_t, _OWORD *))(*(void *)v15 + 16))(v15, v13 - 6);
      }
      switch(*(_DWORD *)v17)
      {
        case 0xFFFFFC18:
          std::vector<std::csub_match>::value_type v18 = (const char *)*((void *)v13 - 10);
          if ((a5 & 0x20) != 0 && v18 == a2 || (a5 & 0x1000) != 0 && v18 != a3) {
            goto LABEL_16;
          }
          uint64_t v26 = *v35;
          *(void *)uint64_t v26 = a2;
          *(void *)(v26 + 8) = v18;
          *(unsigned char *)(v26 + 16) = 1;
          uint64_t v27 = *((void *)v13 - 8);
          uint64_t v28 = *((void *)v13 - 7) - v27;
          if (v28)
          {
            unint64_t v29 = 0xAAAAAAAAAAAAAAABLL * (v28 >> 3);
            std::locale v30 = (unsigned char *)(v27 + 16);
            unsigned int v31 = 1;
            do
            {
              uint64_t v32 = v26 + 24 * v31;
              *(_OWORD *)uint64_t v32 = *((_OWORD *)v30 - 1);
              char v33 = *v30;
              v30 += 24;
              *(unsigned char *)(v32 + 16) = v33;
            }
            while (v29 > v31++);
          }
          uint64_t v6 = 1;
          break;
        case 0xFFFFFC1D:
        case 0xFFFFFC1E:
        case 0xFFFFFC21:
          goto LABEL_23;
        case 0xFFFFFC1F:
LABEL_16:
          uint64_t v19 = v42 - 6;
          std::allocator<std::__state<char>>::destroy[abi:ne180100]((uint64_t)&v43, (void *)v42 - 12);
          char v42 = v19;
          goto LABEL_23;
        case 0xFFFFFC20:
          long long v20 = *(v13 - 5);
          *(_OWORD *)std::string v37 = *v17;
          *(_OWORD *)&v37[16] = v20;
          memset(&v37[32], 0, 24);
          std::vector<std::sub_match<char const*>>::__init_with_size[abi:ne180100]<std::sub_match<char const*>*,std::sub_match<char const*>*>(&v37[32], *((long long **)v13 - 8), *((long long **)v13 - 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v13 - 7) - *((void *)v13 - 8)) >> 3));
          __p[0] = 0;
          __p[1] = 0;
          v39[0] = 0;
          std::vector<std::pair<unsigned long,char const*>>::__init_with_size[abi:ne180100]<std::pair<unsigned long,char const*>*,std::pair<unsigned long,char const*>*>((char *)__p, *((long long **)v13 - 5), *((long long **)v13 - 4), (uint64_t)(*((void *)v13 - 4) - *((void *)v13 - 5)) >> 4);
          uint64_t v21 = *v16;
          *(void *)((char *)&v39[1] + 5) = *(void *)((char *)v13 - 11);
          v39[1] = v21;
          (*(void (**)(void, uint64_t, _OWORD *))(*(void *)*v16 + 24))(*v16, 1, v13 - 6);
          (*(void (**)(void, void, unsigned char *))(*(void *)v39[1] + 24))(v39[1], 0, v37);
          std::vector<std::csub_match>::value_type v22 = v42;
          if ((unint64_t)v42 >= v43)
          {
            char v42 = (_OWORD *)std::vector<std::__state<char>>::__push_back_slow_path<std::__state<char>>((uint64_t *)&v41, (uint64_t)v37);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          else
          {
            long long v23 = *(_OWORD *)&v37[16];
            *char v42 = *(_OWORD *)v37;
            v22[1] = v23;
            *((void *)v22 + 4) = 0;
            *((void *)v22 + 5) = 0;
            *((void *)v22 + 6) = 0;
            *((void *)v22 + 7) = 0;
            void v22[2] = *(_OWORD *)&v37[32];
            *((void *)v22 + 6) = *(void *)&v37[48];
            memset(&v37[32], 0, 24);
            *((void *)v22 + 8) = 0;
            *((void *)v22 + 9) = 0;
            *(_OWORD *)((char *)v22 + 56) = *(_OWORD *)__p;
            *((void *)v22 + 9) = v39[0];
            __p[0] = 0;
            __p[1] = 0;
            v39[0] = 0;
            uint64_t v24 = v39[1];
            *(void *)((char *)v22 + 85) = *(void *)((char *)&v39[1] + 5);
            *((void *)v22 + 1CoreML::Specification::Identity::New(this, 0) = v24;
            char v42 = v22 + 6;
          }
          if (*(void *)&v37[32])
          {
            *(void *)&v37[40] = *(void *)&v37[32];
            operator delete(*(void **)&v37[32]);
          }
LABEL_23:
          uint64_t v13 = v42;
          ++v14;
          if (v41 != v42) {
            continue;
          }
          uint64_t v6 = 0;
          break;
        default:
          std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)16>();
      }
      break;
    }
  }
  *(void *)std::string v37 = &v41;
  std::vector<std::__state<char>>::__destroy_vector::operator()[abi:ne180100]((void ***)v37);
  return v6;
}

void sub_223F47344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  std::__state<char>::~__state(&a13);
  a13 = v18 - 112;
  std::vector<std::__state<char>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
  _Unwind_Resume(a1);
}

void std::vector<std::sub_match<char const*>>::assign(std::vector<std::csub_match> *this, std::vector<std::csub_match>::size_type __n, std::vector<std::csub_match>::const_reference __u)
{
  value = this->__end_cap_.__value_;
  std::vector<std::string>::pointer begin = this->__begin_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)value - (char *)begin) >> 3) >= __n)
  {
    std::vector<std::csub_match>::pointer end = this->__end_;
    std::vector<std::csub_match>::size_type v16 = end - begin;
    if (v16 >= __n) {
      std::vector<std::csub_match>::size_type v17 = __n;
    }
    else {
      std::vector<std::csub_match>::size_type v17 = end - begin;
    }
    if (v17)
    {
      uint64_t v18 = begin;
      do
      {
        *v18++ = *__u;
        --v17;
      }
      while (v17);
    }
    if (__n <= v16)
    {
      this->__end_ = &begin[__n];
    }
    else
    {
      uint64_t v19 = &end[__n - v16];
      std::vector<std::csub_match>::size_type v20 = 24 * __n - 24 * v16;
      do
      {
        std::pair<const char *, const char *> v21 = __u->std::pair<const char *, const char *>;
        *(void *)&end->matched = *(void *)&__u->matched;
        end->std::pair<const char *, const char *> = v21;
        ++end;
        v20 -= 24;
      }
      while (v20);
      this->__end_ = v19;
    }
  }
  else
  {
    if (begin)
    {
      this->__end_ = begin;
      operator delete(begin);
      value = 0;
      this->__begin_ = 0;
      this->__end_ = 0;
      this->__end_cap_.__value_ = 0;
    }
    if (__n > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)value >> 3);
    std::vector<std::csub_match>::size_type v9 = 2 * v8;
    if (2 * v8 <= __n) {
      std::vector<std::csub_match>::size_type v9 = __n;
    }
    if (v8 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v9;
    }
    std::vector<std::string>::__vallocate[abi:ne180100](this, v10);
    std::vector<std::csub_match>::pointer v11 = this->__end_;
    int v12 = &v11[__n];
    std::vector<std::csub_match>::size_type v13 = 24 * __n;
    do
    {
      std::pair<const char *, const char *> v14 = __u->std::pair<const char *, const char *>;
      *(void *)&v11->matched = *(void *)&__u->matched;
      v11->std::pair<const char *, const char *> = v14;
      ++v11;
      v13 -= 24;
    }
    while (v13);
    this->__end_ = v12;
  }
}

void *std::__state<char>::~__state(void *a1)
{
  int v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  int v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = v3;
    operator delete(v3);
  }
  return a1;
}

void std::vector<std::sub_match<char const*>>::resize(std::vector<std::csub_match> *this, std::vector<std::csub_match>::size_type __sz, std::vector<std::csub_match>::const_reference __x)
{
  std::vector<std::csub_match>::size_type v3 = 0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_ - (char *)this->__begin_) >> 3);
  BOOL v4 = __sz >= v3;
  std::vector<std::csub_match>::size_type v5 = __sz - v3;
  if (v5 != 0 && v4)
  {
    std::vector<std::sub_match<char const*>>::__append(this, v5, __x);
  }
  else if (!v4)
  {
    this->__end_ = &this->__begin_[__sz];
  }
}

void std::vector<std::pair<unsigned long,char const*>>::resize(std::vector<std::pair<unsigned long, const char *>> *this, std::vector<std::pair<unsigned long, const char *>>::size_type __sz)
{
  std::vector<std::pair<unsigned long, const char *>>::size_type v2 = this->__end_ - this->__begin_;
  if (__sz <= v2)
  {
    if (__sz < v2) {
      this->__end_ = &this->__begin_[__sz];
    }
  }
  else
  {
    std::vector<std::pair<unsigned long,char const*>>::__append(this, __sz - v2);
  }
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)12>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 12);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F47630(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)16>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 16);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F47688(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::__state<char>>::__push_back_slow_path<std::__state<char>>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL) {
    std::vector<float>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x155555555555555) {
    unint64_t v9 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>>(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  std::vector<std::csub_match>::pointer v11 = &v10[96 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[96 * v9];
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)std::vector<std::csub_match>::pointer v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v12;
  *((void *)v11 + 5) = 0;
  *((void *)v11 + 6) = 0;
  *((void *)v11 + 4) = 0;
  *((_OWORD *)v11 + 2) = *(_OWORD *)(a2 + 32);
  *((void *)v11 + 6) = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(a2 + 48) = 0;
  *((void *)v11 + 7) = 0;
  *((void *)v11 + 8) = 0;
  *((void *)v11 + 9) = 0;
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(a2 + 56);
  *((void *)v11 + 9) = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(v11 + 85) = *(void *)(a2 + 85);
  *((void *)v11 + 1CoreML::Specification::Identity::New(this, 0) = v13;
  v16[2] = v11 + 96;
  std::vector<std::__state<char>>::__swap_out_circular_buffer(a1, v16);
  uint64_t v14 = a1[1];
  std::__split_buffer<std::__state<char>>::~__split_buffer(v16);
  return v14;
}

void sub_223F477D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::__state<char>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::__state<char>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::__state<char>>,std::reverse_iterator<std::__state<char>*>,std::reverse_iterator<std::__state<char>*>,std::reverse_iterator<std::__state<char>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::__state<char>>,std::reverse_iterator<std::__state<char>*>,std::reverse_iterator<std::__state<char>*>,std::reverse_iterator<std::__state<char>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    do
    {
      long long v8 = *(_OWORD *)(a3 - 80);
      *(_OWORD *)(v7 - 96) = *(_OWORD *)(a3 - 96);
      *(_OWORD *)(v7 - 8CoreML::Specification::Identity::New(this, 0) = v8;
      *(void *)(v7 - 56) = 0;
      *(void *)(v7 - 48) = 0;
      *(void *)(v7 - 64) = 0;
      *(_OWORD *)(v7 - 64) = *(_OWORD *)(a3 - 64);
      *(void *)(v7 - 48) = *(void *)(a3 - 48);
      *(void *)(a3 - 64) = 0;
      *(void *)(a3 - 56) = 0;
      *(void *)(a3 - 48) = 0;
      *(void *)(v7 - 4CoreML::Specification::Identity::New(this, 0) = 0;
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 24) = 0;
      *(_OWORD *)(v7 - 4CoreML::Specification::Identity::New(this, 0) = *(_OWORD *)(a3 - 40);
      *(void *)(v7 - 24) = *(void *)(a3 - 24);
      *(void *)(a3 - 4CoreML::Specification::Identity::New(this, 0) = 0;
      *(void *)(a3 - 32) = 0;
      *(void *)(a3 - 24) = 0;
      uint64_t v9 = *(void *)(a3 - 16);
      *(void *)(v7 - 11) = *(void *)(a3 - 11);
      *(void *)(v7 - 16) = v9;
      uint64_t v7 = *((void *)&v15 + 1) - 96;
      *((void *)&v15 + 1) -= 96;
      a3 -= 96;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::__state<char>>,std::reverse_iterator<std::__state<char>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::__state<char>>,std::reverse_iterator<std::__state<char>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::__state<char>>,std::reverse_iterator<std::__state<char>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::__state<char>>,std::reverse_iterator<std::__state<char>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *(void **)(a1[2] + 8);
  std::vector<std::pair<unsigned long, const char *>>::size_type v2 = *(void **)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      std::allocator<std::__state<char>>::destroy[abi:ne180100](v3, v1);
      v1 += 12;
    }
    while (v1 != v2);
  }
}

void std::allocator<std::__state<char>>::destroy[abi:ne180100](uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)a2[7];
  if (v3)
  {
    a2[8] = v3;
    operator delete(v3);
  }
  unint64_t v4 = (void *)a2[4];
  if (v4)
  {
    a2[5] = v4;
    operator delete(v4);
  }
}

void **std::__split_buffer<std::__state<char>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<std::__state<char>>::clear[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 96;
    std::allocator<std::__state<char>>::destroy[abi:ne180100](v4, (void *)(i - 96));
  }
}

void std::vector<std::sub_match<char const*>>::__append(std::vector<std::csub_match> *this, std::vector<std::csub_match>::size_type __n, std::vector<std::csub_match>::const_reference __x)
{
  value = this->__end_cap_.__value_;
  p_end_cap = &this->__end_cap_;
  uint64_t v7 = value;
  uint64_t v9 = p_end_cap[-1].__value_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)value - (char *)v9) >> 3) >= __n)
  {
    if (__n)
    {
      long long v15 = &v9[__n];
      std::vector<std::csub_match>::size_type v16 = 24 * __n;
      do
      {
        std::pair<const char *, const char *> v17 = __x->std::pair<const char *, const char *>;
        *(void *)&v9->matched = *(void *)&__x->matched;
        v9->std::pair<const char *, const char *> = v17;
        ++v9;
        v16 -= 24;
      }
      while (v16);
      uint64_t v9 = v15;
    }
    this->__end_ = v9;
  }
  else
  {
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v9 - (char *)this->__begin_) >> 3);
    unint64_t v11 = v10 + __n;
    if (v10 + __n > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (char *)this->__begin_) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x555555555555555) {
      unint64_t v13 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13) {
      long long v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)p_end_cap, v13);
    }
    else {
      long long v14 = 0;
    }
    uint64_t v18 = (std::sub_match<const char *> *)&v14[24 * v10];
    uint64_t v19 = &v18[__n];
    std::vector<std::csub_match>::size_type v20 = 24 * __n;
    std::pair<const char *, const char *> v21 = v18;
    do
    {
      std::pair<const char *, const char *> v22 = __x->std::pair<const char *, const char *>;
      v21[1].first = *(const char **)&__x->matched;
      *std::pair<const char *, const char *> v21 = v22;
      std::pair<const char *, const char *> v21 = (std::pair<const char *, const char *> *)((char *)v21 + 24);
      v20 -= 24;
    }
    while (v20);
    long long v23 = (std::sub_match<const char *> *)&v14[24 * v13];
    std::vector<std::csub_match>::pointer begin = this->__begin_;
    std::vector<std::csub_match>::pointer end = this->__end_;
    if (end != this->__begin_)
    {
      do
      {
        std::pair<const char *, const char *> v26 = end[-1].std::pair<const char *, const char *>;
        *(void *)&v18[-1].matched = *(void *)&end[-1].matched;
        v18[-1].std::pair<const char *, const char *> = v26;
        --v18;
        --end;
      }
      while (end != begin);
      std::vector<std::csub_match>::pointer end = this->__begin_;
    }
    this->__begin_ = v18;
    this->__end_ = v19;
    this->__end_cap_.__value_ = v23;
    if (end)
    {
      operator delete(end);
    }
  }
}

void std::vector<std::pair<unsigned long,char const*>>::__append(std::vector<std::pair<unsigned long, const char *>> *this, std::vector<std::pair<unsigned long, const char *>>::size_type __n)
{
  value = this->__end_cap_.__value_;
  p_end_cap = &this->__end_cap_;
  uint64_t v5 = value;
  uint64_t v7 = p_end_cap[-1].__value_;
  if (__n <= value - v7)
  {
    if (__n)
    {
      bzero(p_end_cap[-1].__value_, 16 * __n);
      v7 += __n;
    }
    this->__end_ = v7;
  }
  else
  {
    uint64_t v8 = (char *)v7 - (char *)this->__begin_;
    unint64_t v9 = __n + (v8 >> 4);
    if (v9 >> 60) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = (char *)v5 - (char *)this->__begin_;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      unint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>((uint64_t)p_end_cap, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    long long v14 = (std::pair<unsigned long, const char *> *)&v13[16 * v10];
    long long v15 = (std::pair<unsigned long, const char *> *)&v13[16 * v12];
    bzero(v14, 16 * __n);
    std::vector<std::csub_match>::size_type v16 = &v14[__n];
    std::vector<std::pair<unsigned long, const char *>>::pointer begin = this->__begin_;
    std::vector<std::csub_match>::pointer end = this->__end_;
    if (end != this->__begin_)
    {
      do
      {
        v14[-1] = end[-1];
        --v14;
        --end;
      }
      while (end != begin);
      std::vector<std::csub_match>::pointer end = this->__begin_;
    }
    this->__begin_ = v14;
    this->__end_ = v16;
    this->__end_cap_.__value_ = v15;
    if (end)
    {
      operator delete(end);
    }
  }
}

char *std::vector<std::sub_match<char const*>>::__init_with_size[abi:ne180100]<std::sub_match<char const*>*,std::sub_match<char const*>*>(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<std::string>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = *((void *)v6 + 1);
    while (a2 != a3)
    {
      long long v8 = *a2;
      *(void *)(v7 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v7 = v8;
      v7 += 24;
      a2 = (long long *)((char *)a2 + 24);
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_223F47DB4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<std::pair<unsigned long,char const*>>::__init_with_size[abi:ne180100]<std::pair<unsigned long,char const*>*,std::pair<unsigned long,char const*>*>(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<turi::flexible_type>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = (_OWORD *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      long long v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_223F47E28(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::__state<char>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 12;
        std::allocator<std::__state<char>>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_atom_escape<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  if (a2 == a3 || *a2 != 92) {
    return a2;
  }
  uint64_t v5 = a2 + 1;
  if (a2 + 1 == a3) {
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)3>();
  }
  uint64_t result = std::basic_regex<char,std::regex_traits<char>>::__parse_decimal_escape<std::__wrap_iter<char const*>>(a1, a2 + 1, a3);
  if (v5 == result)
  {
    uint64_t result = (unsigned __int8 *)std::basic_regex<char,std::regex_traits<char>>::__parse_character_class_escape<std::__wrap_iter<char const*>>(a1, (char *)a2 + 1, (char *)a3);
    if (v5 == result)
    {
      uint64_t result = (unsigned __int8 *)std::basic_regex<char,std::regex_traits<char>>::__parse_character_escape<std::__wrap_iter<char const*>>(a1, (std::basic_regex<char> *)(a2 + 1), (std::basic_regex<char> *)a3, 0);
      if (v5 == result) {
        return a2;
      }
    }
  }
  return result;
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_bracket_expression<std::__wrap_iter<char const*>>(uint64_t a1, char *a2, char *a3)
{
  if (a2 != a3 && *a2 == 91)
  {
    if (a2 + 1 == a3) {
      goto LABEL_20;
    }
    uint64_t v5 = a2[1] == 94 ? a2 + 2 : a2 + 1;
    started = std::basic_regex<char,std::regex_traits<char>>::__start_matching_list((std::basic_regex<char> *)a1, a2[1] == 94);
    if (v5 == a3) {
      goto LABEL_20;
    }
    uint64_t v7 = (uint64_t *)started;
    if ((*(_WORD *)(a1 + 24) & 0x1F0) != 0 && *v5 == 93)
    {
      std::__bracket_expression<char,std::regex_traits<char>>::__add_char[abi:ne180100]((uint64_t)started, 93);
      ++v5;
    }
    if (v5 == a3) {
      goto LABEL_20;
    }
    do
    {
      long long v8 = v5;
      uint64_t v5 = std::basic_regex<char,std::regex_traits<char>>::__parse_expression_term<std::__wrap_iter<char const*>>(a1, v5, a3, v7);
    }
    while (v8 != v5);
    if (v8 == a3) {
      goto LABEL_20;
    }
    if (*v8 == 45)
    {
      std::__bracket_expression<char,std::regex_traits<char>>::__add_char[abi:ne180100]((uint64_t)v7, 45);
      ++v8;
    }
    if (v8 == a3 || *v8 != 93) {
LABEL_20:
    }
      std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)5>();
    return v8 + 1;
  }
  return a2;
}

void std::basic_regex<char,std::regex_traits<char>>::__push_begin_marked_subexpression(std::basic_regex<char> *this)
{
  if ((this->__flags_ & 2) == 0) {
    operator new();
  }
}

void std::basic_regex<char,std::regex_traits<char>>::__push_end_marked_subexpression(std::basic_regex<char> *this, unsigned int a2)
{
  if ((this->__flags_ & 2) == 0) {
    operator new();
  }
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)11>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 11);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F481D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

unsigned char *std::basic_regex<char,std::regex_traits<char>>::__parse_pattern_character<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, unsigned char *a2, unsigned char *a3)
{
  uint64_t v3 = a2;
  if (a2 != a3)
  {
    int v4 = (char)*a2;
    BOOL v5 = (v4 - 36) > 0x3A || ((1 << (*a2 - 36)) & 0x7800000080004F1) == 0;
    if (v5 && (v4 - 123) >= 3)
    {
      std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, v4);
      ++v3;
    }
  }
  return v3;
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)3>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 3);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F482A4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_decimal_escape<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (a2 != a3)
  {
    int v4 = *a2;
    unsigned int v5 = v4 - 48;
    if (v4 == 48)
    {
      std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, v5);
      return ++v3;
    }
    if ((v4 - 49) > 8) {
      return v3;
    }
    if (++v3 == a3)
    {
      uint64_t v3 = a3;
    }
    else
    {
      while (1)
      {
        int v6 = *v3;
        if ((v6 - 48) > 9) {
          break;
        }
        if (v5 >= 0x19999999) {
          goto LABEL_16;
        }
        ++v3;
        unsigned int v5 = v6 + 10 * v5 - 48;
        if (v3 == a3)
        {
          uint64_t v3 = a3;
          break;
        }
      }
      if (!v5) {
        goto LABEL_16;
      }
    }
    if (v5 <= a1->__marked_count_)
    {
      std::basic_regex<char,std::regex_traits<char>>::__push_back_ref(a1, v5);
      return v3;
    }
LABEL_16:
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)4>();
  }
  return v3;
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_character_class_escape<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, char *a2, char *a3)
{
  uint64_t v3 = a2;
  if (a2 == a3) {
    return v3;
  }
  int v4 = *a2;
  if (v4 > 99)
  {
    if (v4 == 119)
    {
      BOOL v5 = 0;
      goto LABEL_15;
    }
    if (v4 == 115)
    {
      BOOL v9 = 0;
      goto LABEL_17;
    }
    if (v4 != 100) {
      return v3;
    }
    BOOL v6 = 0;
LABEL_12:
    started = std::basic_regex<char,std::regex_traits<char>>::__start_matching_list(a1, v6);
    int v8 = started->__mask_ | 0x400;
LABEL_18:
    started->__mask_ = v8;
    goto LABEL_19;
  }
  switch(v4)
  {
    case 'D':
      BOOL v6 = 1;
      goto LABEL_12;
    case 'S':
      BOOL v9 = 1;
LABEL_17:
      started = std::basic_regex<char,std::regex_traits<char>>::__start_matching_list(a1, v9);
      int v8 = started->__mask_ | 0x4000;
      goto LABEL_18;
    case 'W':
      BOOL v5 = 1;
LABEL_15:
      uint64_t v10 = std::basic_regex<char,std::regex_traits<char>>::__start_matching_list(a1, v5);
      v10->__mask_ |= 0x500u;
      std::__bracket_expression<char,std::regex_traits<char>>::__add_char[abi:ne180100]((uint64_t)v10, 95);
LABEL_19:
      ++v3;
      break;
  }
  return v3;
}

std::basic_regex<char> *std::basic_regex<char,std::regex_traits<char>>::__parse_character_escape<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, std::basic_regex<char> *this, std::basic_regex<char> *a3, std::string *a4)
{
  int v4 = this;
  if (this != a3)
  {
    int locale_low = SLOBYTE(this->__traits_.__loc_.__locale_);
    if (locale_low > 109)
    {
      char v6 = 0;
      switch(LOBYTE(this->__traits_.__loc_.__locale_))
      {
        case 'n':
          if (a4)
          {
            uint64_t v7 = a4;
            std::basic_regex<char>::value_type locale = 10;
            goto LABEL_52;
          }
          std::basic_regex<char>::value_type locale = 10;
          goto LABEL_61;
        case 'r':
          if (a4)
          {
            uint64_t v7 = a4;
            std::basic_regex<char>::value_type locale = 13;
            goto LABEL_52;
          }
          std::basic_regex<char>::value_type locale = 13;
          goto LABEL_61;
        case 't':
          if (a4)
          {
            uint64_t v7 = a4;
            std::basic_regex<char>::value_type locale = 9;
            goto LABEL_52;
          }
          std::basic_regex<char>::value_type locale = 9;
          goto LABEL_61;
        case 'u':
          if ((std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 1) == a3) {
            goto LABEL_66;
          }
          int v9 = BYTE1(this->__traits_.__loc_.__locale_);
          if ((v9 & 0xF8) != 0x30 && (v9 & 0xFE) != 0x38 && (v9 | 0x20u) - 97 >= 6) {
            goto LABEL_66;
          }
          int v4 = (std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 2);
          if ((std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 2) == a3) {
            goto LABEL_66;
          }
          int v10 = LOBYTE(v4->__traits_.__loc_.__locale_);
          char v11 = -48;
          if ((v10 & 0xF8) == 0x30 || (v10 & 0xFE) == 0x38) {
            goto LABEL_24;
          }
          v10 |= 0x20u;
          if ((v10 - 97) >= 6) {
            goto LABEL_66;
          }
          char v11 = -87;
LABEL_24:
          char v6 = 16 * (v11 + v10);
LABEL_25:
          if ((std::basic_regex<char> *)((char *)&v4->__traits_.__loc_.__locale_ + 1) == a3) {
            goto LABEL_66;
          }
          int v12 = BYTE1(v4->__traits_.__loc_.__locale_);
          char v13 = -48;
          if ((v12 & 0xF8) == 0x30 || (v12 & 0xFE) == 0x38) {
            goto LABEL_30;
          }
          v12 |= 0x20u;
          if ((v12 - 97) >= 6) {
            goto LABEL_66;
          }
          char v13 = -87;
LABEL_30:
          if ((std::basic_regex<char> *)((char *)&v4->__traits_.__loc_.__locale_ + 2) == a3) {
            goto LABEL_66;
          }
          int v14 = BYTE2(v4->__traits_.__loc_.__locale_);
          char v15 = -48;
          if ((v14 & 0xF8) == 0x30 || (v14 & 0xFE) == 0x38) {
            goto LABEL_35;
          }
          v14 |= 0x20u;
          if ((v14 - 97) >= 6) {
            goto LABEL_66;
          }
          char v15 = -87;
LABEL_35:
          std::string::value_type v16 = v15 + v14 + 16 * (v13 + v12 + v6);
          if (a4) {
            std::string::operator=(a4, v16);
          }
          else {
            std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, v16);
          }
          return (std::basic_regex<char> *)((char *)v4 + 3);
        case 'v':
          if (a4)
          {
            uint64_t v7 = a4;
            std::basic_regex<char>::value_type locale = 11;
            goto LABEL_52;
          }
          std::basic_regex<char>::value_type locale = 11;
          break;
        case 'x':
          goto LABEL_25;
        default:
          goto LABEL_47;
      }
      goto LABEL_61;
    }
    if (locale_low == 48)
    {
      if (a4)
      {
        uint64_t v7 = a4;
        std::basic_regex<char>::value_type locale = 0;
        goto LABEL_52;
      }
      std::basic_regex<char>::value_type locale = 0;
LABEL_61:
      std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, locale);
      return (std::basic_regex<char> *)((char *)v4 + 1);
    }
    if (locale_low != 99)
    {
      if (locale_low == 102)
      {
        if (a4)
        {
          uint64_t v7 = a4;
          std::basic_regex<char>::value_type locale = 12;
LABEL_52:
          std::string::operator=(v7, locale);
          return (std::basic_regex<char> *)((char *)v4 + 1);
        }
        std::basic_regex<char>::value_type locale = 12;
        goto LABEL_61;
      }
LABEL_47:
      if (LOBYTE(this->__traits_.__loc_.__locale_) != 95
        && ((locale_low & 0x80) != 0
         || (a1->__traits_.__ct_->__tab_[LOBYTE(this->__traits_.__loc_.__locale_)] & 0x500) == 0))
      {
        std::basic_regex<char>::value_type locale = (std::basic_regex<char>::value_type)this->__traits_.__loc_.__locale_;
        if (a4)
        {
          uint64_t v7 = a4;
          goto LABEL_52;
        }
        goto LABEL_61;
      }
LABEL_66:
      std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)3>();
    }
    if ((std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 1) == a3) {
      goto LABEL_66;
    }
    if (SBYTE1(this->__traits_.__loc_.__locale_) < 65) {
      goto LABEL_66;
    }
    unsigned int v17 = BYTE1(this->__traits_.__loc_.__locale_);
    if (v17 >= 0x5B && (v17 - 97) > 0x19u) {
      goto LABEL_66;
    }
    std::string::value_type v18 = v17 & 0x1F;
    if (a4) {
      std::string::operator=(a4, v18);
    }
    else {
      std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, v18);
    }
    return (std::basic_regex<char> *)((char *)v4 + 2);
  }
  return v4;
}

void std::basic_regex<char,std::regex_traits<char>>::__push_char(std::basic_regex<char> *this, std::basic_regex<char>::value_type __c)
{
  std::basic_regex<_CharT, _Traits>::flag_type flags = this->__flags_;
  if ((flags & 1) == 0)
  {
    if ((flags & 8) == 0) {
      operator new();
    }
    operator new();
  }
  operator new();
}

void sub_223F48870(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E1C4010F5D982);
  _Unwind_Resume(a1);
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)4>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 4);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F488D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::basic_regex<char,std::regex_traits<char>>::__push_back_ref(std::basic_regex<char> *this, int __i)
{
  std::basic_regex<_CharT, _Traits>::flag_type flags = this->__flags_;
  if ((flags & 1) == 0)
  {
    if ((flags & 8) == 0) {
      operator new();
    }
    operator new();
  }
  operator new();
}

uint64_t std::__match_char_icase<char,std::regex_traits<char>>::__match_char_icase[abi:ne180100](uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = &unk_26D75D580;
  *(void *)(a1 + 8) = a4;
  std::locale::locale((std::locale *)(a1 + 16), (const std::locale *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = (*(uint64_t (**)(void, uint64_t))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8), a3);
  return a1;
}

void sub_223F48AB0(_Unwind_Exception *a1)
{
  std::locale::~locale(v2);
  uint64_t v4 = (uint64_t)v1[1];
  if (v4) {
    std::shared_ptr<std::__empty_state<char>>::shared_ptr[abi:ne180100]<std::__empty_state<char>,void>(v4);
  }
  _Unwind_Resume(a1);
}

std::locale *std::__match_char_icase<char,std::regex_traits<char>>::~__match_char_icase(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D580;
  std::locale::~locale(a1 + 2);
  std::basic_regex<char>::value_type locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void std::__match_char_icase<char,std::regex_traits<char>>::~__match_char_icase(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D580;
  std::locale::~locale(a1 + 2);
  std::basic_regex<char>::value_type locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__match_char_icase<char,std::regex_traits<char>>::__exec(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(char **)(a2 + 16);
  if (v3 == *(char **)(a2 + 24)
    || (uint64_t v4 = result,
        uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(result + 24) + 40))(*(void *)(result + 24), *v3), *(unsigned __int8 *)(v4 + 40) != result))
  {
    uint64_t v5 = 0;
    *(_DWORD *)a2 = -993;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    ++*(void *)(a2 + 16);
    uint64_t v5 = *(void *)(v4 + 8);
  }
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v5;
  return result;
}

std::locale *std::__match_char_collate<char,std::regex_traits<char>>::~__match_char_collate(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D5C8;
  std::locale::~locale(a1 + 2);
  std::basic_regex<char>::value_type locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void std::__match_char_collate<char,std::regex_traits<char>>::~__match_char_collate(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D5C8;
  std::locale::~locale(a1 + 2);
  std::basic_regex<char>::value_type locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__match_char_collate<char,std::regex_traits<char>>::__exec(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) || *v2 != *(unsigned __int8 *)(result + 40))
  {
    uint64_t v3 = 0;
    *(_DWORD *)a2 = -993;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    uint64_t v3 = *(void *)(result + 8);
  }
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v3;
  return result;
}

uint64_t std::__match_char<char>::__exec(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) || *v2 != *(unsigned __int8 *)(result + 16))
  {
    uint64_t v3 = 0;
    *(_DWORD *)a2 = -993;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    uint64_t v3 = *(void *)(result + 8);
  }
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v3;
  return result;
}

std::locale *std::__back_ref_icase<char,std::regex_traits<char>>::~__back_ref_icase(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D658;
  std::locale::~locale(a1 + 2);
  std::basic_regex<char>::value_type locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void std::__back_ref_icase<char,std::regex_traits<char>>::~__back_ref_icase(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D658;
  std::locale::~locale(a1 + 2);
  std::basic_regex<char>::value_type locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__back_ref_icase<char,std::regex_traits<char>>::__exec(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 40) - 1);
  if (*(unsigned char *)(v3 + 16))
  {
    uint64_t v4 = *(void *)(v3 + 8) - *(void *)v3;
    uint64_t v5 = *(void *)(a2 + 16);
    if (*(void *)(a2 + 24) - v5 >= v4)
    {
      uint64_t v7 = result;
      if (v4 < 1)
      {
LABEL_9:
        *(_DWORD *)a2 = -994;
        *(void *)(a2 + 16) = v5 + v4;
        uint64_t v6 = *(void *)(v7 + 8);
        goto LABEL_10;
      }
      uint64_t v8 = 0;
      while (1)
      {
        int v9 = (*(uint64_t (**)(void, void))(**(void **)(v7 + 24) + 40))(*(void *)(v7 + 24), *(char *)(*(void *)v3 + v8));
        uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(v7 + 24) + 40))(*(void *)(v7 + 24), *(char *)(*(void *)(a2 + 16) + v8));
        if (v9 != result) {
          break;
        }
        if (v4 == ++v8)
        {
          uint64_t v5 = *(void *)(a2 + 16);
          goto LABEL_9;
        }
      }
    }
  }
  uint64_t v6 = 0;
  *(_DWORD *)a2 = -993;
LABEL_10:
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v6;
  return result;
}

std::locale *std::__back_ref_collate<char,std::regex_traits<char>>::~__back_ref_collate(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D6A0;
  std::locale::~locale(a1 + 2);
  std::basic_regex<char>::value_type locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void std::__back_ref_collate<char,std::regex_traits<char>>::~__back_ref_collate(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26D75D6A0;
  std::locale::~locale(a1 + 2);
  std::basic_regex<char>::value_type locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__back_ref_collate<char,std::regex_traits<char>>::__exec(uint64_t result, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(result + 40) - 1;
  uint64_t v3 = *(void *)(a2 + 32);
  if (*(unsigned char *)(v3 + 24 * v2 + 16))
  {
    uint64_t v4 = (unsigned __int8 **)(v3 + 24 * v2);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1] - *v4;
    uint64_t v7 = *(void *)(a2 + 16);
    if (*(void *)(a2 + 24) - v7 >= v6)
    {
      if (v6 < 1)
      {
LABEL_8:
        *(_DWORD *)a2 = -994;
        *(void *)(a2 + 16) = v7 + v6;
        uint64_t v8 = *(void *)(result + 8);
        goto LABEL_9;
      }
      int v9 = *(unsigned __int8 **)(a2 + 16);
      uint64_t v10 = v6;
      while (1)
      {
        int v12 = *v5++;
        int v11 = v12;
        int v13 = *v9++;
        if (v11 != v13) {
          break;
        }
        if (!--v10) {
          goto LABEL_8;
        }
      }
    }
  }
  uint64_t v8 = 0;
  *(_DWORD *)a2 = -993;
LABEL_9:
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v8;
  return result;
}

void std::__back_ref<char>::~__back_ref(void (__cdecl ***a1)(std::__owns_one_state<char> *__hidden this))
{
  uint64_t v1 = a1[1];
  if (v1) {
    (*((void (**)(void (__cdecl **)(std::__owns_one_state<char> *__hidden)))*v1 + 1))(v1);
  }
  JUMPOUT(0x22A614FA0);
}

unsigned int *std::__back_ref<char>::__exec(unsigned int *result, uint64_t a2)
{
  unint64_t v2 = result[4];
  uint64_t v3 = *(void *)(a2 + 32);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(a2 + 40) - v3) >> 3) < v2) {
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)4>();
  }
  unsigned int v5 = v2 - 1;
  if (*(unsigned char *)(v3 + 24 * v5 + 16)
    && (uint64_t v6 = result,
        uint64_t v7 = v3 + 24 * v5,
        uint64_t result = *(unsigned int **)v7,
        int64_t v8 = *(void *)(v7 + 8) - *(void *)v7,
        uint64_t v9 = *(void *)(a2 + 16),
        *(void *)(a2 + 24) - v9 >= v8)
    && (uint64_t result = (unsigned int *)memcmp(result, *(const void **)(a2 + 16), v8), !result))
  {
    *(_DWORD *)a2 = -994;
    *(void *)(a2 + 16) = v9 + v8;
    uint64_t v10 = *((void *)v6 + 1);
  }
  else
  {
    uint64_t v10 = 0;
    *(_DWORD *)a2 = -993;
  }
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v10;
  return result;
}

std::__bracket_expression<char, std::regex_traits<char>> *__cdecl std::basic_regex<char,std::regex_traits<char>>::__start_matching_list(std::basic_regex<char> *this, BOOL __negate)
{
}

void sub_223F49460(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F1C4061CF1F02);
  _Unwind_Resume(a1);
}

void std::__bracket_expression<char,std::regex_traits<char>>::__add_char[abi:ne180100](uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  if (*(unsigned char *)(a1 + 169))
  {
    char v2 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
    unsigned int v5 = *(unsigned char **)(a1 + 48);
    unint64_t v4 = *(void *)(a1 + 56);
    if ((unint64_t)v5 >= v4)
    {
      uint64_t v6 = (unint64_t *)(a1 + 40);
      unint64_t v7 = *(void *)(a1 + 40);
      int64_t v8 = &v5[-v7];
      uint64_t v9 = (uint64_t)&v5[-v7 + 1];
      if (v9 >= 0)
      {
        unint64_t v10 = v4 - v7;
        if (2 * v10 > v9) {
          uint64_t v9 = 2 * v10;
        }
        if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v11 = v9;
        }
        if (v11) {
          int v12 = operator new(v11);
        }
        else {
          int v12 = 0;
        }
        std::vector<std::csub_match>::size_type v20 = &v8[(void)v12];
        std::pair<const char *, const char *> v21 = (char *)v12 + v11;
        v8[(void)v12] = v2;
        uint64_t v19 = (uint64_t)&v8[(void)v12 + 1];
        if (v5 != (unsigned char *)v7)
        {
          std::pair<const char *, const char *> v22 = &v5[~v7];
          do
          {
            char v23 = *--v5;
            (v22--)[(void)v12] = v23;
          }
          while (v5 != (unsigned char *)v7);
LABEL_45:
          unsigned int v5 = (unsigned char *)*v6;
          goto LABEL_47;
        }
        goto LABEL_46;
      }
LABEL_50:
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    goto LABEL_22;
  }
  uint64_t v6 = (unint64_t *)(a1 + 40);
  unsigned int v5 = *(unsigned char **)(a1 + 48);
  unint64_t v13 = *(void *)(a1 + 56);
  if (!*(unsigned char *)(a1 + 170))
  {
    if ((unint64_t)v5 >= v13)
    {
      unint64_t v24 = *v6;
      long long v25 = &v5[-*v6];
      unint64_t v26 = (unint64_t)(v25 + 1);
      if ((uint64_t)(v25 + 1) >= 0)
      {
        unint64_t v27 = v13 - v24;
        if (2 * v27 > v26) {
          unint64_t v26 = 2 * v27;
        }
        if (v27 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v28 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v28 = v26;
        }
        if (v28) {
          int v12 = operator new(v28);
        }
        else {
          int v12 = 0;
        }
        std::vector<std::csub_match>::size_type v20 = &v25[(void)v12];
        std::pair<const char *, const char *> v21 = (char *)v12 + v28;
        v25[(void)v12] = v2;
        uint64_t v19 = (uint64_t)&v25[(void)v12 + 1];
        if (v5 != (unsigned char *)v24)
        {
          unsigned int v31 = &v5[~v24];
          do
          {
            char v32 = *--v5;
            (v31--)[(void)v12] = v32;
          }
          while (v5 != (unsigned char *)v24);
          goto LABEL_45;
        }
        goto LABEL_46;
      }
      goto LABEL_50;
    }
LABEL_22:
    unsigned char *v5 = v2;
    uint64_t v19 = (uint64_t)(v5 + 1);
    goto LABEL_49;
  }
  if ((unint64_t)v5 < v13) {
    goto LABEL_22;
  }
  unint64_t v14 = *v6;
  char v15 = &v5[-*v6];
  unint64_t v16 = (unint64_t)(v15 + 1);
  if ((uint64_t)(v15 + 1) < 0) {
    goto LABEL_50;
  }
  unint64_t v17 = v13 - v14;
  if (2 * v17 > v16) {
    unint64_t v16 = 2 * v17;
  }
  if (v17 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v18 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v18 = v16;
  }
  if (v18) {
    int v12 = operator new(v18);
  }
  else {
    int v12 = 0;
  }
  std::vector<std::csub_match>::size_type v20 = &v15[(void)v12];
  std::pair<const char *, const char *> v21 = (char *)v12 + v18;
  v15[(void)v12] = v2;
  uint64_t v19 = (uint64_t)&v15[(void)v12 + 1];
  if (v5 != (unsigned char *)v14)
  {
    unint64_t v29 = &v5[~v14];
    do
    {
      char v30 = *--v5;
      (v29--)[(void)v12] = v30;
    }
    while (v5 != (unsigned char *)v14);
    goto LABEL_45;
  }
LABEL_46:
  int v12 = v20;
LABEL_47:
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = v12;
  *(void *)(a1 + 48) = v19;
  *(void *)(a1 + 56) = v21;
  if (v5) {
    operator delete(v5);
  }
LABEL_49:
  *(void *)(a1 + 48) = v19;
}

uint64_t std::__bracket_expression<char,std::regex_traits<char>>::__bracket_expression[abi:ne180100](uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  *(void *)(a1 + 8) = a3;
  size_t v11 = (const std::locale *)(a1 + 16);
  std::locale::locale((std::locale *)(a1 + 16), (const std::locale *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12CoreML::Specification::Identity::New(this, 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(unsigned char *)(a1 + 168) = a4;
  *(unsigned char *)(a1 + 169) = a5;
  *(unsigned char *)(a1 + 17CoreML::Specification::Identity::New(this, 0) = a6;
  std::locale::locale(&v14, v11);
  std::locale::name(&v15, &v14);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    BOOL v12 = v15.__r_.__value_.__l.__size_ != 1 || *v15.__r_.__value_.__l.__data_ != 67;
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  else
  {
    BOOL v12 = SHIBYTE(v15.__r_.__value_.__r.__words[2]) != 1 || v15.__r_.__value_.__s.__data_[0] != 67;
  }
  std::locale::~locale(&v14);
  *(unsigned char *)(a1 + 171) = v12;
  return a1;
}

void sub_223F49814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10)
{
  std::locale::~locale((std::locale *)&a9);
  a10 = v10 + 17;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a10);
  std::string v15 = (void *)v10[14];
  if (v15)
  {
    v10[15] = v15;
    operator delete(v15);
  }
  std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a10);
  unint64_t v16 = (void *)v10[8];
  if (v16)
  {
    void v10[9] = v16;
    operator delete(v16);
  }
  unint64_t v17 = *v13;
  if (*v13)
  {
    v10[6] = v17;
    operator delete(v17);
  }
  std::locale::~locale(v12);
  *unint64_t v10 = v11;
  uint64_t v18 = v10[1];
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  _Unwind_Resume(a1);
}

void std::__bracket_expression<char,std::regex_traits<char>>::~__bracket_expression(std::locale *a1)
{
  std::__bracket_expression<char,std::regex_traits<char>>::~__bracket_expression(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__bracket_expression<char,std::regex_traits<char>>::__exec(const std::__bracket_expression<char, std::regex_traits<char>> *this, std::__bracket_expression<char, std::regex_traits<char>>::__state *a2)
{
  current = a2->__current_;
  last = a2->__last_;
  if (current == last)
  {
    uint64_t v37 = 0;
    BOOL negate = this->__negate_;
    goto LABEL_221;
  }
  if (!this->__might_have_digraph_ || current + 1 == last) {
    goto LABEL_58;
  }
  signed __int8 v6 = *current;
  unsigned __int8 v125 = *current;
  signed __int8 v7 = current[1];
  unsigned __int8 v126 = v7;
  if (this->__icase_)
  {
    unsigned __int8 v125 = ((uint64_t (*)(const std::ctype<char> *, void))this->__traits_.__ct_->do_tolower)(this->__traits_.__ct_, v6);
    unsigned __int8 v126 = ((uint64_t (*)(const std::ctype<char> *, void))this->__traits_.__ct_->do_tolower)(this->__traits_.__ct_, v7);
  }
  p_traits = &this->__traits_;
  std::regex_traits<char>::__lookup_collatename<char *>((uint64_t)&this->__traits_, (char *)&v125, (char *)&v127, (uint64_t)&__p);
  if ((v124 & 0x80000000) == 0)
  {
    if (v124) {
      goto LABEL_8;
    }
LABEL_58:
    BOOL negate = 0;
    uint64_t v37 = 1;
    goto LABEL_59;
  }
  size_t v38 = v123;
  operator delete(__p);
  if (!v38) {
    goto LABEL_58;
  }
LABEL_8:
  std::vector<std::pair<char, char>>::pointer begin = this->__digraphs_.__begin_;
  uint64_t v10 = (char *)this->__digraphs_.__end_ - (char *)begin;
  if (v10)
  {
    uint64_t v11 = v10 >> 1;
    if ((unint64_t)(v10 >> 1) <= 1) {
      uint64_t v11 = 1;
    }
    p_second = &begin->second;
    do
    {
      if (v125 == *(p_second - 1) && v126 == *p_second) {
        goto LABEL_218;
      }
      p_second += 2;
      --v11;
    }
    while (v11);
  }
  if (!this->__collate_ || this->__ranges_.__begin_ == this->__ranges_.__end_)
  {
    BOOL negate = 0;
  }
  else
  {
    std::regex_traits<char>::transform<char *>((uint64_t)&this->__traits_, (char *)&v125, (char *)&v127);
    std::vector<std::pair<std::string, std::string>>::pointer v14 = this->__ranges_.__begin_;
    char v15 = v124;
    int64_t v16 = (char *)this->__ranges_.__end_ - (char *)v14;
    if (v16)
    {
      uint64_t v17 = 0;
      unint64_t v18 = v16 / 48;
      char v113 = v124;
      if (v124 >= 0) {
        size_t v19 = v124;
      }
      else {
        size_t v19 = v123;
      }
      if (v124 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      if (v18 <= 1) {
        uint64_t v21 = 1;
      }
      else {
        uint64_t v21 = v16 / 48;
      }
      BOOL v22 = 1;
      while (1)
      {
        int v23 = SHIBYTE(v14->first.__r_.__value_.__r.__words[2]);
        if (v23 >= 0) {
          size_t size = HIBYTE(v14->first.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t size = v14->first.__r_.__value_.__l.__size_;
        }
        if (v23 >= 0) {
          std::vector<std::pair<std::string, std::string>>::pointer v25 = v14;
        }
        else {
          std::vector<std::pair<std::string, std::string>>::pointer v25 = (std::vector<std::pair<std::string, std::string>>::pointer)v14->first.__r_.__value_.__r.__words[0];
        }
        if (size >= v19) {
          size_t v26 = v19;
        }
        else {
          size_t v26 = size;
        }
        int v27 = memcmp(p_p, v25, v26);
        BOOL v28 = v19 >= size;
        if (v27) {
          BOOL v28 = v27 >= 0;
        }
        if (v28)
        {
          int v29 = SHIBYTE(v14->second.__r_.__value_.__r.__words[2]);
          if (v29 >= 0) {
            size_t v30 = HIBYTE(v14->second.__r_.__value_.__r.__words[2]);
          }
          else {
            size_t v30 = v14->second.__r_.__value_.__l.__size_;
          }
          if (v29 >= 0) {
            int data = &v14->second;
          }
          else {
            int data = (std::string *)v14->second.__r_.__value_.__l.__data_;
          }
          if (v19 >= v30) {
            size_t v32 = v30;
          }
          else {
            size_t v32 = v19;
          }
          int v33 = memcmp(data, p_p, v32);
          BOOL v34 = v30 >= v19;
          if (v33) {
            BOOL v34 = v33 >= 0;
          }
          if (v34) {
            break;
          }
        }
        BOOL v22 = ++v17 < v18;
        ++v14;
        if (v21 == v17)
        {
          int v35 = 0;
          BOOL negate = 0;
          goto LABEL_162;
        }
      }
      BOOL negate = 1;
      int v35 = 5;
LABEL_162:
      p_traits = &this->__traits_;
      char v15 = v113;
    }
    else
    {
      BOOL v22 = 0;
      int v35 = 0;
      BOOL negate = 0;
    }
    if (v15 < 0) {
      operator delete(__p);
    }
    if (v22) {
      goto LABEL_195;
    }
  }
  if (this->__equivalences_.__begin_ == this->__equivalences_.__end_) {
    goto LABEL_200;
  }
  std::regex_traits<char>::__transform_primary<char *>((uint64_t)p_traits, (char *)&v125, (char *)&v127, (uint64_t)&__p);
  std::vector<std::string>::pointer v89 = this->__equivalences_.__begin_;
  uint64_t v90 = v124;
  int64_t v91 = (char *)this->__equivalences_.__end_ - (char *)v89;
  if (v91)
  {
    uint64_t v92 = 0;
    unint64_t v93 = v91 / 24;
    v95 = __p;
    size_t v94 = v123;
    if (v124 >= 0) {
      size_t v96 = v124;
    }
    else {
      size_t v96 = v123;
    }
    if (v93 <= 1) {
      uint64_t v97 = 1;
    }
    else {
      uint64_t v97 = v91 / 24;
    }
    BOOL v98 = 1;
    while (1)
    {
      v99 = &v89[v92];
      std::string::size_type v100 = HIBYTE(v99->__r_.__value_.__r.__words[2]);
      int v101 = (char)v100;
      if ((v100 & 0x80u) != 0) {
        std::string::size_type v100 = v99->__r_.__value_.__l.__size_;
      }
      if (v96 == v100)
      {
        if (v101 >= 0) {
          v102 = &v89[v92];
        }
        else {
          v102 = (std::string *)v99->__r_.__value_.__r.__words[0];
        }
        if ((v90 & 0x80) == 0)
        {
          if (v90)
          {
            v103 = &__p;
            uint64_t v104 = v90;
            do
            {
              if (*(unsigned __int8 *)v103 != v102->__r_.__value_.__s.__data_[0]) {
                goto LABEL_188;
              }
              v103 = (void **)((char *)v103 + 1);
              v102 = (std::string *)((char *)v102 + 1);
              --v104;
            }
            while (v104);
            BOOL negate = 1;
            int v35 = 5;
            goto LABEL_192;
          }
          BOOL negate = 1;
          if (v98) {
            goto LABEL_220;
          }
LABEL_200:
          if ((char)v125 < 0)
          {
            neg_std::regex_traits<char>::char_class_type mask = this->__neg_mask_;
            goto LABEL_213;
          }
          std::regex_traits<char>::char_class_type mask = this->__mask_;
          tab = this->__traits_.__ct_->__tab_;
          std::ctype_base::mask v108 = tab[v125];
          if ((v108 & mask) == 0 && (v125 != 95 || (mask & 0x80) == 0)
            || (char)v126 < 0
            || (tab[v126] & mask) == 0 && ((mask & 0x80) == 0 || v126 != 95))
          {
            neg_std::regex_traits<char>::char_class_type mask = this->__neg_mask_;
            if ((v108 & neg_mask) != 0 || v125 == 95 && (neg_mask & 0x80) != 0)
            {
LABEL_217:
              int v110 = negate;
              goto LABEL_219;
            }
LABEL_213:
            if (((char)v126 & 0x80000000) == 0)
            {
              if ((this->__traits_.__ct_->__tab_[v126] & neg_mask) != 0) {
                goto LABEL_217;
              }
              int v110 = 1;
              if (v126 == 95 && (neg_mask & 0x80) != 0) {
                goto LABEL_217;
              }
LABEL_219:
              BOOL negate = v110;
LABEL_220:
              uint64_t v37 = 2;
              goto LABEL_221;
            }
          }
LABEL_218:
          int v110 = 1;
          goto LABEL_219;
        }
        unint64_t v118 = v93;
        uint64_t v121 = v90;
        int v105 = memcmp(v95, v102, v94);
        unint64_t v93 = v118;
        uint64_t v90 = v121;
        if (!v105) {
          break;
        }
      }
LABEL_188:
      BOOL v98 = ++v92 < v93;
      if (v92 == v97) {
        goto LABEL_191;
      }
    }
    int v35 = 5;
    BOOL negate = 1;
    goto LABEL_193;
  }
  BOOL v98 = 0;
LABEL_191:
  int v35 = 0;
LABEL_192:
  if ((v90 & 0x80) != 0) {
LABEL_193:
  }
    operator delete(__p);
  if (!v98) {
    goto LABEL_200;
  }
LABEL_195:
  if (v35) {
    goto LABEL_220;
  }
  uint64_t v37 = 2;
LABEL_59:
  unsigned __int8 v39 = *a2->__current_;
  unsigned __int8 v125 = v39;
  if (this->__icase_)
  {
    unsigned __int8 v39 = ((uint64_t (*)(const std::ctype<char> *, void))this->__traits_.__ct_->do_tolower)(this->__traits_.__ct_, (char)v39);
    unsigned __int8 v125 = v39;
  }
  std::vector<char>::pointer v40 = this->__chars_.__begin_;
  unint64_t v41 = this->__chars_.__end_ - v40;
  if (v41)
  {
    if (v41 <= 1) {
      unint64_t v41 = 1;
    }
    while (1)
    {
      int v42 = *v40++;
      if (v42 == v39) {
        break;
      }
      if (!--v41) {
        goto LABEL_66;
      }
    }
LABEL_77:
    BOOL negate = 1;
    goto LABEL_221;
  }
LABEL_66:
  std::regex_traits<char>::char_class_type v43 = this->__neg_mask_;
  if (v43 || this->__neg_chars_.__begin_ != this->__neg_chars_.__end_)
  {
    if ((v39 & 0x80) != 0 || (this->__traits_.__ct_->__tab_[v39] & v43) == 0) {
      int v44 = (v39 == 95) & (v43 >> 7);
    }
    else {
      LOBYTE(v44) = 1;
    }
    std::vector<char>::pointer end = this->__neg_chars_.__end_;
    std::vector<char>::pointer v46 = (std::vector<char>::pointer)memchr(this->__neg_chars_.__begin_, (char)v39, end - this->__neg_chars_.__begin_);
    char v47 = v46 ? v46 : end;
    if ((v44 & 1) == 0 && v47 == end) {
      goto LABEL_77;
    }
  }
  std::vector<std::pair<std::string, std::string>>::pointer v49 = this->__ranges_.__begin_;
  std::vector<std::pair<std::string, std::string>>::pointer v48 = this->__ranges_.__end_;
  if (v49 != v48)
  {
    if (this->__collate_)
    {
      std::regex_traits<char>::transform<char *>((uint64_t)&this->__traits_, (char *)&v125, (char *)&v126);
      std::vector<std::pair<std::string, std::string>>::pointer v49 = this->__ranges_.__begin_;
      std::vector<std::pair<std::string, std::string>>::pointer v48 = this->__ranges_.__end_;
    }
    else
    {
      char v124 = 1;
      LOWORD(__p) = v39;
    }
    int64_t v50 = (char *)v48 - (char *)v49;
    if (v50)
    {
      uint64_t v119 = v37;
      BOOL v116 = negate;
      uint64_t v51 = 0;
      unint64_t v52 = v50 / 48;
      char v114 = v124;
      if (v124 >= 0) {
        size_t v53 = v124;
      }
      else {
        size_t v53 = v123;
      }
      if (v124 >= 0) {
        v54 = &__p;
      }
      else {
        v54 = __p;
      }
      if (v52 <= 1) {
        uint64_t v55 = 1;
      }
      else {
        uint64_t v55 = v50 / 48;
      }
      BOOL v56 = 1;
      while (1)
      {
        int v57 = SHIBYTE(v49->first.__r_.__value_.__r.__words[2]);
        if (v57 >= 0) {
          size_t v58 = HIBYTE(v49->first.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t v58 = v49->first.__r_.__value_.__l.__size_;
        }
        if (v57 >= 0) {
          std::vector<std::pair<std::string, std::string>>::pointer v59 = v49;
        }
        else {
          std::vector<std::pair<std::string, std::string>>::pointer v59 = (std::vector<std::pair<std::string, std::string>>::pointer)v49->first.__r_.__value_.__r.__words[0];
        }
        if (v58 >= v53) {
          size_t v60 = v53;
        }
        else {
          size_t v60 = v58;
        }
        int v61 = memcmp(v54, v59, v60);
        BOOL v62 = v53 >= v58;
        if (v61) {
          BOOL v62 = v61 >= 0;
        }
        if (v62)
        {
          int v63 = SHIBYTE(v49->second.__r_.__value_.__r.__words[2]);
          if (v63 >= 0) {
            size_t v64 = HIBYTE(v49->second.__r_.__value_.__r.__words[2]);
          }
          else {
            size_t v64 = v49->second.__r_.__value_.__l.__size_;
          }
          if (v63 >= 0) {
            v65 = &v49->second;
          }
          else {
            v65 = (std::string *)v49->second.__r_.__value_.__l.__data_;
          }
          if (v53 >= v64) {
            size_t v66 = v64;
          }
          else {
            size_t v66 = v53;
          }
          int v67 = memcmp(v65, v54, v66);
          BOOL v68 = v64 >= v53;
          if (v67) {
            BOOL v68 = v67 >= 0;
          }
          if (v68) {
            break;
          }
        }
        BOOL v56 = ++v51 < v52;
        ++v49;
        if (v55 == v51)
        {
          BOOL negate = v116;
          goto LABEL_123;
        }
      }
      BOOL negate = 1;
LABEL_123:
      uint64_t v37 = v119;
      if ((v114 & 0x80) == 0) {
        goto LABEL_125;
      }
    }
    else
    {
      BOOL v56 = 0;
      if ((v124 & 0x80) == 0) {
        goto LABEL_125;
      }
    }
    operator delete(__p);
LABEL_125:
    if (v56) {
      goto LABEL_221;
    }
  }
  if (this->__equivalences_.__begin_ == this->__equivalences_.__end_) {
    goto LABEL_154;
  }
  std::regex_traits<char>::__transform_primary<char *>((uint64_t)&this->__traits_, (char *)&v125, (char *)&v126, (uint64_t)&__p);
  std::vector<std::string>::pointer v69 = this->__equivalences_.__begin_;
  uint64_t v70 = v124;
  int64_t v71 = (char *)this->__equivalences_.__end_ - (char *)v69;
  if (v71)
  {
    uint64_t v120 = v37;
    uint64_t v72 = 0;
    unint64_t v73 = v71 / 24;
    v74 = __p;
    size_t v75 = v123;
    if (v124 >= 0) {
      size_t v76 = v124;
    }
    else {
      size_t v76 = v123;
    }
    if (v73 <= 1) {
      uint64_t v77 = 1;
    }
    else {
      uint64_t v77 = v71 / 24;
    }
    BOOL v78 = 1;
    while (1)
    {
      v79 = &v69[v72];
      std::string::size_type v80 = HIBYTE(v79->__r_.__value_.__r.__words[2]);
      int v81 = (char)v80;
      if ((v80 & 0x80u) != 0) {
        std::string::size_type v80 = v79->__r_.__value_.__l.__size_;
      }
      if (v76 == v80)
      {
        if (v81 >= 0) {
          v82 = &v69[v72];
        }
        else {
          v82 = (std::string *)v79->__r_.__value_.__r.__words[0];
        }
        if ((v70 & 0x80) != 0)
        {
          BOOL v117 = negate;
          unint64_t v85 = v73;
          uint64_t v115 = v77;
          int v86 = memcmp(v74, v82, v75);
          uint64_t v77 = v115;
          unint64_t v73 = v85;
          BOOL negate = v117;
          if (!v86)
          {
            BOOL negate = 1;
            uint64_t v37 = v120;
            goto LABEL_152;
          }
        }
        else
        {
          if (!v70)
          {
            BOOL negate = 1;
            uint64_t v37 = v120;
            if (!v78) {
              goto LABEL_154;
            }
            goto LABEL_221;
          }
          v83 = &__p;
          uint64_t v84 = v70;
          while (*(unsigned __int8 *)v83 == v82->__r_.__value_.__s.__data_[0])
          {
            v83 = (void **)((char *)v83 + 1);
            v82 = (std::string *)((char *)v82 + 1);
            if (!--v84)
            {
              BOOL negate = 1;
              goto LABEL_149;
            }
          }
        }
      }
      BOOL v78 = ++v72 < v73;
      if (v72 == v77)
      {
LABEL_149:
        uint64_t v37 = v120;
        if ((v70 & 0x80) == 0) {
          goto LABEL_153;
        }
        goto LABEL_152;
      }
    }
  }
  BOOL v78 = 0;
  if (v124 < 0) {
LABEL_152:
  }
    operator delete(__p);
LABEL_153:
  if (!v78)
  {
LABEL_154:
    if ((char)v125 < 0) {
      goto LABEL_221;
    }
    std::regex_traits<char>::char_class_type v87 = this->__mask_;
    if ((this->__traits_.__ct_->__tab_[v125] & v87) == 0)
    {
      int v88 = (v87 >> 7) & 1;
      if (v125 != 95) {
        int v88 = 0;
      }
      if (v88 != 1) {
        goto LABEL_221;
      }
    }
    goto LABEL_77;
  }
LABEL_221:
  if (negate == this->__negate_)
  {
    first = 0;
    int v112 = -993;
  }
  else
  {
    a2->__current_ += v37;
    first = this->__first_;
    int v112 = -995;
  }
  a2->__do_ = v112;
  a2->__node_ = first;
}

void std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  char v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    unsigned int v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        std::allocator<std::pair<std::string,std::string>>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      unsigned int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<std::pair<std::string,std::string>>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*(void **)(a2 + 24));
  }
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v3 = *(void **)a2;
    operator delete(v3);
  }
}

std::locale *std::__bracket_expression<char,std::regex_traits<char>>::~__bracket_expression(std::locale *a1)
{
  signed __int8 v7 = a1 + 17;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v7);
  std::basic_regex<char>::value_type locale = a1[14].__locale_;
  if (locale)
  {
    a1[15].__locale_ = locale;
    operator delete(locale);
  }
  signed __int8 v7 = a1 + 11;
  std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v7);
  uint64_t v3 = a1[8].__locale_;
  if (v3)
  {
    a1[9].__locale_ = v3;
    operator delete(v3);
  }
  uint64_t v4 = a1[5].__locale_;
  if (v4)
  {
    a1[6].__locale_ = v4;
    operator delete(v4);
  }
  std::locale::~locale(a1 + 2);
  unsigned int v5 = a1[1].__locale_;
  if (v5) {
    (*(void (**)(std::locale::__imp *))(*(void *)v5 + 8))(v5);
  }
  return a1;
}

void std::regex_traits<char>::transform<char *>(uint64_t a1, char *a2, char *a3)
{
  std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char *>,std::__wrap_iter<char *>>(__p, a2, a3, a3 - a2);
  unint64_t v4 = v7;
  if ((v7 & 0x80u) == 0) {
    unsigned int v5 = __p;
  }
  else {
    unsigned int v5 = (void **)__p[0];
  }
  if ((v7 & 0x80u) != 0) {
    unint64_t v4 = (unint64_t)__p[1];
  }
  (*(void (**)(void, void **, char *))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v5, (char *)v5 + v4);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_223F4A460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::regex_traits<char>::__lookup_collatename<char *>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char *>,std::__wrap_iter<char *>>(&__s, a2, a3, a3 - a2);
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__s.__r_.__value_.__l.__size_) {
      goto LABEL_9;
    }
    p_s = (std::string *)__s.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (!*((unsigned char *)&__s.__r_.__value_.__s + 23)) {
      return;
    }
    p_s = &__s;
  }
  std::__get_collation_name(&v11, (const char *)p_s);
  *(_OWORD *)a4 = *(_OWORD *)&v11.__r_.__value_.__l.__data_;
  unint64_t v7 = v11.__r_.__value_.__r.__words[2];
  *(void *)(a4 + 16) = *((void *)&v11.__r_.__value_.__l + 2);
  unint64_t v8 = HIBYTE(v7);
  if ((v8 & 0x80u) != 0) {
    unint64_t v8 = *(void *)(a4 + 8);
  }
  if (v8) {
    goto LABEL_9;
  }
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    if (__s.__r_.__value_.__l.__size_ >= 3) {
      goto LABEL_9;
    }
  }
  else if (HIBYTE(__s.__r_.__value_.__r.__words[2]) >= 3u)
  {
    return;
  }
  (*(void (**)(std::string *__return_ptr))(**(void **)(a1 + 16) + 32))(&v11);
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  *(std::string *)a4 = v11;
  if ((*(char *)(a4 + 23) & 0x80000000) == 0)
  {
    int v9 = *(unsigned __int8 *)(a4 + 23);
    if (v9 != 12 && v9 != 1)
    {
      *(unsigned char *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
      goto LABEL_9;
    }
    goto LABEL_23;
  }
  uint64_t v10 = *(void *)(a4 + 8);
  if (v10 == 1 || v10 == 12)
  {
LABEL_23:
    std::string::operator=((std::string *)a4, &__s);
    goto LABEL_9;
  }
  **(unsigned char **)a4 = 0;
  *(void *)(a4 + 8) = 0;
LABEL_9:
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s.__r_.__value_.__l.__data_);
  }
}

void sub_223F4A5F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (*(char *)(v17 + 23) < 0) {
    operator delete(*(void **)v17);
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::regex_traits<char>::__transform_primary<char *>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char *>,std::__wrap_iter<char *>>(__p, a2, a3, a3 - a2);
  unint64_t v6 = v12;
  if ((v12 & 0x80u) == 0) {
    unint64_t v7 = __p;
  }
  else {
    unint64_t v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) != 0) {
    unint64_t v6 = (unint64_t)__p[1];
  }
  (*(void (**)(void, void **, char *))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v7, (char *)v7 + v6);
  uint64_t v8 = *(unsigned __int8 *)(a4 + 23);
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a4 + 8);
  }
  if (v8 != 1)
  {
    if (v8 == 12)
    {
      if (v9 >= 0) {
        uint64_t v10 = (unsigned char *)a4;
      }
      else {
        uint64_t v10 = *(unsigned char **)a4;
      }
      v10[11] = v10[3];
    }
    else if (v9 < 0)
    {
      **(unsigned char **)a4 = 0;
      *(void *)(a4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
    }
  }
  if ((char)v12 < 0) {
    operator delete(__p[0]);
  }
}

void sub_223F4A720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)5>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 5);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F4A780(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_expression_term<std::__wrap_iter<char const*>>(uint64_t a1, char *a2, char *a3, uint64_t *a4)
{
  unint64_t v4 = a2;
  if (a2 == a3) {
    return v4;
  }
  int v5 = *a2;
  if (v5 == 93) {
    return v4;
  }
  uint64_t v6 = (uint64_t)a4;
  memset(&v26, 0, sizeof(v26));
  if (a2 + 1 == a3 || v5 != 91)
  {
LABEL_9:
    int v11 = *(_DWORD *)(a1 + 24) & 0x1F0;
    goto LABEL_10;
  }
  int v9 = a2[1];
  if (v9 != 46)
  {
    if (v9 == 58)
    {
      uint64_t v10 = std::basic_regex<char,std::regex_traits<char>>::__parse_character_class<std::__wrap_iter<char const*>>(a1, a2 + 2, a3, (uint64_t)a4);
      goto LABEL_38;
    }
    if (v9 == 61)
    {
      uint64_t v10 = std::basic_regex<char,std::regex_traits<char>>::__parse_equivalence_class<std::__wrap_iter<char const*>>(a1, a2 + 2, a3, a4);
LABEL_38:
      uint64_t v6 = (uint64_t)v10;
      char v21 = 0;
      goto LABEL_42;
    }
    goto LABEL_9;
  }
  size_t v19 = std::basic_regex<char,std::regex_traits<char>>::__parse_collating_symbol<std::__wrap_iter<char const*>>(a1, a2 + 2, a3, (uint64_t)&v26);
  unint64_t v4 = v19;
  int v11 = *(_DWORD *)(a1 + 24) & 0x1F0;
  std::string::size_type size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v26.__r_.__value_.__l.__size_;
  }
  std::vector<std::pair<std::string, std::string>>::pointer v14 = v19;
  if (!size)
  {
LABEL_10:
    if ((v11 | 0x40) == 0x40)
    {
      int v12 = *v4;
      if (v12 == 92)
      {
        unint64_t v13 = v4 + 1;
        if (v11)
        {
          std::vector<std::pair<std::string, std::string>>::pointer v14 = std::basic_regex<char,std::regex_traits<char>>::__parse_awk_escape<std::__wrap_iter<char const*>>((std::basic_regex<char> *)a1, v13, a3, &v26);
        }
        else
        {
          std::vector<std::pair<std::string, std::string>>::pointer v14 = (char *)std::basic_regex<char,std::regex_traits<char>>::__parse_class_escape<std::__wrap_iter<char const*>>((std::basic_regex<char> *)a1, (std::basic_regex<char> *)v13, (std::basic_regex<char> *)a3, &v26, v6);
          int v11 = 0;
        }
        goto LABEL_16;
      }
    }
    else
    {
      LOBYTE(v12) = *v4;
    }
    std::string::operator=(&v26, v12);
    std::vector<std::pair<std::string, std::string>>::pointer v14 = v4 + 1;
  }
LABEL_16:
  if (v14 == a3
    || (int v15 = *v14, v15 == 93)
    || (uint64_t v17 = v14 + 1, v14 + 1 == a3)
    || v15 != 45
    || *v17 == 93)
  {
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    {
      if (v26.__r_.__value_.__l.__size_)
      {
        if (v26.__r_.__value_.__l.__size_ != 1)
        {
          int64_t v16 = (std::string *)v26.__r_.__value_.__r.__words[0];
LABEL_40:
          std::__bracket_expression<char,std::regex_traits<char>>::__add_digraph[abi:ne180100](v6, v16->__r_.__value_.__s.__data_[0], v16->__r_.__value_.__s.__data_[1]);
          goto LABEL_41;
        }
        int64_t v16 = (std::string *)v26.__r_.__value_.__r.__words[0];
        goto LABEL_25;
      }
    }
    else if (*((unsigned char *)&v26.__r_.__value_.__s + 23))
    {
      int64_t v16 = &v26;
      if (HIBYTE(v26.__r_.__value_.__r.__words[2]) != 1) {
        goto LABEL_40;
      }
LABEL_25:
      std::__bracket_expression<char,std::regex_traits<char>>::__add_char[abi:ne180100](v6, v16->__r_.__value_.__s.__data_[0]);
    }
LABEL_41:
    char v21 = 1;
    unint64_t v4 = v14;
    goto LABEL_42;
  }
  memset(&v25, 0, sizeof(v25));
  unint64_t v4 = v14 + 2;
  if (v14 + 2 != a3 && *v17 == 91 && *v4 == 46)
  {
    unint64_t v18 = std::basic_regex<char,std::regex_traits<char>>::__parse_collating_symbol<std::__wrap_iter<char const*>>(a1, v14 + 3, a3, (uint64_t)&v25);
LABEL_55:
    unint64_t v4 = v18;
    goto LABEL_56;
  }
  if ((v11 | 0x40) == 0x40)
  {
    LODWORD(v17) = *v17;
    if (v17 == 92)
    {
      if (v11) {
        unint64_t v18 = std::basic_regex<char,std::regex_traits<char>>::__parse_awk_escape<std::__wrap_iter<char const*>>((std::basic_regex<char> *)a1, v14 + 2, a3, &v25);
      }
      else {
        unint64_t v18 = (char *)std::basic_regex<char,std::regex_traits<char>>::__parse_class_escape<std::__wrap_iter<char const*>>((std::basic_regex<char> *)a1, (std::basic_regex<char> *)(v14 + 2), (std::basic_regex<char> *)a3, &v25, v6);
      }
      goto LABEL_55;
    }
  }
  else
  {
    LOBYTE(v17) = *v17;
  }
  std::string::operator=(&v25, (std::string::value_type)v17);
LABEL_56:
  std::string v24 = v26;
  memset(&v26, 0, sizeof(v26));
  std::string __p = v25;
  memset(&v25, 0, sizeof(v25));
  std::__bracket_expression<char,std::regex_traits<char>>::__add_range[abi:ne180100](v6, (char *)&v24, (char *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
  char v21 = 1;
LABEL_42:
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
  if (v21) {
    return v4;
  }
  return (char *)v6;
}

void sub_223F4AAE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v28 - 49) < 0) {
    operator delete(*(void **)(v28 - 72));
  }
  _Unwind_Resume(exception_object);
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_equivalence_class<std::__wrap_iter<char const*>>(uint64_t a1, char *a2, char *a3, uint64_t *a4)
{
  if (a3 - a2 < 2 || a3 - 1 == a2) {
    goto LABEL_33;
  }
  uint64_t v6 = a3 - 2;
  unint64_t v7 = a2;
  uint64_t v8 = a2;
  for (i = a2; ; uint64_t v8 = i)
  {
    int v10 = *i++;
    if (v10 == 61 && *i == 93) {
      break;
    }
    if (a2 == v6) {
      goto LABEL_33;
    }
    ++v7;
    --v6;
  }
  if (v8 == a3) {
LABEL_33:
  }
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)5>();
  std::regex_traits<char>::__lookup_collatename<char *>(a1, a2, v7, (uint64_t)&v20);
  if (((char)v22 & 0x80000000) == 0)
  {
    uint64_t v11 = v22;
    if (v22)
    {
      int v12 = (char *)&v20;
      goto LABEL_14;
    }
LABEL_34:
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)1>();
  }
  uint64_t v11 = v21;
  if (!v21) {
    goto LABEL_34;
  }
  int v12 = (char *)v20;
LABEL_14:
  std::regex_traits<char>::__transform_primary<char *>(a1, v12, &v12[v11], (uint64_t)__p);
  unint64_t v13 = v19;
  if ((v19 & 0x80u) != 0) {
    unint64_t v13 = (unint64_t)__p[1];
  }
  if (v13)
  {
    std::__bracket_expression<char,std::regex_traits<char>>::__add_equivalence[abi:ne180100](a4, (long long *)__p);
  }
  else
  {
    uint64_t v14 = v22;
    if ((v22 & 0x80u) != 0) {
      uint64_t v14 = v21;
    }
    if (v14 == 2)
    {
      int64_t v16 = (char *)&v20;
      if ((v22 & 0x80u) != 0) {
        int64_t v16 = (char *)v20;
      }
      std::__bracket_expression<char,std::regex_traits<char>>::__add_digraph[abi:ne180100]((uint64_t)a4, *v16, v16[1]);
    }
    else
    {
      if (v14 != 1) {
        std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)1>();
      }
      int v15 = (char *)&v20;
      if ((v22 & 0x80u) != 0) {
        int v15 = (char *)v20;
      }
      std::__bracket_expression<char,std::regex_traits<char>>::__add_char[abi:ne180100]((uint64_t)a4, *v15);
    }
  }
  if ((char)v19 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v22 < 0) {
    operator delete(v20);
  }
  return v7 + 2;
}

void sub_223F4AD04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_character_class<std::__wrap_iter<char const*>>(uint64_t a1, char *a2, char *a3, uint64_t a4)
{
  if (a3 - a2 < 2 || a3 - 1 == a2) {
    goto LABEL_11;
  }
  int v5 = a3 - 2;
  uint64_t v6 = a2;
  unint64_t v7 = a2;
  for (i = a2; ; unint64_t v7 = i)
  {
    int v9 = *i++;
    if (v9 == 58 && *i == 93) {
      break;
    }
    if (a2 == v5) {
      goto LABEL_11;
    }
    ++v6;
    --v5;
  }
  if (v7 == a3) {
LABEL_11:
  }
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)5>();
  int v10 = std::regex_traits<char>::__lookup_classname<std::__wrap_iter<char const*>>(a1, a2, v6, *(_DWORD *)(a1 + 24) & 1);
  if (!v10) {
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)2>();
  }
  *(_DWORD *)(a4 + 160) |= v10;
  return v6 + 2;
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_collating_symbol<std::__wrap_iter<char const*>>(uint64_t a1, char *a2, char *a3, uint64_t a4)
{
  if (a3 - a2 < 2 || a3 - 1 == a2) {
    goto LABEL_15;
  }
  int v5 = a3 - 2;
  uint64_t v6 = a2;
  unint64_t v7 = a2;
  for (i = a2; ; unint64_t v7 = i)
  {
    int v9 = *i++;
    if (v9 == 46 && *i == 93) {
      break;
    }
    if (a2 == v5) {
      goto LABEL_15;
    }
    ++v6;
    --v5;
  }
  if (v7 == a3) {
LABEL_15:
  }
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)5>();
  std::regex_traits<char>::__lookup_collatename<char *>(a1, a2, v6, (uint64_t)&v13);
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  *(_OWORD *)a4 = v13;
  unint64_t v10 = v14;
  *(void *)(a4 + 16) = v14;
  unint64_t v11 = HIBYTE(v10);
  if ((v11 & 0x80u) != 0) {
    unint64_t v11 = *(void *)(a4 + 8);
  }
  if (v11 - 1 >= 2) {
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)1>();
  }
  return v6 + 2;
}

std::basic_regex<char> *std::basic_regex<char,std::regex_traits<char>>::__parse_class_escape<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, std::basic_regex<char> *this, std::basic_regex<char> *a3, std::string *a4, uint64_t a5)
{
  if (this == a3) {
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)3>();
  }
  int locale_low = SLOBYTE(this->__traits_.__loc_.__locale_);
  if (locale_low > 97)
  {
    if (locale_low > 114)
    {
      if (locale_low != 115)
      {
        if (locale_low != 119) {
          return std::basic_regex<char,std::regex_traits<char>>::__parse_character_escape<std::__wrap_iter<char const*>>(a1, this, a3, a4);
        }
        *(_DWORD *)(a5 + 160) |= 0x500u;
        std::__bracket_expression<char,std::regex_traits<char>>::__add_char[abi:ne180100](a5, 95);
        return (std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 1);
      }
      int v8 = *(_DWORD *)(a5 + 160) | 0x4000;
    }
    else
    {
      if (locale_low == 98)
      {
        unint64_t v10 = a4;
        std::string::value_type v9 = 8;
LABEL_19:
        std::string::operator=(v10, v9);
        return (std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 1);
      }
      if (locale_low != 100) {
        return std::basic_regex<char,std::regex_traits<char>>::__parse_character_escape<std::__wrap_iter<char const*>>(a1, this, a3, a4);
      }
      int v8 = *(_DWORD *)(a5 + 160) | 0x400;
    }
    *(_DWORD *)(a5 + 16CoreML::Specification::Identity::New(this, 0) = v8;
    return (std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 1);
  }
  if (locale_low <= 82)
  {
    if (LOBYTE(this->__traits_.__loc_.__locale_))
    {
      if (locale_low == 68)
      {
        int v7 = *(_DWORD *)(a5 + 164) | 0x400;
LABEL_21:
        *(_DWORD *)(a5 + 164) = v7;
        return (std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 1);
      }
      return std::basic_regex<char,std::regex_traits<char>>::__parse_character_escape<std::__wrap_iter<char const*>>(a1, this, a3, a4);
    }
    std::string::value_type v9 = 0;
    unint64_t v10 = a4;
    goto LABEL_19;
  }
  if (locale_low == 83)
  {
    int v7 = *(_DWORD *)(a5 + 164) | 0x4000;
    goto LABEL_21;
  }
  if (locale_low == 87)
  {
    *(_DWORD *)(a5 + 164) |= 0x500u;
    std::__bracket_expression<char,std::regex_traits<char>>::__add_neg_char[abi:ne180100](a5, 95);
    return (std::basic_regex<char> *)((char *)&this->__traits_.__loc_.__locale_ + 1);
  }
  return std::basic_regex<char,std::regex_traits<char>>::__parse_character_escape<std::__wrap_iter<char const*>>(a1, this, a3, a4);
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_awk_escape<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, char *a2, char *a3, std::string *this)
{
  if (a2 == a3) {
LABEL_52:
  }
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)3>();
  int v5 = *a2;
  if (v5 > 97)
  {
    switch(v5)
    {
      case 'n':
        if (this)
        {
          uint64_t v6 = this;
          LOBYTE(v5) = 10;
          goto LABEL_16;
        }
        LOBYTE(v5) = 10;
        goto LABEL_49;
      case 'o':
      case 'p':
      case 'q':
      case 's':
      case 'u':
        goto LABEL_21;
      case 'r':
        if (this)
        {
          uint64_t v6 = this;
          LOBYTE(v5) = 13;
          goto LABEL_16;
        }
        LOBYTE(v5) = 13;
        goto LABEL_49;
      case 't':
        if (this)
        {
          uint64_t v6 = this;
          LOBYTE(v5) = 9;
          goto LABEL_16;
        }
        LOBYTE(v5) = 9;
        goto LABEL_49;
      case 'v':
        if (this)
        {
          uint64_t v6 = this;
          LOBYTE(v5) = 11;
          goto LABEL_16;
        }
        LOBYTE(v5) = 11;
        goto LABEL_49;
      default:
        if (v5 == 98)
        {
          if (this)
          {
            uint64_t v6 = this;
            LOBYTE(v5) = 8;
            goto LABEL_16;
          }
          LOBYTE(v5) = 8;
        }
        else
        {
          if (v5 != 102) {
            goto LABEL_21;
          }
          if (this)
          {
            uint64_t v6 = this;
            LOBYTE(v5) = 12;
            goto LABEL_16;
          }
          LOBYTE(v5) = 12;
        }
        break;
    }
    goto LABEL_49;
  }
  if (v5 > 91)
  {
    if (v5 != 92)
    {
      if (v5 != 97) {
        goto LABEL_21;
      }
      if (this)
      {
        uint64_t v6 = this;
        LOBYTE(v5) = 7;
LABEL_16:
        std::string::operator=(v6, v5);
        return a2 + 1;
      }
      LOBYTE(v5) = 7;
LABEL_49:
      std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, v5);
      return a2 + 1;
    }
LABEL_14:
    if (this)
    {
      uint64_t v6 = this;
      goto LABEL_16;
    }
    goto LABEL_49;
  }
  if (v5 == 34 || v5 == 47) {
    goto LABEL_14;
  }
LABEL_21:
  if ((v5 & 0xFFFFFFF8) != 0x30) {
    goto LABEL_52;
  }
  std::string::value_type v7 = v5 - 48;
  int v8 = a2 + 1;
  if (a2 + 1 != a3)
  {
    if ((*v8 & 0xF8) != 0x30) {
      goto LABEL_39;
    }
    std::string::value_type v7 = *v8 + 8 * v7 - 48;
    if (a2 + 2 != a3)
    {
      char v9 = a2[2];
      int v10 = v9 & 0xF8;
      std::string::value_type v11 = v9 + 8 * v7 - 48;
      if (v10 == 48) {
        int v8 = a2 + 3;
      }
      else {
        int v8 = a2 + 2;
      }
      if (v10 == 48) {
        std::string::value_type v7 = v11;
      }
      goto LABEL_39;
    }
  }
  int v8 = a3;
LABEL_39:
  if (this) {
    std::string::operator=(this, v7);
  }
  else {
    std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, v7);
  }
  return v8;
}

void std::__bracket_expression<char,std::regex_traits<char>>::__add_range[abi:ne180100](uint64_t a1, char *a2, char *a3)
{
  uint64_t v3 = a3;
  unint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 170))
  {
    if (*(unsigned char *)(a1 + 169))
    {
      for (unint64_t i = 0; ; ++i)
      {
        unint64_t v7 = v4[23] < 0 ? *((void *)v4 + 1) : v4[23];
        if (i >= v7) {
          break;
        }
        int v8 = v4;
        if (v4[23] < 0) {
          int v8 = *(char **)v4;
        }
        char v9 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), v8[i]);
        int v10 = v4;
        if (v4[23] < 0) {
          int v10 = *(char **)v4;
        }
        v10[i] = v9;
      }
      for (unint64_t j = 0; ; ++j)
      {
        unint64_t v12 = v3[23] < 0 ? *((void *)v3 + 1) : v3[23];
        if (j >= v12) {
          break;
        }
        long long v13 = v3;
        if (v3[23] < 0) {
          long long v13 = *(char **)v3;
        }
        char v14 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), v13[j]);
        int v15 = v3;
        if (v3[23] < 0) {
          int v15 = *(char **)v3;
        }
        v15[j] = v14;
      }
    }
    else
    {
      for (unint64_t k = 0; ; ++k)
      {
        unint64_t v18 = a2[23] < 0 ? *((void *)a2 + 1) : a2[23];
        if (k >= v18) {
          break;
        }
        unsigned __int8 v19 = a2;
        if (a2[23] < 0) {
          unsigned __int8 v19 = *(char **)a2;
        }
        std::vector<std::csub_match>::size_type v20 = a2;
        if (a2[23] < 0) {
          std::vector<std::csub_match>::size_type v20 = *(char **)a2;
        }
        v20[k] = v19[k];
      }
      for (unint64_t m = 0; ; ++m)
      {
        unint64_t v22 = a3[23] < 0 ? *((void *)a3 + 1) : a3[23];
        if (m >= v22) {
          break;
        }
        int v23 = a3;
        if (a3[23] < 0) {
          int v23 = *(char **)a3;
        }
        std::string v24 = a3;
        if (a3[23] < 0) {
          std::string v24 = *(char **)a3;
        }
        v24[m] = v23[m];
      }
    }
    if (v4[23] < 0)
    {
      std::string v26 = v4;
      unint64_t v4 = *(char **)v4;
      uint64_t v25 = *((void *)v26 + 1);
    }
    else
    {
      uint64_t v25 = v4[23];
    }
    std::regex_traits<char>::transform<char *>(a1 + 16, v4, &v4[v25]);
    if (v3[23] < 0)
    {
      uint64_t v28 = v3;
      uint64_t v3 = *(char **)v3;
      uint64_t v27 = *((void *)v28 + 1);
    }
    else
    {
      uint64_t v27 = v3[23];
    }
    std::regex_traits<char>::transform<char *>(a1 + 16, v3, &v3[v27]);
    *(_OWORD *)std::vector<char>::pointer v40 = v38;
    uint64_t v41 = v39;
    *(_OWORD *)std::string __p = *(_OWORD *)v36;
    uint64_t v43 = v37;
    std::vector<std::pair<std::string,std::string>>::push_back[abi:ne180100]((std::vector<std::pair<std::string, std::string>> *)(a1 + 88), (long long *)v40);
    if (SHIBYTE(v43) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v41) < 0) {
      operator delete(v40[0]);
    }
  }
  else
  {
    if (a2[23] < 0) {
      uint64_t v16 = *((void *)a2 + 1);
    }
    else {
      uint64_t v16 = a2[23];
    }
    if (v16 != 1 || (a3[23] < 0 ? (uint64_t v29 = *((void *)a3 + 1)) : (uint64_t v29 = a3[23]), v29 != 1)) {
      std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)9>();
    }
    if (*(unsigned char *)(a1 + 169))
    {
      size_t v30 = a2;
      if (a2[23] < 0) {
        size_t v30 = *(char **)a2;
      }
      char v31 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *v30);
      size_t v32 = v4;
      if (v4[23] < 0) {
        size_t v32 = *(unsigned char **)v4;
      }
      unsigned char *v32 = v31;
      int v33 = v3;
      if (v3[23] < 0) {
        int v33 = *(char **)v3;
      }
      char v34 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *v33);
      int v35 = v3;
      if (v3[23] < 0) {
        int v35 = *(unsigned char **)v3;
      }
      *int v35 = v34;
    }
    *(_OWORD *)std::vector<char>::pointer v40 = *(_OWORD *)v4;
    uint64_t v41 = *((void *)v4 + 2);
    *((void *)v4 + 1) = 0;
    *((void *)v4 + 2) = 0;
    *(void *)unint64_t v4 = 0;
    *(_OWORD *)std::string __p = *(_OWORD *)v3;
    uint64_t v43 = *((void *)v3 + 2);
    *(void *)uint64_t v3 = 0;
    *((void *)v3 + 1) = 0;
    *((void *)v3 + 2) = 0;
    std::vector<std::pair<std::string,std::string>>::push_back[abi:ne180100]((std::vector<std::pair<std::string, std::string>> *)(a1 + 88), (long long *)v40);
    if (SHIBYTE(v43) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v41) < 0) {
      operator delete(v40[0]);
    }
  }
}

void sub_223F4B5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
}

void std::__bracket_expression<char,std::regex_traits<char>>::__add_digraph[abi:ne180100](uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(unsigned char *)(a1 + 169))
  {
    uint64_t v18 = a1 + 128;
    unint64_t v19 = *(void *)(a1 + 128);
    int v10 = (char **)(a1 + 112);
    __int16 v8 = a2 | (unsigned __int16)((_WORD)a3 << 8);
    char v9 = *(_WORD **)(a1 + 120);
    if (*(unsigned char *)(a1 + 170))
    {
      if ((unint64_t)v9 < v19) {
        goto LABEL_24;
      }
      uint64_t v20 = (char *)v9 - *v10;
      if (v20 > -3)
      {
        uint64_t v21 = v20 >> 1;
        unint64_t v22 = v19 - (void)*v10;
        if (v22 <= (v20 >> 1) + 1) {
          unint64_t v23 = v21 + 1;
        }
        else {
          unint64_t v23 = v22;
        }
        if (v22 >= 0x7FFFFFFFFFFFFFFELL) {
          uint64_t v24 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v24 = v23;
        }
        if (v24) {
          uint64_t v25 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<half>>(v18, v24);
        }
        else {
          uint64_t v25 = 0;
        }
        uint64_t v27 = &v25[2 * v21];
        uint64_t v28 = &v25[2 * v24];
        *(_WORD *)uint64_t v27 = v8;
        std::string v26 = v27 + 2;
        long long v38 = *(char **)(a1 + 112);
        uint64_t v29 = *(char **)(a1 + 120);
        if (v29 == v38) {
          goto LABEL_46;
        }
        do
        {
          __int16 v39 = *((_WORD *)v29 - 1);
          v29 -= 2;
          *((_WORD *)v27 - 1) = v39;
          v27 -= 2;
        }
        while (v29 != v38);
        goto LABEL_45;
      }
    }
    else
    {
      if ((unint64_t)v9 < v19) {
        goto LABEL_24;
      }
      uint64_t v32 = (char *)v9 - *v10;
      if (v32 > -3)
      {
        uint64_t v33 = v32 >> 1;
        unint64_t v34 = v19 - (void)*v10;
        if (v34 <= (v32 >> 1) + 1) {
          unint64_t v35 = v33 + 1;
        }
        else {
          unint64_t v35 = v34;
        }
        if (v34 >= 0x7FFFFFFFFFFFFFFELL) {
          uint64_t v36 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v36 = v35;
        }
        if (v36) {
          uint64_t v37 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<half>>(v18, v36);
        }
        else {
          uint64_t v37 = 0;
        }
        uint64_t v27 = &v37[2 * v33];
        uint64_t v28 = &v37[2 * v36];
        *(_WORD *)uint64_t v27 = v8;
        std::string v26 = v27 + 2;
        std::vector<char>::pointer v40 = *(char **)(a1 + 112);
        uint64_t v29 = *(char **)(a1 + 120);
        if (v29 == v40) {
          goto LABEL_46;
        }
        do
        {
          __int16 v41 = *((_WORD *)v29 - 1);
          v29 -= 2;
          *((_WORD *)v27 - 1) = v41;
          v27 -= 2;
        }
        while (v29 != v40);
        goto LABEL_45;
      }
    }
LABEL_49:
    std::vector<float>::__throw_length_error[abi:ne180100]();
  }
  unsigned __int8 v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
  __int16 v6 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a3);
  unint64_t v7 = *(void *)(a1 + 128);
  __int16 v8 = v5 | (unsigned __int16)(v6 << 8);
  char v9 = *(_WORD **)(a1 + 120);
  if ((unint64_t)v9 < v7)
  {
LABEL_24:
    *char v9 = v8;
    std::string v26 = v9 + 1;
    goto LABEL_48;
  }
  int v10 = (char **)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 112);
  uint64_t v12 = (uint64_t)v9 - v11;
  if ((uint64_t)v9 - v11 <= -3) {
    goto LABEL_49;
  }
  uint64_t v13 = v12 >> 1;
  unint64_t v14 = v7 - v11;
  if (v14 <= (v12 >> 1) + 1) {
    unint64_t v15 = v13 + 1;
  }
  else {
    unint64_t v15 = v14;
  }
  if (v14 >= 0x7FFFFFFFFFFFFFFELL) {
    uint64_t v16 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v16 = v15;
  }
  if (v16) {
    uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<half>>(a1 + 128, v16);
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v27 = &v17[2 * v13];
  uint64_t v28 = &v17[2 * v16];
  *(_WORD *)uint64_t v27 = v8;
  std::string v26 = v27 + 2;
  size_t v30 = *(char **)(a1 + 112);
  uint64_t v29 = *(char **)(a1 + 120);
  if (v29 == v30) {
    goto LABEL_46;
  }
  do
  {
    __int16 v31 = *((_WORD *)v29 - 1);
    v29 -= 2;
    *((_WORD *)v27 - 1) = v31;
    v27 -= 2;
  }
  while (v29 != v30);
LABEL_45:
  uint64_t v29 = *v10;
LABEL_46:
  *(void *)(a1 + 112) = v27;
  *(void *)(a1 + 12CoreML::Specification::Identity::New(this, 0) = v26;
  *(void *)(a1 + 128) = v28;
  if (v29) {
    operator delete(v29);
  }
LABEL_48:
  *(void *)(a1 + 12CoreML::Specification::Identity::New(this, 0) = v26;
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)1>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 1);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F4B8D0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__bracket_expression<char,std::regex_traits<char>>::__add_equivalence[abi:ne180100](uint64_t *a1, long long *a2)
{
  uint64_t v3 = a1 + 17;
  unint64_t v4 = a1[18];
  if (v4 >= a1[19])
  {
    uint64_t result = std::vector<std::string>::__push_back_slow_path<std::string const&>(v3, a2);
  }
  else
  {
    std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v3, a2);
    uint64_t result = v4 + 24;
  }
  a1[18] = result;
  return result;
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)2>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 2);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F4B96C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::regex_traits<char>::__lookup_classname<std::__wrap_iter<char const*>>(uint64_t a1, char *a2, char *a3, BOOL a4)
{
  std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char *>,std::__wrap_iter<char *>>(__p, a2, a3, a3 - a2);
  unint64_t v6 = v12;
  if ((v12 & 0x80u) == 0) {
    unint64_t v7 = __p;
  }
  else {
    unint64_t v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) != 0) {
    unint64_t v6 = (unint64_t)__p[1];
  }
  (*(void (**)(void, void **, char *))(**(void **)(a1 + 8) + 48))(*(void *)(a1 + 8), v7, (char *)v7 + v6);
  if ((v12 & 0x80u) == 0) {
    __int16 v8 = __p;
  }
  else {
    __int16 v8 = (void **)__p[0];
  }
  uint64_t classname = std::__get_classname((const char *)v8, a4);
  if ((char)v12 < 0) {
    operator delete(__p[0]);
  }
  return classname;
}

void sub_223F4BA38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::__bracket_expression<char,std::regex_traits<char>>::__add_neg_char[abi:ne180100](uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  if (*(unsigned char *)(a1 + 169))
  {
    char v2 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
    unsigned __int8 v5 = *(unsigned char **)(a1 + 72);
    unint64_t v4 = *(void *)(a1 + 80);
    if ((unint64_t)v5 >= v4)
    {
      unint64_t v6 = (unint64_t *)(a1 + 64);
      unint64_t v7 = *(void *)(a1 + 64);
      __int16 v8 = &v5[-v7];
      uint64_t v9 = (uint64_t)&v5[-v7 + 1];
      if (v9 >= 0)
      {
        unint64_t v10 = v4 - v7;
        if (2 * v10 > v9) {
          uint64_t v9 = 2 * v10;
        }
        if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v11 = v9;
        }
        if (v11) {
          unsigned __int8 v12 = operator new(v11);
        }
        else {
          unsigned __int8 v12 = 0;
        }
        uint64_t v20 = &v8[(void)v12];
        uint64_t v21 = (char *)v12 + v11;
        v8[(void)v12] = v2;
        uint64_t v19 = (uint64_t)&v8[(void)v12 + 1];
        if (v5 != (unsigned char *)v7)
        {
          unint64_t v22 = &v5[~v7];
          do
          {
            char v23 = *--v5;
            (v22--)[(void)v12] = v23;
          }
          while (v5 != (unsigned char *)v7);
LABEL_45:
          unsigned __int8 v5 = (unsigned char *)*v6;
          goto LABEL_47;
        }
        goto LABEL_46;
      }
LABEL_50:
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    goto LABEL_22;
  }
  unint64_t v6 = (unint64_t *)(a1 + 64);
  unsigned __int8 v5 = *(unsigned char **)(a1 + 72);
  unint64_t v13 = *(void *)(a1 + 80);
  if (!*(unsigned char *)(a1 + 170))
  {
    if ((unint64_t)v5 >= v13)
    {
      unint64_t v24 = *v6;
      uint64_t v25 = &v5[-*v6];
      unint64_t v26 = (unint64_t)(v25 + 1);
      if ((uint64_t)(v25 + 1) >= 0)
      {
        unint64_t v27 = v13 - v24;
        if (2 * v27 > v26) {
          unint64_t v26 = 2 * v27;
        }
        if (v27 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v28 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v28 = v26;
        }
        if (v28) {
          unsigned __int8 v12 = operator new(v28);
        }
        else {
          unsigned __int8 v12 = 0;
        }
        uint64_t v20 = &v25[(void)v12];
        uint64_t v21 = (char *)v12 + v28;
        v25[(void)v12] = v2;
        uint64_t v19 = (uint64_t)&v25[(void)v12 + 1];
        if (v5 != (unsigned char *)v24)
        {
          __int16 v31 = &v5[~v24];
          do
          {
            char v32 = *--v5;
            (v31--)[(void)v12] = v32;
          }
          while (v5 != (unsigned char *)v24);
          goto LABEL_45;
        }
        goto LABEL_46;
      }
      goto LABEL_50;
    }
LABEL_22:
    unsigned char *v5 = v2;
    uint64_t v19 = (uint64_t)(v5 + 1);
    goto LABEL_49;
  }
  if ((unint64_t)v5 < v13) {
    goto LABEL_22;
  }
  unint64_t v14 = *v6;
  unint64_t v15 = &v5[-*v6];
  unint64_t v16 = (unint64_t)(v15 + 1);
  if ((uint64_t)(v15 + 1) < 0) {
    goto LABEL_50;
  }
  unint64_t v17 = v13 - v14;
  if (2 * v17 > v16) {
    unint64_t v16 = 2 * v17;
  }
  if (v17 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v18 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v18 = v16;
  }
  if (v18) {
    unsigned __int8 v12 = operator new(v18);
  }
  else {
    unsigned __int8 v12 = 0;
  }
  uint64_t v20 = &v15[(void)v12];
  uint64_t v21 = (char *)v12 + v18;
  v15[(void)v12] = v2;
  uint64_t v19 = (uint64_t)&v15[(void)v12 + 1];
  if (v5 != (unsigned char *)v14)
  {
    uint64_t v29 = &v5[~v14];
    do
    {
      char v30 = *--v5;
      (v29--)[(void)v12] = v30;
    }
    while (v5 != (unsigned char *)v14);
    goto LABEL_45;
  }
LABEL_46:
  unsigned __int8 v12 = v20;
LABEL_47:
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v19;
  *(void *)(a1 + 8CoreML::Specification::Identity::New(this, 0) = v21;
  if (v5) {
    operator delete(v5);
  }
LABEL_49:
  *(void *)(a1 + 72) = v19;
}

void std::vector<std::pair<std::string,std::string>>::push_back[abi:ne180100](std::vector<std::pair<std::string, std::string>> *a1, long long *a2)
{
  value = a1->__end_cap_.__value_;
  p_end_cap = (std::allocator<std::pair<std::string, std::string>> *)&a1->__end_cap_;
  unsigned __int8 v5 = value;
  unint64_t v7 = *((void *)p_end_cap - 1);
  if (v7 >= (unint64_t)value)
  {
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (unint64_t)a1->__begin_) >> 4);
    unint64_t v12 = v11 + 1;
    if (v11 + 1 > 0x555555555555555) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (char *)a1->__begin_) >> 4);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v14 = 0x555555555555555;
    }
    else {
      unint64_t v14 = v12;
    }
    __v.__end_cap_.__value_ = p_end_cap;
    if (v14) {
      unint64_t v15 = (std::pair<std::string, std::string> *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>>((uint64_t)p_end_cap, v14);
    }
    else {
      unint64_t v15 = 0;
    }
    unint64_t v16 = v15 + v11;
    __v.__first_ = v15;
    __v.__begin_ = v16;
    __v.__end_cap_.__value_ = &v15[v14];
    long long v17 = *a2;
    v16->first.__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v16->first.__r_.__value_.__l.__data_ = v17;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v18 = *(long long *)((char *)a2 + 24);
    v16->second.__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
    *(_OWORD *)&v16->second.__r_.__value_.__l.__data_ = v18;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    __v.__end_ = v16 + 1;
    std::vector<std::pair<std::string,std::string>>::__swap_out_circular_buffer(a1, &__v);
    std::vector<char>::pointer end = a1->__end_;
    std::__split_buffer<std::pair<std::string,std::string>>::~__split_buffer(&__v);
  }
  else
  {
    long long v8 = *a2;
    *(void *)(v7 + 16) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v7 = v8;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v9 = *(long long *)((char *)a2 + 24);
    *(void *)(v7 + 4CoreML::Specification::Identity::New(this, 0) = *((void *)a2 + 5);
    *(_OWORD *)(v7 + 24) = v9;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    std::vector<char>::pointer end = (std::pair<std::string, std::string> *)(v7 + 48);
    a1->__end_ = (std::vector<std::pair<std::string, std::string>>::pointer)(v7 + 48);
  }
  a1->__end_ = end;
}

void sub_223F4BDF4(_Unwind_Exception *a1, std::__split_buffer<std::pair<std::string, std::string>> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)9>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 9);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F4BE4C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::vector<std::pair<std::string,std::string>>::__swap_out_circular_buffer(std::vector<std::pair<std::string, std::string>> *this, std::__split_buffer<std::pair<std::string, std::string>> *__v)
{
  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>,std::reverse_iterator<std::pair<std::string,std::string>*>,std::reverse_iterator<std::pair<std::string,std::string>*>,std::reverse_iterator<std::pair<std::string,std::string>*>>((uint64_t)&this->__end_cap_, (uint64_t)this->__end_, (uint64_t)this->__end_, (uint64_t)this->__begin_, (uint64_t)this->__begin_, (uint64_t)__v->__begin_, (uint64_t)__v->__begin_);
  __v->__begin_ = v4;
  std::vector<std::pair<char, char>>::pointer begin = this->__begin_;
  this->__begin_ = v4;
  __v->__begin_ = begin;
  std::vector<char>::pointer end = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = end;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(48 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>,std::reverse_iterator<std::pair<std::string,std::string>*>,std::reverse_iterator<std::pair<std::string,std::string>*>,std::reverse_iterator<std::pair<std::string,std::string>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 48);
      *(void *)(v9 - 32) = *(void *)(a3 - 32);
      *(_OWORD *)(v9 - 48) = v10;
      *(void *)(a3 - 4CoreML::Specification::Identity::New(this, 0) = 0;
      *(void *)(a3 - 32) = 0;
      *(void *)(a3 - 48) = 0;
      long long v11 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v11;
      v9 -= 48;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 48;
      a3 -= 48;
    }
    while (a3 != a5);
    *((void *)&v16 + 1) = v9;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,std::string>>,std::reverse_iterator<std::pair<std::string,std::string>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return a6;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,std::string>>,std::reverse_iterator<std::pair<std::string,std::string>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,std::string>>,std::reverse_iterator<std::pair<std::string,std::string>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,std::string>>,std::reverse_iterator<std::pair<std::string,std::string>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      std::allocator<std::pair<std::string,std::string>>::destroy[abi:ne180100](v3, v1);
      v1 += 48;
    }
    while (v1 != v2);
  }
}

void std::__split_buffer<std::pair<std::string,std::string>>::~__split_buffer(std::__split_buffer<std::pair<std::string, std::string>> *this)
{
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

void std::__split_buffer<std::pair<std::string,std::string>>::clear[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 48;
    std::allocator<std::pair<std::string,std::string>>::destroy[abi:ne180100](v4, i - 48);
  }
}

uint64_t std::__begin_marked_subexpression<char>::__exec(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(*(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 16) - std::__tree<std::__value_type<unsigned long long,double>,std::__map_value_compare<unsigned long long,std::__value_type<unsigned long long,double>,std::less<unsigned long long>,true>,std::allocator<std::__value_type<unsigned long long,double>>>::destroy((uint64_t)this, *((void **)this + 1)) = *(void *)(a2 + 16);
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = *(void *)(result + 8);
  return result;
}

uint64_t std::__end_marked_subexpression<char>::__exec(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  uint64_t v2 = *(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 16) - 1);
  *(void *)(v2 + 8) = *(void *)(a2 + 16);
  *(unsigned char *)(v2 + 16) = 1;
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = *(void *)(result + 8);
  return result;
}

void std::basic_regex<char,std::regex_traits<char>>::__push_loop(std::basic_regex<char> *this, size_t __min, size_t __max, std::__owns_one_state<char> *__s, size_t __mexp_begin, size_t __mexp_end, BOOL __greedy)
{
}

void sub_223F4C2A0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_DUP_COUNT<std::__wrap_iter<char const*>>(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, int *a4)
{
  if (a2 != a3)
  {
    int v4 = *a2;
    if ((v4 & 0xF8) == 0x30 || (v4 & 0xFE) == 0x38)
    {
      int v5 = v4 - 48;
      *a4 = v5;
      if (++a2 == a3)
      {
        return a3;
      }
      else
      {
        while (1)
        {
          int v6 = *a2;
          if ((v6 & 0xF8) != 0x30 && (v6 & 0xFE) != 0x38) {
            break;
          }
          if (v5 >= 214748364) {
            std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)8>();
          }
          int v5 = v6 + 10 * v5 - 48;
          *a4 = v5;
          if (++a2 == a3) {
            return a3;
          }
        }
      }
    }
  }
  return a2;
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)8>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 8);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F4C3BC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)7>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 7);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F4C414(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__loop<char>::~__loop(void (__cdecl ***a1)(std::__owns_one_state<char> *__hidden this))
{
  std::__owns_two_states<char>::~__owns_two_states(a1);
  JUMPOUT(0x22A614FA0);
}

unsigned int *std::__loop<char>::__exec(unsigned int *result, void *a2)
{
  uint64_t v2 = result[10];
  uint64_t v3 = a2[7];
  int v4 = (unint64_t *)(v3 + 16 * v2);
  if (*(_DWORD *)a2 == -991)
  {
    unint64_t v5 = *v4 + 1;
    unint64_t *v4 = v5;
    unint64_t v6 = *((void *)result + 3);
    unint64_t v7 = *((void *)result + 4);
    BOOL v8 = v5 < v7;
    if (v5 < v7 && v5 >= v6)
    {
      uint64_t v10 = *(void *)(v3 + 16 * v2 + 8);
      BOOL v8 = v5 < v7 && v10 != a2[2];
    }
    if (!v8 || v5 < v6)
    {
      *(_DWORD *)a2 = -994;
      if (!v8) {
        goto LABEL_25;
      }
LABEL_22:
      a2[10] = *((void *)result + 1);
      return std::__loop<char>::__init_repeat[abi:ne180100](result, a2);
    }
    goto LABEL_23;
  }
  unint64_t *v4 = 0;
  if (*((void *)result + 4))
  {
    if (*((void *)result + 3))
    {
      *(_DWORD *)a2 = -994;
      goto LABEL_22;
    }
LABEL_23:
    *(_DWORD *)a2 = -992;
    return result;
  }
  *(_DWORD *)a2 = -994;
LABEL_25:
  a2[10] = *((void *)result + 2);
  return result;
}

unsigned int *std::__loop<char>::__exec_split(unsigned int *result, int a2, void *a3)
{
  *(_DWORD *)a3 = -994;
  if (*((unsigned __int8 *)result + 52) == a2)
  {
    a3[10] = *((void *)result + 2);
  }
  else
  {
    a3[10] = *((void *)result + 1);
    return std::__loop<char>::__init_repeat[abi:ne180100](result, a3);
  }
  return result;
}

void std::__owns_two_states<char>::~__owns_two_states(void (__cdecl ***a1)(std::__owns_one_state<char> *__hidden this))
{
  std::__owns_two_states<char>::~__owns_two_states(a1);
  JUMPOUT(0x22A614FA0);
}

void (__cdecl ***std::__owns_two_states<char>::~__owns_two_states(void (__cdecl ***a1)(std::__owns_one_state<char> *__hidden this)))(std::__owns_one_state<char> *__hidden this)
{
  *a1 = (void (__cdecl **)(std::__owns_one_state<char> *__hidden))&unk_26D75D868;
  uint64_t v2 = a1[2];
  if (v2) {
    (*((void (**)(void (__cdecl **)(std::__owns_one_state<char> *__hidden)))*v2 + 1))(v2);
  }
  uint64_t v3 = a1[1];
  if (v3) {
    (*((void (**)(void (__cdecl **)(std::__owns_one_state<char> *__hidden)))*v3 + 1))(v3);
  }
  return a1;
}

unsigned int *std::__loop<char>::__init_repeat[abi:ne180100](unsigned int *result, void *a2)
{
  unsigned int v2 = result[11];
  *(void *)(a2[7] + 16 * result[10] + 8) = a2[2];
  unsigned int v3 = result[12];
  if (v2 != v3)
  {
    uint64_t v4 = v2 - 1;
    uint64_t v5 = a2[3];
    uint64_t v6 = v3 - 1 - v4;
    uint64_t v7 = a2[4] + 24 * v4 + 8;
    do
    {
      *(void *)(v7 - 8) = v5;
      *(void *)uint64_t v7 = v5;
      *(unsigned char *)(v7 + 8) = 0;
      v7 += 24;
      --v6;
    }
    while (v6);
  }
  return result;
}

void std::__repeat_one_loop<char>::~__repeat_one_loop()
{
}

uint64_t std::__repeat_one_loop<char>::__exec(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -991;
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = *(void *)(result + 8);
  return result;
}

void std::__alternate<char>::~__alternate(void (__cdecl ***a1)(std::__owns_one_state<char> *__hidden this))
{
  std::__owns_two_states<char>::~__owns_two_states(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__alternate<char>::__exec(uint64_t a1, _DWORD *a2)
{
  *a2 = -992;
}

uint64_t std::__alternate<char>::__exec_split(uint64_t result, int a2, uint64_t a3)
{
  *(_DWORD *)a3 = -994;
  uint64_t v3 = 8;
  if (a2) {
    uint64_t v3 = 16;
  }
  *(void *)(a3 + 8CoreML::Specification::Identity::New(this, 0) = *(void *)(result + v3);
  return result;
}

uint64_t std::__empty_non_own_state<char>::__exec(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = *(void *)(result + 8);
  return result;
}

uint64_t std::basic_regex<char,std::regex_traits<char>>::__parse_RE_expression<std::__wrap_iter<char const*>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  do
  {
    uint64_t v5 = a2;
    a2 = std::basic_regex<char,std::regex_traits<char>>::__parse_simple_RE<std::__wrap_iter<char const*>>(a1, a2, a3);
  }
  while (v5 != a2);
  return v5;
}

void std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)15>()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x22A614680](exception, 15);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_223F4C7C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_simple_RE<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, char *a2, char *a3)
{
  if (a2 == a3) {
    return (unsigned __int8 *)a2;
  }
  std::vector<char>::pointer end = a1->__end_;
  unsigned int marked_count = a1->__marked_count_;
  BOOL v8 = (unsigned __int8 *)std::basic_regex<char,std::regex_traits<char>>::__parse_nondupl_RE<std::__wrap_iter<char const*>>(a1, a2, a3);
  if (v8 == (unsigned __int8 *)a2) {
    return (unsigned __int8 *)a2;
  }
  size_t v9 = a1->__marked_count_ + 1;
  return std::basic_regex<char,std::regex_traits<char>>::__parse_RE_dupl_symbol<std::__wrap_iter<char const*>>(a1, v8, (unsigned __int8 *)a3, end, marked_count + 1, v9);
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_nondupl_RE<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, char *a2, char *a3)
{
  uint64_t v6 = std::basic_regex<char,std::regex_traits<char>>::__parse_one_char_or_coll_elem_RE<std::__wrap_iter<char const*>>(a1, a2, a3);
  uint64_t v7 = v6;
  if (a2 == v6 && a2 != a3 && a2 + 1 != a3)
  {
    uint64_t v9 = (uint64_t)v6;
    if (*a2 == 92) {
      uint64_t v9 = (uint64_t)&a2[2 * (a2[1] == 40)];
    }
    if ((char *)v9 == a2)
    {
      if (*a2 == 92)
      {
        BOOL v12 = std::basic_regex<char,std::regex_traits<char>>::__test_back_ref(a1, a2[1]);
        uint64_t v13 = 2;
        if (!v12) {
          uint64_t v13 = 0;
        }
        return &a2[v13];
      }
    }
    else
    {
      std::basic_regex<char,std::regex_traits<char>>::__push_begin_marked_subexpression(a1);
      unsigned int marked_count = a1->__marked_count_;
      long long v11 = (char *)std::basic_regex<char,std::regex_traits<char>>::__parse_RE_expression<std::__wrap_iter<char const*>>((uint64_t)a1, v9, (uint64_t)a3);
      if (v11 == a3 || v11 + 1 == a3 || *v11 != 92 || v11[1] != 41) {
        std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)6>();
      }
      uint64_t v7 = v11 + 2;
      std::basic_regex<char,std::regex_traits<char>>::__push_end_marked_subexpression(a1, marked_count);
    }
  }
  return v7;
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_RE_dupl_symbol<std::__wrap_iter<char const*>>(std::basic_regex<char> *this, unsigned __int8 *a2, unsigned __int8 *a3, std::__owns_one_state<char> *__s, size_t __mexp_begin, size_t __mexp_end)
{
  uint64_t v6 = a2;
  if (a2 != a3)
  {
    unsigned int v7 = __mexp_end;
    unsigned int v8 = __mexp_begin;
    int v11 = *a2;
    if (v11 == 42)
    {
      std::basic_regex<char,std::regex_traits<char>>::__push_loop(this, 0, 0xFFFFFFFFFFFFFFFFLL, __s, __mexp_begin, __mexp_end, 1);
      return ++v6;
    }
    if (a2 + 1 != a3 && v11 == 92 && a2[1] == 123)
    {
      uint64_t v13 = a2 + 2;
      int v25 = 0;
      char v14 = std::basic_regex<char,std::regex_traits<char>>::__parse_DUP_COUNT<std::__wrap_iter<char const*>>((uint64_t)this, a2 + 2, a3, &v25);
      if (v13 == v14) {
        goto LABEL_16;
      }
      if (v14 != a3)
      {
        long long v15 = v14 + 1;
        int v16 = *v14;
        if (v16 == 44)
        {
          int v24 = -1;
          long long v17 = std::basic_regex<char,std::regex_traits<char>>::__parse_DUP_COUNT<std::__wrap_iter<char const*>>((uint64_t)this, v15, a3, &v24);
          if (v17 != a3 && v17 + 1 != a3 && *v17 == 92 && v17[1] == 125)
          {
            size_t v19 = v24;
            size_t v18 = v25;
            if (v24 == -1)
            {
              size_t v19 = -1;
            }
            else if (v24 < v25)
            {
LABEL_16:
              std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)8>();
            }
            uint64_t v6 = &v17[2 * (v17[1] == 125)];
            size_t v20 = v8;
            size_t v21 = v7;
            unint64_t v22 = this;
LABEL_23:
            std::basic_regex<char,std::regex_traits<char>>::__push_loop(v22, v18, v19, __s, v20, v21, 1);
            return v6;
          }
        }
        else if (v15 != a3 && v16 == 92 && *v15 == 125)
        {
          uint64_t v6 = v14 + 2;
          size_t v18 = v25;
          size_t v20 = v8;
          size_t v21 = v7;
          unint64_t v22 = this;
          size_t v19 = v25;
          goto LABEL_23;
        }
      }
      std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)7>();
    }
  }
  return v6;
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_one_char_or_coll_elem_RE<std::__wrap_iter<char const*>>(std::basic_regex<char> *this, char *a2, char *a3)
{
  if (a2 == a3)
  {
    uint64_t result = std::basic_regex<char,std::regex_traits<char>>::__parse_QUOTED_CHAR<std::__wrap_iter<char const*>>(this, a2, a3);
    if (result != a2) {
      return result;
    }
  }
  else
  {
    int v6 = *a2;
    if ((a2 + 1 != a3 || v6 != 36)
      && ((v6 - 46) > 0x2E || ((1 << (v6 - 46)) & 0x600000000001) == 0))
    {
      std::basic_regex<char,std::regex_traits<char>>::__push_char(this, v6);
      return a2 + 1;
    }
    uint64_t result = std::basic_regex<char,std::regex_traits<char>>::__parse_QUOTED_CHAR<std::__wrap_iter<char const*>>(this, a2, a3);
    if (result != a2) {
      return result;
    }
    if (*a2 == 46) {
      operator new();
    }
  }
  return std::basic_regex<char,std::regex_traits<char>>::__parse_bracket_expression<std::__wrap_iter<char const*>>((uint64_t)this, a2, a3);
}

unsigned char *std::basic_regex<char,std::regex_traits<char>>::__parse_QUOTED_CHAR<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, unsigned char *a2, unsigned char *a3)
{
  uint64_t v3 = a2;
  if (a2 != a3 && a2 + 1 != a3 && *a2 == 92)
  {
    int v4 = (char)a2[1];
    if ((v4 - 36) <= 0x3A && ((1 << (a2[1] - 36)) & 0x580000000000441) != 0)
    {
      std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, v4);
      v3 += 2;
    }
  }
  return v3;
}

uint64_t std::__match_any<char>::__exec(uint64_t result, uint64_t a2)
{
  unsigned int v2 = *(unsigned char **)(a2 + 16);
  if (v2 == *(unsigned char **)(a2 + 24) || !*v2)
  {
    uint64_t v3 = 0;
    *(_DWORD *)a2 = -993;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    uint64_t v3 = *(void *)(result + 8);
  }
  *(void *)(a2 + 8CoreML::Specification::Identity::New(this, 0) = v3;
  return result;
}

BOOL std::basic_regex<char,std::regex_traits<char>>::__test_back_ref(std::basic_regex<char> *this, char a2)
{
  if ((a2 & 0xF8) != 0x30 && (a2 & 0xFE) != 0x38 || a2 - 49 > 8) {
    return 0;
  }
  if (a2 - 48 > this->__marked_count_) {
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)4>();
  }
  std::basic_regex<char,std::regex_traits<char>>::__push_back_ref(this, a2 - 48);
  return 1;
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_branch<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, std::basic_regex<char> *a2, std::basic_regex<char> *a3)
{
  int v6 = std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_expression<std::__wrap_iter<char const*>>(a1, a2, a3);
  if (v6 == (unsigned __int8 *)a2) {
    std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)15>();
  }
  do
  {
    unsigned int v7 = v6;
    int v6 = std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_expression<std::__wrap_iter<char const*>>(a1, (std::basic_regex<char> *)v6, a3);
  }
  while (v7 != v6);
  return v7;
}

unsigned __int8 *std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_expression<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, std::basic_regex<char> *a2, std::basic_regex<char> *a3)
{
  std::vector<char>::pointer end = a1->__end_;
  unsigned int marked_count = a1->__marked_count_;
  unsigned int v8 = std::basic_regex<char,std::regex_traits<char>>::__parse_one_char_or_coll_elem_ERE<std::__wrap_iter<char const*>>(a1, a2, a3);
  uint64_t v9 = (unsigned __int8 *)v8;
  if (v8 != (char *)a2 || v8 == (char *)a3) {
    goto LABEL_12;
  }
  int locale_low = SLOBYTE(a2->__traits_.__loc_.__locale_);
  if (locale_low == 36)
  {
    std::basic_regex<char,std::regex_traits<char>>::__push_r_anchor(a1);
    goto LABEL_8;
  }
  if (locale_low == 40)
  {
    std::basic_regex<char,std::regex_traits<char>>::__push_begin_marked_subexpression(a1);
    unsigned int v11 = a1->__marked_count_;
    ++a1->__open_count_;
    BOOL v12 = (std::basic_regex<char> *)std::basic_regex<char,std::regex_traits<char>>::__parse_extended_reg_exp<std::__wrap_iter<char const*>>(a1, (char *)&a2->__traits_.__loc_.__locale_ + 1, a3);
    if (v12 == a3 || (uint64_t v13 = v12, LOBYTE(v12->__traits_.__loc_.__locale_) != 41)) {
      std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)6>();
    }
    std::basic_regex<char,std::regex_traits<char>>::__push_end_marked_subexpression(a1, v11);
    --a1->__open_count_;
    uint64_t v9 = (unsigned __int8 *)&v13->__traits_.__loc_.__locale_ + 1;
LABEL_12:
    if (v9 != (unsigned __int8 *)a2) {
      goto LABEL_13;
    }
    return (unsigned __int8 *)a2;
  }
  if (locale_low != 94) {
    return (unsigned __int8 *)a2;
  }
  std::basic_regex<char,std::regex_traits<char>>::__push_l_anchor(a1);
LABEL_8:
  uint64_t v9 = (unsigned __int8 *)&a2->__traits_.__loc_.__locale_ + 1;
LABEL_13:
  size_t v14 = a1->__marked_count_ + 1;
  return std::basic_regex<char,std::regex_traits<char>>::__parse_ERE_dupl_symbol<std::__wrap_iter<char const*>>((uint64_t)a1, v9, (unsigned __int8 *)a3, end, marked_count + 1, v14);
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_one_char_or_coll_elem_ERE<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, std::basic_regex<char> *a2, std::basic_regex<char> *a3)
{
  uint64_t result = (char *)std::basic_regex<char,std::regex_traits<char>>::__parse_ORD_CHAR_ERE<std::__wrap_iter<char const*>>(a1, a2, a3);
  if (result == (char *)a2)
  {
    uint64_t result = std::basic_regex<char,std::regex_traits<char>>::__parse_QUOTED_CHAR_ERE<std::__wrap_iter<char const*>>((uint64_t)a1, (char *)a2, (char *)a3);
    if (result == (char *)a2)
    {
      if (a2 != a3 && LOBYTE(a2->__traits_.__loc_.__locale_) == 46) {
        operator new();
      }
      return std::basic_regex<char,std::regex_traits<char>>::__parse_bracket_expression<std::__wrap_iter<char const*>>((uint64_t)a1, (char *)a2, (char *)a3);
    }
  }
  return result;
}

std::basic_regex<char> *std::basic_regex<char,std::regex_traits<char>>::__parse_ORD_CHAR_ERE<std::__wrap_iter<char const*>>(std::basic_regex<char> *a1, std::basic_regex<char> *this, std::basic_regex<char> *a3)
{
  uint64_t v3 = this;
  if (this != a3)
  {
    int locale_low = SLOBYTE(this->__traits_.__loc_.__locale_);
    uint64_t v5 = (locale_low - 36);
    if (v5 > 0x3A) {
      goto LABEL_8;
    }
    if (((1 << (locale_low - 36)) & 0x5800000080004D1) != 0) {
      return v3;
    }
    if (v5 == 5)
    {
      if (a1->__open_count_) {
        return v3;
      }
    }
    else
    {
LABEL_8:
      if ((locale_low - 123) < 2) {
        return v3;
      }
    }
    std::basic_regex<char,std::regex_traits<char>>::__push_char(a1, (std::basic_regex<char>::value_type)this->__traits_.__loc_.__locale_);
    return (std::basic_regex<char> *)((char *)v3 + 1);
  }
  return v3;
}

char *std::basic_regex<char,std::regex_traits<char>>::__parse_QUOTED_CHAR_ERE<std::__wrap_iter<char const*>>(uint64_t a1, char *a2, char *a3)
{
  uint64_t v3 = a2;
  if (a2 != a3)
  {
    int v4 = a2 + 1;
    if (v3 + 1 != a3 && *v3 == 92)
    {
      int v5 = *v4;
      char v6 = *v4;
      BOOL v7 = (v5 - 36) > 0x3A || ((1 << (*v4 - 36)) & 0x5800000080004F1) == 0;
      if (v7 && (v5 - 123) >= 3)
      {
        if ((*(_DWORD *)(a1 + 24) & 0x1F0) == 0x40)
        {
          return std::basic_regex<char,std::regex_traits<char>>::__parse_awk_escape<std::__wrap_iter<char const*>>((std::basic_regex<char> *)a1, v4, a3, 0);
        }
        else
        {
          BOOL v9 = std::basic_regex<char,std::regex_traits<char>>::__test_back_ref((std::basic_regex<char> *)a1, v6);
          uint64_t v10 = 2;
          if (!v9) {
            uint64_t v10 = 0;
          }
          v3 += v10;
        }
      }
      else
      {
        std::basic_regex<char,std::regex_traits<char>>::__push_char((std::basic_regex<char> *)a1, v6);
        v3 += 2;
      }
    }
  }
  return v3;
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<std::string,turi::fileio::file_status>>,std::pair<std::string,turi::fileio::file_status> const*,std::pair<std::string,turi::fileio::file_status> const*,std::pair<std::string,turi::fileio::file_status>*>(uint64_t a1, long long *a2, long long *a3, std::string *this)
{
  int v4 = this;
  BOOL v12 = this;
  uint64_t v13 = this;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    char v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((void *)v6 + 1));
        unsigned int v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
        unsigned int v8 = v4;
      }
      LODWORD(v4[1].__r_.__value_.__l.__data_) = *((_DWORD *)v6 + 6);
      v6 += 2;
      int v4 = (std::string *)((char *)v8 + 32);
      uint64_t v13 = (std::string *)((char *)v8 + 32);
    }
    while (v6 != a3);
  }
  char v11 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,turi::fileio::file_status>>,std::pair<std::string,turi::fileio::file_status>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v10);
  return v4;
}

void sub_223F4D214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,turi::fileio::file_status>>,std::pair<std::string,turi::fileio::file_status>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::pair<std::string,unsigned long>*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

uint64_t std::regex_match[abi:ne180100]<std::__wrap_iter<char const*>,std::allocator<std::sub_match<std::__wrap_iter<char const*>>>,char,std::regex_traits<char>>(char *__f, char *__l, uint64_t a3, uint64_t a4, int a5)
{
  __int16 v5 = a5;
  memset(&__p.__prefix_, 0, 17);
  memset(&__p.__suffix_, 0, 17);
  __p.__ready_ = 0;
  __p.__position_start_ = 0;
  memset(&__p, 0, 41);
  int v9 = std::basic_regex<char,std::regex_traits<char>>::__search<std::allocator<std::sub_match<char const*>>>(a4, __f, __l, &__p, a5 | 0x1040u);
  std::match_results<std::__wrap_iter<char const*>>::__assign[abi:ne180100]<char const*,std::allocator<std::sub_match<char const*>>>((std::vector<std::ssub_match> *)a3, (uint64_t)__f, (std::sub_match<std::__wrap_iter<const char *>> *)__l, (uint64_t *)&__p, (v5 & 0x800) != 0);
  if (__p.__matches_.__begin_)
  {
    __p.__matches_.__end_ = __p.__matches_.__begin_;
    operator delete(__p.__matches_.__begin_);
  }
  if (!v9) {
    return 0;
  }
  if (!*(unsigned char *)(a3 + 88)) {
    return 1;
  }
  uint64_t result = 0;
  *(void *)(a3 + 8) = *(void *)a3;
  return result;
}

void sub_223F4D33C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::basic_regex<char,std::regex_traits<char>>::__search<std::allocator<std::sub_match<char const*>>>(uint64_t a1, char *__f, char *__l, std::match_results<const char *> *this, int a5)
{
  if ((a5 & 0x80) != 0) {
    int v9 = a5 & 0xFFA;
  }
  else {
    int v9 = a5;
  }
  std::match_results<char const*>::__init(this, *(_DWORD *)(a1 + 28) + 1, __f, __l, (unsigned __int16)(v9 & 0x800) >> 11);
  if (std::basic_regex<char,std::regex_traits<char>>::__match_at_start<std::allocator<std::sub_match<char const*>>>(a1, __f, __l, (uint64_t *)this, v9, (v9 & 0x800) == 0))
  {
    if (this->__matches_.__end_ == this->__matches_.__begin_) {
      p_unmatched = &this->__unmatched_;
    }
    else {
      p_unmatched = this->__matches_.__begin_;
    }
LABEL_8:
    first = p_unmatched->first;
    this->__prefix_.second = p_unmatched->first;
    this->__prefix_.matched = this->__prefix_.first != first;
    second = p_unmatched->second;
    this->__suffix_.first = second;
    this->__suffix_.matched = second != this->__suffix_.second;
    return 1;
  }
  if (__f != __l && (v9 & 0x40) == 0)
  {
    int v14 = v9 | 0x80;
    long long v15 = __f + 1;
    if (v15 != __l)
    {
      while (1)
      {
        std::vector<std::sub_match<char const*>>::assign(&this->__matches_, 0xAAAAAAAAAAAAAAABLL * (((char *)this->__matches_.__end_ - (char *)this->__matches_.__begin_) >> 3), &this->__unmatched_);
        int v16 = std::basic_regex<char,std::regex_traits<char>>::__match_at_start<std::allocator<std::sub_match<char const*>>>(a1, v15, __l, (uint64_t *)this, v14, 0);
        std::vector<std::csub_match>::pointer begin = this->__matches_.__begin_;
        std::vector<std::csub_match>::pointer end = this->__matches_.__end_;
        if (v16) {
          break;
        }
        std::vector<std::sub_match<char const*>>::assign(&this->__matches_, 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)begin) >> 3), &this->__unmatched_);
        if (++v15 == __l) {
          goto LABEL_14;
        }
      }
      if (end == begin) {
        p_unmatched = &this->__unmatched_;
      }
      else {
        p_unmatched = this->__matches_.__begin_;
      }
      goto LABEL_8;
    }
LABEL_14:
    std::vector<std::sub_match<char const*>>::assign(&this->__matches_, 0xAAAAAAAAAAAAAAABLL * (((char *)this->__matches_.__end_ - (char *)this->__matches_.__begin_) >> 3), &this->__unmatched_);
    if (std::basic_regex<char,std::regex_traits<char>>::__match_at_start<std::allocator<std::sub_match<char const*>>>(a1, __l, __l, (uint64_t *)this, v14, 0))
    {
      if (this->__matches_.__end_ == this->__matches_.__begin_) {
        p_unmatched = &this->__unmatched_;
      }
      else {
        p_unmatched = this->__matches_.__begin_;
      }
      goto LABEL_8;
    }
  }
  uint64_t result = 0;
  this->__matches_.__end_ = this->__matches_.__begin_;
  return result;
}

void std::match_results<std::__wrap_iter<char const*>>::__assign[abi:ne180100]<char const*,std::allocator<std::sub_match<char const*>>>(std::vector<std::ssub_match> *a1, uint64_t a2, std::sub_match<std::__wrap_iter<const char *>> *a3, uint64_t *a4, char a5)
{
  uint64_t v10 = a4[6];
  std::vector<std::sub_match<std::__wrap_iter<char const*>>>::resize(a1, 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3));
  std::vector<std::ssub_match>::pointer begin = a1->__begin_;
  if (a1->__end_ != a1->__begin_)
  {
    unint64_t v12 = 0;
    unint64_t v13 = 0;
    uint64_t v15 = *a4;
    uint64_t v14 = a4[1];
    do
    {
      unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((v14 - v15) >> 3);
      long long v17 = (void *)(v15 + v12 * 24);
      if (v16 <= v13) {
        size_t v18 = a4 + 3;
      }
      else {
        size_t v18 = v17;
      }
      begin[v12].first.__i_ = (std::__wrap_iter<const char *>::iterator_type)(a2 + *v18 - v10);
      if (0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3) <= v13) {
        size_t v19 = a4 + 3;
      }
      else {
        size_t v19 = (uint64_t *)(*a4 + v12 * 24);
      }
      a1->__begin_[v12].second.__i_ = (std::__wrap_iter<const char *>::iterator_type)(a2 + v19[1] - v10);
      uint64_t v15 = *a4;
      uint64_t v14 = a4[1];
      if (0xAAAAAAAAAAAAAAABLL * ((v14 - *a4) >> 3) <= v13) {
        size_t v20 = a4 + 3;
      }
      else {
        size_t v20 = (uint64_t *)(*a4 + v12 * 24);
      }
      char v21 = *((unsigned char *)v20 + 16);
      std::vector<std::ssub_match>::pointer begin = a1->__begin_;
      std::vector<std::ssub_match>::pointer end = a1->__end_;
      a1->__begin_[v12].matched = v21;
      ++v13;
      ++v12;
    }
    while (v13 < 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)begin) >> 3));
  }
  a1[1].__begin_ = a3;
  a1[1].__end_ = a3;
  LOBYTE(a1[1].__end_cap_.__value_) = 0;
  char v23 = (std::sub_match<std::__wrap_iter<const char *>> *)(a2 + a4[6] - v10);
  a1[2].__begin_ = v23;
  a1[2].__end_ = (std::vector<std::ssub_match>::pointer)(a2 + a4[7] - v10);
  LOBYTE(a1[2].__end_cap_.__value_) = *((unsigned char *)a4 + 64);
  a1[3].__begin_ = (std::vector<std::ssub_match>::pointer)(a2 + a4[9] - v10);
  a1[3].__end_ = (std::vector<std::ssub_match>::pointer)(a2 + a4[10] - v10);
  LOBYTE(a1[3].__end_cap_.__value_) = *((unsigned char *)a4 + 88);
  if ((a5 & 1) == 0) {
    a1[4].__end_ = v23;
  }
  LOBYTE(a1[4].__begin_) = *((unsigned char *)a4 + 96);
}

uint64_t std::basic_regex<char,std::regex_traits<char>>::__match_at_start<std::allocator<std::sub_match<char const*>>>(uint64_t a1, const char *a2, const char *a3, uint64_t *a4, int a5, char a6)
{
  if ((*(_WORD *)(a1 + 24) & 0x1F0) == 0) {
    return std::basic_regex<char,std::regex_traits<char>>::__match_at_start_ecma<std::allocator<std::sub_match<char const*>>>(a1, a2, a3, a4, a5, a6);
  }
  if (*(_DWORD *)(a1 + 28)) {
    return std::basic_regex<char,std::regex_traits<char>>::__match_at_start_posix_subs<std::allocator<std::sub_match<char const*>>>(a1, a2, a3, a4, a5, a6);
  }
  return std::basic_regex<char,std::regex_traits<char>>::__match_at_start_posix_nosubs<std::allocator<std::sub_match<char const*>>>(a1, (uint64_t)a2, (uint64_t)a3, a4, a5, a6);
}

uint64_t std::basic_regex<char,std::regex_traits<char>>::__match_at_start_posix_nosubs<std::allocator<std::sub_match<char const*>>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  long long v62 = 0u;
  long long v63 = 0u;
  long long v61 = 0u;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    *(_DWORD *)int v57 = 0;
    memset(&v57[8], 0, 32);
    long long v58 = 0uLL;
    *(_OWORD *)std::match_results<const char *> __p = 0uLL;
    memset(v60, 0, 21);
    std::deque<std::__state<char>>::push_back(&v61, (uint64_t)v57);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (*(void *)&v57[32])
    {
      *(void *)&long long v58 = *(void *)&v57[32];
      operator delete(*(void **)&v57[32]);
    }
    unint64_t v52 = a4;
    uint64_t v12 = *((void *)&v61 + 1);
    unint64_t v13 = *((void *)&v63 + 1) + v63 - 1;
    unint64_t v14 = v13 / 0x2A;
    uint64_t v15 = *(void *)(*((void *)&v61 + 1) + 8 * (v13 / 0x2A));
    unint64_t v16 = 3 * (v13 % 0x2A);
    uint64_t v17 = v15 + 32 * v16;
    *(_DWORD *)uint64_t v17 = 0;
    *(void *)(v17 + 8) = a2;
    *(void *)(*(void *)(v12 + 8 * v14) + 32 * v16 + 16) = a2;
    *(void *)(*(void *)(v12 + 8 * v14) + 32 * v16 + 24) = a3;
    std::vector<std::pair<unsigned long,char const*>>::resize((std::vector<std::pair<unsigned long, const char *>> *)(*(void *)(v12 + 8 * v14) + 32 * v16 + 56), *(unsigned int *)(a1 + 32));
    char v55 = 0;
    unsigned int v18 = 0;
    uint64_t v53 = 0;
    uint64_t v54 = a2;
    uint64_t v19 = a3 - a2;
    uint64_t v20 = *((void *)&v63 + 1);
    uint64_t v21 = *((void *)&v61 + 1);
    unint64_t v22 = *((void *)&v63 + 1) + v63 - 1;
    unint64_t v23 = v22 / 0x2A;
    unint64_t v24 = 3 * (v22 % 0x2A);
    *(void *)(*(void *)(*((void *)&v61 + 1) + 8 * v23) + 32 * v24 + 8CoreML::Specification::Identity::New(this, 0) = v6;
    uint64_t v25 = *(void *)(v21 + 8 * v23) + 32 * v24;
    *(_DWORD *)(v25 + 88) = a5;
    *(unsigned char *)(v25 + 92) = a6;
    while (2)
    {
      if ((++v18 & 0xFFF) == 0 && (int)(v18 >> 12) >= (int)v19) {
        std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)12>();
      }
      unint64_t v27 = v20 + v63 - 1;
      uint64_t v28 = *(void *)(*((void *)&v61 + 1) + 8 * (v27 / 0x2A));
      unint64_t v29 = v27 % 0x2A;
      uint64_t v30 = v28 + 96 * (v27 % 0x2A);
      char v32 = (void *)(v30 + 80);
      uint64_t v31 = *(void *)(v30 + 80);
      if (v31) {
        (*(void (**)(uint64_t, unint64_t))(*(void *)v31 + 16))(v31, v28 + 96 * v29);
      }
      switch(*(_DWORD *)v30)
      {
        case 0xFFFFFC18:
          uint64_t v33 = *(void *)(v28 + 96 * v29 + 16);
          BOOL v35 = (a5 & 0x1000) == 0 || v33 == a3;
          BOOL v36 = v33 != v54 || (a5 & 0x20) == 0;
          if (!v36 || !v35) {
            goto LABEL_37;
          }
          uint64_t v37 = v33 - *(void *)(v28 + 96 * v29 + 8);
          uint64_t v38 = v53;
          if ((v55 & (v53 >= v37)) == 0) {
            uint64_t v38 = v37;
          }
          if (v38 != v19)
          {
            uint64_t v53 = v38;
            std::deque<std::__state<char>>::pop_back(&v61);
            char v55 = 1;
            goto LABEL_38;
          }
          __int16 v39 = (void **)*((void *)&v61 + 1);
          uint64_t v40 = v62;
          if ((void)v62 == *((void *)&v61 + 1))
          {
            uint64_t v40 = *((void *)&v61 + 1);
          }
          else
          {
            __int16 v41 = (void *)(*((void *)&v61 + 1) + 8 * ((unint64_t)v63 / 0x2A));
            int v42 = (void *)(*v41 + 96 * ((unint64_t)v63 % 0x2A));
            unint64_t v43 = *(void *)(*((void *)&v61 + 1) + 8 * ((*((void *)&v63 + 1) + (void)v63) / 0x2AuLL))
                + 96 * ((*((void *)&v63 + 1) + (void)v63) % 0x2AuLL);
            if (v42 != (void *)v43)
            {
              do
              {
                std::allocator<std::__state<char>>::destroy[abi:ne180100]((uint64_t)&v63 + 8, v42);
                v42 += 12;
                if ((void *)((char *)v42 - *v41) == (void *)4032)
                {
                  int v44 = (void *)v41[1];
                  ++v41;
                  int v42 = v44;
                }
              }
              while (v42 != (void *)v43);
              __int16 v39 = (void **)*((void *)&v61 + 1);
              uint64_t v40 = v62;
            }
          }
          *((void *)&v63 + 1) = 0;
          unint64_t v47 = v40 - (void)v39;
          if (v47 >= 0x11)
          {
            do
            {
              operator delete(*v39);
              __int16 v39 = (void **)(*((void *)&v61 + 1) + 8);
              *((void *)&v61 + 1) = v39;
              unint64_t v47 = v62 - (void)v39;
            }
            while ((void)v62 - (void)v39 > 0x10uLL);
          }
          if (v47 >> 3 == 1)
          {
            uint64_t v48 = 21;
          }
          else
          {
            if (v47 >> 3 != 2) {
              goto LABEL_53;
            }
            uint64_t v48 = 42;
          }
          *(void *)&long long v63 = v48;
LABEL_53:
          char v55 = 1;
          uint64_t v53 = v19;
LABEL_38:
          uint64_t v20 = *((void *)&v63 + 1);
          if (*((void *)&v63 + 1)) {
            continue;
          }
          if ((v55 & 1) == 0) {
            goto LABEL_56;
          }
          uint64_t v49 = *v52;
          *(void *)uint64_t v49 = v54;
          *(void *)(v49 + 8) = v54 + v53;
          uint64_t v50 = 1;
          *(unsigned char *)(v49 + 16) = 1;
          break;
        case 0xFFFFFC19:
        case 0xFFFFFC1E:
        case 0xFFFFFC21:
          goto LABEL_38;
        case 0xFFFFFC1D:
          std::deque<std::__state<char>>::push_front((uint64_t)&v61, v28 + 96 * v29);
          goto LABEL_37;
        case 0xFFFFFC1F:
LABEL_37:
          std::deque<std::__state<char>>::pop_back(&v61);
          goto LABEL_38;
        case 0xFFFFFC20:
          long long v45 = *(_OWORD *)(v30 + 16);
          *(_OWORD *)int v57 = *(_OWORD *)v30;
          *(_OWORD *)&v57[16] = v45;
          long long v58 = 0uLL;
          *(void *)&v57[32] = 0;
          std::vector<std::sub_match<char const*>>::__init_with_size[abi:ne180100]<std::sub_match<char const*>*,std::sub_match<char const*>*>(&v57[32], *(long long **)(v28 + 96 * v29 + 32), *(long long **)(v28 + 96 * v29 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v28 + 96 * v29 + 40) - *(void *)(v28 + 96 * v29 + 32)) >> 3));
          __p[0] = 0;
          __p[1] = 0;
          v60[0] = 0;
          std::vector<std::pair<unsigned long,char const*>>::__init_with_size[abi:ne180100]<std::pair<unsigned long,char const*>*,std::pair<unsigned long,char const*>*>((char *)__p, *(long long **)(v28 + 96 * v29 + 56), *(long long **)(v28 + 96 * v29 + 64), (uint64_t)(*(void *)(v28 + 96 * v29 + 64) - *(void *)(v28 + 96 * v29 + 56)) >> 4);
          uint64_t v46 = *v32;
          *(void *)((char *)&v60[1] + 5) = *(void *)(v30 + 85);
          v60[1] = v46;
          (*(void (**)(void, uint64_t, unint64_t))(*(void *)*v32 + 24))(*v32, 1, v28 + 96 * v29);
          (*(void (**)(void, void, unsigned char *))(*(void *)v60[1] + 24))(v60[1], 0, v57);
          std::deque<std::__state<char>>::push_back(&v61, (uint64_t)v57);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
          if (*(void *)&v57[32])
          {
            *(void *)&long long v58 = *(void *)&v57[32];
            operator delete(*(void **)&v57[32]);
          }
          goto LABEL_38;
        default:
          std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)16>();
      }
      break;
    }
  }
  else
  {
LABEL_56:
    uint64_t v50 = 0;
  }
  std::deque<std::__state<char>>::~deque[abi:ne180100](&v61);
  return v50;
}

void sub_223F4DC1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  std::deque<std::__state<char>>::~deque[abi:ne180100]((void *)(v22 - 144));
  _Unwind_Resume(a1);
}

uint64_t std::basic_regex<char,std::regex_traits<char>>::__match_at_start_posix_subs<std::allocator<std::sub_match<char const*>>>(uint64_t a1, const char *a2, const char *a3, uint64_t *a4, int a5, char a6)
{
  uint64_t v54 = 0;
  char v55 = 0;
  v56[0] = 0;
  *(_DWORD *)uint64_t v51 = 0;
  memset(&v51[8], 0, 32);
  long long v52 = 0u;
  memset(v53, 0, 37);
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    __x.first = a3;
    __x.second = a3;
    __x.matched = 0;
    *(_DWORD *)unint64_t v47 = 0;
    memset(&v47[8], 0, 48);
    *(_OWORD *)std::match_results<const char *> __p = 0uLL;
    memset(v49, 0, 21);
    char v55 = (_OWORD *)std::vector<std::__state<char>>::__push_back_slow_path<std::__state<char>>((uint64_t *)&v54, (uint64_t)v47);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (*(void *)&v47[32])
    {
      *(void *)&v47[40] = *(void *)&v47[32];
      operator delete(*(void **)&v47[32]);
    }
    int v42 = a4;
    char v11 = v55;
    *((_DWORD *)v55 - 24) = 0;
    *((void *)v11 - 11) = a2;
    *((void *)v11 - 1CoreML::Specification::Identity::New(this, 0) = a2;
    *((void *)v11 - 9) = a3;
    std::vector<std::sub_match<char const*>>::resize((std::vector<std::csub_match> *)(v11 - 4), *(unsigned int *)(a1 + 28), &__x);
    std::vector<std::pair<unsigned long,char const*>>::resize((std::vector<std::pair<unsigned long, const char *>> *)((char *)v55 - 40), *(unsigned int *)(a1 + 32));
    unint64_t v43 = a3;
    int v44 = 0;
    char v12 = 0;
    unsigned int v13 = 0;
    unint64_t v14 = (const char *)(a3 - a2);
    uint64_t v15 = v55;
    *((void *)v55 - 2) = v6;
    *((_DWORD *)v15 - 2) = a5;
    *((unsigned char *)v15 - 4) = a6;
    do
    {
      BOOL v16 = (++v13 & 0xFFF) != 0 || (int)(v13 >> 12) < (int)v14;
      if (!v16) {
        std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)12>();
      }
      unsigned int v18 = v15 - 1;
      uint64_t v17 = *((void *)v15 - 2);
      uint64_t v19 = v15 - 6;
      if (v17) {
        (*(void (**)(uint64_t, _OWORD *))(*(void *)v17 + 16))(v17, v15 - 6);
      }
      switch(*(_DWORD *)v19)
      {
        case 0xFFFFFC18:
          uint64_t v20 = (const char *)*((void *)v15 - 10);
          if ((a5 & 0x20) != 0 && v20 == a2 || (a5 & 0x1000) != 0 && v20 != v43) {
            goto LABEL_19;
          }
          char v27 = v12;
          uint64_t v28 = &v20[-*((void *)v15 - 11)];
          unint64_t v29 = v44;
          if ((v27 & ((uint64_t)v44 >= (uint64_t)v28)) == 0)
          {
            long long v30 = *(v15 - 5);
            *(_OWORD *)uint64_t v51 = *(_OWORD *)v19;
            *(_OWORD *)&v51[16] = v30;
            if (v51 != v19)
            {
              std::vector<std::sub_match<char const*>>::__assign_with_size[abi:ne180100]<std::sub_match<char const*>*,std::sub_match<char const*>*>(&v51[32], *((long long **)v15 - 8), *((long long **)v15 - 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v15 - 7) - *((void *)v15 - 8)) >> 3));
              std::vector<std::pair<unsigned long,char const*>>::__assign_with_size[abi:ne180100]<std::pair<unsigned long,char const*>*,std::pair<unsigned long,char const*>*>(v53, *((uint64_t **)v15 - 5), *((uint64_t **)v15 - 4), (uint64_t)(*((void *)v15 - 4) - *((void *)v15 - 5)) >> 4);
            }
            uint64_t v31 = (void *)*v18;
            *(void **)((char *)&v53[3] + 5) = *(void **)((char *)v15 - 11);
            v53[3] = v31;
            unint64_t v29 = v28;
          }
          char v32 = v55;
          if (v29 == v14)
          {
            uint64_t v33 = (uint64_t)v54;
            while (v32 != (void *)v33)
            {
              v32 -= 12;
              std::allocator<std::__state<char>>::destroy[abi:ne180100]((uint64_t)v56, v32);
            }
            char v55 = (_OWORD *)v33;
            char v12 = 1;
            int v44 = v14;
          }
          else
          {
            int v44 = v29;
            unint64_t v34 = v55 - 6;
            std::allocator<std::__state<char>>::destroy[abi:ne180100]((uint64_t)v56, (void *)v55 - 12);
            char v55 = v34;
            char v12 = 1;
          }
          break;
        case 0xFFFFFC1D:
        case 0xFFFFFC1E:
        case 0xFFFFFC21:
          break;
        case 0xFFFFFC1F:
LABEL_19:
          uint64_t v21 = v55 - 6;
          std::allocator<std::__state<char>>::destroy[abi:ne180100]((uint64_t)v56, (void *)v55 - 12);
          char v55 = v21;
          break;
        case 0xFFFFFC20:
          long long v22 = *(v15 - 5);
          *(_OWORD *)unint64_t v47 = *(_OWORD *)v19;
          *(_OWORD *)&v47[16] = v22;
          memset(&v47[32], 0, 24);
          std::vector<std::sub_match<char const*>>::__init_with_size[abi:ne180100]<std::sub_match<char const*>*,std::sub_match<char const*>*>(&v47[32], *((long long **)v15 - 8), *((long long **)v15 - 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v15 - 7) - *((void *)v15 - 8)) >> 3));
          __p[0] = 0;
          __p[1] = 0;
          v49[0] = 0;
          std::vector<std::pair<unsigned long,char const*>>::__init_with_size[abi:ne180100]<std::pair<unsigned long,char const*>*,std::pair<unsigned long,char const*>*>((char *)__p, *((long long **)v15 - 5), *((long long **)v15 - 4), (uint64_t)(*((void *)v15 - 4) - *((void *)v15 - 5)) >> 4);
          unint64_t v23 = (void *)*v18;
          *(void *)((char *)&v49[1] + 5) = *(void *)((char *)v15 - 11);
          v49[1] = v23;
          (*(void (**)(void, uint64_t, _OWORD *))(*(void *)*v18 + 24))(*v18, 1, v15 - 6);
          (*(void (**)(void, void, unsigned char *))(*(void *)v49[1] + 24))(v49[1], 0, v47);
          unint64_t v24 = v55;
          if ((unint64_t)v55 >= v56[0])
          {
            char v55 = (_OWORD *)std::vector<std::__state<char>>::__push_back_slow_path<std::__state<char>>((uint64_t *)&v54, (uint64_t)v47);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          else
          {
            long long v25 = *(_OWORD *)&v47[16];
            *char v55 = *(_OWORD *)v47;
            v24[1] = v25;
            *((void *)v24 + 4) = 0;
            *((void *)v24 + 5) = 0;
            *((void *)v24 + 6) = 0;
            *((void *)v24 + 7) = 0;
            v24[2] = *(_OWORD *)&v47[32];
            *((void *)v24 + 6) = *(void *)&v47[48];
            memset(&v47[32], 0, 24);
            *((void *)v24 + 8) = 0;
            *((void *)v24 + 9) = 0;
            *(_OWORD *)((char *)v24 + 56) = *(_OWORD *)__p;
            *((void *)v24 + 9) = v49[0];
            __p[0] = 0;
            __p[1] = 0;
            v49[0] = 0;
            uint64_t v26 = v49[1];
            *(void *)((char *)v24 + 85) = *(void *)((char *)&v49[1] + 5);
            *((void *)v24 + 1CoreML::Specification::Identity::New(this, 0) = v26;
            char v55 = v24 + 6;
          }
          if (*(void *)&v47[32])
          {
            *(void *)&v47[40] = *(void *)&v47[32];
            operator delete(*(void **)&v47[32]);
          }
          break;
        default:
          std::__throw_regex_error[abi:ne180100]<(std::regex_constants::error_type)16>();
      }
      uint64_t v15 = v55;
    }
    while (v54 != v55);
    if (v12)
    {
      uint64_t v35 = *v42;
      *(void *)uint64_t v35 = a2;
      *(void *)(v35 + 8) = &v44[(void)a2];
      *(unsigned char *)(v35 + 16) = 1;
      if ((void)v52 != *(void *)&v51[32])
      {
        unint64_t v36 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v52 - *(void *)&v51[32]) >> 3);
        uint64_t v37 = (unsigned char *)(*(void *)&v51[32] + 16);
        unsigned int v38 = 1;
        do
        {
          uint64_t v39 = v35 + 24 * v38;
          *(_OWORD *)uint64_t v39 = *((_OWORD *)v37 - 1);
          char v40 = *v37;
          v37 += 24;
          *(unsigned char *)(v39 + 16) = v40;
          BOOL v16 = v36 > v38++;
        }
        while (v16);
      }
      uint64_t v6 = 1;
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  if (v53[0])
  {
    v53[1] = v53[0];
    operator delete(v53[0]);
  }
  if (*(void *)&v51[32])
  {
    *(void *)&long long v52 = *(void *)&v51[32];
    operator delete(*(void **)&v51[32]);
  }
  *(void *)uint64_t v51 = &v54;
  std::vector<std::__state<char>>::__destroy_vector::operator()[abi:ne180100]((void ***)v51);
  return v6;
}

void sub_223F4E1D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  std::__state<char>::~__state(&a17);
  std::__state<char>::~__state(&a33);
  a33 = v33 - 120;
  std::vector<std::__state<char>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a33);
  _Unwind_Resume(a1);
}

__n128 std::deque<std::__state<char>>::push_back(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 42 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<std::__state<char>>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x2A)) + 96 * (v7 % 0x2A);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v9;
  *(void *)(v8 + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 32) = 0;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(v8 + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  *(void *)(v8 + 72) = 0;
  __n128 result = *(__n128 *)(a2 + 56);
  *(__n128 *)(v8 + 56) = result;
  *(void *)(v8 + 72) = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(v8 + 85) = *(void *)(a2 + 85);
  *(void *)(v8 + 8CoreML::Specification::Identity::New(this, 0) = v11;
  ++a1[5];
  return result;
}

uint64_t std::deque<std::__state<char>>::pop_back(void *a1)
{
  unsigned int v2 = a1 + 5;
  unint64_t v3 = a1[5] + a1[4] - 1;
  std::allocator<std::__state<char>>::destroy[abi:ne180100]((uint64_t)(a1 + 5), (void *)(*(void *)(a1[1] + 8 * (v3 / 0x2A)) + 96 * (v3 % 0x2A)));
  --*v2;
  return std::deque<std::__state<char>>::__maybe_remove_back_spare[abi:ne180100](a1, 1);
}

int64x2_t std::deque<std::__state<char>>::push_front(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 32);
  if (!v4)
  {
    std::deque<std::__state<char>>::__add_front_capacity((void **)a1);
    unint64_t v4 = *(void *)(a1 + 32);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = (void *)(v5 + 8 * (v4 / 0x2A));
  uint64_t v7 = *v6 + 96 * (v4 % 0x2A);
  if (*(void *)(a1 + 16) == v5) {
    uint64_t v7 = 0;
  }
  if (v7 == *v6) {
    uint64_t v7 = *(v6 - 1) + 4032;
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v7 - 96) = *(_OWORD *)a2;
  *(_OWORD *)(v7 - 8CoreML::Specification::Identity::New(this, 0) = v8;
  *(void *)(v7 - 56) = 0;
  *(void *)(v7 - 48) = 0;
  *(void *)(v7 - 64) = 0;
  *(_OWORD *)(v7 - 64) = *(_OWORD *)(a2 + 32);
  *(void *)(v7 - 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(v7 - 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(v7 - 32) = 0;
  *(void *)(v7 - 24) = 0;
  *(_OWORD *)(v7 - 4CoreML::Specification::Identity::New(this, 0) = *(_OWORD *)(a2 + 56);
  *(void *)(v7 - 24) = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(v7 - 11) = *(void *)(a2 + 85);
  *(void *)(v7 - 16) = v9;
  int64x2_t result = vaddq_s64(*(int64x2_t *)(a1 + 32), (int64x2_t)xmmword_2246C0950);
  *(int64x2_t *)(a1 + 32) = result;
  return result;
}

void std::deque<std::__state<char>>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x2A;
  unint64_t v4 = v2 - 42;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    long long v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)long long v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      unint64_t v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      unsigned int v38 = (uint64_t *)a1[1];
      long long v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        long long v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        __int16 v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)__int16 v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }
    long long v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFC0uLL);
      std::__split_buffer<char *>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFC0uLL);
    std::__split_buffer<char *>::push_front((uint64_t)a1, &v54);
    int v44 = (void *)a1[1];
    long long v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      unint64_t v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      long long v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        long long v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      unint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        long long v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  BOOL v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFC0uLL);
  std::__split_buffer<char *>::push_back(&v54, &v53);
  char v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<char *>::push_front((uint64_t)&v54, v27);
  }
  unint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_223F4E7B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t std::deque<std::__state<char>>::__maybe_remove_back_spare[abi:ne180100](void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 42 * ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x2A) {
    a2 = 1;
  }
  if (v5 < 0x54) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

void std::deque<std::__state<char>>::__add_front_capacity(void **a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  unint64_t v4 = (v3 - v2) >> 3;
  if (v3 == v2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = 42 * v4 - 1;
  }
  uint64_t v6 = (char *)a1[4];
  if (v5 - (unint64_t)&v6[(void)a1[5]] < 0x2A)
  {
    uint64_t v7 = (uint64_t)(a1 + 3);
    long long v8 = a1[3];
    uint64_t v9 = *a1;
    uint64_t v10 = v8 - (unsigned char *)*a1;
    if (v4 >= v10 >> 3)
    {
      if (v8 == v9) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = v10 >> 2;
      }
      unint64_t v46 = a1 + 3;
      std::match_results<const char *> __p = std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v7, v11);
      unint64_t v43 = (char *)__p;
      int v44 = (char *)__p;
      uint64_t v45 = (char *)__p + 8 * v12;
      __int16 v41 = operator new(0xFC0uLL);
      std::__split_buffer<char *>::push_back(&__p, &v41);
      uint64_t v13 = (char *)a1[1];
      BOOL v14 = v44;
      if (v13 == a1[2])
      {
        unint64_t v33 = (char *)a1[1];
      }
      else
      {
        do
        {
          if (v14 == v45)
          {
            int64_t v15 = v43 - (unsigned char *)__p;
            if (v43 <= __p)
            {
              if (v14 == __p) {
                unint64_t v23 = 1;
              }
              else {
                unint64_t v23 = (v14 - (unsigned char *)__p) >> 2;
              }
              uint64_t v24 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)v46, v23);
              uint64_t v26 = v43;
              BOOL v14 = &v24[8 * (v23 >> 2)];
              uint64_t v27 = v44 - v43;
              if (v44 != v43)
              {
                BOOL v14 = &v24[8 * (v23 >> 2) + (v27 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v28 = 8 * (v27 >> 3);
                unint64_t v29 = &v24[8 * (v23 >> 2)];
                do
                {
                  uint64_t v30 = *(void *)v26;
                  v26 += 8;
                  *(void *)unint64_t v29 = v30;
                  v29 += 8;
                  v28 -= 8;
                }
                while (v28);
              }
              long long v31 = __p;
              std::match_results<const char *> __p = v24;
              unint64_t v43 = &v24[8 * (v23 >> 2)];
              int v44 = v14;
              uint64_t v45 = &v24[8 * v25];
              if (v31)
              {
                operator delete(v31);
                BOOL v14 = v44;
              }
            }
            else
            {
              uint64_t v16 = v15 >> 3;
              BOOL v17 = v15 >> 3 < -1;
              uint64_t v18 = (v15 >> 3) + 2;
              if (v17) {
                uint64_t v19 = v18;
              }
              else {
                uint64_t v19 = v16 + 1;
              }
              int64_t v20 = &v43[-8 * (v19 >> 1)];
              int64_t v21 = v14 - v43;
              if (v14 != v43)
              {
                memmove(&v43[-8 * (v19 >> 1)], v43, v14 - v43);
                BOOL v14 = v43;
              }
              unint64_t v22 = &v14[-8 * (v19 >> 1)];
              BOOL v14 = &v20[v21];
              unint64_t v43 = v22;
              int v44 = &v20[v21];
            }
          }
          uint64_t v32 = *(void *)v13;
          v13 += 8;
          *(void *)BOOL v14 = v32;
          BOOL v14 = v44 + 8;
          v44 += 8;
        }
        while (v13 != a1[2]);
        unint64_t v33 = (char *)a1[1];
      }
      uint64_t v36 = *a1;
      uint64_t v37 = v43;
      *a1 = __p;
      a1[1] = v37;
      std::match_results<const char *> __p = v36;
      unint64_t v43 = v33;
      unsigned int v38 = (char *)a1[3];
      uint64_t v39 = v45;
      a1[2] = v14;
      a1[3] = v39;
      int v44 = v13;
      uint64_t v45 = v38;
      if (v14 - v37 == 8) {
        uint64_t v40 = 21;
      }
      else {
        uint64_t v40 = (uint64_t)a1[4] + 42;
      }
      a1[4] = (void *)v40;
      if (v13 != v33) {
        int v44 = &v13[(v33 - v13 + 7) & 0xFFFFFFFFFFFFFFF8];
      }
      if (v36) {
        operator delete(v36);
      }
    }
    else
    {
      if (v2 == v9)
      {
        std::match_results<const char *> __p = operator new(0xFC0uLL);
        std::__split_buffer<char *>::push_back(a1, &__p);
        unint64_t v34 = a1[2];
        std::match_results<const char *> __p = (void *)*(v34 - 1);
        a1[2] = v34 - 1;
      }
      else
      {
        std::match_results<const char *> __p = operator new(0xFC0uLL);
      }
      std::__split_buffer<char *>::push_front((uint64_t)a1, &__p);
      if ((unsigned char *)a1[2] - (unsigned char *)a1[1] == 8) {
        uint64_t v35 = 21;
      }
      else {
        uint64_t v35 = (uint64_t)a1[4] + 42;
      }
      a1[4] = (void *)v35;
    }
  }
  else
  {
    a1[4] = v6 + 42;
    std::match_results<const char *> __p = (void *)*((void *)v3 - 1);
    a1[2] = v3 - 8;
    std::__split_buffer<char *>::push_front((uint64_t)a1, &__p);
  }
}

void sub_223F4EB48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  operator delete(v12);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t std::deque<std::__state<char>>::~deque[abi:ne180100](void *a1)
{
  uint64_t v2 = a1 + 5;
  uint64_t v3 = (void **)a1[1];
  unint64_t v4 = (void **)a1[2];
  if (v4 == v3)
  {
    unint64_t v4 = (void **)a1[1];
  }
  else
  {
    unint64_t v5 = a1[4];
    uint64_t v6 = &v3[v5 / 0x2A];
    uint64_t v7 = (char *)*v6 + 96 * (v5 % 0x2A);
    unint64_t v8 = (unint64_t)v3[(a1[5] + v5) / 0x2A] + 96 * ((a1[5] + v5) % 0x2A);
    if (v7 != (char *)v8)
    {
      do
      {
        std::allocator<std::__state<char>>::destroy[abi:ne180100]((uint64_t)v2, v7);
        v7 += 96;
        if (v7 - (unsigned char *)*v6 == 4032)
        {
          uint64_t v9 = (char *)v6[1];
          ++v6;
          uint64_t v7 = v9;
        }
      }
      while (v7 != (char *)v8);
      uint64_t v3 = (void **)a1[1];
      unint64_t v4 = (void **)a1[2];
    }
  }
  void *v2 = 0;
  unint64_t v10 = (char *)v4 - (char *)v3;
  if ((unint64_t)((char *)v4 - (char *)v3) >= 0x11)
  {
    do
    {
      operator delete(*v3);
      unint64_t v4 = (void **)a1[2];
      uint64_t v3 = (void **)(a1[1] + 8);
      a1[1] = v3;
      unint64_t v10 = (char *)v4 - (char *)v3;
    }
    while ((unint64_t)((char *)v4 - (char *)v3) > 0x10);
  }
  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 21;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 42;
  }
  a1[4] = v12;
LABEL_16:
  while (v3 != v4)
  {
    uint64_t v13 = *v3++;
    operator delete(v13);
  }
  return std::__split_buffer<std::shared_ptr<std::vector<turi::flexible_type>> *,std::allocator<std::shared_ptr<std::vector<turi::flexible_type>> *>>::~__split_buffer((uint64_t)a1);
}

char *std::vector<std::sub_match<char const*>>::__assign_with_size[abi:ne180100]<std::sub_match<char const*>*,std::sub_match<char const*>*>(void *a1, long long *a2, long long *a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = a1[2];
  int64x2_t result = (char *)*a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)result) >> 3) >= a4)
  {
    uint64_t v19 = (char *)a1[1];
    BOOL v14 = a1 + 1;
    uint64_t v13 = v19;
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((v19 - result) >> 3);
    if (v20 >= a4)
    {
      uint64_t v25 = result;
      if (a2 != a3)
      {
        uint64_t v26 = result;
        do
        {
          *(_OWORD *)uint64_t v26 = *v6;
          v26[16] = *((unsigned char *)v6 + 16);
          v25 += 24;
          uint64_t v6 = (long long *)((char *)v6 + 24);
          v26 += 24;
        }
        while (v6 != a3);
      }
      int64_t v18 = v25 - result;
      uint64_t v13 = result;
    }
    else
    {
      int64_t v21 = (long long *)((char *)a2 + 24 * v20);
      if (v13 != result)
      {
        do
        {
          *(_OWORD *)int64x2_t result = *v6;
          result[16] = *((unsigned char *)v6 + 16);
          uint64_t v6 = (long long *)((char *)v6 + 24);
          result += 24;
        }
        while (v6 != v21);
      }
      unint64_t v22 = v13;
      if (v21 != a3)
      {
        unint64_t v23 = v13;
        do
        {
          long long v24 = *v21;
          *((void *)v23 + 2) = *((void *)v21 + 2);
          *(_OWORD *)unint64_t v23 = v24;
          v23 += 24;
          int64_t v21 = (long long *)((char *)v21 + 24);
          v22 += 24;
        }
        while (v21 != a3);
      }
      int64_t v18 = v22 - v13;
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v11;
    }
    int64x2_t result = std::vector<std::string>::__vallocate[abi:ne180100](a1, v12);
    int64_t v15 = (char *)a1[1];
    BOOL v14 = a1 + 1;
    uint64_t v13 = v15;
    uint64_t v16 = v15;
    if (v6 != a3)
    {
      uint64_t v16 = v13;
      do
      {
        long long v17 = *v6;
        *((void *)v16 + 2) = *((void *)v6 + 2);
        *(_OWORD *)uint64_t v16 = v17;
        v16 += 24;
        uint64_t v6 = (long long *)((char *)v6 + 24);
      }
      while (v6 != a3);
    }
    int64_t v18 = v16 - v13;
  }
  *BOOL v14 = &v13[v18];
  return result;
}

char *std::vector<std::pair<unsigned long,char const*>>::__assign_with_size[abi:ne180100]<std::pair<unsigned long,char const*>*,std::pair<unsigned long,char const*>*>(void *a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = a1[2];
  int64x2_t result = (char *)*a1;
  if (a4 <= (v8 - (uint64_t)result) >> 4)
  {
    int64_t v18 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    unint64_t v12 = v18;
    unint64_t v19 = (v18 - result) >> 4;
    if (v19 >= a4)
    {
      uint64_t v26 = result;
      if (a2 != a3)
      {
        uint64_t v27 = result;
        do
        {
          uint64_t v28 = *v6;
          uint64_t v29 = v6[1];
          v6 += 2;
          *(void *)uint64_t v27 = v28;
          *((void *)v27 + 1) = v29;
          v27 += 16;
          v26 += 16;
        }
        while (v6 != a3);
      }
      long long v17 = (char *)(v26 - result);
      unint64_t v12 = result;
    }
    else
    {
      unint64_t v20 = (long long *)&a2[2 * v19];
      if (v12 != result)
      {
        do
        {
          uint64_t v21 = *v6;
          uint64_t v22 = v6[1];
          v6 += 2;
          *(void *)int64x2_t result = v21;
          *((void *)result + 1) = v22;
          result += 16;
        }
        while (v6 != (uint64_t *)v20);
      }
      unint64_t v23 = v12;
      if (v20 != (long long *)a3)
      {
        long long v24 = v12;
        do
        {
          long long v25 = *v20++;
          *(_OWORD *)long long v24 = v25;
          v24 += 16;
          v23 += 16;
        }
        while (v20 != (long long *)a3);
      }
      long long v17 = (char *)(v23 - v12);
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 >> 60) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    int64x2_t result = std::vector<turi::flexible_type>::__vallocate[abi:ne180100](a1, v11);
    BOOL v14 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    unint64_t v12 = v14;
    int64_t v15 = v14;
    if (v6 != a3)
    {
      int64_t v15 = v12;
      do
      {
        long long v16 = *(_OWORD *)v6;
        v6 += 2;
        *(_OWORD *)int64_t v15 = v16;
        v15 += 16;
      }
      while (v6 != a3);
    }
    long long v17 = (char *)(v15 - v12);
  }
  *uint64_t v13 = &v17[(void)v12];
  return result;
}

void std::vector<std::sub_match<std::__wrap_iter<char const*>>>::resize(std::vector<std::ssub_match> *this, std::vector<std::ssub_match>::size_type __sz)
{
  std::vector<std::ssub_match>::size_type v2 = 0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_ - (char *)this->__begin_) >> 3);
  BOOL v3 = __sz >= v2;
  std::vector<std::ssub_match>::size_type v4 = __sz - v2;
  if (v4 != 0 && v3)
  {
    std::vector<std::sub_match<std::__wrap_iter<char const*>>>::__append(this, v4);
  }
  else if (!v3)
  {
    this->__end_ = &this->__begin_[__sz];
  }
}

void std::vector<std::sub_match<std::__wrap_iter<char const*>>>::__append(std::vector<std::ssub_match> *this, std::vector<std::ssub_match>::size_type __n)
{
  value = this->__end_cap_.__value_;
  p_end_cap = &this->__end_cap_;
  unint64_t v5 = value;
  uint64_t v7 = p_end_cap[-1].__value_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)value - (char *)v7) >> 3) >= __n)
  {
    if (__n)
    {
      uint64_t v13 = &v7[__n];
      std::vector<std::ssub_match>::size_type v14 = 24 * __n;
      do
      {
        v7->first.__i_ = 0;
        v7->second.__i_ = 0;
        v7->matched = 0;
        ++v7;
        v14 -= 24;
      }
      while (v14);
      uint64_t v7 = v13;
    }
    this->__end_ = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (char *)this->__begin_) >> 3);
    unint64_t v9 = v8 + __n;
    if (v8 + __n > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (char *)this->__begin_) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11) {
      unint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)p_end_cap, v11);
    }
    else {
      unint64_t v12 = 0;
    }
    int64_t v15 = (std::sub_match<std::__wrap_iter<const char *>> *)&v12[24 * v8];
    long long v16 = &v15[__n];
    std::vector<std::ssub_match>::size_type v17 = 24 * __n;
    int64_t v18 = v15;
    do
    {
      v18->first.__i_ = 0;
      v18->second.__i_ = 0;
      v18->matched = 0;
      ++v18;
      v17 -= 24;
    }
    while (v17);
    unint64_t v19 = (std::sub_match<std::__wrap_iter<const char *>> *)&v12[24 * v11];
    std::vector<std::ssub_match>::pointer begin = this->__begin_;
    std::vector<std::ssub_match>::pointer end = this->__end_;
    if (end != this->__begin_)
    {
      do
      {
        std::pair<std::__wrap_iter<const char *>, std::__wrap_iter<const char *>> v22 = end[-1].std::pair<std::__wrap_iter<const char *>, std::__wrap_iter<const char *>>;
        *(void *)&v15[-1].matched = *(void *)&end[-1].matched;
        v15[-1].std::pair<std::__wrap_iter<const char *>, std::__wrap_iter<const char *>> = v22;
        --v15;
        --end;
      }
      while (end != begin);
      std::vector<std::ssub_match>::pointer end = this->__begin_;
    }
    this->__begin_ = v15;
    this->__end_ = v16;
    this->__end_cap_.__value_ = v19;
    if (end)
    {
      operator delete(end);
    }
  }
}

std::vector<char> *__cdecl std::vector<char>::vector(std::vector<char> *this, std::vector<char>::size_type __n)
{
  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  if (__n)
  {
    std::vector<turi::flex_type_enum>::__vallocate[abi:ne180100](this, __n);
    std::vector<char>::pointer end = this->__end_;
    unint64_t v5 = &end[__n];
    bzero(end, __n);
    this->__end_ = v5;
  }
  return this;
}

void sub_223F4F204(_Unwind_Exception *exception_object)
{
  BOOL v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *OUTLINED_FUNCTION_2_2(void *result)
{
  result[1] = 0;
  result[2] = 0;
  char *result = 0;
  return result;
}

__n128 OUTLINED_FUNCTION_3_2(__n128 *a1)
{
  __n128 result = *a1;
  *(void *)(v1 - 48) = a1[1].n128_u64[0];
  *(__n128 *)(v1 - 64) = result;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  return result;
}

void *boost::iostreams::stream<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>>::stream<std::string>(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = (void *)boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,std::istream>::stream_base((uint64_t)a1, a2 + 1);
  uint64_t v7 = *a2;
  *uint64_t v6 = *a2;
  *(void *)((char *)a1 + *(void *)(v7 - 24)) = a2[5];
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  turi::fileio_impl::general_fstream_source::general_fstream_source(v10, &__p);
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), 0);
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open((uint64_t)(a1 + 2), (uint64_t)v10, 0xFFFFFFFFFFFFFFFFLL, -1);
  turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F4F3AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v15 + 16);
  _Unwind_Resume(a1);
}

std::string *turi::general_ifstream::general_ifstream(std::string *a1, uint64_t a2)
{
  a1[9].__r_.__value_.__r.__words[0] = MEMORY[0x263F8C368] + 16;
  boost::iostreams::stream<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>>::stream<std::string>(a1, (uint64_t *)off_26D758F38, a2);
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D758EF8;
  a1[9].__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D758F20;
  std::vector<std::ssub_match>::size_type v4 = a1 + 8;
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    long long v5 = *(_OWORD *)a2;
    a1[8].__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v5;
  }
  return a1;
}

void sub_223F4F4CC(void *a1, int a2, std::string *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long *a10, long long a11, uint64_t a12)
{
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v14 + 16);
  MEMORY[0x22A614E30](v13);
  if (a2 == 3)
  {
    std::vector<std::ssub_match>::size_type v17 = __cxa_begin_catch(a1);
    *(void *)&a11 = v12;
    *((void *)&a11 + 1) = v17;
    turi::general_ifstream::general_ifstream(std::string)::$_2::operator()((uint64_t *)&a11);
  }
  if (a2 == 2)
  {
    exception_ptr = (char *)__cxa_get_exception_ptr(a1);
    if (exception_ptr[23] < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)&a11, *(const std::string::value_type **)exception_ptr, *((void *)exception_ptr + 1));
    }
    else
    {
      long long v19 = *(_OWORD *)exception_ptr;
      a12 = *((void *)exception_ptr + 2);
      a11 = v19;
    }
    __cxa_begin_catch(a1);
    a9 = v12;
    a10 = &a11;
    turi::general_ifstream::general_ifstream(std::string)::$_1::operator()(&a9);
  }
  __cxa_begin_catch(a1);
  *(void *)&a11 = v12;
  turi::general_ifstream::general_ifstream(std::string)::$_0::operator()((uint64_t *)&a11);
}

void sub_223F4F58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void *boost::iostreams::stream<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>>::stream<std::string,BOOL>(void *a1, uint64_t *a2, uint64_t a3, unsigned __int8 *a4)
{
  unint64_t v8 = (void *)boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,std::istream>::stream_base((uint64_t)a1, a2 + 1);
  uint64_t v9 = *a2;
  *unint64_t v8 = *a2;
  *(void *)((char *)a1 + *(void *)(v9 - 24)) = a2[5];
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  turi::fileio_impl::general_fstream_source::general_fstream_source(v12, &__p, *a4);
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), 0);
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open((uint64_t)(a1 + 2), (uint64_t)v12, 0xFFFFFFFFFFFFFFFFLL, -1);
  turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)v12);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F4F718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v15 + 16);
  _Unwind_Resume(a1);
}

std::string *turi::general_ifstream::general_ifstream(std::string *a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned __int8 v8 = a3;
  a1[9].__r_.__value_.__r.__words[0] = MEMORY[0x263F8C368] + 16;
  boost::iostreams::stream<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>>::stream<std::string,BOOL>(a1, (uint64_t *)off_26D758F38, a2, &v8);
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D758EF8;
  a1[9].__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D758F20;
  long long v5 = a1 + 8;
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)a2;
    a1[8].__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_223F4F840(void *a1, int a2, std::string *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long *a10, long long a11, uint64_t a12)
{
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v14 + 16);
  MEMORY[0x22A614E30](v13);
  if (a2 == 3)
  {
    std::vector<std::ssub_match>::size_type v17 = __cxa_begin_catch(a1);
    *(void *)&a11 = v12;
    *((void *)&a11 + 1) = v17;
    turi::general_ifstream::general_ifstream(std::string,BOOL)::$_2::operator()((uint64_t *)&a11);
  }
  if (a2 == 2)
  {
    exception_ptr = (char *)__cxa_get_exception_ptr(a1);
    if (exception_ptr[23] < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)&a11, *(const std::string::value_type **)exception_ptr, *((void *)exception_ptr + 1));
    }
    else
    {
      long long v19 = *(_OWORD *)exception_ptr;
      a12 = *((void *)exception_ptr + 2);
      a11 = v19;
    }
    __cxa_begin_catch(a1);
    a9 = v12;
    a10 = &a11;
    turi::general_ifstream::general_ifstream(std::string,BOOL)::$_1::operator()(&a9);
  }
  __cxa_begin_catch(a1);
  *(void *)&a11 = v12;
  turi::general_ifstream::general_ifstream(std::string,BOOL)::$_0::operator()((uint64_t *)&a11);
}

void sub_223F4F900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t turi::general_ifstream::file_size(turi::neural_net::shared_float_array **this)
{
  return turi::fileio_impl::general_fstream_source::file_size(this + 11);
}

uint64_t turi::general_ifstream::get_bytes_read(turi::general_ifstream *this)
{
  return turi::fileio_impl::general_fstream_source::get_bytes_read((turi::general_ifstream *)((char *)this + 88));
}

void *boost::iostreams::stream<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>>::stream<std::string>(void *a1, uint64_t *a2, uint64_t a3)
{
  long long v6 = (void *)boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,std::ostream>::stream_base((uint64_t)a1, a2 + 1);
  uint64_t v7 = *a2;
  *long long v6 = *a2;
  *(void *)((char *)a1 + *(void *)(v7 - 24)) = a2[5];
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  turi::fileio_impl::general_fstream_sink::general_fstream_sink(v10, &__p);
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), 0);
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::open((uint64_t)(a1 + 1), (uint64_t)v10, -1);
  turi::fileio_impl::general_fstream_sink::~general_fstream_sink((turi::fileio_impl::general_fstream_sink *)v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F4FA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v16 + 8);
  _Unwind_Resume(a1);
}

void *turi::general_ofstream::general_ofstream(void *a1, uint64_t a2)
{
  a1[29] = MEMORY[0x263F8C368] + 16;
  boost::iostreams::stream<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>>::stream<std::string>(a1, (uint64_t *)off_26D75C358, a2);
  *a1 = &unk_26D75C318;
  a1[29] = &unk_26D75C340;
  std::vector<std::ssub_match>::size_type v4 = (std::string *)(a1 + 26);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    long long v5 = *(_OWORD *)a2;
    a1[28] = *(void *)(a2 + 16);
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v5;
  }
  return a1;
}

void sub_223F4FBB4(void *a1, int a2, std::string *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long *a10, long long a11, uint64_t a12)
{
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v14 + 8);
  MEMORY[0x22A614E30](v13);
  switch(a2)
  {
    case 4:
      __cxa_begin_catch(a1);
      __cxa_rethrow();
    case 3:
      std::vector<std::ssub_match>::size_type v17 = __cxa_begin_catch(a1);
      *(void *)&a11 = v12;
      *((void *)&a11 + 1) = v17;
      turi::general_ofstream::general_ofstream(std::string)::$_2::operator()((uint64_t *)&a11);
    case 2:
      exception_ptr = (char *)__cxa_get_exception_ptr(a1);
      if (exception_ptr[23] < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)&a11, *(const std::string::value_type **)exception_ptr, *((void *)exception_ptr + 1));
      }
      else
      {
        long long v19 = *(_OWORD *)exception_ptr;
        a12 = *((void *)exception_ptr + 2);
        a11 = v19;
      }
      __cxa_begin_catch(a1);
      a9 = v12;
      a10 = &a11;
      turi::general_ofstream::general_ofstream(std::string)::$_1::operator()(&a9);
  }
  __cxa_begin_catch(a1);
  *(void *)&a11 = v12;
  turi::general_ofstream::general_ofstream(std::string)::$_0::operator()((uint64_t *)&a11);
}

void sub_223F4FC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void *boost::iostreams::stream<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>>::stream<std::string,BOOL>(void *a1, uint64_t *a2, uint64_t a3, unsigned __int8 *a4)
{
  unsigned __int8 v8 = (void *)boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,std::ostream>::stream_base((uint64_t)a1, a2 + 1);
  uint64_t v9 = *a2;
  *unsigned __int8 v8 = *a2;
  *(void *)((char *)a1 + *(void *)(v9 - 24)) = a2[5];
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  turi::fileio_impl::general_fstream_sink::general_fstream_sink(v12, &__p, *a4);
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), 0);
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::open((uint64_t)(a1 + 1), (uint64_t)v12, -1);
  turi::fileio_impl::general_fstream_sink::~general_fstream_sink((turi::fileio_impl::general_fstream_sink *)v12);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F4FE24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v16 + 8);
  _Unwind_Resume(a1);
}

void *turi::general_ofstream::general_ofstream(void *a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned __int8 v8 = a3;
  a1[29] = MEMORY[0x263F8C368] + 16;
  boost::iostreams::stream<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>>::stream<std::string,BOOL>(a1, (uint64_t *)off_26D75C358, a2, &v8);
  *a1 = &unk_26D75C318;
  a1[29] = &unk_26D75C340;
  long long v5 = (std::string *)(a1 + 26);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)a2;
    a1[28] = *(void *)(a2 + 16);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_223F4FF4C(void *a1, int a2, std::string *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long *a10, long long a11, uint64_t a12)
{
  std::ostream::~ostream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v14 + 8);
  MEMORY[0x22A614E30](v13);
  if (a2 == 3)
  {
    __cxa_get_exception_ptr(a1);
    a9 = MEMORY[0x263F8C3C0] + 16;
    __cxa_begin_catch(a1);
    *(void *)&a11 = v12;
    *((void *)&a11 + 1) = &a9;
    turi::general_ofstream::general_ofstream(std::string,BOOL)::$_2::operator()((const std::exception **)&a11);
  }
  if (a2 == 2)
  {
    exception_ptr = (char *)__cxa_get_exception_ptr(a1);
    if (exception_ptr[23] < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)&a11, *(const std::string::value_type **)exception_ptr, *((void *)exception_ptr + 1));
    }
    else
    {
      long long v18 = *(_OWORD *)exception_ptr;
      a12 = *((void *)exception_ptr + 2);
      a11 = v18;
    }
    __cxa_begin_catch(a1);
    a9 = v12;
    a10 = &a11;
    turi::general_ofstream::general_ofstream(std::string,BOOL)::$_1::operator()(&a9);
  }
  __cxa_begin_catch(a1);
  *(void *)&a11 = v12;
  turi::general_ofstream::general_ofstream(std::string,BOOL)::$_0::operator()((uint64_t *)&a11);
}

void sub_223F50034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

BOOL turi::general_ofstream::good(turi::general_ofstream *this)
{
  return *(_DWORD *)((char *)this + *(void *)(*(void *)this - 24) + 32) == 0;
}

BOOL turi::general_ofstream::fail(turi::general_ofstream *this)
{
  return (*((unsigned char *)this + *(void *)(*(void *)this - 24) + 32) & 5) != 0;
}

uint64_t boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,std::istream>::stream_base(uint64_t a1, uint64_t *a2)
{
  std::vector<std::ssub_match>::size_type v4 = (void *)(a1 + 16);
  std::streambuf::basic_streambuf();
  *(_DWORD *)(a1 + 8CoreML::Specification::Identity::New(this, 0) = 0;
  *(unsigned char *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_DWORD *)(a1 + 184) = 4;
  *(void *)(a1 + 16) = &unk_26D7590E8;
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v5 - 24)) = a2[3];
  uint64_t v6 = a2[1];
  *(void *)a1 = v6;
  *(void *)(a1 + *(void *)(v6 - 24)) = a2[2];
  *(void *)(a1 + 8) = 0;
  uint64_t v7 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v7, v4);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  uint64_t v8 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v8 - 24)) = a2[3];
  return a1;
}

void sub_223F502F8(_Unwind_Exception *a1)
{
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v1);
  _Unwind_Resume(a1);
}

void boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  v7[0] = *(void *)a2;
  v7[1] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = *(void *)(a2 + 24);
  v7[2] = *(void *)(a2 + 16);
  void v7[3] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = *(void *)(a2 + 40);
  v7[4] = *(void *)(a2 + 32);
  v7[5] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  char v8 = *(unsigned char *)(a2 + 48);
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open_impl(a1, (uint64_t)v7, a3, a4);
  turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)v7);
}

void sub_223F50390(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)va);
  _Unwind_Resume(a1);
}

void boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open_impl(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 168))
  {
    *(void *)&v4.__val_ = 1;
    v4.__cat_ = std::iostream_category();
    std::ios_base::failure::failure(&v5, "already open", &v4);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v5);
  }
  boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open(a1, a2, a3, a4);
}

void sub_223F5040C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::open(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v6 = turi::fileio::FILEIO_READER_BUFFER_SIZE;
  if (a3 != -1) {
    unint64_t v6 = a3;
  }
  uint64_t v7 = 2;
  if (a4 > 2) {
    uint64_t v7 = a4;
  }
  if (a4 == -1) {
    uint64_t v7 = 4;
  }
  *(void *)(a1 + 16CoreML::Specification::Identity::New(this, 0) = v7;
  if (v6 <= 1) {
    LODWORD(v6) = 1;
  }
  int v8 = v6 + v7;
  if (*(void *)(a1 + 152) != v8)
  {
    uint64_t v9 = v8;
    unint64_t v10 = operator new(v8);
    unint64_t v11 = *(void **)(a1 + 144);
    *(void *)(a1 + 144) = v10;
    *(void *)(a1 + 152) = v9;
    if (v11) {
      operator delete(v11);
    }
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 168))(a1);
  uint64_t v12 = *(void *)(a2 + 8);
  v15[0] = *(void *)a2;
  v15[1] = v12;
  if (v12) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v13 = *(void *)(a2 + 24);
  v15[2] = *(void *)(a2 + 16);
  v15[3] = v13;
  if (v13) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = *(void *)(a2 + 40);
  v15[4] = *(void *)(a2 + 32);
  v15[5] = v14;
  if (v14) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
  }
  char v16 = *(unsigned char *)(a2 + 48);
  boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_source>>::reset((turi::fileio_impl::general_fstream_source *)(a1 + 72), (uint64_t)v15);
  turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)v15);
  *(_DWORD *)(a1 + 168) |= 1u;
  *(_DWORD *)(a1 + 64) &= 0xFFFFFFF8;
}

void sub_223F50564(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)va);
  _Unwind_Resume(a1);
}

uint64_t boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_source>>::reset(turi::fileio_impl::general_fstream_source *a1, uint64_t a2)
{
  if (*((unsigned char *)a1 + 56))
  {
    turi::fileio_impl::general_fstream_source::~general_fstream_source(a1);
    *((unsigned char *)a1 + 56) = 0;
  }
  uint64_t result = turi::fileio_impl::general_fstream_source::general_fstream_source((uint64_t)a1, a2);
  *(unsigned char *)(result + 56) = 1;
  return result;
}

uint64_t turi::fileio_impl::general_fstream_source::general_fstream_source(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  *(void *)uint64_t result = *(void *)a2;
  *(void *)(result + 8) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(result + 16) = *(void *)(a2 + 16);
  *(void *)(result + 24) = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(result + 32) = *(void *)(a2 + 32);
  *(void *)(result + 4CoreML::Specification::Identity::New(this, 0) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(result + 48) = *(unsigned char *)(a2 + 48);
  return result;
}

uint64_t boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,std::ostream>::stream_base(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (void *)(a1 + 8);
  std::streambuf::basic_streambuf();
  *(_DWORD *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 16CoreML::Specification::Identity::New(this, 0) = 0;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_DWORD *)(a1 + 20CoreML::Specification::Identity::New(this, 0) = 4;
  *(void *)(a1 + 8) = &unk_26D75C508;
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v5 - 24)) = a2[3];
  uint64_t v6 = a2[1];
  *(void *)a1 = v6;
  *(void *)(a1 + *(void *)(v6 - 24)) = a2[2];
  uint64_t v7 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v7, v4);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  uint64_t v8 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v8 - 24)) = a2[3];
  return a1;
}

void sub_223F50834(_Unwind_Exception *a1)
{
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::~stream_buffer(v1);
  _Unwind_Resume(a1);
}

void boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::open(uint64_t a1, uint64_t a2, uint64_t a3)
{
  turi::fileio_impl::general_fstream_sink::general_fstream_sink((uint64_t)v5, a2);
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::open_impl(a1, (uint64_t)v5, a3);
  turi::fileio_impl::general_fstream_sink::~general_fstream_sink((turi::fileio_impl::general_fstream_sink *)v5);
}

void sub_223F508A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::open_impl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 192))
  {
    *(void *)&v3.__val_ = 1;
    v3.__cat_ = std::iostream_category();
    std::ios_base::failure::failure(&v4, "already open", &v3);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v4);
  }
  boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::open(a1, a2, a3);
}

void sub_223F50920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_sink,std::char_traits<char>,std::allocator<char>,boost::iostreams::output>::open(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 == -1) {
    uint64_t v5 = turi::fileio::FILEIO_WRITER_BUFFER_SIZE;
  }
  else {
    uint64_t v5 = a3;
  }
  if (v5)
  {
    if (*(void *)(a1 + 176) != (int)v5)
    {
      uint64_t v6 = operator new((int)v5);
      uint64_t v7 = *(void **)(a1 + 168);
      *(void *)(a1 + 168) = v6;
      *(void *)(a1 + 176) = (int)v5;
      if (v7) {
        operator delete(v7);
      }
    }
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 176))(a1);
  turi::fileio_impl::general_fstream_sink::general_fstream_sink((uint64_t)v9, a2);
  boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_sink>>::reset((turi::fileio_impl::general_fstream_sink *)(a1 + 72), (uint64_t)v9);
  turi::fileio_impl::general_fstream_sink::~general_fstream_sink((turi::fileio_impl::general_fstream_sink *)v9);
  if (v5 <= 1) {
    int v8 = 1;
  }
  else {
    int v8 = 3;
  }
  *(_DWORD *)(a1 + 192) |= v8;
  *(_DWORD *)(a1 + 64) &= 0xFFFFFFF8;
}

void sub_223F50A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_sink>>::reset(turi::fileio_impl::general_fstream_sink *a1, uint64_t a2)
{
  if (*((unsigned char *)a1 + 80))
  {
    turi::fileio_impl::general_fstream_sink::~general_fstream_sink(a1);
    *((unsigned char *)a1 + 8CoreML::Specification::Identity::New(this, 0) = 0;
  }
  uint64_t result = turi::fileio_impl::general_fstream_sink::general_fstream_sink((uint64_t)a1, a2);
  *(unsigned char *)(result + 8CoreML::Specification::Identity::New(this, 0) = 1;
  return result;
}

uint64_t turi::fileio_impl::general_fstream_sink::general_fstream_sink(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 16) = v5;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = (std::string *)(a1 + 56);
  if (*(char *)(a2 + 79) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)(a2 + 56), *(void *)(a2 + 64));
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  return a1;
}

{
  int v4;
  uint64_t v5;
  const std::string::value_type *v6;
  uint64_t v7;
  int v8;
  int v9;
  BOOL v10;
  std::string __p;

  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  uint64_t v4 = *(char *)(a2 + 23);
  if (v4 < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    LOBYTE(v4) = *(unsigned char *)(a2 + 23);
  }
  else
  {
    std::string __p = *(std::string *)a2;
  }
  uint64_t v5 = 0;
  uint64_t v6 = *(const std::string::value_type **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  if ((v4 & 0x80u) == 0)
  {
    uint64_t v6 = (const std::string::value_type *)a2;
    uint64_t v7 = v4;
  }
  while (-v7 != v5 && v5 != -3)
  {
    long long v8 = v6[v7 - 1 + v5];
    uint64_t v9 = aGz[v5-- + 2];
    if (v8 != v9)
    {
      unint64_t v10 = 0;
      goto LABEL_11;
    }
  }
  unint64_t v10 = v5 == -3;
LABEL_11:
  turi::fileio_impl::general_fstream_sink::open_file(a1, (uint64_t)&__p, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F50B2C(_Unwind_Exception *a1)
{
  uint64_t v5 = *(std::__shared_weak_count **)(v1 + 40);
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  turi::fileio_impl::general_fstream_sink::general_fstream_sink(v3, v2);
  _Unwind_Resume(a1);
}

void *OUTLINED_FUNCTION_0_7(void *result)
{
  result[1] = 0;
  result[2] = 0;
  char *result = 0;
  return result;
}

__n128 OUTLINED_FUNCTION_2_3(__n128 *a1)
{
  __n128 result = *a1;
  *(void *)(v1 - 8CoreML::Specification::Identity::New(this, 0) = a1[1].n128_u64[0];
  *(__n128 *)(v1 - 96) = result;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  return result;
}

__n128 OUTLINED_FUNCTION_3_3(__n128 *a1)
{
  __n128 result = *a1;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  return result;
}

__n128 OUTLINED_FUNCTION_4_1(__n128 *a1)
{
  __n128 result = *a1;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  return result;
}

void OUTLINED_FUNCTION_5_1(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v10 = *(const std::string::value_type **)a1;
  std::string::size_type v11 = *(void *)(a1 + 8);
  std::string::__init_copy_ctor_external((std::string *)&a8, v10, v11);
}

std::string *OUTLINED_FUNCTION_6_1(uint64_t a1, uint64_t a2, const std::string::value_type *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::string *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return std::string::insert((std::string *)&a19, 0, a3);
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return file_logger::operator<<<std::string>(v0, v1 - 64);
}

std::string *OUTLINED_FUNCTION_8_1(uint64_t a1, uint64_t a2, const std::string::value_type *a3, std::string *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return std::string::insert((std::string *)&a12, 0, a3);
}

double OUTLINED_FUNCTION_9_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, uint64_t a10, __n128 a11)
{
  *(void *)&double result = turi::sanitize_url(&a9, &a11).n128_u64[0];
  return result;
}

double OUTLINED_FUNCTION_10_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __n128 a15, uint64_t a16, uint64_t a17, __n128 a18)
{
  *(void *)&double result = turi::sanitize_url(&a15, &a18).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_11_1(long long *a1)
{
  long long v3 = *a1;
  *(void *)(v2 - 8CoreML::Specification::Identity::New(this, 0) = *((void *)a1 + 2);
  *(_OWORD *)(v2 - 96) = v3;
  *((void *)a1 + 1) = 0;
  *((void *)a1 + 2) = 0;
  *(void *)a1 = 0;
  return *(void *)(v1 + 8);
}

__n128 OUTLINED_FUNCTION_12_1(__n128 *a1)
{
  __n128 result = *a1;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_1(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  return *(void *)(v1 + 8);
}

__n128 OUTLINED_FUNCTION_14_1@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)a1;
}

__n128 OUTLINED_FUNCTION_15_0@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)a1;
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return turi::error::io_error::io_error(v0, v1 - 96);
}

uint64_t OUTLINED_FUNCTION_17_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  return turi::error::io_error::io_error(v10, va);
}

void sub_223F50E28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v14 + 79) < 0) {
    operator delete(*v15);
  }
  std::vector<std::ssub_match>::size_type v17 = *(std::__shared_weak_count **)(v14 + 40);
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  uint64_t v18 = *(std::__shared_weak_count **)(v14 + 24);
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  uint64_t v19 = *(std::__shared_weak_count **)(v14 + 8);
  if (v19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v19);
  }
  _Unwind_Resume(exception_object);
}

void turi::fileio_impl::general_fstream_sink::open_file(uint64_t a1, uint64_t a2, int a3)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v12, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v12 = *(std::string *)a2;
  }
  turi::sanitize_url((__n128 *)&v12, &v13);
  uint64_t v6 = (void **)(a1 + 56);
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*v6);
  }
  *(__n128 *)uint64_t v6 = v13;
  *(void *)(a1 + 72) = v14;
  HIBYTE(v14) = 0;
  v13.n128_u8[0] = 0;
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  unsigned int v11 = 20;
  std::allocate_shared[abi:ne180100]<turi::union_fstream,std::allocator<turi::union_fstream>,std::string &,unsigned int,void>(a2, &v11, &v13);
  __n128 v7 = v13;
  __n128 v13 = 0uLL;
  long long v8 = *(std::__shared_weak_count **)(a1 + 8);
  *(__n128 *)a1 = v7;
  if (v8)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    if (v13.n128_u64[1]) {
      std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v13.n128_u64[1]);
    }
  }
  *(unsigned char *)(a1 + 48) = a3;
  if (a3) {
    _ZNSt3__115allocate_sharedB8ne180100IN5boost9iostreams21basic_gzip_compressorINS_9allocatorIcEEEENS4_IS6_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_();
  }
  turi::union_fstream::get_ostream(*(void *)a1, &v13);
  __n128 v9 = v13;
  __n128 v13 = 0uLL;
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 40);
  *(__n128 *)(a1 + 32) = v9;
  if (v10)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
    if (v13.n128_u64[1]) {
      std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v13.n128_u64[1]);
    }
  }
}

void sub_223F50FD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::fileio_impl::general_fstream_sink::general_fstream_sink(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  turi::fileio_impl::general_fstream_sink::open_file(a1, (uint64_t)&__p, a3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F51090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v14 + 79) < 0) {
    operator delete(*v15);
  }
  std::vector<std::ssub_match>::size_type v17 = *(std::__shared_weak_count **)(v14 + 40);
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  uint64_t v18 = *(std::__shared_weak_count **)(v14 + 24);
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  uint64_t v19 = *(std::__shared_weak_count **)(v14 + 8);
  if (v19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v19);
  }
  _Unwind_Resume(exception_object);
}

const char *turi::fileio_impl::general_fstream_sink::write(turi::fileio_impl::general_fstream_sink *this, const char *a2, uint64_t a3)
{
  if (*((unsigned char *)this + 48))
  {
    uint64_t v6 = *((void *)this + 2);
    __n128 v7 = (void *)*((void *)this + 4);
    return boost::iostreams::basic_gzip_compressor<std::allocator<char>>::write<std::ostream>(v6, v7, a2, a3);
  }
  else
  {
    std::ostream::write();
    if ((*(unsigned char *)(*((void *)this + 4) + *(void *)(**((void **)this + 4) - 24) + 32) & 5) != 0) {
      return 0;
    }
    else {
      return (const char *)a3;
    }
  }
}

const char *boost::iostreams::basic_gzip_compressor<std::allocator<char>>::write<std::ostream>(uint64_t a1, void *a2, const char *a3, uint64_t a4)
{
  if ((*(unsigned char *)(a1 + 72) & 1) == 0)
  {
    if (*(char *)(a1 + 39) < 0)
    {
      uint64_t v10 = *(void *)(a1 + 64);
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
    }
    else
    {
      uint64_t v8 = a1 + 16;
      uint64_t v9 = *(unsigned __int8 *)(a1 + 39);
      uint64_t v10 = *(void *)(a1 + 64);
    }
    uint64_t v11 = *(void *)((char *)a2 + *(void *)(*a2 - 24) + 40);
    uint64_t v12 = *(void *)(a1 + 64)
        + (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 96))(v11, v8 + v10, v9 - v10);
    *(void *)(a1 + 64) = v12;
    if (*(char *)(a1 + 39) < 0) {
      uint64_t v13 = *(void *)(a1 + 24);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(a1 + 39);
    }
    if (v12 != v13) {
      return 0;
    }
    *(_DWORD *)(a1 + 72) |= 1u;
  }
  return boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::write<std::ostream>((uint64_t *)a1, a2, a3, a4);
}

void turi::fileio_impl::general_fstream_sink::~general_fstream_sink(turi::fileio_impl::general_fstream_sink *this)
{
  if (*(void *)this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (!*(void *)(v2 + 8)) {
        turi::fileio_impl::general_fstream_sink::close(this);
      }
    }
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
  long long v3 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  uint64_t v4 = (std::__shared_weak_count *)*((void *)this + 3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  uint64_t v5 = (std::__shared_weak_count *)*((void *)this + 1);
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
}

void sub_223F5130C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long __p, uint64_t a10)
{
  __cxa_begin_catch(a1);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v11 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/fileio/general_fstream_sink.cpp", "~general_fstream_sink", 75, 1);
    uint64_t v12 = file_logger::operator<<((pthread_key_t *)v11, "Exception occured on closing ");
    if (*(char *)(v10 + 79) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)&__p, *(const std::string::value_type **)(v10 + 56), *(void *)(v10 + 64));
    }
    else
    {
      std::string __p = *(_OWORD *)(v10 + 56);
      a10 = *(void *)(v10 + 72);
    }
    uint64_t v13 = (pthread_key_t *)file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    uint64_t v14 = file_logger::operator<<(v13, ". The file may not be properly written");
    file_logger::operator<<((uint64_t)v14, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    if (SHIBYTE(a10) < 0) {
      operator delete((void *)__p);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x223F512C4);
}

void turi::fileio_impl::general_fstream_sink::close(turi::fileio_impl::general_fstream_sink *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2)
  {
    boost::iostreams::basic_gzip_compressor<std::allocator<char>>::close<std::ostream>(v2, *((void **)this + 4), 16);
    long long v3 = (std::__shared_weak_count *)*((void *)this + 3);
    *((void *)this + 2) = 0;
    *((void *)this + 3) = 0;
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
  }
  uint64_t v4 = (std::__shared_weak_count *)*((void *)this + 5);
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  uint64_t v5 = (std::__shared_weak_count *)*((void *)this + 1);
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  if (v5)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
}

uint64_t boost::iostreams::basic_gzip_compressor<std::allocator<char>>::close<std::ostream>(uint64_t a1, void *a2, int a3)
{
  if (a3 == 16 && (*(unsigned char *)(a1 + 72) & 1) == 0) {
    boost::iostreams::basic_gzip_compressor<std::allocator<char>>::write<std::ostream>(a1, a2, 0, 0);
  }
  uint64_t result = boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::close<std::ostream>((uint64_t **)a1, a2, a3);
  if (a3 == 16 && (*(unsigned char *)(a1 + 72) & 1) != 0)
  {
    boost::iostreams::basic_gzip_compressor<std::allocator<char>>::write_long<std::ostream>(*(_DWORD *)(*(void *)a1 + 12), a2);
    uint64_t result = boost::iostreams::basic_gzip_compressor<std::allocator<char>>::write_long<std::ostream>(*(_DWORD *)(*(void *)a1 + 20), a2);
  }
  if (*(char *)(a1 + 63) < 0)
  {
    **(unsigned char **)(a1 + 4CoreML::Specification::Identity::New(this, 0) = 0;
    *(void *)(a1 + 48) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = 0;
    *(unsigned char *)(a1 + 63) = 0;
  }
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  return result;
}

void sub_223F51500(void *a1)
{
  __cxa_begin_catch(a1);
  if (*(char *)(v1 + 63) < 0)
  {
    **(unsigned char **)(v1 + 4CoreML::Specification::Identity::New(this, 0) = 0;
    *(void *)(v1 + 48) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + 4CoreML::Specification::Identity::New(this, 0) = 0;
    *(unsigned char *)(v1 + 63) = 0;
  }
  *(void *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  __cxa_rethrow();
}

void sub_223F51534(_Unwind_Exception *a1)
{
}

void *std::allocate_shared[abi:ne180100]<turi::union_fstream,std::allocator<turi::union_fstream>,std::string &,unsigned int,void>@<X0>(uint64_t a1@<X1>, unsigned int *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = operator new(0x70uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::union_fstream>::__shared_ptr_emplace[abi:ne180100]<std::string &,unsigned int,std::allocator<turi::union_fstream>,0>(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_223F51598(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<turi::union_fstream>::__shared_ptr_emplace[abi:ne180100]<std::string &,unsigned int,std::allocator<turi::union_fstream>,0>(void *a1, uint64_t a2, unsigned int *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75D9B8;
  std::allocator<turi::union_fstream>::construct[abi:ne180100]<turi::union_fstream,std::string &,unsigned int>((uint64_t)&v5, (uint64_t)(a1 + 3), a2, a3);
  return a1;
}

void sub_223F5160C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::union_fstream>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75D9B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::union_fstream>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75D9B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::union_fstream>::__on_zero_shared(uint64_t a1)
{
}

void std::allocator<turi::union_fstream>::construct[abi:ne180100]<turi::union_fstream,std::string &,unsigned int>(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v9, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string v9 = *(std::string *)a3;
  }
  uint64_t v6 = *a4;
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  turi::union_fstream::union_fstream(a2, &v9, v6, __p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
}

void sub_223F5173C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void _ZNSt3__115allocate_sharedB8ne180100IN5boost9iostreams21basic_gzip_compressorINS_9allocatorIcEEEENS4_IS6_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_()
{
  uint64_t v0 = operator new(0x68uLL);
  _ZNSt3__120__shared_ptr_emplaceIN5boost9iostreams21basic_gzip_compressorINS_9allocatorIcEEEENS4_IS6_EEEC2B8ne180100IJES7_Li0EEES7_DpOT_(v0);
}

void sub_223F517A8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void _ZNSt3__120__shared_ptr_emplaceIN5boost9iostreams21basic_gzip_compressorINS_9allocatorIcEEEENS4_IS6_EEEC2B8ne180100IJES7_Li0EEES7_DpOT_(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75DA08;
  std::allocator<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>::construct[abi:ne180100]<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>((uint64_t)&v1, (uint64_t)(a1 + 3));
}

void sub_223F51814(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75DA08;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75DA08;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>::__on_zero_shared(uint64_t a1)
{
  std::allocator<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>::destroy[abi:ne180100]((uint64_t)&v1, a1 + 24);
}

void std::allocator<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>::construct[abi:ne180100]<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>(uint64_t a1, uint64_t a2)
{
  std::string::basic_string[abi:ne180100]<0>(&v4, "");
  std::string::basic_string[abi:ne180100]<0>(&v3, "");
  boost::iostreams::gzip_params::gzip_params((uint64_t)&v5, -1, 8, 15, 8, 0, &v4, &v3, 0);
  boost::iostreams::basic_gzip_compressor<std::allocator<char>>::basic_gzip_compressor(a2, &v5);
}

void sub_223F519A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

void boost::iostreams::gzip_params::~gzip_params(void **this)
{
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

uint64_t boost::iostreams::gzip_params::gzip_params(uint64_t a1, int a2, int a3, int a4, int a5, int a6, long long *a7, long long *a8, uint64_t a9)
{
  *(_DWORD *)a1 = a2;
  *(_DWORD *)(a1 + 4) = a3;
  *(_DWORD *)(a1 + 8) = a4;
  *(_DWORD *)(a1 + 12) = a5;
  *(_DWORD *)(a1 + 16) = a6;
  *(_WORD *)(a1 + 2CoreML::Specification::Identity::New(this, 0) = 0;
  if (*((char *)a7 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 24), *(const std::string::value_type **)a7, *((void *)a7 + 1));
  }
  else
  {
    long long v11 = *a7;
    *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = *((void *)a7 + 2);
    *(_OWORD *)(a1 + 24) = v11;
  }
  uint64_t v12 = (std::string *)(a1 + 48);
  if (*((char *)a8 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v12, *(const std::string::value_type **)a8, *((void *)a8 + 1));
  }
  else
  {
    long long v13 = *a8;
    *(void *)(a1 + 64) = *((void *)a8 + 2);
    *(_OWORD *)&v12->__r_.__value_.__l.__data_ = v13;
  }
  *(void *)(a1 + 72) = a9;
  return a1;
}

void sub_223F51AC4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void boost::iostreams::basic_gzip_compressor<std::allocator<char>>::basic_gzip_compressor(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  uint64_t v5 = *((void *)a2 + 2);
  if (*((char *)a2 + 47) < 0) {
    std::string::__init_copy_ctor_external(&v6, *((const std::string::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else {
    std::string v6 = *(std::string *)((unsigned char *)a2 + 1);
  }
  if (*((char *)a2 + 71) < 0) {
    std::string::__init_copy_ctor_external(&v7, *((const std::string::value_type **)a2 + 6), *((void *)a2 + 7));
  }
  else {
    std::string v7 = *(std::string *)((unsigned char *)a2 + 2);
  }
  uint64_t v8 = *((void *)a2 + 9);
  WORD2(v5) = 257;
  long long v9 = v4;
  uint64_t v10 = v5;
  std::string v11 = v6;
  memset(&v6, 0, sizeof(v6));
  *(_OWORD *)std::string __p = *(_OWORD *)&v7.__r_.__value_.__l.__data_;
  std::string::size_type v3 = v7.__r_.__value_.__r.__words[2];
  memset(&v7, 0, sizeof(v7));
  std::string::size_type v13 = v3;
  uint64_t v14 = v8;
  boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::symmetric_filter<boost::iostreams::zlib_params>();
}

void sub_223F51DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::symmetric_filter<boost::iostreams::zlib_params>()
{
}

void sub_223F51E90(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1090C401D1B96A4);
  _Unwind_Resume(a1);
}

void boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::impl::impl<boost::iostreams::zlib_params>(boost::iostreams::detail::zlib_base *a1)
{
}

void sub_223F51EF4(_Unwind_Exception *a1)
{
  boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>::~zlib_compressor_impl(v1);
  _Unwind_Resume(a1);
}

void boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>::zlib_compressor_impl(boost::iostreams::detail::zlib_base *a1)
{
}

void sub_223F51F4C(_Unwind_Exception *a1)
{
  boost::iostreams::detail::zlib_base::~zlib_base(v1);
  _Unwind_Resume(a1);
}

void boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>::~zlib_compressor_impl(z_stream **a1)
{
  boost::iostreams::detail::zlib_base::reset(a1, 1, 0);
  boost::iostreams::detail::zlib_base::~zlib_base((boost::iostreams::detail::zlib_base *)a1);
}

void boost::shared_ptr<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::impl>::shared_ptr<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  boost::detail::shared_count::shared_count<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(&v2);
}

void sub_223F51FFC(_Unwind_Exception *a1)
{
  boost::detail::shared_count::~shared_count(v1);
  _Unwind_Resume(a1);
}

void boost::detail::shared_count::shared_count<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(void *a1)
{
  *a1 = 0;
  operator new();
}

void sub_223F52080(void *a1)
{
  __cxa_begin_catch(a1);
  boost::checked_delete<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(v1);
  __cxa_rethrow();
}

void sub_223F52094(_Unwind_Exception *a1)
{
}

uint64_t boost::checked_delete<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (z_stream **)result;
    uint64_t v2 = *(void **)(result + 32);
    if (v2) {
      operator delete(v2);
    }
    boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>::~zlib_compressor_impl(v1);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

uint64_t boost::detail::sp_counted_impl_p<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::impl>::dispose(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 32);
    if (v2) {
      operator delete(v2);
    }
    boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>::~zlib_compressor_impl((z_stream **)v1);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

void std::allocator<boost::iostreams::basic_gzip_compressor<std::allocator<char>>>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 63) < 0) {
    operator delete(*(void **)(a2 + 40));
  }
  if (*(char *)(a2 + 39) < 0) {
    operator delete(*(void **)(a2 + 16));
  }
  boost::detail::shared_count::~shared_count((atomic_uint **)(a2 + 8));
}

const char *boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::write<std::ostream>(uint64_t *a1, void *a2, const char *a3, uint64_t a4)
{
  uint64_t v7 = *a1;
  int v8 = *(_DWORD *)(*a1 + 64);
  if ((v8 & 2) == 0)
  {
    *(_DWORD *)(v7 + 64) = v8 | 2;
    uint64_t v9 = *(void *)(v7 + 32);
    uint64_t v10 = v9 + *(void *)(v7 + 40);
    *(void *)(v7 + 48) = v9;
    *(void *)(v7 + 56) = v10;
  }
  uint64_t v14 = a3;
  std::string v11 = &a3[a4];
  while (v14 != v11)
  {
    uint64_t v12 = *(char **)(v7 + 56);
    if (*(char **)(v7 + 48) == v12)
    {
      if (!boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::flush<std::ostream>(a1, a2))return (const char *)(v14 - a3); {
      uint64_t v12 = *(char **)(v7 + 56);
      }
    }
    if (!boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>::filter((uint64_t *)*a1, &v14, v11, (char **)(v7 + 48), v12, 0))
    {
      boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::flush<std::ostream>(a1, a2);
      return (const char *)(v14 - a3);
    }
  }
  return (const char *)(v14 - a3);
}

BOOL boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>::filter(uint64_t *a1, const char **a2, const char *a3, char **a4, char *a5, int a6)
{
  boost::iostreams::detail::zlib_base::before(a1, a2, a3, a4, a5);
  uint64_t v10 = (int *)&boost::iostreams::zlib::finish;
  if (!a6) {
    uint64_t v10 = (int *)&boost::iostreams::zlib::no_flush;
  }
  uint64_t v11 = boost::iostreams::detail::zlib_base::xdeflate((z_streamp *)a1, *v10);
  boost::iostreams::detail::zlib_base::after((uLong)a1, (const Bytef **)a2, (const Bytef **)a4, 1);
  boost::iostreams::zlib_error::check(v11);
  return v11 != 1;
}

BOOL boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::flush<std::ostream>(uint64_t *a1, void *a2)
{
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 48) - v3;
  uint64_t v5 = *(void *)((char *)a2 + *(void *)(*a2 - 24) + 40);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v5 + 96))(v5, v3, v4);
  uint64_t v7 = v6;
  BOOL v9 = v4 <= v6;
  size_t v8 = v4 - v6;
  BOOL v9 = v9 || v6 < 1;
  if (!v9) {
    memmove(*(void **)(*a1 + 32), (const void *)(*(void *)(*a1 + 32) + v6), v8);
  }
  uint64_t v10 = *a1;
  uint64_t v11 = *(void *)(*a1 + 32);
  uint64_t v12 = v11 + *(void *)(*a1 + 40);
  *(void *)(v10 + 48) = v11 + v8;
  *(void *)(v10 + 56) = v12;
  return v7 != 0;
}

uint64_t boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::close<std::ostream>(uint64_t **a1, void *a2, int a3)
{
  uint64_t v3 = *a1;
  if (a3 == 16)
  {
    int v6 = *((_DWORD *)v3 + 16);
    if ((v6 & 2) == 0)
    {
      *((_DWORD *)v3 + 16) = v6 | 2;
      uint64_t v7 = v3[4];
      uint64_t v8 = v7 + v3[5];
      v3[6] = v7;
      v3[7] = v8;
    }
    char v16 = 0;
    uint64_t v15 = &v16;
    do
    {
      BOOL v9 = (char *)v3[7];
      BOOL v10 = (char *)v3[6] == v9
         || boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>::filter(*a1, &v15, v15, (char **)v3 + 6, v9, 1);
      boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_compressor_impl<std::allocator<char>>,std::allocator<char>>::flush<std::ostream>((uint64_t *)a1, a2);
    }
    while (v10);
    uint64_t v11 = *a1;
    *((_DWORD *)v11 + 16) = 0;
    uint64_t v12 = v11[4];
    v11[6] = v12;
    v11[7] = v12;
    return boost::iostreams::detail::zlib_base::reset((z_stream **)v11, 1, 1);
  }
  else
  {
    *((_DWORD *)v3 + 16) = 0;
    uint64_t v14 = v3[4];
    v3[6] = v14;
    v3[7] = v14;
    return boost::iostreams::detail::zlib_base::reset((z_stream **)v3, 1, 1);
  }
}

void sub_223F524E4(void *a1)
{
  __cxa_begin_catch(a1);
  uint64_t v2 = *v1;
  *(_DWORD *)(v2 + 64) = 0;
  uint64_t v3 = *(void *)(v2 + 32);
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = v3;
  boost::iostreams::detail::zlib_base::reset((z_stream **)v2, 1, 1);
  __cxa_rethrow();
}

void sub_223F52518(_Unwind_Exception *a1)
{
}

BOOL boost::iostreams::basic_gzip_compressor<std::allocator<char>>::write_long<std::ostream>(int a1, void *a2)
{
  boost::iostreams::detail::write_device_impl<boost::iostreams::ostream_tag>::put<std::ostream>(a2, a1);
  boost::iostreams::detail::write_device_impl<boost::iostreams::ostream_tag>::put<std::ostream>(a2, BYTE1(a1));
  boost::iostreams::detail::write_device_impl<boost::iostreams::ostream_tag>::put<std::ostream>(a2, (a1 << 8) >> 24);
  return boost::iostreams::detail::write_device_impl<boost::iostreams::ostream_tag>::put<std::ostream>(a2, HIBYTE(a1));
}

BOOL boost::iostreams::detail::write_device_impl<boost::iostreams::ostream_tag>::put<std::ostream>(void *a1, unsigned __int8 a2)
{
  uint64_t v2 = *(void **)((char *)a1 + *(void *)(*a1 - 24) + 40);
  uint64_t v3 = (unsigned __int8 *)v2[6];
  if (v3 == (unsigned __int8 *)v2[7]) {
    return (*(unsigned int (**)(void *, void))(*v2 + 104))(v2, a2) != -1;
  }
  v2[6] = v3 + 1;
  unsigned __int8 *v3 = a2;
  return 1;
}

uint64_t turi::fileio_impl::general_fstream_source::general_fstream_source(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  int v4 = *(char *)(a2 + 23);
  if (v4 < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    LOBYTE(v4) = *(unsigned char *)(a2 + 23);
  }
  else
  {
    std::string __p = *(std::string *)a2;
  }
  uint64_t v5 = 0;
  int v6 = *(const std::string::value_type **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  if ((v4 & 0x80u) == 0)
  {
    int v6 = (const std::string::value_type *)a2;
    uint64_t v7 = v4;
  }
  while (-v7 != v5 && v5 != -3)
  {
    int v8 = v6[v7 - 1 + v5];
    int v9 = aGz[v5-- + 2];
    if (v8 != v9)
    {
      BOOL v10 = 0;
      goto LABEL_11;
    }
  }
  BOOL v10 = v5 == -3;
LABEL_11:
  turi::fileio_impl::general_fstream_source::open_file(a1, (uint64_t)&__p, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F526FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  char v16 = (std::__shared_weak_count *)v14[5];
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  std::vector<std::ssub_match>::size_type v17 = (std::__shared_weak_count *)v14[3];
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  uint64_t v18 = (std::__shared_weak_count *)v14[1];
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  _Unwind_Resume(exception_object);
}

void turi::fileio_impl::general_fstream_source::open_file(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v9 = 12;
  std::allocate_shared[abi:ne180100]<turi::union_fstream,std::allocator<turi::union_fstream>,std::string &,unsigned int,void>(a2, &v9, &v10);
  long long v5 = v10;
  long long v10 = 0uLL;
  int v6 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v5;
  if (v6)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    if (*((void *)&v10 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v10 + 1));
    }
  }
  *(unsigned char *)(a1 + 48) = a3;
  if (a3) {
    _ZNSt3__115allocate_sharedB8ne180100IN5boost9iostreams23basic_gzip_decompressorINS_9allocatorIcEEEENS4_IS6_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_();
  }
  turi::union_fstream::get_istream(*(void *)a1, &v10);
  long long v7 = v10;
  long long v10 = 0uLL;
  int v8 = *(std::__shared_weak_count **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  if (v8)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    if (*((void *)&v10 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v10 + 1));
    }
  }
}

uint64_t turi::fileio_impl::general_fstream_source::general_fstream_source(uint64_t a1, uint64_t a2, int a3)
{
  *(unsigned char *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  turi::fileio_impl::general_fstream_source::open_file(a1, (uint64_t)&__p, a3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F528A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  char v16 = (std::__shared_weak_count *)v14[5];
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  std::vector<std::ssub_match>::size_type v17 = (std::__shared_weak_count *)v14[3];
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  uint64_t v18 = (std::__shared_weak_count *)v14[1];
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::fileio_impl::general_fstream_source::read(turi::fileio_impl::general_fstream_source *this, char *a2, uint64_t a3)
{
  if (*((unsigned char *)this + 48))
  {
    int v6 = (uint64_t *)*((void *)this + 2);
    uint64_t v7 = *((void *)this + 4);
    return boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::read<std::istream>(v6, v7, (uint64_t)a2, a3);
  }
  else
  {
    std::istream::read();
    return *(void *)(*((void *)this + 4) + 8);
  }
}

uint64_t boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::read<std::istream>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + 14;
  uint64_t v23 = a2;
  if (*((char *)a1 + 135) < 0)
  {
    std::string::__init_copy_ctor_external(&v24, (const std::string::value_type *)a1[14], a1[15]);
  }
  else
  {
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = *(_OWORD *)v7;
    v24.__r_.__value_.__r.__words[2] = a1[16];
  }
  std::string::size_type __n1 = 0;
  if (a4 >= 1)
  {
    uint64_t v8 = 0;
    while (1)
    {
      int v9 = *((_DWORD *)a1 + 34);
      if (v9 == 1)
      {
        *((_DWORD *)a1 + 34) = 2;
        boost::iostreams::detail::gzip_header::reset((boost::iostreams::detail::gzip_header *)(a1 + 2));
        boost::iostreams::detail::gzip_footer::reset((boost::iostreams::detail::gzip_footer *)(a1 + 12));
        int v9 = *((_DWORD *)a1 + 34);
      }
      else if (v9 == 5)
      {
        goto LABEL_37;
      }
      if (v9 == 3) {
        break;
      }
      if (v9 == 2)
      {
        int v10 = boost::iostreams::detail::read_device_impl<boost::iostreams::input>::get<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>>((uint64_t)&v23);
        if (v10 == -2) {
          goto LABEL_37;
        }
        if (v10 == -1)
        {
          boost::iostreams::gzip_error::gzip_error(&__p, 4);
          boost::throw_exception<boost::iostreams::gzip_error>((uint64_t)&__p);
        }
        boost::iostreams::detail::gzip_header::process((boost::iostreams::detail::gzip_header *)(a1 + 2), (char)v10);
        if (*((_DWORD *)a1 + 21) != 13) {
          goto LABEL_36;
        }
        int v11 = 3;
        goto LABEL_35;
      }
      int v13 = boost::iostreams::detail::read_device_impl<boost::iostreams::input>::get<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>>((uint64_t)&v23);
      if (v13 == -2) {
        goto LABEL_37;
      }
      if (v13 == -1)
      {
        boost::iostreams::gzip_error::gzip_error(&__p, 5);
        boost::throw_exception<boost::iostreams::gzip_error>((uint64_t)&__p);
      }
      boost::iostreams::detail::gzip_footer::process((_DWORD *)a1 + 24, v13);
      if (*((_DWORD *)a1 + 26) != 3) {
        goto LABEL_36;
      }
      if (*((_DWORD *)a1 + 24) != *(_DWORD *)(*a1 + 12))
      {
        boost::iostreams::gzip_error::gzip_error(&__p, 2);
        boost::throw_exception<boost::iostreams::gzip_error>((uint64_t)&__p);
      }
      int v14 = boost::iostreams::detail::read_device_impl<boost::iostreams::input>::get<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>>((uint64_t)&v23);
      if (v14 == -1)
      {
        int v11 = 5;
LABEL_35:
        *((_DWORD *)a1 + 34) = v11;
        goto LABEL_36;
      }
      boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>::putback((uint64_t)&v23, v14);
      uint64_t v15 = *a1;
      *(_DWORD *)(v15 + 64) = 0;
      uint64_t v16 = *(void *)(v15 + 32);
      *(void *)(v15 + 48) = v16;
      *(void *)(v15 + 56) = v16;
      *(unsigned char *)(v15 + 28) = 0;
      boost::iostreams::detail::zlib_base::reset((z_stream **)v15, 0, 1);
      *((_DWORD *)a1 + 34) = 1;
      boost::iostreams::detail::gzip_header::reset((boost::iostreams::detail::gzip_header *)(a1 + 2));
      boost::iostreams::detail::gzip_footer::reset((boost::iostreams::detail::gzip_footer *)(a1 + 12));
LABEL_36:
      if (v8 >= a4)
      {
LABEL_37:
        int64_t v19 = __n1;
        goto LABEL_39;
      }
    }
    uint64_t v12 = boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::read<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>>((uLong *)a1, (uint64_t)&v23, (char *)(a3 + v8), a4 - v8);
    if (v12 != -1)
    {
      v8 += v12;
      if (v12 < a4 - v8) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
    std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char *>,std::__wrap_iter<char *>>(&__p, *(char **)(*a1 + 48), *(char **)(*a1 + 56), *(void *)(*a1 + 56) - *(void *)(*a1 + 48));
    if (*((char *)&__p.__ec_.__val_ + 7) >= 0) {
      p_p = (std::ios_base::failure_vtbl *)&__p;
    }
    else {
      p_p = __p.__vftable;
    }
    if (*((char *)&__p.__ec_.__val_ + 7) >= 0) {
      std::string::size_type imp = *((unsigned __int8 *)&__p.__ec_.__val_ + 7);
    }
    else {
      std::string::size_type imp = (std::string::size_type)__p.__imp_.__imp_;
    }
    std::string::replace(&v24, 0, __n1, (const std::string::value_type *)p_p, imp);
    std::string::size_type __n1 = 0;
    if (*((char *)&__p.__ec_.__val_ + 7) < 0) {
      operator delete(__p.__vftable);
    }
    int v11 = 4;
    goto LABEL_35;
  }
  int64_t v19 = 0;
  uint64_t v8 = 0;
LABEL_39:
  int64_t size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int64_t size = v24.__r_.__value_.__l.__size_;
  }
  if (v19 >= size)
  {
    if (*((char *)a1 + 135) < 0)
    {
      *(unsigned char *)a1[14] = 0;
      a1[15] = 0;
      if (v8) {
        goto LABEL_52;
      }
    }
    else
    {
      *((unsigned char *)a1 + 112) = 0;
      *((unsigned char *)a1 + 135) = 0;
      if (v8) {
        goto LABEL_52;
      }
    }
    goto LABEL_50;
  }
  boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>::unconsumed_input((uint64_t)&v23, (std::string *)&__p);
  if (*((char *)a1 + 135) < 0) {
    operator delete((void *)*v7);
  }
  *(std::runtime_error *)uint64_t v7 = __p.std::runtime_error;
  v7[2] = *(void *)&__p.__ec_.__val_;
  if (!v8)
  {
LABEL_50:
    if (*((_DWORD *)a1 + 34) == 5) {
      uint64_t v8 = -1;
    }
  }
LABEL_52:
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_223F52CA8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::runtime_error __p, int a10, __int16 a11, char a12, char a13)
{
}

void sub_223F52D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

void sub_223F52D44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::fileio_impl::general_fstream_source::~general_fstream_source(std::__shared_weak_count **this)
{
  turi::fileio_impl::general_fstream_source::close((turi::fileio_impl::general_fstream_source *)this);
  uint64_t v2 = this[5];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  uint64_t v3 = this[3];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  int v4 = this[1];
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223F52DAC(void *a1)
{
}

void turi::fileio_impl::general_fstream_source::close(turi::fileio_impl::general_fstream_source *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2)
  {
    boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::close<std::istream>(v2, *((void *)this + 4), 8);
    uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 3);
    *((void *)this + 2) = 0;
    *((void *)this + 3) = 0;
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
  }
  int v4 = (std::__shared_weak_count *)*((void *)this + 5);
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  long long v5 = (std::__shared_weak_count *)*((void *)this + 1);
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  if (v5)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
}

uint64_t boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::close<std::istream>(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::close<std::istream>((uLong *)a1, a2, a3);
  if (a3 == 16)
  {
    int v6 = *(_DWORD *)(a1 + 136);
    if (v6 == 4)
    {
      if (*(_DWORD *)(a1 + 104) != 3)
      {
        boost::iostreams::gzip_error::gzip_error(&v7, 5);
        boost::throw_exception<boost::iostreams::gzip_error>((uint64_t)&v7);
      }
      if (*(_DWORD *)(a1 + 96) != *(_DWORD *)(*(void *)a1 + 12))
      {
        boost::iostreams::gzip_error::gzip_error(&v7, 2);
        boost::throw_exception<boost::iostreams::gzip_error>((uint64_t)&v7);
      }
    }
    else
    {
      if ((v6 - 1) < 2)
      {
        boost::iostreams::gzip_error::gzip_error(&v7, 4);
        boost::throw_exception<boost::iostreams::gzip_error>((uint64_t)&v7);
      }
      if (v6 == 3)
      {
        boost::iostreams::gzip_error::gzip_error(&v7, 5);
        boost::throw_exception<boost::iostreams::gzip_error>((uint64_t)&v7);
      }
    }
  }
  *(_DWORD *)(a1 + 136) = 1;
  return result;
}

void sub_223F52F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10)
{
}

void sub_223F52F6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10)
{
}

uint64_t turi::fileio_impl::general_fstream_source::seek(turi::fileio_impl::general_fstream_source *this, const char *a2, uint64_t a3)
{
  if (*((void *)this + 2)) {
    assert_msg(0, a2, a3);
  }
  std::ios_base::clear((std::ios_base *)(*((void *)this + 4) + *(void *)(**((void **)this + 4) - 24)), 0);
  std::istream::seekg();
  return std::istream::tellg();
}

uint64_t turi::fileio_impl::general_fstream_source::file_size(turi::neural_net::shared_float_array **this)
{
  uint64_t v1 = *this;
  if (v1) {
    return turi::neural_net::shared_float_array::shape(v1);
  }
  else {
    return -1;
  }
}

uint64_t turi::fileio_impl::general_fstream_source::get_bytes_read(turi::fileio_impl::general_fstream_source *this)
{
  if (!*((void *)this + 4)) {
    return -1;
  }
  std::istream::tellg();
  return v2;
}

void *turi::fileio_impl::general_fstream_source::get_underlying_stream@<X0>(void *this@<X0>, void *a2@<X8>)
{
  if (this[2])
  {
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    uint64_t v2 = this[5];
    *a2 = this[4];
    a2[1] = v2;
    if (v2) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
    }
  }
  return this;
}

void _ZNSt3__115allocate_sharedB8ne180100IN5boost9iostreams23basic_gzip_decompressorINS_9allocatorIcEEEENS4_IS6_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_()
{
  uint64_t v0 = operator new(0xA8uLL);
  _ZNSt3__120__shared_ptr_emplaceIN5boost9iostreams23basic_gzip_decompressorINS_9allocatorIcEEEENS4_IS6_EEEC2B8ne180100IJES7_Li0EEES7_DpOT_(v0);
}

void sub_223F530FC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void _ZNSt3__120__shared_ptr_emplaceIN5boost9iostreams23basic_gzip_decompressorINS_9allocatorIcEEEENS4_IS6_EEEC2B8ne180100IJES7_Li0EEES7_DpOT_(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75DAB8;
  boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::basic_gzip_decompressor((uint64_t)(a1 + 3), 15);
}

void sub_223F53160(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75DAB8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75DAB8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>>::__on_zero_shared(uint64_t a1)
{
  std::allocator<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>>::destroy[abi:ne180100]((uint64_t)&v1, a1 + 24);
}

void boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::basic_gzip_decompressor(uint64_t a1, int a2)
{
  boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::make_params(a2, (uint64_t)&v2);
  boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::symmetric_filter<boost::iostreams::zlib_params>();
}

void sub_223F532A4(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  std::pair<std::string,std::string>::~pair(v3);
  boost::detail::shared_count::~shared_count((atomic_uint **)(v1 + 8));
  _Unwind_Resume(a1);
}

void boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::make_params(int a1@<W0>, uint64_t a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(v6, "");
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  boost::iostreams::gzip_params::gzip_params(a2, -1, 8, 15, 8, 0, (long long *)v6, (long long *)__p, 0);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  *(_DWORD *)(a2 + 8) = a1;
  *(_WORD *)(a2 + 2CoreML::Specification::Identity::New(this, 0) = 257;
}

void sub_223F5339C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::symmetric_filter<boost::iostreams::zlib_params>()
{
}

void sub_223F53440(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1090C400B4FC0A9);
  _Unwind_Resume(a1);
}

void boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::impl::impl<boost::iostreams::zlib_params>(boost::iostreams::detail::zlib_base *a1)
{
}

void sub_223F534A4(_Unwind_Exception *a1)
{
  boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>::~zlib_decompressor_impl(v1);
  _Unwind_Resume(a1);
}

void boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>::zlib_decompressor_impl(boost::iostreams::detail::zlib_base *a1)
{
}

void sub_223F53500(_Unwind_Exception *a1)
{
  boost::iostreams::detail::zlib_base::~zlib_base(v1);
  _Unwind_Resume(a1);
}

void boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>::~zlib_decompressor_impl(z_stream **a1)
{
  boost::iostreams::detail::zlib_base::reset(a1, 0, 0);
  boost::iostreams::detail::zlib_base::~zlib_base((boost::iostreams::detail::zlib_base *)a1);
}

void boost::shared_ptr<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::impl>::shared_ptr<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  boost::detail::shared_count::shared_count<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(&v2);
}

void sub_223F535B0(_Unwind_Exception *a1)
{
  boost::detail::shared_count::~shared_count(v1);
  _Unwind_Resume(a1);
}

void boost::detail::shared_count::shared_count<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(void *a1)
{
  *a1 = 0;
  operator new();
}

void sub_223F53634(void *a1)
{
  __cxa_begin_catch(a1);
  boost::checked_delete<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(v1);
  __cxa_rethrow();
}

void sub_223F53648(_Unwind_Exception *a1)
{
}

uint64_t boost::checked_delete<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::impl>(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (z_stream **)result;
    uint64_t v2 = *(void **)(result + 32);
    if (v2) {
      operator delete(v2);
    }
    boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>::~zlib_decompressor_impl(v1);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

uint64_t boost::detail::sp_counted_impl_p<boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::impl>::dispose(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 32);
    if (v2) {
      operator delete(v2);
    }
    boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>::~zlib_decompressor_impl((z_stream **)v1);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

boost::iostreams::detail::gzip_header *boost::iostreams::detail::gzip_header::gzip_header(boost::iostreams::detail::gzip_header *this)
{
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  boost::iostreams::detail::gzip_header::reset(this);
  return this;
}

void sub_223F53750(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  turi::fileio::cache_block::cache_block(v1);
  _Unwind_Resume(a1);
}

void std::allocator<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 135) < 0) {
    operator delete(*(void **)(a2 + 112));
  }
  if (*(char *)(a2 + 63) < 0) {
    operator delete(*(void **)(a2 + 40));
  }
  if (*(char *)(a2 + 39) < 0) {
    operator delete(*(void **)(a2 + 16));
  }
  boost::detail::shared_count::~shared_count((atomic_uint **)(a2 + 8));
}

void boost::throw_exception<boost::iostreams::gzip_error>(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x58uLL);
  boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>::error_info_injector(v3, a1);
  boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::clone_impl((uint64_t)exception, (uint64_t)v3);
}

void sub_223F53848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  a13 = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)(v15 + 48));
  std::runtime_error::~runtime_error(&a9);
  if (v14) {
    __cxa_free_exception(v13);
  }
  _Unwind_Resume(a1);
}

uint64_t boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::read<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>>(uLong *a1, uint64_t a2, char *a3, uint64_t a4)
{
  uLong v7 = *a1;
  int v8 = *(_DWORD *)(*a1 + 64);
  if ((v8 & 1) == 0)
  {
    v8 |= 1u;
    *(_DWORD *)(v7 + 64) = v8;
    uint64_t v9 = *(void *)(v7 + 32);
    *(void *)(v7 + 48) = v9;
    *(void *)(v7 + 56) = v9;
  }
  if ((v8 & 4) != 0) {
    int v10 = 4;
  }
  else {
    int v10 = 5;
  }
  int64_t v19 = a3;
  int v11 = &a3[a4];
  while (1)
  {
    int v13 = *(const char **)(v7 + 48);
    uint64_t v12 = *(const char **)(v7 + 56);
    if (v13 != v12 || v10 == 4)
    {
      uint64_t v18 = *(const char **)(v7 + 48);
      BOOL v15 = boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>::filter(*a1, &v18, v12, &v19, v11);
      int v13 = v18;
      *(void *)(v7 + 48) = v18;
      if (!v15) {
        break;
      }
    }
    if (v10 == 6)
    {
      if (v13 == *(const char **)(v7 + 56) || v19 == v11)
      {
        int v11 = v19;
        return v11 - a3;
      }
    }
    else
    {
      if (v19 == v11) {
        return v11 - a3;
      }
      if (v10 == 5) {
        int v10 = boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::fill<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>>((uint64_t *)a1, a2);
      }
    }
  }
  if (v19 == a3) {
    return -1;
  }
  else {
    return v19 - a3;
  }
}

uint64_t boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>::putback(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2)
  {
    boost::iostreams::detail::bad_putback(&v6);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v6);
  }
  uint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = v2 - 1;
  *(void *)(a1 + 32) = v4;
  if (*(char *)(a1 + 31) < 0) {
    uint64_t v3 = (void *)*v3;
  }
  *((unsigned char *)v3 + v4) = a2;
  return 1;
}

void sub_223F53A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

std::string *boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>::unconsumed_input@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if (*(char *)(a1 + 31) < 0) {
    uint64_t v4 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v4 = *(unsigned __int8 *)(a1 + 31);
  }
  return std::string::basic_string(a2, (const std::string *)(a1 + 8), *(void *)(a1 + 32), v4 - *(void *)(a1 + 32), (std::allocator<char> *)&v6);
}

uint64_t boost::iostreams::detail::read_device_impl<boost::iostreams::input>::get<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>>(uint64_t a1)
{
  unsigned __int8 __dst = 0;
  uint64_t v1 = boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>::read(a1, (char *)&__dst, 1);
  if (v1 == -1) {
    return 0xFFFFFFFFLL;
  }
  if (v1 == 1) {
    return __dst;
  }
  return 4294967294;
}

uint64_t boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>::read(uint64_t a1, char *__dst, int64_t a3)
{
  int64_t v3 = a3;
  char v6 = (void *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    uint64_t v9 = (uint64_t *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(a1 + 16);
    BOOL v10 = v13 <= v8;
    int64_t v14 = v13 - v8;
    if (!v10)
    {
      if (v14 >= a3) {
        size_t v12 = a3;
      }
      else {
        size_t v12 = v14;
      }
      char v6 = (void *)*v6;
      if (v12) {
        goto LABEL_7;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v7 = *(unsigned __int8 *)(a1 + 31);
    uint64_t v9 = (uint64_t *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 32);
    BOOL v10 = v7 <= v8;
    int64_t v11 = v7 - v8;
    if (!v10)
    {
      if (v11 >= a3) {
        size_t v12 = a3;
      }
      else {
        size_t v12 = v11;
      }
      if (v12)
      {
LABEL_7:
        memmove(__dst, (char *)v6 + v8, v12);
        uint64_t v8 = *v9;
      }
LABEL_8:
      *uint64_t v9 = v8 + v12;
      if (v12 == v3) {
        return v3;
      }
      goto LABEL_17;
    }
  }
  size_t v12 = 0;
LABEL_17:
  uint64_t v15 = *(void *)(*(void *)a1 + *(void *)(**(void **)a1 - 24) + 40);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, char *, size_t))(*(void *)v15 + 64))(v15, &__dst[v12], v3 - v12);
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = -1;
  }
  if (v12) {
    uint64_t v18 = v12;
  }
  else {
    uint64_t v18 = -1;
  }
  if (v17 == -1) {
    return v18;
  }
  else {
    return v17 + v12;
  }
}

void boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::~clone_impl(uint64_t a1)
{
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)(a1 + 48));
  std::runtime_error::~runtime_error((std::runtime_error *)a1);
}

{
  uint64_t vars8;

  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)(a1 + 48));
  std::runtime_error::~runtime_error((std::runtime_error *)a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::clone_impl(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8CoreML::Specification::Identity::New(this, 0) = &unk_26D7542E8;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C2E8] + 16);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  v4->__vftable = (std::runtime_error_vtbl *)&unk_26D75DCF8;
  v4[2].__vftable = *(std::runtime_error_vtbl **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = &unk_26D754388;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)a1 = &unk_26D75DC10;
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = &unk_26D75DC48;
  *(void *)(a1 + 8CoreML::Specification::Identity::New(this, 0) = &unk_26D75DC80;
  uint64_t v11 = 0;
  uint64_t v7 = *(void *)(a2 + 48);
  if (v7)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v7 + 40))(&v10);
    boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::adopt(&v11, v10);
    boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(&v10);
    uint64_t v8 = v11;
  }
  else
  {
    uint64_t v8 = 0;
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::adopt((uint64_t *)(a1 + 48), v8);
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(&v11);
  return a1;
}

{
  std::runtime_error *v4;
  uint64_t v5;
  long long v6;

  *(void *)(a1 + 8CoreML::Specification::Identity::New(this, 0) = &unk_26D7542E8;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C2E8] + 16);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  v4->__vftable = (std::runtime_error_vtbl *)&unk_26D75DCF8;
  v4[2].__vftable = *(std::runtime_error_vtbl **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = &unk_26D754388;
  *(void *)(a1 + 48) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)a1 = &unk_26D75DC10;
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = &unk_26D75DC48;
  *(void *)(a1 + 8CoreML::Specification::Identity::New(this, 0) = &unk_26D75DC80;
  return a1;
}

void sub_223F53E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(&a9);
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(&a10);
  boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::~clone_impl(v10);
  _Unwind_Resume(a1);
}

void boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::clone()
{
}

void sub_223F53F18(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F1C405780E14DLL);
  _Unwind_Resume(a1);
}

void boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::rethrow(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x58uLL);
  boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::clone_impl((uint64_t)exception, a1);
}

void sub_223F53F84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void non-virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::~clone_impl(void *a1)
{
  uint64_t v1 = (std::runtime_error *)(a1 - 5);
  *a1 = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(a1 + 1);
  std::runtime_error::~runtime_error(v1);
}

void non-virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::~clone_impl(uint64_t a1)
{
}

void virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::clone()
{
}

void virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::rethrow(void *a1)
{
}

void virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::~clone_impl(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 40);
  *((void *)v1 + 5) = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)v1 + 6);
  std::runtime_error::~runtime_error((std::runtime_error *)v1);
}

{
  boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>>::~clone_impl((uint64_t)a1 + *(void *)(*a1 - 40));
}

void boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>::~error_info_injector(uint64_t a1)
{
  *(void *)(a1 + 4CoreML::Specification::Identity::New(this, 0) = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)(a1 + 48));
  std::runtime_error::~runtime_error((std::runtime_error *)a1);
  JUMPOUT(0x22A614FA0);
}

void non-virtual thunk to'boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>::~error_info_injector(uint64_t a1)
{
}

void boost::iostreams::gzip_error::~gzip_error(std::runtime_error *this)
{
  std::runtime_error::~runtime_error(this);
  JUMPOUT(0x22A614FA0);
}

void sub_223F542B4(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

__n128 boost::exception_detail::error_info_injector<boost::iostreams::gzip_error>::error_info_injector(std::runtime_error *a1, uint64_t a2)
{
  int64_t v3 = (__n128 *)std::runtime_error::runtime_error(a1, (const std::runtime_error *)a2);
  v3->n128_u64[0] = MEMORY[0x263F8C2E8] + 16;
  __n128 result = *(__n128 *)(a2 + 16);
  v3[1] = result;
  v3->n128_u64[0] = (unint64_t)&unk_26D75DCF8;
  unint64_t v5 = *(void *)(a2 + 32);
  v3[3].n128_u64[1] = 0;
  v3[4].n128_u64[0] = 0;
  v3[3].n128_u64[0] = 0;
  v3[4].n128_u32[2] = -1;
  v3->n128_u64[0] = (unint64_t)&unk_26D75DCB0;
  v3[2].n128_u64[0] = v5;
  v3[2].n128_u64[1] = (unint64_t)&unk_26D75DCD8;
  return result;
}

std::ios_base::failure *boost::iostreams::gzip_error::gzip_error(std::ios_base::failure *this, int a2)
{
  *(void *)&v5.__val_ = 1;
  v5.__cat_ = std::iostream_category();
  __n128 result = std::ios_base::failure::failure(this, "gzip error", &v5);
  this->__vftable = (std::ios_base::failure_vtbl *)&unk_26D75DCF8;
  LODWORD(this[1].__vftable) = a2;
  HIDWORD(this[1].__vftable) = 0;
  return result;
}

BOOL boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>::filter(uLong a1, const char **a2, const char *a3, char **a4, char *a5)
{
  boost::iostreams::detail::zlib_base::before((uint64_t *)a1, a2, a3, a4, a5);
  uint64_t v8 = boost::iostreams::detail::zlib_base::xinflate((z_streamp *)a1, 2);
  boost::iostreams::detail::zlib_base::after(a1, (const Bytef **)a2, (const Bytef **)a4, 0);
  boost::iostreams::zlib_error::check(v8);
  BOOL result = v8 != 1;
  *(unsigned char *)(a1 + 28) = v8 == 1;
  return result;
}

uint64_t boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::fill<boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = boost::iostreams::basic_gzip_decompressor<std::allocator<char>>::peekable_source<std::istream>::read(a2, *(char **)(*a1 + 32), *(void *)(*a1 + 40));
  uint64_t v4 = *a1;
  if (v3 == -1)
  {
    *(_DWORD *)(v4 + 64) |= 4u;
    return 4;
  }
  else
  {
    uint64_t v5 = *(void *)(v4 + 32);
    *(void *)(v4 + 48) = v5;
    *(void *)(v4 + 56) = v5 + v3;
    if (v3) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

std::ios_base::failure *boost::iostreams::gzip_error::gzip_error(uint64_t a1, uint64_t a2)
{
  *(void *)&v5.__val_ = 1;
  v5.__cat_ = std::iostream_category();
  BOOL result = std::ios_base::failure::failure((std::ios_base::failure *)a1, "gzip error", &v5);
  *(void *)a1 = &unk_26D75DCF8;
  *(_DWORD *)(a1 + 32) = 1;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 32);
  return result;
}

uint64_t boost::iostreams::symmetric_filter<boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>,std::allocator<char>>::close<std::istream>(uLong *a1, uint64_t a2, int a3)
{
  uLong v3 = *a1;
  if (a3 == 16)
  {
    int v5 = *(_DWORD *)(v3 + 64);
    if ((v5 & 2) == 0)
    {
      *(_DWORD *)(v3 + 64) = v5 | 2;
      uint64_t v6 = *(void *)(v3 + 32);
      uint64_t v7 = v6 + *(void *)(v3 + 40);
      *(void *)(v3 + 48) = v6;
      *(void *)(v3 + 56) = v7;
    }
    char v14 = 0;
    uint64_t v13 = &v14;
    do
    {
      do
        uint64_t v8 = *(char **)(v3 + 56);
      while (*(char **)(v3 + 48) == v8);
    }
    while (boost::iostreams::detail::zlib_decompressor_impl<std::allocator<char>>::filter(*a1, &v13, v13, (char **)(v3 + 48), v8));
    uLong v9 = *a1;
    *(_DWORD *)(v9 + 64) = 0;
    uint64_t v10 = *(void *)(v9 + 32);
    *(void *)(v9 + 48) = v10;
    *(void *)(v9 + 56) = v10;
    *(unsigned char *)(v9 + 28) = 0;
    return boost::iostreams::detail::zlib_base::reset((z_stream **)v9, 0, 1);
  }
  else
  {
    *(_DWORD *)(v3 + 64) = 0;
    uint64_t v12 = *(void *)(v3 + 32);
    *(void *)(v3 + 48) = v12;
    *(void *)(v3 + 56) = v12;
    *(unsigned char *)(v3 + 28) = 0;
    return boost::iostreams::detail::zlib_base::reset((z_stream **)v3, 0, 1);
  }
}

void sub_223F54650(void *a1)
{
  __cxa_begin_catch(a1);
  uint64_t v2 = *v1;
  *(_DWORD *)(v2 + 64) = 0;
  uint64_t v3 = *(void *)(v2 + 32);
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = v3;
  *(unsigned char *)(v2 + 28) = 0;
  boost::iostreams::detail::zlib_base::reset((z_stream **)v2, 0, 1);
  __cxa_rethrow();
}

void sub_223F54688(_Unwind_Exception *a1)
{
}

uint64_t *CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _tc_google::protobuf::internal::VerifyVersion((_tc_google::protobuf::internal *)0x2DD278, (_tc_google::protobuf::internal *)0x2DD278, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/external/coremltools_wrap/coremltools/mlmodel/build/format/NeuralNetwork.pb.cc", a4);
  _tc_google::protobuf::internal::InitProtobufDefaults(v4);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v5);
  CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(v6);
  CoreML::Specification::_NeuralNetwork_default_instance_ = (uint64_t)&unk_26D75DD20;
  *(_OWORD *)algn_268089F48 = 0u;
  *(_OWORD *)&algn_268089F48[16] = 0u;
  *(_OWORD *)&algn_268089F48[32] = 0u;
  *(_OWORD *)&algn_268089F48[48] = 0u;
  *(_OWORD *)((char *)&qword_268089F80 + 4) = 0u;
  byte_268089F98 = 1;
  CoreML::Specification::_NeuralNetworkImageScaler_default_instance_ = (uint64_t)&unk_26D75DDB8;
  unk_268089FA8 = 0u;
  unk_268089FB8 = 0u;
  byte_268089FC8 = 1;
  CoreML::Specification::_NeuralNetworkMeanImage_default_instance_ = (uint64_t)&unk_26D75DE50;
  *(void *)algn_268089FD8 = 0;
  qword_268089FE0 = 0;
  unk_268089FE8 = 0;
  dword_268089FF4 = 0;
  byte_268089FF8 = 1;
  CoreML::Specification::_NeuralNetworkPreprocessing_default_instance_ = (uint64_t)&unk_26D75DEE8;
  *(void *)algn_26808A008 = 0;
  qword_26808A010 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_26808A020 = 0;
  byte_26808A028 = 1;
  CoreML::Specification::_ActivationReLU_default_instance_ = (uint64_t)&unk_26D75DF80;
  qword_26808A048 = 0;
  dword_26808A050 = 0;
  byte_26808A058 = 1;
  CoreML::Specification::_ActivationLeakyReLU_default_instance_ = (uint64_t)&unk_26D75E018;
  qword_26808A068 = 0;
  qword_26808A070 = 0;
  byte_26808A078 = 1;
  CoreML::Specification::_ActivationTanh_default_instance_ = (uint64_t)&unk_26D75E0B0;
  qword_26808A088 = 0;
  dword_26808A090 = 0;
  byte_26808A098 = 1;
  dword_26808A0B8 = 0;
  CoreML::Specification::_ActivationScaledTanh_default_instance_ = (uint64_t)&unk_26D75E148;
  *(void *)algn_26808A0A8 = 0;
  qword_26808A0B0 = 0;
  byte_26808A0C0 = 1;
  CoreML::Specification::_ActivationSigmoid_default_instance_ = (uint64_t)&unk_26D75E1E0;
  qword_26808A0D0 = 0;
  dword_26808A0D8 = 0;
  byte_26808A0E0 = 1;
  qword_26808A0F0 = 0;
  unk_26808A0F8 = 0;
  CoreML::Specification::_ActivationLinear_default_instance_ = (uint64_t)&unk_26D75E278;
  dword_26808A100 = 0;
  byte_26808A108 = 1;
  qword_26808A118 = 0;
  unk_26808A120 = 0;
  CoreML::Specification::_ActivationSigmoidHard_default_instance_ = (uint64_t)&unk_26D75E310;
  dword_26808A128 = 0;
  byte_26808A130 = 1;
  qword_26808A140 = 0;
  qword_26808A148 = 0;
  CoreML::Specification::_ActivationPReLU_default_instance_ = (uint64_t)&unk_26D75E3A8;
  dword_26808A150 = 0;
  byte_26808A158 = 1;
  CoreML::Specification::_ActivationELU_default_instance_ = (uint64_t)&unk_26D75E440;
  qword_26808A168 = 0;
  qword_26808A170 = 0;
  byte_26808A178 = 1;
  qword_26808A188 = 0;
  *(void *)&dword_26808A190 = 0;
  CoreML::Specification::_ActivationThresholdedReLU_default_instance_ = (uint64_t)&unk_26D75E4D8;
  byte_26808A198 = 1;
  CoreML::Specification::_ActivationSoftsign_default_instance_ = (uint64_t)&unk_26D75E570;
  qword_26808A1A8 = 0;
  dword_26808A1B0 = 0;
  byte_26808A1B8 = 1;
  CoreML::Specification::_ActivationSoftplus_default_instance_ = (uint64_t)&unk_26D75E608;
  qword_26808A1C8 = 0;
  dword_26808A1D0 = 0;
  byte_26808A1D8 = 1;
  CoreML::Specification::_ActivationParametricSoftplus_default_instance_ = (uint64_t)&unk_26D75E6A0;
  *(void *)algn_26808A1E8 = 0;
  dword_26808A200 = 0;
  qword_26808A1F0 = 0;
  unk_26808A1F8 = 0;
  byte_26808A208 = 1;
  CoreML::Specification::_ActivationParams_default_instance_ = (uint64_t)&unk_26D75E738;
  unk_26808A218 = 0;
  qword_26808A228 = 0;
  byte_26808A230 = 1;
  CoreML::Specification::_Tensor_default_instance_ = (uint64_t)&unk_26D75E7D0;
  *(void *)algn_26808A2A8 = 0;
  qword_26808A2B0 = 0;
  unk_26808A2B8 = 0;
  unk_26808A2C4 = 0;
  byte_26808A2D0 = 1;
  CoreML::Specification::_NeuralNetworkLayer_default_instance_ = (uint64_t)&unk_26D75E868;
  unk_26808A330 = 0u;
  unk_26808A320 = 0u;
  unk_26808A310 = 0u;
  unk_26808A300 = 0u;
  unk_26808A2F0 = 0u;
  unk_26808A2E0 = 0u;
  qword_26808A340 = 0;
  unk_26808A348 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  byte_26808A350 = 0;
  qword_26808A360 = 0;
  byte_26808A368 = 1;
  CoreML::Specification::_BranchLayerParams_default_instance_ = (uint64_t)&unk_26D75E900;
  *(void *)algn_26808A868 = 0;
  dword_26808A880 = 0;
  qword_26808A870 = 0;
  unk_26808A878 = 0;
  byte_26808A888 = 1;
  CoreML::Specification::_LoopLayerParams_default_instance_ = (uint64_t)&unk_26D75E998;
  *(void *)algn_26808A898 = 0;
  qword_26808A8A0 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_26808A8A8 = 0;
  dword_26808A8C0 = 0;
  qword_26808A8B0 = 0;
  unk_26808A8B8 = 0;
  byte_26808A8C8 = 1;
  CoreML::Specification::_LoopBreakLayerParams_default_instance_ = (uint64_t)&unk_26D75EA30;
  qword_26808A8D8 = 0;
  dword_26808A8E0 = 0;
  byte_26808A8E8 = 1;
  CoreML::Specification::_LoopContinueLayerParams_default_instance_ = (uint64_t)&unk_26D75EAC8;
  qword_26808A8F8 = 0;
  dword_26808A900 = 0;
  byte_26808A908 = 1;
  CoreML::Specification::_CopyLayerParams_default_instance_ = (uint64_t)&unk_26D75EB60;
  qword_26808A918 = 0;
  dword_26808A920 = 0;
  byte_26808A928 = 1;
  qword_26808A938 = 0;
  unk_26808A940 = 0;
  CoreML::Specification::_GreaterThanLayerParams_default_instance_ = (uint64_t)&unk_26D75EBF8;
  byte_26808A948 = 1;
  qword_26808A958 = 0;
  unk_26808A960 = 0;
  CoreML::Specification::_GreaterEqualLayerParams_default_instance_ = (uint64_t)&unk_26D75EC90;
  byte_26808A968 = 1;
  qword_26808A978 = 0;
  unk_26808A980 = 0;
  CoreML::Specification::_LessThanLayerParams_default_instance_ = (uint64_t)&unk_26D75ED28;
  byte_26808A988 = 1;
  qword_26808A998 = 0;
  unk_26808A9A0 = 0;
  CoreML::Specification::_LessEqualLayerParams_default_instance_ = (uint64_t)&unk_26D75EDC0;
  byte_26808A9A8 = 1;
  qword_26808A9B8 = 0;
  unk_26808A9C0 = 0;
  CoreML::Specification::_EqualLayerParams_default_instance_ = (uint64_t)&unk_26D75EE58;
  byte_26808A9C8 = 1;
  qword_26808A9D8 = 0;
  unk_26808A9E0 = 0;
  CoreML::Specification::_NotEqualLayerParams_default_instance_ = (uint64_t)&unk_26D75EEF0;
  byte_26808A9E8 = 1;
  CoreML::Specification::_LogicalAndLayerParams_default_instance_ = (uint64_t)&unk_26D75EF88;
  qword_26808A9F8 = 0;
  dword_26808AA00 = 0;
  byte_26808AA08 = 1;
  CoreML::Specification::_LogicalOrLayerParams_default_instance_ = (uint64_t)&unk_26D75F020;
  qword_26808AA18 = 0;
  dword_26808AA20 = 0;
  byte_26808AA28 = 1;
  CoreML::Specification::_LogicalXorLayerParams_default_instance_ = (uint64_t)&unk_26D75F0B8;
  qword_26808AA38 = 0;
  dword_26808AA40 = 0;
  byte_26808AA48 = 1;
  CoreML::Specification::_LogicalNotLayerParams_default_instance_ = (uint64_t)&unk_26D75F150;
  qword_26808AA58 = 0;
  dword_26808AA60 = 0;
  byte_26808AA68 = 1;
  CoreML::Specification::_BorderAmounts_EdgeSizes_default_instance_ = (uint64_t)&unk_26D75F1E8;
  *(void *)algn_26808AA78 = 0;
  dword_26808AA90 = 0;
  qword_26808AA80 = 0;
  unk_26808AA88 = 0;
  byte_26808AA98 = 1;
  CoreML::Specification::_BorderAmounts_default_instance_ = (uint64_t)&unk_26D75F280;
  dword_26808AAC8 = 0;
  unk_26808AAB8 = 0u;
  unk_26808AAA8 = 0u;
  byte_26808AAD0 = 1;
  qword_26808AAE0 = 0;
  qword_26808AAE8 = 0;
  CoreML::Specification::_ValidPadding_default_instance_ = (uint64_t)&unk_26D75F318;
  dword_26808AAF0 = 0;
  byte_26808AAF8 = 1;
  qword_26808AB08 = 0;
  *(void *)&dword_26808AB10 = 0;
  CoreML::Specification::_SamePadding_default_instance_ = (uint64_t)&unk_26D75F3B0;
  byte_26808AB18 = 1;
  qword_26808AB28 = 0;
  unk_26808AB30 = 0;
  CoreML::Specification::_SamplingMode_default_instance_ = (uint64_t)&unk_26D75F448;
  byte_26808AB38 = 1;
  qword_26808AB48 = 0;
  unk_26808AB50 = 0;
  CoreML::Specification::_BoxCoordinatesMode_default_instance_ = (uint64_t)&unk_26D75F4E0;
  byte_26808AB58 = 1;
  CoreML::Specification::_WeightParams_default_instance_ = (uint64_t)&unk_26D75F578;
  *(void *)algn_26808AB68 = 0;
  qword_26808AB70 = 0;
  unk_26808AB78 = 0;
  qword_26808AB88 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  unk_26808AB90 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  byte_26808ABA8 = 0;
  qword_26808AB98 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_26808ABA0 = 0;
  dword_26808ABAC = 0;
  byte_26808ABB0 = 1;
  qword_26808ABD8 = 0;
  qword_26808ABC0 = 0;
  unk_26808ABC8 = 0;
  CoreML::Specification::_QuantizationParams_default_instance_ = (uint64_t)&unk_26D75F610;
  byte_26808ABE0 = 1;
  qword_26808AC20 = 0;
  unk_26808AC28 = 0;
  CoreML::Specification::_LinearQuantizationParams_default_instance_ = (uint64_t)&unk_26D75F6A8;
  unk_26808AC00 = 0;
  qword_26808AC08 = 0;
  unk_26808AC10 = 0;
  dword_26808AC34 = 0;
  byte_26808AC38 = 1;
  CoreML::Specification::_LookUpTableQuantizationParams_default_instance_ = (uint64_t)&unk_26D75F740;
  *(void *)algn_26808AC48 = 0;
  qword_26808AC50 = 0;
  unk_26808AC58 = 0;
  dword_26808AC64 = 0;
  byte_26808AC68 = 1;
  qword_26808AC98 = 0;
  unk_26808ACA0 = 0;
  qword_26808ACB0 = 0;
  unk_26808ACB8 = 0;
  qword_26808ACC8 = 0;
  unk_26808ACD0 = 0;
  CoreML::Specification::_ConvolutionLayerParams_default_instance_ = (uint64_t)&unk_26D75F7D8;
  *(void *)algn_26808AC78 = 0;
  qword_26808AC80 = 0;
  unk_26808AC88 = 0;
  unk_26808ACFA = 0u;
  xmmword_26808ACE0 = 0u;
  unk_26808ACF0 = 0u;
  qword_26808AD18 = 0;
  byte_26808AD20 = 1;
  CoreML::Specification::_Convolution3DLayerParams_default_instance_ = (uint64_t)&unk_26D75F870;
  unk_26808AD40 = 0;
  qword_26808AD48 = 0;
  unk_26808AD50 = 0;
  dword_26808ADC0 = 0;
  unk_26808ADB0 = 0u;
  unk_26808ADA0 = 0u;
  unk_26808AD90 = 0u;
  unk_26808AD80 = 0u;
  unk_26808AD70 = 0u;
  *(_OWORD *)&qword_26808AD60 = 0u;
  byte_26808ADC8 = 1;
  CoreML::Specification::_InnerProductLayerParams_default_instance_ = (uint64_t)&unk_26D75F908;
  dword_26808AE04 = 0;
  *(_OWORD *)((char *)&xmmword_26808ADE8 + 1CoreML::Specification::Identity::New(this, 0) = 0u;
  xmmword_26808ADE8 = 0u;
  *(_OWORD *)algn_26808ADD8 = 0u;
  byte_26808AE08 = 1;
  CoreML::Specification::_EmbeddingLayerParams_default_instance_ = (uint64_t)&unk_26D75F9A0;
  dword_26808AE44 = 0;
  *(_OWORD *)((char *)&xmmword_26808AE28 + 9) = 0u;
  xmmword_26808AE28 = 0u;
  *(_OWORD *)algn_26808AE18 = 0u;
  byte_26808AE48 = 1;
  CoreML::Specification::_EmbeddingNDLayerParams_default_instance_ = (uint64_t)&unk_26D75FA38;
  dword_26808AE84 = 0;
  *(_OWORD *)((char *)&xmmword_26808AE68 + 9) = 0u;
  xmmword_26808AE68 = 0u;
  *(_OWORD *)algn_26808AE58 = 0u;
  byte_26808AE88 = 1;
  CoreML::Specification::_BatchnormLayerParams_default_instance_ = (uint64_t)&unk_26D75FAD0;
  *(_OWORD *)((char *)xmmword_26808AEB8 + 12) = 0u;
  xmmword_26808AEB8[0] = 0u;
  unk_26808AEA8 = 0u;
  *(_OWORD *)algn_26808AE98 = 0u;
  byte_26808AED8 = 1;
  CoreML::Specification::_PoolingLayerParams_ValidCompletePadding_default_instance_ = (uint64_t)&unk_26D75FB68;
  *(void *)algn_26808AEE8 = 0;
  qword_26808AEF0 = 0;
  unk_26808AEF8 = 0;
  dword_26808AF04 = 0;
  byte_26808AF08 = 1;
  qword_26808AF38 = 0;
  unk_26808AF40 = 0;
  CoreML::Specification::_PoolingLayerParams_default_instance_ = (uint64_t)&unk_26D75FC00;
  *(void *)algn_26808AF18 = 0;
  qword_26808AF20 = 0;
  unk_26808AF28 = 0;
  word_26808AF50 = 0;
  dword_26808AF4C = 0;
  qword_26808AF60 = 0;
  byte_26808AF68 = 1;
  CoreML::Specification::_Pooling3DLayerParams_default_instance_ = (uint64_t)&unk_26D75FC98;
  qword_26808AFD0 = 0;
  unk_26808AFC0 = 0u;
  unk_26808AFB0 = 0u;
  unk_26808AFA0 = 0u;
  unk_26808AF90 = 0u;
  byte_26808AFD8 = 1;
  qword_26808AFE8 = 0;
  unk_26808AFF0 = 0;
  CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_ = (uint64_t)&unk_26D75FD30;
  byte_26808AFF8 = 1;
  qword_26808B008 = 0;
  *(void *)&dword_26808B010 = 0;
  CoreML::Specification::_PaddingLayerParams_PaddingConstant_default_instance_ = (uint64_t)&unk_26D75FDC8;
  byte_26808B018 = 1;
  CoreML::Specification::_PaddingLayerParams_PaddingReflection_default_instance_ = (uint64_t)&unk_26D75FE60;
  qword_26808B028 = 0;
  dword_26808B030 = 0;
  byte_26808B038 = 1;
  CoreML::Specification::_PaddingLayerParams_PaddingReplication_default_instance_ = (uint64_t)&unk_26D75FEF8;
  qword_26808B048 = 0;
  dword_26808B050 = 0;
  byte_26808B058 = 1;
  qword_26808B080 = 0;
  qword_26808B068 = 0;
  qword_26808B070 = 0;
  CoreML::Specification::_PaddingLayerParams_default_instance_ = (uint64_t)&unk_26D75FF90;
  byte_26808B088 = 1;
  CoreML::Specification::_ConcatLayerParams_default_instance_ = (uint64_t)&unk_26D760028;
  unk_26808B0B0 = 0;
  byte_26808B0B8 = 0;
  dword_26808B0BC = 0;
  byte_26808B0C0 = 1;
  CoreML::Specification::_LRNLayerParams_default_instance_ = (uint64_t)&unk_26D7600C0;
  unk_26808B0E0 = 0u;
  unk_26808B0D0 = 0u;
  byte_26808B0F0 = 1;
  CoreML::Specification::_SoftmaxLayerParams_default_instance_ = (uint64_t)&unk_26D760158;
  qword_26808B100 = 0;
  dword_26808B108 = 0;
  byte_26808B110 = 1;
  qword_26808B120 = 0;
  unk_26808B128 = 0;
  CoreML::Specification::_SplitLayerParams_default_instance_ = (uint64_t)&unk_26D7601F0;
  dword_26808B130 = 0;
  byte_26808B138 = 1;
  qword_26808B148 = 0;
  unk_26808B150 = 0;
  CoreML::Specification::_AddLayerParams_default_instance_ = (uint64_t)&unk_26D760288;
  byte_26808B158 = 1;
  qword_26808B168 = 0;
  unk_26808B170 = 0;
  CoreML::Specification::_MultiplyLayerParams_default_instance_ = (uint64_t)&unk_26D760320;
  byte_26808B178 = 1;
  CoreML::Specification::_UnaryFunctionLayerParams_default_instance_ = (uint64_t)&unk_26D7603B8;
  unk_26808B198 = 0u;
  unk_26808B188 = 0u;
  byte_26808B1A8 = 1;
  qword_26808B1D8 = 0;
  unk_26808B1E0 = 0;
  CoreML::Specification::_UpsampleLayerParams_default_instance_ = (uint64_t)&unk_26D760450;
  *(void *)algn_26808B1B8 = 0;
  qword_26808B1C0 = 0;
  unk_26808B1C8 = 0;
  unk_26808B1EC = 0;
  dword_26808B1F4 = 0;
  byte_26808B1F8 = 1;
  CoreML::Specification::_ResizeBilinearLayerParams_default_instance_ = (uint64_t)&unk_26D7604E8;
  *(void *)algn_26808B208 = 0;
  qword_26808B210 = 0;
  unk_26808B218 = 0;
  qword_26808B228 = 0;
  dword_26808B230 = 0;
  byte_26808B238 = 1;
  CoreML::Specification::_CropResizeLayerParams_default_instance_ = (uint64_t)&unk_26D760580;
  *(void *)algn_26808B248 = 0;
  qword_26808B250 = 0;
  unk_26808B258 = 0;
  qword_26808B268 = 0;
  unk_26808B270 = 0;
  dword_26808B280 = 0;
  qword_26808B278 = 0;
  byte_26808B288 = 1;
  CoreML::Specification::_BiasLayerParams_default_instance_ = (uint64_t)&unk_26D760618;
  *(void *)algn_26808B298 = 0;
  qword_26808B2A0 = 0;
  unk_26808B2A8 = 0;
  qword_26808B2B8 = 0;
  dword_26808B2C0 = 0;
  byte_26808B2C8 = 1;
  qword_26808B2F8 = 0;
  unk_26808B300 = 0;
  CoreML::Specification::_ScaleLayerParams_default_instance_ = (uint64_t)&unk_26D7606B0;
  *(void *)algn_26808B2D8 = 0;
  qword_26808B2E0 = 0;
  unk_26808B2E8 = 0;
  qword_26808B310 = 0;
  unk_26808B318 = 0;
  byte_26808B320 = 0;
  dword_26808B324 = 0;
  byte_26808B328 = 1;
  qword_26808B340 = 0;
  unk_26808B348 = 0;
  CoreML::Specification::_LoadConstantLayerParams_default_instance_ = (uint64_t)&unk_26D760748;
  *(void *)algn_26808B338 = 0;
  qword_26808B358 = 0;
  dword_26808B360 = 0;
  byte_26808B368 = 1;
  qword_26808B378 = 0;
  unk_26808B380 = 0;
  CoreML::Specification::_L2NormalizeLayerParams_default_instance_ = (uint64_t)&unk_26D7607E0;
  byte_26808B388 = 1;
  qword_26808B398 = 0;
  unk_26808B3A0 = 0;
  CoreML::Specification::_FlattenLayerParams_default_instance_ = (uint64_t)&unk_26D760878;
  byte_26808B3A8 = 1;
  qword_26808B3C0 = 0;
  unk_26808B3C8 = 0;
  CoreML::Specification::_ReshapeLayerParams_default_instance_ = (uint64_t)&unk_26D760910;
  *(void *)algn_26808B3B8 = 0;
  unk_26808B3D4 = 0;
  byte_26808B3E0 = 1;
  qword_26808B3F8 = 0;
  unk_26808B400 = 0;
  CoreML::Specification::_PermuteLayerParams_default_instance_ = (uint64_t)&unk_26D7609A8;
  unk_26808B3F0 = 0;
  dword_26808B40C = 0;
  byte_26808B410 = 1;
  qword_26808B428 = 0;
  unk_26808B430 = 0;
  CoreML::Specification::_ReorganizeDataLayerParams_default_instance_ = (uint64_t)&unk_26D760A40;
  unk_26808B420 = 0;
  byte_26808B438 = 1;
  CoreML::Specification::_SliceLayerParams_default_instance_ = (uint64_t)&unk_26D760AD8;
  qword_26808B468 = 0;
  unk_26808B458 = 0u;
  unk_26808B448 = 0u;
  byte_26808B470 = 1;
  qword_26808B488 = 0;
  unk_26808B490 = 0;
  CoreML::Specification::_ReduceLayerParams_default_instance_ = (uint64_t)&unk_26D760B70;
  unk_26808B480 = 0;
  byte_26808B498 = 1;
  qword_26808B4B0 = 0;
  unk_26808B4B8 = 0;
  CoreML::Specification::_CropLayerParams_default_instance_ = (uint64_t)&unk_26D760C08;
  *(void *)algn_26808B4A8 = 0;
  qword_26808B4C8 = 0;
  dword_26808B4D0 = 0;
  byte_26808B4D8 = 1;
  CoreML::Specification::_AverageLayerParams_default_instance_ = (uint64_t)&unk_26D760CA0;
  qword_26808B4E8 = 0;
  dword_26808B4F0 = 0;
  byte_26808B4F8 = 1;
  CoreML::Specification::_MaxLayerParams_default_instance_ = (uint64_t)&unk_26D760D38;
  qword_26808B508 = 0;
  dword_26808B510 = 0;
  byte_26808B518 = 1;
  CoreML::Specification::_MinLayerParams_default_instance_ = (uint64_t)&unk_26D760DD0;
  qword_26808B528 = 0;
  dword_26808B530 = 0;
  byte_26808B538 = 1;
  CoreML::Specification::_DotProductLayerParams_default_instance_ = (uint64_t)&unk_26D760E68;
  *(void *)algn_26808B548 = 0;
  byte_26808B550 = 0;
  dword_26808B554 = 0;
  byte_26808B558 = 1;
  dword_26808B578 = 0;
  qword_26808B568 = 0;
  unk_26808B570 = 0;
  CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_ = (uint64_t)&unk_26D760F00;
  byte_26808B580 = 1;
  dword_26808B5A0 = 0;
  qword_26808B590 = 0;
  unk_26808B598 = 0;
  CoreML::Specification::_SequenceRepeatLayerParams_default_instance_ = (uint64_t)&unk_26D760F98;
  byte_26808B5A8 = 1;
  CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_ = (uint64_t)&unk_26D761030;
  dword_26808B5F4 = 0;
  *(_OWORD *)((char *)&xmmword_26808B5D8 + 11) = 0u;
  xmmword_26808B5D8 = 0u;
  unk_26808B5C8 = 0u;
  *(_OWORD *)algn_26808B5B8 = 0u;
  byte_26808B5F8 = 1;
  CoreML::Specification::_GRULayerParams_default_instance_ = (uint64_t)&unk_26D7610C8;
  dword_26808B684 = 0;
  unk_26808B673 = 0u;
  *(_OWORD *)&qword_26808B668 = 0u;
  *(_OWORD *)&qword_26808B658 = 0u;
  *(_OWORD *)&qword_26808B648 = 0u;
  *(_OWORD *)&qword_26808B638 = 0u;
  *(_OWORD *)&qword_26808B628 = 0u;
  unk_26808B618 = 0u;
  unk_26808B608 = 0u;
  byte_26808B688 = 1;
  dword_26808B6AC = 0;
  qword_26808B698 = 0;
  unk_26808B6A0 = 0;
  CoreML::Specification::_LSTMParams_default_instance_ = (uint64_t)&unk_26D761160;
  byte_26808B6A8 = 0;
  byte_26808B6B0 = 1;
  CoreML::Specification::_LSTMWeightParams_default_instance_ = (uint64_t)&unk_26D7611F8;
  dword_26808B740 = 0;
  unk_26808B730 = 0u;
  unk_26808B720 = 0u;
  unk_26808B710 = 0u;
  unk_26808B700 = 0u;
  unk_26808B6F0 = 0u;
  unk_26808B6E0 = 0u;
  unk_26808B6D0 = 0u;
  unk_26808B6C0 = 0u;
  byte_26808B748 = 1;
  CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_ = (uint64_t)&unk_26D761290;
  dword_26808B79C = 0;
  byte_26808B798 = 0;
  unk_26808B788 = 0u;
  *(_OWORD *)&qword_26808B778 = 0u;
  unk_26808B768 = 0u;
  unk_26808B758 = 0u;
  byte_26808B7A0 = 1;
  CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_ = (uint64_t)&unk_26D761328;
  *(_OWORD *)&algn_26808B808[4] = 0u;
  *(_OWORD *)&qword_26808B800 = 0u;
  *(_OWORD *)&algn_26808B7B0[64] = 0u;
  *(_OWORD *)&algn_26808B7B0[48] = 0u;
  *(_OWORD *)&algn_26808B7B0[32] = 0u;
  *(_OWORD *)&algn_26808B7B0[16] = 0u;
  *(_OWORD *)algn_26808B7B0 = 0u;
  byte_26808B820 = 1;
  CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_ = (uint64_t)&unk_26D7613C0;
  *(void *)algn_26808B830 = 0;
  qword_26808B840 = 0;
  byte_26808B848 = 1;
  qword_26808B880 = 0;
  unk_26808B888 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_26808B890 = 0;
  unk_26808B898 = 0;
  dword_26808B8A0 = 0;
  CoreML::Specification::_CustomLayerParams_ParametersEntry_default_instance_ = (uint64_t)&unk_26D7668B0;
  byte_26808B8A8 = 1;
  *((unsigned char *)CoreML::Specification::CustomLayerParams::CustomLayerParams((CoreML::Specification::CustomLayerParams *)&CoreML::Specification::_CustomLayerParams_default_instance_)
  + 96) = 1;
  CoreML::Specification::_TransposeLayerParams_default_instance_ = (uint64_t)&unk_26D7614F0;
  unk_26808B920 = 0;
  qword_26808B928 = 0;
  unk_26808B930 = 0;
  dword_26808B93C = 0;
  byte_26808B940 = 1;
  CoreML::Specification::_BatchedMatMulLayerParams_default_instance_ = (uint64_t)&unk_26D761588;
  unk_26808B950 = 0u;
  xmmword_26808B960[0] = 0u;
  xmmword_26808B960[1] = 0u;
  byte_26808B980 = 1;
  CoreML::Specification::_ConcatNDLayerParams_default_instance_ = (uint64_t)&unk_26D761620;
  unk_26808B990 = 0;
  dword_26808B9A4 = 0;
  qword_26808B998 = 0;
  byte_26808B9A0 = 0;
  byte_26808B9A8 = 1;
  CoreML::Specification::_SoftmaxNDLayerParams_default_instance_ = (uint64_t)&unk_26D7616B8;
  *(void *)algn_26808B9B8 = 0;
  qword_26808B9C0 = 0;
  dword_26808B9C8 = 0;
  byte_26808B9D0 = 1;
  CoreML::Specification::_ReverseLayerParams_default_instance_ = (uint64_t)&unk_26D761750;
  unk_26808B9E0 = 0;
  qword_26808B9E8 = 0;
  unk_26808B9F0 = 0;
  dword_26808B9FC = 0;
  byte_26808BA00 = 1;
  CoreML::Specification::_ReverseSeqLayerParams_default_instance_ = (uint64_t)&unk_26D7617E8;
  unk_26808BA10 = 0;
  dword_26808BA28 = 0;
  qword_26808BA18 = 0;
  unk_26808BA20 = 0;
  byte_26808BA30 = 1;
  CoreML::Specification::_LoadConstantNDLayerParams_default_instance_ = (uint64_t)&unk_26D761880;
  unk_26808BA40 = 0;
  qword_26808BA48 = 0;
  unk_26808BA50 = 0;
  dword_26808BA68 = 0;
  byte_26808BA70 = 1;
  CoreML::Specification::_FillLikeLayerParams_default_instance_ = (uint64_t)&unk_26D761918;
  unk_26808BA80 = 0;
  qword_26808BA88 = 0;
  byte_26808BA90 = 1;
  CoreML::Specification::_FillStaticLayerParams_default_instance_ = (uint64_t)&unk_26D7619B0;
  unk_26808BAA0 = 0;
  qword_26808BAA8 = 0;
  unk_26808BAB0 = 0;
  unk_26808BABC = 0;
  byte_26808BAC8 = 1;
  CoreML::Specification::_FillDynamicLayerParams_default_instance_ = (uint64_t)&unk_26D761A48;
  *(void *)algn_26808BAD8 = 0;
  qword_26808BAE0 = 0;
  byte_26808BAE8 = 1;
  CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D761AE0;
  qword_26808BAF8 = 0;
  dword_26808BB00 = 0;
  byte_26808BB08 = 1;
  CoreML::Specification::_SinLayerParams_default_instance_ = (uint64_t)&unk_26D761B78;
  qword_26808BB18 = 0;
  dword_26808BB20 = 0;
  byte_26808BB28 = 1;
  CoreML::Specification::_CosLayerParams_default_instance_ = (uint64_t)&unk_26D761C10;
  qword_26808BB38 = 0;
  dword_26808BB40 = 0;
  byte_26808BB48 = 1;
  CoreML::Specification::_TanLayerParams_default_instance_ = (uint64_t)&unk_26D761CA8;
  qword_26808BB58 = 0;
  dword_26808BB60 = 0;
  byte_26808BB68 = 1;
  CoreML::Specification::_AsinLayerParams_default_instance_ = (uint64_t)&unk_26D761D40;
  qword_26808BB78 = 0;
  dword_26808BB80 = 0;
  byte_26808BB88 = 1;
  CoreML::Specification::_AcosLayerParams_default_instance_ = (uint64_t)&unk_26D761DD8;
  qword_26808BB98 = 0;
  dword_26808BBA0 = 0;
  byte_26808BBA8 = 1;
  CoreML::Specification::_AtanLayerParams_default_instance_ = (uint64_t)&unk_26D761E70;
  qword_26808BBB8 = 0;
  dword_26808BBC0 = 0;
  byte_26808BBC8 = 1;
  CoreML::Specification::_SinhLayerParams_default_instance_ = (uint64_t)&unk_26D761F08;
  qword_26808BBD8 = 0;
  dword_26808BBE0 = 0;
  byte_26808BBE8 = 1;
  CoreML::Specification::_CoshLayerParams_default_instance_ = (uint64_t)&unk_26D761FA0;
  qword_26808BBF8 = 0;
  dword_26808BC00 = 0;
  byte_26808BC08 = 1;
  CoreML::Specification::_TanhLayerParams_default_instance_ = (uint64_t)&unk_26D762038;
  qword_26808BC18 = 0;
  dword_26808BC20 = 0;
  byte_26808BC28 = 1;
  CoreML::Specification::_AsinhLayerParams_default_instance_ = (uint64_t)&unk_26D7620D0;
  qword_26808BC38 = 0;
  dword_26808BC40 = 0;
  byte_26808BC48 = 1;
  CoreML::Specification::_AcoshLayerParams_default_instance_ = (uint64_t)&unk_26D762168;
  qword_26808BC58 = 0;
  dword_26808BC60 = 0;
  byte_26808BC68 = 1;
  CoreML::Specification::_AtanhLayerParams_default_instance_ = (uint64_t)&unk_26D762200;
  qword_26808BC78 = 0;
  dword_26808BC80 = 0;
  byte_26808BC88 = 1;
  CoreML::Specification::_PowBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D762298;
  qword_26808BC98 = 0;
  dword_26808BCA0 = 0;
  byte_26808BCA8 = 1;
  CoreML::Specification::_Exp2LayerParams_default_instance_ = (uint64_t)&unk_26D762330;
  qword_26808BCB8 = 0;
  dword_26808BCC0 = 0;
  byte_26808BCC8 = 1;
  CoreML::Specification::_WhereNonZeroLayerParams_default_instance_ = (uint64_t)&unk_26D7623C8;
  qword_26808BCD8 = 0;
  dword_26808BCE0 = 0;
  byte_26808BCE8 = 1;
  CoreML::Specification::_MatrixBandPartLayerParams_default_instance_ = (uint64_t)&unk_26D762460;
  *(void *)algn_26808BCF8 = 0;
  dword_26808BD10 = 0;
  qword_26808BD00 = 0;
  unk_26808BD08 = 0;
  byte_26808BD18 = 1;
  CoreML::Specification::_UpperTriangularLayerParams_default_instance_ = (uint64_t)&unk_26D7624F8;
  *(void *)algn_26808BD28 = 0;
  dword_26808BD38 = 0;
  qword_26808BD30 = 0;
  byte_26808BD40 = 1;
  CoreML::Specification::_LowerTriangularLayerParams_default_instance_ = (uint64_t)&unk_26D762590;
  unk_26808BD50 = 0;
  dword_26808BD60 = 0;
  qword_26808BD58 = 0;
  byte_26808BD68 = 1;
  CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_ = (uint64_t)&unk_26D762628;
  qword_26808BD78 = 0;
  dword_26808BD80 = 0;
  byte_26808BD88 = 1;
  CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_ = (uint64_t)&unk_26D7626C0;
  *(void *)algn_26808BD98 = 0;
  qword_26808BDA0 = 0;
  unk_26808BDA8 = 0;
  dword_26808BDB4 = 0;
  byte_26808BDB8 = 1;
  CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_ = (uint64_t)&unk_26D762758;
  qword_26808BDC8 = 0;
  dword_26808BDD0 = 0;
  byte_26808BDD8 = 1;
  CoreML::Specification::_AddBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D7627F0;
  qword_26808BDE8 = 0;
  dword_26808BDF0 = 0;
  byte_26808BDF8 = 1;
  CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D762888;
  qword_26808BE08 = 0;
  dword_26808BE10 = 0;
  byte_26808BE18 = 1;
  CoreML::Specification::_MinBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D762920;
  qword_26808BE28 = 0;
  dword_26808BE30 = 0;
  byte_26808BE38 = 1;
  CoreML::Specification::_ModBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D7629B8;
  qword_26808BE48 = 0;
  dword_26808BE50 = 0;
  byte_26808BE58 = 1;
  CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D762A50;
  qword_26808BE68 = 0;
  dword_26808BE70 = 0;
  byte_26808BE78 = 1;
  CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D762AE8;
  qword_26808BE88 = 0;
  dword_26808BE90 = 0;
  byte_26808BE98 = 1;
  CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D762B80;
  qword_26808BEA8 = 0;
  dword_26808BEB0 = 0;
  byte_26808BEB8 = 1;
  CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_ = (uint64_t)&unk_26D762C18;
  qword_26808BEC8 = 0;
  dword_26808BED0 = 0;
  byte_26808BED8 = 1;
  CoreML::Specification::_GatherLayerParams_default_instance_ = (uint64_t)&unk_26D762CB0;
  *(void *)algn_26808BEE8 = 0;
  dword_26808BEF8 = 0;
  qword_26808BEF0 = 0;
  byte_26808BF00 = 1;
  CoreML::Specification::_ScatterLayerParams_default_instance_ = (uint64_t)&unk_26D762D48;
  unk_26808BF10 = 0;
  qword_26808BF18 = 0;
  unk_26808BF20 = 0;
  byte_26808BF28 = 1;
  CoreML::Specification::_GatherNDLayerParams_default_instance_ = (uint64_t)&unk_26D762DE0;
  qword_26808BF38 = 0;
  dword_26808BF40 = 0;
  byte_26808BF48 = 1;
  CoreML::Specification::_ScatterNDLayerParams_default_instance_ = (uint64_t)&unk_26D762E78;
  *(void *)algn_26808BF58 = 0;
  qword_26808BF60 = 0;
  byte_26808BF68 = 1;
  CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_ = (uint64_t)&unk_26D762F10;
  *(void *)algn_26808BF78 = 0;
  dword_26808BF88 = 0;
  qword_26808BF80 = 0;
  byte_26808BF90 = 1;
  CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_ = (uint64_t)&unk_26D762FA8;
  unk_26808BFA0 = 0;
  qword_26808BFA8 = 0;
  unk_26808BFB0 = 0;
  byte_26808BFB8 = 1;
  CoreML::Specification::_StackLayerParams_default_instance_ = (uint64_t)&unk_26D763040;
  *(void *)algn_26808BFC8 = 0;
  dword_26808BFD8 = 0;
  qword_26808BFD0 = 0;
  byte_26808BFE0 = 1;
  CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_ = (uint64_t)&unk_26D7630D8;
  unk_26808BFF0 = 0;
  qword_26808BFF8 = 0;
  unk_26808C000 = 0;
  dword_26808C00C = 0;
  byte_26808C010 = 1;
  CoreML::Specification::_ConstantPaddingLayerParams_default_instance_ = (uint64_t)&unk_26D763170;
  unk_26808C020 = 0;
  qword_26808C028 = 0;
  unk_26808C030 = 0;
  byte_26808C040 = 0;
  dword_26808C03C = 0;
  dword_26808C044 = 0;
  byte_26808C048 = 1;
  CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_ = (uint64_t)&unk_26D763208;
  *(void *)algn_26808C058 = 0;
  dword_26808C070 = 0;
  qword_26808C060 = 0;
  unk_26808C068 = 0;
  byte_26808C078 = 1;
  CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_ = (uint64_t)&unk_26D7632A0;
  *(void *)algn_26808C088 = 0;
  qword_26808C090 = 0;
  unk_26808C098 = 0;
  qword_26808C0A8 = 0;
  unk_26808C0B0 = 0;
  dword_26808C0B8 = 0;
  byte_26808C0C0 = 1;
  CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_ = (uint64_t)&unk_26D763338;
  unk_26808C0D0 = 0;
  dword_26808C0E8 = 0;
  qword_26808C0D8 = 0;
  unk_26808C0E0 = 0;
  byte_26808C0F0 = 1;
  CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_ = (uint64_t)&unk_26D7633D0;
  unk_26808C100 = 0;
  dword_26808C118 = 0;
  qword_26808C108 = 0;
  unk_26808C110 = 0;
  byte_26808C120 = 1;
  CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_ = (uint64_t)&unk_26D763468;
  unk_26808C130 = 0;
  qword_26808C138 = 0;
  unk_26808C140 = 0;
  qword_26808C150 = 0;
  unk_26808C158 = 0;
  dword_26808C160 = 0;
  byte_26808C168 = 1;
  CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_ = (uint64_t)&unk_26D763500;
  *(void *)algn_26808C178 = 0;
  dword_26808C190 = 0;
  qword_26808C180 = 0;
  unk_26808C188 = 0;
  byte_26808C198 = 1;
  CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_ = (uint64_t)&unk_26D763598;
  *(void *)algn_26808C1A8 = 0;
  qword_26808C1B0 = 0;
  unk_26808C1B8 = 0;
  byte_26808C1C0 = 1;
  CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_ = (uint64_t)&unk_26D763630;
  unk_26808C1D0 = 0;
  qword_26808C1D8 = 0;
  unk_26808C1E0 = 0;
  qword_26808C1F0 = 0;
  unk_26808C1F8 = 0;
  byte_26808C200 = 1;
  CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_ = (uint64_t)&unk_26D7636C8;
  unk_26808C210 = 0;
  qword_26808C218 = 0;
  unk_26808C220 = 0;
  byte_26808C228 = 1;
  CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_ = (uint64_t)&unk_26D763760;
  qword_26808C258 = 0;
  unk_26808C248 = 0u;
  unk_26808C238 = 0u;
  byte_26808C260 = 1;
  CoreML::Specification::_ReduceL1LayerParams_default_instance_ = (uint64_t)&unk_26D7637F8;
  unk_26808C270 = 0;
  qword_26808C278 = 0;
  unk_26808C280 = 0;
  word_26808C28C = 0;
  dword_26808C290 = 0;
  byte_26808C298 = 1;
  CoreML::Specification::_ReduceL2LayerParams_default_instance_ = (uint64_t)&unk_26D763890;
  *(void *)algn_26808C2A8 = 0;
  qword_26808C2B0 = 0;
  unk_26808C2B8 = 0;
  word_26808C2C4 = 0;
  dword_26808C2C8 = 0;
  byte_26808C2D0 = 1;
  CoreML::Specification::_ReduceMaxLayerParams_default_instance_ = (uint64_t)&unk_26D763928;
  unk_26808C2E0 = 0;
  qword_26808C2E8 = 0;
  unk_26808C2F0 = 0;
  word_26808C2FC = 0;
  dword_26808C300 = 0;
  byte_26808C308 = 1;
  CoreML::Specification::_ReduceMinLayerParams_default_instance_ = (uint64_t)&unk_26D7639C0;
  *(void *)algn_26808C318 = 0;
  qword_26808C320 = 0;
  unk_26808C328 = 0;
  word_26808C334 = 0;
  dword_26808C338 = 0;
  byte_26808C340 = 1;
  CoreML::Specification::_ReduceSumLayerParams_default_instance_ = (uint64_t)&unk_26D763A58;
  unk_26808C350 = 0;
  qword_26808C358 = 0;
  unk_26808C360 = 0;
  word_26808C36C = 0;
  dword_26808C370 = 0;
  byte_26808C378 = 1;
  CoreML::Specification::_ReduceProdLayerParams_default_instance_ = (uint64_t)&unk_26D763AF0;
  *(void *)algn_26808C388 = 0;
  qword_26808C390 = 0;
  unk_26808C398 = 0;
  word_26808C3A4 = 0;
  dword_26808C3A8 = 0;
  byte_26808C3B0 = 1;
  CoreML::Specification::_ReduceMeanLayerParams_default_instance_ = (uint64_t)&unk_26D763B88;
  unk_26808C3C0 = 0;
  qword_26808C3C8 = 0;
  unk_26808C3D0 = 0;
  word_26808C3DC = 0;
  dword_26808C3E0 = 0;
  byte_26808C3E8 = 1;
  CoreML::Specification::_ReduceLogSumLayerParams_default_instance_ = (uint64_t)&unk_26D763C20;
  *(void *)algn_26808C3F8 = 0;
  qword_26808C400 = 0;
  unk_26808C408 = 0;
  word_26808C414 = 0;
  dword_26808C418 = 0;
  byte_26808C420 = 1;
  CoreML::Specification::_ReduceSumSquareLayerParams_default_instance_ = (uint64_t)&unk_26D763CB8;
  unk_26808C430 = 0;
  qword_26808C438 = 0;
  unk_26808C440 = 0;
  word_26808C44C = 0;
  dword_26808C450 = 0;
  byte_26808C458 = 1;
  CoreML::Specification::_ReduceLogSumExpLayerParams_default_instance_ = (uint64_t)&unk_26D763D50;
  *(void *)algn_26808C468 = 0;
  qword_26808C470 = 0;
  unk_26808C478 = 0;
  word_26808C484 = 0;
  dword_26808C488 = 0;
  byte_26808C490 = 1;
  CoreML::Specification::_ExpandDimsLayerParams_default_instance_ = (uint64_t)&unk_26D763DE8;
  unk_26808C4A0 = 0;
  qword_26808C4A8 = 0;
  unk_26808C4B0 = 0;
  dword_26808C4BC = 0;
  byte_26808C4C0 = 1;
  CoreML::Specification::_FlattenTo2DLayerParams_default_instance_ = (uint64_t)&unk_26D763E80;
  unk_26808C4D0 = 0;
  dword_26808C4E0 = 0;
  qword_26808C4D8 = 0;
  byte_26808C4E8 = 1;
  CoreML::Specification::_ReshapeStaticLayerParams_default_instance_ = (uint64_t)&unk_26D763F18;
  *(void *)algn_26808C4F8 = 0;
  qword_26808C500 = 0;
  unk_26808C508 = 0;
  dword_26808C514 = 0;
  byte_26808C518 = 1;
  CoreML::Specification::_ReshapeLikeLayerParams_default_instance_ = (uint64_t)&unk_26D763FB0;
  qword_26808C528 = 0;
  dword_26808C530 = 0;
  byte_26808C538 = 1;
  CoreML::Specification::_ReshapeDynamicLayerParams_default_instance_ = (uint64_t)&unk_26D764048;
  qword_26808C548 = 0;
  dword_26808C550 = 0;
  byte_26808C558 = 1;
  CoreML::Specification::_SqueezeLayerParams_default_instance_ = (uint64_t)&unk_26D7640E0;
  *(void *)algn_26808C568 = 0;
  qword_26808C570 = 0;
  unk_26808C578 = 0;
  byte_26808C584 = 0;
  dword_26808C588 = 0;
  byte_26808C590 = 1;
  CoreML::Specification::_TopKLayerParams_default_instance_ = (uint64_t)&unk_26D764178;
  unk_26808C5A0 = 0;
  dword_26808C5BC = 0;
  byte_26808C5B8 = 0;
  qword_26808C5A8 = 0;
  unk_26808C5B0 = 0;
  byte_26808C5C0 = 1;
  CoreML::Specification::_ArgMaxLayerParams_default_instance_ = (uint64_t)&unk_26D764210;
  unk_26808C5D0 = 0;
  dword_26808C5E4 = 0;
  qword_26808C5D8 = 0;
  byte_26808C5E0 = 0;
  byte_26808C5E8 = 1;
  CoreML::Specification::_ArgMinLayerParams_default_instance_ = (uint64_t)&unk_26D7642A8;
  *(void *)algn_26808C5F8 = 0;
  dword_26808C60C = 0;
  qword_26808C600 = 0;
  byte_26808C608 = 0;
  byte_26808C610 = 1;
  CoreML::Specification::_SplitNDLayerParams_default_instance_ = (uint64_t)&unk_26D764340;
  unk_26808C620 = 0;
  qword_26808C628 = 0;
  unk_26808C630 = 0;
  qword_26808C640 = 0;
  unk_26808C648 = 0;
  dword_26808C650 = 0;
  byte_26808C658 = 1;
  CoreML::Specification::_CeilLayerParams_default_instance_ = (uint64_t)&unk_26D7643D8;
  qword_26808C668 = 0;
  dword_26808C670 = 0;
  byte_26808C678 = 1;
  CoreML::Specification::_RoundLayerParams_default_instance_ = (uint64_t)&unk_26D764470;
  qword_26808C688 = 0;
  dword_26808C690 = 0;
  byte_26808C698 = 1;
  CoreML::Specification::_FloorLayerParams_default_instance_ = (uint64_t)&unk_26D764508;
  qword_26808C6A8 = 0;
  dword_26808C6B0 = 0;
  byte_26808C6B8 = 1;
  CoreML::Specification::_SignLayerParams_default_instance_ = (uint64_t)&unk_26D7645A0;
  qword_26808C6C8 = 0;
  dword_26808C6D0 = 0;
  byte_26808C6D8 = 1;
  CoreML::Specification::_ClipLayerParams_default_instance_ = (uint64_t)&unk_26D764638;
  *(void *)algn_26808C6E8 = 0;
  dword_26808C6F8 = 0;
  qword_26808C6F0 = 0;
  byte_26808C700 = 1;
  CoreML::Specification::_SliceStaticLayerParams_default_instance_ = (uint64_t)&unk_26D7646D0;
  unk_26808C710 = 0;
  qword_26808C730 = 0;
  unk_26808C738 = 0;
  qword_26808C748 = 0;
  unk_26808C750 = 0;
  qword_26808C760 = 0;
  unk_26808C768 = 0;
  qword_26808C778 = 0;
  unk_26808C780 = 0;
  qword_26808C790 = 0;
  unk_26808C798 = 0;
  qword_26808C718 = 0;
  unk_26808C720 = 0;
  dword_26808C7A4 = 0;
  byte_26808C7A8 = 1;
  CoreML::Specification::_SliceDynamicLayerParams_default_instance_ = (uint64_t)&unk_26D764768;
  *(void *)algn_26808C7B8 = 0;
  qword_26808C7D8 = 0;
  unk_26808C7E0 = 0;
  qword_26808C7F0 = 0;
  unk_26808C7F8 = 0;
  qword_26808C808 = 0;
  unk_26808C810 = 0;
  qword_26808C820 = 0;
  unk_26808C828 = 0;
  qword_26808C7C0 = 0;
  unk_26808C7C8 = 0;
  dword_26808C834 = 0;
  byte_26808C838 = 1;
  CoreML::Specification::_TileLayerParams_default_instance_ = (uint64_t)&unk_26D764800;
  *(void *)algn_26808C848 = 0;
  qword_26808C850 = 0;
  unk_26808C858 = 0;
  dword_26808C864 = 0;
  byte_26808C868 = 1;
  CoreML::Specification::_GetShapeLayerParams_default_instance_ = (uint64_t)&unk_26D764898;
  qword_26808C878 = 0;
  dword_26808C880 = 0;
  byte_26808C888 = 1;
  CoreML::Specification::_ErfLayerParams_default_instance_ = (uint64_t)&unk_26D764930;
  qword_26808C898 = 0;
  dword_26808C8A0 = 0;
  byte_26808C8A8 = 1;
  CoreML::Specification::_GeluLayerParams_default_instance_ = (uint64_t)&unk_26D7649C8;
  *(void *)algn_26808C8B8 = 0;
  qword_26808C8C0 = 0;
  byte_26808C8C8 = 1;
  CoreML::Specification::_RangeStaticLayerParams_default_instance_ = (uint64_t)&unk_26D764A60;
  *(void *)algn_26808C8D8 = 0;
  qword_26808C8E0 = 0;
  unk_26808C8E8 = 0;
  byte_26808C8F0 = 1;
  CoreML::Specification::_RangeDynamicLayerParams_default_instance_ = (uint64_t)&unk_26D764AF8;
  unk_26808C900 = 0;
  dword_26808C910 = 0;
  qword_26808C908 = 0;
  byte_26808C918 = 1;
  CoreML::Specification::_SlidingWindowsLayerParams_default_instance_ = (uint64_t)&unk_26D764B90;
  dword_26808C948 = 0;
  unk_26808C938 = 0u;
  unk_26808C928 = 0u;
  byte_26808C950 = 1;
  CoreML::Specification::_LayerNormalizationLayerParams_default_instance_ = (uint64_t)&unk_26D764C28;
  unk_26808C960 = 0;
  qword_26808C968 = 0;
  unk_26808C970 = 0;
  qword_26808C990 = 0;
  byte_26808C998 = 1;
  CoreML::Specification::_NonMaximumSuppressionLayerParams_default_instance_ = (uint64_t)&unk_26D764CC0;
  *(void *)algn_26808C9A8 = 0;
  dword_26808C9C4 = 0;
  byte_26808C9C0 = 0;
  qword_26808C9B0 = 0;
  unk_26808C9B8 = 0;
  byte_26808C9C8 = 1;
  CoreML::Specification::_ClampedReLULayerParams_default_instance_ = (uint64_t)&unk_26D764D58;
  *(void *)algn_26808C9D8 = 0;
  dword_26808C9E8 = 0;
  qword_26808C9E0 = 0;
  byte_26808C9F0 = 1;
  CoreML::Specification::_ArgSortLayerParams_default_instance_ = (uint64_t)&unk_26D764DF0;
  unk_26808CA00 = 0;
  dword_26808CA14 = 0;
  qword_26808CA08 = 0;
  byte_26808CA10 = 0;
  byte_26808CA18 = 1;
  CoreML::Specification::_SliceBySizeLayerParams_default_instance_ = (uint64_t)&unk_26D764E88;
  *(void *)algn_26808CA28 = 0;
  dword_26808CA40 = 0;
  qword_26808CA30 = 0;
  unk_26808CA38 = 0;
  byte_26808CA48 = 1;
  CoreML::Specification::_NeuralNetworkClassifier_default_instance_ = (uint64_t)&unk_26D764F20;
  unk_26808CA78 = 0u;
  unk_26808CA68 = 0u;
  unk_26808CA58 = 0u;
  qword_26808CA88 = 0;
  qword_26808CA90 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_26808CAA0 = 0;
  qword_26808CAB0 = 0;
  byte_26808CAB8 = 1;
  CoreML::Specification::_OneHotLayerParams_default_instance_ = (uint64_t)&unk_26D764FB8;
  dword_26808CAF8 = 0;
  unk_26808CAE8 = 0u;
  unk_26808CAD8 = 0u;
  byte_26808CB00 = 1;
  CoreML::Specification::_CumSumLayerParams_default_instance_ = (uint64_t)&unk_26D765050;
  unk_26808CB10 = 0;
  dword_26808CB24 = 0;
  qword_26808CB18 = 0;
  word_26808CB20 = 0;
  byte_26808CB28 = 1;
  CoreML::Specification::_NeuralNetworkRegressor_default_instance_ = (uint64_t)&unk_26D7650E8;
  *(_OWORD *)((char *)&qword_26808CB70 + 4) = 0u;
  unk_26808CB68 = 0u;
  unk_26808CB58 = 0u;
  unk_26808CB48 = 0u;
  unk_26808CB38 = 0u;
  byte_26808CB88 = 1;
  CoreML::Specification::_NetworkUpdateParameters_default_instance_ = (uint64_t)&unk_26D765180;
  dword_26808CBD8 = 0;
  unk_26808CBA8 = 0u;
  unk_26808CB98 = 0u;
  byte_26808CBE0 = 1;
  CoreML::Specification::_LossLayer_default_instance_ = (uint64_t)&unk_26D765218;
  unk_26808CBF0 = 0;
  qword_26808CBF8 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_26808CC08 = 0;
  byte_26808CC10 = 1;
  CoreML::Specification::_CategoricalCrossEntropyLossLayer_default_instance_ = (uint64_t)&unk_26D7652B0;
  unk_26808CC30 = 0;
  qword_26808CC38 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  unk_26808CC40 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  dword_26808CC48 = 0;
  byte_26808CC50 = 1;
  qword_26808CC68 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  unk_26808CC70 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  CoreML::Specification::_MeanSquaredErrorLossLayer_default_instance_ = (uint64_t)&unk_26D765348;
  unk_26808CC60 = 0;
  dword_26808CC78 = 0;
  byte_26808CC80 = 1;
  CoreML::Specification::_Optimizer_default_instance_ = (uint64_t)&unk_26D7653E0;
  *(void *)algn_26808CC90 = 0;
  qword_26808CCA0 = 0;
  byte_26808CCA8 = 1;
  CoreML::Specification::_SGDOptimizer_default_instance_ = (uint64_t)&unk_26D765478;
  dword_26808CCE8 = 0;
  *(_OWORD *)algn_26808CCC8 = 0u;
  byte_26808CCF0 = 1;
  BOOL result = &CoreML::Specification::_AdamOptimizer_default_instance_;
  qword_26808B228 = (uint64_t)&CoreML::Specification::_SamplingMode_default_instance_;
  qword_26808B268 = (uint64_t)&CoreML::Specification::_SamplingMode_default_instance_;
  unk_26808B270 = &CoreML::Specification::_BoxCoordinatesMode_default_instance_;
  qword_26808AAE8 = (uint64_t)&CoreML::Specification::_BorderAmounts_default_instance_;
  qword_26808B070 = (uint64_t)&CoreML::Specification::_BorderAmounts_default_instance_;
  qword_26808B4C8 = (uint64_t)&CoreML::Specification::_BorderAmounts_default_instance_;
  qword_26808A148 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_26808A1F0 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808A1F8 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808ABA0 = (uint64_t)&CoreML::Specification::_QuantizationParams_default_instance_;
  *(void *)&xmmword_26808ACE0 = &CoreML::Specification::_WeightParams_default_instance_;
  *((void *)&xmmword_26808ACE0 + 1) = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808AD60 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808AD68 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808ADE0 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(void *)&xmmword_26808ADE8 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808AE20 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(void *)&xmmword_26808AE28 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808AE60 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(void *)&xmmword_26808AE68 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808AEA0 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808AEA8 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808AEB0 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(void *)&xmmword_26808AEB8[0] = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B2B8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B310 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B318 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B358 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B5C0 = (uint64_t)&CoreML::Specification::_ActivationParams_default_instance_;
  unk_26808B5C8 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B5D0 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(void *)&xmmword_26808B5D8 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B628 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B630 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B638 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B640 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B648 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B650 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B658 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B660 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B668 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B800 = (uint64_t)&CoreML::Specification::_LSTMParams_default_instance_;
  qword_26808B778 = (uint64_t)&CoreML::Specification::_LSTMParams_default_instance_;
  unk_26808B780 = &CoreML::Specification::_LSTMWeightParams_default_instance_;
  qword_26808B6C8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B6D0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B6D8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B6E0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B6E8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B6F0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B6F8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B700 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B708 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B710 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B718 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B720 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B728 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808B730 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B738 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_26808B958 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(void *)&xmmword_26808B960[0] = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808BA60 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_26808C980 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_26808C988 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_26808A870 = (uint64_t)&CoreML::Specification::_NeuralNetwork_default_instance_;
  unk_26808A878 = &CoreML::Specification::_NeuralNetwork_default_instance_;
  qword_26808A8A8 = (uint64_t)&CoreML::Specification::_NeuralNetwork_default_instance_;
  qword_26808A8B0 = (uint64_t)&CoreML::Specification::_NeuralNetwork_default_instance_;
  qword_268089F80 = (uint64_t)&CoreML::Specification::_NetworkUpdateParameters_default_instance_;
  qword_26808B890 = (uint64_t)&CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_;
  qword_26808B880 = (uint64_t)&CoreML::Specification::_CustomLayerParams_ParametersEntry_default_instance_;
  qword_26808CA98 = (uint64_t)&CoreML::Specification::_NetworkUpdateParameters_default_instance_;
  qword_26808CB70 = (uint64_t)&CoreML::Specification::_NetworkUpdateParameters_default_instance_;
  qword_26808CBB8 = (uint64_t)&CoreML::Specification::_Optimizer_default_instance_;
  unk_26808CBC0 = &CoreML::Specification::_Int64Parameter_default_instance_;
  qword_26808CBC8 = (uint64_t)&CoreML::Specification::_BoolParameter_default_instance_;
  unk_26808CBD0 = &CoreML::Specification::_Int64Parameter_default_instance_;
  qword_26808CCD0 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  unk_26808CCD8 = &CoreML::Specification::_Int64Parameter_default_instance_;
  qword_26808CCE0 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  CoreML::Specification::_AdamOptimizer_default_instance_ = (uint64_t)&unk_26D765510;
  dword_26808CD30 = 0;
  unk_26808CD00 = 0u;
  byte_26808CD38 = 1;
  qword_26808CD08 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  unk_26808CD10 = &CoreML::Specification::_Int64Parameter_default_instance_;
  qword_26808CD18 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  unk_26808CD20 = &CoreML::Specification::_DoubleParameter_default_instance_;
  qword_26808CD28 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  return result;
}

void CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(CoreML::Specification::protobuf_NeuralNetwork_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v2[0] = &unk_26D7768F8;
    v2[1] = CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct::InitDefaultsImpl;
    char v3 = 0;
    _tc_google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(void)::once, (uint64_t)v2);
    _tc_google::protobuf::internal::FunctionClosure0::~FunctionClosure0((_tc_google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_223F57030(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::FunctionClosure0::~FunctionClosure0((_tc_google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CoreML::Specification::NeuralNetwork *CoreML::Specification::NeuralNetwork::NeuralNetwork(CoreML::Specification::NeuralNetwork *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  *(void *)this = &unk_26D75DD20;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 7) = 0;
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 2CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

void sub_223F570C8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v3);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::NeuralNetwork::~NeuralNetwork(CoreML::Specification::NeuralNetwork *this)
{
  *(void *)this = &unk_26D75DD20;
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    uint64_t v2 = *((void *)this + 8);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 5);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::NeuralNetwork::~NeuralNetwork(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::NeuralNetwork::default_instance(CoreML::Specification::NeuralNetwork *this)
{
  return &CoreML::Specification::_NeuralNetwork_default_instance_;
}

void CoreML::Specification::NeuralNetwork::New(CoreML::Specification::NeuralNetwork *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F57244(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::NeuralNetwork>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::NeuralNetwork>);
  }
  return result;
}

uint64_t CoreML::Specification::NeuralNetwork::Clear(CoreML::Specification::NeuralNetwork *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    char v3 = (CoreML::Specification::NeuralNetworkLayer **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::NeuralNetworkLayer::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 12);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v7 = *v6++;
      CoreML::Specification::NeuralNetworkPreprocessing::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 12) = 0;
  }
  uint64_t v10 = *((void *)this + 8);
  uLong v9 = (void *)((char *)this + 64);
  uint64_t result = v10;
  if (v10) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *uLong v9 = 0;
  v9[1] = 0;
  return result;
}

uint64_t CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(CoreML::Specification::NeuralNetwork *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 40;
  uint64_t v6 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v8 = 0;
LABEL_7:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_8;
          }
          uint64_t v12 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>((uint64_t)v6);
          uint64_t v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacunint64_t k = *v13;
            *a2 = v13 + 1;
          }
          unint64_t v25 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((v25 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v27 = v25;
          uint64_t result = CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream(v12, (_tc_google::protobuf::io::CodedInputStream *)a2, v26);
          if (!result) {
            return result;
          }
          goto LABEL_48;
        case 2u:
          if (v9 != 18) {
            goto LABEL_8;
          }
          uint64_t v15 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((uint64_t)v5);
          uint64_t v16 = *a2;
          if (*a2 >= a2[1] || *v16 < 0)
          {
            int v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v17 < 0) {
              return 0;
            }
          }
          else
          {
            int v17 = *v16;
            *a2 = v16 + 1;
          }
          unint64_t v29 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
          if ((v29 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v27 = v29;
          uint64_t result = CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream(v15, a2, v30);
          if (!result) {
            return result;
          }
          goto LABEL_48;
        case 5u:
          if (v9 != 40) {
            goto LABEL_8;
          }
          uint64_t v18 = *a2;
          if (*a2 >= a2[1])
          {
            int v19 = 0;
          }
          else
          {
            int v19 = *v18;
            if ((*v18 & 0x80000000) == 0)
            {
              *a2 = v18 + 1;
              goto LABEL_52;
            }
          }
          Varint32Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v19);
          int v19 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_52:
          *((_DWORD *)this + 18) = v19;
          continue;
        case 6u:
          if (v9 != 48) {
            goto LABEL_8;
          }
          unint64_t v20 = *a2;
          if (*a2 >= a2[1])
          {
            int v21 = 0;
          }
          else
          {
            int v21 = *v20;
            if ((*v20 & 0x80000000) == 0)
            {
              *a2 = v20 + 1;
              goto LABEL_55;
            }
          }
          uint64_t v34 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v21);
          int v21 = v34;
          if (v34 < 0) {
            return 0;
          }
LABEL_55:
          *((_DWORD *)this + 19) = v21;
          break;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_8;
          }
          std::pair<std::__wrap_iter<const char *>, std::__wrap_iter<const char *>> v22 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
          if (!v22) {
            operator new();
          }
          uint64_t v23 = *a2;
          if (*a2 >= a2[1] || *v23 < 0)
          {
            int v24 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v24 < 0) {
              return 0;
            }
          }
          else
          {
            int v24 = *v23;
            *a2 = v23 + 1;
          }
          unint64_t v31 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v24);
          if ((v31 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v27 = v31;
          uint64_t result = CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(v22, (_tc_google::protobuf::io::CodedInputStream *)a2, v32);
          if (!result) {
            return result;
          }
LABEL_48:
          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v27))return 0; {
          continue;
          }
        default:
          goto LABEL_8;
      }
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      goto LABEL_7;
    }
    *a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_14;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F57638(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetwork::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 48);
  if (v8)
  {
    for (int j = 0; j != v8; ++j)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 56) + 8 * j + 8), a2, a4);
  }
  signed int v10 = *(_DWORD *)(v5 + 72);
  if (v10) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(5, v10, a2, a4);
  }
  signed int v11 = *(_DWORD *)(v5 + 76);
  if (v11) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(6, v11, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    uint64_t v12 = *(void *)(v5 + 64);
    if (v12)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, v12, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetwork::ByteSizeLong(CoreML::Specification::NeuralNetwork *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(*(CoreML::Specification::NeuralNetworkLayer **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(*(CoreML::Specification::NeuralNetworkPreprocessing **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    signed int v10 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = 11;
  int v13 = *((_DWORD *)this + 18);
  int v14 = *((_DWORD *)this + 19);
  uint64_t v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0) {
    uint64_t v12 = v15;
  }
  uint64_t v16 = v12 + v7;
  if (!v13) {
    uint64_t v16 = v7;
  }
  uint64_t v17 = 11;
  uint64_t v18 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v14 >= 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v17 + v16;
  if (v14) {
    uint64_t result = v19;
  }
  else {
    uint64_t result = v16;
  }
  *((_DWORD *)this + 2CoreML::Specification::Identity::New(this, 0) = result;
  return result;
}

void CoreML::Specification::NeuralNetwork::MergeFrom(CoreML::Specification::NeuralNetwork *this, const CoreML::Specification::NeuralNetwork *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::NeuralNetworkLayer **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetwork *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>((_tc_google::protobuf::Arena **)this + 2, (CoreML::Specification::NeuralNetworkLayer **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    uint64_t v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    uint64_t v11 = (CoreML::Specification::NeuralNetworkPreprocessing **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetwork *)((char *)this + 40), *((_DWORD *)a2 + 12));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((std::string *)((char *)this + 40), (std::string **)v12, v11, v10, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v13 = *((_DWORD *)this + 12) + v10;
    *((_DWORD *)this + 12) = v13;
    int v14 = (signed int *)*((void *)this + 7);
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  if (a2 != (const CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_
    && *((void *)a2 + 8))
  {
    uint64_t v15 = (std::string *)*((void *)this + 8);
    if (!v15) {
      operator new();
    }
    CoreML::Specification::NetworkUpdateParameters::MergeFrom(v15, *((const CoreML::Specification::NetworkUpdateParameters **)a2 + 8));
  }
  int v16 = *((_DWORD *)a2 + 18);
  if (v16) {
    *((_DWORD *)this + 18) = v16;
  }
  int v17 = *((_DWORD *)a2 + 19);
  if (v17) {
    *((_DWORD *)this + 19) = v17;
  }
}

void sub_223F57A7C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::NetworkUpdateParameters::MergeFrom(std::string *this, const CoreML::Specification::NetworkUpdateParameters *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::LossLayer **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::LossLayer>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    int64_t size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *int64_t size = v8;
    }
  }
  if (a2 != (const CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      unsigned int v10 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10) {
        operator new();
      }
      this = CoreML::Specification::Optimizer::MergeFrom(v10, *((const CoreML::Specification::Optimizer **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      int data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::Int64Parameter::MergeFrom(data, *((const CoreML::Specification::Int64Parameter **)a2 + 6));
    }
    if (*((void *)a2 + 7))
    {
      uint64_t v12 = (std::string *)v3[2].__r_.__value_.__l.__size_;
      if (!v12) {
        operator new();
      }
      this = CoreML::Specification::DotProductLayerParams::MergeFrom(v12, *((const CoreML::Specification::DotProductLayerParams **)a2 + 7));
    }
    if (*((void *)a2 + 8))
    {
      if (!v3[2].__r_.__value_.__r.__words[2]) {
        operator new();
      }
      signed int v13 = (const CoreML::Specification::Int64Parameter *)*((void *)a2 + 8);
      int v14 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      return CoreML::Specification::Int64Parameter::MergeFrom(v14, v13);
    }
  }
  return this;
}

void sub_223F57CB4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetwork::IsInitialized(CoreML::Specification::NeuralNetwork *this)
{
  return 1;
}

uint64_t CoreML::Specification::NeuralNetwork::Swap(uint64_t this, CoreML::Specification::NeuralNetwork *a2)
{
  if (a2 != (CoreML::Specification::NeuralNetwork *)this) {
    return CoreML::Specification::NeuralNetwork::InternalSwap(this, a2);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetwork::InternalSwap(uint64_t this, CoreML::Specification::NeuralNetwork *a2)
{
  uint64_t v2 = *(void *)(this + 32);
  *(void *)(this + 32) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v2;
  LODWORD(v2) = *(_DWORD *)(this + 24);
  *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v2;
  LODWORD(v2) = *(_DWORD *)(this + 28);
  *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v2;
  uint64_t v3 = *(void *)(this + 56);
  *(void *)(this + 56) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v3;
  LODWORD(v3) = *(_DWORD *)(this + 48);
  *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v3;
  LODWORD(v3) = *(_DWORD *)(this + 52);
  *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v3;
  uint64_t v4 = *(void *)(this + 64);
  *(void *)(this + 64) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(this + 72);
  *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v4;
  LODWORD(v4) = *(_DWORD *)(this + 76);
  *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v4;
  LODWORD(v4) = *(_DWORD *)(this + 80);
  *(_DWORD *)(this + 8CoreML::Specification::Identity::New(this, 0) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 2CoreML::Specification::Identity::New(this, 0) = v4;
  return this;
}

void *CoreML::Specification::NeuralNetwork::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NeuralNetwork");
}

CoreML::Specification::NeuralNetworkImageScaler *CoreML::Specification::NeuralNetworkImageScaler::NeuralNetworkImageScaler(CoreML::Specification::NeuralNetworkImageScaler *this)
{
  *(void *)this = &unk_26D75DDB8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NeuralNetworkImageScaler *)&CoreML::Specification::_NeuralNetworkImageScaler_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_223F57E3C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::NeuralNetworkImageScaler::~NeuralNetworkImageScaler(CoreML::Specification::NeuralNetworkImageScaler *this)
{
  *(void *)this = &unk_26D75DDB8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75DDB8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::NeuralNetworkImageScaler::New(CoreML::Specification::NeuralNetworkImageScaler *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F57F4C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::NeuralNetworkImageScaler>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::NeuralNetworkImageScaler>);
  }
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkImageScaler::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkImageScaler::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkImageScaler *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = *(unsigned __int8 **)a2;
        unint64_t v6 = *((void *)a2 + 1);
        if (*(void *)a2 >= v6)
        {
          uint64_t v8 = 0;
LABEL_18:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
          goto LABEL_19;
        }
        uint64_t v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 < 1)
        {
          if ((unint64_t)v7 < v6)
          {
            int v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(void *)a2 = v5 + 2;
              unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_19;
            }
          }
          goto LABEL_18;
        }
        *(void *)a2 = v7;
        unint64_t v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_8;
        }
LABEL_19:
        unsigned int v14 = v9 >> 3;
        if (v9 >> 3 <= 0x14) {
          break;
        }
        if (v14 == 21)
        {
          if (v9 != 173) {
            goto LABEL_8;
          }
          unsigned int v26 = 0;
          uint64_t v19 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v26)) {
              return 0;
            }
            unsigned int v20 = v26;
          }
          else
          {
            unsigned int v20 = *v19;
            *(void *)a2 = v19 + 1;
          }
          *((_DWORD *)this + 7) = v20;
        }
        else if (v14 == 22)
        {
          if (v9 != 181) {
            goto LABEL_8;
          }
          unsigned int v26 = 0;
          int v21 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v26)) {
              return 0;
            }
            unsigned int v22 = v26;
          }
          else
          {
            unsigned int v22 = *v21;
            *(void *)a2 = v21 + 1;
          }
          *((_DWORD *)this + 8) = v22;
        }
        else
        {
          if (v14 != 30 || v9 != 245) {
            goto LABEL_8;
          }
          unsigned int v26 = 0;
          uint64_t v15 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v26)) {
              return 0;
            }
            unsigned int v16 = v26;
          }
          else
          {
            unsigned int v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          *((_DWORD *)this + 4) = v16;
        }
      }
      if (v14 == 10) {
        break;
      }
      if (v14 == 20 && v9 == 165)
      {
        unsigned int v26 = 0;
        int v17 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
        {
          if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v26)) {
            return 0;
          }
          unsigned int v18 = v26;
        }
        else
        {
          unsigned int v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        *((_DWORD *)this + 6) = v18;
      }
      else
      {
LABEL_8:
        if (v9) {
          BOOL v11 = (v9 & 7) == 4;
        }
        else {
          BOOL v11 = 1;
        }
        uint64_t v12 = v11;
        if (v11
          || (_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
        {
          return v12;
        }
      }
    }
    if (v9 != 85) {
      goto LABEL_8;
    }
    unsigned int v26 = 0;
    uint64_t v23 = *(unsigned int **)a2;
    if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 4)
    {
      unsigned int v24 = *v23;
      *(void *)a2 = v23 + 1;
      goto LABEL_44;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v26)) {
      return 0;
    }
    unsigned int v24 = v26;
LABEL_44:
    *((_DWORD *)this + 5) = v24;
  }
}

float *CoreML::Specification::NeuralNetworkImageScaler::SerializeWithCachedSizes(float *this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  float v5 = this[5];
  if (v5 != 0.0) {
    this = (float *)_tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)0xA, a2, v5, a3);
  }
  float v6 = v4[6];
  if (v6 != 0.0) {
    this = (float *)_tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)0x14, a2, v6, a3);
  }
  float v7 = v4[7];
  if (v7 != 0.0) {
    this = (float *)_tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)0x15, a2, v7, a3);
  }
  float v8 = v4[8];
  if (v8 != 0.0) {
    this = (float *)_tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)0x16, a2, v8, a3);
  }
  float v9 = v4[4];
  if (v9 != 0.0)
  {
    return (float *)_tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)0x1E, a2, v9, a3);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkImageScaler::ByteSizeLong(CoreML::Specification::NeuralNetworkImageScaler *this)
{
  uint64_t v1 = 6;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  if (*((float *)this + 6) != 0.0) {
    v1 += 6;
  }
  if (*((float *)this + 7) != 0.0) {
    v1 += 6;
  }
  if (*((float *)this + 8) != 0.0) {
    v1 += 6;
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

std::string *CoreML::Specification::NeuralNetworkImageScaler::MergeFrom(std::string *this, const CoreML::Specification::NeuralNetworkImageScaler *a2)
{
  uint64_t v3 = (float *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    v3[4] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    std::runtime_error v3[5] = v6;
  }
  float v7 = *((float *)a2 + 6);
  if (v7 != 0.0) {
    v3[6] = v7;
  }
  float v8 = *((float *)a2 + 7);
  if (v8 != 0.0) {
    v3[7] = v8;
  }
  float v9 = *((float *)a2 + 8);
  if (v9 != 0.0) {
    v3[8] = v9;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkImageScaler::IsInitialized(CoreML::Specification::NeuralNetworkImageScaler *this)
{
  return 1;
}

void *CoreML::Specification::NeuralNetworkImageScaler::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NeuralNetworkImageScaler");
}

CoreML::Specification::NeuralNetworkMeanImage *CoreML::Specification::NeuralNetworkMeanImage::NeuralNetworkMeanImage(CoreML::Specification::NeuralNetworkMeanImage *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75DE50;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::NeuralNetworkMeanImage *)&CoreML::Specification::_NeuralNetworkMeanImage_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F58448(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::NeuralNetworkMeanImage::~NeuralNetworkMeanImage(CoreML::Specification::NeuralNetworkMeanImage *this)
{
  *(void *)this = &unk_26D75DE50;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::NeuralNetworkMeanImage::~NeuralNetworkMeanImage(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::NeuralNetworkMeanImage::New(CoreML::Specification::NeuralNetworkMeanImage *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5855C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::NeuralNetworkMeanImage>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::NeuralNetworkMeanImage>);
  }
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkMeanImage::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

BOOL CoreML::Specification::NeuralNetworkMeanImage::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkMeanImage *this, char **a2, unsigned int a3)
{
  float v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          float v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(_tc_google::protobuf::internal::WireFormatLite::FieldType)2>(1, 0xAu, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        VarintSizeAsIntFallbacunint64_t k = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      signed int v13 = *v5;
      unsigned int v14 = VarintSizeAsIntFallback >> 2;
      int v15 = _tc_google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      int v16 = _tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v16 >= v15) {
        int v17 = v15;
      }
      else {
        int v17 = v16;
      }
      if (v15 == -1) {
        int v17 = v16;
      }
      if (v17 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v14 <= 1) {
          int v18 = 1;
        }
        else {
          int v18 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v28 = 0;
          uint64_t v19 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v28);
            if (!result) {
              return result;
            }
            unsigned int v20 = v28;
          }
          else
          {
            unsigned int v20 = *v19;
            *a2 = (char *)(v19 + 1);
          }
          signed int v21 = *((_DWORD *)this + 4);
          if (v21 == *((_DWORD *)this + 5))
          {
            _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v21 + 1);
            signed int v21 = *v5;
          }
          uint64_t v22 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v21 + 1;
          *(_DWORD *)(v22 + 4 * v21 + 8) = v20;
          --v18;
        }
        while (v18);
      }
    }
    signed int v24 = v13 + v14;
    if ((int)*v5 >= (int)(v13 + v14))
    {
      uint64_t v25 = *((void *)this + 3);
    }
    else
    {
      _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v13 + v14);
      uint64_t v25 = *((void *)this + 3);
      uint64_t v26 = 4 * v24 - 4 * *((int *)this + 4);
      if (v26 >= 1) {
        bzero((void *)(v25 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v26 >> 2) - ((unint64_t)v26 > 3)) + 4);
      }
    }
    unsigned int *v5 = v24;
    uint64_t v27 = v25 + 8;
    if (!v25) {
      uint64_t v27 = 0;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::ReadRaw((_tc_google::protobuf::io::CodedInputStream *)a2, (char *)(v27 + 4 * v13), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    unsigned int *v5 = v13;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::NeuralNetworkMeanImage::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        float v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        float v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *float v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(void *)(v5 + 24);
    if (v13) {
      unsigned int v14 = (_tc_google::protobuf::internal::WireFormatLite *)(v13 + 8);
    }
    else {
      unsigned int v14 = 0;
    }
    int v15 = (const float *)*(unsigned int *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloatArray(v14, v15, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkMeanImage::ByteSizeLong(CoreML::Specification::NeuralNetworkMeanImage *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::NeuralNetworkMeanImage::IsInitialized(CoreML::Specification::NeuralNetworkMeanImage *this)
{
  return 1;
}

void *CoreML::Specification::NeuralNetworkMeanImage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NeuralNetworkMeanImage");
}

CoreML::Specification::NeuralNetworkPreprocessing *CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  *(void *)this = &unk_26D75DEE8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NeuralNetworkPreprocessing *)&CoreML::Specification::_NeuralNetworkPreprocessing_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_223F58A34(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::NeuralNetworkPreprocessing::~NeuralNetworkPreprocessing(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  *(void *)this = &unk_26D75DEE8;
  CoreML::Specification::NeuralNetworkPreprocessing::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::NeuralNetworkPreprocessing::~NeuralNetworkPreprocessing(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
  }
  if (*(_DWORD *)(v1 + 36))
  {
    return CoreML::Specification::NeuralNetworkPreprocessing::clear_preprocessor(v1);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::clear_preprocessor(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 11 || v2 == 10)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

void CoreML::Specification::NeuralNetworkPreprocessing::New(CoreML::Specification::NeuralNetworkPreprocessing *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F58C14(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::NeuralNetworkPreprocessing>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::NeuralNetworkPreprocessing>);
  }
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  return CoreML::Specification::NeuralNetworkPreprocessing::clear_preprocessor(this);
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkPreprocessing *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_26;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_26;
        }
LABEL_8:
        unsigned int v10 = v8 >> 3;
        if (v8 >> 3 == 11)
        {
          if (v8 != 90) {
            goto LABEL_26;
          }
          if (*((_DWORD *)this + 9) != 11)
          {
            CoreML::Specification::NeuralNetworkPreprocessing::clear_preprocessor((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            operator new();
          }
          int v15 = (CoreML::Specification::NeuralNetworkMeanImage *)*((void *)this + 3);
          int v18 = *a2;
          if (*a2 >= a2[1] || *v18 < 0)
          {
            VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacunint64_t k = *v18;
            *a2 = v18 + 1;
          }
          unint64_t v22 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((v22 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v24 = v22;
          uint64_t result = CoreML::Specification::NeuralNetworkMeanImage::MergePartialFromCodedStream(v15, a2, v23);
          if (!result) {
            return result;
          }
          goto LABEL_47;
        }
        if (v10 != 10) {
          break;
        }
        if (v8 != 82) {
          goto LABEL_26;
        }
        if (*((_DWORD *)this + 9) != 10)
        {
          CoreML::Specification::NeuralNetworkPreprocessing::clear_preprocessor((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          operator new();
        }
        int v16 = (CoreML::Specification::NeuralNetworkImageScaler *)*((void *)this + 3);
        unsigned int v20 = *a2;
        if (*a2 >= a2[1] || *v20 < 0)
        {
          int v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v21 < 0) {
            return 0;
          }
        }
        else
        {
          int v21 = *v20;
          *a2 = v20 + 1;
        }
        unint64_t v25 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v21);
        if ((v25 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v24 = v25;
        uint64_t result = CoreML::Specification::NeuralNetworkImageScaler::MergePartialFromCodedStream(v16, (_tc_google::protobuf::io::CodedInputStream *)a2, v26);
        if (!result) {
          return result;
        }
LABEL_47:
        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v24))return 0; {
      }
        }
      if (v10 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      uint64_t v13 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v13 = (std::string *)v13->__r_.__value_.__r.__words[0];
        int64_t size = (const char *)(*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        int64_t size = (const char *)HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v13, size, 0, (uint64_t)"CoreML.Specification.NeuralNetworkPreprocessing.featureName"))return 0; {
    }
      }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F58F40(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::SerializeWithCachedSizes(CoreML::Specification::NeuralNetworkPreprocessing *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(const char **)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  uint64_t v7 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v7, 1, (uint64_t)"CoreML.Specification.NeuralNetworkPreprocessing.featureName");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 2), a2);
  }
LABEL_7:
  int v8 = *((_DWORD *)this + 9);
  if (v8 == 10)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, *((void *)this + 3), a2, a4);
    int v8 = *((_DWORD *)this + 9);
  }
  if (v8 == 11)
  {
    uint64_t v9 = *((void *)this + 3);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xB, v9, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 11)
  {
    unsigned int v10 = (unsigned int *)*((void *)this + 3);
    uint64_t v11 = v10[4];
    uint64_t v12 = 4 * v11;
    if (v11)
    {
      if ((v12 & 0x80000000) != 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v14 = v13 + v12;
    v10[8] = v12;
    void v10[9] = v14;
    uint64_t v8 = (9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v9 = v4 + v14;
LABEL_27:
    uint64_t v4 = v9 + v8 + 1;
    goto LABEL_28;
  }
  if (v5 == 10)
  {
    uint64_t v6 = *((void *)this + 3);
    uint64_t v7 = 6;
    if (*(float *)(v6 + 16) == 0.0) {
      uint64_t v7 = 0;
    }
    if (*(float *)(v6 + 20) != 0.0) {
      v7 += 5;
    }
    if (*(float *)(v6 + 24) != 0.0) {
      v7 += 6;
    }
    if (*(float *)(v6 + 28) != 0.0) {
      v7 += 6;
    }
    if (*(float *)(v6 + 32) != 0.0) {
      v7 += 6;
    }
    *(_DWORD *)(v6 + 36) = v7;
    uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v9 = v4 + v7;
    goto LABEL_27;
  }
LABEL_28:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

std::string *CoreML::Specification::NeuralNetworkPreprocessing::MergeFrom(std::string *this, const CoreML::Specification::NeuralNetworkPreprocessing *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)(v3 + 16);
  uint64_t v6 = *(uint64_t **)(v3 + 16);
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 16), (const std::string *)v5);
  }
LABEL_11:
  int v7 = *((_DWORD *)a2 + 9);
  if (v7 == 11)
  {
    if (*(_DWORD *)(v3 + 36) != 11)
    {
      CoreML::Specification::NeuralNetworkPreprocessing::clear_preprocessor(v3);
      *(_DWORD *)(v3 + 36) = 11;
      operator new();
    }
    uint64_t v9 = (const CoreML::Specification::V5::TensorValue_RepeatedFloats *)*((void *)a2 + 3);
    uint64_t v11 = *(unint64_t **)(v3 + 24);
    return (std::string *)CoreML::Specification::V5::TensorValue_RepeatedFloats::MergeFrom(v11, v9);
  }
  else if (v7 == 10)
  {
    if (*(_DWORD *)(v3 + 36) != 10)
    {
      CoreML::Specification::NeuralNetworkPreprocessing::clear_preprocessor(v3);
      *(_DWORD *)(v3 + 36) = 10;
      operator new();
    }
    uint64_t v8 = (const CoreML::Specification::NeuralNetworkImageScaler *)*((void *)a2 + 3);
    unsigned int v10 = *(std::string **)(v3 + 24);
    return CoreML::Specification::NeuralNetworkImageScaler::MergeFrom(v10, v8);
  }
  return this;
}

void sub_223F5934C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::IsInitialized(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  return 1;
}

void *CoreML::Specification::NeuralNetworkPreprocessing::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NeuralNetworkPreprocessing");
}

CoreML::Specification::ActivationReLU *CoreML::Specification::ActivationReLU::ActivationReLU(CoreML::Specification::ActivationReLU *this)
{
  *(void *)this = &unk_26D75DF80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationReLU *)&CoreML::Specification::_ActivationReLU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F59404(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationReLU::~ActivationReLU(CoreML::Specification::ActivationReLU *this)
{
  *(void *)this = &unk_26D75DF80;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75DF80;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationReLU::New(CoreML::Specification::ActivationReLU *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F59518(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationReLU>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationReLU>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationReLU *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::ActivationReLU::ByteSizeLong(CoreML::Specification::ActivationReLU *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::ActivationReLU::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationReLU::IsInitialized(CoreML::Specification::ActivationReLU *this)
{
  return 1;
}

void *CoreML::Specification::ActivationReLU::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationReLU");
}

CoreML::Specification::ActivationLeakyReLU *CoreML::Specification::ActivationLeakyReLU::ActivationLeakyReLU(CoreML::Specification::ActivationLeakyReLU *this)
{
  *(void *)this = &unk_26D75E018;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationLeakyReLU *)&CoreML::Specification::_ActivationLeakyReLU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F59678(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationLeakyReLU::~ActivationLeakyReLU(CoreML::Specification::ActivationLeakyReLU *this)
{
  *(void *)this = &unk_26D75E018;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E018;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationLeakyReLU::New(CoreML::Specification::ActivationLeakyReLU *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F59788(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationLeakyReLU>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationLeakyReLU>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationLeakyReLU::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ActivationLeakyReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationLeakyReLU *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::ActivationLeakyReLU::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationLeakyReLU::ByteSizeLong(CoreML::Specification::ActivationLeakyReLU *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::ActivationLeakyReLU::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::ActivationLeakyReLU::IsInitialized(CoreML::Specification::ActivationLeakyReLU *this)
{
  return 1;
}

void *CoreML::Specification::ActivationLeakyReLU::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationLeakyReLU");
}

CoreML::Specification::ActivationTanh *CoreML::Specification::ActivationTanh::ActivationTanh(CoreML::Specification::ActivationTanh *this)
{
  *(void *)this = &unk_26D75E0B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationTanh *)&CoreML::Specification::_ActivationTanh_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F599CC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationTanh::~ActivationTanh(CoreML::Specification::ActivationTanh *this)
{
  *(void *)this = &unk_26D75E0B0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E0B0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationTanh::New(CoreML::Specification::ActivationTanh *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F59AE0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationTanh>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationTanh>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationTanh::MergePartialFromCodedStream(CoreML::Specification::ActivationTanh *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::ActivationTanh::ByteSizeLong(CoreML::Specification::ActivationTanh *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::ActivationTanh::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationTanh::IsInitialized(CoreML::Specification::ActivationTanh *this)
{
  return 1;
}

void *CoreML::Specification::ActivationTanh::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationTanh");
}

CoreML::Specification::ActivationScaledTanh *CoreML::Specification::ActivationScaledTanh::ActivationScaledTanh(CoreML::Specification::ActivationScaledTanh *this)
{
  *(void *)this = &unk_26D75E148;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationScaledTanh *)&CoreML::Specification::_ActivationScaledTanh_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F59C44(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationScaledTanh::~ActivationScaledTanh(CoreML::Specification::ActivationScaledTanh *this)
{
  *(void *)this = &unk_26D75E148;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E148;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationScaledTanh::New(CoreML::Specification::ActivationScaledTanh *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F59D54(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationScaledTanh>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationScaledTanh>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationScaledTanh::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ActivationScaledTanh::MergePartialFromCodedStream(CoreML::Specification::ActivationScaledTanh *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        float v5 = *a2;
        if (*a2 < a2[1]) {
          break;
        }
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0) {
          goto LABEL_7;
        }
LABEL_20:
        if (v7) {
          BOOL v14 = (v7 & 7) == 4;
        }
        else {
          BOOL v14 = 1;
        }
        uint64_t v15 = v14;
        if (v14
          || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
        {
          return v15;
        }
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_20;
      }
LABEL_7:
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        goto LABEL_20;
      }
      unsigned int v18 = 0;
      BOOL v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v18)) {
          return 0;
        }
        unsigned int v11 = v18;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
    if (v7 != 21) {
      goto LABEL_20;
    }
    unsigned int v17 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_19;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17)) {
      return 0;
    }
    unsigned int v13 = v17;
LABEL_19:
    *((_DWORD *)this + 5) = v13;
  }
}

uint64_t CoreML::Specification::ActivationScaledTanh::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  float v5 = *(float *)(this + 16);
  if (v5 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  }
  float v6 = *(float *)(v4 + 20);
  if (v6 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationScaledTanh::ByteSizeLong(CoreML::Specification::ActivationScaledTanh *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::ActivationScaledTanh::MergeFrom(std::string *this, const CoreML::Specification::ActivationScaledTanh *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  return this;
}

uint64_t CoreML::Specification::ActivationScaledTanh::IsInitialized(CoreML::Specification::ActivationScaledTanh *this)
{
  return 1;
}

void *CoreML::Specification::ActivationScaledTanh::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationScaledTanh");
}

CoreML::Specification::ActivationSigmoid *CoreML::Specification::ActivationSigmoid::ActivationSigmoid(CoreML::Specification::ActivationSigmoid *this)
{
  *(void *)this = &unk_26D75E1E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSigmoid *)&CoreML::Specification::_ActivationSigmoid_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F5A060(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationSigmoid::~ActivationSigmoid(CoreML::Specification::ActivationSigmoid *this)
{
  *(void *)this = &unk_26D75E1E0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E1E0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationSigmoid::New(CoreML::Specification::ActivationSigmoid *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5A174(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationSigmoid>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationSigmoid>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationSigmoid::MergePartialFromCodedStream(CoreML::Specification::ActivationSigmoid *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::ActivationSigmoid::ByteSizeLong(CoreML::Specification::ActivationSigmoid *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::ActivationSigmoid::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationSigmoid::IsInitialized(CoreML::Specification::ActivationSigmoid *this)
{
  return 1;
}

void *CoreML::Specification::ActivationSigmoid::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationSigmoid");
}

CoreML::Specification::ActivationLinear *CoreML::Specification::ActivationLinear::ActivationLinear(CoreML::Specification::ActivationLinear *this)
{
  *(void *)this = &unk_26D75E278;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationLinear *)&CoreML::Specification::_ActivationLinear_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F5A2D8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationLinear::~ActivationLinear(CoreML::Specification::ActivationLinear *this)
{
  *(void *)this = &unk_26D75E278;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E278;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationLinear::New(CoreML::Specification::ActivationLinear *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5A3E8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationLinear>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationLinear>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationLinear::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ActivationLinear::MergePartialFromCodedStream(CoreML::Specification::ActivationLinear *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        float v5 = *a2;
        if (*a2 < a2[1]) {
          break;
        }
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0) {
          goto LABEL_7;
        }
LABEL_20:
        if (v7) {
          BOOL v14 = (v7 & 7) == 4;
        }
        else {
          BOOL v14 = 1;
        }
        uint64_t v15 = v14;
        if (v14
          || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
        {
          return v15;
        }
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_20;
      }
LABEL_7:
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        goto LABEL_20;
      }
      unsigned int v18 = 0;
      BOOL v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v18)) {
          return 0;
        }
        unsigned int v11 = v18;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
    if (v7 != 21) {
      goto LABEL_20;
    }
    unsigned int v17 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_19;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17)) {
      return 0;
    }
    unsigned int v13 = v17;
LABEL_19:
    *((_DWORD *)this + 5) = v13;
  }
}

uint64_t CoreML::Specification::ActivationLinear::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  float v5 = *(float *)(this + 16);
  if (v5 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  }
  float v6 = *(float *)(v4 + 20);
  if (v6 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationLinear::ByteSizeLong(CoreML::Specification::ActivationLinear *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

uint64_t CoreML::Specification::ActivationLinear::IsInitialized(CoreML::Specification::ActivationLinear *this)
{
  return 1;
}

void *CoreML::Specification::ActivationLinear::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationLinear");
}

CoreML::Specification::ActivationSigmoidHard *CoreML::Specification::ActivationSigmoidHard::ActivationSigmoidHard(CoreML::Specification::ActivationSigmoidHard *this)
{
  *(void *)this = &unk_26D75E310;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSigmoidHard *)&CoreML::Specification::_ActivationSigmoidHard_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F5A6A0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationSigmoidHard::~ActivationSigmoidHard(CoreML::Specification::ActivationSigmoidHard *this)
{
  *(void *)this = &unk_26D75E310;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E310;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationSigmoidHard::New(CoreML::Specification::ActivationSigmoidHard *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5A7B0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationSigmoidHard>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationSigmoidHard>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationSigmoidHard::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ActivationSigmoidHard::MergePartialFromCodedStream(CoreML::Specification::ActivationSigmoidHard *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        float v5 = *a2;
        if (*a2 < a2[1]) {
          break;
        }
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0) {
          goto LABEL_7;
        }
LABEL_20:
        if (v7) {
          BOOL v14 = (v7 & 7) == 4;
        }
        else {
          BOOL v14 = 1;
        }
        uint64_t v15 = v14;
        if (v14
          || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
        {
          return v15;
        }
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_20;
      }
LABEL_7:
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        goto LABEL_20;
      }
      unsigned int v18 = 0;
      BOOL v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v18)) {
          return 0;
        }
        unsigned int v11 = v18;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
    if (v7 != 21) {
      goto LABEL_20;
    }
    unsigned int v17 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_19;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17)) {
      return 0;
    }
    unsigned int v13 = v17;
LABEL_19:
    *((_DWORD *)this + 5) = v13;
  }
}

uint64_t CoreML::Specification::ActivationSigmoidHard::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  float v5 = *(float *)(this + 16);
  if (v5 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  }
  float v6 = *(float *)(v4 + 20);
  if (v6 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationSigmoidHard::ByteSizeLong(CoreML::Specification::ActivationSigmoidHard *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

uint64_t CoreML::Specification::ActivationSigmoidHard::IsInitialized(CoreML::Specification::ActivationSigmoidHard *this)
{
  return 1;
}

void *CoreML::Specification::ActivationSigmoidHard::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationSigmoidHard");
}

CoreML::Specification::ActivationPReLU *CoreML::Specification::ActivationPReLU::ActivationPReLU(CoreML::Specification::ActivationPReLU *this)
{
  *(void *)this = &unk_26D75E3A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationPReLU *)&CoreML::Specification::_ActivationPReLU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F5AA68(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationPReLU::~ActivationPReLU(CoreML::Specification::ActivationPReLU *this)
{
  *(void *)this = &unk_26D75E3A8;
  if (this != (CoreML::Specification::ActivationPReLU *)&CoreML::Specification::_ActivationPReLU_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ActivationPReLU::~ActivationPReLU(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationPReLU::New(CoreML::Specification::ActivationPReLU *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5AB90(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationPReLU>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationPReLU>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationPReLU::Clear(CoreML::Specification::ActivationPReLU *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  return result;
}

BOOL CoreML::Specification::ActivationPReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationPReLU *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
      uint64_t v12 = *a2;
      if (*a2 >= a2[1] || *v12 < 0)
      {
        VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        VarintSizeAsIntFallbacunint64_t k = *v12;
        *a2 = v12 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v16 = v14;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v11, (_tc_google::protobuf::io::CodedInputStream *)a2, v15);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v16))
        {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F5AD70(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::ActivationPReLU::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::_ActivationPReLU_default_instance_)
  {
    uint64_t v5 = this[2];
    if (v5) {
      return (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
    }
  }
  return this;
}

CoreML::Specification::WeightParams *CoreML::Specification::ActivationPReLU::ByteSizeLong(CoreML::Specification::ActivationPReLU *this)
{
  if (this == (CoreML::Specification::ActivationPReLU *)&CoreML::Specification::_ActivationPReLU_default_instance_)
  {
    BOOL result = 0;
  }
  else
  {
    BOOL result = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(result);
      BOOL result = (CoreML::Specification::WeightParams *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

std::string *CoreML::Specification::ActivationPReLU::MergeFrom(std::string *this, const CoreML::Specification::ActivationPReLU *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::ActivationPReLU *)&CoreML::Specification::_ActivationPReLU_default_instance_
    && v5 != 0)
  {
    if (!v3->__r_.__value_.__r.__words[2]) {
      operator new();
    }
    if (v5) {
      unint64_t v7 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 2);
    }
    else {
      unint64_t v7 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
    }
    uint64_t v8 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
    return (std::string *)CoreML::Specification::WeightParams::MergeFrom(v8, v7);
  }
  return this;
}

void sub_223F5AEE4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::WeightParams::MergeFrom(unint64_t *this, const CoreML::Specification::WeightParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<float>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 4 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  uint64_t v6 = *((void *)a2 + 5);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  this = v3 + 5;
  unint64_t v7 = (uint64_t *)v3[5];
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[5], (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 6);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  this = v3 + 6;
  uint64_t v9 = (uint64_t *)v3[6];
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[6], (const std::string *)v8);
  }
LABEL_21:
  uint64_t v10 = *((void *)a2 + 7);
  if (*(char *)(v10 + 23) < 0)
  {
    if (!*(void *)(v10 + 8)) {
      goto LABEL_29;
    }
  }
  else if (!*(unsigned char *)(v10 + 23))
  {
    goto LABEL_29;
  }
  this = v3 + 7;
  unsigned int v11 = (uint64_t *)v3[7];
  if (v11 != (uint64_t *)v10)
  {
    if (v11 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[7], (const std::string *)v10);
  }
LABEL_29:
  if (a2 != (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_
    && *((void *)a2 + 8))
  {
    uint64_t v12 = (std::string *)v3[8];
    if (!v12) {
      operator new();
    }
    this = (unint64_t *)CoreML::Specification::QuantizationParams::MergeFrom(v12, *((const CoreML::Specification::QuantizationParams **)a2 + 8));
  }
  if (*((unsigned char *)a2 + 72)) {
    *((unsigned char *)v3 + 72) = 1;
  }
  return this;
}

void sub_223F5B0F8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationPReLU::IsInitialized(CoreML::Specification::ActivationPReLU *this)
{
  return 1;
}

void *CoreML::Specification::ActivationPReLU::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationPReLU");
}

CoreML::Specification::ActivationELU *CoreML::Specification::ActivationELU::ActivationELU(CoreML::Specification::ActivationELU *this)
{
  *(void *)this = &unk_26D75E440;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationELU *)&CoreML::Specification::_ActivationELU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F5B194(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationELU::~ActivationELU(CoreML::Specification::ActivationELU *this)
{
  *(void *)this = &unk_26D75E440;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E440;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationELU::New(CoreML::Specification::ActivationELU *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5B2A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationELU>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationELU>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationELU::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ActivationELU::MergePartialFromCodedStream(CoreML::Specification::ActivationELU *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::ActivationELU::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationELU::ByteSizeLong(CoreML::Specification::ActivationELU *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::ActivationELU::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::ActivationELU::IsInitialized(CoreML::Specification::ActivationELU *this)
{
  return 1;
}

void *CoreML::Specification::ActivationELU::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationELU");
}

CoreML::Specification::ActivationThresholdedReLU *CoreML::Specification::ActivationThresholdedReLU::ActivationThresholdedReLU(CoreML::Specification::ActivationThresholdedReLU *this)
{
  *(void *)this = &unk_26D75E4D8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationThresholdedReLU *)&CoreML::Specification::_ActivationThresholdedReLU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F5B4E8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationThresholdedReLU::~ActivationThresholdedReLU(CoreML::Specification::ActivationThresholdedReLU *this)
{
  *(void *)this = &unk_26D75E4D8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E4D8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationThresholdedReLU::New(CoreML::Specification::ActivationThresholdedReLU *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5B5F8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationThresholdedReLU>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationThresholdedReLU>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationThresholdedReLU::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ActivationThresholdedReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationThresholdedReLU *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::ActivationThresholdedReLU::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationThresholdedReLU::ByteSizeLong(CoreML::Specification::ActivationThresholdedReLU *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::ActivationThresholdedReLU::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::ActivationThresholdedReLU::IsInitialized(CoreML::Specification::ActivationThresholdedReLU *this)
{
  return 1;
}

void *CoreML::Specification::ActivationThresholdedReLU::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationThresholdedReLU");
}

CoreML::Specification::ActivationSoftsign *CoreML::Specification::ActivationSoftsign::ActivationSoftsign(CoreML::Specification::ActivationSoftsign *this)
{
  *(void *)this = &unk_26D75E570;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSoftsign *)&CoreML::Specification::_ActivationSoftsign_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F5B83C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationSoftsign::~ActivationSoftsign(CoreML::Specification::ActivationSoftsign *this)
{
  *(void *)this = &unk_26D75E570;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E570;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationSoftsign::New(CoreML::Specification::ActivationSoftsign *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5B94C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationSoftsign>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationSoftsign>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationSoftsign::MergePartialFromCodedStream(CoreML::Specification::ActivationSoftsign *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::ActivationSoftsign::ByteSizeLong(CoreML::Specification::ActivationSoftsign *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::ActivationSoftsign::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationSoftsign::IsInitialized(CoreML::Specification::ActivationSoftsign *this)
{
  return 1;
}

void *CoreML::Specification::ActivationSoftsign::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationSoftsign");
}

CoreML::Specification::ActivationSoftplus *CoreML::Specification::ActivationSoftplus::ActivationSoftplus(CoreML::Specification::ActivationSoftplus *this)
{
  *(void *)this = &unk_26D75E608;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSoftplus *)&CoreML::Specification::_ActivationSoftplus_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F5BAAC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationSoftplus::~ActivationSoftplus(CoreML::Specification::ActivationSoftplus *this)
{
  *(void *)this = &unk_26D75E608;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75E608;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ActivationSoftplus::New(CoreML::Specification::ActivationSoftplus *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5BBBC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationSoftplus>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationSoftplus>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationSoftplus::MergePartialFromCodedStream(CoreML::Specification::ActivationSoftplus *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::ActivationSoftplus::ByteSizeLong(CoreML::Specification::ActivationSoftplus *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::ActivationSoftplus::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationSoftplus::IsInitialized(CoreML::Specification::ActivationSoftplus *this)
{
  return 1;
}

void *CoreML::Specification::ActivationSoftplus::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationSoftplus");
}

CoreML::Specification::ActivationParametricSoftplus *CoreML::Specification::ActivationParametricSoftplus::ActivationParametricSoftplus(CoreML::Specification::ActivationParametricSoftplus *this)
{
  *(void *)this = &unk_26D75E6A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationParametricSoftplus *)&CoreML::Specification::_ActivationParametricSoftplus_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F5BD20(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationParametricSoftplus::~ActivationParametricSoftplus(CoreML::Specification::ActivationParametricSoftplus *this)
{
  *(void *)this = &unk_26D75E6A0;
  CoreML::Specification::ActivationParametricSoftplus::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ActivationParametricSoftplus::~ActivationParametricSoftplus(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ActivationParametricSoftplus::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_ActivationParametricSoftplus_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      float v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

void CoreML::Specification::ActivationParametricSoftplus::New(CoreML::Specification::ActivationParametricSoftplus *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5BEB4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationParametricSoftplus>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationParametricSoftplus>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationParametricSoftplus::Clear(CoreML::Specification::ActivationParametricSoftplus *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

BOOL CoreML::Specification::ActivationParametricSoftplus::MergePartialFromCodedStream(CoreML::Specification::ActivationParametricSoftplus *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      BOOL v10 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        VarintSizeAsIntFallbacunint64_t k = *v11;
        *a2 = v11 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v16 = v14;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v10, (_tc_google::protobuf::io::CodedInputStream *)a2, v15);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v16))
        {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      BOOL v10 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F5C108(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::ActivationParametricSoftplus::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::_ActivationParametricSoftplus_default_instance_)
  {
    float v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7)
    {
      return (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::ActivationParametricSoftplus::ByteSizeLong(CoreML::Specification::ActivationParametricSoftplus *this)
{
  if (this == (CoreML::Specification::ActivationParametricSoftplus *)&CoreML::Specification::_ActivationParametricSoftplus_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    float v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

std::string *CoreML::Specification::ActivationParametricSoftplus::MergeFrom(std::string *this, const CoreML::Specification::ActivationParametricSoftplus *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::ActivationParametricSoftplus *)&CoreML::Specification::_ActivationParametricSoftplus_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      float v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 3);
      int data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      return (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_223F5C350(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationParametricSoftplus::IsInitialized(CoreML::Specification::ActivationParametricSoftplus *this)
{
  return 1;
}

void *CoreML::Specification::ActivationParametricSoftplus::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationParametricSoftplus");
}

CoreML::Specification::ActivationParams *CoreML::Specification::ActivationParams::ActivationParams(CoreML::Specification::ActivationParams *this)
{
  *(void *)this = &unk_26D75E738;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationParams *)&CoreML::Specification::_ActivationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F5C3F0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationParams::~ActivationParams(CoreML::Specification::ActivationParams *this)
{
  *(void *)this = &unk_26D75E738;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ActivationParams::~ActivationParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::ActivationParams::clear_NonlinearityType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 <= 30)
  {
    if (v2 > 19)
    {
      if (v2 != 20 && v2 != 25 && v2 != 30) {
        goto LABEL_24;
      }
    }
    else if (v2 != 5 && v2 != 10 && v2 != 15)
    {
      goto LABEL_24;
    }
  }
  else if (v2 <= 49)
  {
    if (v2 != 31 && v2 != 40 && v2 != 41) {
      goto LABEL_24;
    }
  }
  else if (v2 > 69)
  {
    if (v2 != 70 && v2 != 71) {
      goto LABEL_24;
    }
  }
  else if (v2 != 50 && v2 != 60)
  {
    goto LABEL_24;
  }
  this = *(void *)(this + 16);
  if (this) {
    this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
  }
LABEL_24:
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

uint64_t *CoreML::Specification::ActivationParams::default_instance(CoreML::Specification::ActivationParams *this)
{
  return &CoreML::Specification::_ActivationParams_default_instance_;
}

void CoreML::Specification::ActivationParams::New(CoreML::Specification::ActivationParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5C600(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ActivationParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ActivationParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ActivationParams::MergePartialFromCodedStream(CoreML::Specification::ActivationParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        uint64_t v8 = 0;
      }
      else
      {
        uint64_t v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
          goto LABEL_16;
        }
        if ((unint64_t)v7 < v6)
        {
          int v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(void *)a2 = v5 + 2;
            unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_16;
          }
        }
      }
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unsigned int v13 = v9 >> 3;
      if (v9 >> 3 <= 0x1E) {
        break;
      }
      if (v9 >> 3 <= 0x31)
      {
        if (v13 != 31)
        {
          if (v13 == 40)
          {
            if (v9 == 66)
            {
              if (*((_DWORD *)this + 7) != 40)
              {
                CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
                *((_DWORD *)this + 7) = 40;
                operator new();
              }
              unsigned int v26 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
              {
                VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                VarintSizeAsIntFallbacunint64_t k = *v26;
                *(void *)a2 = v26 + 1;
              }
              unint64_t v56 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
              if ((v56 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v50 = v56;
              uint64_t result = CoreML::Specification::ActivationSigmoid::MergePartialFromCodedStream((CoreML::Specification::ActivationSigmoid *)v56, (char **)a2, v57);
              if (!result) {
                return result;
              }
              goto LABEL_138;
            }
            goto LABEL_8;
          }
          if (v13 != 41 || v9 != 74) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 7) != 41)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 41;
            operator new();
          }
          unsigned int v17 = (CoreML::Specification::ActivationSigmoidHard *)*((void *)this + 2);
          uint64_t v34 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v34 < 0)
          {
            int v35 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v35 < 0) {
              return 0;
            }
          }
          else
          {
            int v35 = *v34;
            *(void *)a2 = v34 + 1;
          }
          unint64_t v65 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v35);
          if ((v65 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v64 = v65;
          uint64_t result = CoreML::Specification::ActivationSigmoidHard::MergePartialFromCodedStream(v17, (char **)a2, v66);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        if (v9 == 250)
        {
          if (*((_DWORD *)this + 7) != 31)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 31;
            operator new();
          }
          unint64_t v25 = (CoreML::Specification::ActivationScaledTanh *)*((void *)this + 2);
          uint64_t v42 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v42 < 0)
          {
            int v43 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v43 < 0) {
              return 0;
            }
          }
          else
          {
            int v43 = *v42;
            *(void *)a2 = v42 + 1;
          }
          unint64_t v73 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v43);
          if ((v73 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v64 = v73;
          uint64_t result = CoreML::Specification::ActivationScaledTanh::MergePartialFromCodedStream(v25, (char **)a2, v74);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        goto LABEL_8;
      }
      if (v9 >> 3 > 0x45)
      {
        if (v13 == 70)
        {
          if (v9 == 50)
          {
            if (*((_DWORD *)this + 7) != 70)
            {
              CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
              *((_DWORD *)this + 7) = 70;
              operator new();
            }
            unsigned int v30 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
            {
              int v31 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v31 < 0) {
                return 0;
              }
            }
            else
            {
              int v31 = *v30;
              *(void *)a2 = v30 + 1;
            }
            unint64_t v58 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v31);
            if ((v58 & 0x8000000000000000) != 0) {
              return 0;
            }
            int v50 = v58;
            uint64_t result = CoreML::Specification::ActivationSoftplus::MergePartialFromCodedStream((CoreML::Specification::ActivationSoftplus *)v58, (char **)a2, v59);
            if (!result) {
              return result;
            }
            goto LABEL_138;
          }
          goto LABEL_8;
        }
        if (v13 != 71 || v9 != 58) {
          goto LABEL_8;
        }
        if (*((_DWORD *)this + 7) != 71)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 71;
          operator new();
        }
        unsigned int v20 = (CoreML::Specification::ActivationParametricSoftplus *)*((void *)this + 2);
        uint64_t v36 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v36 < 0)
        {
          int v37 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v37 < 0) {
            return 0;
          }
        }
        else
        {
          int v37 = *v36;
          *(void *)a2 = v36 + 1;
        }
        unint64_t v67 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v37);
        if ((v67 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v64 = v67;
        uint64_t result = CoreML::Specification::ActivationParametricSoftplus::MergePartialFromCodedStream(v20, (char **)a2, v68);
        if (!result) {
          return result;
        }
        goto LABEL_170;
      }
      if (v13 == 50)
      {
        if (v9 == 146)
        {
          if (*((_DWORD *)this + 7) != 50)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 50;
            operator new();
          }
          int v21 = (CoreML::Specification::ActivationELU *)*((void *)this + 2);
          unsigned int v38 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v38 < 0)
          {
            int v39 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v39 < 0) {
              return 0;
            }
          }
          else
          {
            int v39 = *v38;
            *(void *)a2 = v38 + 1;
          }
          unint64_t v69 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v39);
          if ((v69 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v64 = v69;
          uint64_t result = CoreML::Specification::ActivationELU::MergePartialFromCodedStream(v21, (char **)a2, v70);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        goto LABEL_8;
      }
      if (v13 != 60 || v9 != 226) {
        goto LABEL_8;
      }
      if (*((_DWORD *)this + 7) != 60)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 60;
        operator new();
      }
      unint64_t v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        int v15 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v15 < 0) {
          return 0;
        }
      }
      else
      {
        int v15 = *v14;
        *(void *)a2 = v14 + 1;
      }
      unint64_t v48 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v15);
      if ((v48 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v50 = v48;
      uint64_t result = CoreML::Specification::ActivationSoftsign::MergePartialFromCodedStream((CoreML::Specification::ActivationSoftsign *)v48, (char **)a2, v49);
      if (!result) {
        return result;
      }
LABEL_138:
      size_t v60 = a2;
      int v61 = v50;
LABEL_171:
      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v60, v61)) {
        return 0;
      }
    }
    if (v9 >> 3 > 0x13)
    {
      if (v13 == 20)
      {
        if (v9 == 162)
        {
          if (*((_DWORD *)this + 7) != 20)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 20;
            operator new();
          }
          unsigned int v28 = (CoreML::Specification::ActivationThresholdedReLU *)*((void *)this + 2);
          int v44 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v44 < 0)
          {
            int v45 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v45 < 0) {
              return 0;
            }
          }
          else
          {
            int v45 = *v44;
            *(void *)a2 = v44 + 1;
          }
          unint64_t v75 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v45);
          if ((v75 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v64 = v75;
          uint64_t result = CoreML::Specification::ActivationThresholdedReLU::MergePartialFromCodedStream(v28, (char **)a2, v76);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
      }
      else if (v13 == 25)
      {
        if (v9 == 202)
        {
          if (*((_DWORD *)this + 7) != 25)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 25;
            operator new();
          }
          unint64_t v29 = (CoreML::Specification::ActivationPReLU *)*((void *)this + 2);
          unint64_t v46 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v46 < 0)
          {
            int v47 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v47 < 0) {
              return 0;
            }
          }
          else
          {
            int v47 = *v46;
            *(void *)a2 = v46 + 1;
          }
          unint64_t v77 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v47);
          if ((v77 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v64 = v77;
          uint64_t result = CoreML::Specification::ActivationPReLU::MergePartialFromCodedStream(v29, (char **)a2, v78);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
      }
      else if (v13 == 30 && v9 == 242)
      {
        if (*((_DWORD *)this + 7) != 30)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 30;
          operator new();
        }
        unsigned int v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int v19 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0) {
            return 0;
          }
        }
        else
        {
          int v19 = *v18;
          *(void *)a2 = v18 + 1;
        }
        unint64_t v52 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v19);
        if ((v52 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v50 = v52;
        uint64_t result = CoreML::Specification::ActivationTanh::MergePartialFromCodedStream((CoreML::Specification::ActivationTanh *)v52, (char **)a2, v53);
        if (!result) {
          return result;
        }
        goto LABEL_138;
      }
      goto LABEL_8;
    }
    if (v13 != 5)
    {
      if (v13 == 10)
      {
        if (v9 == 82)
        {
          if (*((_DWORD *)this + 7) != 10)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 10;
            operator new();
          }
          unsigned int v23 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
          {
            int v24 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v24 < 0) {
              return 0;
            }
          }
          else
          {
            int v24 = *v23;
            *(void *)a2 = v23 + 1;
          }
          unint64_t v54 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v24);
          if ((v54 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v50 = v54;
          uint64_t result = CoreML::Specification::ActivationReLU::MergePartialFromCodedStream((CoreML::Specification::ActivationReLU *)v54, (char **)a2, v55);
          if (!result) {
            return result;
          }
          goto LABEL_138;
        }
        goto LABEL_8;
      }
      if (v13 != 15 || v9 != 122) {
        goto LABEL_8;
      }
      if (*((_DWORD *)this + 7) != 15)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 15;
        operator new();
      }
      int v16 = (CoreML::Specification::ActivationLeakyReLU *)*((void *)this + 2);
      unsigned int v32 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v32 < 0)
      {
        int v33 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v33 < 0) {
          return 0;
        }
      }
      else
      {
        int v33 = *v32;
        *(void *)a2 = v32 + 1;
      }
      unint64_t v62 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v33);
      if ((v62 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v64 = v62;
      uint64_t result = CoreML::Specification::ActivationLeakyReLU::MergePartialFromCodedStream(v16, (char **)a2, v63);
      if (!result) {
        return result;
      }
LABEL_170:
      size_t v60 = a2;
      int v61 = v64;
      goto LABEL_171;
    }
    if (v9 == 42)
    {
      if (*((_DWORD *)this + 7) != 5)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 5;
        operator new();
      }
      unint64_t v22 = (CoreML::Specification::ActivationLinear *)*((void *)this + 2);
      uint64_t v40 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v40 < 0)
      {
        int v41 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v41 < 0) {
          return 0;
        }
      }
      else
      {
        int v41 = *v40;
        *(void *)a2 = v40 + 1;
      }
      unint64_t v71 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v41);
      if ((v71 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v64 = v71;
      uint64_t result = CoreML::Specification::ActivationLinear::MergePartialFromCodedStream(v22, (char **)a2, v72);
      if (!result) {
        return result;
      }
      goto LABEL_170;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F5D05C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 5)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)5, *(void *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 10)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 15)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xF, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 20)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 25)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x19, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 30)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1E, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 31)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1F, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 40)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x28, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 41)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x29, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 50)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x32, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 60)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3C, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 70)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x46, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 71)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x47, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::ActivationParams::ByteSizeLong(CoreML::Specification::ActivationParams *this)
{
  uint64_t result = 0;
  int v3 = *((_DWORD *)this + 7);
  if (v3 <= 30)
  {
    if (v3 <= 19)
    {
      switch(v3)
      {
        case 5:
          uint64_t v10 = *((void *)this + 2);
          uint64_t v11 = 5;
          if (*(float *)(v10 + 16) == 0.0) {
            uint64_t v11 = 0;
          }
          if (*(float *)(v10 + 20) != 0.0) {
            v11 += 5;
          }
          *(_DWORD *)(v10 + 24) = v11;
          uint64_t result = v11 + 2;
          break;
        case 10:
          *(_DWORD *)(*((void *)this + 2) + 16) = 0;
          uint64_t result = 2;
          break;
        case 15:
          uint64_t v4 = *((void *)this + 2);
          uint64_t v5 = 5;
          if (*(float *)(v4 + 16) == 0.0) {
            uint64_t v5 = 0;
          }
          *(_DWORD *)(v4 + 2CoreML::Specification::Identity::New(this, 0) = v5;
          uint64_t result = v5 | 2;
          break;
      }
      goto LABEL_42;
    }
    if (v3 == 20)
    {
LABEL_30:
      uint64_t v9 = *((void *)this + 2);
      uint64_t v7 = 5;
      if (*(float *)(v9 + 16) == 0.0) {
        uint64_t v7 = 0;
      }
      *(_DWORD *)(v9 + 2CoreML::Specification::Identity::New(this, 0) = v7;
LABEL_33:
      uint64_t result = v7 + 3;
      goto LABEL_42;
    }
    if (v3 == 25)
    {
      uint64_t v8 = CoreML::Specification::ActivationPReLU::ByteSizeLong(*((CoreML::Specification::ActivationPReLU **)this + 2));
      goto LABEL_41;
    }
    if (v3 != 30) {
      goto LABEL_42;
    }
    goto LABEL_29;
  }
  if (v3 <= 49)
  {
    if (v3 != 31)
    {
      if (v3 == 40) {
        goto LABEL_29;
      }
      if (v3 != 41) {
        goto LABEL_42;
      }
    }
    uint64_t v6 = *((void *)this + 2);
    uint64_t v7 = 5;
    if (*(float *)(v6 + 16) == 0.0) {
      uint64_t v7 = 0;
    }
    if (*(float *)(v6 + 20) != 0.0) {
      v7 += 5;
    }
    *(_DWORD *)(v6 + 24) = v7;
    goto LABEL_33;
  }
  if (v3 <= 69)
  {
    if (v3 != 50)
    {
      if (v3 != 60) {
        goto LABEL_42;
      }
      goto LABEL_29;
    }
    goto LABEL_30;
  }
  if (v3 == 70)
  {
LABEL_29:
    *(_DWORD *)(*((void *)this + 2) + 16) = 0;
    uint64_t result = 3;
    goto LABEL_42;
  }
  if (v3 == 71)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)CoreML::Specification::ActivationParametricSoftplus::ByteSizeLong(*((CoreML::Specification::ActivationParametricSoftplus **)this + 2));
LABEL_41:
    uint64_t result = (uint64_t)v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_42:
  *((_DWORD *)this + 6) = result;
  return result;
}

std::string *CoreML::Specification::ActivationParams::MergeFrom(std::string *this, const CoreML::Specification::ActivationParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 > 30)
  {
    if (v5 > 49)
    {
      if (v5 <= 69)
      {
        if (v5 != 50)
        {
          if (v5 != 60) {
            return this;
          }
          if (*(_DWORD *)(v3 + 28) != 60)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
            *(_DWORD *)(v3 + 28) = 60;
            operator new();
          }
          goto LABEL_48;
        }
        if (*(_DWORD *)(v3 + 28) != 50)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
          *(_DWORD *)(v3 + 28) = 50;
          operator new();
        }
        goto LABEL_41;
      }
      if (v5 != 70)
      {
        if (v5 == 71)
        {
          if (*(_DWORD *)(v3 + 28) != 71)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
            *(_DWORD *)(v3 + 28) = 71;
            operator new();
          }
          unsigned int v13 = (const CoreML::Specification::ActivationParametricSoftplus *)*((void *)a2 + 2);
          int v16 = *(std::string **)(v3 + 16);
          return CoreML::Specification::ActivationParametricSoftplus::MergeFrom(v16, v13);
        }
        return this;
      }
      if (*(_DWORD *)(v3 + 28) != 70)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
        *(_DWORD *)(v3 + 28) = 70;
        operator new();
      }
LABEL_48:
      uint64_t v10 = *(void *)(*((void *)a2 + 2) + 8);
      if (v10)
      {
        uint64_t v11 = (unint64_t *)(*(void *)(v3 + 16) + 8);
        return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v11, v10 & 0xFFFFFFFFFFFFFFFELL);
      }
      return this;
    }
    switch(v5)
    {
      case 31:
        if (*(_DWORD *)(v3 + 28) != 31)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
          *(_DWORD *)(v3 + 28) = 31;
          operator new();
        }
        uint64_t v12 = (const CoreML::Specification::ActivationScaledTanh *)*((void *)a2 + 2);
        int v15 = *(std::string **)(v3 + 16);
        break;
      case 40:
        if (*(_DWORD *)(v3 + 28) != 40)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
          *(_DWORD *)(v3 + 28) = 40;
          operator new();
        }
        goto LABEL_48;
      case 41:
        if (*(_DWORD *)(v3 + 28) != 41)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
          *(_DWORD *)(v3 + 28) = 41;
          operator new();
        }
        uint64_t v12 = (const CoreML::Specification::ActivationScaledTanh *)*((void *)a2 + 2);
        int v15 = *(std::string **)(v3 + 16);
        break;
      default:
        return this;
    }
    return CoreML::Specification::ActivationScaledTanh::MergeFrom(v15, v12);
  }
  if (v5 <= 19)
  {
    if (v5 == 5)
    {
      if (*(_DWORD *)(v3 + 28) != 5)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
        *(_DWORD *)(v3 + 28) = 5;
        operator new();
      }
      uint64_t v12 = (const CoreML::Specification::ActivationScaledTanh *)*((void *)a2 + 2);
      int v15 = *(std::string **)(v3 + 16);
      return CoreML::Specification::ActivationScaledTanh::MergeFrom(v15, v12);
    }
    if (v5 == 10)
    {
      if (*(_DWORD *)(v3 + 28) != 10)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
        *(_DWORD *)(v3 + 28) = 10;
        operator new();
      }
      goto LABEL_48;
    }
    if (v5 != 15) {
      return this;
    }
    if (*(_DWORD *)(v3 + 28) != 15)
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
      *(_DWORD *)(v3 + 28) = 15;
      operator new();
    }
LABEL_41:
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v7 = *((void *)a2 + 2);
    uint64_t v8 = *(void *)(v7 + 8);
    if (v8) {
      this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v8 & 0xFFFFFFFFFFFFFFFELL);
    }
    float v9 = *(float *)(v7 + 16);
    if (v9 != 0.0) {
      *(float *)(v6 + 16) = v9;
    }
    return this;
  }
  if (v5 == 20)
  {
    if (*(_DWORD *)(v3 + 28) != 20)
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
      *(_DWORD *)(v3 + 28) = 20;
      operator new();
    }
    goto LABEL_41;
  }
  if (v5 != 25)
  {
    if (v5 != 30) {
      return this;
    }
    if (*(_DWORD *)(v3 + 28) != 30)
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
      *(_DWORD *)(v3 + 28) = 30;
      operator new();
    }
    goto LABEL_48;
  }
  if (*(_DWORD *)(v3 + 28) != 25)
  {
    CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
    *(_DWORD *)(v3 + 28) = 25;
    operator new();
  }
  unint64_t v14 = (const CoreML::Specification::ActivationPReLU *)*((void *)a2 + 2);
  unsigned int v17 = *(std::string **)(v3 + 16);
  return CoreML::Specification::ActivationPReLU::MergeFrom(v17, v14);
}

void sub_223F5DB18(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationParams::IsInitialized(CoreML::Specification::ActivationParams *this)
{
  return 1;
}

void *CoreML::Specification::ActivationParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ActivationParams");
}

CoreML::Specification::Tensor *CoreML::Specification::Tensor::Tensor(CoreML::Specification::Tensor *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75E7D0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Tensor *)&CoreML::Specification::_Tensor_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

void sub_223F5DC38(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::Tensor::~Tensor(CoreML::Specification::Tensor *this)
{
  *(void *)this = &unk_26D75E7D0;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::Tensor::~Tensor(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::Tensor::New(CoreML::Specification::Tensor *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F5DD4C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::Tensor>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::Tensor>);
  }
  return result;
}

uint64_t CoreML::Specification::Tensor::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreML::Specification::Tensor::MergePartialFromCodedStream(CoreML::Specification::Tensor *this, char **a2, unsigned int a3)
{
  int v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_13;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_13;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0x12u, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_13;
          }
          uint64_t v12 = *a2;
          if (*a2 >= a2[1] || *v12 < 0)
          {
            VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacunint64_t k = *v12;
            *a2 = v12 + 1;
          }
          int v16 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
          {
            do
            {
              unsigned int v17 = *a2;
              if (*a2 >= a2[1] || *v17 < 0)
              {
                Varint64Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                if ((v20 & 1) == 0) {
                  return 0;
                }
                unint64_t v18 = Varint64Fallback;
              }
              else
              {
                unint64_t v18 = *v17;
                *a2 = v17 + 1;
              }
              signed int v21 = *((_DWORD *)this + 4);
              if (v21 == *((_DWORD *)this + 5))
              {
                _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v21 + 1);
                signed int v21 = *v5;
              }
              uint64_t v22 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v21 + 1;
              *(void *)(v22 + 8 * v21 + 8) = v18;
            }
            while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
          }
          _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        }
      }
      if (v8 >> 3 != 1 || v8 != 8) {
        break;
      }
      unint64_t v14 = *a2;
      if (*a2 >= a2[1])
      {
        int v15 = 0;
        goto LABEL_41;
      }
      int v15 = *v14;
      if (*v14 < 0)
      {
LABEL_41:
        Varint32Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v15);
        *((_DWORD *)this + 9) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 9) = v15;
        *a2 = v14 + 1;
      }
    }
LABEL_13:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::Tensor::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unsigned int v6 = *(_DWORD *)(this + 36);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteUInt32(1, v6, a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x12u);
      int v7 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v7 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v7;
    }
    unsigned int v8 = *(_DWORD *)(v5 + 32);
    if (v7 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v8);
    }
    else
    {
      uint64_t v9 = *((void *)a2 + 1);
      if (v8 < 0x80)
      {
        unsigned int v11 = *(_DWORD *)(v5 + 32);
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v10++ = v8 | 0x80;
          unsigned int v11 = v8 >> 7;
          unsigned int v12 = v8 >> 14;
          v8 >>= 7;
        }
        while (v12);
      }
      *uint64_t v10 = v11;
      int v13 = v10 - v9 + 1;
      *((void *)a2 + 1) += v13;
      *((_DWORD *)a2 + 4) -= v13;
    }
    uint64_t v14 = *(unsigned int *)(v5 + 16);
    if ((int)v14 >= 1)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        unint64_t v16 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v16);
        }
        else
        {
          uint64_t v17 = *((void *)a2 + 1);
          if (v16 < 0x80)
          {
            unint64_t v19 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            unint64_t v18 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unint64_t v18 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v18++ = v16 | 0x80;
              unint64_t v19 = v16 >> 7;
              unint64_t v20 = v16 >> 14;
              v16 >>= 7;
            }
            while (v20);
          }
          unsigned char *v18 = v19;
          int v21 = v18 - v17 + 1;
          *((void *)a2 + 1) += v21;
          *((_DWORD *)a2 + 4) -= v21;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::Tensor::ByteSizeLong(CoreML::Specification::Tensor *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  int v7 = *((_DWORD *)this + 9);
  if (v7) {
    v6 += ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v6;
  return v6;
}

unint64_t *CoreML::Specification::Tensor::MergeFrom(unint64_t *this, const CoreML::Specification::Tensor *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  unsigned int v6 = *((_DWORD *)a2 + 9);
  if (v6) {
    v3[9] = v6;
  }
  return this;
}

uint64_t CoreML::Specification::Tensor::IsInitialized(CoreML::Specification::Tensor *this)
{
  return 1;
}

void *CoreML::Specification::Tensor::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Tensor");
}

CoreML::Specification::NeuralNetworkLayer *CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer(CoreML::Specification::NeuralNetworkLayer *this)
{
  *(void *)this = &unk_26D75E868;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 13) = 0;
  if (this != (CoreML::Specification::NeuralNetworkLayer *)&CoreML::Specification::_NeuralNetworkLayer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 14) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((unsigned char *)this + 12CoreML::Specification::Identity::New(this, 0) = 0;
  *((void *)this + 17) = 0;
  return this;
}

void sub_223F5E358(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v4);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v5);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v2);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_convolution(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 100)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 100;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5E408(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C407928EB6DLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ConvolutionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ConvolutionLayerParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 16), *(_DWORD *)(v3 + 16) + v5);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 24) + 8 * *(int *)(v3 + 16) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *(_DWORD *)(v3 + 16) += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 40), *(_DWORD *)(v3 + 40) + v6);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 48) + 8 * *(int *)(v3 + 40) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *(_DWORD *)(v3 + 40) += *((_DWORD *)a2 + 10);
  }
  int v7 = *((_DWORD *)a2 + 16);
  if (v7)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 64), *(_DWORD *)(v3 + 64) + v7);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 72) + 8 * *(int *)(v3 + 64) + 8), (const void *)(*((void *)a2 + 9) + 8), 8 * *((int *)a2 + 16));
    *(_DWORD *)(v3 + 64) += *((_DWORD *)a2 + 16);
  }
  int v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 88), *(_DWORD *)(v3 + 88) + v8);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 96) + 8 * *(int *)(v3 + 88) + 8), (const void *)(*((void *)a2 + 12) + 8), 8 * *((int *)a2 + 22));
    *(_DWORD *)(v3 + 88) += *((_DWORD *)a2 + 22);
  }
  if (a2 != (const CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    if (*((void *)a2 + 14))
    {
      uint64_t v9 = *(unint64_t **)(v3 + 112);
      if (!v9) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v9, *((const CoreML::Specification::WeightParams **)a2 + 14));
    }
    if (*((void *)a2 + 15))
    {
      uint64_t v10 = *(unint64_t **)(v3 + 120);
      if (!v10) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v10, *((const CoreML::Specification::WeightParams **)a2 + 15));
    }
  }
  uint64_t v11 = *((void *)a2 + 16);
  if (v11) {
    *(void *)(v3 + 128) = v11;
  }
  uint64_t v12 = *((void *)a2 + 17);
  if (v12) {
    *(void *)(v3 + 136) = v12;
  }
  uint64_t v13 = *((void *)a2 + 18);
  if (v13) {
    *(void *)(v3 + 144) = v13;
  }
  if (*((unsigned char *)a2 + 152)) {
    *(unsigned char *)(v3 + 152) = 1;
  }
  if (*((unsigned char *)a2 + 153)) {
    *(unsigned char *)(v3 + 153) = 1;
  }
  int v14 = *((_DWORD *)a2 + 43);
  if (v14 == 51)
  {
    if (*(_DWORD *)(v3 + 172) != 51)
    {
      CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType(v3);
      *(_DWORD *)(v3 + 172) = 51;
      operator new();
    }
    uint64_t v15 = *(void *)(v3 + 160);
    uint64_t v17 = *((void *)a2 + 20);
    uint64_t v19 = *(void *)(v17 + 8);
    if (v19) {
      this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v15 + 8), v19 & 0xFFFFFFFFFFFFFFFELL);
    }
    int v20 = *(_DWORD *)(v17 + 16);
    if (v20) {
      *(_DWORD *)(v15 + 16) = v20;
    }
  }
  else if (v14 == 50)
  {
    if (*(_DWORD *)(v3 + 172) != 50)
    {
      CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType(v3);
      *(_DWORD *)(v3 + 172) = 50;
      operator new();
    }
    unint64_t v16 = (const CoreML::Specification::ValidPadding *)*((void *)a2 + 20);
    unint64_t v18 = *(std::string **)(v3 + 160);
    return CoreML::Specification::ValidPadding::MergeFrom(v18, v16);
  }
  return this;
}

void sub_223F5E7C0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_pooling(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 120)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 120;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5E884(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40A643CE47);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::PoolingLayerParams::MergeFrom(std::string *this, const CoreML::Specification::PoolingLayerParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 16), *(_DWORD *)(v3 + 16) + v5);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 24) + 8 * *(int *)(v3 + 16) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *(_DWORD *)(v3 + 16) += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 40), *(_DWORD *)(v3 + 40) + v6);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 48) + 8 * *(int *)(v3 + 40) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *(_DWORD *)(v3 + 40) += *((_DWORD *)a2 + 10);
  }
  int v7 = *((_DWORD *)a2 + 15);
  if (v7) {
    *(_DWORD *)(v3 + 6CoreML::Specification::Identity::New(this, 0) = v7;
  }
  if (*((unsigned char *)a2 + 64)) {
    *(unsigned char *)(v3 + 64) = 1;
  }
  if (*((unsigned char *)a2 + 65)) {
    *(unsigned char *)(v3 + 65) = 1;
  }
  int v8 = *((_DWORD *)a2 + 21);
  switch(v8)
  {
    case 32:
      if (*(_DWORD *)(v3 + 84) != 32)
      {
        CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
        *(_DWORD *)(v3 + 84) = 32;
        operator new();
      }
      uint64_t v11 = (const CoreML::Specification::GLMRegressor_DoubleArray *)*((void *)a2 + 9);
      int v14 = *(unint64_t **)(v3 + 72);
      return (std::string *)CoreML::Specification::GLMRegressor_DoubleArray::MergeFrom(v14, v11);
    case 31:
      if (*(_DWORD *)(v3 + 84) != 31)
      {
        CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
        *(_DWORD *)(v3 + 84) = 31;
        operator new();
      }
      uint64_t v9 = *(void *)(v3 + 72);
      uint64_t v12 = *((void *)a2 + 9);
      uint64_t v15 = *(void *)(v12 + 8);
      if (v15) {
        this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v9 + 8), v15 & 0xFFFFFFFFFFFFFFFELL);
      }
      int v16 = *(_DWORD *)(v12 + 16);
      if (v16) {
        *(_DWORD *)(v9 + 16) = v16;
      }
      break;
    case 30:
      if (*(_DWORD *)(v3 + 84) != 30)
      {
        CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
        *(_DWORD *)(v3 + 84) = 30;
        operator new();
      }
      uint64_t v10 = (const CoreML::Specification::ValidPadding *)*((void *)a2 + 9);
      uint64_t v13 = *(std::string **)(v3 + 72);
      return CoreML::Specification::ValidPadding::MergeFrom(v13, v10);
  }
  return this;
}

void sub_223F5EB70(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_activation(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 130)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 130;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5EC30(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_innerproduct(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 140)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 140;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5ECC0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C404A0E3968);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::InnerProductLayerParams::MergeFrom(std::string *this, const CoreML::Specification::InnerProductLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 5);
  if (v8) {
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  if (*((unsigned char *)a2 + 48)) {
    v3[2].__r_.__value_.__s.__data_[0] = 1;
  }
  if (*((unsigned char *)a2 + 49)) {
    v3[2].__r_.__value_.__s.__data_[1] = 1;
  }
  return this;
}

void sub_223F5EE04(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_embedding(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 150)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 150;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5EE98(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4055BE373CLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::EmbeddingLayerParams::MergeFrom(std::string *this, const CoreML::Specification::EmbeddingLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 5);
  if (v8) {
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  if (*((unsigned char *)a2 + 48)) {
    v3[2].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

void sub_223F5EFCC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_batchnorm(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 160)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 160;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5F060(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40F35C4FACLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::BatchnormLayerParams::MergeFrom(std::string *this, const CoreML::Specification::BatchnormLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      int64_t size = (unint64_t *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(size, *((const CoreML::Specification::WeightParams **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      std::string::size_type v8 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      if (!v8) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v8, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
  }
  std::string::size_type v9 = *((void *)a2 + 6);
  if (v9) {
    v3[2].__r_.__value_.__r.__words[0] = v9;
  }
  if (*((unsigned char *)a2 + 56)) {
    v3[2].__r_.__value_.__s.__data_[8] = 1;
  }
  if (*((unsigned char *)a2 + 57)) {
    v3[2].__r_.__value_.__s.__data_[9] = 1;
  }
  float v10 = *((float *)a2 + 15);
  if (v10 != 0.0) {
    *((float *)&v3[2].__r_.__value_.__r.__words[1] + 1) = v10;
  }
  return this;
}

void sub_223F5F238(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_mvn(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 165)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 165;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5F2D4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C408CDDB221);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MeanVarianceNormalizeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::MeanVarianceNormalizeLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  if (*((unsigned char *)a2 + 17)) {
    v3->__r_.__value_.__s.__data_[17] = 1;
  }
  float v5 = *((float *)a2 + 5);
  if (v5 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_l2normalize(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 170)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 170;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5F3CC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::L2NormalizeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::L2NormalizeLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_softmax(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 175)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 175;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5F4A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_lrn(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 180)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 180;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5F534(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::LRNLayerParams::MergeFrom(std::string *this, const CoreML::Specification::LRNLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  std::string::size_type v7 = *((void *)a2 + 3);
  if (v7) {
    v3[1].__r_.__value_.__r.__words[0] = v7;
  }
  float v8 = *((float *)a2 + 8);
  if (v8 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__r.__words[1] = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_crop(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 190)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 190;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5F638(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CropLayerParams::MergeFrom(std::string *this, const CoreML::Specification::CropLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)&v3->__r_.__value_.__r.__words[2], LODWORD(v3->__r_.__value_.__r.__words[2]) + v5);
    this = (std::string *)memcpy((void *)(v3[1].__r_.__value_.__r.__words[0]+ 8 * SLODWORD(v3->__r_.__value_.__r.__words[2])+ 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    LODWORD(v3->__r_.__value_.__r.__words[2]) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    if (!v3[1].__r_.__value_.__r.__words[2]) {
      operator new();
    }
    float v6 = (const CoreML::Specification::BorderAmounts *)*((void *)a2 + 5);
    std::string::size_type v7 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    return CoreML::Specification::BorderAmounts::MergeFrom(v7, v6);
  }
  return this;
}

void sub_223F5F768(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_padding(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 200)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 200;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5F7F8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::PaddingLayerParams::MergeFrom(std::string *this, const CoreML::Specification::PaddingLayerParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_
    && v5 != 0)
  {
    std::string::size_type v7 = *(std::string **)(v3 + 16);
    if (!v7) {
      operator new();
    }
    if (v5) {
      float v8 = (const CoreML::Specification::BorderAmounts *)*((void *)a2 + 2);
    }
    else {
      float v8 = (const CoreML::Specification::BorderAmounts *)&CoreML::Specification::_BorderAmounts_default_instance_;
    }
    this = CoreML::Specification::BorderAmounts::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 9);
  if (v9 == 3)
  {
    if (*(_DWORD *)(v3 + 36) != 3)
    {
      CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
      *(_DWORD *)(v3 + 36) = 3;
      operator new();
    }
  }
  else
  {
    if (v9 != 2)
    {
      if (v9 == 1)
      {
        if (*(_DWORD *)(v3 + 36) != 1)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
          *(_DWORD *)(v3 + 36) = 1;
          operator new();
        }
        uint64_t v10 = *(void *)(v3 + 24);
        uint64_t v13 = *((void *)a2 + 3);
        uint64_t v14 = *(void *)(v13 + 8);
        if (v14) {
          this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v10 + 8), v14 & 0xFFFFFFFFFFFFFFFELL);
        }
        float v15 = *(float *)(v13 + 16);
        if (v15 != 0.0) {
          *(float *)(v10 + 16) = v15;
        }
      }
      return this;
    }
    if (*(_DWORD *)(v3 + 36) != 2)
    {
      CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
      *(_DWORD *)(v3 + 36) = 2;
      operator new();
    }
  }
  uint64_t v11 = *(void *)(*((void *)a2 + 3) + 8);
  if (v11)
  {
    uint64_t v12 = (unint64_t *)(*(void *)(v3 + 24) + 8);
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v12, v11 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

void sub_223F5FA54(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_upsample(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 210)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 210;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5FB18(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40BDAE892FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::UpsampleLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::UpsampleLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<float>::Reserve(v3 + 10, v3[10] + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 6) + 4 * (int)v3[10] + 8), (const void *)(*((void *)a2 + 6) + 8), 4 * *((int *)a2 + 10));
    v3[10] += *((_DWORD *)a2 + 10);
  }
  unsigned int v7 = *((_DWORD *)a2 + 15);
  if (v7) {
    v3[15] = v7;
  }
  unsigned int v8 = *((_DWORD *)a2 + 16);
  if (v8) {
    v3[16] = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_resizebilinear(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 211)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 211;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5FCA0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ResizeBilinearLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ResizeBilinearLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    uint64_t v6 = *((void *)v3 + 5);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *((void *)a2 + 5);
    uint64_t v8 = *(void *)(v7 + 8);
    if (v8) {
      this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v8 & 0xFFFFFFFFFFFFFFFELL);
    }
    int v9 = *(_DWORD *)(v7 + 16);
    if (v9) {
      *(_DWORD *)(v6 + 16) = v9;
    }
  }
  return this;
}

void sub_223F5FDCC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_cropresize(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 212)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 212;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F5FE5C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C405E24942CLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::CropResizeLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::CropResizeLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      uint64_t v6 = *((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *((void *)a2 + 5);
      uint64_t v8 = *(void *)(v7 + 8);
      if (v8) {
        this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v8 & 0xFFFFFFFFFFFFFFFELL);
      }
      int v9 = *(_DWORD *)(v7 + 16);
      if (v9) {
        *(_DWORD *)(v6 + 16) = v9;
      }
    }
    if (*((void *)a2 + 6))
    {
      uint64_t v10 = *((void *)v3 + 6);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *((void *)a2 + 6);
      uint64_t v12 = *(void *)(v11 + 8);
      if (v12) {
        this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v10 + 8), v12 & 0xFFFFFFFFFFFFFFFELL);
      }
      int v13 = *(_DWORD *)(v11 + 16);
      if (v13) {
        *(_DWORD *)(v10 + 16) = v13;
      }
    }
  }
  if (*((unsigned char *)a2 + 56)) {
    *((unsigned char *)v3 + 56) = 1;
  }
  float v14 = *((float *)a2 + 15);
  if (v14 != 0.0) {
    *((float *)v3 + 15) = v14;
  }
  return this;
}

void sub_223F60010(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_unary(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 220)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 220;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F600A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::UnaryFunctionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::UnaryFunctionLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  float v7 = *((float *)a2 + 6);
  if (v7 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__l.__data_ = v7;
  }
  float v8 = *((float *)a2 + 7);
  if (v8 != 0.0) {
    *((float *)v3[1].__r_.__value_.__r.__words + 1) = v8;
  }
  float v9 = *((float *)a2 + 8);
  if (v9 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__r.__words[1] = v9;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_add(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 230)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 230;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F601B8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_multiply(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 231)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 231;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60248(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_average(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 240)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 240;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F602D8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_scale(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 245)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 245;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60368(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40771A4C38);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ScaleLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ScaleLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 10, *((_DWORD *)v3 + 10) + v6);
    this = (unint64_t *)memcpy((void *)(v3[6] + 8 * *((int *)v3 + 10) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *((_DWORD *)v3 + 10) += *((_DWORD *)a2 + 10);
  }
  if (a2 != (const CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    if (*((void *)a2 + 8))
    {
      float v7 = (unint64_t *)v3[8];
      if (!v7) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v7, *((const CoreML::Specification::WeightParams **)a2 + 8));
    }
    if (*((void *)a2 + 9))
    {
      float v8 = (unint64_t *)v3[9];
      if (!v8) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v8, *((const CoreML::Specification::WeightParams **)a2 + 9));
    }
  }
  if (*((unsigned char *)a2 + 80)) {
    *((unsigned char *)v3 + 8CoreML::Specification::Identity::New(this, 0) = 1;
  }
  return this;
}

void sub_223F60524(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_bias(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 250)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 250;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F605B8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::BiasLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::BiasLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    if (!v3[5]) {
      operator new();
    }
    int v6 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 5);
    float v7 = (unint64_t *)v3[5];
    return CoreML::Specification::WeightParams::MergeFrom(v7, v6);
  }
  return this;
}

void sub_223F606E8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_max(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 260)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 260;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60778(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_min(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 261)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 261;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60808(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_dot(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 270)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 270;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60898(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::DotProductLayerParams::MergeFrom(std::string *this, const CoreML::Specification::DotProductLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reduce(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 280)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 280;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60970(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ReduceLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ReduceLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  int v7 = *((_DWORD *)a2 + 6);
  if (v7) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loadconstant(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 290)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 290;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60A60(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::LoadConstantLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::LoadConstantLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    if (!v3[5]) {
      operator new();
    }
    float v6 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 5);
    int v7 = (unint64_t *)v3[5];
    return CoreML::Specification::WeightParams::MergeFrom(v7, v6);
  }
  return this;
}

void sub_223F60B90(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reshape(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 300)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 300;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60C20(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_flatten(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 301)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 301;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60CB0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::FlattenLayerParams::MergeFrom(std::string *this, const CoreML::Specification::FlattenLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_permute(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 310)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 310;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60D84(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_concat(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 320)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 320;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60E14(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_split(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 330)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 330;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60EA4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SplitLayerParams::MergeFrom(std::string *this, const CoreML::Specification::SplitLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_sequencerepeat(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 340)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 340;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F60F78(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reorganizedata(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 345)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 345;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F61008(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ReorganizeDataLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ReorganizeDataLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slice(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 350)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 350;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F610E8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40DAA165ECLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SliceLayerParams::MergeFrom(std::string *this, const CoreML::Specification::SliceLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  int v8 = *((_DWORD *)a2 + 10);
  if (v8) {
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_simplerecurrent(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 400)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 400;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F611E0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4089F1CBADLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SimpleRecurrentLayerParams::MergeFrom(std::string *this, const CoreML::Specification::SimpleRecurrentLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      std::string::size_type v5 = (std::string *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::ActivationParams::MergeFrom(v5, *((const CoreML::Specification::ActivationParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      int64_t size = (unint64_t *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(size, *((const CoreML::Specification::WeightParams **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      int v8 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      if (!v8) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v8, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
  }
  std::string::size_type v9 = *((void *)a2 + 6);
  if (v9) {
    v3[2].__r_.__value_.__r.__words[0] = v9;
  }
  std::string::size_type v10 = *((void *)a2 + 7);
  if (v10) {
    v3[2].__r_.__value_.__l.__size_ = v10;
  }
  if (*((unsigned char *)a2 + 64)) {
    v3[2].__r_.__value_.__s.__data_[16] = 1;
  }
  if (*((unsigned char *)a2 + 65)) {
    v3[2].__r_.__value_.__s.__data_[17] = 1;
  }
  if (*((unsigned char *)a2 + 66)) {
    v3[2].__r_.__value_.__s.__data_[18] = 1;
  }
  return this;
}

void sub_223F613CC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gru(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 410)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 410;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F61478(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C409E07629ELL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::GRULayerParams::MergeFrom(std::string *this, const CoreML::Specification::GRULayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    std::string::size_type v6 = (CoreML::Specification::ActivationParams **)(*((void *)a2 + 4) + 8);
    std::string::size_type v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    int64_t size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *int64_t size = v8;
    }
  }
  if (a2 != (const CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      std::string::size_type v10 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v10, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      int data = (unint64_t *)v3[2].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 6));
    }
    if (*((void *)a2 + 7))
    {
      uint64_t v12 = (unint64_t *)v3[2].__r_.__value_.__l.__size_;
      if (!v12) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v12, *((const CoreML::Specification::WeightParams **)a2 + 7));
    }
    if (*((void *)a2 + 8))
    {
      int v13 = (unint64_t *)v3[2].__r_.__value_.__r.__words[2];
      if (!v13) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v13, *((const CoreML::Specification::WeightParams **)a2 + 8));
    }
    if (*((void *)a2 + 9))
    {
      float v14 = (unint64_t *)v3[3].__r_.__value_.__l.__data_;
      if (!v14) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v14, *((const CoreML::Specification::WeightParams **)a2 + 9));
    }
    if (*((void *)a2 + 10))
    {
      float v15 = (unint64_t *)v3[3].__r_.__value_.__l.__size_;
      if (!v15) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v15, *((const CoreML::Specification::WeightParams **)a2 + 10));
    }
    if (*((void *)a2 + 11))
    {
      int v16 = (unint64_t *)v3[3].__r_.__value_.__r.__words[2];
      if (!v16) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v16, *((const CoreML::Specification::WeightParams **)a2 + 11));
    }
    if (*((void *)a2 + 12))
    {
      uint64_t v17 = (unint64_t *)v3[4].__r_.__value_.__l.__data_;
      if (!v17) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v17, *((const CoreML::Specification::WeightParams **)a2 + 12));
    }
    if (*((void *)a2 + 13))
    {
      unint64_t v18 = (unint64_t *)v3[4].__r_.__value_.__l.__size_;
      if (!v18) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v18, *((const CoreML::Specification::WeightParams **)a2 + 13));
    }
  }
  std::string::size_type v19 = *((void *)a2 + 14);
  if (v19) {
    v3[4].__r_.__value_.__r.__words[2] = v19;
  }
  std::string::size_type v20 = *((void *)a2 + 15);
  if (v20) {
    v3[5].__r_.__value_.__r.__words[0] = v20;
  }
  if (*((unsigned char *)a2 + 128)) {
    v3[5].__r_.__value_.__s.__data_[8] = 1;
  }
  if (*((unsigned char *)a2 + 129)) {
    v3[5].__r_.__value_.__s.__data_[9] = 1;
  }
  if (*((unsigned char *)a2 + 130)) {
    v3[5].__r_.__value_.__s.__data_[10] = 1;
  }
  return this;
}

void sub_223F61830(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_unidirectionallstm(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 420)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 420;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F618E0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40B3944273);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::UniDirectionalLSTMLayerParams::MergeFrom(std::string *this, const CoreML::Specification::UniDirectionalLSTMLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    std::string::size_type v6 = (CoreML::Specification::ActivationParams **)(*((void *)a2 + 4) + 8);
    std::string::size_type v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    int64_t size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *int64_t size = v8;
    }
  }
  if (a2 != (const CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      std::string::size_type v10 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10) {
        operator new();
      }
      this = CoreML::Specification::LSTMParams::MergeFrom(v10, *((const CoreML::Specification::LSTMParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      int data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::LSTMWeightParams::MergeFrom(data, *((const CoreML::Specification::LSTMWeightParams **)a2 + 6));
    }
  }
  std::string::size_type v12 = *((void *)a2 + 7);
  if (v12) {
    v3[2].__r_.__value_.__l.__size_ = v12;
  }
  std::string::size_type v13 = *((void *)a2 + 8);
  if (v13) {
    v3[2].__r_.__value_.__r.__words[2] = v13;
  }
  if (*((unsigned char *)a2 + 72)) {
    v3[3].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

void sub_223F61A88(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_bidirectionallstm(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 430)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 430;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F61B34(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C402A225981);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::BiDirectionalLSTMLayerParams::MergeFrom(std::string *this, const CoreML::Specification::BiDirectionalLSTMLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    std::string::size_type v6 = (CoreML::Specification::ActivationParams **)(*((void *)a2 + 4) + 8);
    std::string::size_type v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    int64_t size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *int64_t size = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    uint64_t v11 = (CoreML::Specification::ActivationParams **)(*((void *)a2 + 7) + 8);
    std::string::size_type v12 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)((char *)v3 + 40), (std::string **)v12, v11, v10, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v13 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v10;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
    float v14 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v14 < v13) {
      *float v14 = v13;
    }
  }
  unsigned int v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    int v16 = (CoreML::Specification::LSTMWeightParams **)(*((void *)a2 + 10) + 8);
    uint64_t v17 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3[2].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 18));
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::LSTMWeightParams>::TypeHandler>((std::string *)((char *)v3 + 64), (std::string **)v17, v16, v15, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    signed int v18 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v15;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v18;
    std::string::size_type v19 = (signed int *)v3[3].__r_.__value_.__l.__size_;
    if (*v19 < v18) {
      *std::string::size_type v19 = v18;
    }
  }
  if (a2 != (const CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_
    && *((void *)a2 + 11))
  {
    std::string::size_type v20 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    if (!v20) {
      operator new();
    }
    this = CoreML::Specification::LSTMParams::MergeFrom(v20, *((const CoreML::Specification::LSTMParams **)a2 + 11));
  }
  std::string::size_type v21 = *((void *)a2 + 12);
  if (v21) {
    v3[4].__r_.__value_.__r.__words[0] = v21;
  }
  std::string::size_type v22 = *((void *)a2 + 13);
  if (v22) {
    v3[4].__r_.__value_.__l.__size_ = v22;
  }
  return this;
}

void sub_223F61D44(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_custom(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 500)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 500;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F61DD4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40B612A46ELL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CustomLayerParams::MergeFrom(CoreML::Specification::CustomLayerParams *this, const CoreML::Specification::CustomLayerParams *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    std::string::size_type v6 = (CoreML::Specification::WeightParams **)(*((void *)a2 + 4) + 8);
    std::string::size_type v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::CustomLayerParams *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::WeightParams>::TypeHandler>((unint64_t *)this + 2, (CoreML::Specification::WeightParams **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    std::string::size_type v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *std::string::size_type v9 = v8;
    }
  }
  uint64_t result = (std::string *)_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 40, (uint64_t)a2 + 40);
  uint64_t v11 = *((void *)a2 + 9);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_14;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_14;
  }
  uint64_t result = (std::string *)((char *)this + 72);
  std::string::size_type v12 = (uint64_t *)*((void *)this + 9);
  if (v12 != (uint64_t *)v11)
  {
    if (v12 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    uint64_t result = std::string::operator=(*((std::string **)this + 9), (const std::string *)v11);
  }
LABEL_14:
  uint64_t v13 = *((void *)a2 + 10);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    return result;
  }
  uint64_t result = (std::string *)*((void *)this + 10);
  if (result != (std::string *)v13)
  {
    if (result == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string)
    {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    return std::string::operator=(result, (const std::string *)v13);
  }
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_copy(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 600)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 600;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F61FF4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_branch(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 605)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 605;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62084(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::BranchLayerParams::MergeFrom(std::string *this, const CoreML::Specification::BranchLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      unsigned int v5 = (CoreML::Specification::NeuralNetwork *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::NeuralNetwork::MergeFrom(v5, *((const CoreML::Specification::NeuralNetwork **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      std::string::size_type v6 = (const CoreML::Specification::NeuralNetwork *)*((void *)a2 + 3);
      int data = (CoreML::Specification::NeuralNetwork *)v3[1].__r_.__value_.__l.__data_;
      return (std::string *)CoreML::Specification::NeuralNetwork::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_223F621AC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loop(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 615)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 615;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62240(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40FB89D240);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::LoopLayerParams::MergeFrom(std::string *this, const CoreML::Specification::LoopLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  std::string::size_type v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  if (a2 != (const CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_)
  {
    if (*((void *)a2 + 3))
    {
      int data = (CoreML::Specification::NeuralNetwork *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::NeuralNetwork::MergeFrom(data, *((const CoreML::Specification::NeuralNetwork **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      int64_t size = (CoreML::Specification::NeuralNetwork *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::NeuralNetwork::MergeFrom(size, *((const CoreML::Specification::NeuralNetwork **)a2 + 4));
    }
  }
  std::string::size_type v9 = *((void *)a2 + 5);
  if (v9) {
    v3[1].__r_.__value_.__r.__words[2] = v9;
  }
  return this;
}

void sub_223F623A8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loopbreak(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 620)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 620;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6243C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loopcontinue(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 625)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 625;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F624CC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_rangestatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 635)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 635;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6255C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::RangeStaticLayerParams::MergeFrom(std::string *this, const CoreML::Specification::RangeStaticLayerParams *a2)
{
  uint64_t v3 = (float *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    v3[4] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    std::runtime_error v3[5] = v6;
  }
  float v7 = *((float *)a2 + 6);
  if (v7 != 0.0) {
    v3[6] = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_rangedynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 640)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 640;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62654(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_clip(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 660)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 660;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F626E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_ceil(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 665)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 665;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62774(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_floor(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 670)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 670;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62804(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_sign(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 680)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 680;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62894(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_round(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 685)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 685;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62924(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_exp2(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 700)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 700;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F629B4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_sin(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 710)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 710;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62A44(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_cos(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 715)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 715;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62AD4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_tan(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 720)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 720;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62B64(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_asin(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 730)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 730;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62BF4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_acos(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 735)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 735;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62C84(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_atan(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 740)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 740;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62D14(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_sinh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 750)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 750;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62DA4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_cosh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 755)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 755;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62E34(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_tanh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 760)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 760;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62EC4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_asinh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 770)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 770;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62F54(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_acosh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 775)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 775;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F62FE4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_atanh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 780)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 780;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63074(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_erf(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 790)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 790;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63104(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gelu(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 795)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 795;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63194(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_equal(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 815)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 815;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63224(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_notequal(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 820)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 820;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F632B4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_lessthan(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 825)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 825;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63344(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_lessequal(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 827)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 827;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F633D4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_greaterthan(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 830)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 830;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63464(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_greaterequal(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 832)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 832;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F634F4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_logicalor(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 840)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 840;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63584(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_logicalxor(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 845)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 845;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63614(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_logicalnot(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 850)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 850;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F636A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_logicaland(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 855)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 855;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63734(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_modbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 865)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 865;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F637C4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_minbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 870)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 870;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63854(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_maxbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 875)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 875;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F638E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_addbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 880)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 880;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63974(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_powbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 885)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 885;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63A04(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_dividebroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 890)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 890;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63A94(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_floordivbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 895)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 895;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63B24(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_multiplybroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 900)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 900;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63BB4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_subtractbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 905)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 905;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63C44(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_tile(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 920)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 920;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63CD4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_stack(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 925)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 925;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63D64(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gather(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 930)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 930;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63DF4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_scatter(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 935)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 935;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63E84(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gathernd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 940)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 940;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63F14(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_scatternd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 945)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 945;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F63FA4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_softmaxnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 950)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 950;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64034(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gatheralongaxis(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 952)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 952;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F640C4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_scatteralongaxis(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 954)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 954;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64154(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reverse(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 960)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 960;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F641E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reverseseq(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 965)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 965;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64274(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ReverseSeqLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ReverseSeqLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_splitnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 975)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 975;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64354(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C7CBD27BLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SplitNDLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::SplitNDLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  uint64_t v6 = *((void *)a2 + 5);
  if (v6) {
    *((void *)v3 + 5) = v6;
  }
  uint64_t v7 = *((void *)a2 + 6);
  if (v7) {
    *((void *)v3 + 6) = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_concatnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 980)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 980;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6448C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ConcatNDLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ConcatNDLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  if (*((unsigned char *)a2 + 24)) {
    v3[1].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_transpose(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 985)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 985;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64570(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slicestatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 995)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 995;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64600(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40B7792B36);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SliceStaticLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::SliceStaticLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v3 + 10, v3[10] + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 6) + (int)v3[10] + 8), (const void *)(*((void *)a2 + 6) + 8), *((int *)a2 + 10));
    v3[10] += *((_DWORD *)a2 + 10);
  }
  int v7 = *((_DWORD *)a2 + 16);
  if (v7)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 16, v3[16] + v7);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 9) + 8 * (int)v3[16] + 8), (const void *)(*((void *)a2 + 9) + 8), 8 * *((int *)a2 + 16));
    v3[16] += *((_DWORD *)a2 + 16);
  }
  int v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v3 + 22, v3[22] + v8);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 12) + (int)v3[22] + 8), (const void *)(*((void *)a2 + 12) + 8), *((int *)a2 + 22));
    v3[22] += *((_DWORD *)a2 + 22);
  }
  int v9 = *((_DWORD *)a2 + 28);
  if (v9)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 28, v3[28] + v9);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 15) + 8 * (int)v3[28] + 8), (const void *)(*((void *)a2 + 15) + 8), 8 * *((int *)a2 + 28));
    v3[28] += *((_DWORD *)a2 + 28);
  }
  int v10 = *((_DWORD *)a2 + 34);
  if (v10)
  {
    int v12 = v3[34];
    uint64_t v11 = v3 + 34;
    _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v11, v12 + v10);
    this = (unint64_t *)memcpy((void *)(*((void *)v11 + 1) + (int)*v11 + 8), (const void *)(*((void *)a2 + 18) + 8), *((int *)a2 + 34));
    *v11 += *((_DWORD *)a2 + 34);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slicedynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1000)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1000;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F648A0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4014994198);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SliceDynamicLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::SliceDynamicLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 10, v3[10] + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 6) + 8 * (int)v3[10] + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    v3[10] += *((_DWORD *)a2 + 10);
  }
  int v7 = *((_DWORD *)a2 + 16);
  if (v7)
  {
    _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v3 + 16, v3[16] + v7);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 9) + (int)v3[16] + 8), (const void *)(*((void *)a2 + 9) + 8), *((int *)a2 + 16));
    v3[16] += *((_DWORD *)a2 + 16);
  }
  int v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 22, v3[22] + v8);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 12) + 8 * (int)v3[22] + 8), (const void *)(*((void *)a2 + 12) + 8), 8 * *((int *)a2 + 22));
    v3[22] += *((_DWORD *)a2 + 22);
  }
  int v9 = *((_DWORD *)a2 + 28);
  if (v9)
  {
    int v11 = v3[28];
    int v10 = v3 + 28;
    _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v10, v11 + v9);
    this = (unint64_t *)memcpy((void *)(*((void *)v10 + 1) + (int)*v10 + 8), (const void *)(*((void *)a2 + 15) + 8), *((int *)a2 + 28));
    *v10 += *((_DWORD *)a2 + 28);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slidingwindows(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1005)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1005;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64AF0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40594C3D85);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SlidingWindowsLayerParams::MergeFrom(std::string *this, const CoreML::Specification::SlidingWindowsLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_topk(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1015)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1015;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64BDC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40A90F680CLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::TopKLayerParams::MergeFrom(std::string *this, const CoreML::Specification::TopKLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  if (*((unsigned char *)a2 + 32)) {
    v3[1].__r_.__value_.__s.__data_[8] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_argmin(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1020)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1020;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64CCC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_argmax(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1025)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1025;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64D5C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_embeddingnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1040)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1040;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64DEC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4055BE373CLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::EmbeddingNDLayerParams::MergeFrom(std::string *this, const CoreML::Specification::EmbeddingNDLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      std::string::size_type v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 5);
  if (v8) {
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  if (*((unsigned char *)a2 + 48)) {
    v3[2].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

void sub_223F64F20(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_batchedmatmul(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1045)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1045;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F64FB4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40A7ADAA20);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::BatchedMatMulLayerParams::MergeFrom(std::string *this, const CoreML::Specification::BatchedMatMulLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      std::string::size_type v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 5);
  if (v8) {
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  if (*((unsigned char *)a2 + 48)) {
    v3[2].__r_.__value_.__s.__data_[0] = 1;
  }
  if (*((unsigned char *)a2 + 49)) {
    v3[2].__r_.__value_.__s.__data_[1] = 1;
  }
  if (*((unsigned char *)a2 + 50)) {
    v3[2].__r_.__value_.__s.__data_[2] = 1;
  }
  if (*((unsigned char *)a2 + 51)) {
    v3[2].__r_.__value_.__s.__data_[3] = 1;
  }
  return this;
}

void sub_223F65118(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_getshape(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1065)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1065;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F651AC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loadconstantnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1070)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1070;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6523C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::LoadConstantNDLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::LoadConstantNDLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    if (!v3[5]) {
      operator new();
    }
    std::string::size_type v6 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 5);
    std::string::size_type v7 = (unint64_t *)v3[5];
    return CoreML::Specification::WeightParams::MergeFrom(v7, v6);
  }
  return this;
}

void sub_223F6536C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_filllike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1080)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1080;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F653FC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_fillstatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1085)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1085;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6548C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::FillStaticLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::FillStaticLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  float v6 = *((float *)a2 + 9);
  if (v6 != 0.0) {
    *((float *)v3 + 9) = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_filldynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1090)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1090;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F655BC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttolike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1100)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1100;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6564C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttostatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1105)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1105;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F656DC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttodynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1110)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1110;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6576C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_squeeze(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1120)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1120;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F657FC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4095A926F0);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SqueezeLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::SqueezeLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  if (*((unsigned char *)a2 + 36)) {
    *((unsigned char *)v3 + 36) = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_expanddims(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1125)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1125;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6592C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_flattento2d(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1130)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1130;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F659BC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reshapelike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1135)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1135;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F65A4C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reshapestatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1140)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1140;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F65ADC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reshapedynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1145)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1145;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F65B6C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_rankpreservingreshape(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1150)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1150;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F65BFC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_constantpad(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1155)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1155;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F65C8C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C404456B134);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ConstantPaddingLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ConstantPaddingLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  float v6 = *((float *)a2 + 9);
  if (v6 != 0.0) {
    *((float *)v3 + 9) = v6;
  }
  if (*((unsigned char *)a2 + 40)) {
    *((unsigned char *)v3 + 4CoreML::Specification::Identity::New(this, 0) = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomnormallike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1170)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1170;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F65DCC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::RandomNormalLikeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::RandomNormalLikeLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 6);
  if (v6 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  float v7 = *((float *)a2 + 7);
  if (v7 != 0.0) {
    *((float *)v3[1].__r_.__value_.__r.__words + 1) = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomnormalstatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1175)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1175;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F65EC0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C7CBD27BLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::RandomNormalStaticLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::RandomNormalStaticLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  uint64_t v6 = *((void *)a2 + 5);
  if (v6) {
    *((void *)v3 + 5) = v6;
  }
  float v7 = *((float *)a2 + 12);
  if (v7 != 0.0) {
    *((float *)v3 + 12) = v7;
  }
  float v8 = *((float *)a2 + 13);
  if (v8 != 0.0) {
    *((float *)v3 + 13) = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomnormaldynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1180)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1180;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6600C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformlike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1190)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1190;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6609C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformstatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1195)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1195;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6612C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C7CBD27BLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformdynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1200)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1200;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F661BC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullilike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1210)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1210;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6624C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::RandomBernoulliLikeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::RandomBernoulliLikeLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 6);
  if (v6 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullistatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1215)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1215;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66330(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403321297FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::RandomBernoulliStaticLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::RandomBernoulliStaticLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  uint64_t v6 = *((void *)a2 + 5);
  if (v6) {
    *((void *)v3 + 5) = v6;
  }
  float v7 = *((float *)a2 + 12);
  if (v7 != 0.0) {
    *((float *)v3 + 12) = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullidynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1220)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1220;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6646C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_categoricaldistribution(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1230)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1230;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F664FC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C4067988C7FLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CategoricalDistributionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::CategoricalDistributionLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  if (*((unsigned char *)a2 + 32)) {
    v3[1].__r_.__value_.__s.__data_[8] = 1;
  }
  float v7 = *((float *)a2 + 9);
  if (v7 != 0.0) {
    *((float *)&v3[1].__r_.__value_.__r.__words[1] + 1) = v7;
  }
  float v8 = *((float *)a2 + 10);
  if (v8 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducel1(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1250)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1250;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6660C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ReduceL1LayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ReduceL1LayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  if (*((unsigned char *)a2 + 36)) {
    *((unsigned char *)v3 + 36) = 1;
  }
  if (*((unsigned char *)a2 + 37)) {
    *((unsigned char *)v3 + 37) = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducel2(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1255)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1255;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6674C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducemax(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1260)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1260;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F667DC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducemin(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1265)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1265;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6686C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducesum(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1270)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1270;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F668FC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reduceprod(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1275)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1275;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6698C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducemean(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1280)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1280;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66A1C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsum(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1285)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1285;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66AAC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducesumsquare(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1290)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1290;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66B3C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsumexp(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1295)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1295;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66BCC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_wherenonzero(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1313)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1313;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66C5C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_matrixbandpart(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1315)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1315;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66CEC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_lowertriangular(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1320)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1320;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66D7C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_uppertriangular(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1325)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1325;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66E0C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_wherebroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1330)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1330;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66E9C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_layernormalization(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1350)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1350;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F66F2C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4054F75DDDLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::LayerNormalizationLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::LayerNormalizationLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      std::string::size_type v6 = (unint64_t *)v3[5];
      if (!v6) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v6, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      float v7 = (unint64_t *)v3[6];
      if (!v7) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v7, *((const CoreML::Specification::WeightParams **)a2 + 6));
    }
  }
  float v8 = *((float *)a2 + 14);
  if (v8 != 0.0) {
    *((float *)v3 + 14) = v8;
  }
  return this;
}

void sub_223F67098(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_nonmaximumsuppression(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1400)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1400;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F6712C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40A90F680CLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::NonMaximumSuppressionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::NonMaximumSuppressionLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  std::string::size_type v7 = *((void *)a2 + 3);
  if (v7) {
    v3[1].__r_.__value_.__r.__words[0] = v7;
  }
  if (*((unsigned char *)a2 + 32)) {
    v3[1].__r_.__value_.__s.__data_[8] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_onehot(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1450)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1450;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F67230(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40594C3D85);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::OneHotLayerParams::MergeFrom(std::string *this, const CoreML::Specification::OneHotLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  float v7 = *((float *)a2 + 8);
  if (v7 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__r.__words[1] = v7;
  }
  float v8 = *((float *)a2 + 9);
  if (v8 != 0.0) {
    *((float *)&v3[1].__r_.__value_.__r.__words[1] + 1) = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_cumsum(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1455)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1455;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F67330(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C400751EDB2);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CumSumLayerParams::MergeFrom(std::string *this, const CoreML::Specification::CumSumLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  if (*((unsigned char *)a2 + 24)) {
    v3[1].__r_.__value_.__s.__data_[0] = 1;
  }
  if (*((unsigned char *)a2 + 25)) {
    v3[1].__r_.__value_.__s.__data_[1] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_clampedrelu(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1460)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1460;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F67424(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_argsort(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1461)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1461;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F674B4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_pooling3d(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1465)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1465;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F67544(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40004337BDLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::Pooling3DLayerParams::MergeFrom(std::string *this, const CoreML::Specification::Pooling3DLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  int v6 = *((_DWORD *)a2 + 5);
  if (v6) {
    HIDWORD(v3->__r_.__value_.__r.__words[2]) = v6;
  }
  int v7 = *((_DWORD *)a2 + 6);
  if (v7) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
  }
  int v8 = *((_DWORD *)a2 + 7);
  if (v8) {
    HIDWORD(v3[1].__r_.__value_.__r.__words[0]) = v8;
  }
  int v9 = *((_DWORD *)a2 + 8);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
  }
  int v10 = *((_DWORD *)a2 + 9);
  if (v10) {
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = v10;
  }
  int v11 = *((_DWORD *)a2 + 10);
  if (v11) {
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v11;
  }
  int v12 = *((_DWORD *)a2 + 11);
  if (v12) {
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = v12;
  }
  int v13 = *((_DWORD *)a2 + 12);
  if (v13) {
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
  }
  int v14 = *((_DWORD *)a2 + 13);
  if (v14) {
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = v14;
  }
  int v15 = *((_DWORD *)a2 + 14);
  if (v15) {
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v15;
  }
  int v16 = *((_DWORD *)a2 + 15);
  if (v16) {
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = v16;
  }
  int v17 = *((_DWORD *)a2 + 16);
  if (v17) {
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = v17;
  }
  if (*((unsigned char *)a2 + 68)) {
    v3[2].__r_.__value_.__s.__data_[20] = 1;
  }
  int v18 = *((_DWORD *)a2 + 18);
  if (v18) {
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v18;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_globalpooling3d(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1466)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1466;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F676C4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slicebysize(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1470)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1470;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F67754(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_convolution3d(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1471)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1471;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_223F677E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40381DED69);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::Convolution3DLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::Convolution3DLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      int v6 = (unint64_t *)v3[5];
      if (!v6) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v6, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      int v7 = (unint64_t *)v3[6];
      if (!v7) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v7, *((const CoreML::Specification::WeightParams **)a2 + 6));
    }
  }
  int v8 = *((_DWORD *)a2 + 14);
  if (v8) {
    *((_DWORD *)v3 + 14) = v8;
  }
  int v9 = *((_DWORD *)a2 + 15);
  if (v9) {
    *((_DWORD *)v3 + 15) = v9;
  }
  int v10 = *((_DWORD *)a2 + 16);
  if (v10) {
    *((_DWORD *)v3 + 16) = v10;
  }
  int v11 = *((_DWORD *)a2 + 17);
  if (v11) {
    *((_DWORD *)v3 + 17) = v11;
  }
  int v12 = *((_DWORD *)a2 + 18);
  if (v12) {
    *((_DWORD *)v3 + 18) = v12;
  }
  int v13 = *((_DWORD *)a2 + 19);
  if (v13) {
    *((_DWORD *)v3 + 19) = v13;
  }
  int v14 = *((_DWORD *)a2 + 20);
  if (v14) {
    *((_DWORD *)v3 + 2CoreML::Specification::Identity::New(this, 0) = v14;
  }
  int v15 = *((_DWORD *)a2 + 21);
  if (v15) {
    *((_DWORD *)v3 + 21) = v15;
  }
  int v16 = *((_DWORD *)a2 + 22);
  if (v16) {
    *((_DWORD *)v3 + 22) = v16;
  }
  int v17 = *((_DWORD *)a2 + 23);
  if (v17) {
    *((_DWORD *)v3 + 23) = v17;
  }
  int v18 = *((_DWORD *)a2 + 24);
  if (v18) {
    *((_DWORD *)v3 + 24) = v18;
  }
  int v19 = *((_DWORD *)a2 + 25);
  if (v19) {
    *((_DWORD *)v3 + 25) = v19;
  }
  if (*((unsigned char *)a2 + 104)) {
    *((unsigned char *)v3 + 104) = 1;
  }
  if (*((unsigned char *)a2 + 105)) {
    *((unsigned char *)v3 + 105) = 1;
  }
  int v20 = *((_DWORD *)a2 + 27);
  if (v20) {
    *((_DWORD *)v3 + 27) = v20;
  }
  int v21 = *((_DWORD *)a2 + 28);
  if (v21) {
    *((_DWORD *)v3 + 28) = v21;
  }
  int v22 = *((_DWORD *)a2 + 29);
  if (v22) {
    *((_DWORD *)v3 + 29) = v22;
  }
  int v23 = *((_DWORD *)a2 + 30);
  if (v23) {
    *((_DWORD *)v3 + 3CoreML::Specification::Identity::New(this, 0) = v23;
  }
  int v24 = *((_DWORD *)a2 + 31);
  if (v24) {
    *((_DWORD *)v3 + 31) = v24;
  }
  int v25 = *((_DWORD *)a2 + 32);
  if (v25) {
    *((_DWORD *)v3 + 32) = v25;
  }
  int v26 = *((_DWORD *)a2 + 33);
  if (v26) {
    *((_DWORD *)v3 + 33) = v26;
  }
  return this;
}

void sub_223F67A44(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::NeuralNetworkLayer::~NeuralNetworkLayer(CoreML::Specification::NeuralNetworkLayer *this)
{
  *(void *)this = &unk_26D75E868;
  CoreML::Specification::NeuralNetworkLayer::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 11);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 8);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 5);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::NeuralNetworkLayer::~NeuralNetworkLayer(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 112);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
  }
  if (*(_DWORD *)(v1 + 140))
  {
    return CoreML::Specification::NeuralNetworkLayer::clear_layer(v1);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::clear_layer(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 140);
  if (v2 > 879)
  {
    if (v2 > 1139)
    {
      if (v2 <= 1274)
      {
        if (v2 <= 1199)
        {
          if (v2 <= 1169)
          {
            if (v2 > 1149)
            {
              if (v2 != 1150 && v2 != 1155) {
                goto LABEL_78;
              }
            }
            else if (v2 != 1140 && v2 != 1145)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 1179)
          {
            if (v2 != 1170 && v2 != 1175) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1180 && v2 != 1190 && v2 != 1195)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 1249)
        {
          if (v2 <= 1259)
          {
            if (v2 != 1250 && v2 != 1255) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1260 && v2 != 1265 && v2 != 1270)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1214)
        {
          if (v2 != 1200 && v2 != 1210) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1215 && v2 != 1220 && v2 != 1230)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 1349)
      {
        if (v2 > 1312)
        {
          if (v2 <= 1319)
          {
            if (v2 != 1313 && v2 != 1315) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1320 && v2 != 1325 && v2 != 1330)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1284)
        {
          if (v2 != 1275 && v2 != 1280) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1285 && v2 != 1290 && v2 != 1295)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 1454)
      {
        if (v2 != 1350 && v2 != 1400 && v2 != 1450) {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      switch(v2)
      {
        case 1455:
        case 1460:
        case 1461:
        case 1465:
        case 1466:
        case 1470:
        case 1471:
          goto LABEL_76;
        default:
          break;
      }
    }
    else
    {
      if (v2 > 994)
      {
        if (v2 > 1079)
        {
          if (v2 > 1109)
          {
            if (v2 <= 1124)
            {
              if (v2 != 1110 && v2 != 1120) {
                goto LABEL_78;
              }
            }
            else if (v2 != 1125 && v2 != 1130 && v2 != 1135)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 1089)
          {
            if (v2 != 1080 && v2 != 1085) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1090 && v2 != 1100 && v2 != 1105)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 1024)
        {
          if (v2 <= 1044)
          {
            if (v2 != 1025 && v2 != 1040) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1045 && v2 != 1065 && v2 != 1070)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1004)
        {
          if (v2 != 995 && v2 != 1000) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1005 && v2 != 1015 && v2 != 1020)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 939)
      {
        if (v2 > 904)
        {
          if (v2 <= 924)
          {
            if (v2 != 905 && v2 != 920) {
              goto LABEL_78;
            }
          }
          else if (v2 != 925 && v2 != 930 && v2 != 935)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 889)
        {
          if (v2 != 880 && v2 != 885) {
            goto LABEL_78;
          }
        }
        else if (v2 != 890 && v2 != 895 && v2 != 900)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 > 959)
      {
        if (v2 <= 974)
        {
          if (v2 != 960 && v2 != 965) {
            goto LABEL_78;
          }
        }
        else if (v2 != 975 && v2 != 980 && v2 != 985)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      switch(v2)
      {
        case 945:
        case 950:
        case 952:
        case 954:
          goto LABEL_76;
        case 946:
        case 947:
        case 948:
        case 949:
        case 951:
        case 953:
          break;
        default:
          if (v2 == 940) {
            goto LABEL_76;
          }
          break;
      }
    }
  }
  else
  {
    if (v2 <= 604)
    {
      if (v2 > 249)
      {
        if (v2 > 329)
        {
          if (v2 > 409)
          {
            if (v2 <= 429)
            {
              if (v2 != 410 && v2 != 420) {
                goto LABEL_78;
              }
            }
            else if (v2 != 430 && v2 != 500 && v2 != 600)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 344)
          {
            if (v2 != 330 && v2 != 340) {
              goto LABEL_78;
            }
          }
          else if (v2 != 345 && v2 != 350 && v2 != 400)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 289)
        {
          if (v2 <= 300)
          {
            if (v2 != 290 && v2 != 300) {
              goto LABEL_78;
            }
          }
          else if (v2 != 301 && v2 != 310 && v2 != 320)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 260)
        {
          if (v2 != 250 && v2 != 260) {
            goto LABEL_78;
          }
        }
        else if (v2 != 261 && v2 != 270 && v2 != 280)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 189)
      {
        if (v2 > 219)
        {
          if (v2 <= 230)
          {
            if (v2 != 220 && v2 != 230) {
              goto LABEL_78;
            }
          }
          else if (v2 != 231 && v2 != 240 && v2 != 245)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 209)
        {
          if (v2 != 190 && v2 != 200) {
            goto LABEL_78;
          }
        }
        else if (v2 != 210 && v2 != 211 && v2 != 212)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 159)
      {
        if (v2 <= 169)
        {
          if (v2 != 160 && v2 != 165) {
            goto LABEL_78;
          }
        }
        else if (v2 != 170 && v2 != 175 && v2 != 180)
        {
          goto LABEL_78;
        }
      }
      else if (v2 <= 129)
      {
        if (v2 != 100 && v2 != 120) {
          goto LABEL_78;
        }
      }
      else if (v2 != 130 && v2 != 140 && v2 != 150)
      {
        goto LABEL_78;
      }
LABEL_76:
      this = *(void *)(this + 128);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      goto LABEL_78;
    }
    if (v2 <= 759)
    {
      if (v2 > 684)
      {
        if (v2 > 729)
        {
          if (v2 <= 739)
          {
            if (v2 != 730 && v2 != 735) {
              goto LABEL_78;
            }
          }
          else if (v2 != 740 && v2 != 750 && v2 != 755)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 709)
        {
          if (v2 != 685 && v2 != 700) {
            goto LABEL_78;
          }
        }
        else if (v2 != 710 && v2 != 715 && v2 != 720)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 639)
      {
        if (v2 <= 664)
        {
          if (v2 != 640 && v2 != 660) {
            goto LABEL_78;
          }
        }
        else if (v2 != 665 && v2 != 670 && v2 != 680)
        {
          goto LABEL_78;
        }
      }
      else if (v2 <= 619)
      {
        if (v2 != 605 && v2 != 615) {
          goto LABEL_78;
        }
      }
      else if (v2 != 620 && v2 != 625 && v2 != 635)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (v2 <= 824)
    {
      if (v2 > 789)
      {
        if (v2 > 814)
        {
          if (v2 != 815 && v2 != 820) {
            goto LABEL_78;
          }
        }
        else if (v2 != 790 && v2 != 795)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 774)
      {
        if (v2 != 775 && v2 != 780) {
          goto LABEL_78;
        }
      }
      else if (v2 != 760 && v2 != 770)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (v2 > 849)
    {
      if (v2 <= 864)
      {
        if (v2 != 850 && v2 != 855) {
          goto LABEL_78;
        }
      }
      else if (v2 != 865 && v2 != 870 && v2 != 875)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    switch(v2)
    {
      case 825:
      case 827:
      case 830:
      case 832:
        goto LABEL_76;
      case 826:
      case 828:
      case 829:
      case 831:
        break;
      default:
        if (v2 == 840 || v2 == 845) {
          goto LABEL_76;
        }
        break;
    }
  }
LABEL_78:
  *(_DWORD *)(v1 + 14CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

void CoreML::Specification::NeuralNetworkLayer::New(CoreML::Specification::NeuralNetworkLayer *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F684A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40665201BALL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::NeuralNetworkLayer>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::NeuralNetworkLayer>);
  }
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::Clear(CoreML::Specification::NeuralNetworkLayer *this)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Clear<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 16);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Clear<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  uint64_t v2 = *((unsigned int *)this + 18);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 10) + 8);
    do
    {
      uint64_t v4 = *v3++;
      *(_DWORD *)(v4 + 16) = 0;
      *(_DWORD *)(v4 + 36) = 0;
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 18) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 24);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*((void *)this + 13) + 8);
    do
    {
      uint64_t v7 = *v6++;
      *(_DWORD *)(v7 + 16) = 0;
      *(_DWORD *)(v7 + 36) = 0;
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 24) = 0;
  }
  uint64_t v8 = *((void *)this + 14);
  if ((uint64_t *)v8 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)uint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  *((unsigned char *)this + 12CoreML::Specification::Identity::New(this, 0) = 0;
  return CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkLayer *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (_DWORD *)((char *)this + 140);
  int v6 = (CoreML::Specification::CategoricalDistributionLayerParams **)((char *)this + 128);
  v943 = (char *)this + 88;
  uint64_t v7 = (char *)this + 64;
  uint64_t v8 = (unsigned int *)((char *)this + 40);
  int v9 = (unsigned int *)((char *)this + 16);
  int v10 = (std::string **)((char *)this + 112);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            while (1)
            {
              while (1)
              {
LABEL_2:
                int v11 = *(unsigned __int8 **)a2;
                unint64_t v12 = *((void *)a2 + 1);
                if (*(void *)a2 >= v12)
                {
                  uint64_t v14 = 0;
                }
                else
                {
                  int v13 = v11 + 1;
                  uint64_t v14 = *v11;
                  if ((char)*v11 >= 1)
                  {
                    *(void *)a2 = v13;
                    unint64_t v15 = v14 | 0x100000000;
                    if ((v15 & 0x100000000) == 0) {
                      goto LABEL_9;
                    }
                    goto LABEL_17;
                  }
                  if ((unint64_t)v13 < v12)
                  {
                    int v16 = *v13;
                    if ((v14 & ~v16) >= 0x80)
                    {
                      *(void *)a2 = v11 + 2;
                      unint64_t v15 = (v14 + (v16 << 7) - 128) | 0x100000000;
                      goto LABEL_17;
                    }
                  }
                }
                unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v14);
                unint64_t v15 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
                if ((v15 & 0x100000000) == 0) {
                  goto LABEL_9;
                }
LABEL_17:
                unsigned int v19 = v15 >> 3;
                if (v15 >> 3 <= 0x360) {
                  break;
                }
                if (v15 >> 3 > 0x469)
                {
                  if (v15 >> 3 <= 0x4F5)
                  {
                    if (v15 >> 3 > 0x4AA)
                    {
                      if (v15 >> 3 > 0x4CD)
                      {
                        if (v15 >> 3 <= 0x4E6)
                        {
                          if (v19 == 1230)
                          {
                            if (v15 != 114) {
                              goto LABEL_9;
                            }
                            if (*v5 != 1230)
                            {
                              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                              *((_DWORD *)this + 35) = 1230;
                              operator new();
                            }
                            v230 = *v6;
                            v446 = *(char **)a2;
                            if (*(void *)a2 >= *((void *)a2 + 1) || *v446 < 0)
                            {
                              VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                              if (VarintSizeAsIntFallback < 0) {
                                return 0;
                              }
                            }
                            else
                            {
                              VarintSizeAsIntFallbacunint64_t k = *v446;
                              *(void *)a2 = v446 + 1;
                            }
                            unint64_t v902 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
                            if ((v902 & 0x8000000000000000) != 0) {
                              return 0;
                            }
                            int v904 = v902;
                            uint64_t result = CoreML::Specification::CategoricalDistributionLayerParams::MergePartialFromCodedStream(v230, (char **)a2, v903);
                            if (!result) {
                              return result;
                            }
                            if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v904))return 0; {
                          }
                            }
                          else
                          {
                            if (v19 != 1250 || v15 != 18) {
                              goto LABEL_9;
                            }
                            if (*v5 != 1250)
                            {
                              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                              *((_DWORD *)this + 35) = 1250;
                              operator new();
                            }
                            v95 = *v6;
                            v338 = *(char **)a2;
                            if (*(void *)a2 >= *((void *)a2 + 1) || *v338 < 0)
                            {
                              int v339 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                              if (v339 < 0) {
                                return 0;
                              }
                            }
                            else
                            {
                              int v339 = *v338;
                              *(void *)a2 = v338 + 1;
                            }
                            unint64_t v745 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v339);
                            if ((v745 & 0x8000000000000000) != 0) {
                              return 0;
                            }
                            int v747 = v745;
                            uint64_t result = CoreML::Specification::ReduceL1LayerParams::MergePartialFromCodedStream(v95, (char **)a2, v746);
                            if (!result) {
                              return result;
                            }
                            if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v747))return 0; {
                          }
                            }
                        }
                        else if (v19 == 1255)
                        {
                          if (v15 != 58) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1255)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1255;
                            operator new();
                          }
                          v188 = *v6;
                          v398 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v398 < 0)
                          {
                            int v399 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v399 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v399 = *v398;
                            *(void *)a2 = v398 + 1;
                          }
                          unint64_t v832 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v399);
                          if ((v832 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v834 = v832;
                          uint64_t result = CoreML::Specification::ReduceL2LayerParams::MergePartialFromCodedStream(v188, (char **)a2, v833);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v834)) {
                            return 0;
                          }
                        }
                        else if (v19 == 1260)
                        {
                          if (v15 != 98) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1260)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1260;
                            operator new();
                          }
                          v189 = *v6;
                          v400 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v400 < 0)
                          {
                            int v401 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v401 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v401 = *v400;
                            *(void *)a2 = v400 + 1;
                          }
                          unint64_t v835 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v401);
                          if ((v835 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v837 = v835;
                          uint64_t result = CoreML::Specification::ReduceMaxLayerParams::MergePartialFromCodedStream(v189, (char **)a2, v836);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v837)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1265 || v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1265)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1265;
                            operator new();
                          }
                          unint64_t v56 = *v6;
                          v300 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v300 < 0)
                          {
                            int v301 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v301 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v301 = *v300;
                            *(void *)a2 = v300 + 1;
                          }
                          unint64_t v690 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v301);
                          if ((v690 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v692 = v690;
                          uint64_t result = CoreML::Specification::ReduceMinLayerParams::MergePartialFromCodedStream(v56, (char **)a2, v691);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v692)) {
                            return 0;
                          }
                        }
                      }
                      else if (v15 >> 3 <= 0x4B9)
                      {
                        if (v19 == 1195)
                        {
                          if (v15 != 90) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1195)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1195;
                            operator new();
                          }
                          v214 = *v6;
                          v426 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v426 < 0)
                          {
                            int v427 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v427 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v427 = *v426;
                            *(void *)a2 = v426 + 1;
                          }
                          unint64_t v873 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v427);
                          if ((v873 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v875 = v873;
                          uint64_t result = CoreML::Specification::RandomUniformStaticLayerParams::MergePartialFromCodedStream(v214, (char **)a2, v874);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v875)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1200 || v15 != 130) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1200)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1200;
                            operator new();
                          }
                          unsigned int v78 = *v6;
                          v320 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v320 < 0)
                          {
                            int v321 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v321 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v321 = *v320;
                            *(void *)a2 = v320 + 1;
                          }
                          unint64_t v719 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v321);
                          if ((v719 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v721 = v719;
                          uint64_t result = CoreML::Specification::RandomUniformDynamicLayerParams::MergePartialFromCodedStream(v78, (char **)a2, v720);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v721)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1210)
                      {
                        if (v15 != 210) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1210)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1210;
                          operator new();
                        }
                        v152 = *v6;
                        v366 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v366 < 0)
                        {
                          int v367 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v367 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v367 = *v366;
                          *(void *)a2 = v366 + 1;
                        }
                        unint64_t v786 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v367);
                        if ((v786 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v788 = v786;
                        uint64_t result = CoreML::Specification::RandomBernoulliLikeLayerParams::MergePartialFromCodedStream(v152, (char **)a2, v787);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v788)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1215)
                      {
                        if (v15 != 250) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1215)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1215;
                          operator new();
                        }
                        v153 = *v6;
                        v368 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v368 < 0)
                        {
                          int v369 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v369 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v369 = *v368;
                          *(void *)a2 = v368 + 1;
                        }
                        unint64_t v789 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v369);
                        if ((v789 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v791 = v789;
                        uint64_t result = CoreML::Specification::RandomBernoulliStaticLayerParams::MergePartialFromCodedStream(v153, (char **)a2, v790);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v791)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1220 || v15 != 34) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1220)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1220;
                          operator new();
                        }
                        int v41 = *v6;
                        v278 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v278 < 0)
                        {
                          int v279 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v279 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v279 = *v278;
                          *(void *)a2 = v278 + 1;
                        }
                        unint64_t v658 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v279);
                        if ((v658 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v660 = v658;
                        uint64_t result = CoreML::Specification::RandomBernoulliDynamicLayerParams::MergePartialFromCodedStream(v41, (char **)a2, v659);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v660)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 > 0x482)
                    {
                      if (v15 >> 3 <= 0x496)
                      {
                        if (v19 == 1155)
                        {
                          if (v15 != 26) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1155)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1155;
                            operator new();
                          }
                          v223 = *v6;
                          v436 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v436 < 0)
                          {
                            int v437 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v437 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v437 = *v436;
                            *(void *)a2 = v436 + 1;
                          }
                          unint64_t v887 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v437);
                          if ((v887 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v889 = v887;
                          uint64_t result = CoreML::Specification::ConstantPaddingLayerParams::MergePartialFromCodedStream(v223, (char **)a2, v888);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v889)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1170 || v15 != 146) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1170)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1170;
                            operator new();
                          }
                          int v88 = *v6;
                          v328 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v328 < 0)
                          {
                            int v329 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v329 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v329 = *v328;
                            *(void *)a2 = v328 + 1;
                          }
                          unint64_t v730 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v329);
                          if ((v730 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v732 = v730;
                          uint64_t result = CoreML::Specification::RandomNormalLikeLayerParams::MergePartialFromCodedStream(v88, (char **)a2, v731);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v732)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1175)
                      {
                        if (v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1175)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1175;
                          operator new();
                        }
                        v173 = *v6;
                        v380 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v380 < 0)
                        {
                          int v381 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v381 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v381 = *v380;
                          *(void *)a2 = v380 + 1;
                        }
                        unint64_t v805 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v381);
                        if ((v805 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v807 = v805;
                        uint64_t result = CoreML::Specification::RandomNormalStaticLayerParams::MergePartialFromCodedStream(v173, (char **)a2, v806);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v807)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1180)
                      {
                        if (v15 != 226) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1180)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1180;
                          operator new();
                        }
                        v174 = *v6;
                        v382 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v382 < 0)
                        {
                          int v383 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v383 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v383 = *v382;
                          *(void *)a2 = v382 + 1;
                        }
                        unint64_t v808 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v383);
                        if ((v808 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v810 = v808;
                        uint64_t result = CoreML::Specification::RandomNormalDynamicLayerParams::MergePartialFromCodedStream(v174, (char **)a2, v809);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v810)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1190 || v15 != 50) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1190)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1190;
                          operator new();
                        }
                        int v50 = *v6;
                        v288 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v288 < 0)
                        {
                          int v289 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v289 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v289 = *v288;
                          *(void *)a2 = v288 + 1;
                        }
                        unint64_t v672 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v289);
                        if ((v672 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v674 = v672;
                        uint64_t result = CoreML::Specification::RandomUniformLikeLayerParams::MergePartialFromCodedStream(v50, (char **)a2, v673);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v674)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x473)
                    {
                      if (v19 == 1130)
                      {
                        if (v15 != 82) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1130)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1130;
                          operator new();
                        }
                        v207 = *v6;
                        v416 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v416 < 0)
                        {
                          int v417 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v417 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v417 = *v416;
                          *(void *)a2 = v416 + 1;
                        }
                        unint64_t v859 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v417);
                        if ((v859 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v861 = v859;
                        uint64_t result = CoreML::Specification::FlattenTo2DLayerParams::MergePartialFromCodedStream(v207, (char **)a2, v860);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v861)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1135 || v15 != 122) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1135)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1135;
                          operator new();
                        }
                        unsigned int v70 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v70 < 0)
                        {
                          int v71 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v71 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v71 = *v70;
                          *(void *)a2 = v70 + 1;
                        }
                        unint64_t v533 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v71);
                        if ((v533 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v535 = v533;
                        uint64_t result = CoreML::Specification::ReshapeLikeLayerParams::MergePartialFromCodedStream((CoreML::Specification::ReshapeLikeLayerParams *)v533, (char **)a2, v534);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v535)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1140)
                    {
                      if (v15 != 162) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1140)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1140;
                        operator new();
                      }
                      v138 = *v6;
                      v346 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v346 < 0)
                      {
                        int v347 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v347 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v347 = *v346;
                        *(void *)a2 = v346 + 1;
                      }
                      unint64_t v757 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v347);
                      if ((v757 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v759 = v757;
                      uint64_t result = CoreML::Specification::ReshapeStaticLayerParams::MergePartialFromCodedStream(v138, (char **)a2, v758);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v759)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1145)
                    {
                      if (v15 != 202) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1145)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1145;
                        operator new();
                      }
                      v139 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v139 < 0)
                      {
                        int v140 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v140 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v140 = *v139;
                        *(void *)a2 = v139 + 1;
                      }
                      unint64_t v572 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v140);
                      if ((v572 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v574 = v572;
                      uint64_t result = CoreML::Specification::ReshapeDynamicLayerParams::MergePartialFromCodedStream((CoreML::Specification::ReshapeDynamicLayerParams *)v572, (char **)a2, v573);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v574)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1150 || v15 != 242) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1150)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1150;
                        operator new();
                      }
                      unsigned int v32 = *v6;
                      v268 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v268 < 0)
                      {
                        int v269 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v269 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v269 = *v268;
                        *(void *)a2 = v268 + 1;
                      }
                      unint64_t v643 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v269);
                      if ((v643 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v645 = v643;
                      uint64_t result = CoreML::Specification::RankPreservingReshapeLayerParams::MergePartialFromCodedStream(v32, (char **)a2, v644);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v645)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 <= 0x531)
                  {
                    if (v15 >> 3 > 0x50E)
                    {
                      if (v15 >> 3 <= 0x522)
                      {
                        if (v19 == 1295)
                        {
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1295)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1295;
                            operator new();
                          }
                          v226 = *v6;
                          v442 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v442 < 0)
                          {
                            int v443 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v443 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v443 = *v442;
                            *(void *)a2 = v442 + 1;
                          }
                          unint64_t v896 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v443);
                          if ((v896 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v898 = v896;
                          uint64_t result = CoreML::Specification::ReduceLogSumExpLayerParams::MergePartialFromCodedStream(v226, (char **)a2, v897);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v898)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1313 || v15 != 10) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1313)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1313;
                            operator new();
                          }
                          int64_t v91 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v91 < 0)
                          {
                            int v92 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v92 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v92 = *v91;
                            *(void *)a2 = v91 + 1;
                          }
                          unint64_t v545 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v92);
                          if ((v545 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v547 = v545;
                          uint64_t result = CoreML::Specification::WhereNonZeroLayerParams::MergePartialFromCodedStream((CoreML::Specification::WhereNonZeroLayerParams *)v545, (char **)a2, v546);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v547)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1315)
                      {
                        if (v15 != 26) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1315)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1315;
                          operator new();
                        }
                        v181 = *v6;
                        v388 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v388 < 0)
                        {
                          int v389 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v389 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v389 = *v388;
                          *(void *)a2 = v388 + 1;
                        }
                        unint64_t v817 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v389);
                        if ((v817 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v819 = v817;
                        uint64_t result = CoreML::Specification::MatrixBandPartLayerParams::MergePartialFromCodedStream(v181, (char **)a2, v818);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v819)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1320)
                      {
                        if (v15 != 66) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1320)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1320;
                          operator new();
                        }
                        v182 = *v6;
                        v390 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v390 < 0)
                        {
                          int v391 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v391 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v391 = *v390;
                          *(void *)a2 = v390 + 1;
                        }
                        unint64_t v820 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v391);
                        if ((v820 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v822 = v820;
                        uint64_t result = CoreML::Specification::LowerTriangularLayerParams::MergePartialFromCodedStream(v182, (char **)a2, v821);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v822)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1325 || v15 != 106) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1325)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1325;
                          operator new();
                        }
                        unsigned int v53 = *v6;
                        v294 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v294 < 0)
                        {
                          int v295 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v295 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v295 = *v294;
                          *(void *)a2 = v294 + 1;
                        }
                        unint64_t v681 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v295);
                        if ((v681 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v683 = v681;
                        uint64_t result = CoreML::Specification::UpperTriangularLayerParams::MergePartialFromCodedStream(v53, (char **)a2, v682);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v683)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x4FF)
                    {
                      if (v19 == 1270)
                      {
                        if (v15 != 178) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1270)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1270;
                          operator new();
                        }
                        v210 = *v6;
                        v422 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v422 < 0)
                        {
                          int v423 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v423 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v423 = *v422;
                          *(void *)a2 = v422 + 1;
                        }
                        unint64_t v867 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v423);
                        if ((v867 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v869 = v867;
                        uint64_t result = CoreML::Specification::ReduceSumLayerParams::MergePartialFromCodedStream(v210, (char **)a2, v868);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v869)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1275 || v15 != 218) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1275)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1275;
                          operator new();
                        }
                        unsigned int v74 = *v6;
                        v314 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v314 < 0)
                        {
                          int v315 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v315 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v315 = *v314;
                          *(void *)a2 = v314 + 1;
                        }
                        unint64_t v710 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v315);
                        if ((v710 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v712 = v710;
                        uint64_t result = CoreML::Specification::ReduceProdLayerParams::MergePartialFromCodedStream(v74, (char **)a2, v711);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v712)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1280)
                    {
                      if (v15 != 2) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1280)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1280;
                        operator new();
                      }
                      v146 = *v6;
                      v354 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v354 < 0)
                      {
                        int v355 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v355 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v355 = *v354;
                        *(void *)a2 = v354 + 1;
                      }
                      unint64_t v768 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v355);
                      if ((v768 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v770 = v768;
                      uint64_t result = CoreML::Specification::ReduceMeanLayerParams::MergePartialFromCodedStream(v146, (char **)a2, v769);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v770)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1285)
                    {
                      if (v15 != 42) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1285)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1285;
                        operator new();
                      }
                      v147 = *v6;
                      v356 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v356 < 0)
                      {
                        int v357 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v357 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v357 = *v356;
                        *(void *)a2 = v356 + 1;
                      }
                      unint64_t v771 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v357);
                      if ((v771 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v773 = v771;
                      uint64_t result = CoreML::Specification::ReduceLogSumLayerParams::MergePartialFromCodedStream(v147, (char **)a2, v772);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v773)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1290 || v15 != 82) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1290)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1290;
                        operator new();
                      }
                      int v37 = *v6;
                      v272 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v272 < 0)
                      {
                        int v273 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v273 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v273 = *v272;
                        *(void *)a2 = v272 + 1;
                      }
                      unint64_t v649 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v273);
                      if ((v649 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v651 = v649;
                      uint64_t result = CoreML::Specification::ReduceSumSquareLayerParams::MergePartialFromCodedStream(v37, (char **)a2, v650);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v651)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    if (v15 >> 3 > 0x5A9)
                    {
                      switch(v19)
                      {
                        case 0x5AFu:
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1455)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1455;
                            operator new();
                          }
                          uint64_t v27 = *v6;
                          v461 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v461 < 0)
                          {
                            int v462 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v462 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v462 = *v461;
                            *(void *)a2 = v461 + 1;
                          }
                          unint64_t v911 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v462);
                          if ((v911 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v913 = v911;
                          uint64_t result = CoreML::Specification::CumSumLayerParams::MergePartialFromCodedStream(v27, (char **)a2, v912);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v913)) {
                            return 0;
                          }
                          continue;
                        case 0x5B0u:
                        case 0x5B1u:
                        case 0x5B2u:
                        case 0x5B3u:
                        case 0x5B6u:
                        case 0x5B7u:
                        case 0x5B8u:
                        case 0x5BBu:
                        case 0x5BCu:
                        case 0x5BDu:
                          goto LABEL_9;
                        case 0x5B4u:
                          if (v15 != 162) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1460)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1460;
                            operator new();
                          }
                          v235 = *v6;
                          v463 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v463 < 0)
                          {
                            int v464 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v464 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v464 = *v463;
                            *(void *)a2 = v463 + 1;
                          }
                          unint64_t v914 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v464);
                          if ((v914 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v916 = v914;
                          uint64_t result = CoreML::Specification::ClampedReLULayerParams::MergePartialFromCodedStream(v235, (char **)a2, v915);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v916)) {
                            return 0;
                          }
                          continue;
                        case 0x5B5u:
                          if (v15 != 170) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1461)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1461;
                            operator new();
                          }
                          v236 = *v6;
                          v465 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v465 < 0)
                          {
                            int v466 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v466 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v466 = *v465;
                            *(void *)a2 = v465 + 1;
                          }
                          unint64_t v917 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v466);
                          if ((v917 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v919 = v917;
                          uint64_t result = CoreML::Specification::ArgSortLayerParams::MergePartialFromCodedStream(v236, (char **)a2, v918);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v919)) {
                            return 0;
                          }
                          continue;
                        case 0x5B9u:
                          if (v15 != 202) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1465)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1465;
                            operator new();
                          }
                          v237 = *v6;
                          v467 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v467 < 0)
                          {
                            int v468 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v468 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v468 = *v467;
                            *(void *)a2 = v467 + 1;
                          }
                          unint64_t v920 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v468);
                          if ((v920 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v922 = v920;
                          uint64_t result = CoreML::Specification::Pooling3DLayerParams::MergePartialFromCodedStream(v237, (char **)a2, v921);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v922)) {
                            return 0;
                          }
                          continue;
                        case 0x5BAu:
                          if (v15 != 210) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1466)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1466;
                            operator new();
                          }
                          v238 = *v6;
                          v469 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v469 < 0)
                          {
                            int v470 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v470 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v470 = *v469;
                            *(void *)a2 = v469 + 1;
                          }
                          unint64_t v923 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v470);
                          if ((v923 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v925 = v923;
                          uint64_t result = CoreML::Specification::GlobalPooling3DLayerParams::MergePartialFromCodedStream(v238, (char **)a2, v924);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v925)) {
                            return 0;
                          }
                          continue;
                        case 0x5BEu:
                          if (v15 != 242) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1470)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1470;
                            operator new();
                          }
                          v239 = *v6;
                          v471 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v471 < 0)
                          {
                            int v472 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v472 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v472 = *v471;
                            *(void *)a2 = v471 + 1;
                          }
                          unint64_t v926 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v472);
                          if ((v926 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v928 = v926;
                          uint64_t result = CoreML::Specification::SliceBySizeLayerParams::MergePartialFromCodedStream(v239, (char **)a2, v927);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v928)) {
                            return 0;
                          }
                          continue;
                        case 0x5BFu:
                          if (v15 != 250) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1471)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1471;
                            operator new();
                          }
                          v240 = *v6;
                          v473 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v473 < 0)
                          {
                            int v474 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v474 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v474 = *v473;
                            *(void *)a2 = v473 + 1;
                          }
                          unint64_t v929 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v474);
                          if ((v929 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v931 = v929;
                          uint64_t result = CoreML::Specification::Convolution3DLayerParams::MergePartialFromCodedStream(v240, a2, v930);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v931)) {
                            return 0;
                          }
                          continue;
                        default:
                          if (v19 != 1450 || v15 != 82) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1450)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1450;
                            operator new();
                          }
                          v234 = *v6;
                          v475 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v475 < 0)
                          {
                            int v476 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v476 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v476 = *v475;
                            *(void *)a2 = v475 + 1;
                          }
                          unint64_t v932 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v476);
                          if ((v932 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v934 = v932;
                          uint64_t result = CoreML::Specification::OneHotLayerParams::MergePartialFromCodedStream(v234, (char **)a2, v933);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v934)) {
                            return 0;
                          }
                          continue;
                      }
                    }
                    if (v19 == 1330)
                    {
                      if (v15 != 146) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1330)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1330;
                        operator new();
                      }
                      BOOL v98 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v98 < 0)
                      {
                        int v99 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v99 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v99 = *v98;
                        *(void *)a2 = v98 + 1;
                      }
                      unint64_t v448 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v99);
                      if ((v448 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v450 = v448;
                      uint64_t result = CoreML::Specification::WhereBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::WhereBroadcastableLayerParams *)v448, (char **)a2, v449);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v450)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1350)
                    {
                      if (v15 != 50) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1350)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1350;
                        operator new();
                      }
                      std::string::size_type v100 = *v6;
                      v246 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v246 < 0)
                      {
                        int v247 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v247 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v247 = *v246;
                        *(void *)a2 = v246 + 1;
                      }
                      unint64_t v454 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v247);
                      if ((v454 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v456 = v454;
                      uint64_t result = CoreML::Specification::LayerNormalizationLayerParams::MergePartialFromCodedStream(v100, (char **)a2, v455);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v456)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1400 || v15 != 194) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1400)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1400;
                        operator new();
                      }
                      unsigned int v57 = *v6;
                      v244 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v244 < 0)
                      {
                        int v245 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v245 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v245 = *v244;
                        *(void *)a2 = v244 + 1;
                      }
                      unint64_t v451 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v245);
                      if ((v451 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v453 = v451;
                      uint64_t result = CoreML::Specification::NonMaximumSuppressionLayerParams::MergePartialFromCodedStream(v57, (char **)a2, v452);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v453)) {
                        return 0;
                      }
                    }
                  }
                }
                else if (v15 >> 3 > 0x3D3)
                {
                  if (v15 >> 3 > 0x428)
                  {
                    if (v15 >> 3 > 0x44B)
                    {
                      if (v15 >> 3 <= 0x455)
                      {
                        if (v19 == 1100)
                        {
                          if (v15 != 98) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1100)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1100;
                            operator new();
                          }
                          v228 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v228 < 0)
                          {
                            int v229 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v229 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v229 = *v228;
                            *(void *)a2 = v228 + 1;
                          }
                          unint64_t v631 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v229);
                          if ((v631 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v633 = v631;
                          uint64_t result = CoreML::Specification::BroadcastToLikeLayerParams::MergePartialFromCodedStream((CoreML::Specification::BroadcastToLikeLayerParams *)v631, (char **)a2, v632);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v633)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1105 || v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1105)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1105;
                            operator new();
                          }
                          size_t v94 = *v6;
                          v336 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v336 < 0)
                          {
                            int v337 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v337 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v337 = *v336;
                            *(void *)a2 = v336 + 1;
                          }
                          unint64_t v742 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v337);
                          if ((v742 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v744 = v742;
                          uint64_t result = CoreML::Specification::BroadcastToStaticLayerParams::MergePartialFromCodedStream(v94, (char **)a2, v743);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v744)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1110)
                      {
                        if (v15 != 178) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1110)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1110;
                          operator new();
                        }
                        v185 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v185 < 0)
                        {
                          int v186 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v186 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v186 = *v185;
                          *(void *)a2 = v185 + 1;
                        }
                        unint64_t v604 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v186);
                        if ((v604 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v606 = v604;
                        uint64_t result = CoreML::Specification::BroadcastToDynamicLayerParams::MergePartialFromCodedStream((CoreML::Specification::BroadcastToDynamicLayerParams *)v604, (char **)a2, v605);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v606)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1120)
                      {
                        if (v15 != 2) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1120)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1120;
                          operator new();
                        }
                        v187 = *v6;
                        v396 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v396 < 0)
                        {
                          int v397 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v397 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v397 = *v396;
                          *(void *)a2 = v396 + 1;
                        }
                        unint64_t v829 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v397);
                        if ((v829 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v831 = v829;
                        uint64_t result = CoreML::Specification::SqueezeLayerParams::MergePartialFromCodedStream(v187, (char **)a2, v830);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v831)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1125 || v15 != 42) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1125)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1125;
                          operator new();
                        }
                        unsigned int v55 = *v6;
                        v298 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v298 < 0)
                        {
                          int v299 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v299 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v299 = *v298;
                          *(void *)a2 = v298 + 1;
                        }
                        unint64_t v687 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v299);
                        if ((v687 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v689 = v687;
                        uint64_t result = CoreML::Specification::ExpandDimsLayerParams::MergePartialFromCodedStream(v55, (char **)a2, v688);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v689)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x437)
                    {
                      if (v19 == 1065)
                      {
                        if (v15 != 74) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1065)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1065;
                          operator new();
                        }
                        v212 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v212 < 0)
                        {
                          int v213 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v213 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v213 = *v212;
                          *(void *)a2 = v212 + 1;
                        }
                        unint64_t v622 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v213);
                        if ((v622 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v624 = v622;
                        uint64_t result = CoreML::Specification::GetShapeLayerParams::MergePartialFromCodedStream((CoreML::Specification::GetShapeLayerParams *)v622, (char **)a2, v623);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v624)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1070 || v15 != 114) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1070)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1070;
                          operator new();
                        }
                        unsigned int v76 = *v6;
                        v318 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v318 < 0)
                        {
                          int v319 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v319 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v319 = *v318;
                          *(void *)a2 = v318 + 1;
                        }
                        unint64_t v716 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v319);
                        if ((v716 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v718 = v716;
                        uint64_t result = CoreML::Specification::LoadConstantNDLayerParams::MergePartialFromCodedStream(v76, (char **)a2, v717);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v718)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1080)
                    {
                      if (v15 != 194) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1080)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1080;
                        operator new();
                      }
                      v150 = *v6;
                      v362 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v362 < 0)
                      {
                        int v363 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v363 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v363 = *v362;
                        *(void *)a2 = v362 + 1;
                      }
                      unint64_t v780 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v363);
                      if ((v780 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v782 = v780;
                      uint64_t result = CoreML::Specification::FillLikeLayerParams::MergePartialFromCodedStream(v150, (char **)a2, v781);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v782)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1085)
                    {
                      if (v15 != 234) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1085)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1085;
                        operator new();
                      }
                      v151 = *v6;
                      v364 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v364 < 0)
                      {
                        int v365 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v365 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v365 = *v364;
                        *(void *)a2 = v364 + 1;
                      }
                      unint64_t v783 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v365);
                      if ((v783 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v785 = v783;
                      uint64_t result = CoreML::Specification::FillStaticLayerParams::MergePartialFromCodedStream(v151, (char **)a2, v784);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v785)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1090 || v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1090)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1090;
                        operator new();
                      }
                      int v39 = *v6;
                      v276 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v276 < 0)
                      {
                        int v277 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v277 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v277 = *v276;
                        *(void *)a2 = v276 + 1;
                      }
                      unint64_t v655 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v277);
                      if ((v655 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v657 = v655;
                      uint64_t result = CoreML::Specification::FillDynamicLayerParams::MergePartialFromCodedStream(v39, (char **)a2, v656);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v657)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 > 0x3F6)
                  {
                    if (v15 >> 3 <= 0x400)
                    {
                      if (v19 == 1015)
                      {
                        if (v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1015)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1015;
                          operator new();
                        }
                        v220 = *v6;
                        v434 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v434 < 0)
                        {
                          int v435 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v435 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v435 = *v434;
                          *(void *)a2 = v434 + 1;
                        }
                        unint64_t v884 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v435);
                        if ((v884 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v886 = v884;
                        uint64_t result = CoreML::Specification::TopKLayerParams::MergePartialFromCodedStream(v220, (char **)a2, v885);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v886)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1020 || v15 != 226) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1020)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1020;
                          operator new();
                        }
                        unint64_t v85 = *v6;
                        v326 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v326 < 0)
                        {
                          int v327 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v327 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v327 = *v326;
                          *(void *)a2 = v326 + 1;
                        }
                        unint64_t v727 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v327);
                        if ((v727 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v729 = v727;
                        uint64_t result = CoreML::Specification::ArgMinLayerParams::MergePartialFromCodedStream(v85, (char **)a2, v728);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v729)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1025)
                    {
                      if (v15 != 10) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1025)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1025;
                        operator new();
                      }
                      v167 = *v6;
                      v376 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v376 < 0)
                      {
                        int v377 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v377 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v377 = *v376;
                        *(void *)a2 = v376 + 1;
                      }
                      unint64_t v799 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v377);
                      if ((v799 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v801 = v799;
                      uint64_t result = CoreML::Specification::ArgMaxLayerParams::MergePartialFromCodedStream(v167, (char **)a2, v800);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v801)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1040)
                    {
                      if (v15 != 130) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1040)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1040;
                        operator new();
                      }
                      v168 = *v6;
                      v378 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v378 < 0)
                      {
                        int v379 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v379 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v379 = *v378;
                        *(void *)a2 = v378 + 1;
                      }
                      unint64_t v802 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v379);
                      if ((v802 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v804 = v802;
                      uint64_t result = CoreML::Specification::EmbeddingNDLayerParams::MergePartialFromCodedStream(v168, a2, v803);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v804)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1045 || v15 != 170) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1045)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1045;
                        operator new();
                      }
                      unint64_t v48 = *v6;
                      v284 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v284 < 0)
                      {
                        int v285 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v285 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v285 = *v284;
                        *(void *)a2 = v284 + 1;
                      }
                      unint64_t v666 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v285);
                      if ((v666 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v668 = v666;
                      uint64_t result = CoreML::Specification::BatchedMatMulLayerParams::MergePartialFromCodedStream(v48, (char **)a2, v667);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v668)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 <= 0x3E2)
                  {
                    if (v19 == 980)
                    {
                      if (v15 != 162) {
                        goto LABEL_9;
                      }
                      if (*v5 != 980)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 980;
                        operator new();
                      }
                      v204 = *v6;
                      v414 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v414 < 0)
                      {
                        int v415 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v415 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v415 = *v414;
                        *(void *)a2 = v414 + 1;
                      }
                      unint64_t v856 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v415);
                      if ((v856 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v858 = v856;
                      uint64_t result = CoreML::Specification::ConcatNDLayerParams::MergePartialFromCodedStream(v204, (char **)a2, v857);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v858)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 985 || v15 != 202) {
                        goto LABEL_9;
                      }
                      if (*v5 != 985)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 985;
                        operator new();
                      }
                      unint64_t v67 = *v6;
                      v308 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v308 < 0)
                      {
                        int v309 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v309 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v309 = *v308;
                        *(void *)a2 = v308 + 1;
                      }
                      unint64_t v702 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v309);
                      if ((v702 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v704 = v702;
                      uint64_t result = CoreML::Specification::TransposeLayerParams::MergePartialFromCodedStream(v67, (char **)a2, v703);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v704)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 995)
                  {
                    if (v15 != 26) {
                      goto LABEL_9;
                    }
                    if (*v5 != 995)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 995;
                      operator new();
                    }
                    v132 = *v6;
                    v342 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v342 < 0)
                    {
                      int v343 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v343 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v343 = *v342;
                      *(void *)a2 = v342 + 1;
                    }
                    unint64_t v751 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v343);
                    if ((v751 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v753 = v751;
                    uint64_t result = CoreML::Specification::SliceStaticLayerParams::MergePartialFromCodedStream(v132, (char **)a2, v752);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v753)) {
                      return 0;
                    }
                  }
                  else if (v19 == 1000)
                  {
                    if (v15 != 66) {
                      goto LABEL_9;
                    }
                    if (*v5 != 1000)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 1000;
                      operator new();
                    }
                    v133 = *v6;
                    v344 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v344 < 0)
                    {
                      int v345 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v345 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v345 = *v344;
                      *(void *)a2 = v344 + 1;
                    }
                    unint64_t v754 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v345);
                    if ((v754 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v756 = v754;
                    uint64_t result = CoreML::Specification::SliceDynamicLayerParams::MergePartialFromCodedStream(v133, (char **)a2, v755);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v756)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 1005 || v15 != 106) {
                      goto LABEL_9;
                    }
                    if (*v5 != 1005)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 1005;
                      operator new();
                    }
                    unint64_t v29 = *v6;
                    v266 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v266 < 0)
                    {
                      int v267 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v267 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v267 = *v266;
                      *(void *)a2 = v266 + 1;
                    }
                    unint64_t v640 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v267);
                    if ((v640 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v642 = v640;
                    uint64_t result = CoreML::Specification::SlidingWindowsLayerParams::MergePartialFromCodedStream(v29, (char **)a2, v641);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v642)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 > 0x3A1)
                {
                  if (v15 >> 3 <= 0x3B0)
                  {
                    if (v19 == 930)
                    {
                      if (v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 930)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 930;
                        operator new();
                      }
                      v192 = *v6;
                      v402 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v402 < 0)
                      {
                        int v403 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v403 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v403 = *v402;
                        *(void *)a2 = v402 + 1;
                      }
                      unint64_t v838 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v403);
                      if ((v838 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v840 = v838;
                      uint64_t result = CoreML::Specification::GatherLayerParams::MergePartialFromCodedStream(v192, (char **)a2, v839);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v840)) {
                        return 0;
                      }
                    }
                    else if (v19 == 935)
                    {
                      if (v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 935)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 935;
                        operator new();
                      }
                      v193 = *v6;
                      v404 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v404 < 0)
                      {
                        int v405 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v405 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v405 = *v404;
                        *(void *)a2 = v404 + 1;
                      }
                      unint64_t v841 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v405);
                      if ((v841 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v843 = v841;
                      uint64_t result = CoreML::Specification::ScatterLayerParams::MergePartialFromCodedStream(v193, (char **)a2, v842);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v843)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 940 || v15 != 98) {
                        goto LABEL_9;
                      }
                      if (*v5 != 940)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 940;
                        operator new();
                      }
                      size_t v60 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v60 < 0)
                      {
                        int v61 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v61 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v61 = *v60;
                        *(void *)a2 = v60 + 1;
                      }
                      unint64_t v524 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v61);
                      if ((v524 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v526 = v524;
                      uint64_t result = CoreML::Specification::GatherNDLayerParams::MergePartialFromCodedStream((CoreML::Specification::GatherNDLayerParams *)v524, (char **)a2, v525);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v526)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    if (v15 >> 3 <= 0x3BF)
                    {
                      switch(v19)
                      {
                        case 0x3B1u:
                          if (v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 945)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 945;
                            operator new();
                          }
                          uint64_t v34 = *v6;
                          v256 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v256 < 0)
                          {
                            int v257 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v257 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v257 = *v256;
                            *(void *)a2 = v256 + 1;
                          }
                          unint64_t v490 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v257);
                          if ((v490 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v492 = v490;
                          uint64_t result = CoreML::Specification::ScatterNDLayerParams::MergePartialFromCodedStream(v34, (char **)a2, v491);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v492)) {
                            return 0;
                          }
                          continue;
                        case 0x3B6u:
                          if (v15 != 178) {
                            goto LABEL_9;
                          }
                          if (*v5 != 950)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 950;
                            operator new();
                          }
                          unint64_t v118 = *v6;
                          v258 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v258 < 0)
                          {
                            int v259 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v259 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v259 = *v258;
                            *(void *)a2 = v258 + 1;
                          }
                          unint64_t v493 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v259);
                          if ((v493 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v495 = v493;
                          uint64_t result = CoreML::Specification::SoftmaxNDLayerParams::MergePartialFromCodedStream(v118, (char **)a2, v494);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v495)) {
                            return 0;
                          }
                          continue;
                        case 0x3B8u:
                          if (v15 != 194) {
                            goto LABEL_9;
                          }
                          if (*v5 != 952)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 952;
                            operator new();
                          }
                          uint64_t v119 = *v6;
                          v260 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v260 < 0)
                          {
                            int v261 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v261 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v261 = *v260;
                            *(void *)a2 = v260 + 1;
                          }
                          unint64_t v496 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v261);
                          if ((v496 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v498 = v496;
                          uint64_t result = CoreML::Specification::GatherAlongAxisLayerParams::MergePartialFromCodedStream(v119, (char **)a2, v497);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v498)) {
                            return 0;
                          }
                          continue;
                        case 0x3BAu:
                          if (v15 != 210) {
                            goto LABEL_9;
                          }
                          if (*v5 != 954)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 954;
                            operator new();
                          }
                          uint64_t v120 = *v6;
                          v262 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v262 < 0)
                          {
                            int v263 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v263 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v263 = *v262;
                            *(void *)a2 = v262 + 1;
                          }
                          unint64_t v499 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v263);
                          if ((v499 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v501 = v499;
                          uint64_t result = CoreML::Specification::ScatterAlongAxisLayerParams::MergePartialFromCodedStream(v120, (char **)a2, v500);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v501)) {
                            return 0;
                          }
                          continue;
                        default:
                          goto LABEL_9;
                      }
                    }
                    if (v19 == 960)
                    {
                      if (v15 != 2) {
                        goto LABEL_9;
                      }
                      if (*v5 != 960)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 960;
                        operator new();
                      }
                      v201 = *v6;
                      v408 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v408 < 0)
                      {
                        int v409 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v409 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v409 = *v408;
                        *(void *)a2 = v408 + 1;
                      }
                      unint64_t v847 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v409);
                      if ((v847 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v849 = v847;
                      uint64_t result = CoreML::Specification::ReverseLayerParams::MergePartialFromCodedStream(v201, (char **)a2, v848);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v849)) {
                        return 0;
                      }
                    }
                    else if (v19 == 965)
                    {
                      if (v15 != 42) {
                        goto LABEL_9;
                      }
                      if (*v5 != 965)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 965;
                        operator new();
                      }
                      v202 = *v6;
                      v410 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v410 < 0)
                      {
                        int v411 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v411 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v411 = *v410;
                        *(void *)a2 = v410 + 1;
                      }
                      unint64_t v850 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v411);
                      if ((v850 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v852 = v850;
                      uint64_t result = CoreML::Specification::ReverseSeqLayerParams::MergePartialFromCodedStream(v202, (char **)a2, v851);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v852)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 975 || v15 != 122) {
                        goto LABEL_9;
                      }
                      if (*v5 != 975)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 975;
                        operator new();
                      }
                      unint64_t v65 = *v6;
                      v304 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v304 < 0)
                      {
                        int v305 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v305 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v305 = *v304;
                        *(void *)a2 = v304 + 1;
                      }
                      unint64_t v696 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v305);
                      if ((v696 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v698 = v696;
                      uint64_t result = CoreML::Specification::SplitNDLayerParams::MergePartialFromCodedStream(v65, (char **)a2, v697);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v698)) {
                        return 0;
                      }
                    }
                  }
                }
                else if (v15 >> 3 <= 0x379)
                {
                  if (v15 >> 3 <= 0x36A)
                  {
                    if (v19 == 865)
                    {
                      if (v15 != 10) {
                        goto LABEL_9;
                      }
                      if (*v5 != 865)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 865;
                        operator new();
                      }
                      v216 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v216 < 0)
                      {
                        int v217 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v217 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v217 = *v216;
                        *(void *)a2 = v216 + 1;
                      }
                      unint64_t v625 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v217);
                      if ((v625 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v627 = v625;
                      uint64_t result = CoreML::Specification::ModBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::ModBroadcastableLayerParams *)v625, (char **)a2, v626);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v627)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 870 || v15 != 50) {
                        goto LABEL_9;
                      }
                      if (*v5 != 870)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 870;
                        operator new();
                      }
                      std::string::size_type v80 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v80 < 0)
                      {
                        int v81 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v81 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v81 = *v80;
                        *(void *)a2 = v80 + 1;
                      }
                      unint64_t v536 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v81);
                      if ((v536 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v538 = v536;
                      uint64_t result = CoreML::Specification::MinBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::MinBroadcastableLayerParams *)v536, (char **)a2, v537);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v538)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 875)
                  {
                    if (v15 != 90) {
                      goto LABEL_9;
                    }
                    if (*v5 != 875)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 875;
                      operator new();
                    }
                    v156 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v156 < 0)
                    {
                      int v157 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v157 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v157 = *v156;
                      *(void *)a2 = v156 + 1;
                    }
                    unint64_t v577 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v157);
                    if ((v577 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v579 = v577;
                    uint64_t result = CoreML::Specification::MaxBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::MaxBroadcastableLayerParams *)v577, (char **)a2, v578);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v579)) {
                      return 0;
                    }
                  }
                  else if (v19 == 880)
                  {
                    if (v15 != 130) {
                      goto LABEL_9;
                    }
                    if (*v5 != 880)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 880;
                      operator new();
                    }
                    v158 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v158 < 0)
                    {
                      int v159 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v159 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v159 = *v158;
                      *(void *)a2 = v158 + 1;
                    }
                    unint64_t v580 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v159);
                    if ((v580 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v582 = v580;
                    uint64_t result = CoreML::Specification::AddBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::AddBroadcastableLayerParams *)v580, (char **)a2, v581);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v582)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 885 || v15 != 170) {
                      goto LABEL_9;
                    }
                    if (*v5 != 885)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 885;
                      operator new();
                    }
                    int v43 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v43 < 0)
                    {
                      int v44 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v44 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v44 = *v43;
                      *(void *)a2 = v43 + 1;
                    }
                    unint64_t v515 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v44);
                    if ((v515 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v517 = v515;
                    uint64_t result = CoreML::Specification::PowBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::PowBroadcastableLayerParams *)v515, (char **)a2, v516);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v517)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 > 0x388)
                {
                  if (v19 == 905)
                  {
                    if (v15 != 74) {
                      goto LABEL_9;
                    }
                    if (*v5 != 905)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 905;
                      operator new();
                    }
                    v194 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v194 < 0)
                    {
                      int v195 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v195 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v195 = *v194;
                      *(void *)a2 = v194 + 1;
                    }
                    unint64_t v610 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v195);
                    if ((v610 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v612 = v610;
                    uint64_t result = CoreML::Specification::SubtractBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::SubtractBroadcastableLayerParams *)v610, (char **)a2, v611);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v612)) {
                      return 0;
                    }
                  }
                  else if (v19 == 920)
                  {
                    if (v15 != 194) {
                      goto LABEL_9;
                    }
                    if (*v5 != 920)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 920;
                      operator new();
                    }
                    v196 = *v6;
                    v406 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v406 < 0)
                    {
                      int v407 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v407 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v407 = *v406;
                      *(void *)a2 = v406 + 1;
                    }
                    unint64_t v844 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v407);
                    if ((v844 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v846 = v844;
                    uint64_t result = CoreML::Specification::TileLayerParams::MergePartialFromCodedStream(v196, (char **)a2, v845);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v846)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 925 || v15 != 234) {
                      goto LABEL_9;
                    }
                    if (*v5 != 925)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 925;
                      operator new();
                    }
                    unint64_t v62 = *v6;
                    v302 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v302 < 0)
                    {
                      int v303 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v303 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v303 = *v302;
                      *(void *)a2 = v302 + 1;
                    }
                    unint64_t v693 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v303);
                    if ((v693 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v695 = v693;
                    uint64_t result = CoreML::Specification::StackLayerParams::MergePartialFromCodedStream(v62, (char **)a2, v694);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v695)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 890)
                {
                  if (v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 890)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 890;
                    operator new();
                  }
                  uint64_t v121 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v121 < 0)
                  {
                    int v122 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v122 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v122 = *v121;
                    *(void *)a2 = v121 + 1;
                  }
                  unint64_t v551 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v122);
                  if ((v551 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v553 = v551;
                  uint64_t result = CoreML::Specification::DivideBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::DivideBroadcastableLayerParams *)v551, (char **)a2, v552);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v553)) {
                    return 0;
                  }
                }
                else if (v19 == 895)
                {
                  if (v15 != 250) {
                    goto LABEL_9;
                  }
                  if (*v5 != 895)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 895;
                    operator new();
                  }
                  size_t v123 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v123 < 0)
                  {
                    int v124 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v124 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v124 = *v123;
                    *(void *)a2 = v123 + 1;
                  }
                  unint64_t v554 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v124);
                  if ((v554 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v556 = v554;
                  uint64_t result = CoreML::Specification::FloorDivBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::FloorDivBroadcastableLayerParams *)v554, (char **)a2, v555);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v556)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 900 || v15 != 34) {
                    goto LABEL_9;
                  }
                  if (*v5 != 900)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 900;
                    operator new();
                  }
                  int v23 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
                  {
                    int v24 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v24 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v24 = *v23;
                    *(void *)a2 = v23 + 1;
                  }
                  unint64_t v503 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v24);
                  if ((v503 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v505 = v503;
                  uint64_t result = CoreML::Specification::MultiplyBroadcastableLayerParams::MergePartialFromCodedStream((CoreML::Specification::MultiplyBroadcastableLayerParams *)v503, (char **)a2, v504);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v505)) {
                    return 0;
                  }
                }
              }
              if (v15 >> 3 <= 0x199) {
                break;
              }
              if (v15 >> 3 > 0x2DE)
              {
                if (v15 >> 3 > 0x32E)
                {
                  if (v15 >> 3 > 0x347)
                  {
                    if (v15 >> 3 > 0x351)
                    {
                      if (v19 == 850)
                      {
                        if (v15 != 146) {
                          goto LABEL_9;
                        }
                        if (*v5 != 850)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 850;
                          operator new();
                        }
                        v231 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v231 < 0)
                        {
                          int v232 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v232 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v232 = *v231;
                          *(void *)a2 = v231 + 1;
                        }
                        unint64_t v634 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v232);
                        if ((v634 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v636 = v634;
                        uint64_t result = CoreML::Specification::LogicalNotLayerParams::MergePartialFromCodedStream((CoreML::Specification::LogicalNotLayerParams *)v634, (char **)a2, v635);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v636)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 855 || v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 855)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 855;
                          operator new();
                        }
                        size_t v96 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v96 < 0)
                        {
                          int v97 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v97 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v97 = *v96;
                          *(void *)a2 = v96 + 1;
                        }
                        unint64_t v548 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v97);
                        if ((v548 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v550 = v548;
                        uint64_t result = CoreML::Specification::LogicalAndLayerParams::MergePartialFromCodedStream((CoreML::Specification::LogicalAndLayerParams *)v548, (char **)a2, v549);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v550)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 840)
                    {
                      if (v15 != 66) {
                        goto LABEL_9;
                      }
                      if (*v5 != 840)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 840;
                        operator new();
                      }
                      v190 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v190 < 0)
                      {
                        int v191 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v191 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v191 = *v190;
                        *(void *)a2 = v190 + 1;
                      }
                      unint64_t v607 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v191);
                      if ((v607 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v609 = v607;
                      uint64_t result = CoreML::Specification::LogicalOrLayerParams::MergePartialFromCodedStream((CoreML::Specification::LogicalOrLayerParams *)v607, (char **)a2, v608);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v609)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 845 || v15 != 106) {
                        goto LABEL_9;
                      }
                      if (*v5 != 845)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 845;
                        operator new();
                      }
                      unint64_t v58 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v58 < 0)
                      {
                        int v59 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v59 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v59 = *v58;
                        *(void *)a2 = v58 + 1;
                      }
                      unint64_t v521 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v59);
                      if ((v521 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v523 = v521;
                      uint64_t result = CoreML::Specification::LogicalXorLayerParams::MergePartialFromCodedStream((CoreML::Specification::LogicalXorLayerParams *)v521, (char **)a2, v522);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v523)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    switch(v19)
                    {
                      case 0x339u:
                        if (v15 != 202) {
                          goto LABEL_9;
                        }
                        if (*v5 != 825)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 825;
                          operator new();
                        }
                        uint64_t v40 = *v6;
                        v248 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v248 < 0)
                        {
                          int v249 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v249 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v249 = *v248;
                          *(void *)a2 = v248 + 1;
                        }
                        unint64_t v477 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v249);
                        if ((v477 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v479 = v477;
                        uint64_t result = CoreML::Specification::LessThanLayerParams::MergePartialFromCodedStream(v40, (char **)a2, v478);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v479)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x33Au:
                      case 0x33Cu:
                      case 0x33Du:
                      case 0x33Fu:
                        goto LABEL_9;
                      case 0x33Bu:
                        if (v15 != 218) {
                          goto LABEL_9;
                        }
                        if (*v5 != 827)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 827;
                          operator new();
                        }
                        int v101 = *v6;
                        v250 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v250 < 0)
                        {
                          int v251 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v251 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v251 = *v250;
                          *(void *)a2 = v250 + 1;
                        }
                        unint64_t v480 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v251);
                        if ((v480 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v482 = v480;
                        uint64_t result = CoreML::Specification::LessEqualLayerParams::MergePartialFromCodedStream(v101, (char **)a2, v481);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v482)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x33Eu:
                        if (v15 != 242) {
                          goto LABEL_9;
                        }
                        if (*v5 != 830)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 830;
                          operator new();
                        }
                        v102 = *v6;
                        v252 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v252 < 0)
                        {
                          int v253 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v253 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v253 = *v252;
                          *(void *)a2 = v252 + 1;
                        }
                        unint64_t v483 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v253);
                        if ((v483 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v485 = v483;
                        uint64_t result = CoreML::Specification::GreaterThanLayerParams::MergePartialFromCodedStream(v102, (char **)a2, v484);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v485)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x340u:
                        if (v15 != 2) {
                          goto LABEL_9;
                        }
                        if (*v5 != 832)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 832;
                          operator new();
                        }
                        v103 = *v6;
                        v254 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v254 < 0)
                        {
                          int v255 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v255 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v255 = *v254;
                          *(void *)a2 = v254 + 1;
                        }
                        unint64_t v486 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v255);
                        if ((v486 & 0x8000000000000000) != 0) {
                          return 0;
                        }
                        int v488 = v486;
                        uint64_t result = CoreML::Specification::GreaterEqualLayerParams::MergePartialFromCodedStream(v103, (char **)a2, v487);
                        if (!result) {
                          return result;
                        }
                        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v488)) {
                          return 0;
                        }
                        goto LABEL_2;
                      default:
                        if (v19 == 815)
                        {
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 815)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 815;
                            operator new();
                          }
                          v233 = *v6;
                          v459 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v459 < 0)
                          {
                            int v460 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v460 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v460 = *v459;
                            *(void *)a2 = v459 + 1;
                          }
                          unint64_t v908 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v460);
                          if ((v908 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v910 = v908;
                          uint64_t result = CoreML::Specification::EqualLayerParams::MergePartialFromCodedStream(v233, (char **)a2, v909);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v910)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 820 || v15 != 162) {
                            goto LABEL_9;
                          }
                          if (*v5 != 820)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 820;
                            operator new();
                          }
                          unint64_t v77 = *v6;
                          v457 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v457 < 0)
                          {
                            int v458 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v458 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v458 = *v457;
                            *(void *)a2 = v457 + 1;
                          }
                          unint64_t v905 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v458);
                          if ((v905 & 0x8000000000000000) != 0) {
                            return 0;
                          }
                          int v907 = v905;
                          uint64_t result = CoreML::Specification::NotEqualLayerParams::MergePartialFromCodedStream(v77, (char **)a2, v906);
                          if (!result) {
                            return result;
                          }
                          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v907)) {
                            return 0;
                          }
                        }
                        break;
                    }
                  }
                }
                else if (v15 >> 3 > 0x301)
                {
                  if (v15 >> 3 <= 0x30B)
                  {
                    if (v19 == 770)
                    {
                      if (v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 770)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 770;
                        operator new();
                      }
                      v221 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v221 < 0)
                      {
                        int v222 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v222 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v222 = *v221;
                        *(void *)a2 = v221 + 1;
                      }
                      unint64_t v628 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v222);
                      if ((v628 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v630 = v628;
                      uint64_t result = CoreML::Specification::AsinhLayerParams::MergePartialFromCodedStream((CoreML::Specification::AsinhLayerParams *)v628, (char **)a2, v629);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v630)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 775 || v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 775)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 775;
                        operator new();
                      }
                      int v86 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v86 < 0)
                      {
                        int v87 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v87 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v87 = *v86;
                        *(void *)a2 = v86 + 1;
                      }
                      unint64_t v542 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v87);
                      if ((v542 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v544 = v542;
                      uint64_t result = CoreML::Specification::AcoshLayerParams::MergePartialFromCodedStream((CoreML::Specification::AcoshLayerParams *)v542, (char **)a2, v543);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v544)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 780)
                  {
                    if (v15 != 98) {
                      goto LABEL_9;
                    }
                    if (*v5 != 780)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 780;
                      operator new();
                    }
                    v169 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v169 < 0)
                    {
                      int v170 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v170 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v170 = *v169;
                      *(void *)a2 = v169 + 1;
                    }
                    unint64_t v592 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v170);
                    if ((v592 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v594 = v592;
                    uint64_t result = CoreML::Specification::AtanhLayerParams::MergePartialFromCodedStream((CoreML::Specification::AtanhLayerParams *)v592, (char **)a2, v593);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v594)) {
                      return 0;
                    }
                  }
                  else if (v19 == 790)
                  {
                    if (v15 != 178) {
                      goto LABEL_9;
                    }
                    if (*v5 != 790)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 790;
                      operator new();
                    }
                    v171 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v171 < 0)
                    {
                      int v172 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v172 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v172 = *v171;
                      *(void *)a2 = v171 + 1;
                    }
                    unint64_t v595 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v172);
                    if ((v595 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v597 = v595;
                    uint64_t result = CoreML::Specification::ErfLayerParams::MergePartialFromCodedStream((CoreML::Specification::ErfLayerParams *)v595, (char **)a2, v596);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v597)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 795 || v15 != 218) {
                      goto LABEL_9;
                    }
                    if (*v5 != 795)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 795;
                      operator new();
                    }
                    unsigned int v49 = *v6;
                    v286 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v286 < 0)
                    {
                      int v287 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v287 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v287 = *v286;
                      *(void *)a2 = v286 + 1;
                    }
                    unint64_t v669 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v287);
                    if ((v669 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v671 = v669;
                    uint64_t result = CoreML::Specification::GeluLayerParams::MergePartialFromCodedStream(v49, (char **)a2, v670);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v671)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 <= 0x2ED)
                {
                  if (v19 == 735)
                  {
                    if (v15 != 250) {
                      goto LABEL_9;
                    }
                    if (*v5 != 735)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 735;
                      operator new();
                    }
                    v205 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v205 < 0)
                    {
                      int v206 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v206 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v206 = *v205;
                      *(void *)a2 = v205 + 1;
                    }
                    unint64_t v619 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v206);
                    if ((v619 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v621 = v619;
                    uint64_t result = CoreML::Specification::AcosLayerParams::MergePartialFromCodedStream((CoreML::Specification::AcosLayerParams *)v619, (char **)a2, v620);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v621)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 740 || v15 != 34) {
                      goto LABEL_9;
                    }
                    if (*v5 != 740)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 740;
                      operator new();
                    }
                    unsigned int v68 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v68 < 0)
                    {
                      int v69 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v69 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v69 = *v68;
                      *(void *)a2 = v68 + 1;
                    }
                    unint64_t v530 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v69);
                    if ((v530 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v532 = v530;
                    uint64_t result = CoreML::Specification::AtanLayerParams::MergePartialFromCodedStream((CoreML::Specification::AtanLayerParams *)v530, (char **)a2, v531);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v532)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 750)
                {
                  if (v15 != 114) {
                    goto LABEL_9;
                  }
                  if (*v5 != 750)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 750;
                    operator new();
                  }
                  v134 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v134 < 0)
                  {
                    int v135 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v135 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v135 = *v134;
                    *(void *)a2 = v134 + 1;
                  }
                  unint64_t v566 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v135);
                  if ((v566 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v568 = v566;
                  uint64_t result = CoreML::Specification::SinhLayerParams::MergePartialFromCodedStream((CoreML::Specification::SinhLayerParams *)v566, (char **)a2, v567);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v568)) {
                    return 0;
                  }
                }
                else if (v19 == 755)
                {
                  if (v15 != 154) {
                    goto LABEL_9;
                  }
                  if (*v5 != 755)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 755;
                    operator new();
                  }
                  v136 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v136 < 0)
                  {
                    int v137 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v137 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v137 = *v136;
                    *(void *)a2 = v136 + 1;
                  }
                  unint64_t v569 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v137);
                  if ((v569 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v571 = v569;
                  uint64_t result = CoreML::Specification::CoshLayerParams::MergePartialFromCodedStream((CoreML::Specification::CoshLayerParams *)v569, (char **)a2, v570);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v571)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 760 || v15 != 194) {
                    goto LABEL_9;
                  }
                  if (*v5 != 760)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 760;
                    operator new();
                  }
                  unsigned int v30 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
                  {
                    int v31 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v31 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v31 = *v30;
                    *(void *)a2 = v30 + 1;
                  }
                  unint64_t v509 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v31);
                  if ((v509 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v511 = v509;
                  uint64_t result = CoreML::Specification::TanhLayerParams::MergePartialFromCodedStream((CoreML::Specification::TanhLayerParams *)v509, (char **)a2, v510);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v511)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x27F)
              {
                if (v15 >> 3 > 0x25C)
                {
                  if (v15 >> 3 <= 0x26B)
                  {
                    if (v19 == 605)
                    {
                      if (v15 != 234) {
                        goto LABEL_9;
                      }
                      if (*v5 != 605)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 605;
                        operator new();
                      }
                      v225 = *v6;
                      v440 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v440 < 0)
                      {
                        int v441 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v441 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v441 = *v440;
                        *(void *)a2 = v440 + 1;
                      }
                      unint64_t v893 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v441);
                      if ((v893 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v895 = v893;
                      uint64_t result = CoreML::Specification::BranchLayerParams::MergePartialFromCodedStream(v225, (char **)a2, v894);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v895)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 615 || v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 615)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 615;
                        operator new();
                      }
                      uint64_t v90 = *v6;
                      v332 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v332 < 0)
                      {
                        int v333 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v333 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v333 = *v332;
                        *(void *)a2 = v332 + 1;
                      }
                      unint64_t v736 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v333);
                      if ((v736 & 0x8000000000000000) != 0) {
                        return 0;
                      }
                      int v738 = v736;
                      uint64_t result = CoreML::Specification::LoopLayerParams::MergePartialFromCodedStream(v90, (char **)a2, v737);
                      if (!result) {
                        return result;
                      }
                      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v738)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 620)
                  {
                    if (v15 != 98) {
                      goto LABEL_9;
                    }
                    if (*v5 != 620)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 620;
                      operator new();
                    }
                    v177 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v177 < 0)
                    {
                      int v178 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v178 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v178 = *v177;
                      *(void *)a2 = v177 + 1;
                    }
                    unint64_t v598 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v178);
                    if ((v598 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v600 = v598;
                    uint64_t result = CoreML::Specification::LoopBreakLayerParams::MergePartialFromCodedStream((CoreML::Specification::LoopBreakLayerParams *)v598, (char **)a2, v599);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v600)) {
                      return 0;
                    }
                  }
                  else if (v19 == 625)
                  {
                    if (v15 != 138) {
                      goto LABEL_9;
                    }
                    if (*v5 != 625)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 625;
                      operator new();
                    }
                    v179 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v179 < 0)
                    {
                      int v180 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v180 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v180 = *v179;
                      *(void *)a2 = v179 + 1;
                    }
                    unint64_t v601 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v180);
                    if ((v601 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v603 = v601;
                    uint64_t result = CoreML::Specification::LoopContinueLayerParams::MergePartialFromCodedStream((CoreML::Specification::LoopContinueLayerParams *)v601, (char **)a2, v602);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v603)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 635 || v15 != 218) {
                      goto LABEL_9;
                    }
                    if (*v5 != 635)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 635;
                      operator new();
                    }
                    unint64_t v52 = *v6;
                    v292 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v292 < 0)
                    {
                      int v293 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v293 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v293 = *v292;
                      *(void *)a2 = v292 + 1;
                    }
                    unint64_t v678 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v293);
                    if ((v678 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v680 = v678;
                    uint64_t result = CoreML::Specification::RangeStaticLayerParams::MergePartialFromCodedStream(v52, (char **)a2, v679);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v680)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 <= 0x1AD)
                {
                  if (v19 == 410)
                  {
                    if (v15 != 210) {
                      goto LABEL_9;
                    }
                    if (*v5 != 410)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 410;
                      operator new();
                    }
                    v209 = *v6;
                    v420 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v420 < 0)
                    {
                      int v421 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v421 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v421 = *v420;
                      *(void *)a2 = v420 + 1;
                    }
                    unint64_t v864 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v421);
                    if ((v864 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v866 = v864;
                    uint64_t result = CoreML::Specification::GRULayerParams::MergePartialFromCodedStream(v209, a2, v865);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v866)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 420 || v15 != 34) {
                      goto LABEL_9;
                    }
                    if (*v5 != 420)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 420;
                      operator new();
                    }
                    unint64_t v73 = *v6;
                    v312 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v312 < 0)
                    {
                      int v313 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v313 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v313 = *v312;
                      *(void *)a2 = v312 + 1;
                    }
                    unint64_t v707 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v313);
                    if ((v707 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v709 = v707;
                    uint64_t result = CoreML::Specification::UniDirectionalLSTMLayerParams::MergePartialFromCodedStream(v73, a2, v708);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v709)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 430)
                {
                  if (v15 != 114) {
                    goto LABEL_9;
                  }
                  if (*v5 != 430)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 430;
                    operator new();
                  }
                  v144 = *v6;
                  v350 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v350 < 0)
                  {
                    int v351 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v351 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v351 = *v350;
                    *(void *)a2 = v350 + 1;
                  }
                  unint64_t v762 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v351);
                  if ((v762 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v764 = v762;
                  uint64_t result = CoreML::Specification::BiDirectionalLSTMLayerParams::MergePartialFromCodedStream(v144, a2, v763);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v764)) {
                    return 0;
                  }
                }
                else if (v19 == 500)
                {
                  if (v15 != 162) {
                    goto LABEL_9;
                  }
                  if (*v5 != 500)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 500;
                    operator new();
                  }
                  v145 = *v6;
                  v352 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v352 < 0)
                  {
                    int v353 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v353 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v353 = *v352;
                    *(void *)a2 = v352 + 1;
                  }
                  unint64_t v765 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v353);
                  if ((v765 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v767 = v765;
                  uint64_t result = CoreML::Specification::CustomLayerParams::MergePartialFromCodedStream(v145, a2, v766);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v767)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 600 || v15 != 194) {
                    goto LABEL_9;
                  }
                  if (*v5 != 600)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 600;
                    operator new();
                  }
                  int v35 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
                  {
                    int v36 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v36 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v36 = *v35;
                    *(void *)a2 = v35 + 1;
                  }
                  unint64_t v512 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v36);
                  if ((v512 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v514 = v512;
                  uint64_t result = CoreML::Specification::CopyLayerParams::MergePartialFromCodedStream((CoreML::Specification::CopyLayerParams *)v512, (char **)a2, v513);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v514)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x2AC)
              {
                if (v15 >> 3 <= 0x298)
                {
                  if (v19 == 640)
                  {
                    if (v15 != 2) {
                      goto LABEL_9;
                    }
                    if (*v5 != 640)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 640;
                      operator new();
                    }
                    v218 = *v6;
                    v430 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v430 < 0)
                    {
                      int v431 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v431 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v431 = *v430;
                      *(void *)a2 = v430 + 1;
                    }
                    unint64_t v878 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v431);
                    if ((v878 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v880 = v878;
                    uint64_t result = CoreML::Specification::RangeDynamicLayerParams::MergePartialFromCodedStream(v218, (char **)a2, v879);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v880)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 660 || v15 != 162) {
                      goto LABEL_9;
                    }
                    if (*v5 != 660)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 660;
                      operator new();
                    }
                    v82 = *v6;
                    v324 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v324 < 0)
                    {
                      int v325 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v325 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v325 = *v324;
                      *(void *)a2 = v324 + 1;
                    }
                    unint64_t v724 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v325);
                    if ((v724 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v726 = v724;
                    uint64_t result = CoreML::Specification::ClipLayerParams::MergePartialFromCodedStream(v82, (char **)a2, v725);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v726)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 665)
                {
                  if (v15 != 202) {
                    goto LABEL_9;
                  }
                  if (*v5 != 665)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 665;
                    operator new();
                  }
                  v160 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v160 < 0)
                  {
                    int v161 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v161 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v161 = *v160;
                    *(void *)a2 = v160 + 1;
                  }
                  unint64_t v583 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v161);
                  if ((v583 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v585 = v583;
                  uint64_t result = CoreML::Specification::CeilLayerParams::MergePartialFromCodedStream((CoreML::Specification::CeilLayerParams *)v583, (char **)a2, v584);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v585)) {
                    return 0;
                  }
                }
                else if (v19 == 670)
                {
                  if (v15 != 242) {
                    goto LABEL_9;
                  }
                  if (*v5 != 670)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 670;
                    operator new();
                  }
                  v162 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v162 < 0)
                  {
                    int v163 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v163 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v163 = *v162;
                    *(void *)a2 = v162 + 1;
                  }
                  unint64_t v586 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v163);
                  if ((v586 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v588 = v586;
                  uint64_t result = CoreML::Specification::FloorLayerParams::MergePartialFromCodedStream((CoreML::Specification::FloorLayerParams *)v586, (char **)a2, v587);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v588)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 680 || v15 != 66) {
                    goto LABEL_9;
                  }
                  if (*v5 != 680)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 680;
                    operator new();
                  }
                  int v45 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
                  {
                    int v46 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v46 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v46 = *v45;
                    *(void *)a2 = v45 + 1;
                  }
                  unint64_t v518 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v46);
                  if ((v518 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v520 = v518;
                  uint64_t result = CoreML::Specification::SignLayerParams::MergePartialFromCodedStream((CoreML::Specification::SignLayerParams *)v518, (char **)a2, v519);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v520)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 > 0x2CA)
              {
                if (v19 == 715)
                {
                  if (v15 != 90) {
                    goto LABEL_9;
                  }
                  if (*v5 != 715)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 715;
                    operator new();
                  }
                  v197 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v197 < 0)
                  {
                    int v198 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v198 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v198 = *v197;
                    *(void *)a2 = v197 + 1;
                  }
                  unint64_t v613 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v198);
                  if ((v613 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v615 = v613;
                  uint64_t result = CoreML::Specification::CosLayerParams::MergePartialFromCodedStream((CoreML::Specification::CosLayerParams *)v613, (char **)a2, v614);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v615)) {
                    return 0;
                  }
                }
                else if (v19 == 720)
                {
                  if (v15 != 130) {
                    goto LABEL_9;
                  }
                  if (*v5 != 720)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 720;
                    operator new();
                  }
                  v199 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v199 < 0)
                  {
                    int v200 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v200 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v200 = *v199;
                    *(void *)a2 = v199 + 1;
                  }
                  unint64_t v616 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v200);
                  if ((v616 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v618 = v616;
                  uint64_t result = CoreML::Specification::TanLayerParams::MergePartialFromCodedStream((CoreML::Specification::TanLayerParams *)v616, (char **)a2, v617);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v618)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 730 || v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 730)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 730;
                    operator new();
                  }
                  unsigned int v63 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v63 < 0)
                  {
                    int v64 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v64 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v64 = *v63;
                    *(void *)a2 = v63 + 1;
                  }
                  unint64_t v527 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v64);
                  if ((v527 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v529 = v527;
                  uint64_t result = CoreML::Specification::AsinLayerParams::MergePartialFromCodedStream((CoreML::Specification::AsinLayerParams *)v527, (char **)a2, v528);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v529)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 685)
              {
                if (v15 != 106) {
                  goto LABEL_9;
                }
                if (*v5 != 685)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 685;
                  operator new();
                }
                unsigned __int8 v125 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v125 < 0)
                {
                  int v126 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v126 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v126 = *v125;
                  *(void *)a2 = v125 + 1;
                }
                unint64_t v557 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v126);
                if ((v557 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v559 = v557;
                uint64_t result = CoreML::Specification::RoundLayerParams::MergePartialFromCodedStream((CoreML::Specification::RoundLayerParams *)v557, (char **)a2, v558);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v559)) {
                  return 0;
                }
              }
              else if (v19 == 700)
              {
                if (v15 != 226) {
                  goto LABEL_9;
                }
                if (*v5 != 700)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 700;
                  operator new();
                }
                uint64_t v127 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v127 < 0)
                {
                  int v128 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v128 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v128 = *v127;
                  *(void *)a2 = v127 + 1;
                }
                unint64_t v560 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v128);
                if ((v560 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v562 = v560;
                uint64_t result = CoreML::Specification::Exp2LayerParams::MergePartialFromCodedStream((CoreML::Specification::Exp2LayerParams *)v560, (char **)a2, v561);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v562)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 710 || v15 != 50) {
                  goto LABEL_9;
                }
                if (*v5 != 710)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 710;
                  operator new();
                }
                int v25 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
                {
                  int v26 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v26 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v26 = *v25;
                  *(void *)a2 = v25 + 1;
                }
                unint64_t v506 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v26);
                if ((v506 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v508 = v506;
                uint64_t result = CoreML::Specification::SinLayerParams::MergePartialFromCodedStream((CoreML::Specification::SinLayerParams *)v506, (char **)a2, v507);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v508)) {
                  return 0;
                }
              }
            }
            if (v15 >> 3 <= 0xDB) {
              break;
            }
            if (v15 >> 3 > 0x121)
            {
              if (v15 >> 3 > 0x149)
              {
                if (v15 >> 3 <= 0x158)
                {
                  if (v19 == 330)
                  {
                    if (v15 != 82) {
                      goto LABEL_9;
                    }
                    if (*v5 != 330)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 330;
                      operator new();
                    }
                    v227 = *v6;
                    v444 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v444 < 0)
                    {
                      int v445 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v445 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v445 = *v444;
                      *(void *)a2 = v444 + 1;
                    }
                    unint64_t v899 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v445);
                    if ((v899 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v901 = v899;
                    uint64_t result = CoreML::Specification::SplitLayerParams::MergePartialFromCodedStream(v227, (char **)a2, v900);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v901)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 340 || v15 != 162) {
                      goto LABEL_9;
                    }
                    if (*v5 != 340)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 340;
                      operator new();
                    }
                    unint64_t v93 = *v6;
                    v334 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v334 < 0)
                    {
                      int v335 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v335 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v335 = *v334;
                      *(void *)a2 = v334 + 1;
                    }
                    unint64_t v739 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v335);
                    if ((v739 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v741 = v739;
                    uint64_t result = CoreML::Specification::SequenceRepeatLayerParams::MergePartialFromCodedStream(v93, (char **)a2, v740);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v741)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 345)
                {
                  if (v15 != 202) {
                    goto LABEL_9;
                  }
                  if (*v5 != 345)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 345;
                    operator new();
                  }
                  v183 = *v6;
                  v392 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v392 < 0)
                  {
                    int v393 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v393 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v393 = *v392;
                    *(void *)a2 = v392 + 1;
                  }
                  unint64_t v823 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v393);
                  if ((v823 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v825 = v823;
                  uint64_t result = CoreML::Specification::ReorganizeDataLayerParams::MergePartialFromCodedStream(v183, (char **)a2, v824);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v825)) {
                    return 0;
                  }
                }
                else if (v19 == 350)
                {
                  if (v15 != 242) {
                    goto LABEL_9;
                  }
                  if (*v5 != 350)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 350;
                    operator new();
                  }
                  v184 = *v6;
                  v394 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v394 < 0)
                  {
                    int v395 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v395 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v395 = *v394;
                    *(void *)a2 = v394 + 1;
                  }
                  unint64_t v826 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v395);
                  if ((v826 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v828 = v826;
                  uint64_t result = CoreML::Specification::SliceLayerParams::MergePartialFromCodedStream(v184, (char **)a2, v827);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v828)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 400 || v15 != 130) {
                    goto LABEL_9;
                  }
                  if (*v5 != 400)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 400;
                    operator new();
                  }
                  unint64_t v54 = *v6;
                  v296 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v296 < 0)
                  {
                    int v297 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v297 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v297 = *v296;
                    *(void *)a2 = v296 + 1;
                  }
                  unint64_t v684 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v297);
                  if ((v684 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v686 = v684;
                  uint64_t result = CoreML::Specification::SimpleRecurrentLayerParams::MergePartialFromCodedStream(v54, a2, v685);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v686)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x12C)
              {
                if (v19 == 290)
                {
                  if (v15 != 18) {
                    goto LABEL_9;
                  }
                  if (*v5 != 290)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 290;
                    operator new();
                  }
                  v211 = *v6;
                  v424 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v424 < 0)
                  {
                    int v425 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v425 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v425 = *v424;
                    *(void *)a2 = v424 + 1;
                  }
                  unint64_t v870 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v425);
                  if ((v870 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v872 = v870;
                  uint64_t result = CoreML::Specification::LoadConstantLayerParams::MergePartialFromCodedStream(v211, (char **)a2, v871);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v872)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 300 || v15 != 98) {
                    goto LABEL_9;
                  }
                  if (*v5 != 300)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 300;
                    operator new();
                  }
                  unint64_t v75 = *v6;
                  v316 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v316 < 0)
                  {
                    int v317 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v317 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v317 = *v316;
                    *(void *)a2 = v316 + 1;
                  }
                  unint64_t v713 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v317);
                  if ((v713 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v715 = v713;
                  uint64_t result = CoreML::Specification::ReshapeLayerParams::MergePartialFromCodedStream(v75, (char **)a2, v714);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v715)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 301)
              {
                if (v15 != 106) {
                  goto LABEL_9;
                }
                if (*v5 != 301)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 301;
                  operator new();
                }
                v148 = *v6;
                v358 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v358 < 0)
                {
                  int v359 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v359 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v359 = *v358;
                  *(void *)a2 = v358 + 1;
                }
                unint64_t v774 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v359);
                if ((v774 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v776 = v774;
                uint64_t result = CoreML::Specification::FlattenLayerParams::MergePartialFromCodedStream(v148, (char **)a2, v775);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v776)) {
                  return 0;
                }
              }
              else if (v19 == 310)
              {
                if (v15 != 178) {
                  goto LABEL_9;
                }
                if (*v5 != 310)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 310;
                  operator new();
                }
                v149 = *v6;
                v360 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v360 < 0)
                {
                  int v361 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v361 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v361 = *v360;
                  *(void *)a2 = v360 + 1;
                }
                unint64_t v777 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v361);
                if ((v777 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v779 = v777;
                uint64_t result = CoreML::Specification::PermuteLayerParams::MergePartialFromCodedStream(v149, (char **)a2, v778);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v779)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 320 || v15 != 2) {
                  goto LABEL_9;
                }
                if (*v5 != 320)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 320;
                  operator new();
                }
                unsigned int v38 = *v6;
                v274 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v274 < 0)
                {
                  int v275 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v275 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v275 = *v274;
                  *(void *)a2 = v274 + 1;
                }
                unint64_t v652 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v275);
                if ((v652 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v654 = v652;
                uint64_t result = CoreML::Specification::ConcatLayerParams::MergePartialFromCodedStream(v38, a2, v653);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v654)) {
                  return 0;
                }
              }
            }
            else if (v15 >> 3 > 0xF9)
            {
              if (v15 >> 3 <= 0x104)
              {
                if (v19 == 250)
                {
                  if (v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 250)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 250;
                    operator new();
                  }
                  v219 = *v6;
                  v432 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v432 < 0)
                  {
                    int v433 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v433 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v433 = *v432;
                    *(void *)a2 = v432 + 1;
                  }
                  unint64_t v881 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v433);
                  if ((v881 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v883 = v881;
                  uint64_t result = CoreML::Specification::BiasLayerParams::MergePartialFromCodedStream(v219, (char **)a2, v882);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v883)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 260 || v15 != 34) {
                    goto LABEL_9;
                  }
                  if (*v5 != 260)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 260;
                    operator new();
                  }
                  v83 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v83 < 0)
                  {
                    int v84 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v84 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v84 = *v83;
                    *(void *)a2 = v83 + 1;
                  }
                  unint64_t v539 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v84);
                  if ((v539 & 0x8000000000000000) != 0) {
                    return 0;
                  }
                  int v541 = v539;
                  uint64_t result = CoreML::Specification::MaxLayerParams::MergePartialFromCodedStream((CoreML::Specification::MaxLayerParams *)v539, (char **)a2, v540);
                  if (!result) {
                    return result;
                  }
                  if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v541)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 261)
              {
                if (v15 != 42) {
                  goto LABEL_9;
                }
                if (*v5 != 261)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 261;
                  operator new();
                }
                v164 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v164 < 0)
                {
                  int v165 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v165 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v165 = *v164;
                  *(void *)a2 = v164 + 1;
                }
                unint64_t v589 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v165);
                if ((v589 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v591 = v589;
                uint64_t result = CoreML::Specification::MinLayerParams::MergePartialFromCodedStream((CoreML::Specification::MinLayerParams *)v589, (char **)a2, v590);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v591)) {
                  return 0;
                }
              }
              else if (v19 == 270)
              {
                if (v15 != 114) {
                  goto LABEL_9;
                }
                if (*v5 != 270)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 270;
                  operator new();
                }
                v166 = *v6;
                v374 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v374 < 0)
                {
                  int v375 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v375 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v375 = *v374;
                  *(void *)a2 = v374 + 1;
                }
                unint64_t v796 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v375);
                if ((v796 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v798 = v796;
                uint64_t result = CoreML::Specification::DotProductLayerParams::MergePartialFromCodedStream(v166, (char **)a2, v797);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v798)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 280 || v15 != 194) {
                  goto LABEL_9;
                }
                if (*v5 != 280)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 280;
                  operator new();
                }
                int v47 = *v6;
                v282 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v282 < 0)
                {
                  int v283 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v283 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v283 = *v282;
                  *(void *)a2 = v282 + 1;
                }
                unint64_t v663 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v283);
                if ((v663 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v665 = v663;
                uint64_t result = CoreML::Specification::ReduceLayerParams::MergePartialFromCodedStream(v47, (char **)a2, v664);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v665)) {
                  return 0;
                }
              }
            }
            else if (v15 >> 3 <= 0xE6)
            {
              if (v19 == 220)
              {
                if (v15 != 226) {
                  goto LABEL_9;
                }
                if (*v5 != 220)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 220;
                  operator new();
                }
                v203 = *v6;
                v412 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v412 < 0)
                {
                  int v413 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v413 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v413 = *v412;
                  *(void *)a2 = v412 + 1;
                }
                unint64_t v853 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v413);
                if ((v853 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v855 = v853;
                uint64_t result = CoreML::Specification::UnaryFunctionLayerParams::MergePartialFromCodedStream(v203, (char **)a2, v854);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v855)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 230 || v15 != 50) {
                  goto LABEL_9;
                }
                if (*v5 != 230)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 230;
                  operator new();
                }
                unsigned int v66 = *v6;
                v306 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v306 < 0)
                {
                  int v307 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v307 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v307 = *v306;
                  *(void *)a2 = v306 + 1;
                }
                unint64_t v699 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v307);
                if ((v699 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v701 = v699;
                uint64_t result = CoreML::Specification::AddLayerParams::MergePartialFromCodedStream(v66, (char **)a2, v700);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v701)) {
                  return 0;
                }
              }
            }
            else if (v19 == 231)
            {
              if (v15 != 58) {
                goto LABEL_9;
              }
              if (*v5 != 231)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 231;
                operator new();
              }
              v129 = *v6;
              v340 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v340 < 0)
              {
                int v341 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v341 < 0) {
                  return 0;
                }
              }
              else
              {
                int v341 = *v340;
                *(void *)a2 = v340 + 1;
              }
              unint64_t v748 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v341);
              if ((v748 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v750 = v748;
              uint64_t result = CoreML::Specification::MultiplyLayerParams::MergePartialFromCodedStream(v129, (char **)a2, v749);
              if (!result) {
                return result;
              }
              if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v750)) {
                return 0;
              }
            }
            else if (v19 == 240)
            {
              if (v15 != 130) {
                goto LABEL_9;
              }
              if (*v5 != 240)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 240;
                operator new();
              }
              v130 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v130 < 0)
              {
                int v131 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v131 < 0) {
                  return 0;
                }
              }
              else
              {
                int v131 = *v130;
                *(void *)a2 = v130 + 1;
              }
              unint64_t v563 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v131);
              if ((v563 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v565 = v563;
              uint64_t result = CoreML::Specification::AverageLayerParams::MergePartialFromCodedStream((CoreML::Specification::AverageLayerParams *)v563, (char **)a2, v564);
              if (!result) {
                return result;
              }
              if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v565)) {
                return 0;
              }
            }
            else
            {
              if (v19 != 245 || v15 != 170) {
                goto LABEL_9;
              }
              if (*v5 != 245)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 245;
                operator new();
              }
              unsigned int v28 = *v6;
              v264 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v264 < 0)
              {
                int v265 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v265 < 0) {
                  return 0;
                }
              }
              else
              {
                int v265 = *v264;
                *(void *)a2 = v264 + 1;
              }
              unint64_t v637 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v265);
              if ((v637 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v639 = v637;
              uint64_t result = CoreML::Specification::ScaleLayerParams::MergePartialFromCodedStream(v28, (char **)a2, v638);
              if (!result) {
                return result;
              }
              if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v639)) {
                return 0;
              }
            }
          }
          if (v15 >> 3 <= 0x9F) {
            break;
          }
          if (v15 >> 3 > 0xBD)
          {
            if (v15 >> 3 <= 0xD1)
            {
              if (v19 == 190)
              {
                if (v15 != 242) {
                  goto LABEL_9;
                }
                if (*v5 != 190)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 190;
                  operator new();
                }
                v224 = *v6;
                v438 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v438 < 0)
                {
                  int v439 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v439 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v439 = *v438;
                  *(void *)a2 = v438 + 1;
                }
                unint64_t v890 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v439);
                if ((v890 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v892 = v890;
                uint64_t result = CoreML::Specification::CropLayerParams::MergePartialFromCodedStream(v224, (char **)a2, v891);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v892)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 200 || v15 != 66) {
                  goto LABEL_9;
                }
                if (*v5 != 200)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 200;
                  operator new();
                }
                std::vector<std::string>::pointer v89 = *v6;
                v330 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v330 < 0)
                {
                  int v331 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v331 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v331 = *v330;
                  *(void *)a2 = v330 + 1;
                }
                unint64_t v733 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v331);
                if ((v733 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v735 = v733;
                uint64_t result = CoreML::Specification::PaddingLayerParams::MergePartialFromCodedStream(v89, (char **)a2, v734);
                if (!result) {
                  return result;
                }
                if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v735)) {
                  return 0;
                }
              }
            }
            else if (v19 == 210)
            {
              if (v15 != 146) {
                goto LABEL_9;
              }
              if (*v5 != 210)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 210;
                operator new();
              }
              v175 = *v6;
              v384 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v384 < 0)
              {
                int v385 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v385 < 0) {
                  return 0;
                }
              }
              else
              {
                int v385 = *v384;
                *(void *)a2 = v384 + 1;
              }
              unint64_t v811 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v385);
              if ((v811 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v813 = v811;
              uint64_t result = CoreML::Specification::UpsampleLayerParams::MergePartialFromCodedStream(v175, (char **)a2, v812);
              if (!result) {
                return result;
              }
              if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v813)) {
                return 0;
              }
            }
            else if (v19 == 211)
            {
              if (v15 != 154) {
                goto LABEL_9;
              }
              if (*v5 != 211)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 211;
                operator new();
              }
              v176 = *v6;
              v386 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v386 < 0)
              {
                int v387 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v387 < 0) {
                  return 0;
                }
              }
              else
              {
                int v387 = *v386;
                *(void *)a2 = v386 + 1;
              }
              unint64_t v814 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v387);
              if ((v814 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v816 = v814;
              uint64_t result = CoreML::Specification::ResizeBilinearLayerParams::MergePartialFromCodedStream(v176, (char **)a2, v815);
              if (!result) {
                return result;
              }
              if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v816)) {
                return 0;
              }
            }
            else
            {
              if (v19 != 212 || v15 != 162) {
                goto LABEL_9;
              }
              if (*v5 != 212)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 212;
                operator new();
              }
              uint64_t v51 = *v6;
              v290 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v290 < 0)
              {
                int v291 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v291 < 0) {
                  return 0;
                }
              }
              else
              {
                int v291 = *v290;
                *(void *)a2 = v290 + 1;
              }
              unint64_t v675 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v291);
              if ((v675 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v677 = v675;
              uint64_t result = CoreML::Specification::CropResizeLayerParams::MergePartialFromCodedStream(v51, (char **)a2, v676);
              if (!result) {
                return result;
              }
              if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v677)) {
                return 0;
              }
            }
          }
          else
          {
            if (v15 >> 3 <= 0xA9)
            {
              if (v19 == 160)
              {
                if (v15 != 2) {
                  goto LABEL_9;
                }
                if (*v5 != 160)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 160;
                  operator new();
                }
                v208 = *v6;
                v418 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v418 < 0)
                {
                  int v419 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v419 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v419 = *v418;
                  *(void *)a2 = v418 + 1;
                }
                unint64_t v862 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v419);
                if ((v862 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v243 = v862;
                uint64_t result = CoreML::Specification::BatchnormLayerParams::MergePartialFromCodedStream(v208, a2, v863);
                if (!result) {
                  return result;
                }
              }
              else
              {
                if (v19 != 165 || v15 != 42) {
                  goto LABEL_9;
                }
                if (*v5 != 165)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 165;
                  operator new();
                }
                unsigned int v72 = *v6;
                v310 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v310 < 0)
                {
                  int v311 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v311 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v311 = *v310;
                  *(void *)a2 = v310 + 1;
                }
                unint64_t v705 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v311);
                if ((v705 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v243 = v705;
                uint64_t result = CoreML::Specification::MeanVarianceNormalizeLayerParams::MergePartialFromCodedStream(v72, (char **)a2, v706);
                if (!result) {
                  return result;
                }
              }
              goto LABEL_2002;
            }
            if (v19 == 170)
            {
              if (v15 != 82) {
                goto LABEL_9;
              }
              if (*v5 != 170)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 170;
                operator new();
              }
              v141 = *v6;
              v348 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v348 < 0)
              {
                int v349 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v349 < 0) {
                  return 0;
                }
              }
              else
              {
                int v349 = *v348;
                *(void *)a2 = v348 + 1;
              }
              unint64_t v760 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v349);
              if ((v760 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v243 = v760;
              uint64_t result = CoreML::Specification::L2NormalizeLayerParams::MergePartialFromCodedStream(v141, (char **)a2, v761);
              if (!result) {
                return result;
              }
              goto LABEL_2002;
            }
            if (v19 == 175)
            {
              if (v15 == 122)
              {
                if (*v5 != 175)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 175;
                  operator new();
                }
                v142 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v142 < 0)
                {
                  int v143 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v143 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v143 = *v142;
                  *(void *)a2 = v142 + 1;
                }
                unint64_t v575 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v143);
                if ((v575 & 0x8000000000000000) != 0) {
                  return 0;
                }
                int v243 = v575;
                uint64_t result = CoreML::Specification::SoftmaxLayerParams::MergePartialFromCodedStream((CoreML::Specification::SoftmaxLayerParams *)v575, (char **)a2, v576);
                if (!result) {
                  return result;
                }
                goto LABEL_2002;
              }
              goto LABEL_9;
            }
            if (v19 != 180 || v15 != 162) {
              goto LABEL_9;
            }
            if (*v5 != 180)
            {
              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
              *((_DWORD *)this + 35) = 180;
              operator new();
            }
            int v33 = *v6;
            v270 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v270 < 0)
            {
              int v271 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v271 < 0) {
                return 0;
              }
            }
            else
            {
              int v271 = *v270;
              *(void *)a2 = v270 + 1;
            }
            unint64_t v646 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v271);
            if ((v646 & 0x8000000000000000) != 0) {
              return 0;
            }
            int v648 = v646;
            uint64_t result = CoreML::Specification::LRNLayerParams::MergePartialFromCodedStream(v33, (char **)a2, v647);
            if (!result) {
              return result;
            }
            if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v648)) {
              return 0;
            }
          }
        }
        if (v15 >> 3 > 0x63) {
          break;
        }
        switch(v19)
        {
          case 1u:
            if (v15 != 10) {
              goto LABEL_9;
            }
            if (*v10 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
              _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
            }
            uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v10);
            if (!result) {
              return result;
            }
            int v21 = (unsigned __int8 *)*v10;
            if (SHIBYTE((*v10)->__r_.__value_.__r.__words[2]) < 0)
            {
              int v21 = *(unsigned __int8 **)v21;
              int64_t size = (const char *)(*v10)->__r_.__value_.__l.__size_;
            }
            else
            {
              int64_t size = (const char *)HIBYTE((*v10)->__r_.__value_.__r.__words[2]);
            }
            v502 = "CoreML.Specification.NeuralNetworkLayer.name";
            goto LABEL_2119;
          case 2u:
            if (v15 != 18) {
              goto LABEL_9;
            }
            uint64_t v104 = (int *)*((void *)this + 4);
            if (!v104)
            {
              int v106 = *((_DWORD *)this + 7);
LABEL_2100:
              _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v106 + 1);
              uint64_t v104 = (int *)*((void *)this + 4);
              int v106 = *v104;
              goto LABEL_2101;
            }
            uint64_t v105 = *((int *)this + 6);
            int v106 = *v104;
            if ((int)v105 < *v104)
            {
              *((_DWORD *)this + 6) = v105 + 1;
              Aligned = *(std::string **)&v104[2 * v105 + 2];
              goto LABEL_2108;
            }
            if (v106 == *((_DWORD *)this + 7)) {
              goto LABEL_2100;
            }
LABEL_2101:
            *uint64_t v104 = v106 + 1;
            v935 = *(_tc_google::protobuf::Arena **)v9;
            if (!*(void *)v9) {
              operator new();
            }
            Aligned->__r_.__value_.__l.__size_ = 0;
            Aligned->__r_.__value_.__r.__words[2] = 0;
            Aligned->__r_.__value_.__r.__words[0] = 0;
            _tc_google::protobuf::Arena::AddListNode(v935, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<std::string>);
            uint64_t v937 = *((void *)this + 4);
            uint64_t v938 = *((int *)this + 6);
            *((_DWORD *)this + 6) = v938 + 1;
            *(void *)(v937 + 8 * v938 + 8) = Aligned;
LABEL_2108:
            uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, Aligned);
            if (!result) {
              return result;
            }
            uint64_t v939 = *((void *)this + 4);
            int v21 = *(unsigned __int8 **)(v939 + 8 * *((int *)this + 6));
            if ((char)v21[23] < 0)
            {
              int v21 = *(unsigned __int8 **)v21;
              int64_t size = *(const char **)(*(void *)(v939 + 8 * *((int *)this + 6)) + 8);
            }
            else
            {
              int64_t size = (const char *)v21[23];
            }
            v502 = "CoreML.Specification.NeuralNetworkLayer.input";
            goto LABEL_2119;
          case 3u:
            if (v15 != 26) {
              goto LABEL_9;
            }
            std::ctype_base::mask v108 = (int *)*((void *)this + 7);
            if (!v108)
            {
              int v110 = *((_DWORD *)this + 13);
LABEL_2104:
              _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v110 + 1);
              std::ctype_base::mask v108 = (int *)*((void *)this + 7);
              int v110 = *v108;
              goto LABEL_2105;
            }
            uint64_t v109 = *((int *)this + 12);
            int v110 = *v108;
            if ((int)v109 < *v108)
            {
              *((_DWORD *)this + 12) = v109 + 1;
              v111 = *(std::string **)&v108[2 * v109 + 2];
              goto LABEL_2114;
            }
            if (v110 == *((_DWORD *)this + 13)) {
              goto LABEL_2104;
            }
LABEL_2105:
            *std::ctype_base::mask v108 = v110 + 1;
            v936 = *(_tc_google::protobuf::Arena **)v8;
            if (!*(void *)v8) {
              operator new();
            }
            v111->__r_.__value_.__l.__size_ = 0;
            v111->__r_.__value_.__r.__words[2] = 0;
            v111->__r_.__value_.__r.__words[0] = 0;
            _tc_google::protobuf::Arena::AddListNode(v936, v111, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<std::string>);
            uint64_t v940 = *((void *)this + 7);
            uint64_t v941 = *((int *)this + 12);
            *((_DWORD *)this + 12) = v941 + 1;
            *(void *)(v940 + 8 * v941 + 8) = v111;
LABEL_2114:
            uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v111);
            if (!result) {
              return result;
            }
            uint64_t v942 = *((void *)this + 7);
            int v21 = *(unsigned __int8 **)(v942 + 8 * *((int *)this + 12));
            if ((char)v21[23] < 0)
            {
              int v21 = *(unsigned __int8 **)v21;
              int64_t size = *(const char **)(*(void *)(v942 + 8 * *((int *)this + 12)) + 8);
            }
            else
            {
              int64_t size = (const char *)v21[23];
            }
            v502 = "CoreML.Specification.NeuralNetworkLayer.output";
LABEL_2119:
            if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v21, size, 0, (uint64_t)v502))return 0; {
            break;
            }
          case 4u:
            if (v15 != 34) {
              goto LABEL_9;
            }
            uint64_t v112 = (uint64_t)v7;
            goto LABEL_482;
          case 5u:
            if (v15 != 42) {
              goto LABEL_9;
            }
            uint64_t v112 = (uint64_t)v943;
LABEL_482:
            char v113 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(v112);
            char v114 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v114 < 0)
            {
              int v115 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v115 < 0) {
                return 0;
              }
            }
            else
            {
              int v115 = *v114;
              *(void *)a2 = v114 + 1;
            }
            unint64_t v241 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v115);
            if ((v241 & 0x8000000000000000) != 0) {
              return 0;
            }
            int v243 = v241;
            uint64_t result = CoreML::Specification::Tensor::MergePartialFromCodedStream(v113, (char **)a2, v242);
            if (!result) {
              return result;
            }
            goto LABEL_2002;
          case 0xAu:
            if (v15 != 80) {
              goto LABEL_9;
            }
            BOOL v116 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v116 < 0)
            {
              Varint64Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v489 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              Varint64Fallbacunint64_t k = *v116;
              *(void *)a2 = v116 + 1;
            }
            *((unsigned char *)this + 12CoreML::Specification::Identity::New(this, 0) = Varint64Fallback != 0;
            goto LABEL_2;
          default:
            goto LABEL_9;
        }
      }
      if (v15 >> 3 > 0x81) {
        break;
      }
      if (v19 == 100)
      {
        if (v15 != 34) {
          goto LABEL_9;
        }
        if (*v5 != 100)
        {
          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
          *((_DWORD *)this + 35) = 100;
          operator new();
        }
        v215 = *v6;
        v428 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v428 < 0)
        {
          int v429 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v429 < 0) {
            return 0;
          }
        }
        else
        {
          int v429 = *v428;
          *(void *)a2 = v428 + 1;
        }
        unint64_t v876 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v429);
        if ((v876 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v243 = v876;
        uint64_t result = CoreML::Specification::ConvolutionLayerParams::MergePartialFromCodedStream(v215, a2, v877);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v19 != 120 || v15 != 194) {
          goto LABEL_9;
        }
        if (*v5 != 120)
        {
          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
          *((_DWORD *)this + 35) = 120;
          operator new();
        }
        v79 = *v6;
        v322 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v322 < 0)
        {
          int v323 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v323 < 0) {
            return 0;
          }
        }
        else
        {
          int v323 = *v322;
          *(void *)a2 = v322 + 1;
        }
        unint64_t v722 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v323);
        if ((v722 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v243 = v722;
        uint64_t result = CoreML::Specification::PoolingLayerParams::MergePartialFromCodedStream(v79, a2, v723);
        if (!result) {
          return result;
        }
      }
LABEL_2002:
      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v243)) {
        return 0;
      }
    }
    if (v19 == 130)
    {
      if (v15 != 18) {
        goto LABEL_9;
      }
      if (*v5 != 130)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 130;
        operator new();
      }
      v154 = *v6;
      v370 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v370 < 0)
      {
        int v371 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v371 < 0) {
          return 0;
        }
      }
      else
      {
        int v371 = *v370;
        *(void *)a2 = v370 + 1;
      }
      unint64_t v792 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v371);
      if ((v792 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v243 = v792;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v154, a2, v793);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
    if (v19 == 140)
    {
      if (v15 != 98) {
        goto LABEL_9;
      }
      if (*v5 != 140)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 140;
        operator new();
      }
      v155 = *v6;
      v372 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v372 < 0)
      {
        int v373 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v373 < 0) {
          return 0;
        }
      }
      else
      {
        int v373 = *v372;
        *(void *)a2 = v372 + 1;
      }
      unint64_t v794 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v373);
      if ((v794 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v243 = v794;
      uint64_t result = CoreML::Specification::InnerProductLayerParams::MergePartialFromCodedStream(v155, a2, v795);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
    if (v19 == 150 && v15 == 178)
    {
      if (*v5 != 150)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 150;
        operator new();
      }
      uint64_t v42 = *v6;
      v280 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v280 < 0)
      {
        int v281 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v281 < 0) {
          return 0;
        }
      }
      else
      {
        int v281 = *v280;
        *(void *)a2 = v280 + 1;
      }
      unint64_t v661 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v281);
      if ((v661 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v243 = v661;
      uint64_t result = CoreML::Specification::EmbeddingLayerParams::MergePartialFromCodedStream(v42, a2, v662);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
LABEL_9:
    if (!v15 || (v15 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v15, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F702CC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40594C3D85);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::SerializeWithCachedSizes(CoreML::Specification::NeuralNetworkLayer *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 14);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(const char **)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  uint64_t v7 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v7, 1, (uint64_t)"CoreML.Specification.NeuralNetworkLayer.name");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 14), a2);
  }
LABEL_7:
  uint64_t v8 = *((unsigned int *)this + 6);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = -v8;
    uint64_t v10 = 1;
    do
    {
      int v11 = *(unsigned __int8 **)(*((void *)this + 4) + 8 * v10);
      if ((char)v11[23] < 0)
      {
        int v11 = *(unsigned __int8 **)v11;
        unint64_t v12 = *(const char **)(*(void *)(*((void *)this + 4) + 8 * v10) + 8);
      }
      else
      {
        unint64_t v12 = (const char *)v11[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v11, v12, 1, (uint64_t)"CoreML.Specification.NeuralNetworkLayer.input");
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteString(2, *(void *)(*((void *)this + 4) + 8 * v10++), a2);
    }
    while (v9 + v10 != 1);
  }
  uint64_t v13 = *((unsigned int *)this + 12);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = -v13;
    uint64_t v15 = 1;
    do
    {
      int v16 = *(unsigned __int8 **)(*((void *)this + 7) + 8 * v15);
      if ((char)v16[23] < 0)
      {
        int v16 = *(unsigned __int8 **)v16;
        int v17 = *(const char **)(*(void *)(*((void *)this + 7) + 8 * v15) + 8);
      }
      else
      {
        int v17 = (const char *)v16[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v16, v17, 1, (uint64_t)"CoreML.Specification.NeuralNetworkLayer.output");
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteString(3, *(void *)(*((void *)this + 7) + 8 * v15++), a2);
    }
    while (v14 + v15 != 1);
  }
  int v18 = *((_DWORD *)this + 18);
  if (v18)
  {
    for (int i = 0; i != v18; ++i)
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, *(void *)(*((void *)this + 10) + 8 * i + 8), a2, a4);
  }
  int v20 = *((_DWORD *)this + 24);
  if (v20)
  {
    for (int j = 0; j != v20; ++j)
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)5, *(void *)(*((void *)this + 13) + 8 * j + 8), a2, a4);
  }
  if (*((unsigned char *)this + 120)) {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteBool(10, 1u, a2, a4);
  }
  int v22 = *((_DWORD *)this + 35);
  if (v22 == 100)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x64, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 120)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x78, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 130)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x82, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 140)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x8C, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 150)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x96, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 160)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA0, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 165)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA5, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 170)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xAA, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 175)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xAF, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 180)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xB4, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 190)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xBE, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 200)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xC8, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 210)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xD2, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 211)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xD3, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 212)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xD4, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 220)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xDC, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 230)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xE6, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 231)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xE7, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 240)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xF0, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 245)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xF5, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 250)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xFA, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 260)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x104, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 261)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x105, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 270)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x10E, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 280)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x118, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 290)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x122, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 300)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x12C, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 301)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x12D, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 310)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x136, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 320)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x140, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 330)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14A, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 340)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x154, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 345)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x159, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 350)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x15E, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 400)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x190, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 410)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x19A, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 420)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1A4, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 430)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1AE, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 500)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1F4, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 600)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x258, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 605)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x25D, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 615)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x267, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 620)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x26C, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 625)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x271, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 635)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x27B, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 640)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x280, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 660)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x294, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 665)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x299, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 670)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x29E, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 680)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2A8, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 685)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2AD, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 700)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2BC, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 710)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2C6, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 715)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2CB, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 720)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2D0, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 730)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2DA, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 735)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2DF, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 740)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2E4, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 750)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2EE, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 755)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2F3, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 760)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2F8, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 770)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x302, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 775)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x307, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 780)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x30C, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 790)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x316, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 795)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x31B, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 815)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x32F, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 820)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x334, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 825)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x339, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 827)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x33B, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 830)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x33E, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 832)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x340, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 840)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x348, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 845)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x34D, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 850)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x352, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 855)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x357, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 865)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x361, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 870)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x366, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 875)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x36B, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 880)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x370, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 885)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x375, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 890)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x37A, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 895)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x37F, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 900)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x384, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 905)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x389, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 920)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x398, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 925)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x39D, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 930)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3A2, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 935)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3A7, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 940)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3AC, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 945)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3B1, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 950)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3B6, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 952)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3B8, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 954)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3BA, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 960)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3C0, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 965)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3C5, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 975)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3CF, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 980)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3D4, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 985)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3D9, *((void *)this + 16), a2, a4);
    int v22 = *((_DWORD *)this + 35);
  }
  if (v22 == 995) {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3E3, *((void *)this + 16), a2, a4);
  }
  int v23 = *((_DWORD *)this + 35);
  if (v23 == 1000)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3E8, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1005)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3ED, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1015)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3F7, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1020)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3FC, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1025)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x401, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1040)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x410, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1045)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x415, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1065)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x429, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1070)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x42E, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1080)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x438, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1085)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x43D, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1090)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x442, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1100)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x44C, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1105)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x451, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1110)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x456, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1120)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x460, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1125)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x465, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1130)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x46A, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1135)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x46F, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1140)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x474, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1145)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x479, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1150)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x47E, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1155)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x483, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1170)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x492, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1175)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x497, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1180)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x49C, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1190)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4A6, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1195)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4AB, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1200)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4B0, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1210)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4BA, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1215)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4BF, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1220)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4C4, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1230)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4CE, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1250)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4E2, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1255)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4E7, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1260)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4EC, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1265)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4F1, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1270)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4F6, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1275)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x4FB, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1280)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x500, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1285)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x505, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1290)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x50A, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1295)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x50F, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1313)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x521, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1315)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x523, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1320)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x528, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1325)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x52D, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1330)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x532, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1350)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x546, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1400)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x578, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1450)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5AA, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1455)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5AF, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1460)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5B4, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1461)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5B5, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1465)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5B9, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1466)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5BA, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1470)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5BE, *((void *)this + 16), a2, a4);
    int v23 = *((_DWORD *)this + 35);
  }
  if (v23 == 1471)
  {
    uint64_t v24 = *((void *)this + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5BF, v24, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(CoreML::Specification::NeuralNetworkLayer *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 6);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 4) + 8);
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *((unsigned int *)this + 12);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *((unsigned int *)this + 18);
  uint64_t v15 = v9 + v14;
  if (v14)
  {
    int v16 = 0;
    do
    {
      uint64_t v17 = CoreML::Specification::Tensor::ByteSizeLong(*(CoreML::Specification::Tensor **)(*((void *)this + 10)
                                                                                          + 8 * v16
                                                                                          + 8));
      v15 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      ++v16;
    }
    while (v14 != v16);
  }
  uint64_t v18 = *((unsigned int *)this + 24);
  uint64_t v19 = v15 + v18;
  if (v18)
  {
    int v20 = 0;
    do
    {
      uint64_t v21 = CoreML::Specification::Tensor::ByteSizeLong(*(CoreML::Specification::Tensor **)(*((void *)this + 13)
                                                                                          + 8 * v20
                                                                                          + 8));
      v19 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      ++v20;
    }
    while (v18 != v20);
  }
  uint64_t v22 = *((void *)this + 14);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  if (*(char *)(v22 + 23) < 0)
  {
    if (!*(void *)(v22 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v22 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v19 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  if (*((unsigned char *)this + 120)) {
    v19 += 2;
  }
  int v25 = *((_DWORD *)this + 35);
  if (v25 <= 879)
  {
    if (v25 > 604)
    {
      if (v25 <= 759)
      {
        if (v25 > 684)
        {
          if (v25 > 729)
          {
            if (v25 <= 739)
            {
              if (v25 != 730 && v25 != 735) {
                goto LABEL_370;
              }
            }
            else if (v25 != 740 && v25 != 750 && v25 != 755)
            {
              goto LABEL_370;
            }
          }
          else if (v25 <= 709)
          {
            if (v25 != 685 && v25 != 700) {
              goto LABEL_370;
            }
          }
          else if (v25 != 710 && v25 != 715 && v25 != 720)
          {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 <= 639)
        {
          if (v25 <= 619)
          {
            if (v25 == 605)
            {
              uint64_t v26 = CoreML::Specification::BranchLayerParams::ByteSizeLong(*((CoreML::Specification::BranchLayerParams **)this
                                                                           + 16));
              goto LABEL_368;
            }
            if (v25 == 615)
            {
              uint64_t v26 = CoreML::Specification::LoopLayerParams::ByteSizeLong(*((CoreML::Specification::LoopLayerParams **)this
                                                                         + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          if (v25 == 620 || v25 == 625) {
            goto LABEL_331;
          }
          if (v25 != 635) {
            goto LABEL_370;
          }
          uint64_t v27 = *((void *)this + 16);
          uint64_t v28 = 5;
          if (*(float *)(v27 + 16) == 0.0) {
            uint64_t v28 = 0;
          }
          if (*(float *)(v27 + 20) != 0.0) {
            v28 += 5;
          }
          if (*(float *)(v27 + 24) != 0.0) {
            v28 += 5;
          }
          *(_DWORD *)(v27 + 28) = v28;
          goto LABEL_281;
        }
        if (v25 > 664)
        {
          if (v25 != 665 && v25 != 670 && v25 != 680) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 640 && v25 != 660) {
          goto LABEL_370;
        }
LABEL_275:
        uint64_t v34 = *((void *)this + 16);
        uint64_t v28 = 5;
        if (*(float *)(v34 + 16) == 0.0) {
          uint64_t v28 = 0;
        }
        uint64_t v37 = v28 + 5;
        BOOL v38 = *(float *)(v34 + 20) == 0.0;
LABEL_278:
        if (!v38) {
          uint64_t v28 = v37;
        }
        goto LABEL_280;
      }
      if (v25 > 824)
      {
        if (v25 <= 849)
        {
          switch(v25)
          {
            case 825:
            case 827:
            case 830:
            case 832:
              goto LABEL_86;
            case 826:
            case 828:
            case 829:
            case 831:
              goto LABEL_370;
            default:
              if (v25 == 840 || v25 == 845) {
                goto LABEL_331;
              }
              break;
          }
          goto LABEL_370;
        }
        if (v25 <= 864)
        {
          if (v25 != 850 && v25 != 855) {
            goto LABEL_370;
          }
        }
        else if (v25 != 865 && v25 != 870 && v25 != 875)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 789)
      {
        if (v25 > 774)
        {
          if (v25 != 775 && v25 != 780) {
            goto LABEL_370;
          }
        }
        else if (v25 != 760 && v25 != 770)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 > 814)
      {
        if (v25 != 815 && v25 != 820) {
          goto LABEL_370;
        }
        goto LABEL_86;
      }
      if (v25 == 790) {
        goto LABEL_331;
      }
      if (v25 != 795) {
        goto LABEL_370;
      }
      goto LABEL_211;
    }
    if (v25 <= 249)
    {
      if (v25 <= 189)
      {
        if (v25 <= 159)
        {
          if (v25 <= 129)
          {
            if (v25 == 100)
            {
              uint64_t v26 = CoreML::Specification::ConvolutionLayerParams::ByteSizeLong(*((CoreML::Specification::ConvolutionLayerParams **)this
                                                                                + 16));
              goto LABEL_368;
            }
            if (v25 == 120)
            {
              uint64_t v26 = CoreML::Specification::PoolingLayerParams::ByteSizeLong(*((CoreML::Specification::PoolingLayerParams **)this
                                                                            + 16));
              goto LABEL_368;
            }
          }
          else
          {
            switch(v25)
            {
              case 130:
                uint64_t v26 = CoreML::Specification::ActivationParams::ByteSizeLong(*((CoreML::Specification::ActivationParams **)this
                                                                            + 16));
                goto LABEL_368;
              case 140:
                uint64_t v26 = CoreML::Specification::InnerProductLayerParams::ByteSizeLong(*((CoreML::Specification::InnerProductLayerParams **)this
                                                                                   + 16));
                goto LABEL_368;
              case 150:
                uint64_t v26 = CoreML::Specification::EmbeddingLayerParams::ByteSizeLong(*((CoreML::Specification::EmbeddingLayerParams **)this
                                                                                + 16));
LABEL_368:
                uint64_t v42 = v19 + v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
                goto LABEL_369;
            }
          }
          goto LABEL_370;
        }
        if (v25 > 169)
        {
          if (v25 != 170)
          {
            if (v25 != 175)
            {
              if (v25 == 180)
              {
                uint64_t v26 = CoreML::Specification::LRNLayerParams::ByteSizeLong(*((CoreML::Specification::LRNLayerParams **)this
                                                                          + 16));
                goto LABEL_368;
              }
              goto LABEL_370;
            }
            goto LABEL_331;
          }
          goto LABEL_86;
        }
        if (v25 == 160)
        {
          uint64_t v26 = CoreML::Specification::BatchnormLayerParams::ByteSizeLong(*((CoreML::Specification::BatchnormLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        }
        if (v25 != 165) {
          goto LABEL_370;
        }
        uint64_t v34 = *((void *)this + 16);
        uint64_t v28 = 2 * *(unsigned __int8 *)(v34 + 16);
        if (*(unsigned char *)(v34 + 17)) {
          v28 += 2;
        }
        uint64_t v37 = v28 + 5;
        BOOL v38 = *(float *)(v34 + 20) == 0.0;
        goto LABEL_278;
      }
      if (v25 <= 219)
      {
        if (v25 <= 209)
        {
          if (v25 == 190)
          {
            uint64_t v26 = CoreML::Specification::CropLayerParams::ByteSizeLong(*((CoreML::Specification::CropLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          if (v25 == 200)
          {
            uint64_t v26 = (uint64_t)CoreML::Specification::PaddingLayerParams::ByteSizeLong(*((CoreML::Specification::PaddingLayerParams **)this
                                                                                   + 16));
            goto LABEL_368;
          }
        }
        else
        {
          switch(v25)
          {
            case 210:
              uint64_t v26 = CoreML::Specification::UpsampleLayerParams::ByteSizeLong(*((CoreML::Specification::UpsampleLayerParams **)this
                                                                             + 16));
              goto LABEL_368;
            case 211:
              uint64_t v26 = CoreML::Specification::ResizeBilinearLayerParams::ByteSizeLong(*((CoreML::Specification::ResizeBilinearLayerParams **)this
                                                                                   + 16));
              goto LABEL_368;
            case 212:
              uint64_t v26 = CoreML::Specification::CropResizeLayerParams::ByteSizeLong(*((CoreML::Specification::CropResizeLayerParams **)this
                                                                               + 16));
              goto LABEL_368;
          }
        }
        goto LABEL_370;
      }
      if (v25 <= 230)
      {
        if (v25 == 220)
        {
          uint64_t v26 = CoreML::Specification::UnaryFunctionLayerParams::ByteSizeLong(*((CoreML::Specification::UnaryFunctionLayerParams **)this
                                                                              + 16));
          goto LABEL_368;
        }
        if (v25 != 230) {
          goto LABEL_370;
        }
      }
      else if (v25 != 231)
      {
        if (v25 != 240)
        {
          if (v25 == 245)
          {
            uint64_t v26 = CoreML::Specification::ScaleLayerParams::ByteSizeLong(*((CoreML::Specification::ScaleLayerParams **)this
                                                                        + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      goto LABEL_86;
    }
    if (v25 <= 329)
    {
      if (v25 <= 289)
      {
        if (v25 <= 260)
        {
          if (v25 == 250)
          {
            uint64_t v26 = CoreML::Specification::BiasLayerParams::ByteSizeLong(*((CoreML::Specification::BiasLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          if (v25 != 260) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 261)
        {
          if (v25 != 270)
          {
            if (v25 == 280)
            {
              uint64_t v26 = CoreML::Specification::ReduceLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLayerParams **)this
                                                                           + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          uint64_t v40 = *((void *)this + 16);
          uint64_t v41 = *(unsigned __int8 *)(v40 + 16);
          *(_DWORD *)(v40 + 2CoreML::Specification::Identity::New(this, 0) = 2 * v41;
          uint64_t v39 = v19 + 2 * v41;
LABEL_282:
          uint64_t v19 = v39 + 3;
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 300)
      {
        if (v25 == 290)
        {
          uint64_t v26 = CoreML::Specification::LoadConstantLayerParams::ByteSizeLong(*((CoreML::Specification::LoadConstantLayerParams **)this
                                                                             + 16));
          goto LABEL_368;
        }
        if (v25 == 300)
        {
          uint64_t v26 = CoreML::Specification::ReshapeLayerParams::ByteSizeLong(*((CoreML::Specification::ReshapeLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 != 301)
      {
        if (v25 == 310)
        {
          uint64_t v26 = CoreML::Specification::PermuteLayerParams::ByteSizeLong(*((CoreML::Specification::PermuteLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        if (v25 != 320) {
          goto LABEL_370;
        }
        uint64_t v30 = *((void *)this + 16);
        uint64_t v28 = 3;
        if (!*(unsigned char *)(v30 + 16)) {
          uint64_t v28 = 0;
        }
        goto LABEL_216;
      }
LABEL_211:
      uint64_t v30 = *((void *)this + 16);
      int v31 = *(_DWORD *)(v30 + 16);
      uint64_t v32 = 11;
      uint64_t v33 = ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v31 >= 0) {
        uint64_t v32 = v33;
      }
      if (v31) {
        uint64_t v28 = v32;
      }
      else {
        uint64_t v28 = 0;
      }
      goto LABEL_216;
    }
    if (v25 > 409)
    {
      if (v25 <= 429)
      {
        if (v25 == 410)
        {
          uint64_t v26 = CoreML::Specification::GRULayerParams::ByteSizeLong(*((CoreML::Specification::GRULayerParams **)this + 16));
          goto LABEL_368;
        }
        if (v25 == 420)
        {
          uint64_t v26 = CoreML::Specification::UniDirectionalLSTMLayerParams::ByteSizeLong(*((CoreML::Specification::UniDirectionalLSTMLayerParams **)this
                                                                                   + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 == 430)
      {
        uint64_t v26 = CoreML::Specification::BiDirectionalLSTMLayerParams::ByteSizeLong(*((CoreML::Specification::BiDirectionalLSTMLayerParams **)this
                                                                                + 16));
        goto LABEL_368;
      }
      if (v25 == 500)
      {
        uint64_t v26 = CoreML::Specification::CustomLayerParams::ByteSizeLong(*((CoreML::Specification::CustomLayerParams **)this
                                                                     + 16));
        goto LABEL_368;
      }
      if (v25 != 600) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 > 344)
    {
      switch(v25)
      {
        case 345:
          uint64_t v26 = CoreML::Specification::ReorganizeDataLayerParams::ByteSizeLong(*((CoreML::Specification::ReorganizeDataLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        case 350:
          uint64_t v26 = CoreML::Specification::SliceLayerParams::ByteSizeLong(*((CoreML::Specification::SliceLayerParams **)this
                                                                      + 16));
          goto LABEL_368;
        case 400:
          uint64_t v26 = CoreML::Specification::SimpleRecurrentLayerParams::ByteSizeLong(*((CoreML::Specification::SimpleRecurrentLayerParams **)this
                                                                                + 16));
          goto LABEL_368;
      }
      goto LABEL_370;
    }
    if (v25 != 330 && v25 != 340) {
      goto LABEL_370;
    }
LABEL_253:
    uint64_t v34 = *((void *)this + 16);
    uint64_t v35 = *(void *)(v34 + 16);
    unint64_t v36 = (9 * (__clz(v35 | 1) ^ 0x3F) + 73) >> 6;
    if (v35) {
      uint64_t v28 = v36 + 1;
    }
    else {
      uint64_t v28 = 0;
    }
LABEL_280:
    *(_DWORD *)(v34 + 24) = v28;
    goto LABEL_281;
  }
  if (v25 <= 1139)
  {
    if (v25 > 994)
    {
      if (v25 > 1079)
      {
        if (v25 <= 1109)
        {
          if (v25 <= 1089)
          {
            if (v25 != 1080)
            {
              if (v25 == 1085)
              {
                uint64_t v26 = CoreML::Specification::FillStaticLayerParams::ByteSizeLong(*((CoreML::Specification::FillStaticLayerParams **)this
                                                                                 + 16));
                goto LABEL_368;
              }
              goto LABEL_370;
            }
            goto LABEL_86;
          }
          if (v25 == 1090)
          {
LABEL_86:
            uint64_t v30 = *((void *)this + 16);
            uint64_t v28 = 5;
            if (*(float *)(v30 + 16) == 0.0) {
              uint64_t v28 = 0;
            }
LABEL_216:
            *(_DWORD *)(v30 + 2CoreML::Specification::Identity::New(this, 0) = v28;
LABEL_281:
            uint64_t v39 = v19 + v28;
            goto LABEL_282;
          }
          if (v25 != 1100)
          {
            if (v25 == 1105)
            {
              uint64_t v26 = CoreML::Specification::BroadcastToStaticLayerParams::ByteSizeLong(*((CoreML::Specification::BroadcastToStaticLayerParams **)this
                                                                                      + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
LABEL_331:
          *(_DWORD *)(*((void *)this + 16) + 16) = 0;
          v19 += 3;
          goto LABEL_370;
        }
        if (v25 <= 1124)
        {
          if (v25 != 1110)
          {
            if (v25 == 1120)
            {
              uint64_t v26 = CoreML::Specification::SqueezeLayerParams::ByteSizeLong(*((CoreML::Specification::SqueezeLayerParams **)this
                                                                            + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 == 1125)
        {
          uint64_t v26 = CoreML::Specification::ExpandDimsLayerParams::ByteSizeLong(*((CoreML::Specification::ExpandDimsLayerParams **)this
                                                                           + 16));
          goto LABEL_368;
        }
        if (v25 != 1130)
        {
          if (v25 != 1135) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        goto LABEL_253;
      }
      if (v25 > 1024)
      {
        if (v25 > 1044)
        {
          if (v25 == 1045)
          {
            uint64_t v26 = CoreML::Specification::BatchedMatMulLayerParams::ByteSizeLong(*((CoreML::Specification::BatchedMatMulLayerParams **)this
                                                                                + 16));
            goto LABEL_368;
          }
          if (v25 != 1065)
          {
            if (v25 == 1070)
            {
              uint64_t v26 = CoreML::Specification::LoadConstantNDLayerParams::ByteSizeLong(*((CoreML::Specification::LoadConstantNDLayerParams **)this
                                                                                   + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 1025)
        {
          if (v25 == 1040)
          {
            uint64_t v26 = CoreML::Specification::EmbeddingNDLayerParams::ByteSizeLong(*((CoreML::Specification::EmbeddingNDLayerParams **)this
                                                                              + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
      }
      else
      {
        if (v25 <= 1004)
        {
          if (v25 == 995)
          {
            uint64_t v26 = CoreML::Specification::SliceStaticLayerParams::ByteSizeLong(*((CoreML::Specification::SliceStaticLayerParams **)this
                                                                              + 16));
            goto LABEL_368;
          }
          if (v25 == 1000)
          {
            uint64_t v26 = CoreML::Specification::SliceDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::SliceDynamicLayerParams **)this
                                                                               + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        if (v25 == 1005)
        {
          uint64_t v26 = CoreML::Specification::SlidingWindowsLayerParams::ByteSizeLong(*((CoreML::Specification::SlidingWindowsLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        }
        if (v25 == 1015)
        {
          uint64_t v26 = CoreML::Specification::TopKLayerParams::ByteSizeLong(*((CoreML::Specification::TopKLayerParams **)this
                                                                     + 16));
          goto LABEL_368;
        }
        if (v25 != 1020) {
          goto LABEL_370;
        }
      }
      goto LABEL_82;
    }
    if (v25 <= 939)
    {
      if (v25 <= 904)
      {
        if (v25 <= 889)
        {
          if (v25 != 880 && v25 != 885) {
            goto LABEL_370;
          }
        }
        else if (v25 != 890 && v25 != 895 && v25 != 900)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 924)
      {
        if (v25 != 905)
        {
          if (v25 == 920)
          {
            uint64_t v26 = CoreML::Specification::TileLayerParams::ByteSizeLong(*((CoreML::Specification::TileLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 != 925 && v25 != 930)
      {
        if (v25 == 935)
        {
          uint64_t v26 = CoreML::Specification::ScatterLayerParams::ByteSizeLong(*((CoreML::Specification::ScatterLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      goto LABEL_253;
    }
    if (v25 <= 959)
    {
      switch(v25)
      {
        case 945:
          goto LABEL_211;
        case 946:
        case 947:
        case 948:
        case 949:
        case 951:
        case 953:
          goto LABEL_370;
        case 950:
        case 952:
          goto LABEL_253;
        case 954:
          uint64_t v26 = CoreML::Specification::ScatterAlongAxisLayerParams::ByteSizeLong(*((CoreML::Specification::ScatterAlongAxisLayerParams **)this
                                                                                 + 16));
          goto LABEL_368;
        default:
          if (v25 == 940) {
            goto LABEL_331;
          }
          break;
      }
      goto LABEL_370;
    }
    if (v25 > 974)
    {
      if (v25 == 975)
      {
        uint64_t v26 = CoreML::Specification::SplitNDLayerParams::ByteSizeLong(*((CoreML::Specification::SplitNDLayerParams **)this
                                                                      + 16));
        goto LABEL_368;
      }
      if (v25 != 980)
      {
        if (v25 == 985)
        {
          uint64_t v26 = CoreML::Specification::TransposeLayerParams::ByteSizeLong(*((CoreML::Specification::TransposeLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
LABEL_82:
      unint64_t v29 = _tc_google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ConcatNDLayerParams>(*((void *)this + 16));
      goto LABEL_365;
    }
    if (v25 != 960)
    {
      if (v25 == 965)
      {
        uint64_t v26 = CoreML::Specification::ReverseSeqLayerParams::ByteSizeLong(*((CoreML::Specification::ReverseSeqLayerParams **)this
                                                                         + 16));
        goto LABEL_368;
      }
      goto LABEL_370;
    }
    unint64_t v29 = _tc_google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ReverseLayerParams>(*((unsigned int **)this + 16));
LABEL_365:
    uint64_t v42 = v19 + v29;
LABEL_369:
    uint64_t v19 = v42 + 2;
    goto LABEL_370;
  }
  if (v25 <= 1274)
  {
    if (v25 <= 1199)
    {
      if (v25 > 1169)
      {
        if (v25 <= 1179)
        {
          if (v25 == 1170)
          {
            uint64_t v26 = CoreML::Specification::RandomNormalLikeLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalLikeLayerParams **)this
                                                                                   + 16));
            goto LABEL_368;
          }
          if (v25 == 1175)
          {
            uint64_t v26 = CoreML::Specification::RandomNormalStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalStaticLayerParams **)this
                                                                                     + 16));
            goto LABEL_368;
          }
        }
        else
        {
          switch(v25)
          {
            case 1180:
              uint64_t v26 = CoreML::Specification::RandomNormalDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalDynamicLayerParams **)this
                                                                                        + 16));
              goto LABEL_368;
            case 1190:
              uint64_t v26 = CoreML::Specification::RandomUniformLikeLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformLikeLayerParams **)this
                                                                                      + 16));
              goto LABEL_368;
            case 1195:
              uint64_t v26 = CoreML::Specification::RandomUniformStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformStaticLayerParams **)this
                                                                                        + 16));
              goto LABEL_368;
          }
        }
        goto LABEL_370;
      }
      if (v25 > 1149)
      {
        if (v25 == 1150)
        {
          uint64_t v26 = CoreML::Specification::RankPreservingReshapeLayerParams::ByteSizeLong(*((CoreML::Specification::RankPreservingReshapeLayerParams **)this
                                                                                      + 16));
          goto LABEL_368;
        }
        if (v25 == 1155)
        {
          uint64_t v26 = CoreML::Specification::ConstantPaddingLayerParams::ByteSizeLong(*((CoreML::Specification::ConstantPaddingLayerParams **)this
                                                                                + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 == 1140)
      {
        uint64_t v26 = CoreML::Specification::ReshapeStaticLayerParams::ByteSizeLong(*((CoreML::Specification::ReshapeStaticLayerParams **)this
                                                                            + 16));
        goto LABEL_368;
      }
      if (v25 != 1145) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 > 1249)
    {
      if (v25 <= 1259)
      {
        if (v25 == 1250)
        {
          uint64_t v26 = CoreML::Specification::ReduceL1LayerParams::ByteSizeLong(*((CoreML::Specification::ReduceL1LayerParams **)this
                                                                         + 16));
          goto LABEL_368;
        }
        if (v25 == 1255)
        {
          uint64_t v26 = CoreML::Specification::ReduceL2LayerParams::ByteSizeLong(*((CoreML::Specification::ReduceL2LayerParams **)this
                                                                         + 16));
          goto LABEL_368;
        }
      }
      else
      {
        switch(v25)
        {
          case 1260:
            uint64_t v26 = CoreML::Specification::ReduceMaxLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMaxLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
          case 1265:
            uint64_t v26 = CoreML::Specification::ReduceMinLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMinLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
          case 1270:
            uint64_t v26 = CoreML::Specification::ReduceSumLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceSumLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
        }
      }
      goto LABEL_370;
    }
    if (v25 <= 1214)
    {
      if (v25 == 1200)
      {
        uint64_t v26 = CoreML::Specification::RandomUniformDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformDynamicLayerParams **)this
                                                                                   + 16));
        goto LABEL_368;
      }
      if (v25 != 1210) {
        goto LABEL_370;
      }
    }
    else
    {
      if (v25 == 1215)
      {
        uint64_t v26 = CoreML::Specification::RandomBernoulliStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomBernoulliStaticLayerParams **)this
                                                                                    + 16));
        goto LABEL_368;
      }
      if (v25 != 1220)
      {
        if (v25 == 1230)
        {
          uint64_t v26 = CoreML::Specification::CategoricalDistributionLayerParams::ByteSizeLong(*((CoreML::Specification::CategoricalDistributionLayerParams **)this
                                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
    }
    unint64_t v29 = _tc_google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::RandomBernoulliLikeLayerParams>(*((void *)this + 16));
    goto LABEL_365;
  }
  if (v25 > 1349)
  {
    if (v25 <= 1454)
    {
      switch(v25)
      {
        case 1350:
          uint64_t v26 = CoreML::Specification::LayerNormalizationLayerParams::ByteSizeLong(*((CoreML::Specification::LayerNormalizationLayerParams **)this
                                                                                   + 16));
          goto LABEL_368;
        case 1400:
          uint64_t v26 = CoreML::Specification::NonMaximumSuppressionLayerParams::ByteSizeLong(*((CoreML::Specification::NonMaximumSuppressionLayerParams **)this
                                                                                      + 16));
          goto LABEL_368;
        case 1450:
          uint64_t v26 = CoreML::Specification::OneHotLayerParams::ByteSizeLong(*((CoreML::Specification::OneHotLayerParams **)this
                                                                       + 16));
          goto LABEL_368;
      }
    }
    else
    {
      switch(v25)
      {
        case 1455:
          uint64_t v26 = CoreML::Specification::CumSumLayerParams::ByteSizeLong(*((CoreML::Specification::CumSumLayerParams **)this
                                                                       + 16));
          goto LABEL_368;
        case 1460:
          goto LABEL_275;
        case 1461:
          goto LABEL_82;
        case 1465:
          uint64_t v26 = CoreML::Specification::Pooling3DLayerParams::ByteSizeLong(*((CoreML::Specification::Pooling3DLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        case 1466:
          goto LABEL_211;
        case 1470:
          uint64_t v26 = CoreML::Specification::SliceBySizeLayerParams::ByteSizeLong(*((CoreML::Specification::SliceBySizeLayerParams **)this
                                                                            + 16));
          goto LABEL_368;
        case 1471:
          uint64_t v26 = CoreML::Specification::Convolution3DLayerParams::ByteSizeLong(*((CoreML::Specification::Convolution3DLayerParams **)this
                                                                              + 16));
          goto LABEL_368;
        default:
          goto LABEL_370;
      }
    }
    goto LABEL_370;
  }
  if (v25 > 1312)
  {
    if (v25 <= 1319)
    {
      if (v25 != 1313)
      {
        if (v25 == 1315)
        {
          uint64_t v26 = CoreML::Specification::MatrixBandPartLayerParams::ByteSizeLong(*((CoreML::Specification::MatrixBandPartLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 != 1320 && v25 != 1325)
    {
      if (v25 != 1330) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    goto LABEL_253;
  }
  if (v25 <= 1284)
  {
    if (v25 == 1275)
    {
      uint64_t v26 = CoreML::Specification::ReduceProdLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceProdLayerParams **)this
                                                                       + 16));
      goto LABEL_368;
    }
    if (v25 == 1280)
    {
      uint64_t v26 = CoreML::Specification::ReduceMeanLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMeanLayerParams **)this
                                                                       + 16));
      goto LABEL_368;
    }
  }
  else
  {
    switch(v25)
    {
      case 1285:
        uint64_t v26 = CoreML::Specification::ReduceLogSumLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLogSumLayerParams **)this
                                                                           + 16));
        goto LABEL_368;
      case 1290:
        uint64_t v26 = CoreML::Specification::ReduceSumSquareLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceSumSquareLayerParams **)this
                                                                              + 16));
        goto LABEL_368;
      case 1295:
        uint64_t v26 = CoreML::Specification::ReduceLogSumExpLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLogSumExpLayerParams **)this
                                                                              + 16));
        goto LABEL_368;
    }
  }
LABEL_370:
  *((_DWORD *)this + 34) = v19;
  return v19;
}

uint64_t _tc_google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ReverseLayerParams>(unsigned int *a1)
{
  uint64_t v1 = a1[4];
  if (v1)
  {
    if ((v1 & 0x80000000) != 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 + v1;
  a1[8] = v1;
  a1[9] = v3;
  return v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
}

unint64_t _tc_google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ConcatNDLayerParams>(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*(unsigned char *)(a1 + 24)) {
    v3 += 2;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3 + 1;
}

unint64_t _tc_google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::RandomBernoulliLikeLayerParams>(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*(float *)(a1 + 24) != 0.0) {
    v3 += 5;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
}

void CoreML::Specification::NeuralNetworkLayer::MergeFrom(CoreML::Specification::NeuralNetworkLayer *this, const CoreML::Specification::NeuralNetworkLayer *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (const std::string **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkLayer *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)((char *)this + 16), (std::string **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    uint64_t v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    uint64_t v11 = (const std::string **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkLayer *)((char *)this + 40), *((_DWORD *)a2 + 12));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)((char *)this + 40), (std::string **)v12, v11, v10, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v13 = *((_DWORD *)this + 12) + v10;
    *((_DWORD *)this + 12) = v13;
    uint64_t v14 = (signed int *)*((void *)this + 7);
    if (*v14 < v13) {
      *uint64_t v14 = v13;
    }
  }
  unsigned int v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    int v16 = (CoreML::Specification::Tensor **)(*((void *)a2 + 10) + 8);
    uint64_t v17 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkLayer *)((char *)this + 64), *((_DWORD *)a2 + 18));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>((unint64_t *)this + 8, (CoreML::Specification::Tensor **)v17, v16, v15, **((_DWORD **)this + 10) - *((_DWORD *)this + 18));
    signed int v18 = *((_DWORD *)this + 18) + v15;
    *((_DWORD *)this + 18) = v18;
    uint64_t v19 = (signed int *)*((void *)this + 10);
    if (*v19 < v18) {
      *uint64_t v19 = v18;
    }
  }
  unsigned int v20 = *((_DWORD *)a2 + 24);
  if (v20)
  {
    uint64_t v21 = (CoreML::Specification::Tensor **)(*((void *)a2 + 13) + 8);
    uint64_t v22 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkLayer *)((char *)this + 88), *((_DWORD *)a2 + 24));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>((unint64_t *)this + 11, (CoreML::Specification::Tensor **)v22, v21, v20, **((_DWORD **)this + 13) - *((_DWORD *)this + 24));
    signed int v23 = *((_DWORD *)this + 24) + v20;
    *((_DWORD *)this + 24) = v23;
    uint64_t v24 = (signed int *)*((void *)this + 13);
    if (*v24 < v23) {
      *uint64_t v24 = v23;
    }
  }
  uint64_t v25 = *((void *)a2 + 14);
  if (*(char *)(v25 + 23) < 0)
  {
    if (!*(void *)(v25 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v25 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v26 = (uint64_t *)*((void *)this + 14);
  if (v26 != (uint64_t *)v25)
  {
    if (v26 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    std::string::operator=(*((std::string **)this + 14), (const std::string *)v25);
  }
LABEL_23:
  if (*((unsigned char *)a2 + 120)) {
    *((unsigned char *)this + 12CoreML::Specification::Identity::New(this, 0) = 1;
  }
  uint64_t v28 = (_DWORD *)((char *)a2 + 140);
  int v27 = *((_DWORD *)a2 + 35);
  if (v27 > 879)
  {
    if (v27 <= 1139)
    {
      if (v27 <= 994)
      {
        if (v27 <= 939)
        {
          if (v27 <= 904)
          {
            if (v27 <= 889)
            {
              if (v27 == 880)
              {
                v306 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_addbroadcastable(this);
                uint64_t v33 = v306;
                if (*v28 != 880)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v306);
                  uint64_t v34 = &CoreML::Specification::_AddBroadcastableLayerParams_default_instance_;
                  goto LABEL_542;
                }
              }
              else
              {
                if (v27 != 885) {
                  return;
                }
                v107 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_powbroadcastable(this);
                uint64_t v33 = v107;
                if (*v28 != 885)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v107);
                  uint64_t v34 = &CoreML::Specification::_PowBroadcastableLayerParams_default_instance_;
                  goto LABEL_542;
                }
              }
            }
            else
            {
              switch(v27)
              {
                case 890:
                  v176 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_dividebroadcastable(this);
                  uint64_t v33 = v176;
                  if (*v28 != 890)
                  {
                    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v176);
                    uint64_t v34 = &CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                case 895:
                  v177 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_floordivbroadcastable(this);
                  uint64_t v33 = v177;
                  if (*v28 != 895)
                  {
                    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v177);
                    uint64_t v34 = &CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                case 900:
                  uint64_t v32 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_multiplybroadcastable(this);
                  uint64_t v33 = v32;
                  if (*v28 != 900)
                  {
                    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v32);
                    uint64_t v34 = &CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                default:
                  return;
              }
            }
            goto LABEL_541;
          }
          if (v27 <= 924)
          {
            if (v27 == 905)
            {
              int v335 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_subtractbroadcastable(this);
              uint64_t v33 = v335;
              if (*v28 != 905)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v335);
                uint64_t v34 = &CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            }
            if (v27 != 920) {
              return;
            }
            int v137 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_tile(this);
            v138 = (unint64_t *)v137;
            if (*v28 == 920)
            {
              unsigned int v68 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v137);
              unsigned int v68 = &CoreML::Specification::_TileLayerParams_default_instance_;
            }
            int v367 = v138;
            goto LABEL_598;
          }
          switch(v27)
          {
            case 925:
              v250 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_stack(this);
              int v251 = (std::string *)v250;
              if (*v28 == 925)
              {
                uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v250);
                uint64_t v127 = &CoreML::Specification::_StackLayerParams_default_instance_;
              }
              v372 = v251;
              break;
            case 930:
              v252 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gather(this);
              int v253 = (std::string *)v252;
              if (*v28 == 930)
              {
                uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v252);
                uint64_t v127 = &CoreML::Specification::_GatherLayerParams_default_instance_;
              }
              v372 = v253;
              break;
            case 935:
              unsigned int v76 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_scatter(this);
              unint64_t v77 = (std::string *)v76;
              if (*v28 == 935)
              {
                unsigned int v78 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v76);
                unsigned int v78 = &CoreML::Specification::_ScatterLayerParams_default_instance_;
              }
              int v369 = v77;
              goto LABEL_610;
            default:
              return;
          }
LABEL_666:
          CoreML::Specification::SplitLayerParams::MergeFrom(v372, (const CoreML::Specification::SplitLayerParams *)v127);
          return;
        }
        if (v27 <= 959)
        {
          switch(v27)
          {
            case 945:
              unint64_t v56 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_scatternd(this);
              unsigned int v57 = (std::string *)v56;
              if (*v28 == 945)
              {
                unint64_t v58 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v56);
                unint64_t v58 = &CoreML::Specification::_ScatterNDLayerParams_default_instance_;
              }
              v366 = v57;
              goto LABEL_586;
            case 946:
            case 947:
            case 948:
            case 949:
            case 951:
            case 953:
              return;
            case 950:
              v211 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_softmaxnd(this);
              v212 = (std::string *)v211;
              if (*v28 == 950)
              {
                uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v211);
                uint64_t v127 = &CoreML::Specification::_SoftmaxNDLayerParams_default_instance_;
              }
              v372 = v212;
              goto LABEL_666;
            case 952:
              int v213 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gatheralongaxis(this);
              v214 = (std::string *)v213;
              if (*v28 == 952)
              {
                uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v213);
                uint64_t v127 = &CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_;
              }
              v372 = v214;
              goto LABEL_666;
            case 954:
              v215 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_scatteralongaxis(this);
              v216 = (std::string *)v215;
              if (*v28 == 954)
              {
                unsigned int v78 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v215);
                unsigned int v78 = &CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_;
              }
              int v369 = v216;
              goto LABEL_610;
            default:
              if (v27 != 940) {
                return;
              }
              v210 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gathernd(this);
              uint64_t v33 = v210;
              if (*v28 == 940) {
                goto LABEL_541;
              }
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v210);
              uint64_t v34 = &CoreML::Specification::_GatherNDLayerParams_default_instance_;
              break;
          }
          goto LABEL_542;
        }
        if (v27 > 974)
        {
          if (v27 == 975)
          {
            int v277 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_splitnd(this);
            v278 = (unint64_t *)v277;
            if (*v28 == 975)
            {
              int v279 = (const CoreML::Specification::SplitNDLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v277);
              int v279 = (const CoreML::Specification::SplitNDLayerParams *)&CoreML::Specification::_SplitNDLayerParams_default_instance_;
            }
            CoreML::Specification::SplitNDLayerParams::MergeFrom(v278, v279);
            return;
          }
          if (v27 != 980)
          {
            if (v27 != 985) {
              return;
            }
            unint64_t v93 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_transpose(this);
            size_t v94 = (unint64_t *)v93;
            if (*v28 == 985)
            {
              unsigned int v68 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v93);
              unsigned int v68 = &CoreML::Specification::_TransposeLayerParams_default_instance_;
            }
            int v367 = v94;
            goto LABEL_598;
          }
          v280 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_concatnd(this);
          int v281 = (std::string *)v280;
          if (*v28 == 980)
          {
            int v46 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v280);
            int v46 = &CoreML::Specification::_ConcatNDLayerParams_default_instance_;
          }
          v364 = v281;
LABEL_570:
          CoreML::Specification::ConcatNDLayerParams::MergeFrom(v364, (const CoreML::Specification::ConcatNDLayerParams *)v46);
          return;
        }
        if (v27 == 960)
        {
          v350 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reverse(this);
          int v351 = (unint64_t *)v350;
          if (*v28 == 960)
          {
            v352 = (const CoreML::Specification::V5::TensorValue_RepeatedBools *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v350);
            v352 = (const CoreML::Specification::V5::TensorValue_RepeatedBools *)&CoreML::Specification::_ReverseLayerParams_default_instance_;
          }
          CoreML::Specification::V5::TensorValue_RepeatedBools::MergeFrom(v351, v352);
          return;
        }
        if (v27 != 965) {
          return;
        }
        v156 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reverseseq(this);
        int v157 = (std::string *)v156;
        if (*v28 == 965)
        {
          v144 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v156);
          v144 = &CoreML::Specification::_ReverseSeqLayerParams_default_instance_;
        }
        v374 = v157;
LABEL_690:
        CoreML::Specification::ReverseSeqLayerParams::MergeFrom(v374, (const CoreML::Specification::ReverseSeqLayerParams *)v144);
        return;
      }
      if (v27 <= 1079)
      {
        if (v27 > 1024)
        {
          if (v27 > 1044)
          {
            switch(v27)
            {
              case 1045:
                v264 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_batchedmatmul(this);
                int v265 = (std::string *)v264;
                if (*v28 == 1045)
                {
                  v266 = (const CoreML::Specification::BatchedMatMulLayerParams *)*((void *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v264);
                  v266 = (const CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_;
                }
                CoreML::Specification::BatchedMatMulLayerParams::MergeFrom(v265, v266);
                break;
              case 1065:
                int v267 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_getshape(this);
                uint64_t v33 = v267;
                if (*v28 != 1065)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v267);
                  uint64_t v34 = &CoreML::Specification::_GetShapeLayerParams_default_instance_;
                  goto LABEL_542;
                }
                goto LABEL_541;
              case 1070:
                int v84 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_loadconstantnd(this);
                unint64_t v85 = (unint64_t *)v84;
                if (*v28 == 1070)
                {
                  int v86 = (const CoreML::Specification::LoadConstantNDLayerParams *)*((void *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v84);
                  int v86 = (const CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_;
                }
                CoreML::Specification::LoadConstantNDLayerParams::MergeFrom(v85, v86);
                break;
            }
            return;
          }
          if (v27 != 1025)
          {
            if (v27 == 1040)
            {
              v148 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_embeddingnd(this);
              v149 = (std::string *)v148;
              if (*v28 == 1040)
              {
                v150 = (const CoreML::Specification::EmbeddingNDLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v148);
                v150 = (const CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_;
              }
              CoreML::Specification::EmbeddingNDLayerParams::MergeFrom(v149, v150);
            }
            return;
          }
          v342 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_argmax(this);
          int v343 = (std::string *)v342;
          if (*v28 == 1025)
          {
            int v46 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v342);
            int v46 = &CoreML::Specification::_ArgMaxLayerParams_default_instance_;
          }
          v364 = v343;
        }
        else
        {
          if (v27 <= 1004)
          {
            if (v27 == 995)
            {
              int v315 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slicestatic(this);
              v316 = (unint64_t *)v315;
              if (*v28 == 995)
              {
                int v317 = (const CoreML::Specification::SliceStaticLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v315);
                int v317 = (const CoreML::Specification::SliceStaticLayerParams *)&CoreML::Specification::_SliceStaticLayerParams_default_instance_;
              }
              CoreML::Specification::SliceStaticLayerParams::MergeFrom(v316, v317);
            }
            else if (v27 == 1000)
            {
              char v114 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slicedynamic(this);
              int v115 = (unint64_t *)v114;
              if (*v28 == 1000)
              {
                BOOL v116 = (const CoreML::Specification::SliceDynamicLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v114);
                BOOL v116 = (const CoreML::Specification::SliceDynamicLayerParams *)&CoreML::Specification::_SliceDynamicLayerParams_default_instance_;
              }
              CoreML::Specification::SliceDynamicLayerParams::MergeFrom(v115, v116);
            }
            return;
          }
          if (v27 == 1005)
          {
            v187 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slidingwindows(this);
            v188 = (std::string *)v187;
            if (*v28 == 1005)
            {
              v189 = (const CoreML::Specification::SlidingWindowsLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v187);
              v189 = (const CoreML::Specification::SlidingWindowsLayerParams *)&CoreML::Specification::_SlidingWindowsLayerParams_default_instance_;
            }
            CoreML::Specification::SlidingWindowsLayerParams::MergeFrom(v188, v189);
            return;
          }
          if (v27 == 1015)
          {
            v190 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_topk(this);
            int v191 = (std::string *)v190;
            if (*v28 == 1015)
            {
              v192 = (const CoreML::Specification::TopKLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v190);
              v192 = (const CoreML::Specification::TopKLayerParams *)&CoreML::Specification::_TopKLayerParams_default_instance_;
            }
            CoreML::Specification::TopKLayerParams::MergeFrom(v191, v192);
            return;
          }
          if (v27 != 1020) {
            return;
          }
          int v44 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_argmin(this);
          int v45 = (std::string *)v44;
          if (*v28 == 1020)
          {
            int v46 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v44);
            int v46 = &CoreML::Specification::_ArgMinLayerParams_default_instance_;
          }
          v364 = v45;
        }
        goto LABEL_570;
      }
      if (v27 > 1109)
      {
        if (v27 <= 1124)
        {
          if (v27 != 1110)
          {
            if (v27 == 1120)
            {
              v162 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_squeeze(this);
              int v163 = (unint64_t *)v162;
              if (*v28 == 1120)
              {
                v164 = (const CoreML::Specification::SqueezeLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v162);
                v164 = (const CoreML::Specification::SqueezeLayerParams *)&CoreML::Specification::_SqueezeLayerParams_default_instance_;
              }
              CoreML::Specification::SqueezeLayerParams::MergeFrom(v163, v164);
            }
            return;
          }
          int v357 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttodynamic(this);
          uint64_t v33 = v357;
          if (*v28 != 1110)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v357);
            uint64_t v34 = &CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_;
LABEL_542:
            uint64_t v358 = v34[1];
            if (v358)
            {
              _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)v33 + 1, v358 & 0xFFFFFFFFFFFFFFFELL);
            }
            return;
          }
          goto LABEL_541;
        }
        if (v27 == 1125)
        {
          v290 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_expanddims(this);
          int v291 = (unint64_t *)v290;
          if (*v28 == 1125)
          {
            unsigned int v68 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v290);
            unsigned int v68 = &CoreML::Specification::_ExpandDimsLayerParams_default_instance_;
          }
          int v367 = v291;
          goto LABEL_598;
        }
        if (v27 != 1130)
        {
          if (v27 != 1135) {
            return;
          }
          int v97 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reshapelike(this);
          uint64_t v33 = v97;
          if (*v28 != 1135)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v97);
            uint64_t v34 = &CoreML::Specification::_ReshapeLikeLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        v292 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_flattento2d(this);
        int v293 = (std::string *)v292;
        if (*v28 == 1130)
        {
          uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v292);
          uint64_t v127 = &CoreML::Specification::_FlattenTo2DLayerParams_default_instance_;
        }
        v372 = v293;
        goto LABEL_666;
      }
      if (v27 <= 1089)
      {
        if (v27 == 1080)
        {
          int v327 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_filllike(this);
          v328 = (std::string *)v327;
          if (*v28 == 1080)
          {
            unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v327);
            unsigned int v49 = &CoreML::Specification::_FillLikeLayerParams_default_instance_;
          }
          int v365 = v328;
          goto LABEL_574;
        }
        if (v27 == 1085)
        {
          int v128 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_fillstatic(this);
          v129 = (unint64_t *)v128;
          if (*v28 == 1085)
          {
            v130 = (const CoreML::Specification::FillStaticLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v128);
            v130 = (const CoreML::Specification::FillStaticLayerParams *)&CoreML::Specification::_FillStaticLayerParams_default_instance_;
          }
          CoreML::Specification::FillStaticLayerParams::MergeFrom(v129, v130);
        }
        return;
      }
      if (v27 == 1090)
      {
        v238 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_filldynamic(this);
        v239 = (std::string *)v238;
        if (*v28 == 1090)
        {
          unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v238);
          unsigned int v49 = &CoreML::Specification::_FillDynamicLayerParams_default_instance_;
        }
        int v365 = v239;
        goto LABEL_574;
      }
      if (v27 == 1100)
      {
        v240 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttolike(this);
        uint64_t v33 = v240;
        if (*v28 != 1100)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v240);
          uint64_t v34 = &CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_;
          goto LABEL_542;
        }
        goto LABEL_541;
      }
      if (v27 != 1105) {
        return;
      }
      unsigned int v66 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttostatic(this);
      unint64_t v67 = (unint64_t *)v66;
      if (*v28 == 1105)
      {
        unsigned int v68 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v66);
        unsigned int v68 = &CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_;
      }
      int v367 = v67;
LABEL_598:
      CoreML::Specification::GLMRegressor_DoubleArray::MergeFrom(v367, (const CoreML::Specification::GLMRegressor_DoubleArray *)v68);
      return;
    }
    if (v27 > 1274)
    {
      if (v27 > 1349)
      {
        if (v27 <= 1454)
        {
          switch(v27)
          {
            case 1350:
              int v297 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_layernormalization(this);
              v298 = (unint64_t *)v297;
              if (*v28 == 1350)
              {
                int v299 = (const CoreML::Specification::LayerNormalizationLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v297);
                int v299 = (const CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_;
              }
              CoreML::Specification::LayerNormalizationLayerParams::MergeFrom(v298, v299);
              break;
            case 1400:
              v300 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_nonmaximumsuppression(this);
              int v301 = (std::string *)v300;
              if (*v28 == 1400)
              {
                v302 = (const CoreML::Specification::NonMaximumSuppressionLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v300);
                v302 = (const CoreML::Specification::NonMaximumSuppressionLayerParams *)&CoreML::Specification::_NonMaximumSuppressionLayerParams_default_instance_;
              }
              CoreML::Specification::NonMaximumSuppressionLayerParams::MergeFrom(v301, v302);
              break;
            case 1450:
              int v101 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_onehot(this);
              v102 = (std::string *)v101;
              if (*v28 == 1450)
              {
                v103 = (const CoreML::Specification::OneHotLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v101);
                v103 = (const CoreML::Specification::OneHotLayerParams *)&CoreML::Specification::_OneHotLayerParams_default_instance_;
              }
              CoreML::Specification::OneHotLayerParams::MergeFrom(v102, v103);
              break;
          }
        }
        else
        {
          switch(v27)
          {
            case 1455:
              size_t v60 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_cumsum(this);
              int v61 = (std::string *)v60;
              if (*v28 == 1455)
              {
                unint64_t v62 = (const CoreML::Specification::CumSumLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v60);
                unint64_t v62 = (const CoreML::Specification::CumSumLayerParams *)&CoreML::Specification::_CumSumLayerParams_default_instance_;
              }
              CoreML::Specification::CumSumLayerParams::MergeFrom(v61, v62);
              break;
            case 1460:
              v219 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_clampedrelu(this);
              v220 = (std::string *)v219;
              if (*v28 == 1460)
              {
                v141 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v219);
                v141 = &CoreML::Specification::_ClampedReLULayerParams_default_instance_;
              }
              int v373 = v220;
              goto LABEL_686;
            case 1461:
              v221 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_argsort(this);
              int v222 = (std::string *)v221;
              if (*v28 == 1461)
              {
                int v46 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v221);
                int v46 = &CoreML::Specification::_ArgSortLayerParams_default_instance_;
              }
              v364 = v222;
              goto LABEL_570;
            case 1465:
              v223 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_pooling3d(this);
              v224 = (std::string *)v223;
              if (*v28 == 1465)
              {
                v225 = (const CoreML::Specification::Pooling3DLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v223);
                v225 = (const CoreML::Specification::Pooling3DLayerParams *)&CoreML::Specification::_Pooling3DLayerParams_default_instance_;
              }
              CoreML::Specification::Pooling3DLayerParams::MergeFrom(v224, v225);
              break;
            case 1466:
              v226 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_globalpooling3d(this);
              v227 = (std::string *)v226;
              if (*v28 == 1466)
              {
                unint64_t v58 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v226);
                unint64_t v58 = &CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_;
              }
              v366 = v227;
              goto LABEL_586;
            case 1470:
              v228 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slicebysize(this);
              int v229 = (std::string *)v228;
              if (*v28 == 1470)
              {
                v144 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v228);
                v144 = &CoreML::Specification::_SliceBySizeLayerParams_default_instance_;
              }
              v374 = v229;
              goto LABEL_690;
            case 1471:
              v230 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_convolution3d(this);
              v231 = (unint64_t *)v230;
              if (*v28 == 1471)
              {
                int v232 = (const CoreML::Specification::Convolution3DLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v230);
                int v232 = (const CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_;
              }
              CoreML::Specification::Convolution3DLayerParams::MergeFrom(v231, v232);
              break;
            default:
              return;
          }
        }
        return;
      }
      if (v27 > 1312)
      {
        if (v27 > 1319)
        {
          switch(v27)
          {
            case 1320:
              v256 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_lowertriangular(this);
              int v257 = (std::string *)v256;
              if (*v28 == 1320)
              {
                uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v256);
                uint64_t v127 = &CoreML::Specification::_LowerTriangularLayerParams_default_instance_;
              }
              v372 = v257;
              break;
            case 1325:
              v258 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_uppertriangular(this);
              int v259 = (std::string *)v258;
              if (*v28 == 1325)
              {
                uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v258);
                uint64_t v127 = &CoreML::Specification::_UpperTriangularLayerParams_default_instance_;
              }
              v372 = v259;
              break;
            case 1330:
              std::string::size_type v80 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_wherebroadcastable(this);
              uint64_t v33 = v80;
              if (*v28 != 1330)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v80);
                uint64_t v34 = &CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            default:
              return;
          }
          goto LABEL_666;
        }
        if (v27 == 1313)
        {
          v338 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_wherenonzero(this);
          uint64_t v33 = v338;
          if (*v28 != 1313)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v338);
            uint64_t v34 = &CoreML::Specification::_WhereNonZeroLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        if (v27 != 1315) {
          return;
        }
        v142 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_matrixbandpart(this);
        int v143 = (std::string *)v142;
        if (*v28 == 1315)
        {
          v144 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v142);
          v144 = &CoreML::Specification::_MatrixBandPartLayerParams_default_instance_;
        }
        v374 = v143;
        goto LABEL_690;
      }
      if (v27 <= 1284)
      {
        if (v27 == 1275)
        {
          v310 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reduceprod(this);
          int v311 = (unint64_t *)v310;
          if (*v28 == 1275)
          {
            uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v310);
            uint64_t v40 = &CoreML::Specification::_ReduceProdLayerParams_default_instance_;
          }
          int v363 = v311;
        }
        else
        {
          if (v27 != 1280) {
            return;
          }
          v111 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducemean(this);
          uint64_t v112 = (unint64_t *)v111;
          if (*v28 == 1280)
          {
            uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v111);
            uint64_t v40 = &CoreML::Specification::_ReduceMeanLayerParams_default_instance_;
          }
          int v363 = v112;
        }
      }
      else
      {
        switch(v27)
        {
          case 1285:
            int v180 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsum(this);
            v181 = (unint64_t *)v180;
            if (*v28 == 1285)
            {
              uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v180);
              uint64_t v40 = &CoreML::Specification::_ReduceLogSumLayerParams_default_instance_;
            }
            int v363 = v181;
            break;
          case 1290:
            v182 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducesumsquare(this);
            v183 = (unint64_t *)v182;
            if (*v28 == 1290)
            {
              uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v182);
              uint64_t v40 = &CoreML::Specification::_ReduceSumSquareLayerParams_default_instance_;
            }
            int v363 = v183;
            break;
          case 1295:
            BOOL v38 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsumexp(this);
            uint64_t v39 = (unint64_t *)v38;
            if (*v28 == 1295)
            {
              uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v38);
              uint64_t v40 = &CoreML::Specification::_ReduceLogSumExpLayerParams_default_instance_;
            }
            int v363 = v39;
            break;
          default:
            return;
        }
      }
LABEL_562:
      CoreML::Specification::ReduceL1LayerParams::MergeFrom(v363, (const CoreML::Specification::ReduceL1LayerParams *)v40);
      return;
    }
    if (v27 > 1199)
    {
      if (v27 > 1249)
      {
        if (v27 <= 1259)
        {
          if (v27 == 1250)
          {
            int v345 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducel1(this);
            v346 = (unint64_t *)v345;
            if (*v28 == 1250)
            {
              uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v345);
              uint64_t v40 = &CoreML::Specification::_ReduceL1LayerParams_default_instance_;
            }
            int v363 = v346;
          }
          else
          {
            if (v27 != 1255) {
              return;
            }
            v152 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducel2(this);
            v153 = (unint64_t *)v152;
            if (*v28 == 1255)
            {
              uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v152);
              uint64_t v40 = &CoreML::Specification::_ReduceL2LayerParams_default_instance_;
            }
            int v363 = v153;
          }
        }
        else
        {
          switch(v27)
          {
            case 1260:
              v270 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducemax(this);
              int v271 = (unint64_t *)v270;
              if (*v28 == 1260)
              {
                uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v270);
                uint64_t v40 = &CoreML::Specification::_ReduceMaxLayerParams_default_instance_;
              }
              int v363 = v271;
              break;
            case 1265:
              v272 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducemin(this);
              int v273 = (unint64_t *)v272;
              if (*v28 == 1265)
              {
                uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v272);
                uint64_t v40 = &CoreML::Specification::_ReduceMinLayerParams_default_instance_;
              }
              int v363 = v273;
              break;
            case 1270:
              int v88 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducesum(this);
              std::vector<std::string>::pointer v89 = (unint64_t *)v88;
              if (*v28 == 1270)
              {
                uint64_t v40 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v88);
                uint64_t v40 = &CoreML::Specification::_ReduceSumLayerParams_default_instance_;
              }
              int v363 = v89;
              break;
            default:
              return;
          }
        }
        goto LABEL_562;
      }
      if (v27 > 1214)
      {
        if (v27 == 1215)
        {
          v199 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullistatic(this);
          int v200 = (unint64_t *)v199;
          if (*v28 == 1215)
          {
            v201 = (const CoreML::Specification::RandomBernoulliStaticLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v199);
            v201 = (const CoreML::Specification::RandomBernoulliStaticLayerParams *)&CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_;
          }
          CoreML::Specification::RandomBernoulliStaticLayerParams::MergeFrom(v200, v201);
          return;
        }
        if (v27 != 1220)
        {
          if (v27 == 1230)
          {
            int v50 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_categoricaldistribution(this);
            uint64_t v51 = (std::string *)v50;
            if (*v28 == 1230)
            {
              unint64_t v52 = (const CoreML::Specification::CategoricalDistributionLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v50);
              unint64_t v52 = (const CoreML::Specification::CategoricalDistributionLayerParams *)&CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_;
            }
            CoreML::Specification::CategoricalDistributionLayerParams::MergeFrom(v51, v52);
          }
          return;
        }
        v202 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullidynamic(this);
        v203 = (std::string *)v202;
        if (*v28 == 1220)
        {
          uint64_t v120 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v202);
          uint64_t v120 = &CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_;
        }
        int v371 = v203;
LABEL_658:
        CoreML::Specification::RandomBernoulliLikeLayerParams::MergeFrom(v371, (const CoreML::Specification::RandomBernoulliLikeLayerParams *)v120);
        return;
      }
      if (v27 != 1200)
      {
        if (v27 != 1210) {
          return;
        }
        unint64_t v118 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullilike(this);
        uint64_t v119 = (std::string *)v118;
        if (*v28 == 1210)
        {
          uint64_t v120 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v118);
          uint64_t v120 = &CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_;
        }
        int v371 = v119;
        goto LABEL_658;
      }
      int v319 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformdynamic(this);
      v320 = (std::string *)v319;
      if (*v28 == 1200)
      {
        int v243 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v319);
        int v243 = &CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_;
      }
      int v375 = v320;
LABEL_834:
      CoreML::Specification::RandomNormalLikeLayerParams::MergeFrom(v375, (const CoreML::Specification::RandomNormalLikeLayerParams *)v243);
      return;
    }
    if (v27 <= 1169)
    {
      if (v27 > 1149)
      {
        if (v27 != 1150)
        {
          if (v27 == 1155)
          {
            int v165 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_constantpad(this);
            v166 = (unint64_t *)v165;
            if (*v28 == 1155)
            {
              v167 = (const CoreML::Specification::ConstantPaddingLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v165);
              v167 = (const CoreML::Specification::ConstantPaddingLayerParams *)&CoreML::Specification::_ConstantPaddingLayerParams_default_instance_;
            }
            CoreML::Specification::ConstantPaddingLayerParams::MergeFrom(v166, v167);
          }
          return;
        }
        int v359 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_rankpreservingreshape(this);
        v360 = (unint64_t *)v359;
        if (*v28 == 1150)
        {
          unsigned int v68 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v359);
          unsigned int v68 = &CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_;
        }
        int v367 = v360;
      }
      else
      {
        if (v27 != 1140)
        {
          if (v27 != 1145) {
            return;
          }
          BOOL v98 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reshapedynamic(this);
          uint64_t v33 = v98;
          if (*v28 != 1145)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v98);
            uint64_t v34 = &CoreML::Specification::_ReshapeDynamicLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        v294 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reshapestatic(this);
        int v295 = (unint64_t *)v294;
        if (*v28 == 1140)
        {
          unsigned int v68 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v294);
          unsigned int v68 = &CoreML::Specification::_ReshapeStaticLayerParams_default_instance_;
        }
        int v367 = v295;
      }
      goto LABEL_598;
    }
    if (v27 <= 1179)
    {
      if (v27 == 1170)
      {
        int v329 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomnormallike(this);
        v330 = (std::string *)v329;
        if (*v28 == 1170)
        {
          int v243 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v329);
          int v243 = &CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_;
        }
        int v375 = v330;
        goto LABEL_834;
      }
      if (v27 != 1175) {
        return;
      }
      int v131 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomnormalstatic(this);
      v132 = (unint64_t *)v131;
      if (*v28 == 1175)
      {
        int v71 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v131);
        int v71 = &CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_;
      }
      v368 = v132;
    }
    else
    {
      if (v27 == 1180)
      {
        unint64_t v241 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomnormaldynamic(this);
        unsigned int v242 = (std::string *)v241;
        if (*v28 == 1180)
        {
          int v243 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v241);
          int v243 = &CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_;
        }
        int v375 = v242;
        goto LABEL_834;
      }
      if (v27 == 1190)
      {
        v244 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformlike(this);
        int v245 = (std::string *)v244;
        if (*v28 == 1190)
        {
          int v243 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v244);
          int v243 = &CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_;
        }
        int v375 = v245;
        goto LABEL_834;
      }
      if (v27 != 1195) {
        return;
      }
      int v69 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformstatic(this);
      unsigned int v70 = (unint64_t *)v69;
      if (*v28 == 1195)
      {
        int v71 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v69);
        int v71 = &CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_;
      }
      v368 = v70;
    }
    CoreML::Specification::RandomNormalStaticLayerParams::MergeFrom(v368, (const CoreML::Specification::RandomNormalStaticLayerParams *)v71);
    return;
  }
  if (v27 > 604)
  {
    if (v27 <= 759)
    {
      if (v27 > 684)
      {
        if (v27 > 729)
        {
          if (v27 <= 739)
          {
            if (v27 == 730)
            {
              int v353 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_asin(this);
              uint64_t v33 = v353;
              if (*v28 != 730)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v353);
                uint64_t v34 = &CoreML::Specification::_AsinLayerParams_default_instance_;
                goto LABEL_542;
              }
            }
            else
            {
              if (v27 != 735) {
                return;
              }
              v158 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_acos(this);
              uint64_t v33 = v158;
              if (*v28 != 735)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v158);
                uint64_t v34 = &CoreML::Specification::_AcosLayerParams_default_instance_;
                goto LABEL_542;
              }
            }
          }
          else
          {
            switch(v27)
            {
              case 740:
                v282 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_atan(this);
                uint64_t v33 = v282;
                if (*v28 != 740)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v282);
                  uint64_t v34 = &CoreML::Specification::_AtanLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              case 750:
                int v283 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_sinh(this);
                uint64_t v33 = v283;
                if (*v28 != 750)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v283);
                  uint64_t v34 = &CoreML::Specification::_SinhLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              case 755:
                v95 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_cosh(this);
                uint64_t v33 = v95;
                if (*v28 != 755)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v95);
                  uint64_t v34 = &CoreML::Specification::_CoshLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              default:
                return;
            }
          }
        }
        else if (v27 <= 709)
        {
          if (v27 == 685)
          {
            v324 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_round(this);
            uint64_t v33 = v324;
            if (*v28 != 685)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v324);
              uint64_t v34 = &CoreML::Specification::_RoundLayerParams_default_instance_;
              goto LABEL_542;
            }
          }
          else
          {
            if (v27 != 700) {
              return;
            }
            int v124 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_exp2(this);
            uint64_t v33 = v124;
            if (*v28 != 700)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v124);
              uint64_t v34 = &CoreML::Specification::_Exp2LayerParams_default_instance_;
              goto LABEL_542;
            }
          }
        }
        else
        {
          switch(v27)
          {
            case 710:
              int v217 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_sin(this);
              uint64_t v33 = v217;
              if (*v28 != 710)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v217);
                uint64_t v34 = &CoreML::Specification::_SinLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            case 715:
              v218 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_cos(this);
              uint64_t v33 = v218;
              if (*v28 != 715)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v218);
                uint64_t v34 = &CoreML::Specification::_CosLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            case 720:
              int v59 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_tan(this);
              uint64_t v33 = v59;
              if (*v28 != 720)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v59);
                uint64_t v34 = &CoreML::Specification::_TanLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            default:
              return;
          }
        }
        goto LABEL_541;
      }
      if (v27 > 639)
      {
        if (v27 <= 664)
        {
          if (v27 == 640)
          {
            v336 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_rangedynamic(this);
            int v337 = (std::string *)v336;
            if (*v28 == 640)
            {
              v141 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v336);
              v141 = &CoreML::Specification::_RangeDynamicLayerParams_default_instance_;
            }
            int v373 = v337;
          }
          else
          {
            if (v27 != 660) {
              return;
            }
            v139 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_clip(this);
            int v140 = (std::string *)v139;
            if (*v28 == 660)
            {
              v141 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v139);
              v141 = &CoreML::Specification::_ClipLayerParams_default_instance_;
            }
            int v373 = v140;
          }
LABEL_686:
          CoreML::Specification::ActivationScaledTanh::MergeFrom(v373, (const CoreML::Specification::ActivationScaledTanh *)v141);
          return;
        }
        switch(v27)
        {
          case 665:
            v254 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_ceil(this);
            uint64_t v33 = v254;
            if (*v28 != 665)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v254);
              uint64_t v34 = &CoreML::Specification::_CeilLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 670:
            int v255 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_floor(this);
            uint64_t v33 = v255;
            if (*v28 != 670)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v255);
              uint64_t v34 = &CoreML::Specification::_FloorLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 680:
            v79 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_sign(this);
            uint64_t v33 = v79;
            if (*v28 != 680)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v79);
              uint64_t v34 = &CoreML::Specification::_SignLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          default:
            return;
        }
        goto LABEL_541;
      }
      if (v27 <= 619)
      {
        if (v27 == 605)
        {
          int v307 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_branch(this);
          v308 = (std::string *)v307;
          if (*v28 == 605)
          {
            int v309 = (const CoreML::Specification::BranchLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v307);
            int v309 = (const CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_;
          }
          CoreML::Specification::BranchLayerParams::MergeFrom(v308, v309);
        }
        else if (v27 == 615)
        {
          std::ctype_base::mask v108 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_loop(this);
          uint64_t v109 = (std::string *)v108;
          if (*v28 == 615)
          {
            int v110 = (const CoreML::Specification::LoopLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v108);
            int v110 = (const CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_;
          }
          CoreML::Specification::LoopLayerParams::MergeFrom(v109, v110);
        }
        return;
      }
      if (v27 == 620)
      {
        int v178 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_loopbreak(this);
        uint64_t v33 = v178;
        if (*v28 != 620)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v178);
          uint64_t v34 = &CoreML::Specification::_LoopBreakLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      else
      {
        if (v27 != 625)
        {
          if (v27 == 635)
          {
            uint64_t v35 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_rangestatic(this);
            unint64_t v36 = (std::string *)v35;
            if (*v28 == 635)
            {
              uint64_t v37 = (const CoreML::Specification::RangeStaticLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v35);
              uint64_t v37 = (const CoreML::Specification::RangeStaticLayerParams *)&CoreML::Specification::_RangeStaticLayerParams_default_instance_;
            }
            CoreML::Specification::RangeStaticLayerParams::MergeFrom(v36, v37);
          }
          return;
        }
        v179 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_loopcontinue(this);
        uint64_t v33 = v179;
        if (*v28 != 625)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v179);
          uint64_t v34 = &CoreML::Specification::_LoopContinueLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      goto LABEL_541;
    }
    if (v27 > 824)
    {
      if (v27 <= 849)
      {
        switch(v27)
        {
          case 825:
            int v47 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_lessthan(this);
            unint64_t v48 = (std::string *)v47;
            if (*v28 == 825)
            {
              unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v47);
              unsigned int v49 = &CoreML::Specification::_LessThanLayerParams_default_instance_;
            }
            int v365 = v48;
            goto LABEL_574;
          case 826:
          case 828:
          case 829:
          case 831:
            return;
          case 827:
            v193 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_lessequal(this);
            v194 = (std::string *)v193;
            if (*v28 == 827)
            {
              unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v193);
              unsigned int v49 = &CoreML::Specification::_LessEqualLayerParams_default_instance_;
            }
            int v365 = v194;
            goto LABEL_574;
          case 830:
            int v195 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_greaterthan(this);
            v196 = (std::string *)v195;
            if (*v28 == 830)
            {
              unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v195);
              unsigned int v49 = &CoreML::Specification::_GreaterThanLayerParams_default_instance_;
            }
            int v365 = v196;
            goto LABEL_574;
          case 832:
            v197 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_greaterequal(this);
            int v198 = (std::string *)v197;
            if (*v28 == 832)
            {
              unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v197);
              unsigned int v49 = &CoreML::Specification::_GreaterEqualLayerParams_default_instance_;
            }
            int v365 = v198;
            goto LABEL_574;
          default:
            if (v27 != 840)
            {
              if (v27 != 845) {
                return;
              }
              BOOL v117 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_logicalxor(this);
              uint64_t v33 = v117;
              if (*v28 != 845)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v117);
                uint64_t v34 = &CoreML::Specification::_LogicalXorLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            }
            v318 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_logicalor(this);
            uint64_t v33 = v318;
            if (*v28 == 840) {
              goto LABEL_541;
            }
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v318);
            uint64_t v34 = &CoreML::Specification::_LogicalOrLayerParams_default_instance_;
            break;
        }
        goto LABEL_542;
      }
      if (v27 <= 864)
      {
        if (v27 == 850)
        {
          v344 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_logicalnot(this);
          uint64_t v33 = v344;
          if (*v28 != 850)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v344);
            uint64_t v34 = &CoreML::Specification::_LogicalNotLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 855) {
            return;
          }
          v151 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_logicaland(this);
          uint64_t v33 = v151;
          if (*v28 != 855)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v151);
            uint64_t v34 = &CoreML::Specification::_LogicalAndLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
      }
      else
      {
        switch(v27)
        {
          case 865:
            v268 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_modbroadcastable(this);
            uint64_t v33 = v268;
            if (*v28 != 865)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v268);
              uint64_t v34 = &CoreML::Specification::_ModBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 870:
            int v269 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_minbroadcastable(this);
            uint64_t v33 = v269;
            if (*v28 != 870)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v269);
              uint64_t v34 = &CoreML::Specification::_MinBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 875:
            int v87 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_maxbroadcastable(this);
            uint64_t v33 = v87;
            if (*v28 != 875)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v87);
              uint64_t v34 = &CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          default:
            return;
        }
      }
      goto LABEL_541;
    }
    if (v27 <= 789)
    {
      if (v27 > 774)
      {
        if (v27 == 775)
        {
          int v331 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_acosh(this);
          uint64_t v33 = v331;
          if (*v28 != 775)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v331);
            uint64_t v34 = &CoreML::Specification::_AcoshLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 780) {
            return;
          }
          v133 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_atanh(this);
          uint64_t v33 = v133;
          if (*v28 != 780)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v133);
            uint64_t v34 = &CoreML::Specification::_AtanhLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
      }
      else if (v27 == 760)
      {
        v246 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_tanh(this);
        uint64_t v33 = v246;
        if (*v28 != 760)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v246);
          uint64_t v34 = &CoreML::Specification::_TanhLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      else
      {
        if (v27 != 770) {
          return;
        }
        unsigned int v72 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_asinh(this);
        uint64_t v33 = v72;
        if (*v28 != 770)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v72);
          uint64_t v34 = &CoreML::Specification::_AsinhLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      goto LABEL_541;
    }
    if (v27 > 814)
    {
      if (v27 == 815)
      {
        int v361 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_equal(this);
        v362 = (std::string *)v361;
        if (*v28 == 815)
        {
          unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v361);
          unsigned int v49 = &CoreML::Specification::_EqualLayerParams_default_instance_;
        }
        int v365 = v362;
      }
      else
      {
        if (v27 != 820) {
          return;
        }
        v168 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_notequal(this);
        v169 = (std::string *)v168;
        if (*v28 == 820)
        {
          unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v168);
          unsigned int v49 = &CoreML::Specification::_NotEqualLayerParams_default_instance_;
        }
        int v365 = v169;
      }
      goto LABEL_574;
    }
    if (v27 == 790)
    {
      v296 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_erf(this);
      uint64_t v33 = v296;
      if (*v28 != 790)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v296);
        uint64_t v34 = &CoreML::Specification::_ErfLayerParams_default_instance_;
        goto LABEL_542;
      }
      goto LABEL_541;
    }
    if (v27 != 795) {
      return;
    }
    int v99 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gelu(this);
    std::string::size_type v100 = (std::string *)v99;
    if (*v28 == 795)
    {
      unint64_t v58 = (uint64_t *)*((void *)a2 + 16);
    }
    else
    {
      CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v99);
      unint64_t v58 = &CoreML::Specification::_GeluLayerParams_default_instance_;
    }
    v366 = v100;
    goto LABEL_586;
  }
  if (v27 > 249)
  {
    if (v27 <= 329)
    {
      if (v27 <= 289)
      {
        if (v27 <= 260)
        {
          if (v27 == 250)
          {
            v312 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_bias(this);
            int v313 = (unint64_t *)v312;
            if (*v28 == 250)
            {
              v314 = (const CoreML::Specification::BiasLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v312);
              v314 = (const CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_;
            }
            CoreML::Specification::BiasLayerParams::MergeFrom(v313, v314);
            return;
          }
          if (v27 != 260) {
            return;
          }
          char v113 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_max(this);
          uint64_t v33 = v113;
          if (*v28 != 260)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v113);
            uint64_t v34 = &CoreML::Specification::_MaxLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 261)
          {
            if (v27 != 270)
            {
              if (v27 == 280)
              {
                uint64_t v41 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reduce(this);
                uint64_t v42 = (std::string *)v41;
                if (*v28 == 280)
                {
                  int v43 = (const CoreML::Specification::ReduceLayerParams *)*((void *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v41);
                  int v43 = (const CoreML::Specification::ReduceLayerParams *)&CoreML::Specification::_ReduceLayerParams_default_instance_;
                }
                CoreML::Specification::ReduceLayerParams::MergeFrom(v42, v43);
              }
              return;
            }
            v185 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_dot(this);
            int v186 = (std::string *)v185;
            if (*v28 == 270)
            {
              v83 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v185);
              v83 = &CoreML::Specification::_DotProductLayerParams_default_instance_;
            }
            v370 = v186;
LABEL_614:
            CoreML::Specification::DotProductLayerParams::MergeFrom(v370, (const CoreML::Specification::DotProductLayerParams *)v83);
            return;
          }
          v184 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_min(this);
          uint64_t v33 = v184;
          if (*v28 != 261)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v184);
            uint64_t v34 = &CoreML::Specification::_MinLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
LABEL_541:
        uint64_t v34 = (uint64_t *)*((void *)a2 + 16);
        goto LABEL_542;
      }
      if (v27 <= 300)
      {
        if (v27 == 290)
        {
          int v339 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_loadconstant(this);
          v340 = (unint64_t *)v339;
          if (*v28 == 290)
          {
            int v341 = (const CoreML::Specification::LoadConstantLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v339);
            int v341 = (const CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_;
          }
          CoreML::Specification::LoadConstantLayerParams::MergeFrom(v340, v341);
        }
        else if (v27 == 300)
        {
          v145 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reshape(this);
          v146 = (unint64_t *)v145;
          if (*v28 == 300)
          {
            v147 = (const CoreML::Specification::Tensor *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v145);
            v147 = (const CoreML::Specification::Tensor *)&CoreML::Specification::_ReshapeLayerParams_default_instance_;
          }
          CoreML::Specification::Tensor::MergeFrom(v146, v147);
        }
        return;
      }
      if (v27 != 301)
      {
        if (v27 != 310)
        {
          if (v27 != 320) {
            return;
          }
          int v81 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_concat(this);
          v82 = (std::string *)v81;
          if (*v28 == 320)
          {
            v83 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v81);
            v83 = &CoreML::Specification::_ConcatLayerParams_default_instance_;
          }
          v370 = v82;
          goto LABEL_614;
        }
        v262 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_permute(this);
        int v263 = (unint64_t *)v262;
        if (*v28 == 310)
        {
          unsigned int v68 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v262);
          unsigned int v68 = &CoreML::Specification::_PermuteLayerParams_default_instance_;
        }
        int v367 = v263;
        goto LABEL_598;
      }
      v260 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_flatten(this);
      int v261 = (std::string *)v260;
      if (*v28 == 301)
      {
        unint64_t v58 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v260);
        unint64_t v58 = &CoreML::Specification::_FlattenLayerParams_default_instance_;
      }
      v366 = v261;
LABEL_586:
      CoreML::Specification::FlattenLayerParams::MergeFrom(v366, (const CoreML::Specification::FlattenLayerParams *)v58);
      return;
    }
    if (v27 > 409)
    {
      if (v27 <= 429)
      {
        if (v27 == 410)
        {
          v354 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gru(this);
          int v355 = (std::string *)v354;
          if (*v28 == 410)
          {
            v356 = (const CoreML::Specification::GRULayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v354);
            v356 = (const CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_;
          }
          CoreML::Specification::GRULayerParams::MergeFrom(v355, v356);
        }
        else if (v27 == 420)
        {
          int v159 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_unidirectionallstm(this);
          v160 = (std::string *)v159;
          if (*v28 == 420)
          {
            int v161 = (const CoreML::Specification::UniDirectionalLSTMLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v159);
            int v161 = (const CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_;
          }
          CoreML::Specification::UniDirectionalLSTMLayerParams::MergeFrom(v160, v161);
        }
        return;
      }
      if (v27 == 430)
      {
        v284 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_bidirectionallstm(this);
        int v285 = (std::string *)v284;
        if (*v28 == 430)
        {
          v286 = (const CoreML::Specification::BiDirectionalLSTMLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v284);
          v286 = (const CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_;
        }
        CoreML::Specification::BiDirectionalLSTMLayerParams::MergeFrom(v285, v286);
        return;
      }
      if (v27 == 500)
      {
        int v287 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_custom(this);
        v288 = v287;
        if (*v28 == 500)
        {
          int v289 = (const CoreML::Specification::CustomLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v287);
          int v289 = (const CoreML::Specification::CustomLayerParams *)&CoreML::Specification::_CustomLayerParams_default_instance_;
        }
        CoreML::Specification::CustomLayerParams::MergeFrom(v288, v289);
        return;
      }
      if (v27 != 600) {
        return;
      }
      size_t v96 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_copy(this);
      uint64_t v33 = v96;
      if (*v28 != 600)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v96);
        uint64_t v34 = &CoreML::Specification::_CopyLayerParams_default_instance_;
        goto LABEL_542;
      }
      goto LABEL_541;
    }
    if (v27 > 344)
    {
      if (v27 != 345)
      {
        if (v27 == 350)
        {
          v235 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slice(this);
          v236 = (std::string *)v235;
          if (*v28 == 350)
          {
            v237 = (const CoreML::Specification::SliceLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v235);
            v237 = (const CoreML::Specification::SliceLayerParams *)&CoreML::Specification::_SliceLayerParams_default_instance_;
          }
          CoreML::Specification::SliceLayerParams::MergeFrom(v236, v237);
        }
        else if (v27 == 400)
        {
          unsigned int v63 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_simplerecurrent(this);
          int v64 = (std::string *)v63;
          if (*v28 == 400)
          {
            unint64_t v65 = (const CoreML::Specification::SimpleRecurrentLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v63);
            unint64_t v65 = (const CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_;
          }
          CoreML::Specification::SimpleRecurrentLayerParams::MergeFrom(v64, v65);
        }
        return;
      }
      v233 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reorganizedata(this);
      v234 = (std::string *)v233;
      if (*v28 == 345)
      {
        unsigned int v78 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v233);
        unsigned int v78 = &CoreML::Specification::_ReorganizeDataLayerParams_default_instance_;
      }
      int v369 = v234;
LABEL_610:
      CoreML::Specification::ReorganizeDataLayerParams::MergeFrom(v369, (const CoreML::Specification::ReorganizeDataLayerParams *)v78);
      return;
    }
    if (v27 == 330)
    {
      int v325 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_split(this);
      v326 = (std::string *)v325;
      if (*v28 == 330)
      {
        uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v325);
        uint64_t v127 = &CoreML::Specification::_SplitLayerParams_default_instance_;
      }
      v372 = v326;
    }
    else
    {
      if (v27 != 340) {
        return;
      }
      unsigned __int8 v125 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_sequencerepeat(this);
      int v126 = (std::string *)v125;
      if (*v28 == 340)
      {
        uint64_t v127 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v125);
        uint64_t v127 = &CoreML::Specification::_SequenceRepeatLayerParams_default_instance_;
      }
      v372 = v126;
    }
    goto LABEL_666;
  }
  if (v27 > 189)
  {
    if (v27 > 219)
    {
      if (v27 <= 230)
      {
        if (v27 != 220)
        {
          if (v27 != 230) {
            return;
          }
          v154 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_add(this);
          v155 = (std::string *)v154;
          if (*v28 == 230)
          {
            unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v154);
            unsigned int v49 = &CoreML::Specification::_AddLayerParams_default_instance_;
          }
          int v365 = v155;
          goto LABEL_574;
        }
        int v347 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_unary(this);
        v348 = (std::string *)v347;
        if (*v28 == 220)
        {
          int v349 = (const CoreML::Specification::UnaryFunctionLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v347);
          int v349 = (const CoreML::Specification::UnaryFunctionLayerParams *)&CoreML::Specification::_UnaryFunctionLayerParams_default_instance_;
        }
        CoreML::Specification::UnaryFunctionLayerParams::MergeFrom(v348, v349);
      }
      else
      {
        switch(v27)
        {
          case 231:
            v274 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_multiply(this);
            int v275 = (std::string *)v274;
            if (*v28 == 231)
            {
              unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v274);
              unsigned int v49 = &CoreML::Specification::_MultiplyLayerParams_default_instance_;
            }
            int v365 = v275;
            goto LABEL_574;
          case 240:
            v276 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_average(this);
            uint64_t v33 = v276;
            if (*v28 != 240)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v276);
              uint64_t v34 = &CoreML::Specification::_AverageLayerParams_default_instance_;
              goto LABEL_542;
            }
            goto LABEL_541;
          case 245:
            uint64_t v90 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_scale(this);
            int64_t v91 = (unint64_t *)v90;
            if (*v28 == 245)
            {
              int v92 = (const CoreML::Specification::ScaleLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v90);
              int v92 = (const CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_;
            }
            CoreML::Specification::ScaleLayerParams::MergeFrom(v91, v92);
            break;
        }
      }
    }
    else if (v27 <= 209)
    {
      if (v27 == 190)
      {
        int v321 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_crop(this);
        v322 = (std::string *)v321;
        if (*v28 == 190)
        {
          int v323 = (const CoreML::Specification::CropLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v321);
          int v323 = (const CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_;
        }
        CoreML::Specification::CropLayerParams::MergeFrom(v322, v323);
      }
      else if (v27 == 200)
      {
        uint64_t v121 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_padding(this);
        int v122 = (std::string *)v121;
        if (*v28 == 200)
        {
          size_t v123 = (const CoreML::Specification::PaddingLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v121);
          size_t v123 = (const CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_;
        }
        CoreML::Specification::PaddingLayerParams::MergeFrom(v122, v123);
      }
    }
    else
    {
      switch(v27)
      {
        case 210:
          v204 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_upsample(this);
          v205 = (unint64_t *)v204;
          if (*v28 == 210)
          {
            int v206 = (const CoreML::Specification::UpsampleLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v204);
            int v206 = (const CoreML::Specification::UpsampleLayerParams *)&CoreML::Specification::_UpsampleLayerParams_default_instance_;
          }
          CoreML::Specification::UpsampleLayerParams::MergeFrom(v205, v206);
          break;
        case 211:
          v207 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_resizebilinear(this);
          v208 = (unint64_t *)v207;
          if (*v28 == 211)
          {
            v209 = (const CoreML::Specification::ResizeBilinearLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v207);
            v209 = (const CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_;
          }
          CoreML::Specification::ResizeBilinearLayerParams::MergeFrom(v208, v209);
          break;
        case 212:
          unsigned int v53 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_cropresize(this);
          unint64_t v54 = (unint64_t *)v53;
          if (*v28 == 212)
          {
            unsigned int v55 = (const CoreML::Specification::CropResizeLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v53);
            unsigned int v55 = (const CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_;
          }
          CoreML::Specification::CropResizeLayerParams::MergeFrom(v54, v55);
          break;
      }
    }
  }
  else
  {
    if (v27 <= 159)
    {
      if (v27 <= 129)
      {
        if (v27 == 100)
        {
          int v303 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_convolution(this);
          v304 = (std::string *)v303;
          if (*v28 == 100)
          {
            int v305 = (const CoreML::Specification::ConvolutionLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v303);
            int v305 = (const CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_;
          }
          CoreML::Specification::ConvolutionLayerParams::MergeFrom(v304, v305);
        }
        else if (v27 == 120)
        {
          uint64_t v104 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_pooling(this);
          uint64_t v105 = (std::string *)v104;
          if (*v28 == 120)
          {
            int v106 = (const CoreML::Specification::PoolingLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v104);
            int v106 = (const CoreML::Specification::PoolingLayerParams *)&CoreML::Specification::_PoolingLayerParams_default_instance_;
          }
          CoreML::Specification::PoolingLayerParams::MergeFrom(v105, v106);
        }
      }
      else
      {
        switch(v27)
        {
          case 130:
            int v170 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_activation(this);
            v171 = (std::string *)v170;
            if (*v28 == 130)
            {
              int v172 = (const CoreML::Specification::ActivationParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v170);
              int v172 = (const CoreML::Specification::ActivationParams *)&CoreML::Specification::_ActivationParams_default_instance_;
            }
            CoreML::Specification::ActivationParams::MergeFrom(v171, v172);
            break;
          case 140:
            v173 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_innerproduct(this);
            v174 = (std::string *)v173;
            if (*v28 == 140)
            {
              v175 = (const CoreML::Specification::InnerProductLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v173);
              v175 = (const CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_;
            }
            CoreML::Specification::InnerProductLayerParams::MergeFrom(v174, v175);
            break;
          case 150:
            unint64_t v29 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_embedding(this);
            uint64_t v30 = (std::string *)v29;
            if (*v28 == 150)
            {
              int v31 = (const CoreML::Specification::EmbeddingLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v29);
              int v31 = (const CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_;
            }
            CoreML::Specification::EmbeddingLayerParams::MergeFrom(v30, v31);
            break;
        }
      }
      return;
    }
    if (v27 > 169)
    {
      if (v27 != 170)
      {
        if (v27 != 175)
        {
          if (v27 == 180)
          {
            unint64_t v73 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_lrn(this);
            unsigned int v74 = (std::string *)v73;
            if (*v28 == 180)
            {
              unint64_t v75 = (const CoreML::Specification::LRNLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v73);
              unint64_t v75 = (const CoreML::Specification::LRNLayerParams *)&CoreML::Specification::_LRNLayerParams_default_instance_;
            }
            CoreML::Specification::LRNLayerParams::MergeFrom(v74, v75);
          }
          return;
        }
        int v249 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_softmax(this);
        uint64_t v33 = v249;
        if (*v28 != 175)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v249);
          uint64_t v34 = &CoreML::Specification::_SoftmaxLayerParams_default_instance_;
          goto LABEL_542;
        }
        goto LABEL_541;
      }
      int v247 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_l2normalize(this);
      v248 = (std::string *)v247;
      if (*v28 == 170)
      {
        unsigned int v49 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v247);
        unsigned int v49 = &CoreML::Specification::_L2NormalizeLayerParams_default_instance_;
      }
      int v365 = v248;
LABEL_574:
      CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v365, (const CoreML::Specification::L2NormalizeLayerParams *)v49);
      return;
    }
    if (v27 == 160)
    {
      v332 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_batchnorm(this);
      int v333 = (std::string *)v332;
      if (*v28 == 160)
      {
        v334 = (const CoreML::Specification::BatchnormLayerParams *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v332);
        v334 = (const CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_;
      }
      CoreML::Specification::BatchnormLayerParams::MergeFrom(v333, v334);
    }
    else if (v27 == 165)
    {
      v134 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_mvn(this);
      int v135 = (std::string *)v134;
      if (*v28 == 165)
      {
        v136 = (const CoreML::Specification::MeanVarianceNormalizeLayerParams *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v134);
        v136 = (const CoreML::Specification::MeanVarianceNormalizeLayerParams *)&CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_;
      }
      CoreML::Specification::MeanVarianceNormalizeLayerParams::MergeFrom(v135, v136);
    }
  }
}

uint64_t CoreML::Specification::NeuralNetworkLayer::IsInitialized(CoreML::Specification::NeuralNetworkLayer *this)
{
  return 1;
}

void *CoreML::Specification::NeuralNetworkLayer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NeuralNetworkLayer");
}

CoreML::Specification::BranchLayerParams *CoreML::Specification::BranchLayerParams::BranchLayerParams(CoreML::Specification::BranchLayerParams *this)
{
  *(void *)this = &unk_26D75E900;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F76228(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BranchLayerParams::~BranchLayerParams(CoreML::Specification::BranchLayerParams *this)
{
  *(void *)this = &unk_26D75E900;
  CoreML::Specification::BranchLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::BranchLayerParams::~BranchLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::BranchLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_BranchLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      unint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::BranchLayerParams::default_instance(CoreML::Specification::BranchLayerParams *this)
{
  return &CoreML::Specification::_BranchLayerParams_default_instance_;
}

void CoreML::Specification::BranchLayerParams::New(CoreML::Specification::BranchLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F763DC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BranchLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BranchLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::BranchLayerParams::Clear(CoreML::Specification::BranchLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t CoreML::Specification::BranchLayerParams::MergePartialFromCodedStream(CoreML::Specification::BranchLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unsigned int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      unsigned int v10 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        VarintSizeAsIntFallbacunint64_t k = *v11;
        *a2 = v11 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v15 = v14;
        uint64_t result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v10, (_tc_google::protobuf::io::CodedInputStream *)a2);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v15))
        {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      unsigned int v10 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F76630(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::BranchLayerParams::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::_BranchLayerParams_default_instance_)
  {
    unsigned int v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7)
    {
      return (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::BranchLayerParams::ByteSizeLong(CoreML::Specification::BranchLayerParams *this)
{
  if (this == (CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    unsigned int v5 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::BranchLayerParams::IsInitialized(CoreML::Specification::BranchLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::BranchLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BranchLayerParams");
}

CoreML::Specification::LoopLayerParams *CoreML::Specification::LoopLayerParams::LoopLayerParams(CoreML::Specification::LoopLayerParams *this)
{
  *(void *)this = &unk_26D75E998;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_223F767FC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LoopLayerParams::~LoopLayerParams(CoreML::Specification::LoopLayerParams *this)
{
  *(void *)this = &unk_26D75E998;
  CoreML::Specification::LoopLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::LoopLayerParams::~LoopLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::LoopLayerParams::SharedDtor(uint64_t *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (uint64_t *)MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
  }
  if (v1 != &CoreML::Specification::_LoopLayerParams_default_instance_)
  {
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    this = (uint64_t *)v1[4];
    if (this)
    {
      unsigned int v5 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v5();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::LoopLayerParams::default_instance(CoreML::Specification::LoopLayerParams *this)
{
  return &CoreML::Specification::_LoopLayerParams_default_instance_;
}

void CoreML::Specification::LoopLayerParams::New(CoreML::Specification::LoopLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F769F0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40FB89D240);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LoopLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LoopLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LoopLayerParams::Clear(CoreML::Specification::LoopLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v6 = *((void *)this + 4);
  unsigned int v5 = (void *)((char *)this + 32);
  uint64_t result = v6;
  *(v5 - 1) = 0;
  if (v6) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  void *v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t CoreML::Specification::LoopLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopLayerParams *this, char **a2, unsigned int a3)
{
  unsigned int v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v7 = 0;
LABEL_7:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
      unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_28;
          }
          unsigned int v10 = *a2;
          if (*a2 >= a2[1] || *v10 < 0)
          {
            *((void *)this + 5) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v20 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v10;
            *a2 = v10 + 1;
          }
          break;
        case 2u:
          if (v8 != 18) {
            goto LABEL_28;
          }
          if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
            _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
          if (!result) {
            return result;
          }
          uint64_t v12 = *v5;
          if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
            int64_t size = (const char *)(*v5)->__r_.__value_.__l.__size_;
          }
          else
          {
            int64_t size = (const char *)HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
          }
          if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v12, size, 0, (uint64_t)"CoreML.Specification.LoopLayerParams.conditionVar"))return 0; {
          continue;
          }
        case 3u:
          if (v8 != 26) {
            goto LABEL_28;
          }
          unint64_t v14 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
          if (!v14) {
            operator new();
          }
          goto LABEL_25;
        case 4u:
          if (v8 != 34) {
            goto LABEL_28;
          }
          unint64_t v14 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 4);
          if (!v14) {
            operator new();
          }
LABEL_25:
          int v15 = *a2;
          if (*a2 >= a2[1] || *v15 < 0)
          {
            VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacunint64_t k = *v15;
            *a2 = v15 + 1;
          }
          unint64_t v18 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((v18 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v19 = v18;
          uint64_t result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v14, (_tc_google::protobuf::io::CodedInputStream *)a2);
          if (!result) {
            return result;
          }
          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v19))return 0; {
          continue;
          }
        default:
          goto LABEL_28;
      }
    }
    uint64_t v7 = *v6;
    if (*v6 < 1) {
      goto LABEL_7;
    }
    *a2 = v6 + 1;
    unint64_t v8 = v7 | 0x100000000;
    if ((v8 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_28:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F76D64(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopLayerParams::SerializeWithCachedSizes(CoreML::Specification::LoopLayerParams *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v6 = *((void *)this + 5);
  if (v6) {
    _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    unint64_t v8 = *(const char **)(result + 8);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t result = *(void *)result;
    goto LABEL_8;
  }
  unint64_t v8 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_8:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v8, 1, (uint64_t)"CoreML.Specification.LoopLayerParams.conditionVar");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 2), a2);
  }
LABEL_9:
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_)
  {
    uint64_t v9 = *((void *)this + 3);
    if (v9) {
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
    }
    uint64_t v10 = *((void *)this + 4);
    if (v10)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
    }
  }
  return result;
}

uint64_t CoreML::Specification::LoopLayerParams::ByteSizeLong(CoreML::Specification::LoopLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_)
  {
    unint64_t v6 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v6);
      v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    unint64_t v8 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 4);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v8);
      v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *((void *)this + 5);
  if (v10) {
    v5 += ((9 * (__clz(v10 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

uint64_t CoreML::Specification::LoopLayerParams::IsInitialized(CoreML::Specification::LoopLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LoopLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LoopLayerParams");
}

CoreML::Specification::LoopBreakLayerParams *CoreML::Specification::LoopBreakLayerParams::LoopBreakLayerParams(CoreML::Specification::LoopBreakLayerParams *this)
{
  *(void *)this = &unk_26D75EA30;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopBreakLayerParams *)&CoreML::Specification::_LoopBreakLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F76FF8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LoopBreakLayerParams::~LoopBreakLayerParams(CoreML::Specification::LoopBreakLayerParams *this)
{
  *(void *)this = &unk_26D75EA30;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EA30;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LoopBreakLayerParams::New(CoreML::Specification::LoopBreakLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F77108(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LoopBreakLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LoopBreakLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LoopBreakLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopBreakLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::LoopBreakLayerParams::ByteSizeLong(CoreML::Specification::LoopBreakLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::LoopBreakLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::LoopBreakLayerParams::IsInitialized(CoreML::Specification::LoopBreakLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LoopBreakLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LoopBreakLayerParams");
}

CoreML::Specification::LoopContinueLayerParams *CoreML::Specification::LoopContinueLayerParams::LoopContinueLayerParams(CoreML::Specification::LoopContinueLayerParams *this)
{
  *(void *)this = &unk_26D75EAC8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopContinueLayerParams *)&CoreML::Specification::_LoopContinueLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F77268(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LoopContinueLayerParams::~LoopContinueLayerParams(CoreML::Specification::LoopContinueLayerParams *this)
{
  *(void *)this = &unk_26D75EAC8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EAC8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LoopContinueLayerParams::New(CoreML::Specification::LoopContinueLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F77378(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LoopContinueLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LoopContinueLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LoopContinueLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopContinueLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::LoopContinueLayerParams::ByteSizeLong(CoreML::Specification::LoopContinueLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::LoopContinueLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::LoopContinueLayerParams::IsInitialized(CoreML::Specification::LoopContinueLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LoopContinueLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LoopContinueLayerParams");
}

CoreML::Specification::CopyLayerParams *CoreML::Specification::CopyLayerParams::CopyLayerParams(CoreML::Specification::CopyLayerParams *this)
{
  *(void *)this = &unk_26D75EB60;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CopyLayerParams *)&CoreML::Specification::_CopyLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F774D8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::CopyLayerParams::~CopyLayerParams(CoreML::Specification::CopyLayerParams *this)
{
  *(void *)this = &unk_26D75EB60;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EB60;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::CopyLayerParams::New(CoreML::Specification::CopyLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F775E8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CopyLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CopyLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::CopyLayerParams::MergePartialFromCodedStream(CoreML::Specification::CopyLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::CopyLayerParams::ByteSizeLong(CoreML::Specification::CopyLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::CopyLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::CopyLayerParams::IsInitialized(CoreML::Specification::CopyLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::CopyLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CopyLayerParams");
}

CoreML::Specification::GreaterThanLayerParams *CoreML::Specification::GreaterThanLayerParams::GreaterThanLayerParams(CoreML::Specification::GreaterThanLayerParams *this)
{
  *(void *)this = &unk_26D75EBF8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GreaterThanLayerParams *)&CoreML::Specification::_GreaterThanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F77748(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::GreaterThanLayerParams::~GreaterThanLayerParams(CoreML::Specification::GreaterThanLayerParams *this)
{
  *(void *)this = &unk_26D75EBF8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EBF8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::GreaterThanLayerParams::New(CoreML::Specification::GreaterThanLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F77858(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::GreaterThanLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::GreaterThanLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::GreaterThanLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::GreaterThanLayerParams::MergePartialFromCodedStream(CoreML::Specification::GreaterThanLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::GreaterThanLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::GreaterThanLayerParams::ByteSizeLong(CoreML::Specification::GreaterThanLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::GreaterThanLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::GreaterThanLayerParams::IsInitialized(CoreML::Specification::GreaterThanLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::GreaterThanLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GreaterThanLayerParams");
}

CoreML::Specification::GreaterEqualLayerParams *CoreML::Specification::GreaterEqualLayerParams::GreaterEqualLayerParams(CoreML::Specification::GreaterEqualLayerParams *this)
{
  *(void *)this = &unk_26D75EC90;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GreaterEqualLayerParams *)&CoreML::Specification::_GreaterEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F77A9C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::GreaterEqualLayerParams::~GreaterEqualLayerParams(CoreML::Specification::GreaterEqualLayerParams *this)
{
  *(void *)this = &unk_26D75EC90;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EC90;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::GreaterEqualLayerParams::New(CoreML::Specification::GreaterEqualLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F77BAC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::GreaterEqualLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::GreaterEqualLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::GreaterEqualLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::GreaterEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::GreaterEqualLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::GreaterEqualLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::GreaterEqualLayerParams::ByteSizeLong(CoreML::Specification::GreaterEqualLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::GreaterEqualLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::GreaterEqualLayerParams::IsInitialized(CoreML::Specification::GreaterEqualLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::GreaterEqualLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GreaterEqualLayerParams");
}

CoreML::Specification::LessThanLayerParams *CoreML::Specification::LessThanLayerParams::LessThanLayerParams(CoreML::Specification::LessThanLayerParams *this)
{
  *(void *)this = &unk_26D75ED28;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LessThanLayerParams *)&CoreML::Specification::_LessThanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F77DF0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LessThanLayerParams::~LessThanLayerParams(CoreML::Specification::LessThanLayerParams *this)
{
  *(void *)this = &unk_26D75ED28;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75ED28;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LessThanLayerParams::New(CoreML::Specification::LessThanLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F77F00(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LessThanLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LessThanLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LessThanLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::LessThanLayerParams::MergePartialFromCodedStream(CoreML::Specification::LessThanLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::LessThanLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::LessThanLayerParams::ByteSizeLong(CoreML::Specification::LessThanLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::LessThanLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::LessThanLayerParams::IsInitialized(CoreML::Specification::LessThanLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LessThanLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LessThanLayerParams");
}

CoreML::Specification::LessEqualLayerParams *CoreML::Specification::LessEqualLayerParams::LessEqualLayerParams(CoreML::Specification::LessEqualLayerParams *this)
{
  *(void *)this = &unk_26D75EDC0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LessEqualLayerParams *)&CoreML::Specification::_LessEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F78144(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LessEqualLayerParams::~LessEqualLayerParams(CoreML::Specification::LessEqualLayerParams *this)
{
  *(void *)this = &unk_26D75EDC0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EDC0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LessEqualLayerParams::New(CoreML::Specification::LessEqualLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F78254(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LessEqualLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LessEqualLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LessEqualLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::LessEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::LessEqualLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::LessEqualLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::LessEqualLayerParams::ByteSizeLong(CoreML::Specification::LessEqualLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::LessEqualLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::LessEqualLayerParams::IsInitialized(CoreML::Specification::LessEqualLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LessEqualLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LessEqualLayerParams");
}

CoreML::Specification::EqualLayerParams *CoreML::Specification::EqualLayerParams::EqualLayerParams(CoreML::Specification::EqualLayerParams *this)
{
  *(void *)this = &unk_26D75EE58;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EqualLayerParams *)&CoreML::Specification::_EqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F78498(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::EqualLayerParams::~EqualLayerParams(CoreML::Specification::EqualLayerParams *this)
{
  *(void *)this = &unk_26D75EE58;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EE58;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::EqualLayerParams::New(CoreML::Specification::EqualLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F785A8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::EqualLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::EqualLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::EqualLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::EqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::EqualLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::EqualLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::EqualLayerParams::ByteSizeLong(CoreML::Specification::EqualLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::EqualLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::EqualLayerParams::IsInitialized(CoreML::Specification::EqualLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::EqualLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.EqualLayerParams");
}

CoreML::Specification::NotEqualLayerParams *CoreML::Specification::NotEqualLayerParams::NotEqualLayerParams(CoreML::Specification::NotEqualLayerParams *this)
{
  *(void *)this = &unk_26D75EEF0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NotEqualLayerParams *)&CoreML::Specification::_NotEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F787EC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::NotEqualLayerParams::~NotEqualLayerParams(CoreML::Specification::NotEqualLayerParams *this)
{
  *(void *)this = &unk_26D75EEF0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EEF0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::NotEqualLayerParams::New(CoreML::Specification::NotEqualLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F788FC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::NotEqualLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::NotEqualLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::NotEqualLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::NotEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::NotEqualLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    uint64_t v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::NotEqualLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::NotEqualLayerParams::ByteSizeLong(CoreML::Specification::NotEqualLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::NotEqualLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NotEqualLayerParams::IsInitialized(CoreML::Specification::NotEqualLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::NotEqualLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NotEqualLayerParams");
}

CoreML::Specification::LogicalAndLayerParams *CoreML::Specification::LogicalAndLayerParams::LogicalAndLayerParams(CoreML::Specification::LogicalAndLayerParams *this)
{
  *(void *)this = &unk_26D75EF88;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalAndLayerParams *)&CoreML::Specification::_LogicalAndLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F78B40(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LogicalAndLayerParams::~LogicalAndLayerParams(CoreML::Specification::LogicalAndLayerParams *this)
{
  *(void *)this = &unk_26D75EF88;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75EF88;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LogicalAndLayerParams::New(CoreML::Specification::LogicalAndLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F78C50(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LogicalAndLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LogicalAndLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LogicalAndLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalAndLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::LogicalAndLayerParams::ByteSizeLong(CoreML::Specification::LogicalAndLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::LogicalAndLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::LogicalAndLayerParams::IsInitialized(CoreML::Specification::LogicalAndLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LogicalAndLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LogicalAndLayerParams");
}

CoreML::Specification::LogicalOrLayerParams *CoreML::Specification::LogicalOrLayerParams::LogicalOrLayerParams(CoreML::Specification::LogicalOrLayerParams *this)
{
  *(void *)this = &unk_26D75F020;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalOrLayerParams *)&CoreML::Specification::_LogicalOrLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F78DB0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LogicalOrLayerParams::~LogicalOrLayerParams(CoreML::Specification::LogicalOrLayerParams *this)
{
  *(void *)this = &unk_26D75F020;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75F020;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LogicalOrLayerParams::New(CoreML::Specification::LogicalOrLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F78EC0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LogicalOrLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LogicalOrLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LogicalOrLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalOrLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::LogicalOrLayerParams::ByteSizeLong(CoreML::Specification::LogicalOrLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::LogicalOrLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::LogicalOrLayerParams::IsInitialized(CoreML::Specification::LogicalOrLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LogicalOrLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LogicalOrLayerParams");
}

CoreML::Specification::LogicalXorLayerParams *CoreML::Specification::LogicalXorLayerParams::LogicalXorLayerParams(CoreML::Specification::LogicalXorLayerParams *this)
{
  *(void *)this = &unk_26D75F0B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalXorLayerParams *)&CoreML::Specification::_LogicalXorLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F79020(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LogicalXorLayerParams::~LogicalXorLayerParams(CoreML::Specification::LogicalXorLayerParams *this)
{
  *(void *)this = &unk_26D75F0B8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75F0B8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LogicalXorLayerParams::New(CoreML::Specification::LogicalXorLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F79130(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LogicalXorLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LogicalXorLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LogicalXorLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalXorLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::LogicalXorLayerParams::ByteSizeLong(CoreML::Specification::LogicalXorLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::LogicalXorLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::LogicalXorLayerParams::IsInitialized(CoreML::Specification::LogicalXorLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LogicalXorLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LogicalXorLayerParams");
}

CoreML::Specification::LogicalNotLayerParams *CoreML::Specification::LogicalNotLayerParams::LogicalNotLayerParams(CoreML::Specification::LogicalNotLayerParams *this)
{
  *(void *)this = &unk_26D75F150;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalNotLayerParams *)&CoreML::Specification::_LogicalNotLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F79290(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LogicalNotLayerParams::~LogicalNotLayerParams(CoreML::Specification::LogicalNotLayerParams *this)
{
  *(void *)this = &unk_26D75F150;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75F150;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LogicalNotLayerParams::New(CoreML::Specification::LogicalNotLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F793A0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LogicalNotLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LogicalNotLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LogicalNotLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalNotLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::LogicalNotLayerParams::ByteSizeLong(CoreML::Specification::LogicalNotLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::LogicalNotLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::LogicalNotLayerParams::IsInitialized(CoreML::Specification::LogicalNotLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LogicalNotLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LogicalNotLayerParams");
}

CoreML::Specification::BorderAmounts_EdgeSizes *CoreML::Specification::BorderAmounts_EdgeSizes::BorderAmounts_EdgeSizes(CoreML::Specification::BorderAmounts_EdgeSizes *this)
{
  *(void *)this = &unk_26D75F1E8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BorderAmounts_EdgeSizes *)&CoreML::Specification::_BorderAmounts_EdgeSizes_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F79504(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BorderAmounts_EdgeSizes::~BorderAmounts_EdgeSizes(CoreML::Specification::BorderAmounts_EdgeSizes *this)
{
  *(void *)this = &unk_26D75F1E8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75F1E8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::BorderAmounts_EdgeSizes::New(CoreML::Specification::BorderAmounts_EdgeSizes *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F79614(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BorderAmounts_EdgeSizes>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BorderAmounts_EdgeSizes>);
  }
  return result;
}

uint64_t CoreML::Specification::BorderAmounts_EdgeSizes::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::BorderAmounts_EdgeSizes::MergePartialFromCodedStream(CoreML::Specification::BorderAmounts_EdgeSizes *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (unint64_t *)((char *)this + 24);
  float v5 = (unint64_t *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        BOOL v6 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_22;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_22;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_22;
        }
        uint64_t v11 = *a2;
        if (*a2 >= a2[1] || *v11 < 0)
        {
          unint64_t *v4 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v12 = *v11;
          unsigned int v13 = v4;
LABEL_21:
          *unsigned int v13 = v12;
          *a2 = v11 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 < a2[1] && (*v11 & 0x80000000) == 0)
      {
        unint64_t v12 = *v11;
        unsigned int v13 = v5;
        goto LABEL_21;
      }
      unint64_t *v5 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
      if ((v15 & 1) == 0) {
        return 0;
      }
    }
LABEL_22:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::BorderAmounts_EdgeSizes::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::BorderAmounts_EdgeSizes::ByteSizeLong(CoreML::Specification::BorderAmounts_EdgeSizes *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::BorderAmounts_EdgeSizes::IsInitialized(CoreML::Specification::BorderAmounts_EdgeSizes *this)
{
  return 1;
}

void *CoreML::Specification::BorderAmounts_EdgeSizes::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BorderAmounts.EdgeSizes");
}

CoreML::Specification::BorderAmounts *CoreML::Specification::BorderAmounts::BorderAmounts(CoreML::Specification::BorderAmounts *this)
{
  *(void *)this = &unk_26D75F280;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BorderAmounts *)&CoreML::Specification::_BorderAmounts_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

void sub_223F798E8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::BorderAmounts *CoreML::Specification::BorderAmounts::BorderAmounts(CoreML::Specification::BorderAmounts *this, const CoreML::Specification::BorderAmounts *a2)
{
  *(void *)this = &unk_26D75F280;
  *(_OWORD *)((char *)this + 8) = 0u;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  unint64_t v5 = (std::string *)((char *)this + 16);
  *(_OWORD *)((char *)this + 24) = 0u;
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((void *)a2 + 4);
    unint64_t v8 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::BorderAmounts *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::BorderAmounts_EdgeSizes>::TypeHandler>(v5, (std::string **)v8, (CoreML::Specification::ReverseSeqLayerParams **)(v7 + 8), v6, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v9 = *((_DWORD *)this + 6) + v6;
    *((_DWORD *)this + 6) = v9;
    BOOL v10 = (signed int *)*((void *)this + 4);
    if (*v10 < v9) {
      *BOOL v10 = v9;
    }
  }
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  uint64_t v11 = *((void *)a2 + 1);
  if (v11) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v11 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

void sub_223F799E8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BorderAmounts::~BorderAmounts(CoreML::Specification::BorderAmounts *this)
{
  *(void *)this = &unk_26D75F280;
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::BorderAmounts::~BorderAmounts(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::BorderAmounts::New(CoreML::Specification::BorderAmounts *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F79AF0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BorderAmounts>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BorderAmounts>);
  }
  return result;
}

uint64_t CoreML::Specification::BorderAmounts::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(void *)(v3 + 16) = 0;
      *(void *)(v3 + 24) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(CoreML::Specification::BorderAmounts *this, char **a2, unsigned int a3)
{
  unint64_t v4 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_7:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_13;
      }
LABEL_8:
      if (v7 != 82 || (v7 & 0xFFFFFFF8) != 0x50) {
        goto LABEL_13;
      }
      signed int v9 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::BorderAmounts_EdgeSizes>::TypeHandler>((uint64_t)v4);
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        VarintSizeAsIntFallbacunint64_t k = *v10;
        *a2 = v10 + 1;
      }
      unint64_t v13 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v13 & 0x8000000000000000) == 0)
      {
        int v15 = v13;
        uint64_t result = CoreML::Specification::BorderAmounts_EdgeSizes::MergePartialFromCodedStream(v9, a2, v14);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v15))
        {
          continue;
        }
      }
      return 0;
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_7;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_13:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::BorderAmounts::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::BorderAmounts::ByteSizeLong(CoreML::Specification::BorderAmounts *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      unint64_t v5 = CoreML::Specification::BorderAmounts_EdgeSizes::ByteSizeLong(*(CoreML::Specification::BorderAmounts_EdgeSizes **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v4;
  return v4;
}

std::string *CoreML::Specification::BorderAmounts::MergeFrom(std::string *this, const CoreML::Specification::BorderAmounts *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::ReverseSeqLayerParams **)(*((void *)a2 + 4) + 8);
    unint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::BorderAmounts_EdgeSizes>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    int64_t size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *int64_t size = v8;
    }
  }
  return this;
}

uint64_t CoreML::Specification::BorderAmounts::IsInitialized(CoreML::Specification::BorderAmounts *this)
{
  return 1;
}

void *CoreML::Specification::BorderAmounts::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BorderAmounts");
}

CoreML::Specification::ValidPadding *CoreML::Specification::ValidPadding::ValidPadding(CoreML::Specification::ValidPadding *this)
{
  *(void *)this = &unk_26D75F318;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ValidPadding *)&CoreML::Specification::_ValidPadding_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F79E98(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ValidPadding::~ValidPadding(CoreML::Specification::ValidPadding *this)
{
  *(void *)this = &unk_26D75F318;
  if (this != (CoreML::Specification::ValidPadding *)&CoreML::Specification::_ValidPadding_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ValidPadding::~ValidPadding(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ValidPadding::New(CoreML::Specification::ValidPadding *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F79FC4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ValidPadding>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ValidPadding>);
  }
  return result;
}

uint64_t CoreML::Specification::ValidPadding::Clear(CoreML::Specification::ValidPadding *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  return result;
}

uint64_t CoreML::Specification::ValidPadding::MergePartialFromCodedStream(CoreML::Specification::ValidPadding *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unsigned int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
      unint64_t v12 = *a2;
      if (*a2 >= a2[1] || *v12 < 0)
      {
        VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        VarintSizeAsIntFallbacunint64_t k = *v12;
        *a2 = v12 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v16 = v14;
        uint64_t result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v11, a2, v15);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v16))
        {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F7A1A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::ValidPadding::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::_ValidPadding_default_instance_)
  {
    uint64_t v5 = this[2];
    if (v5) {
      return (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
    }
  }
  return this;
}

CoreML::Specification::BorderAmounts *CoreML::Specification::ValidPadding::ByteSizeLong(CoreML::Specification::ValidPadding *this)
{
  if (this == (CoreML::Specification::ValidPadding *)&CoreML::Specification::_ValidPadding_default_instance_)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::BorderAmounts::ByteSizeLong(result);
      uint64_t result = (CoreML::Specification::BorderAmounts *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

std::string *CoreML::Specification::ValidPadding::MergeFrom(std::string *this, const CoreML::Specification::ValidPadding *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::ValidPadding *)&CoreML::Specification::_ValidPadding_default_instance_
    && v5 != 0)
  {
    if (!v3->__r_.__value_.__r.__words[2]) {
      operator new();
    }
    if (v5) {
      unint64_t v7 = (const CoreML::Specification::BorderAmounts *)*((void *)a2 + 2);
    }
    else {
      unint64_t v7 = (const CoreML::Specification::BorderAmounts *)&CoreML::Specification::_BorderAmounts_default_instance_;
    }
    signed int v8 = (std::string *)v3->__r_.__value_.__r.__words[2];
    return CoreML::Specification::BorderAmounts::MergeFrom(v8, v7);
  }
  return this;
}

void sub_223F7A318(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ValidPadding::IsInitialized(CoreML::Specification::ValidPadding *this)
{
  return 1;
}

void *CoreML::Specification::ValidPadding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ValidPadding");
}

CoreML::Specification::SamePadding *CoreML::Specification::SamePadding::SamePadding(CoreML::Specification::SamePadding *this)
{
  *(void *)this = &unk_26D75F3B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SamePadding *)&CoreML::Specification::_SamePadding_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F7A3B4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SamePadding::~SamePadding(CoreML::Specification::SamePadding *this)
{
  *(void *)this = &unk_26D75F3B0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75F3B0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::SamePadding::New(CoreML::Specification::SamePadding *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7A4C8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SamePadding>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SamePadding>);
  }
  return result;
}

uint64_t CoreML::Specification::SamePadding::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::SamePadding::MergePartialFromCodedStream(CoreML::Specification::SamePadding *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::SamePadding::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SamePadding::ByteSizeLong(CoreML::Specification::SamePadding *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

std::string *CoreML::Specification::SamePadding::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::SamePadding::IsInitialized(CoreML::Specification::SamePadding *this)
{
  return 1;
}

void *CoreML::Specification::SamePadding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SamePadding");
}

CoreML::Specification::SamplingMode *CoreML::Specification::SamplingMode::SamplingMode(CoreML::Specification::SamplingMode *this)
{
  *(void *)this = &unk_26D75F448;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SamplingMode *)&CoreML::Specification::_SamplingMode_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F7A720(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::SamplingMode *CoreML::Specification::SamplingMode::SamplingMode(CoreML::Specification::SamplingMode *this, const CoreML::Specification::SamplingMode *a2)
{
  *(void *)this = &unk_26D75F448;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  return this;
}

void sub_223F7A7A8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SamplingMode::~SamplingMode(CoreML::Specification::SamplingMode *this)
{
  *(void *)this = &unk_26D75F448;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75F448;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::SamplingMode::New(CoreML::Specification::SamplingMode *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7A8B8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SamplingMode>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SamplingMode>);
  }
  return result;
}

uint64_t CoreML::Specification::SamplingMode::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::SamplingMode::MergePartialFromCodedStream(CoreML::Specification::SamplingMode *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::SamplingMode::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SamplingMode::ByteSizeLong(CoreML::Specification::SamplingMode *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

std::string *CoreML::Specification::SamplingMode::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::SamplingMode::IsInitialized(CoreML::Specification::SamplingMode *this)
{
  return 1;
}

void *CoreML::Specification::SamplingMode::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SamplingMode");
}

CoreML::Specification::BoxCoordinatesMode *CoreML::Specification::BoxCoordinatesMode::BoxCoordinatesMode(CoreML::Specification::BoxCoordinatesMode *this)
{
  *(void *)this = &unk_26D75F4E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BoxCoordinatesMode *)&CoreML::Specification::_BoxCoordinatesMode_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F7AB10(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::BoxCoordinatesMode *CoreML::Specification::BoxCoordinatesMode::BoxCoordinatesMode(CoreML::Specification::BoxCoordinatesMode *this, const CoreML::Specification::BoxCoordinatesMode *a2)
{
  *(void *)this = &unk_26D75F4E0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  return this;
}

void sub_223F7AB98(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BoxCoordinatesMode::~BoxCoordinatesMode(CoreML::Specification::BoxCoordinatesMode *this)
{
  *(void *)this = &unk_26D75F4E0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75F4E0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::BoxCoordinatesMode::New(CoreML::Specification::BoxCoordinatesMode *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7ACA8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BoxCoordinatesMode>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BoxCoordinatesMode>);
  }
  return result;
}

uint64_t CoreML::Specification::BoxCoordinatesMode::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::BoxCoordinatesMode::MergePartialFromCodedStream(CoreML::Specification::BoxCoordinatesMode *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::BoxCoordinatesMode::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::BoxCoordinatesMode::ByteSizeLong(CoreML::Specification::BoxCoordinatesMode *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

std::string *CoreML::Specification::BoxCoordinatesMode::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::BoxCoordinatesMode::IsInitialized(CoreML::Specification::BoxCoordinatesMode *this)
{
  return 1;
}

void *CoreML::Specification::BoxCoordinatesMode::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BoxCoordinatesMode");
}

CoreML::Specification::WeightParams *CoreML::Specification::WeightParams::WeightParams(CoreML::Specification::WeightParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75F578;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = 0;
  *((unsigned char *)this + 72) = 0;
  *((_DWORD *)this + 19) = 0;
  return this;
}

void sub_223F7AF20(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::WeightParams *CoreML::Specification::WeightParams::WeightParams(CoreML::Specification::WeightParams *this, const CoreML::Specification::WeightParams *a2)
{
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *(void *)this = &unk_26D75F578;
  *((void *)this + 2) = 0;
  int v5 = (unsigned int *)((char *)this + 16);
  *((void *)this + 3) = 0;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v6);
    memcpy((void *)(*((void *)this + 3) + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  }
  *((_DWORD *)this + 19) = 0;
  uint64_t v7 = *((void *)a2 + 1);
  if (v7) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v7 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 5) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 5);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &_tc_google::protobuf::internal::fixed_address_empty_string && v9 != 0) {
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  *((void *)this + 6) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  uint64_t v11 = *((void *)a2 + 6);
  if (*(char *)(v11 + 23) < 0) {
    uint64_t v12 = *(void *)(v11 + 8);
  }
  else {
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  }
  if ((uint64_t *)v11 != &_tc_google::protobuf::internal::fixed_address_empty_string && v12) {
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  *((void *)this + 7) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  uint64_t v13 = *((void *)a2 + 7);
  if (*(char *)(v13 + 23) < 0) {
    uint64_t v14 = *(void *)(v13 + 8);
  }
  else {
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  }
  if ((uint64_t *)v13 != &_tc_google::protobuf::internal::fixed_address_empty_string && v14) {
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  if (a2 != (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_
    && *((void *)a2 + 8))
  {
    operator new();
  }
  *((void *)this + 8) = 0;
  *((unsigned char *)this + 72) = *((unsigned char *)a2 + 72);
  return this;
}

void sub_223F7B0D4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v3, 0x10A1C406130BDD3);
  int v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::WeightParams::~WeightParams(CoreML::Specification::WeightParams *this)
{
  *(void *)this = &unk_26D75F578;
  CoreML::Specification::WeightParams::SharedDtor((uint64_t *)this);
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::WeightParams::~WeightParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::WeightParams::SharedDtor(uint64_t *this)
{
  int v1 = this;
  uint64_t v2 = this[5];
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (uint64_t *)MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = v1[6];
  if ((uint64_t *)v4 != &_tc_google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    this = (uint64_t *)MEMORY[0x22A614FA0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = v1[7];
  if ((uint64_t *)v6 != &_tc_google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (uint64_t *)MEMORY[0x22A614FA0](v6, 0x1012C40EC159624);
  }
  if (v1 != &CoreML::Specification::_WeightParams_default_instance_)
  {
    this = (uint64_t *)v1[8];
    if (this)
    {
      uint64_t v8 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v8();
    }
  }
  return this;
}

void CoreML::Specification::WeightParams::New(CoreML::Specification::WeightParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7B348(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::WeightParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::WeightParams>);
  }
  return result;
}

uint64_t CoreML::Specification::WeightParams::Clear(CoreML::Specification::WeightParams *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 6);
  if ((uint64_t *)v3 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  *((unsigned char *)this + 72) = 0;
  return result;
}

BOOL CoreML::Specification::WeightParams::MergePartialFromCodedStream(CoreML::Specification::WeightParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v44 = (std::string **)((char *)this + 56);
  int v5 = (std::string **)((char *)this + 48);
  uint64_t v6 = (std::string **)((char *)this + 40);
  uint64_t v7 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            uint64_t v8 = *(unsigned __int8 **)a2;
            unint64_t v9 = *((void *)a2 + 1);
            if (*(void *)a2 >= v9)
            {
              uint64_t v11 = 0;
LABEL_16:
              unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
              unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
              if ((v12 & 0x100000000) == 0) {
                goto LABEL_9;
              }
              goto LABEL_17;
            }
            BOOL v10 = v8 + 1;
            uint64_t v11 = *v8;
            if ((char)*v8 < 1)
            {
              if ((unint64_t)v10 < v9)
              {
                int v13 = *v10;
                if ((v11 & ~v13) >= 0x80)
                {
                  *(void *)a2 = v8 + 2;
                  unint64_t v12 = (v11 + (v13 << 7) - 128) | 0x100000000;
                  goto LABEL_17;
                }
              }
              goto LABEL_16;
            }
            *(void *)a2 = v10;
            unint64_t v12 = v11 | 0x100000000;
            if ((v12 & 0x100000000) == 0) {
              goto LABEL_9;
            }
LABEL_17:
            unsigned int v16 = v12 >> 3;
            if (v12 >> 3 <= 0x1E) {
              break;
            }
            if (v16 == 31)
            {
              if (v12 == 250)
              {
                uint64_t v17 = *v44;
                if (*v44 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
                  _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
                }
                goto LABEL_42;
              }
              goto LABEL_9;
            }
            if (v16 == 40)
            {
              if (v12 != 66) {
                goto LABEL_9;
              }
              uint64_t v22 = (CoreML::Specification::QuantizationParams *)*((void *)this + 8);
              if (!v22) {
                operator new();
              }
              signed int v23 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
              {
                VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                VarintSizeAsIntFallbacunint64_t k = *v23;
                *(void *)a2 = v23 + 1;
              }
              unint64_t v26 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
              if ((v26 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v28 = v26;
              BOOL result = CoreML::Specification::QuantizationParams::MergePartialFromCodedStream(v22, a2, v27);
              if (!result) {
                return result;
              }
              if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
                return 0;
              }
            }
            else
            {
              if (v16 != 50 || v12 != 144) {
                goto LABEL_9;
              }
              unint64_t v18 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
              {
                Varint64Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v25 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                Varint64Fallbacunint64_t k = *v18;
                *(void *)a2 = v18 + 1;
              }
              *((unsigned char *)this + 72) = Varint64Fallback != 0;
            }
          }
          if (v16 == 1) {
            break;
          }
          if (v16 == 2)
          {
            if (v12 == 18)
            {
              uint64_t v17 = *v6;
              if (*v6 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
                _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
              }
              goto LABEL_42;
            }
LABEL_9:
            if (v12) {
              BOOL v14 = (v12 & 7) == 4;
            }
            else {
              BOOL v14 = 1;
            }
            if (v14) {
              return 1;
            }
            if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v12, a3) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v16 != 30 || v12 != 242) {
              goto LABEL_9;
            }
            uint64_t v17 = *v5;
            if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
              _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
            }
LABEL_42:
            if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v17)) {
              return 0;
            }
          }
        }
        if (v12 != 13) {
          break;
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(_tc_google::protobuf::internal::WireFormatLite::FieldType)2>(1, 0xAu, (unsigned int **)a2, (uint64_t)v7))return 0; {
      }
        }
      if (v12 != 10) {
        goto LABEL_9;
      }
      char v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        unsigned int v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v21 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v21 = *v20;
        *(void *)a2 = v20 + 1;
      }
      if ((v21 & 3) != 0) {
        return 0;
      }
      signed int v30 = *v7;
      unsigned int v31 = v21 >> 2;
      int v32 = _tc_google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit(a2);
      int v33 = _tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2);
      if (v33 >= v32) {
        int v34 = v32;
      }
      else {
        int v34 = v33;
      }
      if (v32 == -1) {
        int v34 = v33;
      }
      if (v34 >= (uint64_t)v21) {
        break;
      }
      if (v21 >= 4)
      {
        if (v31 <= 1) {
          int v35 = 1;
        }
        else {
          int v35 = v21 >> 2;
        }
        do
        {
          unsigned int v45 = 0;
          unint64_t v36 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v45);
            if (!result) {
              return result;
            }
            unsigned int v37 = v45;
          }
          else
          {
            unsigned int v37 = *v36;
            *(void *)a2 = v36 + 1;
          }
          signed int v38 = *((_DWORD *)this + 4);
          if (v38 == *((_DWORD *)this + 5))
          {
            _tc_google::protobuf::RepeatedField<float>::Reserve(v7, v38 + 1);
            signed int v38 = *v7;
          }
          uint64_t v39 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v38 + 1;
          *(_DWORD *)(v39 + 4 * v38 + 8) = v37;
          --v35;
        }
        while (v35);
      }
    }
    signed int v40 = v30 + v31;
    if ((int)*v7 >= (int)(v30 + v31))
    {
      uint64_t v41 = *((void *)this + 3);
    }
    else
    {
      _tc_google::protobuf::RepeatedField<float>::Reserve(v7, v30 + v31);
      uint64_t v41 = *((void *)this + 3);
      uint64_t v42 = 4 * v40 - 4 * *((int *)this + 4);
      if (v42 >= 1) {
        bzero((void *)(v41 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v42 >> 2) - ((unint64_t)v42 > 3)) + 4);
      }
    }
    *uint64_t v7 = v40;
    uint64_t v43 = v41 + 8;
    if (!v41) {
      uint64_t v43 = 0;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v43 + 4 * v30), v21));
  if ((int)*v7 >= 1)
  {
    BOOL result = 0;
    *uint64_t v7 = v30;
    return result;
  }
  return 0;
}

void sub_223F7B918(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::WeightParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *unint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(void *)(v5 + 24);
    if (v13) {
      BOOL v14 = (_tc_google::protobuf::internal::WireFormatLite *)(v13 + 8);
    }
    else {
      BOOL v14 = 0;
    }
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloatArray(v14, (const float *)*(unsigned int *)(v5 + 16), a2, a4);
  }
  uint64_t v15 = *(void *)(v5 + 40);
  if ((*(char *)(v15 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v15 + 23)) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (*(void *)(v15 + 8)) {
LABEL_19:
  }
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, v15, a2);
LABEL_20:
  uint64_t v16 = *(void *)(v5 + 48);
  if ((*(char *)(v16 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v16 + 23)) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (*(void *)(v16 + 8)) {
LABEL_22:
  }
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(30, v16, a2);
LABEL_23:
  uint64_t v17 = *(void *)(v5 + 56);
  if (*(char *)(v17 + 23) < 0)
  {
    if (!*(void *)(v17 + 8)) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (*(unsigned char *)(v17 + 23)) {
LABEL_25:
  }
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(31, v17, a2);
LABEL_26:
  if ((uint64_t *)v5 != &CoreML::Specification::_WeightParams_default_instance_)
  {
    uint64_t v18 = *(void *)(v5 + 64);
    if (v18) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x28, v18, a2, a4);
    }
  }
  if (*(unsigned char *)(v5 + 72))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(50, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::WeightParams::ByteSizeLong(CoreML::Specification::WeightParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  uint64_t v3 = 4 * v2;
  if (v2)
  {
    if ((v3 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 8) = v3;
  uint64_t v5 = *((void *)this + 5);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  uint64_t v7 = v4 + v3;
  if (v6)
  {
    if (*(char *)(v5 + 23) >= 0) {
      uint64_t v8 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      uint64_t v8 = *(void *)(v5 + 8);
    }
    v7 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *((void *)this + 6);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_19;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_19:
  uint64_t v12 = *((void *)this + 7);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_24:
  if (this != (CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_)
  {
    uint64_t v15 = (CoreML::Specification::QuantizationParams *)*((void *)this + 8);
    if (v15)
    {
      uint64_t v16 = CoreML::Specification::QuantizationParams::ByteSizeLong(v15);
      v7 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  if (*((unsigned char *)this + 72)) {
    uint64_t result = v7 + 3;
  }
  else {
    uint64_t result = v7;
  }
  *((_DWORD *)this + 19) = result;
  return result;
}

std::string *CoreML::Specification::QuantizationParams::MergeFrom(std::string *this, const CoreML::Specification::QuantizationParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (v5) {
    *(void *)(v3 + 16) = v5;
  }
  int v6 = *((_DWORD *)a2 + 9);
  if (v6 == 102)
  {
    if (*(_DWORD *)(v3 + 36) != 102)
    {
      CoreML::Specification::QuantizationParams::clear_QuantizationType(v3);
      *(_DWORD *)(v3 + 36) = 102;
      operator new();
    }
    uint64_t v8 = (const CoreML::Specification::V5::TensorValue_RepeatedFloats *)*((void *)a2 + 3);
    uint64_t v10 = *(unint64_t **)(v3 + 24);
    return (std::string *)CoreML::Specification::V5::TensorValue_RepeatedFloats::MergeFrom(v10, v8);
  }
  else if (v6 == 101)
  {
    if (*(_DWORD *)(v3 + 36) != 101)
    {
      CoreML::Specification::QuantizationParams::clear_QuantizationType(v3);
      *(_DWORD *)(v3 + 36) = 101;
      operator new();
    }
    uint64_t v7 = (const CoreML::Specification::LinearQuantizationParams *)*((void *)a2 + 3);
    uint64_t v9 = *(unint64_t **)(v3 + 24);
    return (std::string *)CoreML::Specification::LinearQuantizationParams::MergeFrom(v9, v7);
  }
  return this;
}

void sub_223F7BE4C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::WeightParams::IsInitialized(CoreML::Specification::WeightParams *this)
{
  return 1;
}

void *CoreML::Specification::WeightParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.WeightParams");
}

CoreML::Specification::QuantizationParams *CoreML::Specification::QuantizationParams::QuantizationParams(CoreML::Specification::QuantizationParams *this)
{
  *(void *)this = &unk_26D75F610;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::QuantizationParams *)&CoreML::Specification::_QuantizationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_223F7BF00(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::QuantizationParams *CoreML::Specification::QuantizationParams::QuantizationParams(CoreML::Specification::QuantizationParams *this, const CoreML::Specification::QuantizationParams *a2)
{
  *(void *)this = &unk_26D75F610;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 8) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 2) = *((void *)a2 + 2);
  *((_DWORD *)this + 9) = 0;
  int v5 = *((_DWORD *)a2 + 9);
  if (v5 == 101)
  {
    CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
    *((_DWORD *)this + 9) = 101;
    operator new();
  }
  if (v5 == 102)
  {
    CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
    *((_DWORD *)this + 9) = 102;
    operator new();
  }
  return this;
}

void sub_223F7C05C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v2, 0x10A1C403FC4B5CDLL);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::LinearQuantizationParams::MergeFrom(unint64_t *this, const CoreML::Specification::LinearQuantizationParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    _tc_google::protobuf::RepeatedField<float>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 4 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    int v8 = v3[10];
    uint64_t v7 = v3 + 10;
    _tc_google::protobuf::RepeatedField<float>::Reserve(v7, v8 + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v7 + 1) + 4 * (int)*v7 + 8), (const void *)(*((void *)a2 + 6) + 8), 4 * *((int *)a2 + 10));
    *v7 += *((_DWORD *)a2 + 10);
  }
  return this;
}

void CoreML::Specification::QuantizationParams::~QuantizationParams(CoreML::Specification::QuantizationParams *this)
{
  *(void *)this = &unk_26D75F610;
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::QuantizationParams::~QuantizationParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::QuantizationParams::clear_QuantizationType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 102 || v2 == 101)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

void CoreML::Specification::QuantizationParams::New(CoreML::Specification::QuantizationParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7C2D0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::QuantizationParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::QuantizationParams>);
  }
  return result;
}

uint64_t CoreML::Specification::QuantizationParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return CoreML::Specification::QuantizationParams::clear_QuantizationType(this);
}

BOOL CoreML::Specification::QuantizationParams::MergePartialFromCodedStream(CoreML::Specification::QuantizationParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = *(unsigned __int8 **)a2;
        unint64_t v6 = *((void *)a2 + 1);
        if (*(void *)a2 >= v6)
        {
          uint64_t v8 = 0;
LABEL_44:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_45;
          }
          goto LABEL_8;
        }
        uint64_t v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 < 1)
        {
          if ((unint64_t)v7 < v6)
          {
            int v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(void *)a2 = v5 + 2;
              unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_8;
            }
          }
          goto LABEL_44;
        }
        *(void *)a2 = v7;
        unint64_t v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_45;
        }
LABEL_8:
        unsigned int v11 = v9 >> 3;
        if (v9 >> 3 == 102)
        {
          if (v9 != 50) {
            goto LABEL_45;
          }
          if (*((_DWORD *)this + 9) != 102)
          {
            CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
            *((_DWORD *)this + 9) = 102;
            operator new();
          }
          uint64_t v14 = (CoreML::Specification::LookUpTableQuantizationParams *)*((void *)this + 3);
          uint64_t v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacunint64_t k = *v16;
            *(void *)a2 = v16 + 1;
          }
          unint64_t v21 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
          if ((v21 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v23 = v21;
          BOOL result = CoreML::Specification::LookUpTableQuantizationParams::MergePartialFromCodedStream(v14, (char **)a2, v22);
          if (!result) {
            return result;
          }
          goto LABEL_41;
        }
        if (v11 != 101) {
          break;
        }
        if (v9 != 42) {
          goto LABEL_45;
        }
        if (*((_DWORD *)this + 9) != 101)
        {
          CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
          *((_DWORD *)this + 9) = 101;
          operator new();
        }
        uint64_t v15 = (CoreML::Specification::LinearQuantizationParams *)*((void *)this + 3);
        uint64_t v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int v19 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0) {
            return 0;
          }
        }
        else
        {
          int v19 = *v18;
          *(void *)a2 = v18 + 1;
        }
        unint64_t v25 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v19);
        if ((v25 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v23 = v25;
        BOOL result = CoreML::Specification::LinearQuantizationParams::MergePartialFromCodedStream(v15, (char **)a2, v26);
        if (!result) {
          return result;
        }
LABEL_41:
        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v23)) {
          return 0;
        }
      }
      if (v11 != 1 || v9 != 8) {
        break;
      }
      uint64_t v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
      {
        *((void *)this + 2) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v13;
        *(void *)a2 = v13 + 1;
      }
    }
LABEL_45:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F7C5CC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403FC4B5CDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::QuantizationParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  int v7 = *(_DWORD *)(v5 + 36);
  if (v7 == 101)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x65, *(void *)(v5 + 24), a2, a4);
    int v7 = *(_DWORD *)(v5 + 36);
  }
  if (v7 == 102)
  {
    uint64_t v8 = *(void *)(v5 + 24);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x66, v8, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::QuantizationParams::ByteSizeLong(CoreML::Specification::QuantizationParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  unint64_t v3 = (9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6;
  if (v2) {
    uint64_t v4 = v3 + 1;
  }
  else {
    uint64_t v4 = 0;
  }
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 102)
  {
    unint64_t v9 = (unsigned int *)*((void *)this + 3);
    uint64_t v10 = v9[4];
    uint64_t v11 = 4 * v10;
    if (v10)
    {
      if ((v11 & 0x80000000) != 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v12 = 0;
    }
    uint64_t v13 = v12 + v11;
    v9[8] = v11;
    v9[9] = v13;
    uint64_t v7 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v8 = v4 + v13;
    goto LABEL_13;
  }
  if (v5 == 101)
  {
    uint64_t v6 = CoreML::Specification::LinearQuantizationParams::ByteSizeLong(*((CoreML::Specification::LinearQuantizationParams **)this
                                                                       + 3));
    uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v8 = v4 + v6;
LABEL_13:
    uint64_t v4 = v8 + v7 + 2;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::QuantizationParams::IsInitialized(CoreML::Specification::QuantizationParams *this)
{
  return 1;
}

void *CoreML::Specification::QuantizationParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.QuantizationParams");
}

CoreML::Specification::LinearQuantizationParams *CoreML::Specification::LinearQuantizationParams::LinearQuantizationParams(CoreML::Specification::LinearQuantizationParams *this)
{
  *(void *)this = &unk_26D75F6A8;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LinearQuantizationParams *)&CoreML::Specification::_LinearQuantizationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 15) = 0;
  return this;
}

void sub_223F7C80C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v1 + 48);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  CoreML::Specification::LinearQuantizationParams::LinearQuantizationParams(v1);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LinearQuantizationParams::~LinearQuantizationParams(CoreML::Specification::LinearQuantizationParams *this)
{
  *(void *)this = &unk_26D75F6A8;
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::LinearQuantizationParams::~LinearQuantizationParams(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LinearQuantizationParams::New(CoreML::Specification::LinearQuantizationParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7C93C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403FC4B5CDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LinearQuantizationParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LinearQuantizationParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LinearQuantizationParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

BOOL CoreML::Specification::LinearQuantizationParams::MergePartialFromCodedStream(CoreML::Specification::LinearQuantizationParams *this, char **a2, unsigned int a3)
{
  int v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            uint64_t v7 = *a2;
            if (*a2 < a2[1]) {
              break;
            }
            uint64_t v8 = 0;
LABEL_7:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v9 & 0x100000000) != 0) {
              goto LABEL_8;
            }
LABEL_20:
            if (v9) {
              BOOL v15 = (v9 & 7) == 4;
            }
            else {
              BOOL v15 = 1;
            }
            if (v15) {
              return 1;
            }
            if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
          }
            }
          uint64_t v8 = *v7;
          if (*v7 < 1) {
            goto LABEL_7;
          }
          *a2 = v7 + 1;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_20;
          }
LABEL_8:
          if (v9 >> 3 != 2) {
            break;
          }
          if (v9 == 21)
          {
            unsigned int v16 = 18;
            uint64_t v17 = (unsigned int **)a2;
            uint64_t v18 = (uint64_t)v5;
            goto LABEL_28;
          }
          if (v9 != 18) {
            goto LABEL_20;
          }
          uint64_t v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacunint64_t k = *v13;
            *a2 = v13 + 1;
          }
          if ((VarintSizeAsIntFallback & 3) != 0) {
            return 0;
          }
          signed int v33 = *v5;
          unsigned int v34 = VarintSizeAsIntFallback >> 2;
          int v35 = _tc_google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
          int v36 = _tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v36 >= v35) {
            int v37 = v35;
          }
          else {
            int v37 = v36;
          }
          if (v35 == -1) {
            int v37 = v36;
          }
          if (v37 >= (uint64_t)VarintSizeAsIntFallback)
          {
            signed int v43 = v33 + v34;
            if ((int)*v5 >= (int)(v33 + v34))
            {
              uint64_t v44 = *((void *)this + 6);
            }
            else
            {
              _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v33 + v34);
              uint64_t v44 = *((void *)this + 6);
              uint64_t v45 = 4 * v43 - 4 * *((int *)this + 10);
              if (v45 >= 1) {
                bzero((void *)(v44 + 8 + 4 * *((int *)this + 10)), 4 * (((unint64_t)v45 >> 2) - ((unint64_t)v45 > 3)) + 4);
              }
            }
            unsigned int *v5 = v43;
            uint64_t v47 = v44 + 8;
            if (!v44) {
              uint64_t v47 = 0;
            }
            if (!_tc_google::protobuf::io::CodedInputStream::ReadRaw((_tc_google::protobuf::io::CodedInputStream *)a2, (char *)(v47 + 4 * v33), VarintSizeAsIntFallback))
            {
              if ((int)*v5 >= 1)
              {
                BOOL result = 0;
                unsigned int *v5 = v33;
                return result;
              }
              return 0;
            }
          }
          else if (VarintSizeAsIntFallback >= 4)
          {
            if (v34 <= 1) {
              int v38 = 1;
            }
            else {
              int v38 = VarintSizeAsIntFallback >> 2;
            }
            do
            {
              unsigned int v49 = 0;
              uint64_t v39 = (unsigned int *)*a2;
              if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
              {
                BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v49);
                if (!result) {
                  return result;
                }
                unsigned int v40 = v49;
              }
              else
              {
                unsigned int v40 = *v39;
                *a2 = (char *)(v39 + 1);
              }
              signed int v41 = *((_DWORD *)this + 10);
              if (v41 == *((_DWORD *)this + 11))
              {
                _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v41 + 1);
                signed int v41 = *v5;
              }
              uint64_t v42 = *((void *)this + 6);
              *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v41 + 1;
              *(_DWORD *)(v42 + 4 * v41 + 8) = v40;
              --v38;
            }
            while (v38);
          }
        }
        if (v9 >> 3 != 1) {
          goto LABEL_20;
        }
        if (v9 != 13) {
          break;
        }
        unsigned int v16 = 10;
        uint64_t v17 = (unsigned int **)a2;
        uint64_t v18 = (uint64_t)v6;
LABEL_28:
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(_tc_google::protobuf::internal::WireFormatLite::FieldType)2>(1, v16, v17, v18))return 0; {
      }
        }
      if (v9 != 10) {
        goto LABEL_20;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unsigned int v12 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v12 = *v11;
        *a2 = v11 + 1;
      }
      if ((v12 & 3) != 0) {
        return 0;
      }
      signed int v19 = *v6;
      unsigned int v20 = v12 >> 2;
      int v21 = _tc_google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      int v22 = _tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v22 >= v21) {
        int v23 = v21;
      }
      else {
        int v23 = v22;
      }
      if (v21 == -1) {
        int v23 = v22;
      }
      if (v23 >= (uint64_t)v12) {
        break;
      }
      if (v12 >= 4)
      {
        if (v20 <= 1) {
          int v24 = 1;
        }
        else {
          int v24 = v12 >> 2;
        }
        do
        {
          unsigned int v48 = 0;
          unint64_t v25 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v48);
            if (!result) {
              return result;
            }
            unsigned int v26 = v48;
          }
          else
          {
            unsigned int v26 = *v25;
            *a2 = (char *)(v25 + 1);
          }
          signed int v27 = *((_DWORD *)this + 4);
          if (v27 == *((_DWORD *)this + 5))
          {
            _tc_google::protobuf::RepeatedField<float>::Reserve(v6, v27 + 1);
            signed int v27 = *v6;
          }
          uint64_t v28 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v27 + 1;
          *(_DWORD *)(v28 + 4 * v27 + 8) = v26;
          --v24;
        }
        while (v24);
      }
    }
    signed int v30 = v19 + v20;
    if ((int)*v6 >= (int)(v19 + v20))
    {
      uint64_t v31 = *((void *)this + 3);
    }
    else
    {
      _tc_google::protobuf::RepeatedField<float>::Reserve(v6, v19 + v20);
      uint64_t v31 = *((void *)this + 3);
      uint64_t v32 = 4 * v30 - 4 * *((int *)this + 4);
      if (v32 >= 1) {
        bzero((void *)(v31 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v32 >> 2) - ((unint64_t)v32 > 3)) + 4);
      }
    }
    *uint64_t v6 = v30;
    uint64_t v46 = v31 + 8;
    if (!v31) {
      uint64_t v46 = 0;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::ReadRaw((_tc_google::protobuf::io::CodedInputStream *)a2, (char *)(v46 + 4 * v19), v12));
  if ((int)*v6 >= 1)
  {
    BOOL result = 0;
    *uint64_t v6 = v19;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::LinearQuantizationParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *unint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(void *)(v5 + 24);
    if (v13) {
      uint64_t v14 = (_tc_google::protobuf::internal::WireFormatLite *)(v13 + 8);
    }
    else {
      uint64_t v14 = 0;
    }
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloatArray(v14, (const float *)*(unsigned int *)(v5 + 16), a2, a4);
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x12u);
      int v15 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v15 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v15;
    }
    unsigned int v16 = *(_DWORD *)(v5 + 56);
    if (v15 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v16);
    }
    else
    {
      uint64_t v17 = *((void *)a2 + 1);
      if (v16 < 0x80)
      {
        unsigned int v19 = *(_DWORD *)(v5 + 56);
        uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v18++ = v16 | 0x80;
          unsigned int v19 = v16 >> 7;
          unsigned int v20 = v16 >> 14;
          v16 >>= 7;
        }
        while (v20);
      }
      unsigned char *v18 = v19;
      int v21 = v18 - v17 + 1;
      *((void *)a2 + 1) += v21;
      *((_DWORD *)a2 + 4) -= v21;
    }
    uint64_t v22 = *(void *)(v5 + 48);
    if (v22) {
      int v23 = (_tc_google::protobuf::internal::WireFormatLite *)(v22 + 8);
    }
    else {
      int v23 = 0;
    }
    int v24 = (const float *)*(unsigned int *)(v5 + 40);
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloatArray(v23, v24, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::LinearQuantizationParams::ByteSizeLong(CoreML::Specification::LinearQuantizationParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 8) = v2;
  uint64_t v4 = v3 + v2;
  uint64_t v5 = *((unsigned int *)this + 10);
  uint64_t v6 = 4 * v5;
  if (v5)
  {
    if ((v6 & 0x80000000) != 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v7;
  }
  uint64_t v8 = v4 + v6;
  *((_DWORD *)this + 14) = v6;
  *((_DWORD *)this + 15) = v8;
  return v8;
}

uint64_t CoreML::Specification::LinearQuantizationParams::IsInitialized(CoreML::Specification::LinearQuantizationParams *this)
{
  return 1;
}

void *CoreML::Specification::LinearQuantizationParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LinearQuantizationParams");
}

CoreML::Specification::LookUpTableQuantizationParams *CoreML::Specification::LookUpTableQuantizationParams::LookUpTableQuantizationParams(CoreML::Specification::LookUpTableQuantizationParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75F740;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LookUpTableQuantizationParams *)&CoreML::Specification::_LookUpTableQuantizationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F7D104(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LookUpTableQuantizationParams::~LookUpTableQuantizationParams(CoreML::Specification::LookUpTableQuantizationParams *this)
{
  *(void *)this = &unk_26D75F740;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::LookUpTableQuantizationParams::~LookUpTableQuantizationParams(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LookUpTableQuantizationParams::New(CoreML::Specification::LookUpTableQuantizationParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7D218(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LookUpTableQuantizationParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LookUpTableQuantizationParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LookUpTableQuantizationParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

BOOL CoreML::Specification::LookUpTableQuantizationParams::MergePartialFromCodedStream(CoreML::Specification::LookUpTableQuantizationParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(_tc_google::protobuf::internal::WireFormatLite::FieldType)2>(1, 0xAu, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        VarintSizeAsIntFallbacunint64_t k = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      signed int v13 = *v5;
      unsigned int v14 = VarintSizeAsIntFallback >> 2;
      int v15 = _tc_google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      int v16 = _tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v16 >= v15) {
        int v17 = v15;
      }
      else {
        int v17 = v16;
      }
      if (v15 == -1) {
        int v17 = v16;
      }
      if (v17 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v14 <= 1) {
          int v18 = 1;
        }
        else {
          int v18 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v28 = 0;
          unsigned int v19 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v28);
            if (!result) {
              return result;
            }
            unsigned int v20 = v28;
          }
          else
          {
            unsigned int v20 = *v19;
            *a2 = (char *)(v19 + 1);
          }
          signed int v21 = *((_DWORD *)this + 4);
          if (v21 == *((_DWORD *)this + 5))
          {
            _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v21 + 1);
            signed int v21 = *v5;
          }
          uint64_t v22 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v21 + 1;
          *(_DWORD *)(v22 + 4 * v21 + 8) = v20;
          --v18;
        }
        while (v18);
      }
    }
    signed int v24 = v13 + v14;
    if ((int)*v5 >= (int)(v13 + v14))
    {
      uint64_t v25 = *((void *)this + 3);
    }
    else
    {
      _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v13 + v14);
      uint64_t v25 = *((void *)this + 3);
      uint64_t v26 = 4 * v24 - 4 * *((int *)this + 4);
      if (v26 >= 1) {
        bzero((void *)(v25 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v26 >> 2) - ((unint64_t)v26 > 3)) + 4);
      }
    }
    unsigned int *v5 = v24;
    uint64_t v27 = v25 + 8;
    if (!v25) {
      uint64_t v27 = 0;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::ReadRaw((_tc_google::protobuf::io::CodedInputStream *)a2, (char *)(v27 + 4 * v13), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    unsigned int *v5 = v13;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::LookUpTableQuantizationParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *unint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(void *)(v5 + 24);
    if (v13) {
      unsigned int v14 = (_tc_google::protobuf::internal::WireFormatLite *)(v13 + 8);
    }
    else {
      unsigned int v14 = 0;
    }
    int v15 = (const float *)*(unsigned int *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloatArray(v14, v15, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::LookUpTableQuantizationParams::ByteSizeLong(CoreML::Specification::LookUpTableQuantizationParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::LookUpTableQuantizationParams::IsInitialized(CoreML::Specification::LookUpTableQuantizationParams *this)
{
  return 1;
}

void *CoreML::Specification::LookUpTableQuantizationParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LookUpTableQuantizationParams");
}

CoreML::Specification::ConvolutionLayerParams *CoreML::Specification::ConvolutionLayerParams::ConvolutionLayerParams(CoreML::Specification::ConvolutionLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75F7D8;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 138) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((void *)this + 21) = 0;
  return this;
}

void sub_223F7D708(_Unwind_Exception *a1)
{
  uint64_t v4 = (void *)v1[12];
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  CoreML::Specification::ConvolutionLayerParams::ConvolutionLayerParams(v1);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ConvolutionLayerParams::~ConvolutionLayerParams(CoreML::Specification::ConvolutionLayerParams *this)
{
  *(void *)this = &unk_26D75F7D8;
  CoreML::Specification::ConvolutionLayerParams::SharedDtor((uint64_t *)this);
  uint64_t v2 = (void *)*((void *)this + 12);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 9);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  uint64_t v4 = (void *)*((void *)this + 6);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 3);
  if (v5 && !*v5) {
    operator delete(v5);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ConvolutionLayerParams::~ConvolutionLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ConvolutionLayerParams::SharedDtor(uint64_t *this)
{
  uint64_t v1 = (uint64_t)this;
  if (this != &CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    uint64_t v2 = this[14];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = *(uint64_t **)(v1 + 120);
    if (this) {
      this = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*this + 8))(this);
    }
  }
  if (*(_DWORD *)(v1 + 172))
  {
    return (uint64_t *)CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType(v1);
  }
  return this;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 172);
  if (v2 == 51 || v2 == 50)
  {
    this = *(void *)(this + 160);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 172) = 0;
  return this;
}

uint64_t *CoreML::Specification::ConvolutionLayerParams::default_instance(CoreML::Specification::ConvolutionLayerParams *this)
{
  return &CoreML::Specification::_ConvolutionLayerParams_default_instance_;
}

void CoreML::Specification::ConvolutionLayerParams::New(CoreML::Specification::ConvolutionLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7D9A0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C407928EB6DLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ConvolutionLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ConvolutionLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::Clear(CoreML::Specification::ConvolutionLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_DWORD *)this + 22) = 0;
  uint64_t v2 = *((void *)this + 14);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 15);
  *((void *)this + 14) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((_WORD *)this + 76) = 0;
  *(_OWORD *)((char *)this + 12CoreML::Specification::Identity::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  return CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
}

uint64_t CoreML::Specification::ConvolutionLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConvolutionLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 88);
  int v6 = (unsigned int *)((char *)this + 64);
  unsigned int v7 = (unsigned int *)((char *)this + 40);
  uint64_t v8 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v9 = *(unsigned __int8 **)a2;
          unint64_t v10 = *((void *)a2 + 1);
          if (*(void *)a2 >= v10)
          {
            uint64_t v12 = 0;
LABEL_16:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
            unint64_t v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v13 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          unsigned int v11 = v9 + 1;
          uint64_t v12 = *v9;
          if ((char)*v9 < 1)
          {
            if ((unint64_t)v11 < v10)
            {
              int v14 = *v11;
              if ((v12 & ~v14) >= 0x80)
              {
                *(void *)a2 = v9 + 2;
                unint64_t v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
                goto LABEL_17;
              }
            }
            goto LABEL_16;
          }
          *(void *)a2 = v11;
          unint64_t v13 = v12 | 0x100000000;
          if ((v13 & 0x100000000) == 0) {
            goto LABEL_9;
          }
LABEL_17:
          unsigned int v17 = v13 >> 3;
          if (v13 >> 3 > 0x31) {
            break;
          }
          if (v13 >> 3 > 0x13)
          {
            if (v17 == 20)
            {
              if (v13 != 160)
              {
                if (v13 != 162) {
                  goto LABEL_9;
                }
                signed int v30 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
                {
                  VarintSizeAsIntFallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (VarintSizeAsIntFallback < 0) {
                    return 0;
                  }
                }
                else
                {
                  VarintSizeAsIntFallbacunint64_t k = *v30;
                  *(void *)a2 = v30 + 1;
                }
                int v56 = _tc_google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
                {
                  do
                  {
                    int v69 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v69 < 0)
                    {
                      Varint64Fallbacunint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                      if ((v72 & 1) == 0) {
                        return 0;
                      }
                      unint64_t v70 = Varint64Fallback;
                    }
                    else
                    {
                      unint64_t v70 = *v69;
                      *(void *)a2 = v69 + 1;
                    }
                    signed int v73 = *((_DWORD *)this + 4);
                    if (v73 == *((_DWORD *)this + 5))
                    {
                      _tc_google::protobuf::RepeatedField<double>::Reserve(v8, v73 + 1);
                      signed int v73 = *v8;
                    }
                    uint64_t v74 = *((void *)this + 3);
                    *((_DWORD *)this + 4) = v73 + 1;
                    *(void *)(v74 + 8 * v73 + 8) = v70;
                  }
                  while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) > 0);
                }
                goto LABEL_170;
              }
              unsigned int v40 = 162;
              signed int v41 = a2;
              uint64_t v42 = (uint64_t)v8;
              goto LABEL_98;
            }
            if (v17 == 30)
            {
              if (v13 != 240)
              {
                if (v13 != 242) {
                  goto LABEL_9;
                }
                uint64_t v32 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v32 < 0)
                {
                  int v33 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v33 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v33 = *v32;
                  *(void *)a2 = v32 + 1;
                }
                int v56 = _tc_google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
                if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
                {
                  do
                  {
                    unint64_t v75 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v75 < 0)
                    {
                      unint64_t v77 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                      if ((v78 & 1) == 0) {
                        return 0;
                      }
                      unint64_t v76 = v77;
                    }
                    else
                    {
                      unint64_t v76 = *v75;
                      *(void *)a2 = v75 + 1;
                    }
                    signed int v79 = *((_DWORD *)this + 10);
                    if (v79 == *((_DWORD *)this + 11))
                    {
                      _tc_google::protobuf::RepeatedField<double>::Reserve(v7, v79 + 1);
                      signed int v79 = *v7;
                    }
                    uint64_t v80 = *((void *)this + 6);
                    *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v79 + 1;
                    *(void *)(v80 + 8 * v79 + 8) = v76;
                  }
                  while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) > 0);
                }
                goto LABEL_170;
              }
              unsigned int v40 = 242;
              signed int v41 = a2;
              uint64_t v42 = (uint64_t)v7;
              goto LABEL_98;
            }
            if (v17 != 40) {
              goto LABEL_9;
            }
            if (v13 == 64)
            {
              unsigned int v40 = 322;
              signed int v41 = a2;
              uint64_t v42 = (uint64_t)v6;
              goto LABEL_98;
            }
            if (v13 != 66) {
              goto LABEL_9;
            }
            uint64_t v22 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
            {
              int v23 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v23 < 0) {
                return 0;
              }
            }
            else
            {
              int v23 = *v22;
              *(void *)a2 = v22 + 1;
            }
            int v56 = _tc_google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
            if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
            {
              do
              {
                unsigned int v57 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v57 < 0)
                {
                  unint64_t v59 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                  if ((v60 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v58 = v59;
                }
                else
                {
                  unint64_t v58 = *v57;
                  *(void *)a2 = v57 + 1;
                }
                signed int v61 = *((_DWORD *)this + 16);
                if (v61 == *((_DWORD *)this + 17))
                {
                  _tc_google::protobuf::RepeatedField<double>::Reserve(v6, v61 + 1);
                  signed int v61 = *v6;
                }
                uint64_t v62 = *((void *)this + 9);
                *((_DWORD *)this + 16) = v61 + 1;
                *(void *)(v62 + 8 * v61 + 8) = v58;
              }
              while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) > 0);
            }
LABEL_170:
            _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v56);
          }
          else if (v17 == 1)
          {
            if (v13 != 8) {
              goto LABEL_9;
            }
            unsigned int v19 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v19 & 0x80000000) == 0)
            {
              *((void *)this + 16) = *v19;
              goto LABEL_67;
            }
            *((void *)this + 16) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v50 & 1) == 0) {
              return 0;
            }
          }
          else if (v17 == 2)
          {
            if (v13 != 16) {
              goto LABEL_9;
            }
            unsigned int v19 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
            {
              *((void *)this + 17) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v51 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 17) = *v19;
LABEL_67:
              *(void *)a2 = v19 + 1;
            }
          }
          else
          {
            if (v17 != 10 || v13 != 80) {
              goto LABEL_9;
            }
            unsigned int v19 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v19 & 0x80000000) == 0)
            {
              *((void *)this + 18) = *v19;
              goto LABEL_67;
            }
            *((void *)this + 18) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v47 & 1) == 0) {
              return 0;
            }
          }
        }
        if (v13 >> 3 <= 0x45) {
          break;
        }
        if (v13 >> 3 > 0x5A)
        {
          if (v17 == 91)
          {
            if (v13 == 218)
            {
              int v18 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
              if (!v18) {
                operator new();
              }
              goto LABEL_87;
            }
LABEL_9:
            if (v13) {
              BOOL v15 = (v13 & 7) == 4;
            }
            else {
              BOOL v15 = 1;
            }
            if (v15) {
              return 1;
            }
            if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v17 != 100) {
              goto LABEL_9;
            }
            if (v13 != 32)
            {
              if (v13 != 34) {
                goto LABEL_9;
              }
              signed int v24 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
              {
                int v25 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v25 < 0) {
                  return 0;
                }
              }
              else
              {
                int v25 = *v24;
                *(void *)a2 = v24 + 1;
              }
              int v56 = _tc_google::protobuf::io::CodedInputStream::PushLimit(a2, v25);
              if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
              {
                do
                {
                  unsigned int v63 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v63 < 0)
                  {
                    unint64_t v65 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                    if ((v66 & 1) == 0) {
                      return 0;
                    }
                    unint64_t v64 = v65;
                  }
                  else
                  {
                    unint64_t v64 = *v63;
                    *(void *)a2 = v63 + 1;
                  }
                  signed int v67 = *((_DWORD *)this + 22);
                  if (v67 == *((_DWORD *)this + 23))
                  {
                    _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v67 + 1);
                    signed int v67 = *v5;
                  }
                  uint64_t v68 = *((void *)this + 12);
                  *((_DWORD *)this + 22) = v67 + 1;
                  *(void *)(v68 + 8 * v67 + 8) = v64;
                }
                while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) > 0);
              }
              goto LABEL_170;
            }
            unsigned int v40 = 802;
            signed int v41 = a2;
            uint64_t v42 = (uint64_t)v5;
LABEL_98:
            if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(2, v40, v41, v42) & 1) == 0)return 0; {
          }
            }
        }
        else
        {
          if (v17 != 70)
          {
            if (v17 == 90 && v13 == 210)
            {
              int v18 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
              if (!v18) {
                operator new();
              }
LABEL_87:
              unsigned int v34 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v34 < 0)
              {
                int v35 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v35 < 0) {
                  return 0;
                }
              }
              else
              {
                int v35 = *v34;
                *(void *)a2 = v34 + 1;
              }
              unint64_t v36 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v35);
              if ((v36 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v38 = v36;
              uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v18, a2, v37);
              if (!result) {
                return result;
              }
              goto LABEL_125;
            }
            goto LABEL_9;
          }
          if (v13 != 48) {
            goto LABEL_9;
          }
          uint64_t v26 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
          {
            unint64_t v27 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v49 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v27 = *v26;
            *(void *)a2 = v26 + 1;
          }
          *((unsigned char *)this + 153) = v27 != 0;
        }
      }
      if (v17 != 50) {
        break;
      }
      if (v13 != 146) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 43) != 50)
      {
        CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
        *((_DWORD *)this + 43) = 50;
        operator new();
      }
      unsigned int v28 = (CoreML::Specification::ValidPadding *)*((void *)this + 20);
      signed int v43 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v43 < 0)
      {
        int v44 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v44 < 0) {
          return 0;
        }
      }
      else
      {
        int v44 = *v43;
        *(void *)a2 = v43 + 1;
      }
      unint64_t v52 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v44);
      if ((v52 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v38 = v52;
      uint64_t result = CoreML::Specification::ValidPadding::MergePartialFromCodedStream(v28, (char **)a2, v53);
      if (!result) {
        return result;
      }
LABEL_125:
      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v38)) {
        return 0;
      }
    }
    if (v17 == 51) {
      break;
    }
    if (v17 != 60 || v13 != 224) {
      goto LABEL_9;
    }
    unsigned int v20 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
    {
      unint64_t v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v48 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      unint64_t v21 = *v20;
      *(void *)a2 = v20 + 1;
    }
    *((unsigned char *)this + 152) = v21 != 0;
  }
  if (v13 != 154) {
    goto LABEL_9;
  }
  if (*((_DWORD *)this + 43) != 51)
  {
    CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
    *((_DWORD *)this + 43) = 51;
    operator new();
  }
  unint64_t v29 = (CoreML::Specification::SamePadding *)*((void *)this + 20);
  uint64_t v45 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
  {
    int v46 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v46 < 0) {
      return 0;
    }
  }
  else
  {
    int v46 = *v45;
    *(void *)a2 = v45 + 1;
  }
  unint64_t v54 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v46);
  if ((v54 & 0x8000000000000000) == 0)
  {
    int v38 = v54;
    uint64_t result = CoreML::Specification::SamePadding::MergePartialFromCodedStream(v29, (char **)a2, v55);
    if (!result) {
      return result;
    }
    goto LABEL_125;
  }
  return 0;
}

void sub_223F7E38C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConvolutionLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 128);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 136);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  unint64_t v8 = *(void *)(v5 + 144);
  if (v8) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(10, v8, a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xA2u);
      int v9 = *((_DWORD *)a2 + 4);
    }
    else
    {
      **((_WORD **)a2 + 1) = 418;
      *((void *)a2 + 1) += 2;
      int v9 = *((_DWORD *)a2 + 4) - 2;
      *((_DWORD *)a2 + 4) = v9;
    }
    unsigned int v10 = *(_DWORD *)(v5 + 32);
    if (v9 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v10);
    }
    else
    {
      uint64_t v11 = *((void *)a2 + 1);
      if (v10 < 0x80)
      {
        unsigned int v13 = *(_DWORD *)(v5 + 32);
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v12++ = v10 | 0x80;
          unsigned int v13 = v10 >> 7;
          unsigned int v14 = v10 >> 14;
          v10 >>= 7;
        }
        while (v14);
      }
      *uint64_t v12 = v13;
      int v15 = v12 - v11 + 1;
      *((void *)a2 + 1) += v15;
      *((_DWORD *)a2 + 4) -= v15;
    }
    uint64_t v16 = *(unsigned int *)(v5 + 16);
    if ((int)v16 >= 1)
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v18);
        }
        else
        {
          uint64_t v19 = *((void *)a2 + 1);
          if (v18 < 0x80)
          {
            unint64_t v21 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v20++ = v18 | 0x80;
              unint64_t v21 = v18 >> 7;
              unint64_t v22 = v18 >> 14;
              v18 >>= 7;
            }
            while (v22);
          }
          unsigned char *v20 = v21;
          int v23 = v20 - v19 + 1;
          *((void *)a2 + 1) += v23;
          *((_DWORD *)a2 + 4) -= v23;
        }
      }
    }
  }
  if (*(int *)(v5 + 40) > 0)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xF2u);
      int v24 = *((_DWORD *)a2 + 4);
    }
    else
    {
      **((_WORD **)a2 + 1) = 498;
      *((void *)a2 + 1) += 2;
      int v24 = *((_DWORD *)a2 + 4) - 2;
      *((_DWORD *)a2 + 4) = v24;
    }
    unsigned int v25 = *(_DWORD *)(v5 + 56);
    if (v24 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v25);
    }
    else
    {
      uint64_t v26 = *((void *)a2 + 1);
      if (v25 < 0x80)
      {
        unsigned int v28 = *(_DWORD *)(v5 + 56);
        unint64_t v27 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v27 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v27++ = v25 | 0x80;
          unsigned int v28 = v25 >> 7;
          unsigned int v29 = v25 >> 14;
          v25 >>= 7;
        }
        while (v29);
      }
      *unint64_t v27 = v28;
      int v30 = v27 - v26 + 1;
      *((void *)a2 + 1) += v30;
      *((_DWORD *)a2 + 4) -= v30;
    }
    uint64_t v31 = *(unsigned int *)(v5 + 40);
    if ((int)v31 >= 1)
    {
      for (uint64_t j = 0; j != v31; ++j)
      {
        unint64_t v33 = *(void *)(*(void *)(v5 + 48) + 8 * j + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v33);
        }
        else
        {
          uint64_t v34 = *((void *)a2 + 1);
          if (v33 < 0x80)
          {
            unint64_t v36 = *(void *)(*(void *)(v5 + 48) + 8 * j + 8);
            int v35 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v35 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v35++ = v33 | 0x80;
              unint64_t v36 = v33 >> 7;
              unint64_t v37 = v33 >> 14;
              v33 >>= 7;
            }
            while (v37);
          }
          *int v35 = v36;
          int v38 = v35 - v34 + 1;
          *((void *)a2 + 1) += v38;
          *((_DWORD *)a2 + 4) -= v38;
        }
      }
    }
  }
  if (*(int *)(v5 + 64) > 0)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x142u);
      int v39 = *((_DWORD *)a2 + 4);
    }
    else
    {
      **((_WORD **)a2 + 1) = 706;
      *((void *)a2 + 1) += 2;
      int v39 = *((_DWORD *)a2 + 4) - 2;
      *((_DWORD *)a2 + 4) = v39;
    }
    unsigned int v40 = *(_DWORD *)(v5 + 80);
    if (v39 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v40);
    }
    else
    {
      uint64_t v41 = *((void *)a2 + 1);
      if (v40 < 0x80)
      {
        unsigned int v43 = *(_DWORD *)(v5 + 80);
        uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v42++ = v40 | 0x80;
          unsigned int v43 = v40 >> 7;
          unsigned int v44 = v40 >> 14;
          v40 >>= 7;
        }
        while (v44);
      }
      *uint64_t v42 = v43;
      int v45 = v42 - v41 + 1;
      *((void *)a2 + 1) += v45;
      *((_DWORD *)a2 + 4) -= v45;
    }
    uint64_t v46 = *(unsigned int *)(v5 + 64);
    if ((int)v46 >= 1)
    {
      for (uint64_t k = 0; k != v46; ++k)
      {
        unint64_t v48 = *(void *)(*(void *)(v5 + 72) + 8 * k + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v48);
        }
        else
        {
          uint64_t v49 = *((void *)a2 + 1);
          if (v48 < 0x80)
          {
            unint64_t v51 = *(void *)(*(void *)(v5 + 72) + 8 * k + 8);
            char v50 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            char v50 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v50++ = v48 | 0x80;
              unint64_t v51 = v48 >> 7;
              unint64_t v52 = v48 >> 14;
              v48 >>= 7;
            }
            while (v52);
          }
          *char v50 = v51;
          int v53 = v50 - v49 + 1;
          *((void *)a2 + 1) += v53;
          *((_DWORD *)a2 + 4) -= v53;
        }
      }
    }
  }
  int v54 = *(_DWORD *)(v5 + 172);
  if (v54 == 50)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x32, *(void *)(v5 + 160), a2, a4);
    int v54 = *(_DWORD *)(v5 + 172);
  }
  if (v54 == 51) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x33, *(void *)(v5 + 160), a2, a4);
  }
  if (*(unsigned char *)(v5 + 152)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(60, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 153)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(70, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    uint64_t v55 = *(void *)(v5 + 112);
    if (v55) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5A, v55, a2, a4);
    }
    uint64_t v56 = *(void *)(v5 + 120);
    if (v56) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x5B, v56, a2, a4);
    }
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x322u);
      int v57 = *((_DWORD *)a2 + 4);
    }
    else
    {
      **((_WORD **)a2 + 1) = 1698;
      *((void *)a2 + 1) += 2;
      int v57 = *((_DWORD *)a2 + 4) - 2;
      *((_DWORD *)a2 + 4) = v57;
    }
    unsigned int v58 = *(_DWORD *)(v5 + 104);
    if (v57 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v58);
    }
    else
    {
      uint64_t v59 = *((void *)a2 + 1);
      if (v58 < 0x80)
      {
        unsigned int v61 = *(_DWORD *)(v5 + 104);
        char v60 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        char v60 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v60++ = v58 | 0x80;
          unsigned int v61 = v58 >> 7;
          unsigned int v62 = v58 >> 14;
          v58 >>= 7;
        }
        while (v62);
      }
      *char v60 = v61;
      int v63 = v60 - v59 + 1;
      *((void *)a2 + 1) += v63;
      *((_DWORD *)a2 + 4) -= v63;
    }
    uint64_t v64 = *(unsigned int *)(v5 + 88);
    if ((int)v64 >= 1)
    {
      for (uint64_t m = 0; m != v64; ++m)
      {
        unint64_t v66 = *(void *)(*(void *)(v5 + 96) + 8 * m + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v66);
        }
        else
        {
          uint64_t v67 = *((void *)a2 + 1);
          if (v66 < 0x80)
          {
            unint64_t v69 = *(void *)(*(void *)(v5 + 96) + 8 * m + 8);
            uint64_t v68 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            uint64_t v68 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v68++ = v66 | 0x80;
              unint64_t v69 = v66 >> 7;
              unint64_t v70 = v66 >> 14;
              v66 >>= 7;
            }
            while (v70);
          }
          *uint64_t v68 = v69;
          int v71 = v68 - v67 + 1;
          *((void *)a2 + 1) += v71;
          *((_DWORD *)a2 + 4) -= v71;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::ByteSizeLong(CoreML::Specification::ConvolutionLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 10;
  }
  else {
    uint64_t v6 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
  }
  uint64_t v7 = v6 + 2;
LABEL_11:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v7 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 10;
      }
      else {
        uint64_t v13 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v8 += v13 + 2;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  uint64_t v15 = *((unsigned int *)this + 16);
  if ((int)v15 < 1)
  {
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    unsigned int v17 = (uint64_t *)(*((void *)this + 9) + 8);
    do
    {
      uint64_t v18 = *v17++;
      v16 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
      --v15;
    }
    while (v15);
    if (v16)
    {
      if ((v16 & 0x80000000) != 0) {
        uint64_t v19 = 12;
      }
      else {
        uint64_t v19 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v14 += v19;
    }
  }
  *((_DWORD *)this + 2CoreML::Specification::Identity::New(this, 0) = v16;
  uint64_t v20 = v14 + v16;
  uint64_t v21 = *((unsigned int *)this + 22);
  if ((int)v21 < 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 0;
    int v23 = (uint64_t *)(*((void *)this + 12) + 8);
    do
    {
      uint64_t v24 = *v23++;
      v22 += (9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6;
      --v21;
    }
    while (v21);
    if (v22)
    {
      if ((v22 & 0x80000000) != 0) {
        uint64_t v25 = 12;
      }
      else {
        uint64_t v25 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v20 += v25;
    }
  }
  *((_DWORD *)this + 26) = v22;
  uint64_t v26 = v20 + v22;
  if (this != (CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    unint64_t v27 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
    if (v27)
    {
      uint64_t v28 = CoreML::Specification::WeightParams::ByteSizeLong(v27);
      v26 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unsigned int v29 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
    if (v29)
    {
      uint64_t v30 = CoreML::Specification::WeightParams::ByteSizeLong(v29);
      v26 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v31 = *((void *)this + 16);
  if (v31) {
    v26 += ((9 * (__clz(v31 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v32 = *((void *)this + 17);
  if (v32) {
    v26 += ((9 * (__clz(v32 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v33 = *((void *)this + 18);
  if (v33) {
    v26 += ((9 * (__clz(v33 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 152)) {
    uint64_t v34 = v26 + 3;
  }
  else {
    uint64_t v34 = v26;
  }
  if (*((unsigned char *)this + 153)) {
    uint64_t v35 = v34 + 3;
  }
  else {
    uint64_t v35 = v34;
  }
  int v36 = *((_DWORD *)this + 43);
  if (v36 == 51)
  {
    uint64_t v38 = *((void *)this + 20);
    int v39 = *(_DWORD *)(v38 + 16);
    if (v39)
    {
      if (v39 < 0) {
        uint64_t v40 = 11;
      }
      else {
        uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v40 = 0;
    }
    *(_DWORD *)(v38 + 2CoreML::Specification::Identity::New(this, 0) = v40;
    v35 += v40 + 3;
  }
  else if (v36 == 50)
  {
    unint64_t v37 = CoreML::Specification::ValidPadding::ByteSizeLong(*((CoreML::Specification::ValidPadding **)this + 20));
    v35 += (uint64_t)v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 42) = v35;
  return v35;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::IsInitialized(CoreML::Specification::ConvolutionLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ConvolutionLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ConvolutionLayerParams");
}

CoreML::Specification::Convolution3DLayerParams *CoreML::Specification::Convolution3DLayerParams::Convolution3DLayerParams(CoreML::Specification::Convolution3DLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75F870;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 34) = 0;
  *(_OWORD *)((char *)this + 12CoreML::Specification::Identity::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  return this;
}

void sub_223F7EE90(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::Convolution3DLayerParams::~Convolution3DLayerParams(CoreML::Specification::Convolution3DLayerParams *this)
{
  *(void *)this = &unk_26D75F870;
  CoreML::Specification::Convolution3DLayerParams::SharedDtor((uint64_t *)this);
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::Convolution3DLayerParams::~Convolution3DLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::Convolution3DLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_Convolution3DLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[5];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[6];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::Convolution3DLayerParams::default_instance(CoreML::Specification::Convolution3DLayerParams *this)
{
  return &CoreML::Specification::_Convolution3DLayerParams_default_instance_;
}

void CoreML::Specification::Convolution3DLayerParams::New(CoreML::Specification::Convolution3DLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F7F06C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40381DED69);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::Convolution3DLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::Convolution3DLayerParams>);
  }
  return result;
}

double CoreML::Specification::Convolution3DLayerParams::Clear(CoreML::Specification::Convolution3DLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v5 = *((void *)this + 6);
  uint64_t v4 = (char *)this + 48;
  uint64_t v3 = v5;
  *((void *)v4 - 1) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)v4 + 1CoreML::Specification::Identity::New(this, 0) = 0;
  double result = 0.0;
  *((_OWORD *)v4 + 3) = 0u;
  *((_OWORD *)v4 + 4) = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *(_OWORD *)uint64_t v4 = 0u;
  return result;
}

BOOL CoreML::Specification::Convolution3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::Convolution3DLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            while (1)
            {
              while (1)
              {
LABEL_2:
                uint64_t v6 = *(unsigned __int8 **)a2;
                unint64_t v7 = *((void *)a2 + 1);
                if (*(void *)a2 >= v7)
                {
                  uint64_t v9 = 0;
                }
                else
                {
                  uint64_t v8 = v6 + 1;
                  uint64_t v9 = *v6;
                  if ((char)*v6 >= 1)
                  {
                    *(void *)a2 = v8;
                    unint64_t v10 = v9 | 0x100000000;
                    if ((v10 & 0x100000000) == 0) {
                      goto LABEL_9;
                    }
                    goto LABEL_17;
                  }
                  if ((unint64_t)v8 < v7)
                  {
                    int v11 = *v8;
                    if ((v9 & ~v11) >= 0x80)
                    {
                      *(void *)a2 = v6 + 2;
                      unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
                      goto LABEL_17;
                    }
                  }
                }
                unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
                unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
                if ((v10 & 0x100000000) == 0) {
                  goto LABEL_9;
                }
LABEL_17:
                unsigned int v14 = v10 >> 3;
                if (v10 >> 3 <= 0x31) {
                  break;
                }
                if (v10 >> 3 <= 0x45)
                {
                  if (v14 == 50)
                  {
                    if (v10 != 144) {
                      goto LABEL_9;
                    }
                    int v54 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v54 < 0)
                    {
                      Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                      if ((v67 & 1) == 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      Varint64Fallbacuint64_t k = *v54;
                      *(void *)a2 = v54 + 1;
                    }
                    *((unsigned char *)this + 104) = Varint64Fallback != 0;
                  }
                  else
                  {
                    if (v14 == 60)
                    {
                      if (v10 != 226) {
                        goto LABEL_9;
                      }
                      uint64_t v21 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
                      if (!v21) {
                        operator new();
                      }
                    }
                    else
                    {
                      if (v14 != 61 || v10 != 234) {
                        goto LABEL_9;
                      }
                      uint64_t v21 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
                      if (!v21) {
                        operator new();
                      }
                    }
                    uint64_t v56 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v56 < 0)
                    {
                      VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (VarintSizeAsIntFallback < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      VarintSizeAsIntFallbacuint64_t k = *v56;
                      *(void *)a2 = v56 + 1;
                    }
                    unint64_t v62 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
                    if ((v62 & 0x8000000000000000) != 0) {
                      return 0;
                    }
                    int v64 = v62;
                    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v21, a2, v63);
                    if (!result) {
                      return result;
                    }
                    if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v64)) {
                      return 0;
                    }
                  }
                }
                else
                {
                  switch(v14)
                  {
                    case 'F':
                      if (v10 != 48) {
                        goto LABEL_9;
                      }
                      unsigned int v17 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v18 = 0;
                      }
                      else
                      {
                        int v18 = *v17;
                        if ((*v17 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v17 + 1;
                          goto LABEL_154;
                        }
                      }
                      Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
                      int v18 = Varint32Fallback;
                      if (Varint32Fallback < 0) {
                        return 0;
                      }
LABEL_154:
                      *((_DWORD *)this + 27) = v18;
                      continue;
                    case 'P':
                      if (v10 != 128) {
                        goto LABEL_9;
                      }
                      uint64_t v24 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v25 = 0;
                      }
                      else
                      {
                        int v25 = *v24;
                        if ((*v24 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v24 + 1;
                          goto LABEL_157;
                        }
                      }
                      uint64_t v76 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25);
                      int v25 = v76;
                      if (v76 < 0) {
                        return 0;
                      }
LABEL_157:
                      *((_DWORD *)this + 28) = v25;
                      continue;
                    case 'Q':
                      if (v10 != 136) {
                        goto LABEL_9;
                      }
                      uint64_t v26 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v27 = 0;
                      }
                      else
                      {
                        int v27 = *v26;
                        if ((*v26 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v26 + 1;
                          goto LABEL_160;
                        }
                      }
                      uint64_t v77 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
                      int v27 = v77;
                      if (v77 < 0) {
                        return 0;
                      }
LABEL_160:
                      *((_DWORD *)this + 29) = v27;
                      continue;
                    case 'R':
                      if (v10 != 144) {
                        goto LABEL_9;
                      }
                      uint64_t v28 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v29 = 0;
                      }
                      else
                      {
                        int v29 = *v28;
                        if ((*v28 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v28 + 1;
                          goto LABEL_163;
                        }
                      }
                      uint64_t v78 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v29);
                      int v29 = v78;
                      if (v78 < 0) {
                        return 0;
                      }
LABEL_163:
                      *((_DWORD *)this + 3CoreML::Specification::Identity::New(this, 0) = v29;
                      continue;
                    case 'S':
                      if (v10 != 152) {
                        goto LABEL_9;
                      }
                      uint64_t v30 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v31 = 0;
                      }
                      else
                      {
                        int v31 = *v30;
                        if ((*v30 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v30 + 1;
                          goto LABEL_166;
                        }
                      }
                      uint64_t v79 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31);
                      int v31 = v79;
                      if (v79 < 0) {
                        return 0;
                      }
LABEL_166:
                      *((_DWORD *)this + 31) = v31;
                      continue;
                    case 'T':
                      if (v10 != 160) {
                        goto LABEL_9;
                      }
                      uint64_t v32 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v33 = 0;
                      }
                      else
                      {
                        int v33 = *v32;
                        if ((*v32 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v32 + 1;
                          goto LABEL_169;
                        }
                      }
                      uint64_t v80 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v33);
                      int v33 = v80;
                      if (v80 < 0) {
                        return 0;
                      }
LABEL_169:
                      *((_DWORD *)this + 32) = v33;
                      continue;
                    case 'U':
                      if (v10 != 168) {
                        goto LABEL_9;
                      }
                      uint64_t v34 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v35 = 0;
                      }
                      else
                      {
                        int v35 = *v34;
                        if ((*v34 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v34 + 1;
                          goto LABEL_172;
                        }
                      }
                      uint64_t v81 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                      int v35 = v81;
                      if (v81 < 0) {
                        return 0;
                      }
LABEL_172:
                      *((_DWORD *)this + 33) = v35;
                      continue;
                    case 'V':
                      if (v10 != 176) {
                        goto LABEL_9;
                      }
                      int v36 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v36 < 0)
                      {
                        unint64_t v37 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                        if ((v66 & 1) == 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        unint64_t v37 = *v36;
                        *(void *)a2 = v36 + 1;
                      }
                      *((unsigned char *)this + 105) = v37 != 0;
                      continue;
                    case 'W':
                      if (v10 == 184)
                      {
                        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(2, 0x2BAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
                      }
                        }
                      else
                      {
                        if (v10 != 186) {
                          goto LABEL_9;
                        }
                        uint64_t v38 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v38 < 0)
                        {
                          int v39 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v39 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v39 = *v38;
                          *(void *)a2 = v38 + 1;
                        }
                        int v68 = _tc_google::protobuf::io::CodedInputStream::PushLimit(a2, v39);
                        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
                        {
                          do
                          {
                            unint64_t v69 = *(char **)a2;
                            if (*(void *)a2 >= *((void *)a2 + 1) || *v69 < 0)
                            {
                              unint64_t v71 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                              if ((v72 & 1) == 0) {
                                return 0;
                              }
                              unint64_t v70 = v71;
                            }
                            else
                            {
                              unint64_t v70 = *v69;
                              *(void *)a2 = v69 + 1;
                            }
                            signed int v73 = *((_DWORD *)this + 4);
                            if (v73 == *((_DWORD *)this + 5))
                            {
                              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v73 + 1);
                              signed int v73 = *v5;
                            }
                            uint64_t v74 = *((void *)this + 3);
                            *((_DWORD *)this + 4) = v73 + 1;
                            *(void *)(v74 + 8 * v73 + 8) = v70;
                          }
                          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) > 0);
                        }
                        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v68);
                      }
                      break;
                    default:
                      goto LABEL_9;
                  }
                }
              }
              if (v10 >> 3 > 0x13) {
                break;
              }
              if (v14 == 1)
              {
                if (v10 != 8) {
                  goto LABEL_9;
                }
                char v50 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v51 = 0;
                }
                else
                {
                  int v51 = *v50;
                  if ((*v50 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v50 + 1;
                    goto LABEL_196;
                  }
                }
                uint64_t v89 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51);
                int v51 = v89;
                if (v89 < 0) {
                  return 0;
                }
LABEL_196:
                *((_DWORD *)this + 14) = v51;
              }
              else if (v14 == 2)
              {
                if (v10 != 16) {
                  goto LABEL_9;
                }
                unint64_t v52 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v53 = 0;
                }
                else
                {
                  int v53 = *v52;
                  if ((*v52 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v52 + 1;
                    goto LABEL_199;
                  }
                }
                uint64_t v90 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v53);
                int v53 = v90;
                if (v90 < 0) {
                  return 0;
                }
LABEL_199:
                *((_DWORD *)this + 15) = v53;
              }
              else
              {
                if (v14 != 10 || v10 != 80) {
                  goto LABEL_9;
                }
                uint64_t v19 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v20 = 0;
                }
                else
                {
                  int v20 = *v19;
                  if ((*v19 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v19 + 1;
                    goto LABEL_190;
                  }
                }
                uint64_t v87 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
                int v20 = v87;
                if (v87 < 0) {
                  return 0;
                }
LABEL_190:
                *((_DWORD *)this + 16) = v20;
              }
            }
            if (v10 >> 3 > 0x27) {
              break;
            }
            switch(v14)
            {
              case 0x14u:
                if (v10 != 160) {
                  goto LABEL_9;
                }
                uint64_t v15 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v16 = 0;
                }
                else
                {
                  int v16 = *v15;
                  if ((*v15 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v15 + 1;
                    goto LABEL_175;
                  }
                }
                uint64_t v82 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
                int v16 = v82;
                if (v82 < 0) {
                  return 0;
                }
LABEL_175:
                *((_DWORD *)this + 17) = v16;
                goto LABEL_2;
              case 0x15u:
                if (v10 != 168) {
                  goto LABEL_9;
                }
                uint64_t v40 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v41 = 0;
                }
                else
                {
                  int v41 = *v40;
                  if ((*v40 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v40 + 1;
                    goto LABEL_178;
                  }
                }
                uint64_t v83 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
                int v41 = v83;
                if (v83 < 0) {
                  return 0;
                }
LABEL_178:
                *((_DWORD *)this + 18) = v41;
                goto LABEL_2;
              case 0x16u:
                if (v10 != 176) {
                  goto LABEL_9;
                }
                uint64_t v42 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v43 = 0;
                }
                else
                {
                  int v43 = *v42;
                  if ((*v42 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v42 + 1;
                    goto LABEL_181;
                  }
                }
                uint64_t v84 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
                int v43 = v84;
                if (v84 < 0) {
                  return 0;
                }
LABEL_181:
                *((_DWORD *)this + 19) = v43;
                goto LABEL_2;
              case 0x1Fu:
                if (v10 != 248) {
                  goto LABEL_9;
                }
                unsigned int v44 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v45 = 0;
                }
                else
                {
                  int v45 = *v44;
                  if ((*v44 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v44 + 1;
                    goto LABEL_184;
                  }
                }
                uint64_t v85 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45);
                int v45 = v85;
                if (v85 < 0) {
                  return 0;
                }
LABEL_184:
                *((_DWORD *)this + 2CoreML::Specification::Identity::New(this, 0) = v45;
                goto LABEL_2;
              case 0x20u:
                if ((_BYTE)v10) {
                  goto LABEL_9;
                }
                uint64_t v46 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v47 = 0;
                }
                else
                {
                  int v47 = *v46;
                  if ((*v46 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v46 + 1;
                    goto LABEL_208;
                  }
                }
                uint64_t v93 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v47);
                int v47 = v93;
                if (v93 < 0) {
                  return 0;
                }
LABEL_208:
                *((_DWORD *)this + 21) = v47;
                break;
              case 0x21u:
                if (v10 != 8) {
                  goto LABEL_9;
                }
                unint64_t v48 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v49 = 0;
                }
                else
                {
                  int v49 = *v48;
                  if ((*v48 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v48 + 1;
                    goto LABEL_187;
                  }
                }
                uint64_t v86 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
                int v49 = v86;
                if (v86 < 0) {
                  return 0;
                }
LABEL_187:
                *((_DWORD *)this + 22) = v49;
                goto LABEL_2;
              default:
                goto LABEL_9;
            }
          }
          if (v14 != 40) {
            break;
          }
          if (v10 != 64) {
            goto LABEL_9;
          }
          unsigned int v58 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v59 = 0;
          }
          else
          {
            int v59 = *v58;
            if ((*v58 & 0x80000000) == 0)
            {
              *(void *)a2 = v58 + 1;
              goto LABEL_202;
            }
          }
          uint64_t v91 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v59);
          int v59 = v91;
          if (v91 < 0) {
            return 0;
          }
LABEL_202:
          *((_DWORD *)this + 23) = v59;
        }
        if (v14 == 41) {
          break;
        }
        if (v14 != 42 || v10 != 80) {
          goto LABEL_9;
        }
        uint64_t v22 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v23 = 0;
        }
        else
        {
          int v23 = *v22;
          if ((*v22 & 0x80000000) == 0)
          {
            *(void *)a2 = v22 + 1;
            goto LABEL_193;
          }
        }
        uint64_t v88 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23);
        int v23 = v88;
        if (v88 < 0) {
          return 0;
        }
LABEL_193:
        *((_DWORD *)this + 25) = v23;
      }
      if (v10 != 72) {
        break;
      }
      char v60 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v61 = 0;
      }
      else
      {
        int v61 = *v60;
        if ((*v60 & 0x80000000) == 0)
        {
          *(void *)a2 = v60 + 1;
          goto LABEL_205;
        }
      }
      uint64_t v92 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
      int v61 = v92;
      if (v92 < 0) {
        return 0;
      }
LABEL_205:
      *((_DWORD *)this + 24) = v61;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F7FB08(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Convolution3DLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 56);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  signed int v7 = *(_DWORD *)(v5 + 60);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(2, v7, a2, a4);
  }
  signed int v8 = *(_DWORD *)(v5 + 64);
  if (v8) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(10, v8, a2, a4);
  }
  signed int v9 = *(_DWORD *)(v5 + 68);
  if (v9) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(20, v9, a2, a4);
  }
  signed int v10 = *(_DWORD *)(v5 + 72);
  if (v10) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(21, v10, a2, a4);
  }
  signed int v11 = *(_DWORD *)(v5 + 76);
  if (v11) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(22, v11, a2, a4);
  }
  signed int v12 = *(_DWORD *)(v5 + 80);
  if (v12) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(31, v12, a2, a4);
  }
  signed int v13 = *(_DWORD *)(v5 + 84);
  if (v13) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(32, v13, a2, a4);
  }
  signed int v14 = *(_DWORD *)(v5 + 88);
  if (v14) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(33, v14, a2, a4);
  }
  signed int v15 = *(_DWORD *)(v5 + 92);
  if (v15) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(40, v15, a2, a4);
  }
  signed int v16 = *(_DWORD *)(v5 + 96);
  if (v16) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(41, v16, a2, a4);
  }
  signed int v17 = *(_DWORD *)(v5 + 100);
  if (v17) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(42, v17, a2, a4);
  }
  if (*(unsigned char *)(v5 + 104)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(50, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_Convolution3DLayerParams_default_instance_)
  {
    uint64_t v18 = *(void *)(v5 + 40);
    if (v18) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3C, v18, a2, a4);
    }
    uint64_t v19 = *(void *)(v5 + 48);
    if (v19) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3D, v19, a2, a4);
    }
  }
  signed int v20 = *(_DWORD *)(v5 + 108);
  if (v20) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(70, v20, a2, a4);
  }
  signed int v21 = *(_DWORD *)(v5 + 112);
  if (v21) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(80, v21, a2, a4);
  }
  signed int v22 = *(_DWORD *)(v5 + 116);
  if (v22) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(81, v22, a2, a4);
  }
  signed int v23 = *(_DWORD *)(v5 + 120);
  if (v23) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(82, v23, a2, a4);
  }
  signed int v24 = *(_DWORD *)(v5 + 124);
  if (v24) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(83, v24, a2, a4);
  }
  signed int v25 = *(_DWORD *)(v5 + 128);
  if (v25) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(84, v25, a2, a4);
  }
  signed int v26 = *(_DWORD *)(v5 + 132);
  if (v26) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(85, v26, a2, a4);
  }
  if (*(unsigned char *)(v5 + 105)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(86, 1u, a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x2BAu);
      int v27 = *((_DWORD *)a2 + 4);
    }
    else
    {
      **((_WORD **)a2 + 1) = 1466;
      *((void *)a2 + 1) += 2;
      int v27 = *((_DWORD *)a2 + 4) - 2;
      *((_DWORD *)a2 + 4) = v27;
    }
    unsigned int v28 = *(_DWORD *)(v5 + 32);
    if (v27 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v28);
    }
    else
    {
      uint64_t v29 = *((void *)a2 + 1);
      if (v28 < 0x80)
      {
        unsigned int v31 = *(_DWORD *)(v5 + 32);
        uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v30++ = v28 | 0x80;
          unsigned int v31 = v28 >> 7;
          unsigned int v32 = v28 >> 14;
          v28 >>= 7;
        }
        while (v32);
      }
      *uint64_t v30 = v31;
      int v33 = v30 - v29 + 1;
      *((void *)a2 + 1) += v33;
      *((_DWORD *)a2 + 4) -= v33;
    }
    uint64_t v34 = *(unsigned int *)(v5 + 16);
    if ((int)v34 >= 1)
    {
      for (uint64_t i = 0; i != v34; ++i)
      {
        unint64_t v36 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v36);
        }
        else
        {
          uint64_t v37 = *((void *)a2 + 1);
          if (v36 < 0x80)
          {
            unint64_t v39 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            uint64_t v38 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            uint64_t v38 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v38++ = v36 | 0x80;
              unint64_t v39 = v36 >> 7;
              unint64_t v40 = v36 >> 14;
              v36 >>= 7;
            }
            while (v40);
          }
          *uint64_t v38 = v39;
          int v41 = v38 - v37 + 1;
          *((void *)a2 + 1) += v41;
          *((_DWORD *)a2 + 4) -= v41;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::Convolution3DLayerParams::ByteSizeLong(CoreML::Specification::Convolution3DLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 10;
  }
  else {
    uint64_t v6 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
  }
  uint64_t v7 = v6 + 2;
LABEL_11:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v7 + v3;
  if (this != (CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_)
  {
    signed int v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    signed int v11 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v11)
    {
      uint64_t v12 = CoreML::Specification::WeightParams::ByteSizeLong(v11);
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  int v13 = *((_DWORD *)this + 14);
  if (v13)
  {
    if (v13 < 0) {
      uint64_t v14 = 10;
    }
    else {
      uint64_t v14 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v14 + 1;
  }
  int v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0) {
      uint64_t v16 = 10;
    }
    else {
      uint64_t v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v16 + 1;
  }
  int v17 = *((_DWORD *)this + 16);
  if (v17)
  {
    if (v17 < 0) {
      uint64_t v18 = 10;
    }
    else {
      uint64_t v18 = (9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v18 + 1;
  }
  int v19 = *((_DWORD *)this + 17);
  if (v19)
  {
    if (v19 < 0) {
      uint64_t v20 = 10;
    }
    else {
      uint64_t v20 = (9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v20 + 2;
  }
  int v21 = *((_DWORD *)this + 18);
  if (v21)
  {
    if (v21 < 0) {
      uint64_t v22 = 10;
    }
    else {
      uint64_t v22 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v22 + 2;
  }
  int v23 = *((_DWORD *)this + 19);
  if (v23)
  {
    if (v23 < 0) {
      uint64_t v24 = 10;
    }
    else {
      uint64_t v24 = (9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v24 + 2;
  }
  int v25 = *((_DWORD *)this + 20);
  if (v25)
  {
    if (v25 < 0) {
      uint64_t v26 = 10;
    }
    else {
      uint64_t v26 = (9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v26 + 2;
  }
  int v27 = *((_DWORD *)this + 21);
  if (v27)
  {
    if (v27 < 0) {
      uint64_t v28 = 10;
    }
    else {
      uint64_t v28 = (9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v28 + 2;
  }
  int v29 = *((_DWORD *)this + 22);
  if (v29)
  {
    if (v29 < 0) {
      uint64_t v30 = 10;
    }
    else {
      uint64_t v30 = (9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v30 + 2;
  }
  int v31 = *((_DWORD *)this + 23);
  if (v31)
  {
    if (v31 < 0) {
      uint64_t v32 = 10;
    }
    else {
      uint64_t v32 = (9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v32 + 2;
  }
  int v33 = *((_DWORD *)this + 24);
  if (v33)
  {
    if (v33 < 0) {
      uint64_t v34 = 10;
    }
    else {
      uint64_t v34 = (9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v34 + 2;
  }
  int v35 = *((_DWORD *)this + 25);
  if (v35)
  {
    if (v35 < 0) {
      uint64_t v36 = 12;
    }
    else {
      uint64_t v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v8 += v36;
  }
  if (*((unsigned char *)this + 104)) {
    uint64_t v37 = v8 + 3;
  }
  else {
    uint64_t v37 = v8;
  }
  if (*((unsigned char *)this + 105)) {
    uint64_t result = v37 + 3;
  }
  else {
    uint64_t result = v37;
  }
  int v39 = *((_DWORD *)this + 27);
  if (v39)
  {
    if (v39 < 0) {
      uint64_t v40 = 12;
    }
    else {
      uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v40;
  }
  int v41 = *((_DWORD *)this + 28);
  if (v41)
  {
    if (v41 < 0) {
      uint64_t v42 = 12;
    }
    else {
      uint64_t v42 = ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v42;
  }
  int v43 = *((_DWORD *)this + 29);
  if (v43)
  {
    if (v43 < 0) {
      uint64_t v44 = 12;
    }
    else {
      uint64_t v44 = ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v44;
  }
  int v45 = *((_DWORD *)this + 30);
  if (v45)
  {
    if (v45 < 0) {
      uint64_t v46 = 12;
    }
    else {
      uint64_t v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v46;
  }
  int v47 = *((_DWORD *)this + 31);
  if (v47)
  {
    if (v47 < 0) {
      uint64_t v48 = 12;
    }
    else {
      uint64_t v48 = ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v48;
  }
  int v49 = *((_DWORD *)this + 32);
  if (v49)
  {
    if (v49 < 0) {
      uint64_t v50 = 12;
    }
    else {
      uint64_t v50 = ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v50;
  }
  int v51 = *((_DWORD *)this + 33);
  if (v51)
  {
    if (v51 < 0) {
      uint64_t v52 = 12;
    }
    else {
      uint64_t v52 = ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v52;
  }
  *((_DWORD *)this + 34) = result;
  return result;
}

uint64_t CoreML::Specification::Convolution3DLayerParams::IsInitialized(CoreML::Specification::Convolution3DLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::Convolution3DLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Convolution3DLayerParams");
}

CoreML::Specification::InnerProductLayerParams *CoreML::Specification::InnerProductLayerParams::InnerProductLayerParams(CoreML::Specification::InnerProductLayerParams *this)
{
  *(void *)this = &unk_26D75F908;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 24) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 13) = 0;
  return this;
}

void sub_223F804AC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::InnerProductLayerParams::~InnerProductLayerParams(CoreML::Specification::InnerProductLayerParams *this)
{
  *(void *)this = &unk_26D75F908;
  CoreML::Specification::InnerProductLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::InnerProductLayerParams::~InnerProductLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::InnerProductLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::InnerProductLayerParams::default_instance(CoreML::Specification::InnerProductLayerParams *this)
{
  return &CoreML::Specification::_InnerProductLayerParams_default_instance_;
}

void CoreML::Specification::InnerProductLayerParams::New(CoreML::Specification::InnerProductLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F80664(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C404A0E3968);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::InnerProductLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::InnerProductLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::InnerProductLayerParams::Clear(CoreML::Specification::InnerProductLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v5 = *((void *)this + 3);
  uint64_t v4 = (char *)this + 24;
  uint64_t result = v5;
  *((void *)v4 - 1) = 0;
  if (v5) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *((_WORD *)v4 + 12) = 0;
  *((void *)v4 + 2) = 0;
  return result;
}

BOOL CoreML::Specification::InnerProductLayerParams::MergePartialFromCodedStream(CoreML::Specification::InnerProductLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(unsigned __int8 **)a2;
        unint64_t v6 = *((void *)a2 + 1);
        if (*(void *)a2 >= v6)
        {
          uint64_t v8 = 0;
        }
        else
        {
          uint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 >= 1)
          {
            *(void *)a2 = v7;
            unint64_t v9 = v8 | 0x100000000;
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_8;
            }
            goto LABEL_16;
          }
          if ((unint64_t)v7 < v6)
          {
            int v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(void *)a2 = v5 + 2;
              unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_16;
            }
          }
        }
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
        unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_8;
        }
LABEL_16:
        unsigned int v13 = v9 >> 3;
        if (v9 >> 3 > 0x13) {
          break;
        }
        if (v13 == 1)
        {
          if (v9 != 8) {
            goto LABEL_8;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v18 & 0x80000000) == 0)
          {
            *((void *)this + 4) = *v18;
            goto LABEL_39;
          }
          *((void *)this + 4) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v28 & 1) == 0) {
            return 0;
          }
        }
        else if (v13 == 2)
        {
          if (v9 != 16) {
            goto LABEL_8;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            *((void *)this + 5) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v18;
LABEL_39:
            *(void *)a2 = v18 + 1;
          }
        }
        else
        {
          if (v13 != 10 || v9 != 80) {
            goto LABEL_8;
          }
          uint64_t v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v26 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacuint64_t k = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 48) = Varint64Fallback != 0;
        }
      }
      if (v13 == 20) {
        break;
      }
      if (v13 == 21)
      {
        if (v9 != 170) {
          goto LABEL_8;
        }
        int v19 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
        if (!v19) {
          operator new();
        }
LABEL_46:
        uint64_t v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v20;
          *(void *)a2 = v20 + 1;
        }
        unint64_t v22 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
        if ((v22 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v24 = v22;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v19, a2, v23);
        if (!result) {
          return result;
        }
        if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v24)) {
          return 0;
        }
      }
      else
      {
        if (v13 != 22 || v9 != 176) {
          goto LABEL_8;
        }
        uint64_t v16 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
        {
          unint64_t v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v17 = *v16;
          *(void *)a2 = v16 + 1;
        }
        *((unsigned char *)this + 49) = v17 != 0;
      }
    }
    if (v9 == 162)
    {
      int v19 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
      if (!v19) {
        operator new();
      }
      goto LABEL_46;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F80A48(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::InnerProductLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 32);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 40);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  if (*(unsigned char *)(v5 + 48)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(10, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14, v8, a2, a4);
    }
    uint64_t v9 = *(void *)(v5 + 24);
    if (v9) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x15, v9, a2, a4);
    }
  }
  if (*(unsigned char *)(v5 + 49))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(22, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::InnerProductLayerParams::ByteSizeLong(CoreML::Specification::InnerProductLayerParams *this)
{
  if (this == (CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t v9 = v4 + 2;
  }
  else {
    uint64_t v9 = v4;
  }
  if (*((unsigned char *)this + 49)) {
    uint64_t result = v9 + 3;
  }
  else {
    uint64_t result = v9;
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

uint64_t CoreML::Specification::InnerProductLayerParams::IsInitialized(CoreML::Specification::InnerProductLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::InnerProductLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.InnerProductLayerParams");
}

CoreML::Specification::EmbeddingLayerParams *CoreML::Specification::EmbeddingLayerParams::EmbeddingLayerParams(CoreML::Specification::EmbeddingLayerParams *this)
{
  *(void *)this = &unk_26D75F9A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 48) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 13) = 0;
  return this;
}

void sub_223F80CCC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::EmbeddingLayerParams *CoreML::Specification::EmbeddingLayerParams::EmbeddingLayerParams(CoreML::Specification::EmbeddingLayerParams *this, const CoreML::Specification::EmbeddingLayerParams *a2)
{
  *(void *)this = &unk_26D75F9A0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 13) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 == (const CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    *((void *)this + 2) = 0;
  }
  else
  {
    if (*((void *)a2 + 2)) {
      operator new();
    }
    *((void *)this + 2) = 0;
    if (*((void *)a2 + 3)) {
      operator new();
    }
  }
  *((void *)this + 3) = 0;
  long long v5 = *((_OWORD *)a2 + 2);
  *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
  *((_OWORD *)this + 2) = v5;
  return this;
}

void sub_223F80DE8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v2, 0x10A1C403937033FLL);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::EmbeddingLayerParams::~EmbeddingLayerParams(CoreML::Specification::EmbeddingLayerParams *this)
{
  *(void *)this = &unk_26D75F9A0;
  CoreML::Specification::EmbeddingLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::EmbeddingLayerParams::~EmbeddingLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::EmbeddingLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::EmbeddingLayerParams::default_instance(CoreML::Specification::EmbeddingLayerParams *this)
{
  return &CoreML::Specification::_EmbeddingLayerParams_default_instance_;
}

void CoreML::Specification::EmbeddingLayerParams::New(CoreML::Specification::EmbeddingLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F80FC4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4055BE373CLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::EmbeddingLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::EmbeddingLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::EmbeddingLayerParams::Clear(CoreML::Specification::EmbeddingLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v5 = *((void *)this + 3);
  uint64_t v4 = (char *)this + 24;
  uint64_t result = v5;
  *((void *)v4 - 1) = 0;
  if (v5) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[24] = 0;
  *((void *)v4 + 2) = 0;
  return result;
}

BOOL CoreML::Specification::EmbeddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::EmbeddingLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            uint64_t v8 = 0;
LABEL_51:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_52;
            }
            goto LABEL_8;
          }
          uint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 < 1)
          {
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_8;
              }
            }
            goto LABEL_51;
          }
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_52;
          }
LABEL_8:
          unsigned int v11 = v9 >> 3;
          if (v9 >> 3 <= 9) {
            break;
          }
          if (v11 == 10)
          {
            if (v9 != 80) {
              goto LABEL_52;
            }
            int v15 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              Varint64Fallbacuint64_t k = *v15;
              *(void *)a2 = v15 + 1;
            }
            *((unsigned char *)this + 48) = Varint64Fallback != 0;
          }
          else
          {
            if (v11 == 20)
            {
              if (v9 != 162) {
                goto LABEL_52;
              }
              uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
              if (!v12) {
                operator new();
              }
            }
            else
            {
              if (v11 != 21 || v9 != 170) {
                goto LABEL_52;
              }
              uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
              if (!v12) {
                operator new();
              }
            }
            unint64_t v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              VarintSizeAsIntFallbacuint64_t k = *v17;
              *(void *)a2 = v17 + 1;
            }
            unint64_t v19 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
            if ((v19 & 0x8000000000000000) != 0) {
              return 0;
            }
            int v21 = v19;
            BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v20);
            if (!result) {
              return result;
            }
            if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21)) {
              return 0;
            }
          }
        }
        if (v11 != 1) {
          break;
        }
        if (v9 != 8) {
          goto LABEL_52;
        }
        uint64_t v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          *((void *)this + 4) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v25 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 4) = *v14;
LABEL_38:
          *(void *)a2 = v14 + 1;
        }
      }
      if (v11 != 2 || v9 != 16) {
        break;
      }
      uint64_t v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 5) = *v14;
        goto LABEL_38;
      }
      *((void *)this + 5) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v23 & 1) == 0) {
        return 0;
      }
    }
LABEL_52:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F81350(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::EmbeddingLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 32);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 40);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  if (*(unsigned char *)(v5 + 48)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(10, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14, v8, a2, a4);
    }
    uint64_t v9 = *(void *)(v5 + 24);
    if (v9)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x15, v9, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::EmbeddingLayerParams::ByteSizeLong(CoreML::Specification::EmbeddingLayerParams *this)
{
  if (this == (CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

uint64_t CoreML::Specification::EmbeddingLayerParams::IsInitialized(CoreML::Specification::EmbeddingLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::EmbeddingLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.EmbeddingLayerParams");
}

CoreML::Specification::EmbeddingNDLayerParams *CoreML::Specification::EmbeddingNDLayerParams::EmbeddingNDLayerParams(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  *(void *)this = &unk_26D75FA38;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 48) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 13) = 0;
  return this;
}

void sub_223F815AC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::EmbeddingNDLayerParams::~EmbeddingNDLayerParams(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  *(void *)this = &unk_26D75FA38;
  CoreML::Specification::EmbeddingNDLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::EmbeddingNDLayerParams::~EmbeddingNDLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::EmbeddingNDLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::EmbeddingNDLayerParams::default_instance(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  return &CoreML::Specification::_EmbeddingNDLayerParams_default_instance_;
}

void CoreML::Specification::EmbeddingNDLayerParams::New(CoreML::Specification::EmbeddingNDLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F81760(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4055BE373CLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::EmbeddingNDLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::EmbeddingNDLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::EmbeddingNDLayerParams::Clear(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v5 = *((void *)this + 3);
  uint64_t v4 = (char *)this + 24;
  uint64_t result = v5;
  *((void *)v4 - 1) = 0;
  if (v5) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[24] = 0;
  *((void *)v4 + 2) = 0;
  return result;
}

BOOL CoreML::Specification::EmbeddingNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::EmbeddingNDLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            uint64_t v8 = 0;
LABEL_51:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_52;
            }
            goto LABEL_8;
          }
          uint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 < 1)
          {
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_8;
              }
            }
            goto LABEL_51;
          }
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_52;
          }
LABEL_8:
          unsigned int v11 = v9 >> 3;
          if (v9 >> 3 <= 2) {
            break;
          }
          if (v11 == 3)
          {
            if (v9 != 24) {
              goto LABEL_52;
            }
            int v15 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              Varint64Fallbacuint64_t k = *v15;
              *(void *)a2 = v15 + 1;
            }
            *((unsigned char *)this + 48) = Varint64Fallback != 0;
          }
          else
          {
            if (v11 == 20)
            {
              if (v9 != 162) {
                goto LABEL_52;
              }
              uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
              if (!v12) {
                operator new();
              }
            }
            else
            {
              if (v11 != 21 || v9 != 170) {
                goto LABEL_52;
              }
              uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
              if (!v12) {
                operator new();
              }
            }
            unint64_t v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              VarintSizeAsIntFallbacuint64_t k = *v17;
              *(void *)a2 = v17 + 1;
            }
            unint64_t v19 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
            if ((v19 & 0x8000000000000000) != 0) {
              return 0;
            }
            int v21 = v19;
            BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v20);
            if (!result) {
              return result;
            }
            if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21)) {
              return 0;
            }
          }
        }
        if (v11 != 1) {
          break;
        }
        if (v9 != 8) {
          goto LABEL_52;
        }
        uint64_t v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          *((void *)this + 4) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v25 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 4) = *v14;
LABEL_38:
          *(void *)a2 = v14 + 1;
        }
      }
      if (v11 != 2 || v9 != 16) {
        break;
      }
      uint64_t v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 5) = *v14;
        goto LABEL_38;
      }
      *((void *)this + 5) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v23 & 1) == 0) {
        return 0;
      }
    }
LABEL_52:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F81AEC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::EmbeddingNDLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 32);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 40);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  if (*(unsigned char *)(v5 + 48)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(3, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14, v8, a2, a4);
    }
    uint64_t v9 = *(void *)(v5 + 24);
    if (v9)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x15, v9, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::EmbeddingNDLayerParams::ByteSizeLong(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  if (this == (CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

uint64_t CoreML::Specification::EmbeddingNDLayerParams::IsInitialized(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::EmbeddingNDLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.EmbeddingNDLayerParams");
}

CoreML::Specification::BatchnormLayerParams *CoreML::Specification::BatchnormLayerParams::BatchnormLayerParams(CoreML::Specification::BatchnormLayerParams *this)
{
  *(void *)this = &unk_26D75FAD0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 16) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  return this;
}

void sub_223F81D48(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BatchnormLayerParams::~BatchnormLayerParams(CoreML::Specification::BatchnormLayerParams *this)
{
  *(void *)this = &unk_26D75FAD0;
  CoreML::Specification::BatchnormLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::BatchnormLayerParams::~BatchnormLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::BatchnormLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    this = (uint64_t *)v1[5];
    if (this)
    {
      uint64_t v5 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v5();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::BatchnormLayerParams::default_instance(CoreML::Specification::BatchnormLayerParams *this)
{
  return &CoreML::Specification::_BatchnormLayerParams_default_instance_;
}

void CoreML::Specification::BatchnormLayerParams::New(CoreML::Specification::BatchnormLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F81F58(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40F35C4FACLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BatchnormLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BatchnormLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::BatchnormLayerParams::Clear(CoreML::Specification::BatchnormLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v7 = *((void *)this + 5);
  uint64_t v6 = (void *)((char *)this + 40);
  uint64_t result = v7;
  *(v6 - 1) = 0;
  if (v7) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *uint64_t v6 = 0;
  v6[1] = 0;
  v6[2] = 0;
  return result;
}

BOOL CoreML::Specification::BatchnormLayerParams::MergePartialFromCodedStream(CoreML::Specification::BatchnormLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        uint64_t v8 = 0;
        goto LABEL_15;
      }
      uint64_t v7 = v5 + 1;
      uint64_t v8 = *v5;
      if ((char)*v5 >= 1) {
        break;
      }
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_16;
        }
      }
LABEL_15:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_8;
          }
          unsigned int v13 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
          {
            *((void *)this + 6) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v27 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 6) = *v13;
            *(void *)a2 = v13 + 1;
          }
          continue;
        case 5u:
          if (v9 != 40) {
            goto LABEL_8;
          }
          uint64_t v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacuint64_t k = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 56) = Varint64Fallback != 0;
          continue;
        case 6u:
          if (v9 != 48) {
            goto LABEL_8;
          }
          uint64_t v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            unint64_t v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v17 = *v16;
            *(void *)a2 = v16 + 1;
          }
          *((unsigned char *)this + 57) = v17 != 0;
          break;
        case 0xAu:
          if (v9 != 85) {
            goto LABEL_8;
          }
          unsigned int v30 = 0;
          uint64_t v18 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result) {
              return result;
            }
            unsigned int v19 = v30;
          }
          else
          {
            unsigned int v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          *((_DWORD *)this + 15) = v19;
          continue;
        case 0xFu:
          if (v9 != 122) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x10u:
          if (v9 != 130) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x12u:
          if (v9 != 146) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
          if (!v20) {
            operator new();
          }
LABEL_45:
          int v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacuint64_t k = *v21;
            *(void *)a2 = v21 + 1;
          }
          unint64_t v23 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
          if ((v23 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v25 = v23;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v20, a2, v24);
          if (!result) {
            return result;
          }
          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_8;
      }
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_16;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F8241C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BatchnormLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 48);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  if (*(unsigned char *)(v5 + 56)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(5, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 57)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(6, 1u, a2, a4);
  }
  float v7 = *(float *)(v5 + 60);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)0xA, a2, v7, a3);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xF, v8, a2, a4);
    }
    uint64_t v9 = *(void *)(v5 + 24);
    if (v9) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x10, v9, a2, a4);
    }
    uint64_t v10 = *(void *)(v5 + 32);
    if (v10) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x11, v10, a2, a4);
    }
    uint64_t v11 = *(void *)(v5 + 40);
    if (v11)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x12, v11, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::BatchnormLayerParams::ByteSizeLong(CoreML::Specification::BatchnormLayerParams *this)
{
  if (this == (CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    float v7 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v11 = *((void *)this + 6);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 56)) {
    uint64_t v12 = v4 + 2;
  }
  else {
    uint64_t v12 = v4;
  }
  if (*((unsigned char *)this + 57)) {
    v12 += 2;
  }
  if (*((float *)this + 15) == 0.0) {
    uint64_t result = v12;
  }
  else {
    uint64_t result = v12 + 5;
  }
  *((_DWORD *)this + 16) = result;
  return result;
}

uint64_t CoreML::Specification::BatchnormLayerParams::IsInitialized(CoreML::Specification::BatchnormLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::BatchnormLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BatchnormLayerParams");
}

CoreML::Specification::PoolingLayerParams_ValidCompletePadding *CoreML::Specification::PoolingLayerParams_ValidCompletePadding::PoolingLayerParams_ValidCompletePadding(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75FB68;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)&CoreML::Specification::_PoolingLayerParams_ValidCompletePadding_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F82768(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PoolingLayerParams_ValidCompletePadding::~PoolingLayerParams_ValidCompletePadding(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this)
{
  *(void *)this = &unk_26D75FB68;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::PoolingLayerParams_ValidCompletePadding::~PoolingLayerParams_ValidCompletePadding(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::PoolingLayerParams_ValidCompletePadding::New(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8287C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::PoolingLayerParams_ValidCompletePadding>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::PoolingLayerParams_ValidCompletePadding>);
  }
  return result;
}

uint64_t CoreML::Specification::PoolingLayerParams_ValidCompletePadding::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::PoolingLayerParams_ValidCompletePadding::MergePartialFromCodedStream(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 0x50) {
        break;
      }
      if (v8 == 80)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0x52u, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 82) {
          break;
        }
        uint64_t v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v10;
          *a2 = v10 + 1;
        }
        int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            uint64_t v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v17 & 1) == 0) {
                return 0;
              }
              unint64_t v15 = Varint64Fallback;
            }
            else
            {
              unint64_t v15 = *v14;
              *a2 = v14 + 1;
            }
            signed int v18 = *((_DWORD *)this + 4);
            if (v18 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v18 + 1);
              signed int v18 = *v5;
            }
            uint64_t v19 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v18 + 1;
            *(void *)(v19 + 8 * v18 + 8) = v15;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::PoolingLayerParams_ValidCompletePadding::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x52u);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 82;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::PoolingLayerParams_ValidCompletePadding::ByteSizeLong(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::PoolingLayerParams_ValidCompletePadding::IsInitialized(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this)
{
  return 1;
}

void *CoreML::Specification::PoolingLayerParams_ValidCompletePadding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PoolingLayerParams.ValidCompletePadding");
}

CoreML::Specification::PoolingLayerParams *CoreML::Specification::PoolingLayerParams::PoolingLayerParams(CoreML::Specification::PoolingLayerParams *this)
{
  *(void *)this = &unk_26D75FC00;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::PoolingLayerParams *)&CoreML::Specification::_PoolingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 32) = 0;
  *((_DWORD *)this + 15) = 0;
  *((void *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

void sub_223F82D28(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v1 + 48);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  CoreML::Specification::LinearQuantizationParams::LinearQuantizationParams(v1);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PoolingLayerParams::~PoolingLayerParams(CoreML::Specification::PoolingLayerParams *this)
{
  *(void *)this = &unk_26D75FC00;
  if (*((_DWORD *)this + 21)) {
    CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
  }
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::PoolingLayerParams::~PoolingLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 84);
  if (v2 == 32 || v2 == 31 || v2 == 30)
  {
    this = *(void *)(this + 72);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 84) = 0;
  return this;
}

uint64_t *CoreML::Specification::PoolingLayerParams::default_instance(CoreML::Specification::PoolingLayerParams *this)
{
  return &CoreML::Specification::_PoolingLayerParams_default_instance_;
}

void CoreML::Specification::PoolingLayerParams::New(CoreML::Specification::PoolingLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F82EFC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40A643CE47);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::PoolingLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::PoolingLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::PoolingLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(_DWORD *)(this + 6CoreML::Specification::Identity::New(this, 0) = 0;
  *(_WORD *)(this + 64) = 0;
  return CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(this);
}

uint64_t CoreML::Specification::PoolingLayerParams::MergePartialFromCodedStream(CoreML::Specification::PoolingLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)a2;
      unint64_t v8 = *((void *)a2 + 1);
      if (*(void *)a2 >= v8)
      {
        uint64_t v10 = 0;
LABEL_16:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
        unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v11 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      unsigned int v9 = v7 + 1;
      uint64_t v10 = *v7;
      if ((char)*v7 < 1)
      {
        if ((unint64_t)v9 < v8)
        {
          int v12 = *v9;
          if ((v10 & ~v12) >= 0x80)
          {
            *(void *)a2 = v7 + 2;
            unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
            goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
      *(void *)a2 = v9;
      unint64_t v11 = v10 | 0x100000000;
      if ((v11 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      unsigned int v15 = v11 >> 3;
      if (v11 >> 3 > 0x1E) {
        break;
      }
      if (v11 >> 3 > 0x13)
      {
        if (v15 == 20)
        {
          if (v11 == 160)
          {
            uint64_t v30 = 2;
            unsigned int v31 = 162;
            uint64_t v32 = a2;
            uint64_t v33 = (uint64_t)v5;
            goto LABEL_64;
          }
          if (v11 != 162) {
            goto LABEL_9;
          }
          char v26 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
          {
            VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacuint64_t k = *v26;
            *(void *)a2 = v26 + 1;
          }
          int v50 = _tc_google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            do
            {
              int v57 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v57 < 0)
              {
                Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v60 & 1) == 0) {
                  return 0;
                }
                unint64_t v58 = Varint64Fallback;
              }
              else
              {
                unint64_t v58 = *v57;
                *(void *)a2 = v57 + 1;
              }
              signed int v61 = *((_DWORD *)this + 10);
              if (v61 == *((_DWORD *)this + 11))
              {
                _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v61 + 1);
                signed int v61 = *v5;
              }
              uint64_t v62 = *((void *)this + 6);
              *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v61 + 1;
              *(void *)(v62 + 8 * v61 + 8) = v58;
            }
            while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) > 0);
          }
LABEL_116:
          _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v50);
        }
        else
        {
          if (v15 != 30 || v11 != 242) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 21) != 30)
          {
            CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
            *((_DWORD *)this + 21) = 30;
            operator new();
          }
          unsigned int v20 = (CoreML::Specification::ValidPadding *)*((void *)this + 9);
          uint64_t v36 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v36 < 0)
          {
            int v37 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v37 < 0) {
              return 0;
            }
          }
          else
          {
            int v37 = *v36;
            *(void *)a2 = v36 + 1;
          }
          unint64_t v46 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v37);
          if ((v46 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v44 = v46;
          uint64_t result = CoreML::Specification::ValidPadding::MergePartialFromCodedStream(v20, (char **)a2, v47);
          if (!result) {
            return result;
          }
LABEL_93:
          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v44)) {
            return 0;
          }
        }
      }
      else if (v15 == 1)
      {
        if (v11 != 8) {
          goto LABEL_9;
        }
        unint64_t v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v24 = 0;
        }
        else
        {
          int v24 = *v23;
          if ((*v23 & 0x80000000) == 0)
          {
            *(void *)a2 = v23 + 1;
            goto LABEL_119;
          }
        }
        Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
        int v24 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_119:
        *((_DWORD *)this + 15) = v24;
      }
      else
      {
        if (v15 != 10) {
          goto LABEL_9;
        }
        if (v11 == 80)
        {
          uint64_t v30 = 1;
          unsigned int v31 = 82;
          uint64_t v32 = a2;
          uint64_t v33 = (uint64_t)v6;
LABEL_64:
          if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(v30, v31, v32, v33) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v11 == 82)
          {
            unint64_t v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v17 < 0) {
                return 0;
              }
            }
            else
            {
              int v17 = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v50 = _tc_google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
            if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
            {
              do
              {
                int v51 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v51 < 0)
                {
                  unint64_t v53 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                  if ((v54 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v52 = v53;
                }
                else
                {
                  unint64_t v52 = *v51;
                  *(void *)a2 = v51 + 1;
                }
                signed int v55 = *((_DWORD *)this + 4);
                if (v55 == *((_DWORD *)this + 5))
                {
                  _tc_google::protobuf::RepeatedField<double>::Reserve(v6, v55 + 1);
                  signed int v55 = *v6;
                }
                uint64_t v56 = *((void *)this + 3);
                *((_DWORD *)this + 4) = v55 + 1;
                *(void *)(v56 + 8 * v55 + 8) = v52;
              }
              while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) > 0);
            }
            goto LABEL_116;
          }
LABEL_9:
          if (v11) {
            BOOL v13 = (v11 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13) {
            return 1;
          }
          if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)return 0; {
        }
          }
      }
    }
    if (v11 >> 3 <= 0x31) {
      break;
    }
    if (v15 == 50)
    {
      if (v11 != 144) {
        goto LABEL_9;
      }
      char v28 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v28 < 0)
      {
        unint64_t v29 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v41 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v29 = *v28;
        *(void *)a2 = v28 + 1;
      }
      *((unsigned char *)this + 64) = v29 != 0;
    }
    else
    {
      if (v15 != 60 || v11 != 224) {
        goto LABEL_9;
      }
      int v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        unint64_t v22 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v40 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      *((unsigned char *)this + 65) = v22 != 0;
    }
  }
  if (v15 != 31)
  {
    if (v15 != 32 || v11 != 2) {
      goto LABEL_9;
    }
    if (*((_DWORD *)this + 21) != 32)
    {
      CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
      *((_DWORD *)this + 21) = 32;
      operator new();
    }
    uint64_t v19 = (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)*((void *)this + 9);
    uint64_t v34 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v34 < 0)
    {
      int v35 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v35 < 0) {
        return 0;
      }
    }
    else
    {
      int v35 = *v34;
      *(void *)a2 = v34 + 1;
    }
    unint64_t v42 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v35);
    if ((v42 & 0x8000000000000000) != 0) {
      return 0;
    }
    int v44 = v42;
    uint64_t result = CoreML::Specification::PoolingLayerParams_ValidCompletePadding::MergePartialFromCodedStream(v19, (char **)a2, v43);
    if (!result) {
      return result;
    }
    goto LABEL_93;
  }
  if (v11 != 250) {
    goto LABEL_9;
  }
  if (*((_DWORD *)this + 21) != 31)
  {
    CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
    *((_DWORD *)this + 21) = 31;
    operator new();
  }
  int v25 = (CoreML::Specification::SamePadding *)*((void *)this + 9);
  uint64_t v38 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v38 < 0)
  {
    int v39 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v39 < 0) {
      return 0;
    }
  }
  else
  {
    int v39 = *v38;
    *(void *)a2 = v38 + 1;
  }
  unint64_t v48 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v39);
  if ((v48 & 0x8000000000000000) == 0)
  {
    int v44 = v48;
    uint64_t result = CoreML::Specification::SamePadding::MergePartialFromCodedStream(v25, (char **)a2, v49);
    if (!result) {
      return result;
    }
    goto LABEL_93;
  }
  return 0;
}

void sub_223F83594(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PoolingLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 60);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x52u);
      int v7 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 82;
      int v7 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v7;
    }
    unsigned int v8 = *(_DWORD *)(v5 + 32);
    if (v7 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v8);
    }
    else
    {
      uint64_t v9 = *((void *)a2 + 1);
      if (v8 < 0x80)
      {
        unsigned int v11 = *(_DWORD *)(v5 + 32);
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v10++ = v8 | 0x80;
          unsigned int v11 = v8 >> 7;
          unsigned int v12 = v8 >> 14;
          v8 >>= 7;
        }
        while (v12);
      }
      *uint64_t v10 = v11;
      int v13 = v10 - v9 + 1;
      *((void *)a2 + 1) += v13;
      *((_DWORD *)a2 + 4) -= v13;
    }
    uint64_t v14 = *(unsigned int *)(v5 + 16);
    if ((int)v14 >= 1)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        unint64_t v16 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v16);
        }
        else
        {
          uint64_t v17 = *((void *)a2 + 1);
          if (v16 < 0x80)
          {
            unint64_t v19 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            int v18 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v18 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v18++ = v16 | 0x80;
              unint64_t v19 = v16 >> 7;
              unint64_t v20 = v16 >> 14;
              v16 >>= 7;
            }
            while (v20);
          }
          unsigned char *v18 = v19;
          int v21 = v18 - v17 + 1;
          *((void *)a2 + 1) += v21;
          *((_DWORD *)a2 + 4) -= v21;
        }
      }
    }
  }
  if (*(int *)(v5 + 40) > 0)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xA2u);
      int v22 = *((_DWORD *)a2 + 4);
    }
    else
    {
      **((_WORD **)a2 + 1) = 418;
      *((void *)a2 + 1) += 2;
      int v22 = *((_DWORD *)a2 + 4) - 2;
      *((_DWORD *)a2 + 4) = v22;
    }
    unsigned int v23 = *(_DWORD *)(v5 + 56);
    if (v22 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v23);
    }
    else
    {
      uint64_t v24 = *((void *)a2 + 1);
      if (v23 < 0x80)
      {
        unsigned int v26 = *(_DWORD *)(v5 + 56);
        int v25 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        int v25 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v25++ = v23 | 0x80;
          unsigned int v26 = v23 >> 7;
          unsigned int v27 = v23 >> 14;
          v23 >>= 7;
        }
        while (v27);
      }
      *int v25 = v26;
      int v28 = v25 - v24 + 1;
      *((void *)a2 + 1) += v28;
      *((_DWORD *)a2 + 4) -= v28;
    }
    uint64_t v29 = *(unsigned int *)(v5 + 40);
    if ((int)v29 >= 1)
    {
      for (uint64_t j = 0; j != v29; ++j)
      {
        unint64_t v31 = *(void *)(*(void *)(v5 + 48) + 8 * j + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v31);
        }
        else
        {
          uint64_t v32 = *((void *)a2 + 1);
          if (v31 < 0x80)
          {
            unint64_t v34 = *(void *)(*(void *)(v5 + 48) + 8 * j + 8);
            uint64_t v33 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            uint64_t v33 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v33++ = v31 | 0x80;
              unint64_t v34 = v31 >> 7;
              unint64_t v35 = v31 >> 14;
              v31 >>= 7;
            }
            while (v35);
          }
          unsigned char *v33 = v34;
          int v36 = v33 - v32 + 1;
          *((void *)a2 + 1) += v36;
          *((_DWORD *)a2 + 4) -= v36;
        }
      }
    }
  }
  int v37 = *(_DWORD *)(v5 + 84);
  if (v37 == 30)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1E, *(void *)(v5 + 72), a2, a4);
    int v37 = *(_DWORD *)(v5 + 84);
  }
  if (v37 == 31)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1F, *(void *)(v5 + 72), a2, a4);
    int v37 = *(_DWORD *)(v5 + 84);
  }
  if (v37 == 32) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x20, *(void *)(v5 + 72), a2, a4);
  }
  if (*(unsigned char *)(v5 + 64)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(50, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 65))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(60, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::PoolingLayerParams::ByteSizeLong(CoreML::Specification::PoolingLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_9:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0) {
    uint64_t v6 = v7;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v6 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    unsigned int v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 12;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v8 += v13;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  int v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v14 += v16;
  }
  if (*((unsigned char *)this + 64)) {
    v14 += 3;
  }
  if (*((unsigned char *)this + 65)) {
    uint64_t v17 = v14 + 3;
  }
  else {
    uint64_t v17 = v14;
  }
  int v18 = *((_DWORD *)this + 21);
  switch(v18)
  {
    case 32:
      unint64_t v19 = (CoreML::Specification::BorderAmounts *)CoreML::Specification::PoolingLayerParams_ValidCompletePadding::ByteSizeLong(*((CoreML::Specification::PoolingLayerParams_ValidCompletePadding **)this + 9));
      goto LABEL_34;
    case 31:
      uint64_t v20 = *((void *)this + 9);
      int v21 = *(_DWORD *)(v20 + 16);
      if (v21)
      {
        if (v21 < 0) {
          uint64_t v22 = 11;
        }
        else {
          uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v22 = 0;
      }
      *(_DWORD *)(v20 + 2CoreML::Specification::Identity::New(this, 0) = v22;
      v17 += v22 + 3;
      break;
    case 30:
      unint64_t v19 = CoreML::Specification::ValidPadding::ByteSizeLong(*((CoreML::Specification::ValidPadding **)this + 9));
LABEL_34:
      v17 += (uint64_t)v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
      break;
  }
  *((_DWORD *)this + 2CoreML::Specification::Identity::New(this, 0) = v17;
  return v17;
}

uint64_t CoreML::Specification::PoolingLayerParams::IsInitialized(CoreML::Specification::PoolingLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::PoolingLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PoolingLayerParams");
}

CoreML::Specification::Pooling3DLayerParams *CoreML::Specification::Pooling3DLayerParams::Pooling3DLayerParams(CoreML::Specification::Pooling3DLayerParams *this)
{
  *(void *)this = &unk_26D75FC98;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Pooling3DLayerParams *)&CoreML::Specification::_Pooling3DLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_223F83C10(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::Pooling3DLayerParams *CoreML::Specification::Pooling3DLayerParams::Pooling3DLayerParams(CoreML::Specification::Pooling3DLayerParams *this, const CoreML::Specification::Pooling3DLayerParams *a2)
{
  *(void *)this = &unk_26D75FC98;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 19) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  long long v5 = *((_OWORD *)a2 + 1);
  long long v6 = *((_OWORD *)a2 + 2);
  long long v7 = *((_OWORD *)a2 + 3);
  *(_OWORD *)((char *)this + 6CoreML::Specification::Identity::New(this, 0) = *(_OWORD *)((char *)a2 + 60);
  *((_OWORD *)this + 2) = v6;
  *((_OWORD *)this + 3) = v7;
  *((_OWORD *)this + 1) = v5;
  return this;
}

void sub_223F83CA8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::Pooling3DLayerParams::~Pooling3DLayerParams(CoreML::Specification::Pooling3DLayerParams *this)
{
  *(void *)this = &unk_26D75FC98;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75FC98;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::Pooling3DLayerParams::default_instance(CoreML::Specification::Pooling3DLayerParams *this)
{
  return &CoreML::Specification::_Pooling3DLayerParams_default_instance_;
}

void CoreML::Specification::Pooling3DLayerParams::New(CoreML::Specification::Pooling3DLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F83DDC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40004337BDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::Pooling3DLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::Pooling3DLayerParams>);
  }
  return result;
}

double CoreML::Specification::Pooling3DLayerParams::Clear(CoreML::Specification::Pooling3DLayerParams *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 6CoreML::Specification::Identity::New(this, 0) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  return result;
}

uint64_t CoreML::Specification::Pooling3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::Pooling3DLayerParams *this, char **a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      long long v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_13;
      }
LABEL_7:
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9) {
        return 1;
      }
      if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
    }
      }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_7;
        }
        uint64_t v10 = *a2;
        if (*a2 >= a2[1])
        {
          int v11 = 0;
        }
        else
        {
          int v11 = *v10;
          if ((*v10 & 0x80000000) == 0)
          {
            *a2 = v10 + 1;
            goto LABEL_78;
          }
        }
        Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v11);
        int v11 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_78:
        *((_DWORD *)this + 4) = v11;
        continue;
      case 2u:
        if (v7 != 16) {
          goto LABEL_7;
        }
        uint64_t v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_81;
          }
        }
        uint64_t v42 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = v42;
        if (v42 < 0) {
          return 0;
        }
LABEL_81:
        *((_DWORD *)this + 5) = v13;
        continue;
      case 3u:
        if (v7 != 24) {
          goto LABEL_7;
        }
        uint64_t v14 = *a2;
        if (*a2 >= a2[1])
        {
          int v15 = 0;
        }
        else
        {
          int v15 = *v14;
          if ((*v14 & 0x80000000) == 0)
          {
            *a2 = v14 + 1;
            goto LABEL_84;
          }
        }
        uint64_t v43 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v15);
        int v15 = v43;
        if (v43 < 0) {
          return 0;
        }
LABEL_84:
        *((_DWORD *)this + 6) = v15;
        continue;
      case 4u:
        if (v7 != 32) {
          goto LABEL_7;
        }
        uint64_t v16 = *a2;
        if (*a2 >= a2[1])
        {
          int v17 = 0;
        }
        else
        {
          int v17 = *v16;
          if ((*v16 & 0x80000000) == 0)
          {
            *a2 = v16 + 1;
            goto LABEL_87;
          }
        }
        uint64_t v44 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
        int v17 = v44;
        if (v44 < 0) {
          return 0;
        }
LABEL_87:
        *((_DWORD *)this + 7) = v17;
        continue;
      case 5u:
        if (v7 != 40) {
          goto LABEL_7;
        }
        int v18 = *a2;
        if (*a2 >= a2[1])
        {
          int v19 = 0;
        }
        else
        {
          int v19 = *v18;
          if ((*v18 & 0x80000000) == 0)
          {
            *a2 = v18 + 1;
            goto LABEL_90;
          }
        }
        uint64_t v45 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v19);
        int v19 = v45;
        if (v45 < 0) {
          return 0;
        }
LABEL_90:
        *((_DWORD *)this + 8) = v19;
        continue;
      case 6u:
        if (v7 != 48) {
          goto LABEL_7;
        }
        uint64_t v20 = *a2;
        if (*a2 >= a2[1])
        {
          int v21 = 0;
        }
        else
        {
          int v21 = *v20;
          if ((*v20 & 0x80000000) == 0)
          {
            *a2 = v20 + 1;
            goto LABEL_93;
          }
        }
        uint64_t v46 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v21);
        int v21 = v46;
        if (v46 < 0) {
          return 0;
        }
LABEL_93:
        *((_DWORD *)this + 9) = v21;
        continue;
      case 7u:
        if (v7 != 56) {
          goto LABEL_7;
        }
        uint64_t v22 = *a2;
        if (*a2 >= a2[1])
        {
          int v23 = 0;
        }
        else
        {
          int v23 = *v22;
          if ((*v22 & 0x80000000) == 0)
          {
            *a2 = v22 + 1;
            goto LABEL_96;
          }
        }
        uint64_t v47 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v23);
        int v23 = v47;
        if (v47 < 0) {
          return 0;
        }
LABEL_96:
        *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v23;
        continue;
      case 8u:
        if (v7 != 64) {
          goto LABEL_7;
        }
        uint64_t v24 = *a2;
        if (*a2 >= a2[1])
        {
          int v25 = 0;
        }
        else
        {
          int v25 = *v24;
          if ((*v24 & 0x80000000) == 0)
          {
            *a2 = v24 + 1;
            goto LABEL_99;
          }
        }
        uint64_t v48 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v25);
        int v25 = v48;
        if (v48 < 0) {
          return 0;
        }
LABEL_99:
        *((_DWORD *)this + 11) = v25;
        continue;
      case 9u:
        if (v7 != 72) {
          goto LABEL_7;
        }
        unsigned int v26 = *a2;
        if (*a2 >= a2[1])
        {
          int v27 = 0;
        }
        else
        {
          int v27 = *v26;
          if ((*v26 & 0x80000000) == 0)
          {
            *a2 = v26 + 1;
            goto LABEL_102;
          }
        }
        uint64_t v49 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v27);
        int v27 = v49;
        if (v49 < 0) {
          return 0;
        }
LABEL_102:
        *((_DWORD *)this + 12) = v27;
        continue;
      case 0xAu:
        if (v7 != 80) {
          goto LABEL_7;
        }
        int v28 = *a2;
        if (*a2 >= a2[1])
        {
          int v29 = 0;
        }
        else
        {
          int v29 = *v28;
          if ((*v28 & 0x80000000) == 0)
          {
            *a2 = v28 + 1;
            goto LABEL_105;
          }
        }
        uint64_t v50 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v29);
        int v29 = v50;
        if (v50 < 0) {
          return 0;
        }
LABEL_105:
        *((_DWORD *)this + 13) = v29;
        continue;
      case 0xBu:
        if (v7 != 88) {
          goto LABEL_7;
        }
        uint64_t v30 = *a2;
        if (*a2 >= a2[1])
        {
          int v31 = 0;
        }
        else
        {
          int v31 = *v30;
          if ((*v30 & 0x80000000) == 0)
          {
            *a2 = v30 + 1;
            goto LABEL_108;
          }
        }
        uint64_t v51 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v31);
        int v31 = v51;
        if (v51 < 0) {
          return 0;
        }
LABEL_108:
        *((_DWORD *)this + 14) = v31;
        continue;
      case 0xCu:
        if (v7 != 96) {
          goto LABEL_7;
        }
        uint64_t v32 = *a2;
        if (*a2 >= a2[1])
        {
          int v33 = 0;
        }
        else
        {
          int v33 = *v32;
          if ((*v32 & 0x80000000) == 0)
          {
            *a2 = v32 + 1;
            goto LABEL_111;
          }
        }
        uint64_t v52 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v33);
        int v33 = v52;
        if (v52 < 0) {
          return 0;
        }
LABEL_111:
        *((_DWORD *)this + 15) = v33;
        continue;
      case 0xDu:
        if (v7 != 104) {
          goto LABEL_7;
        }
        unint64_t v34 = *a2;
        if (*a2 >= a2[1])
        {
          int v35 = 0;
        }
        else
        {
          int v35 = *v34;
          if ((*v34 & 0x80000000) == 0)
          {
            *a2 = v34 + 1;
            goto LABEL_114;
          }
        }
        uint64_t v53 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v35);
        int v35 = v53;
        if (v53 < 0) {
          return 0;
        }
LABEL_114:
        *((_DWORD *)this + 16) = v35;
        continue;
      case 0xEu:
        if (v7 != 112) {
          goto LABEL_7;
        }
        int v36 = *a2;
        if (*a2 >= a2[1] || *v36 < 0)
        {
          Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v40 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacuint64_t k = *v36;
          *a2 = v36 + 1;
        }
        *((unsigned char *)this + 68) = Varint64Fallback != 0;
        continue;
      case 0xFu:
        if (v7 != 120) {
          goto LABEL_7;
        }
        uint64_t v38 = *a2;
        if (*a2 >= a2[1])
        {
          int v39 = 0;
        }
        else
        {
          int v39 = *v38;
          if ((*v38 & 0x80000000) == 0)
          {
            *a2 = v38 + 1;
            goto LABEL_117;
          }
        }
        uint64_t v54 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v39);
        int v39 = v54;
        if ((v54 & 0x8000000000000000) == 0)
        {
LABEL_117:
          *((_DWORD *)this + 18) = v39;
          continue;
        }
        return 0;
      default:
        goto LABEL_7;
    }
  }
}

uint64_t CoreML::Specification::Pooling3DLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  signed int v7 = *(_DWORD *)(v5 + 20);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(2, v7, a2, a4);
  }
  signed int v8 = *(_DWORD *)(v5 + 24);
  if (v8) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(3, v8, a2, a4);
  }
  signed int v9 = *(_DWORD *)(v5 + 28);
  if (v9) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(4, v9, a2, a4);
  }
  signed int v10 = *(_DWORD *)(v5 + 32);
  if (v10) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(5, v10, a2, a4);
  }
  signed int v11 = *(_DWORD *)(v5 + 36);
  if (v11) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(6, v11, a2, a4);
  }
  signed int v12 = *(_DWORD *)(v5 + 40);
  if (v12) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(7, v12, a2, a4);
  }
  signed int v13 = *(_DWORD *)(v5 + 44);
  if (v13) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(8, v13, a2, a4);
  }
  signed int v14 = *(_DWORD *)(v5 + 48);
  if (v14) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(9, v14, a2, a4);
  }
  signed int v15 = *(_DWORD *)(v5 + 52);
  if (v15) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(10, v15, a2, a4);
  }
  signed int v16 = *(_DWORD *)(v5 + 56);
  if (v16) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(11, v16, a2, a4);
  }
  signed int v17 = *(_DWORD *)(v5 + 60);
  if (v17) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(12, v17, a2, a4);
  }
  signed int v18 = *(_DWORD *)(v5 + 64);
  if (v18) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(13, v18, a2, a4);
  }
  if (*(unsigned char *)(v5 + 68)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(14, 1u, a2, a4);
  }
  signed int v19 = *(_DWORD *)(v5 + 72);
  if (v19)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(15, v19, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::Pooling3DLayerParams::ByteSizeLong(CoreML::Specification::Pooling3DLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 10;
    }
    else {
      uint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t v3 = v2 + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 5);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 10;
    }
    else {
      uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v5 + 1;
  }
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v7 + 1;
  }
  int v8 = *((_DWORD *)this + 7);
  if (v8)
  {
    if (v8 < 0) {
      uint64_t v9 = 10;
    }
    else {
      uint64_t v9 = (9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v9 + 1;
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    if (v10 < 0) {
      uint64_t v11 = 10;
    }
    else {
      uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v11 + 1;
  }
  int v12 = *((_DWORD *)this + 9);
  if (v12)
  {
    if (v12 < 0) {
      uint64_t v13 = 10;
    }
    else {
      uint64_t v13 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v13 + 1;
  }
  int v14 = *((_DWORD *)this + 10);
  if (v14)
  {
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v15;
  }
  int v16 = *((_DWORD *)this + 11);
  if (v16)
  {
    if (v16 < 0) {
      uint64_t v17 = 11;
    }
    else {
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v17;
  }
  int v18 = *((_DWORD *)this + 12);
  if (v18)
  {
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v19;
  }
  int v20 = *((_DWORD *)this + 13);
  if (v20)
  {
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v21;
  }
  int v22 = *((_DWORD *)this + 14);
  if (v22)
  {
    if (v22 < 0) {
      uint64_t v23 = 11;
    }
    else {
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v23;
  }
  int v24 = *((_DWORD *)this + 15);
  if (v24)
  {
    if (v24 < 0) {
      uint64_t v25 = 11;
    }
    else {
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v25;
  }
  int v26 = *((_DWORD *)this + 16);
  if (v26)
  {
    if (v26 < 0) {
      uint64_t v27 = 11;
    }
    else {
      uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v27;
  }
  if (*((unsigned char *)this + 68)) {
    v3 += 2;
  }
  int v28 = *((_DWORD *)this + 18);
  if (v28)
  {
    if (v28 < 0) {
      uint64_t v29 = 11;
    }
    else {
      uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v29;
  }
  *((_DWORD *)this + 19) = v3;
  return v3;
}

uint64_t CoreML::Specification::Pooling3DLayerParams::IsInitialized(CoreML::Specification::Pooling3DLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::Pooling3DLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Pooling3DLayerParams");
}

CoreML::Specification::GlobalPooling3DLayerParams *CoreML::Specification::GlobalPooling3DLayerParams::GlobalPooling3DLayerParams(CoreML::Specification::GlobalPooling3DLayerParams *this)
{
  *(void *)this = &unk_26D75FD30;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GlobalPooling3DLayerParams *)&CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F84894(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::GlobalPooling3DLayerParams::~GlobalPooling3DLayerParams(CoreML::Specification::GlobalPooling3DLayerParams *this)
{
  *(void *)this = &unk_26D75FD30;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75FD30;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::GlobalPooling3DLayerParams::New(CoreML::Specification::GlobalPooling3DLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F849A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::GlobalPooling3DLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::GlobalPooling3DLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::GlobalPooling3DLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::GlobalPooling3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::GlobalPooling3DLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::GlobalPooling3DLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::GlobalPooling3DLayerParams::ByteSizeLong(CoreML::Specification::GlobalPooling3DLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

std::string *CoreML::Specification::GlobalPooling3DLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::GlobalPooling3DLayerParams::IsInitialized(CoreML::Specification::GlobalPooling3DLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::GlobalPooling3DLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GlobalPooling3DLayerParams");
}

CoreML::Specification::PaddingLayerParams_PaddingConstant *CoreML::Specification::PaddingLayerParams_PaddingConstant::PaddingLayerParams_PaddingConstant(CoreML::Specification::PaddingLayerParams_PaddingConstant *this)
{
  *(void *)this = &unk_26D75FDC8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingConstant *)&CoreML::Specification::_PaddingLayerParams_PaddingConstant_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F84BFC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PaddingLayerParams_PaddingConstant::~PaddingLayerParams_PaddingConstant(CoreML::Specification::PaddingLayerParams_PaddingConstant *this)
{
  *(void *)this = &unk_26D75FDC8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75FDC8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::PaddingLayerParams_PaddingConstant::New(CoreML::Specification::PaddingLayerParams_PaddingConstant *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F84D10(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::PaddingLayerParams_PaddingConstant>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::PaddingLayerParams_PaddingConstant>);
  }
  return result;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingConstant::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingConstant::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingConstant *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    int v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingConstant::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingConstant::ByteSizeLong(CoreML::Specification::PaddingLayerParams_PaddingConstant *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::PaddingLayerParams_PaddingConstant::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingConstant::IsInitialized(CoreML::Specification::PaddingLayerParams_PaddingConstant *this)
{
  return 1;
}

void *CoreML::Specification::PaddingLayerParams_PaddingConstant::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PaddingLayerParams.PaddingConstant");
}

CoreML::Specification::PaddingLayerParams_PaddingReflection *CoreML::Specification::PaddingLayerParams_PaddingReflection::PaddingLayerParams_PaddingReflection(CoreML::Specification::PaddingLayerParams_PaddingReflection *this)
{
  *(void *)this = &unk_26D75FE60;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingReflection *)&CoreML::Specification::_PaddingLayerParams_PaddingReflection_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F84F54(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PaddingLayerParams_PaddingReflection::~PaddingLayerParams_PaddingReflection(CoreML::Specification::PaddingLayerParams_PaddingReflection *this)
{
  *(void *)this = &unk_26D75FE60;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75FE60;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::PaddingLayerParams_PaddingReflection::New(CoreML::Specification::PaddingLayerParams_PaddingReflection *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F85068(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::PaddingLayerParams_PaddingReflection>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::PaddingLayerParams_PaddingReflection>);
  }
  return result;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReflection::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingReflection *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReflection::ByteSizeLong(CoreML::Specification::PaddingLayerParams_PaddingReflection *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::PaddingLayerParams_PaddingReflection::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReflection::IsInitialized(CoreML::Specification::PaddingLayerParams_PaddingReflection *this)
{
  return 1;
}

void *CoreML::Specification::PaddingLayerParams_PaddingReflection::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PaddingLayerParams.PaddingReflection");
}

CoreML::Specification::PaddingLayerParams_PaddingReplication *CoreML::Specification::PaddingLayerParams_PaddingReplication::PaddingLayerParams_PaddingReplication(CoreML::Specification::PaddingLayerParams_PaddingReplication *this)
{
  *(void *)this = &unk_26D75FEF8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingReplication *)&CoreML::Specification::_PaddingLayerParams_PaddingReplication_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F851C8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PaddingLayerParams_PaddingReplication::~PaddingLayerParams_PaddingReplication(CoreML::Specification::PaddingLayerParams_PaddingReplication *this)
{
  *(void *)this = &unk_26D75FEF8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75FEF8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::PaddingLayerParams_PaddingReplication::New(CoreML::Specification::PaddingLayerParams_PaddingReplication *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F852DC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::PaddingLayerParams_PaddingReplication>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::PaddingLayerParams_PaddingReplication>);
  }
  return result;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReplication::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingReplication *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReplication::ByteSizeLong(CoreML::Specification::PaddingLayerParams_PaddingReplication *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::PaddingLayerParams_PaddingReplication::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReplication::IsInitialized(CoreML::Specification::PaddingLayerParams_PaddingReplication *this)
{
  return 1;
}

void *CoreML::Specification::PaddingLayerParams_PaddingReplication::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PaddingLayerParams.PaddingReplication");
}

CoreML::Specification::PaddingLayerParams *CoreML::Specification::PaddingLayerParams::PaddingLayerParams(CoreML::Specification::PaddingLayerParams *this)
{
  *(void *)this = &unk_26D75FF90;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_223F85440(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::PaddingLayerParams *CoreML::Specification::PaddingLayerParams::PaddingLayerParams(CoreML::Specification::PaddingLayerParams *this, const CoreML::Specification::PaddingLayerParams *a2)
{
  *(void *)this = &unk_26D75FF90;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 8) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_
    && *((void *)a2 + 2) != 0)
  {
    operator new();
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 9) = 0;
  int v6 = *((_DWORD *)a2 + 9);
  switch(v6)
  {
    case 3:
      CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
      *((_DWORD *)this + 9) = 3;
      operator new();
    case 2:
      CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
      *((_DWORD *)this + 9) = 2;
      operator new();
    case 1:
      CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
      *((_DWORD *)this + 9) = 1;
      operator new();
  }
  return this;
}

void sub_223F85660(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v2, 0x1081C40622C3295);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PaddingLayerParams::~PaddingLayerParams(CoreML::Specification::PaddingLayerParams *this)
{
  *(void *)this = &unk_26D75FF90;
  CoreML::Specification::PaddingLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::PaddingLayerParams::~PaddingLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::PaddingLayerParams::SharedDtor(uint64_t *this)
{
  uint64_t v1 = (uint64_t)this;
  if (this != &CoreML::Specification::_PaddingLayerParams_default_instance_)
  {
    this = (uint64_t *)this[2];
    if (this) {
      this = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*this + 8))(this);
    }
  }
  if (*(_DWORD *)(v1 + 36))
  {
    return (uint64_t *)CoreML::Specification::PaddingLayerParams::clear_PaddingType(v1);
  }
  return this;
}

uint64_t CoreML::Specification::PaddingLayerParams::clear_PaddingType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 3 || v2 == 2 || v2 == 1)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t *CoreML::Specification::PaddingLayerParams::default_instance(CoreML::Specification::PaddingLayerParams *this)
{
  return &CoreML::Specification::_PaddingLayerParams_default_instance_;
}

void CoreML::Specification::PaddingLayerParams::New(CoreML::Specification::PaddingLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F858BC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::PaddingLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::PaddingLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::PaddingLayerParams::Clear(CoreML::Specification::PaddingLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  return CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
}

uint64_t CoreML::Specification::PaddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams *this, char **a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 >= a2[1]) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_29:
      if (v7) {
        BOOL v17 = (v7 & 7) == 4;
      }
      else {
        BOOL v17 = 1;
      }
      if (v17) {
        return 1;
      }
      if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)goto LABEL_56; {
    }
      }
    uint64_t v6 = 0;
LABEL_6:
    unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_29;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 1)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 1;
          operator new();
        }
        uint64_t v9 = (CoreML::Specification::PaddingLayerParams_PaddingConstant *)*((void *)this + 3);
        int v18 = *a2;
        if (*a2 >= a2[1] || *v18 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v18;
          *a2 = v18 + 1;
        }
        unint64_t v31 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((v31 & 0x8000000000000000) != 0) {
          goto LABEL_56;
        }
        int v30 = v31;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingConstant::MergePartialFromCodedStream(v9, a2, v32);
        if (!result) {
          return result;
        }
LABEL_54:
        int v26 = (_tc_google::protobuf::io::CodedInputStream *)a2;
        int v27 = v30;
LABEL_55:
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v26, v27)) {
          continue;
        }
LABEL_56:
        uint64_t result = 0;
        break;
      case 2u:
        if (v7 != 18) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 2)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 2;
          operator new();
        }
        BOOL v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          int v11 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v11 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v11 = *v10;
          *a2 = v10 + 1;
        }
        unint64_t v20 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v11);
        if ((v20 & 0x8000000000000000) != 0) {
          goto LABEL_56;
        }
        int v22 = v20;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingReflection::MergePartialFromCodedStream((CoreML::Specification::PaddingLayerParams_PaddingReflection *)v20, a2, v21);
        if (!result) {
          return result;
        }
        goto LABEL_46;
      case 3u:
        if (v7 != 26) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 3)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 3;
          operator new();
        }
        int v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          int v13 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v13 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v13 = *v12;
          *a2 = v12 + 1;
        }
        unint64_t v24 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v13);
        if ((v24 & 0x8000000000000000) != 0) {
          goto LABEL_56;
        }
        int v22 = v24;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingReplication::MergePartialFromCodedStream((CoreML::Specification::PaddingLayerParams_PaddingReplication *)v24, a2, v25);
        if (!result) {
          return result;
        }
LABEL_46:
        int v26 = (_tc_google::protobuf::io::CodedInputStream *)a2;
        int v27 = v22;
        goto LABEL_55;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_29;
        }
        int v14 = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
        if (!v14) {
          operator new();
        }
        unsigned int v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          int v16 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v16 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v16 = *v15;
          *a2 = v15 + 1;
        }
        unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v16);
        if ((v28 & 0x8000000000000000) != 0) {
          goto LABEL_56;
        }
        int v30 = v28;
        uint64_t result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v14, a2, v29);
        if (!result) {
          return result;
        }
        goto LABEL_54;
      default:
        goto LABEL_29;
    }
    return result;
  }
}

void sub_223F85CDC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PaddingLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6 == 1)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 2)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 3) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_PaddingLayerParams_default_instance_)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    if (v7)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, v7, a2, a4);
    }
  }
  return this;
}

CoreML::Specification::BorderAmounts *CoreML::Specification::PaddingLayerParams::ByteSizeLong(CoreML::Specification::PaddingLayerParams *this)
{
  if (this == (CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::BorderAmounts::ByteSizeLong(result);
      uint64_t result = (CoreML::Specification::BorderAmounts *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  int v4 = *((_DWORD *)this + 9);
  if (v4 == 3 || v4 == 2)
  {
    *(_DWORD *)(*((void *)this + 3) + 16) = 0;
    uint64_t result = (CoreML::Specification::BorderAmounts *)((char *)result + 2);
  }
  else if (v4 == 1)
  {
    uint64_t v5 = *((void *)this + 3);
    uint64_t v6 = 5;
    if (*(float *)(v5 + 16) == 0.0) {
      uint64_t v6 = 0;
    }
    *(_DWORD *)(v5 + 2CoreML::Specification::Identity::New(this, 0) = v6;
    uint64_t result = (CoreML::Specification::BorderAmounts *)((char *)result + v6 + 2);
  }
  *((_DWORD *)this + 8) = result;
  return result;
}

uint64_t CoreML::Specification::PaddingLayerParams::IsInitialized(CoreML::Specification::PaddingLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::PaddingLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PaddingLayerParams");
}

CoreML::Specification::ConcatLayerParams *CoreML::Specification::ConcatLayerParams::ConcatLayerParams(CoreML::Specification::ConcatLayerParams *this)
{
  *(void *)this = &unk_26D760028;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ConcatLayerParams *)&CoreML::Specification::_ConcatLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_223F85F44(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ConcatLayerParams::~ConcatLayerParams(CoreML::Specification::ConcatLayerParams *this)
{
  *(void *)this = &unk_26D760028;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760028;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ConcatLayerParams::default_instance(CoreML::Specification::ConcatLayerParams *this)
{
  return &CoreML::Specification::_ConcatLayerParams_default_instance_;
}

void CoreML::Specification::ConcatLayerParams::New(CoreML::Specification::ConcatLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F86078(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ConcatLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ConcatLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ConcatLayerParams::Clear(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ConcatLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConcatLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 < v6) {
        break;
      }
      uint64_t v8 = 0;
LABEL_16:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_17;
      }
LABEL_8:
      if (v9 != 32 || (v9 & 0xFFFFFFF8) != 0x320) {
        goto LABEL_17;
      }
      int v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacuint64_t k = *v11;
        *(void *)a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    uint64_t v7 = v5 + 1;
    uint64_t v8 = *v5;
    if ((char)*v5 < 1)
    {
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_8;
        }
      }
      goto LABEL_16;
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_17:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::ConcatLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(100, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::ConcatLayerParams::ByteSizeLong(CoreML::Specification::ConcatLayerParams *this)
{
  uint64_t v1 = 3;
  if (!*((unsigned char *)this + 16)) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::ConcatLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::ConcatLayerParams::IsInitialized(CoreML::Specification::ConcatLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ConcatLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ConcatLayerParams");
}

CoreML::Specification::LRNLayerParams *CoreML::Specification::LRNLayerParams::LRNLayerParams(CoreML::Specification::LRNLayerParams *this)
{
  *(void *)this = &unk_26D7600C0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LRNLayerParams *)&CoreML::Specification::_LRNLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_223F862F0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LRNLayerParams::~LRNLayerParams(CoreML::Specification::LRNLayerParams *this)
{
  *(void *)this = &unk_26D7600C0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7600C0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::LRNLayerParams::default_instance(CoreML::Specification::LRNLayerParams *this)
{
  return &CoreML::Specification::_LRNLayerParams_default_instance_;
}

void CoreML::Specification::LRNLayerParams::New(CoreML::Specification::LRNLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F86420(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LRNLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LRNLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LRNLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

BOOL CoreML::Specification::LRNLayerParams::MergePartialFromCodedStream(CoreML::Specification::LRNLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 13) {
            goto LABEL_24;
          }
          unsigned int v21 = 0;
          unint64_t v9 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v10 = v21;
          }
          else
          {
            unsigned int v10 = *v9;
            *a2 = (char *)(v9 + 1);
          }
          *((_DWORD *)this + 4) = v10;
          continue;
        case 2u:
          if (v7 != 21) {
            goto LABEL_24;
          }
          unsigned int v20 = 0;
          int v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v12 = v20;
          }
          else
          {
            unsigned int v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 24) {
            goto LABEL_24;
          }
          char v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            *((void *)this + 3) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 3) = *v13;
            *a2 = v13 + 1;
          }
          break;
        case 4u:
          if (v7 != 37) {
            goto LABEL_24;
          }
          unsigned int v19 = 0;
          int v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v19);
            if (!result) {
              return result;
            }
            unsigned int v15 = v19;
          }
          else
          {
            unsigned int v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 8) = v15;
          continue;
        default:
          goto LABEL_24;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::LRNLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  float v6 = *(float *)(this + 16);
  if (v6 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v6, a3);
  }
  float v7 = *(float *)(v5 + 20);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  unint64_t v8 = *(void *)(v5 + 24);
  if (v8) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(3, v8, a2, a4);
  }
  float v9 = *(float *)(v5 + 32);
  if (v9 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)4, a2, v9, a3);
  }
  return this;
}

uint64_t CoreML::Specification::LRNLayerParams::ByteSizeLong(CoreML::Specification::LRNLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = v1 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    uint64_t v1 = v3 + 1;
  }
  if (*((float *)this + 8) != 0.0) {
    v1 += 5;
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

uint64_t CoreML::Specification::LRNLayerParams::IsInitialized(CoreML::Specification::LRNLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LRNLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LRNLayerParams");
}

CoreML::Specification::SoftmaxLayerParams *CoreML::Specification::SoftmaxLayerParams::SoftmaxLayerParams(CoreML::Specification::SoftmaxLayerParams *this)
{
  *(void *)this = &unk_26D760158;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SoftmaxLayerParams *)&CoreML::Specification::_SoftmaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F867F4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SoftmaxLayerParams::~SoftmaxLayerParams(CoreML::Specification::SoftmaxLayerParams *this)
{
  *(void *)this = &unk_26D760158;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760158;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::SoftmaxLayerParams::New(CoreML::Specification::SoftmaxLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F86908(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SoftmaxLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SoftmaxLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SoftmaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::SoftmaxLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::SoftmaxLayerParams::ByteSizeLong(CoreML::Specification::SoftmaxLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::SoftmaxLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::SoftmaxLayerParams::IsInitialized(CoreML::Specification::SoftmaxLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SoftmaxLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SoftmaxLayerParams");
}

CoreML::Specification::SplitLayerParams *CoreML::Specification::SplitLayerParams::SplitLayerParams(CoreML::Specification::SplitLayerParams *this)
{
  *(void *)this = &unk_26D7601F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SplitLayerParams *)&CoreML::Specification::_SplitLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F86A6C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SplitLayerParams::~SplitLayerParams(CoreML::Specification::SplitLayerParams *this)
{
  *(void *)this = &unk_26D7601F0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7601F0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::SplitLayerParams::default_instance(CoreML::Specification::SplitLayerParams *this)
{
  return &CoreML::Specification::_SplitLayerParams_default_instance_;
}

void CoreML::Specification::SplitLayerParams::New(CoreML::Specification::SplitLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F86B9C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SplitLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SplitLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SplitLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::SplitLayerParams::MergePartialFromCodedStream(CoreML::Specification::SplitLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((void *)this + 2) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::SplitLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::SplitLayerParams::ByteSizeLong(CoreML::Specification::SplitLayerParams *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::SplitLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::SplitLayerParams::IsInitialized(CoreML::Specification::SplitLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SplitLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SplitLayerParams");
}

CoreML::Specification::AddLayerParams *CoreML::Specification::AddLayerParams::AddLayerParams(CoreML::Specification::AddLayerParams *this)
{
  *(void *)this = &unk_26D760288;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AddLayerParams *)&CoreML::Specification::_AddLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F86DD8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AddLayerParams::~AddLayerParams(CoreML::Specification::AddLayerParams *this)
{
  *(void *)this = &unk_26D760288;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760288;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AddLayerParams::New(CoreML::Specification::AddLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F86EEC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AddLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AddLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AddLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::AddLayerParams::MergePartialFromCodedStream(CoreML::Specification::AddLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      std::string::size_type v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    char v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::AddLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::AddLayerParams::ByteSizeLong(CoreML::Specification::AddLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::AddLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::AddLayerParams::IsInitialized(CoreML::Specification::AddLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AddLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AddLayerParams");
}

CoreML::Specification::MultiplyLayerParams *CoreML::Specification::MultiplyLayerParams::MultiplyLayerParams(CoreML::Specification::MultiplyLayerParams *this)
{
  *(void *)this = &unk_26D760320;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MultiplyLayerParams *)&CoreML::Specification::_MultiplyLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F87130(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MultiplyLayerParams::~MultiplyLayerParams(CoreML::Specification::MultiplyLayerParams *this)
{
  *(void *)this = &unk_26D760320;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760320;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::MultiplyLayerParams::New(CoreML::Specification::MultiplyLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F87244(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::MultiplyLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::MultiplyLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::MultiplyLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::MultiplyLayerParams::MergePartialFromCodedStream(CoreML::Specification::MultiplyLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    char v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::MultiplyLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::MultiplyLayerParams::ByteSizeLong(CoreML::Specification::MultiplyLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::MultiplyLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::MultiplyLayerParams::IsInitialized(CoreML::Specification::MultiplyLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::MultiplyLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MultiplyLayerParams");
}

CoreML::Specification::UnaryFunctionLayerParams *CoreML::Specification::UnaryFunctionLayerParams::UnaryFunctionLayerParams(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  *(void *)this = &unk_26D7603B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::UnaryFunctionLayerParams *)&CoreML::Specification::_UnaryFunctionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_223F8748C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::UnaryFunctionLayerParams::~UnaryFunctionLayerParams(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  *(void *)this = &unk_26D7603B8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7603B8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::UnaryFunctionLayerParams::New(CoreML::Specification::UnaryFunctionLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8759C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::UnaryFunctionLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::UnaryFunctionLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::UnaryFunctionLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

BOOL CoreML::Specification::UnaryFunctionLayerParams::MergePartialFromCodedStream(CoreML::Specification::UnaryFunctionLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_28;
          }
          float v9 = *a2;
          if (*a2 >= a2[1])
          {
            int v10 = 0;
          }
          else
          {
            int v10 = *v9;
            if ((*v9 & 0x80000000) == 0)
            {
              *a2 = v9 + 1;
              goto LABEL_36;
            }
          }
          Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v10);
          int v10 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_36:
          *((_DWORD *)this + 4) = v10;
          break;
        case 2u:
          if (v7 != 21) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          uint64_t v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v12 = v22;
          }
          else
          {
            unsigned int v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 29) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v14 = v22;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 6) = v14;
          continue;
        case 4u:
          if (v7 != 37) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          unsigned int v15 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v16 = v22;
          }
          else
          {
            unsigned int v16 = *v15;
            *a2 = (char *)(v15 + 1);
          }
          *((_DWORD *)this + 7) = v16;
          continue;
        case 5u:
          if (v7 != 45) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          char v17 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v18 = v22;
          }
          else
          {
            unsigned int v18 = *v17;
            *a2 = (char *)(v17 + 1);
          }
          *((_DWORD *)this + 8) = v18;
          continue;
        default:
          goto LABEL_28;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_28:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::UnaryFunctionLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  float v5 = (float *)this;
  signed int v6 = *(_DWORD *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  float v7 = v5[5];
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  float v8 = v5[6];
  if (v8 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  }
  float v9 = v5[7];
  if (v9 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)4, a2, v9, a3);
  }
  float v10 = v5[8];
  if (v10 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)5, a2, v10, a3);
  }
  return this;
}

uint64_t CoreML::Specification::UnaryFunctionLayerParams::ByteSizeLong(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v1 >= 0) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 11;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 8) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 9) = v3;
  return v3;
}

uint64_t CoreML::Specification::UnaryFunctionLayerParams::IsInitialized(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::UnaryFunctionLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.UnaryFunctionLayerParams");
}

CoreML::Specification::UpsampleLayerParams *CoreML::Specification::UpsampleLayerParams::UpsampleLayerParams(CoreML::Specification::UpsampleLayerParams *this)
{
  *(void *)this = &unk_26D760450;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::UpsampleLayerParams *)&CoreML::Specification::_UpsampleLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 6CoreML::Specification::Identity::New(this, 0) = 0;
  *((_DWORD *)this + 17) = 0;
  return this;
}

void sub_223F87A10(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v1 + 48);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  CoreML::Specification::LinearQuantizationParams::LinearQuantizationParams(v1);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

CoreML::Specification::UpsampleLayerParams *CoreML::Specification::UpsampleLayerParams::UpsampleLayerParams(CoreML::Specification::UpsampleLayerParams *this, const CoreML::Specification::UpsampleLayerParams *a2)
{
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *(void *)this = &unk_26D760450;
  *((void *)this + 2) = 0;
  float v5 = (unsigned int *)((char *)this + 16);
  *((void *)this + 3) = 0;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v6);
    memcpy((void *)(*((void *)this + 3) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  int v7 = *((_DWORD *)a2 + 10);
  if (v7)
  {
    _tc_google::protobuf::RepeatedField<float>::Reserve((unsigned int *)this + 10, v7);
    memcpy((void *)(*((void *)this + 6) + 8), (const void *)(*((void *)a2 + 6) + 8), 4 * *((int *)a2 + 10));
    *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = *((_DWORD *)a2 + 10);
  }
  *((_DWORD *)this + 17) = 0;
  uint64_t v8 = *((void *)a2 + 1);
  if (v8) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v8 & 0xFFFFFFFFFFFFFFFELL);
  }
  *(void *)((char *)this + 6CoreML::Specification::Identity::New(this, 0) = *(void *)((char *)a2 + 60);
  return this;
}

void sub_223F87B28(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  float v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::UpsampleLayerParams::~UpsampleLayerParams(CoreML::Specification::UpsampleLayerParams *this)
{
  *(void *)this = &unk_26D760450;
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::UpsampleLayerParams::~UpsampleLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::UpsampleLayerParams::default_instance(CoreML::Specification::UpsampleLayerParams *this)
{
  return &CoreML::Specification::_UpsampleLayerParams_default_instance_;
}

void CoreML::Specification::UpsampleLayerParams::New(CoreML::Specification::UpsampleLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F87C98(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40BDAE892FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::UpsampleLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::UpsampleLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::UpsampleLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(this + 6CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

BOOL CoreML::Specification::UpsampleLayerParams::MergePartialFromCodedStream(CoreML::Specification::UpsampleLayerParams *this, char **a2, unsigned int a3)
{
  float v5 = (unsigned int *)((char *)this + 40);
  int v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    int v7 = *a2;
    if (*a2 >= a2[1])
    {
      uint64_t v8 = 0;
      break;
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      break;
    }
    *a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_27:
    if (v9) {
      BOOL v19 = (v9 & 7) == 4;
    }
    else {
      BOOL v19 = 1;
    }
    if (v19) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
  unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v8);
  unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v9 & 0x100000000) == 0) {
    goto LABEL_27;
  }
LABEL_8:
  switch(v9 >> 3)
  {
    case 1u:
      if (v9 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v6) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v9 != 10) {
          goto LABEL_27;
        }
        uint64_t v11 = *a2;
        if (*a2 >= a2[1] || *v11 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v11;
          *a2 = v11 + 1;
        }
        int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            unsigned int v21 = *a2;
            if (*a2 >= a2[1] || *v21 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v6, v25 + 1);
              signed int v25 = *v6;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
      }
      goto LABEL_2;
    case 5u:
      if (v9 != 40) {
        goto LABEL_27;
      }
      unsigned int v13 = *a2;
      if (*a2 >= a2[1])
      {
        int v14 = 0;
      }
      else
      {
        int v14 = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *a2 = v13 + 1;
          goto LABEL_78;
        }
      }
      Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v14);
      int v14 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_78:
      *((_DWORD *)this + 15) = v14;
      goto LABEL_2;
    case 6u:
      if (v9 != 48) {
        goto LABEL_27;
      }
      unsigned int v15 = *a2;
      if (*a2 >= a2[1])
      {
        int v16 = 0;
      }
      else
      {
        int v16 = *v15;
        if ((*v15 & 0x80000000) == 0)
        {
          *a2 = v15 + 1;
          goto LABEL_81;
        }
      }
      uint64_t v43 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v16);
      int v16 = v43;
      if (v43 < 0) {
        return 0;
      }
LABEL_81:
      *((_DWORD *)this + 16) = v16;
      goto LABEL_2;
    case 7u:
      if (v9 == 61)
      {
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(_tc_google::protobuf::internal::WireFormatLite::FieldType)2>(1, 0x3Au, (unsigned int **)a2, (uint64_t)v5))return 0; {
        goto LABEL_2;
        }
      }
      if (v9 != 58) {
        goto LABEL_27;
      }
      char v17 = *a2;
      if (*a2 >= a2[1] || *v17 < 0)
      {
        unsigned int v18 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v18 = *v17;
        *a2 = v17 + 1;
      }
      if ((v18 & 3) != 0) {
        return 0;
      }
      signed int v27 = *v5;
      unsigned int v28 = v18 >> 2;
      int v29 = _tc_google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      int v30 = _tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v30 >= v29) {
        int v31 = v29;
      }
      else {
        int v31 = v30;
      }
      if (v29 == -1) {
        int v31 = v30;
      }
      if (v31 < (uint64_t)v18)
      {
        if (v18 >= 4)
        {
          if (v28 <= 1) {
            int v32 = 1;
          }
          else {
            int v32 = v18 >> 2;
          }
          do
          {
            unsigned int v44 = 0;
            int v33 = (unsigned int *)*a2;
            if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
            {
              BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v44);
              if (!result) {
                return result;
              }
              unsigned int v34 = v44;
            }
            else
            {
              unsigned int v34 = *v33;
              *a2 = (char *)(v33 + 1);
            }
            signed int v35 = *((_DWORD *)this + 10);
            if (v35 == *((_DWORD *)this + 11))
            {
              _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v35 + 1);
              signed int v35 = *v5;
            }
            uint64_t v36 = *((void *)this + 6);
            *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v35 + 1;
            *(_DWORD *)(v36 + 4 * v35 + 8) = v34;
            --v32;
          }
          while (v32);
        }
        goto LABEL_2;
      }
      signed int v38 = v27 + v28;
      if ((int)*v5 >= (int)(v27 + v28))
      {
        uint64_t v39 = *((void *)this + 6);
      }
      else
      {
        _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v27 + v28);
        uint64_t v39 = *((void *)this + 6);
        uint64_t v40 = 4 * v38 - 4 * *((int *)this + 10);
        if (v40 >= 1) {
          bzero((void *)(v39 + 8 + 4 * *((int *)this + 10)), 4 * (((unint64_t)v40 >> 2) - ((unint64_t)v40 > 3)) + 4);
        }
      }
      unsigned int *v5 = v38;
      uint64_t v41 = v39 + 8;
      if (!v39) {
        uint64_t v41 = 0;
      }
      if (_tc_google::protobuf::io::CodedInputStream::ReadRaw((_tc_google::protobuf::io::CodedInputStream *)a2, (char *)(v41 + 4 * v27), v18))
      {
        goto LABEL_2;
      }
      if ((int)*v5 < 1) {
        return 0;
      }
      BOOL result = 0;
      unsigned int *v5 = v27;
      return result;
    default:
      goto LABEL_27;
  }
}

uint64_t CoreML::Specification::UpsampleLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *unint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v5 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            char v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            char v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *char v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  signed int v21 = *(_DWORD *)(v5 + 60);
  if (v21) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(5, v21, a2, a4);
  }
  signed int v22 = *(_DWORD *)(v5 + 64);
  if (v22) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(6, v22, a2, a4);
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x3Au);
      int v23 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 58;
      int v23 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v23;
    }
    unsigned int v24 = *(_DWORD *)(v5 + 56);
    if (v23 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v24);
    }
    else
    {
      uint64_t v25 = *((void *)a2 + 1);
      if (v24 < 0x80)
      {
        unsigned int v27 = *(_DWORD *)(v5 + 56);
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v26++ = v24 | 0x80;
          unsigned int v27 = v24 >> 7;
          unsigned int v28 = v24 >> 14;
          v24 >>= 7;
        }
        while (v28);
      }
      unsigned char *v26 = v27;
      int v29 = v26 - v25 + 1;
      *((void *)a2 + 1) += v29;
      *((_DWORD *)a2 + 4) -= v29;
    }
    uint64_t v30 = *(void *)(v5 + 48);
    if (v30) {
      int v31 = (_tc_google::protobuf::internal::WireFormatLite *)(v30 + 8);
    }
    else {
      int v31 = 0;
    }
    int v32 = (const float *)*(unsigned int *)(v5 + 40);
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloatArray(v31, v32, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::UpsampleLayerParams::ByteSizeLong(CoreML::Specification::UpsampleLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((unsigned int *)this + 10);
  uint64_t v8 = 4 * v7;
  if (v7)
  {
    if ((v8 & 0x80000000) != 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v9;
  }
  *((_DWORD *)this + 14) = v8;
  uint64_t v10 = v6 + v8;
  int v11 = *((_DWORD *)this + 15);
  if (v11)
  {
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 += v12;
  }
  int v13 = *((_DWORD *)this + 16);
  if (v13)
  {
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 += v14;
  }
  *((_DWORD *)this + 17) = v10;
  return v10;
}

uint64_t CoreML::Specification::UpsampleLayerParams::IsInitialized(CoreML::Specification::UpsampleLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::UpsampleLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.UpsampleLayerParams");
}

CoreML::Specification::ResizeBilinearLayerParams *CoreML::Specification::ResizeBilinearLayerParams::ResizeBilinearLayerParams(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7604E8;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_223F885D0(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::ResizeBilinearLayerParams *CoreML::Specification::ResizeBilinearLayerParams::ResizeBilinearLayerParams(CoreML::Specification::ResizeBilinearLayerParams *this, const CoreML::Specification::ResizeBilinearLayerParams *a2)
{
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *(void *)this = &unk_26D7604E8;
  *((void *)this + 2) = 0;
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  *((void *)this + 3) = 0;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v6);
    memcpy((void *)(*((void *)this + 3) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  }
  *((_DWORD *)this + 12) = 0;
  uint64_t v7 = *((void *)a2 + 1);
  if (v7) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v7 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    operator new();
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_223F886E0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v3, 0x1081C40CC6EE3FDLL);
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ResizeBilinearLayerParams::~ResizeBilinearLayerParams(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  *(void *)this = &unk_26D7604E8;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  uint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ResizeBilinearLayerParams::~ResizeBilinearLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ResizeBilinearLayerParams::default_instance(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  return &CoreML::Specification::_ResizeBilinearLayerParams_default_instance_;
}

void CoreML::Specification::ResizeBilinearLayerParams::New(CoreML::Specification::ResizeBilinearLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8887C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ResizeBilinearLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ResizeBilinearLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::Clear(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::MergePartialFromCodedStream(CoreML::Specification::ResizeBilinearLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        int v6 = *a2;
        if (*a2 < a2[1]) {
          break;
        }
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        uint64_t v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v10;
          *a2 = v10 + 1;
        }
        int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            signed int v21 = *a2;
            if (*a2 >= a2[1] || *v21 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    uint64_t v12 = (CoreML::Specification::SamplingMode *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    int v13 = *a2;
    if (*a2 >= a2[1] || *v13 < 0)
    {
      int v14 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *a2 = v13 + 1;
    }
    unint64_t v16 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v14);
    if ((v16 & 0x8000000000000000) != 0) {
      break;
    }
    int v18 = v16;
    uint64_t result = CoreML::Specification::SamplingMode::MergePartialFromCodedStream(v12, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v18));
  return 0;
}

void sub_223F88B80(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *uint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v5 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *unsigned int v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_ResizeBilinearLayerParams_default_instance_)
  {
    uint64_t v21 = *(void *)(v5 + 40);
    if (v21)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v21, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::ByteSizeLong(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_)
  {
    uint64_t v7 = *((void *)this + 5);
    if (v7)
    {
      int v8 = *(_DWORD *)(v7 + 16);
      if (v8)
      {
        if (v8 < 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      *(_DWORD *)(v7 + 2CoreML::Specification::Identity::New(this, 0) = v9;
      v6 += v9 + 2;
    }
  }
  *((_DWORD *)this + 12) = v6;
  return v6;
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::IsInitialized(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ResizeBilinearLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ResizeBilinearLayerParams");
}

CoreML::Specification::CropResizeLayerParams *CoreML::Specification::CropResizeLayerParams::CropResizeLayerParams(CoreML::Specification::CropResizeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D760580;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 7) = 0;
  return this;
}

void sub_223F88EDC(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::CropResizeLayerParams *CoreML::Specification::CropResizeLayerParams::CropResizeLayerParams(CoreML::Specification::CropResizeLayerParams *this, const CoreML::Specification::CropResizeLayerParams *a2)
{
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *(void *)this = &unk_26D760580;
  *((void *)this + 2) = 0;
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  *((void *)this + 3) = 0;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v6);
    memcpy((void *)(*((void *)this + 3) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  }
  *((_DWORD *)this + 16) = 0;
  uint64_t v7 = *((void *)a2 + 1);
  if (v7) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v7 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 == (const CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    *((void *)this + 5) = 0;
  }
  else
  {
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
  }
  *((void *)this + 6) = 0;
  *((void *)this + 7) = *((void *)a2 + 7);
  return this;
}

void sub_223F8903C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v3, 0x1081C40CC6EE3FDLL);
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::CropResizeLayerParams::~CropResizeLayerParams(CoreML::Specification::CropResizeLayerParams *this)
{
  *(void *)this = &unk_26D760580;
  CoreML::Specification::CropResizeLayerParams::SharedDtor((uint64_t *)this);
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::CropResizeLayerParams::~CropResizeLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::CropResizeLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[5];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[6];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::CropResizeLayerParams::default_instance(CoreML::Specification::CropResizeLayerParams *this)
{
  return &CoreML::Specification::_CropResizeLayerParams_default_instance_;
}

void CoreML::Specification::CropResizeLayerParams::New(CoreML::Specification::CropResizeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F89248(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C405E24942CLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CropResizeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CropResizeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::CropResizeLayerParams::Clear(CoreML::Specification::CropResizeLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v5 = *((void *)this + 6);
  uint64_t v4 = (void *)((char *)this + 48);
  uint64_t result = v5;
  *(v4 - 1) = 0;
  if (v5) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  void *v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t CoreML::Specification::CropResizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::CropResizeLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      int v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 8)
          {
            if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 10) {
              goto LABEL_34;
            }
            unsigned int v10 = *a2;
            if (*a2 >= a2[1] || *v10 < 0)
            {
              VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              VarintSizeAsIntFallbacuint64_t k = *v10;
              *a2 = v10 + 1;
            }
            int v30 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
            if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
            {
              do
              {
                int v31 = *a2;
                if (*a2 >= a2[1] || *v31 < 0)
                {
                  Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                  if ((v34 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v32 = Varint64Fallback;
                }
                else
                {
                  unint64_t v32 = *v31;
                  *a2 = v31 + 1;
                }
                signed int v35 = *((_DWORD *)this + 4);
                if (v35 == *((_DWORD *)this + 5))
                {
                  _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v35 + 1);
                  signed int v35 = *v5;
                }
                uint64_t v36 = *((void *)this + 3);
                *((_DWORD *)this + 4) = v35 + 1;
                *(void *)(v36 + 8 * v35 + 8) = v32;
              }
              while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
            }
            _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v30);
          }
          break;
        case 2u:
          if (v8 != 16) {
            goto LABEL_34;
          }
          int v12 = *a2;
          if (*a2 >= a2[1] || *v12 < 0)
          {
            unint64_t v13 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v23 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v13 = *v12;
            *a2 = v12 + 1;
          }
          *((unsigned char *)this + 56) = v13 != 0;
          continue;
        case 3u:
          if (v8 != 26) {
            goto LABEL_34;
          }
          int v14 = (CoreML::Specification::SamplingMode *)*((void *)this + 5);
          if (!v14) {
            operator new();
          }
          unint64_t v15 = *a2;
          if (*a2 >= a2[1] || *v15 < 0)
          {
            int v16 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v16 < 0) {
              return 0;
            }
          }
          else
          {
            int v16 = *v15;
            *a2 = v15 + 1;
          }
          unint64_t v24 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v16);
          if ((v24 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v26 = v24;
          uint64_t result = CoreML::Specification::SamplingMode::MergePartialFromCodedStream(v14, a2, v25);
          if (!result) {
            return result;
          }
          goto LABEL_51;
        case 4u:
          if (v8 != 34) {
            goto LABEL_34;
          }
          unsigned int v17 = (CoreML::Specification::BoxCoordinatesMode *)*((void *)this + 6);
          if (!v17) {
            operator new();
          }
          unint64_t v18 = *a2;
          if (*a2 >= a2[1] || *v18 < 0)
          {
            int v19 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v19 < 0) {
              return 0;
            }
          }
          else
          {
            int v19 = *v18;
            *a2 = v18 + 1;
          }
          unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v19);
          if ((v28 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v26 = v28;
          uint64_t result = CoreML::Specification::BoxCoordinatesMode::MergePartialFromCodedStream(v17, a2, v29);
          if (!result) {
            return result;
          }
LABEL_51:
          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v26))return 0; {
          continue;
          }
        case 5u:
          if (v8 != 45) {
            goto LABEL_34;
          }
          unsigned int v37 = 0;
          int v20 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            uint64_t result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v37);
            if (!result) {
              return result;
            }
            unsigned int v21 = v37;
          }
          else
          {
            unsigned int v21 = *v20;
            *a2 = (char *)(v20 + 1);
          }
          *((_DWORD *)this + 15) = v21;
          continue;
        default:
          goto LABEL_34;
      }
    }
LABEL_34:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F896C8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CropResizeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *uint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v5 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *unsigned int v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  if (*(unsigned char *)(v5 + 56)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(2, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    uint64_t v21 = *(void *)(v5 + 40);
    if (v21) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, v21, a2, a4);
    }
    uint64_t v22 = *(void *)(v5 + 48);
    if (v22) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v22, a2, a4);
    }
  }
  float v23 = *(float *)(v5 + 60);
  if (v23 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)5, a2, v23, a3);
  }
  return this;
}

uint64_t CoreML::Specification::CropResizeLayerParams::ByteSizeLong(CoreML::Specification::CropResizeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (this != (CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    uint64_t v7 = *((void *)this + 5);
    if (v7)
    {
      int v8 = *(_DWORD *)(v7 + 16);
      if (v8)
      {
        if (v8 < 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      *(_DWORD *)(v7 + 2CoreML::Specification::Identity::New(this, 0) = v9;
      v6 += v9 + 2;
    }
    uint64_t v10 = *((void *)this + 6);
    if (v10)
    {
      int v11 = *(_DWORD *)(v10 + 16);
      if (v11)
      {
        if (v11 < 0) {
          uint64_t v12 = 11;
        }
        else {
          uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v12 = 0;
      }
      *(_DWORD *)(v10 + 2CoreML::Specification::Identity::New(this, 0) = v12;
      v6 += v12 + 2;
    }
  }
  if (*((unsigned char *)this + 56)) {
    v6 += 2;
  }
  if (*((float *)this + 15) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 16) = v6;
  return v6;
}

uint64_t CoreML::Specification::CropResizeLayerParams::IsInitialized(CoreML::Specification::CropResizeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::CropResizeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CropResizeLayerParams");
}

CoreML::Specification::BiasLayerParams *CoreML::Specification::BiasLayerParams::BiasLayerParams(CoreML::Specification::BiasLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D760618;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_223F89AE8(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BiasLayerParams::~BiasLayerParams(CoreML::Specification::BiasLayerParams *this)
{
  *(void *)this = &unk_26D760618;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  uint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::BiasLayerParams::~BiasLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::BiasLayerParams::default_instance(CoreML::Specification::BiasLayerParams *this)
{
  return &CoreML::Specification::_BiasLayerParams_default_instance_;
}

void CoreML::Specification::BiasLayerParams::New(CoreML::Specification::BiasLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F89C58(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BiasLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BiasLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::BiasLayerParams::Clear(CoreML::Specification::BiasLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

BOOL CoreML::Specification::BiasLayerParams::MergePartialFromCodedStream(CoreML::Specification::BiasLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *a2;
        if (*a2 < a2[1]) {
          break;
        }
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        uint64_t v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v10;
          *a2 = v10 + 1;
        }
        int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            uint64_t v21 = *a2;
            if (*a2 >= a2[1] || *v21 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *a2;
    if (*a2 >= a2[1] || *v13 < 0)
    {
      int v14 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *a2 = v13 + 1;
    }
    unint64_t v16 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v14);
    if ((v16 & 0x8000000000000000) != 0) {
      break;
    }
    int v18 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, (_tc_google::protobuf::io::CodedInputStream *)a2, v17);
    if (!result) {
      return result;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v18));
  return 0;
}

void sub_223F89F5C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BiasLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *uint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v5 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *unsigned int v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_BiasLayerParams_default_instance_)
  {
    uint64_t v21 = *(void *)(v5 + 40);
    if (v21)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v21, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::BiasLayerParams::ByteSizeLong(CoreML::Specification::BiasLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::BiasLayerParams::IsInitialized(CoreML::Specification::BiasLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::BiasLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BiasLayerParams");
}

CoreML::Specification::ScaleLayerParams *CoreML::Specification::ScaleLayerParams::ScaleLayerParams(CoreML::Specification::ScaleLayerParams *this)
{
  *(void *)this = &unk_26D7606B0;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((unsigned char *)this + 8CoreML::Specification::Identity::New(this, 0) = 0;
  *((_DWORD *)this + 21) = 0;
  return this;
}

void sub_223F8A2BC(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v1 + 48);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  CoreML::Specification::LinearQuantizationParams::LinearQuantizationParams(v1);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ScaleLayerParams::~ScaleLayerParams(CoreML::Specification::ScaleLayerParams *this)
{
  *(void *)this = &unk_26D7606B0;
  CoreML::Specification::ScaleLayerParams::SharedDtor((uint64_t *)this);
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ScaleLayerParams::~ScaleLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ScaleLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[8];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[9];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::ScaleLayerParams::default_instance(CoreML::Specification::ScaleLayerParams *this)
{
  return &CoreML::Specification::_ScaleLayerParams_default_instance_;
}

void CoreML::Specification::ScaleLayerParams::New(CoreML::Specification::ScaleLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8A4B8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40771A4C38);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ScaleLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ScaleLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ScaleLayerParams::Clear(CoreML::Specification::ScaleLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  uint64_t v2 = *((void *)this + 8);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 8) = 0;
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  *((unsigned char *)this + 8CoreML::Specification::Identity::New(this, 0) = 0;
  return result;
}

BOOL CoreML::Specification::ScaleLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScaleLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v8 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v8);
        unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v9 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v8 = *v7;
      if (*v7 < 1) {
        goto LABEL_7;
      }
      *a2 = v7 + 1;
      unint64_t v9 = v8 | 0x100000000;
      if ((v9 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 == 8)
          {
            unsigned int v25 = 10;
            uint64_t v26 = (_tc_google::protobuf::io::CodedInputStream *)a2;
            uint64_t v27 = (uint64_t)v6;
            goto LABEL_45;
          }
          if (v9 != 10) {
            goto LABEL_32;
          }
          unsigned int v11 = *a2;
          if (*a2 >= a2[1] || *v11 < 0)
          {
            VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacuint64_t k = *v11;
            *a2 = v11 + 1;
          }
          int v29 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
          {
            do
            {
              int v30 = *a2;
              if (*a2 >= a2[1] || *v30 < 0)
              {
                Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                if ((v33 & 1) == 0) {
                  return 0;
                }
                unint64_t v31 = Varint64Fallback;
              }
              else
              {
                unint64_t v31 = *v30;
                *a2 = v30 + 1;
              }
              signed int v34 = *((_DWORD *)this + 4);
              if (v34 == *((_DWORD *)this + 5))
              {
                _tc_google::protobuf::RepeatedField<double>::Reserve(v6, v34 + 1);
                signed int v34 = *v6;
              }
              uint64_t v35 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v34 + 1;
              *(void *)(v35 + 8 * v34 + 8) = v31;
            }
            while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
          }
          goto LABEL_70;
        case 2u:
          if (v9 != 18) {
            goto LABEL_32;
          }
          uint64_t v13 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
          if (!v13) {
            operator new();
          }
          goto LABEL_29;
        case 3u:
          if (v9 != 24) {
            goto LABEL_32;
          }
          int v14 = *a2;
          if (*a2 >= a2[1] || *v14 < 0)
          {
            unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v15 = *v14;
            *a2 = v14 + 1;
          }
          *((unsigned char *)this + 8CoreML::Specification::Identity::New(this, 0) = v15 != 0;
          continue;
        case 4u:
          if (v9 == 32)
          {
            unsigned int v25 = 34;
            uint64_t v26 = (_tc_google::protobuf::io::CodedInputStream *)a2;
            uint64_t v27 = (uint64_t)v5;
LABEL_45:
            if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, v25, v26, v27) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v9 != 34) {
              goto LABEL_32;
            }
            uint64_t v16 = *a2;
            if (*a2 >= a2[1] || *v16 < 0)
            {
              int v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if (v17 < 0) {
                return 0;
              }
            }
            else
            {
              int v17 = *v16;
              *a2 = v16 + 1;
            }
            int v29 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
            if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
            {
              do
              {
                uint64_t v36 = *a2;
                if (*a2 >= a2[1] || *v36 < 0)
                {
                  unint64_t v38 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                  if ((v39 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v37 = v38;
                }
                else
                {
                  unint64_t v37 = *v36;
                  *a2 = v36 + 1;
                }
                signed int v40 = *((_DWORD *)this + 10);
                if (v40 == *((_DWORD *)this + 11))
                {
                  _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v40 + 1);
                  signed int v40 = *v5;
                }
                uint64_t v41 = *((void *)this + 6);
                *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v40 + 1;
                *(void *)(v41 + 8 * v40 + 8) = v37;
              }
              while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
            }
LABEL_70:
            _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v29);
          }
          break;
        case 5u:
          if (v9 != 42) {
            goto LABEL_32;
          }
          uint64_t v13 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
          if (!v13) {
            operator new();
          }
LABEL_29:
          unint64_t v18 = *a2;
          if (*a2 >= a2[1] || *v18 < 0)
          {
            int v19 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v19 < 0) {
              return 0;
            }
          }
          else
          {
            int v19 = *v18;
            *a2 = v18 + 1;
          }
          unint64_t v21 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v19);
          if ((v21 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v23 = v21;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v13, (_tc_google::protobuf::io::CodedInputStream *)a2, v22);
          if (!result) {
            return result;
          }
          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v23))return 0; {
          continue;
          }
        default:
          goto LABEL_32;
      }
    }
LABEL_32:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F8A98C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScaleLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *unint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v5 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            int v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *int v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    uint64_t v21 = *(void *)(v5 + 64);
    if (v21) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v21, a2, a4);
    }
  }
  if (*(unsigned char *)(v5 + 80)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(3, 1u, a2, a4);
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x22u);
      int v22 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 34;
      int v22 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v22;
    }
    unsigned int v23 = *(_DWORD *)(v5 + 56);
    if (v22 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v23);
    }
    else
    {
      uint64_t v24 = *((void *)a2 + 1);
      if (v23 < 0x80)
      {
        unsigned int v26 = *(_DWORD *)(v5 + 56);
        unsigned int v25 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v25 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v25++ = v23 | 0x80;
          unsigned int v26 = v23 >> 7;
          unsigned int v27 = v23 >> 14;
          v23 >>= 7;
        }
        while (v27);
      }
      *unsigned int v25 = v26;
      int v28 = v25 - v24 + 1;
      *((void *)a2 + 1) += v28;
      *((_DWORD *)a2 + 4) -= v28;
    }
    uint64_t v29 = *(unsigned int *)(v5 + 40);
    if ((int)v29 >= 1)
    {
      for (uint64_t j = 0; j != v29; ++j)
      {
        unint64_t v31 = *(void *)(*(void *)(v5 + 48) + 8 * j + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v31);
        }
        else
        {
          uint64_t v32 = *((void *)a2 + 1);
          if (v31 < 0x80)
          {
            unint64_t v34 = *(void *)(*(void *)(v5 + 48) + 8 * j + 8);
            char v33 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            char v33 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v33++ = v31 | 0x80;
              unint64_t v34 = v31 >> 7;
              unint64_t v35 = v31 >> 14;
              v31 >>= 7;
            }
            while (v35);
          }
          unsigned char *v33 = v34;
          int v36 = v33 - v32 + 1;
          *((void *)a2 + 1) += v36;
          *((_DWORD *)a2 + 4) -= v36;
        }
      }
    }
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    uint64_t v37 = *(void *)(v5 + 72);
    if (v37)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)5, v37, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::ScaleLayerParams::ByteSizeLong(CoreML::Specification::ScaleLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_9:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0) {
    uint64_t v6 = v7;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v6 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    unsigned int v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v8 += v13;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  if (this != (CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
    if (v15)
    {
      uint64_t v16 = CoreML::Specification::WeightParams::ByteSizeLong(v15);
      v14 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    int v17 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
    if (v17)
    {
      uint64_t v18 = CoreML::Specification::WeightParams::ByteSizeLong(v17);
      v14 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((unsigned char *)this + 80)) {
    uint64_t result = v14 + 2;
  }
  else {
    uint64_t result = v14;
  }
  *((_DWORD *)this + 21) = result;
  return result;
}

uint64_t CoreML::Specification::ScaleLayerParams::IsInitialized(CoreML::Specification::ScaleLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ScaleLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ScaleLayerParams");
}

CoreML::Specification::LoadConstantLayerParams *CoreML::Specification::LoadConstantLayerParams::LoadConstantLayerParams(CoreML::Specification::LoadConstantLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D760748;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_223F8AF4C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::LoadConstantLayerParams *CoreML::Specification::LoadConstantLayerParams::LoadConstantLayerParams(CoreML::Specification::LoadConstantLayerParams *this, const CoreML::Specification::LoadConstantLayerParams *a2)
{
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *(void *)this = &unk_26D760748;
  *((void *)this + 2) = 0;
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  *((void *)this + 3) = 0;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v6);
    memcpy((void *)(*((void *)this + 3) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  }
  *((_DWORD *)this + 12) = 0;
  uint64_t v7 = *((void *)a2 + 1);
  if (v7) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v7 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    operator new();
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_223F8B05C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v3, 0x10A1C403937033FLL);
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LoadConstantLayerParams::~LoadConstantLayerParams(CoreML::Specification::LoadConstantLayerParams *this)
{
  *(void *)this = &unk_26D760748;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  uint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::LoadConstantLayerParams::~LoadConstantLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::LoadConstantLayerParams::default_instance(CoreML::Specification::LoadConstantLayerParams *this)
{
  return &CoreML::Specification::_LoadConstantLayerParams_default_instance_;
}

void CoreML::Specification::LoadConstantLayerParams::New(CoreML::Specification::LoadConstantLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8B1F8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LoadConstantLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LoadConstantLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LoadConstantLayerParams::Clear(CoreML::Specification::LoadConstantLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

BOOL CoreML::Specification::LoadConstantLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoadConstantLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        int v6 = *a2;
        if (*a2 < a2[1]) {
          break;
        }
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        uint64_t v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v10;
          *a2 = v10 + 1;
        }
        int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            uint64_t v21 = *a2;
            if (*a2 >= a2[1] || *v21 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *a2;
    if (*a2 >= a2[1] || *v13 < 0)
    {
      int v14 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *a2 = v13 + 1;
    }
    unint64_t v16 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v14);
    if ((v16 & 0x8000000000000000) != 0) {
      break;
    }
    int v18 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, (_tc_google::protobuf::io::CodedInputStream *)a2, v17);
    if (!result) {
      return result;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v18));
  return 0;
}

void sub_223F8B4FC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoadConstantLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *uint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v5 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *unsigned int v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_LoadConstantLayerParams_default_instance_)
  {
    uint64_t v21 = *(void *)(v5 + 40);
    if (v21)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v21, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::LoadConstantLayerParams::ByteSizeLong(CoreML::Specification::LoadConstantLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::LoadConstantLayerParams::IsInitialized(CoreML::Specification::LoadConstantLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LoadConstantLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LoadConstantLayerParams");
}

CoreML::Specification::L2NormalizeLayerParams *CoreML::Specification::L2NormalizeLayerParams::L2NormalizeLayerParams(CoreML::Specification::L2NormalizeLayerParams *this)
{
  *(void *)this = &unk_26D7607E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::L2NormalizeLayerParams *)&CoreML::Specification::_L2NormalizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F8B844(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::L2NormalizeLayerParams::~L2NormalizeLayerParams(CoreML::Specification::L2NormalizeLayerParams *this)
{
  *(void *)this = &unk_26D7607E0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7607E0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::L2NormalizeLayerParams::New(CoreML::Specification::L2NormalizeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8B954(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::L2NormalizeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::L2NormalizeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::L2NormalizeLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::L2NormalizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::L2NormalizeLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    int v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::L2NormalizeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::L2NormalizeLayerParams::ByteSizeLong(CoreML::Specification::L2NormalizeLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::L2NormalizeLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::L2NormalizeLayerParams::IsInitialized(CoreML::Specification::L2NormalizeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::L2NormalizeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.L2NormalizeLayerParams");
}

CoreML::Specification::FlattenLayerParams *CoreML::Specification::FlattenLayerParams::FlattenLayerParams(CoreML::Specification::FlattenLayerParams *this)
{
  *(void *)this = &unk_26D760878;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FlattenLayerParams *)&CoreML::Specification::_FlattenLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F8BB98(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::FlattenLayerParams::~FlattenLayerParams(CoreML::Specification::FlattenLayerParams *this)
{
  *(void *)this = &unk_26D760878;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760878;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::FlattenLayerParams::New(CoreML::Specification::FlattenLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8BCA8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::FlattenLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::FlattenLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::FlattenLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::FlattenLayerParams::MergePartialFromCodedStream(CoreML::Specification::FlattenLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      float v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::FlattenLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::FlattenLayerParams::ByteSizeLong(CoreML::Specification::FlattenLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

std::string *CoreML::Specification::FlattenLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::FlattenLayerParams::IsInitialized(CoreML::Specification::FlattenLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::FlattenLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FlattenLayerParams");
}

CoreML::Specification::ReshapeLayerParams *CoreML::Specification::ReshapeLayerParams::ReshapeLayerParams(CoreML::Specification::ReshapeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D760910;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReshapeLayerParams *)&CoreML::Specification::_ReshapeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

void sub_223F8BF0C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::ReshapeLayerParams *CoreML::Specification::ReshapeLayerParams::ReshapeLayerParams(CoreML::Specification::ReshapeLayerParams *this, const CoreML::Specification::ReshapeLayerParams *a2)
{
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *(void *)this = &unk_26D760910;
  *((void *)this + 2) = 0;
  int v5 = (unsigned int *)((char *)this + 16);
  *((void *)this + 3) = 0;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v6);
    memcpy((void *)(*((void *)this + 3) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  }
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  uint64_t v7 = *((void *)a2 + 1);
  if (v7) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v7 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  return this;
}

void sub_223F8BFE4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ReshapeLayerParams::~ReshapeLayerParams(CoreML::Specification::ReshapeLayerParams *this)
{
  *(void *)this = &unk_26D760910;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ReshapeLayerParams::~ReshapeLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ReshapeLayerParams::default_instance(CoreML::Specification::ReshapeLayerParams *this)
{
  return &CoreML::Specification::_ReshapeLayerParams_default_instance_;
}

void CoreML::Specification::ReshapeLayerParams::New(CoreML::Specification::ReshapeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8C124(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ReshapeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ReshapeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ReshapeLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreML::Specification::ReshapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeLayerParams *this, char **a2, unsigned int a3)
{
  int v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      int v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16) {
          break;
        }
        int v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_40;
          }
        }
        Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_40:
        *((_DWORD *)this + 9) = v13;
      }
      else
      {
        if (v8 >> 3 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v10 = *a2;
          if (*a2 >= a2[1] || *v10 < 0)
          {
            VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacuint64_t k = *v10;
            *a2 = v10 + 1;
          }
          int v15 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
          {
            do
            {
              uint64_t v16 = *a2;
              if (*a2 >= a2[1] || *v16 < 0)
              {
                Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                if ((v19 & 1) == 0) {
                  return 0;
                }
                unint64_t v17 = Varint64Fallback;
              }
              else
              {
                unint64_t v17 = *v16;
                *a2 = v16 + 1;
              }
              signed int v20 = *((_DWORD *)this + 4);
              if (v20 == *((_DWORD *)this + 5))
              {
                _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v20 + 1);
                signed int v20 = *v5;
              }
              uint64_t v21 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v20 + 1;
              *(void *)(v21 + 8 * v20 + 8) = v17;
            }
            while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
          }
          _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v15);
        }
      }
    }
    if (v8) {
      BOOL v14 = (v8 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ReshapeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *uint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v5 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            unint64_t v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unint64_t v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *unint64_t v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  signed int v21 = *(_DWORD *)(v5 + 36);
  if (v21)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(2, v21, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::ReshapeLayerParams::ByteSizeLong(CoreML::Specification::ReshapeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  float v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  int v7 = *((_DWORD *)this + 9);
  if (v7)
  {
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v8;
  }
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReshapeLayerParams::IsInitialized(CoreML::Specification::ReshapeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ReshapeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ReshapeLayerParams");
}

CoreML::Specification::PermuteLayerParams *CoreML::Specification::PermuteLayerParams::PermuteLayerParams(CoreML::Specification::PermuteLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7609A8;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::PermuteLayerParams *)&CoreML::Specification::_PermuteLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F8C684(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::PermuteLayerParams *CoreML::Specification::PermuteLayerParams::PermuteLayerParams(CoreML::Specification::PermuteLayerParams *this, const CoreML::Specification::PermuteLayerParams *a2)
{
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *(void *)this = &unk_26D7609A8;
  *((void *)this + 2) = 0;
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  *((void *)this + 3) = 0;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v6);
    memcpy((void *)(*((void *)this + 3) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  }
  *((_DWORD *)this + 9) = 0;
  uint64_t v7 = *((void *)a2 + 1);
  if (v7) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v7 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

void sub_223F8C750(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PermuteLayerParams::~PermuteLayerParams(CoreML::Specification::PermuteLayerParams *this)
{
  *(void *)this = &unk_26D7609A8;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::PermuteLayerParams::~PermuteLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::PermuteLayerParams::default_instance(CoreML::Specification::PermuteLayerParams *this)
{
  return &CoreML::Specification::_PermuteLayerParams_default_instance_;
}

void CoreML::Specification::PermuteLayerParams::New(CoreML::Specification::PermuteLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8C890(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::PermuteLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::PermuteLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::PermuteLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::PermuteLayerParams::MergePartialFromCodedStream(CoreML::Specification::PermuteLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      int v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        unsigned int v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v10;
          *a2 = v10 + 1;
        }
        int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            BOOL v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v17 & 1) == 0) {
                return 0;
              }
              unint64_t v15 = Varint64Fallback;
            }
            else
            {
              unint64_t v15 = *v14;
              *a2 = v14 + 1;
            }
            signed int v18 = *((_DWORD *)this + 4);
            if (v18 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v18 + 1);
              signed int v18 = *v5;
            }
            uint64_t v19 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v18 + 1;
            *(void *)(v19 + 8 * v18 + 8) = v15;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::PermuteLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::PermuteLayerParams::ByteSizeLong(CoreML::Specification::PermuteLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::PermuteLayerParams::IsInitialized(CoreML::Specification::PermuteLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::PermuteLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PermuteLayerParams");
}

CoreML::Specification::ReorganizeDataLayerParams *CoreML::Specification::ReorganizeDataLayerParams::ReorganizeDataLayerParams(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  *(void *)this = &unk_26D760A40;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReorganizeDataLayerParams *)&CoreML::Specification::_ReorganizeDataLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F8CD24(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::ReorganizeDataLayerParams *CoreML::Specification::ReorganizeDataLayerParams::ReorganizeDataLayerParams(CoreML::Specification::ReorganizeDataLayerParams *this, const CoreML::Specification::ReorganizeDataLayerParams *a2)
{
  *(void *)this = &unk_26D760A40;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 7) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((void *)this + 2) = v5;
  return this;
}

void sub_223F8CDB4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ReorganizeDataLayerParams::~ReorganizeDataLayerParams(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  *(void *)this = &unk_26D760A40;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760A40;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ReorganizeDataLayerParams::default_instance(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  return &CoreML::Specification::_ReorganizeDataLayerParams_default_instance_;
}

void CoreML::Specification::ReorganizeDataLayerParams::New(CoreML::Specification::ReorganizeDataLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8CEE8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ReorganizeDataLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ReorganizeDataLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ReorganizeDataLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ReorganizeDataLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReorganizeDataLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v6 = 0;
LABEL_6:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          *((void *)this + 2) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v14 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 2) = *v12;
          *a2 = v12 + 1;
        }
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      int v10 = *a2;
      if (*a2 >= a2[1])
      {
        int v11 = 0;
      }
      else
      {
        int v11 = *v10;
        if ((*v10 & 0x80000000) == 0)
        {
          *a2 = v10 + 1;
          goto LABEL_30;
        }
      }
      Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v11);
      int v11 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_30:
      *((_DWORD *)this + 6) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v13 = (v7 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ReorganizeDataLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 24);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 16);
  if (v7)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::ReorganizeDataLayerParams::ByteSizeLong(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::ReorganizeDataLayerParams::IsInitialized(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ReorganizeDataLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ReorganizeDataLayerParams");
}

CoreML::Specification::SliceLayerParams *CoreML::Specification::SliceLayerParams::SliceLayerParams(CoreML::Specification::SliceLayerParams *this)
{
  *(void *)this = &unk_26D760AD8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SliceLayerParams *)&CoreML::Specification::_SliceLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_223F8D1C4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::SliceLayerParams *CoreML::Specification::SliceLayerParams::SliceLayerParams(CoreML::Specification::SliceLayerParams *this, const CoreML::Specification::SliceLayerParams *a2)
{
  *(void *)this = &unk_26D760AD8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 11) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  long long v5 = *((_OWORD *)a2 + 1);
  *(_OWORD *)((char *)this + 28) = *(_OWORD *)((char *)a2 + 28);
  *((_OWORD *)this + 1) = v5;
  return this;
}

void sub_223F8D258(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SliceLayerParams::~SliceLayerParams(CoreML::Specification::SliceLayerParams *this)
{
  *(void *)this = &unk_26D760AD8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760AD8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::SliceLayerParams::default_instance(CoreML::Specification::SliceLayerParams *this)
{
  return &CoreML::Specification::_SliceLayerParams_default_instance_;
}

void CoreML::Specification::SliceLayerParams::New(CoreML::Specification::SliceLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8D38C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40DAA165ECLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SliceLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SliceLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SliceLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

uint64_t CoreML::Specification::SliceLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
LABEL_1:
    long long v5 = *a2;
    if (*a2 >= a2[1])
    {
      uint64_t v6 = 0;
      break;
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      break;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (v7) {
      BOOL v16 = (v7 & 7) == 4;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
  unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
  unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v7 & 0x100000000) == 0) {
    goto LABEL_24;
  }
LABEL_7:
  switch(v7 >> 3)
  {
    case 1u:
      if (v7 != 8) {
        goto LABEL_24;
      }
      unsigned int v9 = *a2;
      if (*a2 >= a2[1] || *v9 < 0)
      {
        Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v17 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacuint64_t k = *v9;
        *a2 = v9 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
      goto LABEL_1;
    case 2u:
      if (v7 != 16) {
        goto LABEL_24;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 3) = v12;
      goto LABEL_1;
    case 3u:
      if (v7 != 24) {
        goto LABEL_24;
      }
      BOOL v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        *((void *)this + 4) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v19 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 4) = *v13;
        *a2 = v13 + 1;
      }
      goto LABEL_1;
    case 4u:
      if (v7 != 32) {
        goto LABEL_24;
      }
      char v14 = *a2;
      if (*a2 >= a2[1])
      {
        int v15 = 0;
      }
      else
      {
        int v15 = *v14;
        if ((*v14 & 0x80000000) == 0)
        {
          *a2 = v14 + 1;
          goto LABEL_38;
        }
      }
      Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v15);
      int v15 = Varint32Fallback;
      if ((Varint32Fallback & 0x8000000000000000) == 0)
      {
LABEL_38:
        *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v15;
        goto LABEL_1;
      }
      return 0;
    default:
      goto LABEL_24;
  }
}

uint64_t CoreML::Specification::SliceLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 24);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  unint64_t v8 = *(void *)(v5 + 32);
  if (v8) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(3, v8, a2, a4);
  }
  signed int v9 = *(_DWORD *)(v5 + 40);
  if (v9)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(4, v9, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::SliceLayerParams::ByteSizeLong(CoreML::Specification::SliceLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  uint64_t v6 = *((void *)this + 4);
  unint64_t v7 = v4 + ((9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6);
  if (v6) {
    unint64_t v4 = v7 + 1;
  }
  int v8 = *((_DWORD *)this + 10);
  if (v8)
  {
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v9;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::SliceLayerParams::IsInitialized(CoreML::Specification::SliceLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SliceLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SliceLayerParams");
}

CoreML::Specification::ReduceLayerParams *CoreML::Specification::ReduceLayerParams::ReduceLayerParams(CoreML::Specification::ReduceLayerParams *this)
{
  *(void *)this = &unk_26D760B70;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReduceLayerParams *)&CoreML::Specification::_ReduceLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F8D78C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::ReduceLayerParams *CoreML::Specification::ReduceLayerParams::ReduceLayerParams(CoreML::Specification::ReduceLayerParams *this, const CoreML::Specification::ReduceLayerParams *a2)
{
  *(void *)this = &unk_26D760B70;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 7) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((void *)this + 2) = v5;
  return this;
}

void sub_223F8D81C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ReduceLayerParams::~ReduceLayerParams(CoreML::Specification::ReduceLayerParams *this)
{
  *(void *)this = &unk_26D760B70;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760B70;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ReduceLayerParams::default_instance(CoreML::Specification::ReduceLayerParams *this)
{
  return &CoreML::Specification::_ReduceLayerParams_default_instance_;
}

void CoreML::Specification::ReduceLayerParams::New(CoreML::Specification::ReduceLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8D950(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ReduceLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ReduceLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ReduceLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

BOOL CoreML::Specification::ReduceLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            uint64_t v6 = 0;
LABEL_6:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_25;
          }
          BOOL v13 = *a2;
          if (*a2 >= a2[1])
          {
            int v14 = 0;
          }
          else
          {
            int v14 = *v13;
            if ((*v13 & 0x80000000) == 0)
            {
              *a2 = v13 + 1;
              goto LABEL_36;
            }
          }
          Varint32Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v14);
          int v14 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_36:
          *((_DWORD *)this + 6) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 5) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_33;
        }
      }
      uint64_t v18 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = v18;
      if (v18 < 0) {
        return 0;
      }
LABEL_33:
      *((_DWORD *)this + 4) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ReduceLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 20);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  signed int v8 = *(_DWORD *)(v5 + 24);
  if (v8)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(3, v8, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::ReduceLayerParams::ByteSizeLong(CoreML::Specification::ReduceLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  uint64_t v2 = 11;
  uint64_t v3 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v1 >= 0) {
    uint64_t v2 = v3;
  }
  if (v1) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v4 += 5;
  }
  int v5 = *((_DWORD *)this + 6);
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v5 >= 0) {
    uint64_t v6 = v7;
  }
  uint64_t v8 = v6 + v4;
  if (v5) {
    uint64_t v4 = v8;
  }
  *((_DWORD *)this + 7) = v4;
  return v4;
}

uint64_t CoreML::Specification::ReduceLayerParams::IsInitialized(CoreML::Specification::ReduceLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ReduceLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ReduceLayerParams");
}

CoreML::Specification::CropLayerParams *CoreML::Specification::CropLayerParams::CropLayerParams(CoreML::Specification::CropLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D760C08;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_223F8DCD4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::CropLayerParams *CoreML::Specification::CropLayerParams::CropLayerParams(CoreML::Specification::CropLayerParams *this, const CoreML::Specification::CropLayerParams *a2)
{
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *(void *)this = &unk_26D760C08;
  *((void *)this + 2) = 0;
  int v5 = (unsigned int *)((char *)this + 16);
  *((void *)this + 3) = 0;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v6);
    memcpy((void *)(*((void *)this + 3) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  }
  *((_DWORD *)this + 12) = 0;
  uint64_t v7 = *((void *)a2 + 1);
  if (v7) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v7 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    operator new();
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_223F8DDE4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v3, 0x10A1C40290C9B23);
  int v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::CropLayerParams::~CropLayerParams(CoreML::Specification::CropLayerParams *this)
{
  *(void *)this = &unk_26D760C08;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  uint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::CropLayerParams::~CropLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::CropLayerParams::default_instance(CoreML::Specification::CropLayerParams *this)
{
  return &CoreML::Specification::_CropLayerParams_default_instance_;
}

void CoreML::Specification::CropLayerParams::New(CoreML::Specification::CropLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8DF80(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CropLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CropLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::CropLayerParams::Clear(CoreML::Specification::CropLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t CoreML::Specification::CropLayerParams::MergePartialFromCodedStream(CoreML::Specification::CropLayerParams *this, char **a2, unsigned int a3)
{
  int v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        int v6 = *a2;
        if (*a2 < a2[1]) {
          break;
        }
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_13:
        if (v8) {
          BOOL v11 = (v8 & 7) == 4;
        }
        else {
          BOOL v11 = 1;
        }
        if (v11) {
          return 1;
        }
        if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_13;
      }
LABEL_8:
      if (v8 >> 3 != 5) {
        break;
      }
      if (v8 == 40)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0x2Au, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 42) {
          goto LABEL_13;
        }
        int v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v12;
          *a2 = v12 + 1;
        }
        int v21 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            unint64_t v22 = *a2;
            if (*a2 >= a2[1] || *v22 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v25 & 1) == 0) {
                return 0;
              }
              unint64_t v23 = Varint64Fallback;
            }
            else
            {
              unint64_t v23 = *v22;
              *a2 = v22 + 1;
            }
            signed int v26 = *((_DWORD *)this + 4);
            if (v26 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v26 + 1);
              signed int v26 = *v5;
            }
            uint64_t v27 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v26 + 1;
            *(void *)(v27 + 8 * v26 + 8) = v23;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
      }
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    int v14 = (CoreML::Specification::BorderAmounts *)*((void *)this + 5);
    if (!v14) {
      operator new();
    }
    int v15 = *a2;
    if (*a2 >= a2[1] || *v15 < 0)
    {
      int v16 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v16 < 0) {
        return 0;
      }
    }
    else
    {
      int v16 = *v15;
      *a2 = v15 + 1;
    }
    unint64_t v17 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v16);
    if ((v17 & 0x8000000000000000) != 0) {
      break;
    }
    int v19 = v17;
    uint64_t result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v14, a2, v18);
    if (!result) {
      return result;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v19));
  return 0;
}

void sub_223F8E280(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::CropLayerParams::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  if (this != &CoreML::Specification::_CropLayerParams_default_instance_)
  {
    uint64_t v6 = this[5];
    if (v6) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
  }
  if (*((int *)v5 + 4) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = (uint64_t *)_tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x2Au);
      int v7 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 42;
      int v7 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v7;
    }
    unsigned int v8 = *((_DWORD *)v5 + 8);
    if (v7 < 5)
    {
      this = (uint64_t *)_tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v8);
    }
    else
    {
      uint64_t v9 = *((void *)a2 + 1);
      if (v8 < 0x80)
      {
        unsigned int v11 = *((_DWORD *)v5 + 8);
        int v10 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        int v10 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v10++ = v8 | 0x80;
          unsigned int v11 = v8 >> 7;
          unsigned int v12 = v8 >> 14;
          v8 >>= 7;
        }
        while (v12);
      }
      *int v10 = v11;
      int v13 = v10 - v9 + 1;
      *((void *)a2 + 1) += v13;
      *((_DWORD *)a2 + 4) -= v13;
    }
    uint64_t v14 = *((unsigned int *)v5 + 4);
    if ((int)v14 >= 1)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        unint64_t v16 = *(void *)(v5[3] + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = (uint64_t *)_tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v16);
        }
        else
        {
          uint64_t v17 = *((void *)a2 + 1);
          if (v16 < 0x80)
          {
            unint64_t v19 = *(void *)(v5[3] + 8 * i + 8);
            unsigned int v18 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unsigned int v18 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v18++ = v16 | 0x80;
              unint64_t v19 = v16 >> 7;
              unint64_t v20 = v16 >> 14;
              v16 >>= 7;
            }
            while (v20);
          }
          unsigned char *v18 = v19;
          int v21 = v18 - v17 + 1;
          *((void *)a2 + 1) += v21;
          *((_DWORD *)a2 + 4) -= v21;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::CropLayerParams::ByteSizeLong(CoreML::Specification::CropLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_)
  {
    unsigned int v8 = (CoreML::Specification::BorderAmounts *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::BorderAmounts::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::CropLayerParams::IsInitialized(CoreML::Specification::CropLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::CropLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CropLayerParams");
}

CoreML::Specification::AverageLayerParams *CoreML::Specification::AverageLayerParams::AverageLayerParams(CoreML::Specification::AverageLayerParams *this)
{
  *(void *)this = &unk_26D760CA0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AverageLayerParams *)&CoreML::Specification::_AverageLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F8E5AC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AverageLayerParams::~AverageLayerParams(CoreML::Specification::AverageLayerParams *this)
{
  *(void *)this = &unk_26D760CA0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760CA0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AverageLayerParams::New(CoreML::Specification::AverageLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8E6BC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AverageLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AverageLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AverageLayerParams::MergePartialFromCodedStream(CoreML::Specification::AverageLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::AverageLayerParams::ByteSizeLong(CoreML::Specification::AverageLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::AverageLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::AverageLayerParams::IsInitialized(CoreML::Specification::AverageLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AverageLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AverageLayerParams");
}

CoreML::Specification::MaxLayerParams *CoreML::Specification::MaxLayerParams::MaxLayerParams(CoreML::Specification::MaxLayerParams *this)
{
  *(void *)this = &unk_26D760D38;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MaxLayerParams *)&CoreML::Specification::_MaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F8E81C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MaxLayerParams::~MaxLayerParams(CoreML::Specification::MaxLayerParams *this)
{
  *(void *)this = &unk_26D760D38;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760D38;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::MaxLayerParams::New(CoreML::Specification::MaxLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8E92C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::MaxLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::MaxLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::MaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::MaxLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::MaxLayerParams::ByteSizeLong(CoreML::Specification::MaxLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::MaxLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::MaxLayerParams::IsInitialized(CoreML::Specification::MaxLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::MaxLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MaxLayerParams");
}

CoreML::Specification::MinLayerParams *CoreML::Specification::MinLayerParams::MinLayerParams(CoreML::Specification::MinLayerParams *this)
{
  *(void *)this = &unk_26D760DD0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MinLayerParams *)&CoreML::Specification::_MinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F8EA8C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MinLayerParams::~MinLayerParams(CoreML::Specification::MinLayerParams *this)
{
  *(void *)this = &unk_26D760DD0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760DD0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::MinLayerParams::New(CoreML::Specification::MinLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8EB9C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::MinLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::MinLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::MinLayerParams::MergePartialFromCodedStream(CoreML::Specification::MinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::MinLayerParams::ByteSizeLong(CoreML::Specification::MinLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::MinLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::MinLayerParams::IsInitialized(CoreML::Specification::MinLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::MinLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MinLayerParams");
}

CoreML::Specification::DotProductLayerParams *CoreML::Specification::DotProductLayerParams::DotProductLayerParams(CoreML::Specification::DotProductLayerParams *this)
{
  *(void *)this = &unk_26D760E68;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DotProductLayerParams *)&CoreML::Specification::_DotProductLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_223F8ED00(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::DotProductLayerParams::~DotProductLayerParams(CoreML::Specification::DotProductLayerParams *this)
{
  *(void *)this = &unk_26D760E68;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760E68;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::DotProductLayerParams::New(CoreML::Specification::DotProductLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8EE10(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::DotProductLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::DotProductLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::DotProductLayerParams::Clear(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::DotProductLayerParams::MergePartialFromCodedStream(CoreML::Specification::DotProductLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacuint64_t k = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::DotProductLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::DotProductLayerParams::ByteSizeLong(CoreML::Specification::DotProductLayerParams *this)
{
  uint64_t v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::DotProductLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::DotProductLayerParams::IsInitialized(CoreML::Specification::DotProductLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::DotProductLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DotProductLayerParams");
}

CoreML::Specification::MeanVarianceNormalizeLayerParams *CoreML::Specification::MeanVarianceNormalizeLayerParams::MeanVarianceNormalizeLayerParams(CoreML::Specification::MeanVarianceNormalizeLayerParams *this)
{
  *(void *)this = &unk_26D760F00;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MeanVarianceNormalizeLayerParams *)&CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F8F044(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MeanVarianceNormalizeLayerParams::~MeanVarianceNormalizeLayerParams(CoreML::Specification::MeanVarianceNormalizeLayerParams *this)
{
  *(void *)this = &unk_26D760F00;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760F00;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::MeanVarianceNormalizeLayerParams::New(CoreML::Specification::MeanVarianceNormalizeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8F154(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C408CDDB221);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::MeanVarianceNormalizeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::MeanVarianceNormalizeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::MeanVarianceNormalizeLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

BOOL CoreML::Specification::MeanVarianceNormalizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::MeanVarianceNormalizeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            uint64_t v6 = 0;
LABEL_6:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v21 = 0;
          char v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v14 = v21;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 5) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_25;
        }
        int v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacuint64_t k = *v15;
          *a2 = v15 + 1;
        }
        *((unsigned char *)this + 17) = Varint64Fallback != 0;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = v12 != 0;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::MeanVarianceNormalizeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 16)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 17)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(2, 1u, a2, a4);
  }
  float v6 = *(float *)(v5 + 20);
  if (v6 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::MeanVarianceNormalizeLayerParams::ByteSizeLong(CoreML::Specification::MeanVarianceNormalizeLayerParams *this)
{
  uint64_t v1 = 2 * *((unsigned __int8 *)this + 16);
  if (*((unsigned char *)this + 17)) {
    v1 += 2;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

uint64_t CoreML::Specification::MeanVarianceNormalizeLayerParams::IsInitialized(CoreML::Specification::MeanVarianceNormalizeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::MeanVarianceNormalizeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MeanVarianceNormalizeLayerParams");
}

CoreML::Specification::SequenceRepeatLayerParams *CoreML::Specification::SequenceRepeatLayerParams::SequenceRepeatLayerParams(CoreML::Specification::SequenceRepeatLayerParams *this)
{
  *(void *)this = &unk_26D760F98;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SequenceRepeatLayerParams *)&CoreML::Specification::_SequenceRepeatLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F8F47C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SequenceRepeatLayerParams::~SequenceRepeatLayerParams(CoreML::Specification::SequenceRepeatLayerParams *this)
{
  *(void *)this = &unk_26D760F98;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D760F98;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::SequenceRepeatLayerParams::default_instance(CoreML::Specification::SequenceRepeatLayerParams *this)
{
  return &CoreML::Specification::_SequenceRepeatLayerParams_default_instance_;
}

void CoreML::Specification::SequenceRepeatLayerParams::New(CoreML::Specification::SequenceRepeatLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8F5AC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SequenceRepeatLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SequenceRepeatLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SequenceRepeatLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::SequenceRepeatLayerParams::MergePartialFromCodedStream(CoreML::Specification::SequenceRepeatLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((void *)this + 2) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::SequenceRepeatLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::SequenceRepeatLayerParams::ByteSizeLong(CoreML::Specification::SequenceRepeatLayerParams *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::SequenceRepeatLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::SequenceRepeatLayerParams::IsInitialized(CoreML::Specification::SequenceRepeatLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SequenceRepeatLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SequenceRepeatLayerParams");
}

CoreML::Specification::SimpleRecurrentLayerParams *CoreML::Specification::SimpleRecurrentLayerParams::SimpleRecurrentLayerParams(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  *(void *)this = &unk_26D761030;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_DWORD *)((char *)this + 63) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 17) = 0;
  return this;
}

void sub_223F8F7F8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SimpleRecurrentLayerParams::~SimpleRecurrentLayerParams(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  *(void *)this = &unk_26D761030;
  CoreML::Specification::SimpleRecurrentLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::SimpleRecurrentLayerParams::~SimpleRecurrentLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::SimpleRecurrentLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    unint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    this = (uint64_t *)v1[5];
    if (this)
    {
      std::string::size_type v5 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v5();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::SimpleRecurrentLayerParams::default_instance(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  return &CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_;
}

void CoreML::Specification::SimpleRecurrentLayerParams::New(CoreML::Specification::SimpleRecurrentLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F8FA04(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4089F1CBADLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SimpleRecurrentLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SimpleRecurrentLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::Clear(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v7 = *((void *)this + 5);
  uint64_t v6 = (char *)this + 40;
  uint64_t result = v7;
  *((void *)v6 - 1) = 0;
  if (v7) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *(_DWORD *)(v6 + 23) = 0;
  *((void *)v6 + 2) = 0;
  return result;
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::MergePartialFromCodedStream(CoreML::Specification::SimpleRecurrentLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          std::string::size_type v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            uint64_t v8 = 0;
          }
          else
          {
            uint64_t v7 = v5 + 1;
            uint64_t v8 = *v5;
            if ((char)*v5 >= 1)
            {
              *(void *)a2 = v7;
              unint64_t v9 = v8 | 0x100000000;
              if ((v9 & 0x100000000) == 0) {
                goto LABEL_8;
              }
              goto LABEL_16;
            }
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_16;
              }
            }
          }
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
LABEL_16:
          unsigned int v13 = v9 >> 3;
          if (v9 >> 3 > 0x13) {
            break;
          }
          if (v9 >> 3 > 9)
          {
            if (v13 == 10)
            {
              if (v9 != 82) {
                goto LABEL_8;
              }
              char v25 = (CoreML::Specification::ActivationParams *)*((void *)this + 2);
              if (!v25) {
                operator new();
              }
              signed int v26 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
              {
                VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                VarintSizeAsIntFallbacuint64_t k = *v26;
                *(void *)a2 = v26 + 1;
              }
              unint64_t v37 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
              if ((v37 & 0x8000000000000000) != 0) {
                return 0;
              }
              int v30 = v37;
              uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v25, a2, v38);
              if (!result) {
                return result;
              }
LABEL_87:
              if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v30)) {
                return 0;
              }
            }
            else
            {
              if (v13 != 15 || v9 != 120) {
                goto LABEL_8;
              }
              char v19 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
              {
                Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v34 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                Varint64Fallbacuint64_t k = *v19;
                *(void *)a2 = v19 + 1;
              }
              *((unsigned char *)this + 64) = Varint64Fallback != 0;
            }
          }
          else if (v13 == 1)
          {
            if (v9 != 8) {
              goto LABEL_8;
            }
            BOOL v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              *((void *)this + 6) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v35 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 6) = *v17;
LABEL_59:
              *(void *)a2 = v17 + 1;
            }
          }
          else
          {
            if (v13 != 2 || v9 != 16) {
              goto LABEL_8;
            }
            BOOL v17 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v17 & 0x80000000) == 0)
            {
              *((void *)this + 7) = *v17;
              goto LABEL_59;
            }
            *((void *)this + 7) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v33 & 1) == 0) {
              return 0;
            }
          }
        }
        if (v9 >> 3 > 0x1E) {
          break;
        }
        if (v13 != 20)
        {
          if (v13 != 30 || v9 != 242) {
            goto LABEL_8;
          }
          char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v18) {
            operator new();
          }
          goto LABEL_52;
        }
        if (v9 != 160) {
          goto LABEL_8;
        }
        unint64_t v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
        {
          unint64_t v24 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v36 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        *((unsigned char *)this + 65) = v24 != 0;
      }
      if (v13 == 31) {
        break;
      }
      if (v13 == 32)
      {
        if (v9 == 2)
        {
          char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
          if (!v18) {
            operator new();
          }
LABEL_52:
          unsigned int v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            int v22 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v22 < 0) {
              return 0;
            }
          }
          else
          {
            int v22 = *v21;
            *(void *)a2 = v21 + 1;
          }
          unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v22);
          if ((v28 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v30 = v28;
          uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v18, a2, v29);
          if (!result) {
            return result;
          }
          goto LABEL_87;
        }
        goto LABEL_8;
      }
      if (v13 != 100 || v9 != 32) {
        goto LABEL_8;
      }
      unsigned int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v32 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v15 = *v14;
        *(void *)a2 = v14 + 1;
      }
      *((unsigned char *)this + 66) = v15 != 0;
    }
    if (v9 == 250)
    {
      char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
      if (!v18) {
        operator new();
      }
      goto LABEL_52;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F8FF84(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 48);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 56);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, v8, a2, a4);
    }
  }
  if (*(unsigned char *)(v5 + 64)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(15, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 65)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(20, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    uint64_t v9 = *(void *)(v5 + 24);
    if (v9) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1E, v9, a2, a4);
    }
    uint64_t v10 = *(void *)(v5 + 32);
    if (v10) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1F, v10, a2, a4);
    }
    uint64_t v11 = *(void *)(v5 + 40);
    if (v11) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x20, v11, a2, a4);
    }
  }
  if (*(unsigned char *)(v5 + 66))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(100, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::ByteSizeLong(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  if (this == (CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::ActivationParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::ActivationParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v7 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v11 = *((void *)this + 6);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v12 = *((void *)this + 7);
  if (v12) {
    v4 += ((9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 64)) {
    uint64_t v13 = v4 + 2;
  }
  else {
    uint64_t v13 = v4;
  }
  if (*((unsigned char *)this + 65)) {
    v13 += 3;
  }
  if (*((unsigned char *)this + 66)) {
    uint64_t result = v13 + 3;
  }
  else {
    uint64_t result = v13;
  }
  *((_DWORD *)this + 17) = result;
  return result;
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::IsInitialized(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SimpleRecurrentLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SimpleRecurrentLayerParams");
}

CoreML::Specification::GRULayerParams *CoreML::Specification::GRULayerParams::GRULayerParams(CoreML::Specification::GRULayerParams *this)
{
  *(void *)this = &unk_26D7610C8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 115) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  *((_DWORD *)this + 33) = 0;
  return this;
}

void sub_223F90308(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::GRULayerParams::~GRULayerParams(CoreML::Specification::GRULayerParams *this)
{
  *(void *)this = &unk_26D7610C8;
  CoreML::Specification::GRULayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::GRULayerParams::~GRULayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::GRULayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_GRULayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[5];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[6];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[7];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[8];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[9];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[10];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[11];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[12];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    this = (uint64_t *)v1[13];
    if (this)
    {
      uint64_t v10 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v10();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::GRULayerParams::default_instance(CoreML::Specification::GRULayerParams *this)
{
  return &CoreML::Specification::_GRULayerParams_default_instance_;
}

void CoreML::Specification::GRULayerParams::New(CoreML::Specification::GRULayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F90608(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C409E07629ELL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::GRULayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::GRULayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::GRULayerParams::Clear(CoreML::Specification::GRULayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  *((void *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  *((void *)this + 11) = 0;
  uint64_t v12 = *((void *)this + 12);
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  uint64_t v15 = *((void *)this + 13);
  unsigned int v14 = (char *)this + 104;
  uint64_t result = v15;
  *((void *)v14 - 1) = 0;
  if (v15) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *(void *)unsigned int v14 = 0;
  *((void *)v14 + 1) = 0;
  *(_DWORD *)(v14 + 23) = 0;
  *((void *)v14 + 2) = 0;
  return result;
}

uint64_t CoreML::Specification::GRULayerParams::MergePartialFromCodedStream(CoreML::Specification::GRULayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(unsigned __int8 **)a2;
        unint64_t v7 = *((void *)a2 + 1);
        if (*(void *)a2 >= v7)
        {
          uint64_t v9 = 0;
        }
        else
        {
          uint64_t v8 = v6 + 1;
          uint64_t v9 = *v6;
          if ((char)*v6 >= 1)
          {
            *(void *)a2 = v8;
            unint64_t v10 = v9 | 0x100000000;
            if ((v10 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          if ((unint64_t)v8 < v7)
          {
            int v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(void *)a2 = v6 + 2;
              unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
        unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_9;
        }
LABEL_17:
        unsigned int v14 = v10 >> 3;
        if (v10 >> 3 > 0x1F) {
          break;
        }
        if (v10 >> 3 <= 0xE)
        {
          if (v14 == 1)
          {
            if (v10 != 8) {
              goto LABEL_9;
            }
            char v25 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v25 & 0x80000000) == 0)
            {
              *((void *)this + 14) = *v25;
              goto LABEL_79;
            }
            *((void *)this + 14) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v37 & 1) == 0) {
              return 0;
            }
          }
          else if (v14 == 2)
          {
            if (v10 != 16) {
              goto LABEL_9;
            }
            char v25 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
            {
              *((void *)this + 15) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v38 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 15) = *v25;
LABEL_79:
              *(void *)a2 = v25 + 1;
            }
          }
          else
          {
            if (v14 != 10 || v10 != 82) {
              goto LABEL_9;
            }
            char v18 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((uint64_t)v5);
            char v19 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
            {
              VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              VarintSizeAsIntFallbacuint64_t k = *v19;
              *(void *)a2 = v19 + 1;
            }
            unint64_t v33 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
            if ((v33 & 0x8000000000000000) != 0) {
              return 0;
            }
            int v30 = v33;
            uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v18, a2, v34);
            if (!result) {
              return result;
            }
LABEL_95:
            if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v30)) {
              return 0;
            }
          }
        }
        else
        {
          if (v10 >> 3 > 0x1D)
          {
            if (v14 == 30)
            {
              if (v10 == 242)
              {
                uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
                if (!v15) {
                  operator new();
                }
                goto LABEL_89;
              }
            }
            else if (v14 == 31 && v10 == 250)
            {
              uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
              if (!v15) {
                operator new();
              }
              goto LABEL_89;
            }
            goto LABEL_9;
          }
          if (v14 == 15)
          {
            if (v10 != 120) {
              goto LABEL_9;
            }
            unint64_t v23 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v36 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              Varint64Fallbacuint64_t k = *v23;
              *(void *)a2 = v23 + 1;
            }
            *((unsigned char *)this + 128) = Varint64Fallback != 0;
          }
          else
          {
            if (v14 != 20 || v10 != 160) {
              goto LABEL_9;
            }
            unint64_t v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              unint64_t v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v32 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t v17 = *v16;
              *(void *)a2 = v16 + 1;
            }
            *((unsigned char *)this + 129) = v17 != 0;
          }
        }
      }
      if (v10 >> 3 <= 0x45) {
        break;
      }
      if (v10 >> 3 <= 0x47)
      {
        if (v14 == 70)
        {
          if (v10 == 50)
          {
            uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
            if (!v15) {
              operator new();
            }
            goto LABEL_89;
          }
        }
        else if (v10 == 58)
        {
          uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
        goto LABEL_9;
      }
      if (v14 == 72)
      {
        if (v10 == 66)
        {
          uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
        goto LABEL_9;
      }
      if (v14 != 100 || v10 != 32) {
        goto LABEL_9;
      }
      unsigned int v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        unint64_t v22 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v35 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      *((unsigned char *)this + 13CoreML::Specification::Identity::New(this, 0) = v22 != 0;
    }
    if (v10 >> 3 > 0x32)
    {
      if (v14 == 51)
      {
        if (v10 == 154)
        {
          uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
      }
      else if (v14 == 52 && v10 == 162)
      {
        uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
        if (!v15) {
          operator new();
        }
        goto LABEL_89;
      }
    }
    else if (v14 == 32)
    {
      if (v10 == 2)
      {
        uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 7);
        if (!v15) {
          operator new();
        }
        goto LABEL_89;
      }
    }
    else if (v14 == 50 && v10 == 146)
    {
      uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
      if (!v15) {
        operator new();
      }
LABEL_89:
      signed int v26 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
      {
        int v27 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v27 < 0) {
          return 0;
        }
      }
      else
      {
        int v27 = *v26;
        *(void *)a2 = v26 + 1;
      }
      unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v27);
      if ((v28 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v30 = v28;
      uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v15, a2, v29);
      if (!result) {
        return result;
      }
      goto LABEL_95;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F90E44(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GRULayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 112);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 120);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 24);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  if (*(unsigned char *)(v5 + 128)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(15, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 129)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(20, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_GRULayerParams_default_instance_)
  {
    uint64_t v10 = *(void *)(v5 + 40);
    if (v10) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1E, v10, a2, a4);
    }
    uint64_t v11 = *(void *)(v5 + 48);
    if (v11) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1F, v11, a2, a4);
    }
    uint64_t v12 = *(void *)(v5 + 56);
    if (v12) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x20, v12, a2, a4);
    }
    uint64_t v13 = *(void *)(v5 + 64);
    if (v13) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x32, v13, a2, a4);
    }
    uint64_t v14 = *(void *)(v5 + 72);
    if (v14) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x33, v14, a2, a4);
    }
    uint64_t v15 = *(void *)(v5 + 80);
    if (v15) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x34, v15, a2, a4);
    }
    uint64_t v16 = *(void *)(v5 + 88);
    if (v16) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x46, v16, a2, a4);
    }
    uint64_t v17 = *(void *)(v5 + 96);
    if (v17) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x47, v17, a2, a4);
    }
    uint64_t v18 = *(void *)(v5 + 104);
    if (v18) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x48, v18, a2, a4);
    }
  }
  if (*(unsigned char *)(v5 + 130))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(100, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::GRULayerParams::ByteSizeLong(CoreML::Specification::GRULayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (this != (CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_)
  {
    unint64_t v6 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::WeightParams::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    int v8 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v10 = (CoreML::Specification::WeightParams *)*((void *)this + 7);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::WeightParams::ByteSizeLong(v10);
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
    if (v12)
    {
      uint64_t v13 = CoreML::Specification::WeightParams::ByteSizeLong(v12);
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
    if (v14)
    {
      uint64_t v15 = CoreML::Specification::WeightParams::ByteSizeLong(v14);
      v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v16 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
    if (v16)
    {
      uint64_t v17 = CoreML::Specification::WeightParams::ByteSizeLong(v16);
      v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v18 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
    if (v18)
    {
      uint64_t v19 = CoreML::Specification::WeightParams::ByteSizeLong(v18);
      v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v20 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
    if (v20)
    {
      uint64_t v21 = CoreML::Specification::WeightParams::ByteSizeLong(v20);
      v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v22 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
    if (v22)
    {
      uint64_t v23 = CoreML::Specification::WeightParams::ByteSizeLong(v22);
      v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    v4 += ((9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v25 = *((void *)this + 15);
  if (v25) {
    v4 += ((9 * (__clz(v25 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 128)) {
    uint64_t v26 = v4 + 2;
  }
  else {
    uint64_t v26 = v4;
  }
  if (*((unsigned char *)this + 129)) {
    v26 += 3;
  }
  if (*((unsigned char *)this + 130)) {
    uint64_t result = v26 + 3;
  }
  else {
    uint64_t result = v26;
  }
  *((_DWORD *)this + 33) = result;
  return result;
}

uint64_t CoreML::Specification::GRULayerParams::IsInitialized(CoreML::Specification::GRULayerParams *this)
{
  return 1;
}

void *CoreML::Specification::GRULayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GRULayerParams");
}

CoreML::Specification::LSTMParams *CoreML::Specification::LSTMParams::LSTMParams(CoreML::Specification::LSTMParams *this)
{
  *(void *)this = &unk_26D761160;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LSTMParams *)&CoreML::Specification::_LSTMParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_223F91370(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::LSTMParams *CoreML::Specification::LSTMParams::LSTMParams(CoreML::Specification::LSTMParams *this, const CoreML::Specification::LSTMParams *a2)
{
  *(void *)this = &unk_26D761160;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 7) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  *((unsigned char *)this + 24) = *((unsigned char *)a2 + 24);
  *((void *)this + 2) = v5;
  return this;
}

void sub_223F91404(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LSTMParams::~LSTMParams(CoreML::Specification::LSTMParams *this)
{
  *(void *)this = &unk_26D761160;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761160;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LSTMParams::New(CoreML::Specification::LSTMParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F91518(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LSTMParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LSTMParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LSTMParams::Clear(uint64_t this)
{
  *(unsigned char *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

BOOL CoreML::Specification::LSTMParams::MergePartialFromCodedStream(CoreML::Specification::LSTMParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            uint64_t v5 = *(unsigned __int8 **)a2;
            unint64_t v6 = *((void *)a2 + 1);
            if (*(void *)a2 >= v6)
            {
              uint64_t v8 = 0;
            }
            else
            {
              uint64_t v7 = v5 + 1;
              uint64_t v8 = *v5;
              if ((char)*v5 >= 1)
              {
                *(void *)a2 = v7;
                unint64_t v9 = v8 | 0x100000000;
                if ((v9 & 0x100000000) == 0) {
                  goto LABEL_8;
                }
                goto LABEL_16;
              }
              if ((unint64_t)v7 < v6)
              {
                int v10 = *v7;
                if ((v8 & ~v10) >= 0x80)
                {
                  *(void *)a2 = v5 + 2;
                  unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                  goto LABEL_16;
                }
              }
            }
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_8;
            }
LABEL_16:
            unsigned int v13 = v9 >> 3;
            if (v9 >> 3 > 0x27) {
              break;
            }
            if (v13 == 10)
            {
              if (v9 != 80) {
                goto LABEL_8;
              }
              uint64_t v18 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
              {
                Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v27 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                Varint64Fallbacuint64_t k = *v18;
                *(void *)a2 = v18 + 1;
              }
              *((unsigned char *)this + 2CoreML::Specification::Identity::New(this, 0) = Varint64Fallback != 0;
            }
            else if (v13 == 20)
            {
              if (v9 != 160) {
                goto LABEL_8;
              }
              unint64_t v20 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
              {
                unint64_t v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                unint64_t v21 = *v20;
                *(void *)a2 = v20 + 1;
              }
              *((unsigned char *)this + 21) = v21 != 0;
            }
            else
            {
              if (v13 != 30 || v9 != 240) {
                goto LABEL_8;
              }
              uint64_t v14 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
              {
                unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v26 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                unint64_t v15 = *v14;
                *(void *)a2 = v14 + 1;
              }
              *((unsigned char *)this + 22) = v15 != 0;
            }
          }
          if (v13 != 40) {
            break;
          }
          if (v9 != 64) {
            goto LABEL_8;
          }
          unint64_t v22 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
          {
            unint64_t v23 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v23 = *v22;
            *(void *)a2 = v22 + 1;
          }
          *((unsigned char *)this + 23) = v23 != 0;
        }
        if (v13 == 50) {
          break;
        }
        if (v13 != 60 || v9 != 229) {
          goto LABEL_8;
        }
        unsigned int v32 = 0;
        uint64_t v16 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
          if (!result) {
            return result;
          }
          unsigned int v17 = v32;
        }
        else
        {
          unsigned int v17 = *v16;
          *(void *)a2 = v16 + 1;
        }
        *((_DWORD *)this + 4) = v17;
      }
      if (v9 != 144) {
        break;
      }
      uint64_t v24 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
      {
        unint64_t v25 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v30 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v25 = *v24;
        *(void *)a2 = v24 + 1;
      }
      *((unsigned char *)this + 24) = v25 != 0;
    }
LABEL_8:
    if (v9) {
      BOOL v11 = (v9 & 7) == 4;
    }
    else {
      BOOL v11 = 1;
    }
    if (v11) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::LSTMParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 20)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(10, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 21)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(20, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 22)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(30, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 23)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(40, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 24)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(50, 1u, a2, a4);
  }
  float v6 = *(float *)(v5 + 16);
  if (v6 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)0x3C, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::LSTMParams::ByteSizeLong(CoreML::Specification::LSTMParams *this)
{
  uint64_t v1 = 6;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((unsigned char *)this + 20)) {
    v1 += 2;
  }
  if (*((unsigned char *)this + 21)) {
    v1 += 3;
  }
  if (*((unsigned char *)this + 22)) {
    v1 += 3;
  }
  if (*((unsigned char *)this + 23)) {
    v1 += 3;
  }
  if (*((unsigned char *)this + 24)) {
    v1 += 3;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

std::string *CoreML::Specification::LSTMParams::MergeFrom(std::string *this, const CoreML::Specification::LSTMParams *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  if (*((unsigned char *)a2 + 20)) {
    v3->__r_.__value_.__s.__data_[20] = 1;
  }
  if (*((unsigned char *)a2 + 21)) {
    v3->__r_.__value_.__s.__data_[21] = 1;
  }
  if (*((unsigned char *)a2 + 22)) {
    v3->__r_.__value_.__s.__data_[22] = 1;
  }
  if (*((unsigned char *)a2 + 23)) {
    *((unsigned char *)&v3->__r_.__value_.__s + 23) = 1;
  }
  if (*((unsigned char *)a2 + 24)) {
    v3[1].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::LSTMParams::IsInitialized(CoreML::Specification::LSTMParams *this)
{
  return 1;
}

void *CoreML::Specification::LSTMParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LSTMParams");
}

CoreML::Specification::LSTMWeightParams *CoreML::Specification::LSTMWeightParams::LSTMWeightParams(CoreML::Specification::LSTMWeightParams *this)
{
  *(void *)this = &unk_26D7611F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LSTMWeightParams *)&CoreML::Specification::_LSTMWeightParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 124) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  return this;
}

void sub_223F91AB0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::LSTMWeightParams *CoreML::Specification::LSTMWeightParams::LSTMWeightParams(CoreML::Specification::LSTMWeightParams *this, const CoreML::Specification::LSTMWeightParams *a2)
{
  *(void *)this = &unk_26D7611F8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 34) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 == (const CoreML::Specification::LSTMWeightParams *)&CoreML::Specification::_LSTMWeightParams_default_instance_)
  {
    *((_OWORD *)this + 6) = 0u;
    *((_OWORD *)this + 7) = 0u;
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
    *((_OWORD *)this + 1) = 0u;
  }
  else
  {
    if (*((void *)a2 + 2)) {
      operator new();
    }
    *((void *)this + 2) = 0;
    if (*((void *)a2 + 3)) {
      operator new();
    }
    *((void *)this + 3) = 0;
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
    *((void *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
    if (*((void *)a2 + 11)) {
      operator new();
    }
    *((void *)this + 11) = 0;
    if (*((void *)a2 + 12)) {
      operator new();
    }
    *((void *)this + 12) = 0;
    if (*((void *)a2 + 13)) {
      operator new();
    }
    *((void *)this + 13) = 0;
    if (*((void *)a2 + 14)) {
      operator new();
    }
    *((void *)this + 14) = 0;
    if (*((void *)a2 + 15)) {
      operator new();
    }
    *((void *)this + 15) = 0;
    if (*((void *)a2 + 16)) {
      operator new();
    }
  }
  *((void *)this + 16) = 0;
  return this;
}

void sub_223F91EA8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v2, 0x10A1C403937033FLL);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LSTMWeightParams::~LSTMWeightParams(CoreML::Specification::LSTMWeightParams *this)
{
  *(void *)this = &unk_26D7611F8;
  CoreML::Specification::LSTMWeightParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::LSTMWeightParams::~LSTMWeightParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::LSTMWeightParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_LSTMWeightParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[6];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[7];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[8];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[9];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[10];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[11];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = v1[12];
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = v1[13];
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = v1[14];
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = v1[15];
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    this = (uint64_t *)v1[16];
    if (this)
    {
      uint64_t v16 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v16();
    }
  }
  return this;
}

void CoreML::Specification::LSTMWeightParams::New(CoreML::Specification::LSTMWeightParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F922D0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LSTMWeightParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LSTMWeightParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LSTMWeightParams::Clear(CoreML::Specification::LSTMWeightParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  *((void *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  *((void *)this + 11) = 0;
  uint64_t v12 = *((void *)this + 12);
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  *((void *)this + 12) = 0;
  uint64_t v13 = *((void *)this + 13);
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  *((void *)this + 13) = 0;
  uint64_t v14 = *((void *)this + 14);
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  *((void *)this + 14) = 0;
  uint64_t v15 = *((void *)this + 15);
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  *((void *)this + 15) = 0;
  uint64_t result = *((void *)this + 16);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 16) = 0;
  return result;
}

BOOL CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(CoreML::Specification::LSTMWeightParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        uint64_t v8 = 0;
      }
      else
      {
        uint64_t v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
          goto LABEL_16;
        }
        if ((unint64_t)v7 < v6)
        {
          int v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(void *)a2 = v5 + 2;
            unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_16;
          }
        }
      }
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unsigned int v13 = v9 >> 3;
      if (v9 >> 3 <= 0x27)
      {
        switch(v13)
        {
          case 1u:
            if (v9 != 10) {
              goto LABEL_8;
            }
            uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
            if (!v14) {
              operator new();
            }
            return result;
          case 2u:
            if (v9 != 18) {
              goto LABEL_8;
            }
            uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
            if (!v14) {
              operator new();
            }
            return result;
          case 3u:
            if (v9 != 26) {
              goto LABEL_8;
            }
            uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
            if (!v14) {
              operator new();
            }
            return result;
          case 4u:
            if (v9 != 34) {
              goto LABEL_8;
            }
            uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
            if (!v14) {
              operator new();
            }
            return result;
          default:
            JUMPOUT(0);
        }
        goto LABEL_56;
      }
      if (v9 >> 3 <= 0x3B)
      {
        switch(v13)
        {
          case '(':
            if (v9 != 66) {
              goto LABEL_8;
            }
            uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
            if (!v14) {
              operator new();
            }
            return result;
          case ')':
            if (v9 != 74) {
              goto LABEL_8;
            }
            uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
            if (!v14) {
              operator new();
            }
            return result;
          case '*':
            if (v9 != 82) {
              goto LABEL_8;
            }
            uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
            if (!v14) {
              operator new();
            }
            return result;
          case '+':
            if (v9 != 90) {
              goto LABEL_8;
            }
            uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
            if (!v14) {
              operator new();
            }
            return result;
          default:
            goto LABEL_8;
        }
        goto LABEL_56;
      }
      if (v13 == 60)
      {
        if (v9 != 226) {
          goto LABEL_8;
        }
        uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
        if (!v14) {
          operator new();
        }
        goto LABEL_56;
      }
      if (v13 != 61) {
        break;
      }
      if (v9 != 234) {
        goto LABEL_8;
      }
      uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
      if (!v14) {
        operator new();
      }
LABEL_56:
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        VarintSizeAsIntFallbacuint64_t k = *v15;
        *(void *)a2 = v15 + 1;
      }
      unint64_t v17 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
      if ((v17 & 0x8000000000000000) == 0)
      {
        int v19 = v17;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v14, a2, v18);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v19)) {
          continue;
        }
      }
      return 0;
    }
    if (v13 == 62 && v9 == 242)
    {
      uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 16);
      if (!v14) {
        operator new();
      }
      goto LABEL_56;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F92B7C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::LSTMWeightParams::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::_LSTMWeightParams_default_instance_)
  {
    uint64_t v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
    uint64_t v8 = v5[4];
    if (v8) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
    }
    uint64_t v9 = v5[5];
    if (v9) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
    }
    uint64_t v10 = v5[6];
    if (v10) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14, v10, a2, a4);
    }
    uint64_t v11 = v5[7];
    if (v11) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x15, v11, a2, a4);
    }
    uint64_t v12 = v5[8];
    if (v12) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x16, v12, a2, a4);
    }
    uint64_t v13 = v5[9];
    if (v13) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x17, v13, a2, a4);
    }
    uint64_t v14 = v5[10];
    if (v14) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x28, v14, a2, a4);
    }
    uint64_t v15 = v5[11];
    if (v15) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x29, v15, a2, a4);
    }
    uint64_t v16 = v5[12];
    if (v16) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2A, v16, a2, a4);
    }
    uint64_t v17 = v5[13];
    if (v17) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x2B, v17, a2, a4);
    }
    uint64_t v18 = v5[14];
    if (v18) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3C, v18, a2, a4);
    }
    uint64_t v19 = v5[15];
    if (v19) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3D, v19, a2, a4);
    }
    uint64_t v20 = v5[16];
    if (v20)
    {
      return (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x3E, v20, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::LSTMWeightParams::ByteSizeLong(CoreML::Specification::LSTMWeightParams *this)
{
  if (this == (CoreML::Specification::LSTMWeightParams *)&CoreML::Specification::_LSTMWeightParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v7 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v11 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v11)
    {
      uint64_t v12 = CoreML::Specification::WeightParams::ByteSizeLong(v11);
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v13 = (CoreML::Specification::WeightParams *)*((void *)this + 7);
    if (v13)
    {
      uint64_t v14 = CoreML::Specification::WeightParams::ByteSizeLong(v13);
      v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
    if (v15)
    {
      uint64_t v16 = CoreML::Specification::WeightParams::ByteSizeLong(v15);
      v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v17 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
    if (v17)
    {
      uint64_t v18 = CoreML::Specification::WeightParams::ByteSizeLong(v17);
      v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v19 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
    if (v19)
    {
      uint64_t v20 = CoreML::Specification::WeightParams::ByteSizeLong(v19);
      v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v21 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
    if (v21)
    {
      uint64_t v22 = CoreML::Specification::WeightParams::ByteSizeLong(v21);
      v4 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v23 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
    if (v23)
    {
      uint64_t v24 = CoreML::Specification::WeightParams::ByteSizeLong(v23);
      v4 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v25 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
    if (v25)
    {
      uint64_t v26 = CoreML::Specification::WeightParams::ByteSizeLong(v25);
      v4 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    char v27 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
    if (v27)
    {
      uint64_t v28 = CoreML::Specification::WeightParams::ByteSizeLong(v27);
      v4 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    char v29 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
    if (v29)
    {
      uint64_t v30 = CoreML::Specification::WeightParams::ByteSizeLong(v29);
      v4 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v31 = (CoreML::Specification::WeightParams *)*((void *)this + 16);
    if (v31)
    {
      uint64_t v32 = CoreML::Specification::WeightParams::ByteSizeLong(v31);
      v4 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  *((_DWORD *)this + 34) = v4;
  return v4;
}

std::string *CoreML::Specification::LSTMWeightParams::MergeFrom(std::string *this, const CoreML::Specification::LSTMWeightParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::LSTMWeightParams *)&CoreML::Specification::_LSTMWeightParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      uint64_t v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      int64_t size = (unint64_t *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(size, *((const CoreML::Specification::WeightParams **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      uint64_t v8 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      if (!v8) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v8, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      uint64_t v9 = (unint64_t *)v3[2].__r_.__value_.__l.__data_;
      if (!v9) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v9, *((const CoreML::Specification::WeightParams **)a2 + 6));
    }
    if (*((void *)a2 + 7))
    {
      uint64_t v10 = (unint64_t *)v3[2].__r_.__value_.__l.__size_;
      if (!v10) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v10, *((const CoreML::Specification::WeightParams **)a2 + 7));
    }
    if (*((void *)a2 + 8))
    {
      uint64_t v11 = (unint64_t *)v3[2].__r_.__value_.__r.__words[2];
      if (!v11) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v11, *((const CoreML::Specification::WeightParams **)a2 + 8));
    }
    if (*((void *)a2 + 9))
    {
      uint64_t v12 = (unint64_t *)v3[3].__r_.__value_.__l.__data_;
      if (!v12) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v12, *((const CoreML::Specification::WeightParams **)a2 + 9));
    }
    if (*((void *)a2 + 10))
    {
      uint64_t v13 = (unint64_t *)v3[3].__r_.__value_.__l.__size_;
      if (!v13) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v13, *((const CoreML::Specification::WeightParams **)a2 + 10));
    }
    if (*((void *)a2 + 11))
    {
      uint64_t v14 = (unint64_t *)v3[3].__r_.__value_.__r.__words[2];
      if (!v14) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v14, *((const CoreML::Specification::WeightParams **)a2 + 11));
    }
    if (*((void *)a2 + 12))
    {
      uint64_t v15 = (unint64_t *)v3[4].__r_.__value_.__l.__data_;
      if (!v15) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v15, *((const CoreML::Specification::WeightParams **)a2 + 12));
    }
    if (*((void *)a2 + 13))
    {
      uint64_t v16 = (unint64_t *)v3[4].__r_.__value_.__l.__size_;
      if (!v16) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v16, *((const CoreML::Specification::WeightParams **)a2 + 13));
    }
    if (*((void *)a2 + 14))
    {
      uint64_t v17 = (unint64_t *)v3[4].__r_.__value_.__r.__words[2];
      if (!v17) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v17, *((const CoreML::Specification::WeightParams **)a2 + 14));
    }
    if (*((void *)a2 + 15))
    {
      uint64_t v18 = (unint64_t *)v3[5].__r_.__value_.__l.__data_;
      if (!v18) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v18, *((const CoreML::Specification::WeightParams **)a2 + 15));
    }
    if (*((void *)a2 + 16))
    {
      if (!v3[5].__r_.__value_.__l.__size_) {
        operator new();
      }
      uint64_t v19 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 16);
      uint64_t v20 = (unint64_t *)v3[5].__r_.__value_.__l.__size_;
      return (std::string *)CoreML::Specification::WeightParams::MergeFrom(v20, v19);
    }
  }
  return this;
}

void sub_223F93544(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LSTMWeightParams::IsInitialized(CoreML::Specification::LSTMWeightParams *this)
{
  return 1;
}

void *CoreML::Specification::LSTMWeightParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LSTMWeightParams");
}

CoreML::Specification::UniDirectionalLSTMLayerParams *CoreML::Specification::UniDirectionalLSTMLayerParams::UniDirectionalLSTMLayerParams(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  *(void *)this = &unk_26D761290;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 72) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  *((_DWORD *)this + 19) = 0;
  return this;
}

void sub_223F9363C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::UniDirectionalLSTMLayerParams *CoreML::Specification::UniDirectionalLSTMLayerParams::UniDirectionalLSTMLayerParams(CoreML::Specification::UniDirectionalLSTMLayerParams *this, const CoreML::Specification::UniDirectionalLSTMLayerParams *a2)
{
  *(void *)this = &unk_26D761290;
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (std::string *)((char *)this + 16);
  *(_OWORD *)((char *)this + 24) = 0u;
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((void *)a2 + 4);
    uint64_t v8 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::UniDirectionalLSTMLayerParams *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v5, (std::string **)v8, (CoreML::Specification::ActivationParams **)(v7 + 8), v6, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v9 = *((_DWORD *)this + 6) + v6;
    *((_DWORD *)this + 6) = v9;
    uint64_t v10 = (signed int *)*((void *)this + 4);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *((_DWORD *)this + 19) = 0;
  uint64_t v11 = *((void *)a2 + 1);
  if (v11) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v11 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 == (const CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    *((void *)this + 5) = 0;
  }
  else
  {
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
  }
  *((void *)this + 6) = 0;
  long long v12 = *(_OWORD *)((char *)a2 + 56);
  *((unsigned char *)this + 72) = *((unsigned char *)a2 + 72);
  *(_OWORD *)((char *)this + 56) = v12;
  return this;
}

void sub_223F937D8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v3, 0x10A1C405455452ELL);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::UniDirectionalLSTMLayerParams::~UniDirectionalLSTMLayerParams(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  *(void *)this = &unk_26D761290;
  CoreML::Specification::UniDirectionalLSTMLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::UniDirectionalLSTMLayerParams::~UniDirectionalLSTMLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::UniDirectionalLSTMLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[5];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[6];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::UniDirectionalLSTMLayerParams::default_instance(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  return &CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_;
}

void CoreML::Specification::UniDirectionalLSTMLayerParams::New(CoreML::Specification::UniDirectionalLSTMLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F939EC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40B3944273);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::UniDirectionalLSTMLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::UniDirectionalLSTMLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::Clear(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v8 = *((void *)this + 6);
  uint64_t v7 = (char *)this + 48;
  uint64_t result = v8;
  *((void *)v7 - 1) = 0;
  if (v8) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[24] = 0;
  *((void *)v7 + 2) = 0;
  return result;
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::MergePartialFromCodedStream(CoreML::Specification::UniDirectionalLSTMLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unsigned int v6 = *(unsigned __int8 **)a2;
          unint64_t v7 = *((void *)a2 + 1);
          if (*(void *)a2 >= v7)
          {
            uint64_t v9 = 0;
          }
          else
          {
            uint64_t v8 = v6 + 1;
            uint64_t v9 = *v6;
            if ((char)*v6 >= 1)
            {
              *(void *)a2 = v8;
              unint64_t v10 = v9 | 0x100000000;
              if ((v10 & 0x100000000) == 0) {
                goto LABEL_9;
              }
              goto LABEL_17;
            }
            if ((unint64_t)v8 < v7)
            {
              int v11 = *v8;
              if ((v9 & ~v11) >= 0x80)
              {
                *(void *)a2 = v6 + 2;
                unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
                goto LABEL_17;
              }
            }
          }
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
          unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v10 & 0x100000000) == 0) {
            goto LABEL_9;
          }
LABEL_17:
          unsigned int v14 = v10 >> 3;
          if (v10 >> 3 <= 0xE) {
            break;
          }
          if (v14 == 15)
          {
            if (v10 != 122) {
              goto LABEL_9;
            }
            unint64_t v21 = (CoreML::Specification::LSTMParams *)*((void *)this + 5);
            if (!v21) {
              operator new();
            }
            uint64_t v22 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
            {
              VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              VarintSizeAsIntFallbacuint64_t k = *v22;
              *(void *)a2 = v22 + 1;
            }
            unint64_t v34 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
            if ((v34 & 0x8000000000000000) != 0) {
              return 0;
            }
            int v29 = v34;
            uint64_t result = CoreML::Specification::LSTMParams::MergePartialFromCodedStream(v21, a2, v35);
            if (!result) {
              return result;
            }
            goto LABEL_70;
          }
          if (v14 == 20)
          {
            if (v10 != 162) {
              goto LABEL_9;
            }
            uint64_t v24 = (CoreML::Specification::LSTMWeightParams *)*((void *)this + 6);
            if (!v24) {
              operator new();
            }
            unint64_t v25 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
            {
              int v26 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v26 < 0) {
                return 0;
              }
            }
            else
            {
              int v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            unint64_t v36 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v26);
            if ((v36 & 0x8000000000000000) != 0) {
              return 0;
            }
            int v29 = v36;
            uint64_t result = CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(v24, a2, v37);
            if (!result) {
              return result;
            }
LABEL_70:
            if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29)) {
              return 0;
            }
          }
          else
          {
            if (v14 != 100 || v10 != 32) {
              goto LABEL_9;
            }
            uint64_t v18 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
            {
              Varint64Fallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v31 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              Varint64Fallbacuint64_t k = *v18;
              *(void *)a2 = v18 + 1;
            }
            *((unsigned char *)this + 72) = Varint64Fallback != 0;
          }
        }
        if (v14 != 1) {
          break;
        }
        if (v10 != 8) {
          goto LABEL_9;
        }
        uint64_t v20 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && (*v20 & 0x80000000) == 0)
        {
          *((void *)this + 7) = *v20;
          goto LABEL_40;
        }
        *((void *)this + 7) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v32 & 1) == 0) {
          return 0;
        }
      }
      if (v14 != 2) {
        break;
      }
      if (v10 != 16) {
        goto LABEL_9;
      }
      uint64_t v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        *((void *)this + 8) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v33 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 8) = *v20;
LABEL_40:
        *(void *)a2 = v20 + 1;
      }
    }
    if (v14 == 10 && v10 == 82)
    {
      uint64_t v15 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((uint64_t)v5);
      uint64_t v16 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
      {
        int v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v17 < 0) {
          return 0;
        }
      }
      else
      {
        int v17 = *v16;
        *(void *)a2 = v16 + 1;
      }
      unint64_t v27 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v17);
      if ((v27 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v29 = v27;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v15, a2, v28);
      if (!result) {
        return result;
      }
      goto LABEL_70;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F93E80(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 56);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 64);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 24);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    uint64_t v10 = *(void *)(v5 + 40);
    if (v10) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xF, v10, a2, a4);
    }
    uint64_t v11 = *(void *)(v5 + 48);
    if (v11) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14, v11, a2, a4);
    }
  }
  if (*(unsigned char *)(v5 + 72))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(100, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::ByteSizeLong(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (this != (CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    unint64_t v6 = (CoreML::Specification::LSTMParams *)*((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::LSTMParams::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    int v8 = (CoreML::Specification::LSTMWeightParams *)*((void *)this + 6);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::LSTMWeightParams::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v10 = *((void *)this + 7);
  if (v10) {
    v4 += ((9 * (__clz(v10 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *((void *)this + 8);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 72)) {
    uint64_t result = v4 + 3;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 19) = result;
  return result;
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::IsInitialized(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::UniDirectionalLSTMLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.UniDirectionalLSTMLayerParams");
}

CoreML::Specification::BiDirectionalLSTMLayerParams *CoreML::Specification::BiDirectionalLSTMLayerParams::BiDirectionalLSTMLayerParams(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  *(void *)this = &unk_26D761328;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 28) = 0;
  *((void *)this + 13) = 0;
  return this;
}

void sub_223F941AC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v4);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v3);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::BiDirectionalLSTMLayerParams *CoreML::Specification::BiDirectionalLSTMLayerParams::BiDirectionalLSTMLayerParams(CoreML::Specification::BiDirectionalLSTMLayerParams *this, const CoreML::Specification::BiDirectionalLSTMLayerParams *a2)
{
  *(void *)this = &unk_26D761328;
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (std::string *)((char *)this + 16);
  *(_OWORD *)((char *)this + 24) = 0u;
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((void *)a2 + 4);
    int v8 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::BiDirectionalLSTMLayerParams *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v5, (std::string **)v8, (CoreML::Specification::ActivationParams **)(v7 + 8), v6, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v9 = *((_DWORD *)this + 6) + v6;
    *((_DWORD *)this + 6) = v9;
    uint64_t v10 = (signed int *)*((void *)this + 4);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  unsigned int v11 = *((_DWORD *)a2 + 12);
  if (v11)
  {
    uint64_t v12 = *((void *)a2 + 7);
    uint64_t v13 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::BiDirectionalLSTMLayerParams *)((char *)this + 40), *((_DWORD *)a2 + 12));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)((char *)this + 40), (std::string **)v13, (CoreML::Specification::ActivationParams **)(v12 + 8), v11, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v14 = *((_DWORD *)this + 12) + v11;
    *((_DWORD *)this + 12) = v14;
    uint64_t v15 = (signed int *)*((void *)this + 7);
    if (*v15 < v14) {
      signed int *v15 = v14;
    }
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 1CoreML::Specification::Identity::New(this, 0) = 0;
  unsigned int v16 = *((_DWORD *)a2 + 18);
  if (v16)
  {
    uint64_t v17 = *((void *)a2 + 10);
    uint64_t v18 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::BiDirectionalLSTMLayerParams *)((char *)this + 64), *((_DWORD *)a2 + 18));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::LSTMWeightParams>::TypeHandler>((std::string *)((char *)this + 64), (std::string **)v18, (CoreML::Specification::LSTMWeightParams **)(v17 + 8), v16, **((_DWORD **)this + 10) - *((_DWORD *)this + 18));
    signed int v19 = *((_DWORD *)this + 18) + v16;
    *((_DWORD *)this + 18) = v19;
    uint64_t v20 = (signed int *)*((void *)this + 10);
    if (*v20 < v19) {
      signed int *v20 = v19;
    }
  }
  *((_DWORD *)this + 28) = 0;
  uint64_t v21 = *((void *)a2 + 1);
  if (v21) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v21 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_
    && *((void *)a2 + 11))
  {
    operator new();
  }
  *((void *)this + 11) = 0;
  *((_OWORD *)this + 6) = *((_OWORD *)a2 + 6);
  return this;
}

void sub_223F943E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v5, 0x1081C40E45386B4);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v4);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v3);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BiDirectionalLSTMLayerParams::~BiDirectionalLSTMLayerParams(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  *(void *)this = &unk_26D761328;
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_)
  {
    uint64_t v2 = *((void *)this + 11);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 8);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 5);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::BiDirectionalLSTMLayerParams::~BiDirectionalLSTMLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::BiDirectionalLSTMLayerParams::default_instance(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  return &CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_;
}

void CoreML::Specification::BiDirectionalLSTMLayerParams::New(CoreML::Specification::BiDirectionalLSTMLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F945B0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C402A225981);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BiDirectionalLSTMLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BiDirectionalLSTMLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::Clear(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 12);
  if ((int)v5 >= 1)
  {
    unsigned int v6 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v7 = *v6++;
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 12) = 0;
  }
  uint64_t v8 = *((unsigned int *)this + 18);
  if ((int)v8 >= 1)
  {
    signed int v9 = (CoreML::Specification::LSTMWeightParams **)(*((void *)this + 10) + 8);
    do
    {
      uint64_t v10 = *v9++;
      CoreML::Specification::LSTMWeightParams::Clear(v10);
      --v8;
    }
    while (v8);
    *((_DWORD *)this + 18) = 0;
  }
  uint64_t v13 = *((void *)this + 11);
  uint64_t v12 = (void *)((char *)this + 88);
  uint64_t result = v13;
  if (v13) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *uint64_t v12 = 0;
  v12[1] = 0;
  v12[2] = 0;
  return result;
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::MergePartialFromCodedStream(CoreML::Specification::BiDirectionalLSTMLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 64;
  unsigned int v6 = (char *)this + 40;
  uint64_t v7 = (char *)this + 16;
  uint64_t v8 = (unint64_t *)((char *)this + 104);
  signed int v9 = (unint64_t *)((char *)this + 96);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v10 = *(unsigned __int8 **)a2;
        unint64_t v11 = *((void *)a2 + 1);
        if (*(void *)a2 >= v11)
        {
          uint64_t v13 = 0;
        }
        else
        {
          uint64_t v12 = v10 + 1;
          uint64_t v13 = *v10;
          if ((char)*v10 >= 1)
          {
            *(void *)a2 = v12;
            unint64_t v14 = v13 | 0x100000000;
            if ((v14 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          if ((unint64_t)v12 < v11)
          {
            int v15 = *v12;
            if ((v13 & ~v15) >= 0x80)
            {
              *(void *)a2 = v10 + 2;
              unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
        unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v14 & 0x100000000) == 0) {
          goto LABEL_9;
        }
LABEL_17:
        unsigned int v18 = v14 >> 3;
        if (v14 >> 3 > 0xA) {
          break;
        }
        if (v18 == 1)
        {
          if (v14 != 8) {
            goto LABEL_9;
          }
          unint64_t v23 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v23 & 0x80000000) == 0)
          {
            unint64_t v24 = *v23;
            unint64_t v25 = v9;
            goto LABEL_38;
          }
          *signed int v9 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v38 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          if (v18 != 2)
          {
            if (v18 == 10 && v14 == 82)
            {
              uint64_t v19 = (uint64_t)v7;
              goto LABEL_41;
            }
            goto LABEL_9;
          }
          if (v14 != 16) {
            goto LABEL_9;
          }
          unint64_t v23 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
          {
            *uint64_t v8 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v39 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v24 = *v23;
            unint64_t v25 = v8;
LABEL_38:
            *unint64_t v25 = v24;
            *(void *)a2 = v23 + 1;
          }
        }
      }
      if (v18 == 11) {
        break;
      }
      if (v18 == 15)
      {
        if (v14 != 122) {
          goto LABEL_9;
        }
        int v29 = (CoreML::Specification::LSTMParams *)*((void *)this + 11);
        if (!v29) {
          operator new();
        }
        uint64_t v30 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
        {
          VarintSizeAsIntFallbacuint64_t k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacuint64_t k = *v30;
          *(void *)a2 = v30 + 1;
        }
        unint64_t v40 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
        if ((v40 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v34 = v40;
        uint64_t result = CoreML::Specification::LSTMParams::MergePartialFromCodedStream(v29, a2, v41);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v18 != 20 || v14 != 162) {
          goto LABEL_9;
        }
        uint64_t v20 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::LSTMWeightParams>::TypeHandler>((uint64_t)v5);
        uint64_t v21 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
        {
          int v22 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v22 < 0) {
            return 0;
          }
        }
        else
        {
          int v22 = *v21;
          *(void *)a2 = v21 + 1;
        }
        unint64_t v36 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v22);
        if ((v36 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v34 = v36;
        uint64_t result = CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(v20, a2, v37);
        if (!result) {
          return result;
        }
      }
LABEL_65:
      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v34)) {
        return 0;
      }
    }
    if (v14 == 90)
    {
      uint64_t v19 = (uint64_t)v6;
LABEL_41:
      int v26 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v19);
      unint64_t v27 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v27 < 0)
      {
        int v28 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v28 < 0) {
          return 0;
        }
      }
      else
      {
        int v28 = *v27;
        *(void *)a2 = v27 + 1;
      }
      unint64_t v32 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v28);
      if ((v32 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v34 = v32;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v26, a2, v33);
      if (!result) {
        return result;
      }
      goto LABEL_65;
    }
LABEL_9:
    if (!v14 || (v14 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F94A30(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 96);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 104);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 24);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  int v10 = *(_DWORD *)(v5 + 48);
  if (v10)
  {
    for (int j = 0; j != v10; ++j)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xB, *(void *)(*(void *)(v5 + 56) + 8 * j + 8), a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_)
  {
    uint64_t v12 = *(void *)(v5 + 88);
    if (v12) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0xF, v12, a2, a4);
    }
  }
  int v13 = *(_DWORD *)(v5 + 72);
  if (v13)
  {
    for (int k = 0; k != v13; ++k)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14, *(void *)(*(void *)(v5 + 80) + 8 * k + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::ByteSizeLong(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  uint64_t v10 = *((unsigned int *)this + 18);
  uint64_t v11 = v7 + 2 * v10;
  if (v10)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = CoreML::Specification::LSTMWeightParams::ByteSizeLong(*(CoreML::Specification::LSTMWeightParams **)(*((void *)this + 10) + 8 * v12 + 8));
      v11 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      ++v12;
    }
    while (v10 != v12);
  }
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_)
  {
    unint64_t v14 = (CoreML::Specification::LSTMParams *)*((void *)this + 11);
    if (v14)
    {
      uint64_t v15 = CoreML::Specification::LSTMParams::ByteSizeLong(v14);
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v16 = *((void *)this + 12);
  uint64_t v17 = *((void *)this + 13);
  BOOL v18 = v16 == 0;
  unint64_t v19 = v11 + ((9 * (__clz(v16 | 1) ^ 0x3F) + 73) >> 6);
  if (v18) {
    uint64_t v20 = v11;
  }
  else {
    uint64_t v20 = v19 + 1;
  }
  unint64_t v21 = v20 + ((9 * (__clz(v17 | 1) ^ 0x3F) + 73) >> 6);
  if (v17) {
    uint64_t result = v21 + 1;
  }
  else {
    uint64_t result = v20;
  }
  *((_DWORD *)this + 28) = result;
  return result;
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::IsInitialized(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::BiDirectionalLSTMLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BiDirectionalLSTMLayerParams");
}

CoreML::Specification::CustomLayerParams_CustomLayerParamValue *CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  *(void *)this = &unk_26D7613C0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)&CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F94D74(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::CustomLayerParams_CustomLayerParamValue::~CustomLayerParams_CustomLayerParamValue(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  *(void *)this = &unk_26D7613C0;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::CustomLayerParams_CustomLayerParamValue::~CustomLayerParams_CustomLayerParamValue(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)(this + 28) == 20)
  {
    uint64_t v2 = *(void *)(this + 16);
    if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void CoreML::Specification::CustomLayerParams_CustomLayerParamValue::New(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F94EE0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>);
  }
  return result;
}

BOOL CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(unsigned __int8 **)a2;
      unint64_t v7 = *((void *)a2 + 1);
      if (*(void *)a2 >= v7)
      {
        uint64_t v9 = 0;
      }
      else
      {
        int v8 = v6 + 1;
        uint64_t v9 = *v6;
        if ((char)*v6 >= 1)
        {
          *(void *)a2 = v8;
          unint64_t v10 = v9 | 0x100000000;
          if ((v10 & 0x100000000) == 0) {
            goto LABEL_9;
          }
          goto LABEL_17;
        }
        if ((unint64_t)v8 < v7)
        {
          int v11 = *v8;
          if ((v9 & ~v11) >= 0x80)
          {
            *(void *)a2 = v6 + 2;
            unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
            goto LABEL_17;
          }
        }
      }
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
      unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v10 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      unsigned int v14 = v10 >> 3;
      if (v10 >> 3 <= 0x1D) {
        break;
      }
      if (v14 == 30)
      {
        if (v10 != 240) {
          goto LABEL_9;
        }
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        uint64_t v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v18 = 0;
        }
        else
        {
          int v18 = *v17;
          if ((*v17 & 0x80000000) == 0)
          {
            *(void *)a2 = v17 + 1;
LABEL_63:
            *(_DWORD *)uint64_t v5 = v18;
            goto LABEL_64;
          }
        }
        Varint32Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
        int v18 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
        goto LABEL_63;
      }
      if (v14 == 40)
      {
        if (v10 != 64) {
          goto LABEL_9;
        }
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        unint64_t v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v29 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacint k = *v19;
          *(void *)a2 = v19 + 1;
        }
        char *v5 = (std::string *)Varint64Fallback;
LABEL_64:
        *((_DWORD *)this + 7) = v14;
      }
      else
      {
        if (v14 == 50 && v10 == 144)
        {
          CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
          uint64_t v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            unint64_t v16 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          *(unsigned char *)uint64_t v5 = v16 != 0;
          goto LABEL_64;
        }
LABEL_9:
        if (v10) {
          BOOL v12 = (v10 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12) {
          return 1;
        }
        if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)return 0; {
      }
        }
    }
    if (v14 == 10)
    {
      if (v10 == 81)
      {
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        unint64_t v31 = 0;
        unint64_t v21 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v31);
          if (!result) {
            return result;
          }
          unint64_t v22 = v31;
        }
        else
        {
          unint64_t v22 = *v21;
          *(void *)a2 = v21 + 1;
        }
        char *v5 = (std::string *)v22;
        goto LABEL_64;
      }
      goto LABEL_9;
    }
    if (v14 != 20 || v10 != 162) {
      goto LABEL_9;
    }
    if (*((_DWORD *)this + 7) != 20)
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
      *((_DWORD *)this + 7) = 20;
      *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
LABEL_44:
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    BOOL result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
    if (!result) {
      return result;
    }
    int v24 = *((_DWORD *)this + 7);
    unint64_t v25 = (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      unint64_t v25 = *v5;
    }
    if (SHIBYTE(v25->__r_.__value_.__r.__words[2]) < 0) {
      unint64_t v25 = (std::string *)v25->__r_.__value_.__r.__words[0];
    }
    int v26 = (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      int v26 = *v5;
    }
    if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
      int64_t size = (const char *)v26->__r_.__value_.__l.__size_;
    }
    else {
      int64_t size = (const char *)HIBYTE(v26->__r_.__value_.__r.__words[2]);
    }
  }
  while (_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v25, size, 0, (uint64_t)"CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue"));
  return 0;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 10)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteDouble((_tc_google::protobuf::internal::WireFormatLite *)0xA, a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 20)
  {
    unint64_t v7 = *(unsigned __int8 **)(v5 + 16);
    if ((char)v7[23] < 0)
    {
      unint64_t v7 = *(unsigned __int8 **)v7;
      int v8 = *(const char **)(*(void *)(v5 + 16) + 8);
    }
    else
    {
      int v8 = (const char *)v7[23];
    }
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v7, v8, 1, (uint64_t)"CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue");
    if (*(_DWORD *)(v5 + 28) == 20) {
      uint64_t v9 = *(uint64_t **)(v5 + 16);
    }
    else {
      uint64_t v9 = &_tc_google::protobuf::internal::fixed_address_empty_string;
    }
    this = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(20, (uint64_t)v9, a2);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 30)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(30, *(_DWORD *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 40)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(40, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 50)
  {
    unsigned int v10 = *(unsigned __int8 *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(50, v10, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::ByteSizeLong(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  int v1 = *((_DWORD *)this + 7);
  if (v1 <= 29)
  {
    if (v1 == 10)
    {
      uint64_t v3 = 9;
      goto LABEL_19;
    }
    if (v1 != 20)
    {
      uint64_t v3 = 0;
      goto LABEL_19;
    }
    uint64_t v4 = *((void *)this + 2);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    unint64_t v7 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    goto LABEL_15;
  }
  if (v1 == 30)
  {
    int v8 = *((_DWORD *)this + 4);
    if (v8 < 0) {
      uint64_t v3 = 12;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    goto LABEL_19;
  }
  if (v1 == 40)
  {
    unint64_t v7 = (9 * (__clz(*((void *)this + 2) | 1) ^ 0x3F) + 73) >> 6;
LABEL_15:
    uint64_t v3 = v7 + 2;
    goto LABEL_19;
  }
  BOOL v2 = v1 == 50;
  uint64_t v3 = 3;
  if (!v2) {
    uint64_t v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 6) = v3;
  return v3;
}

std::string *CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergeFrom(std::string *this, const CoreML::Specification::CustomLayerParams_CustomLayerParamValue *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 > 29)
  {
    switch(v5)
    {
      case 30:
        int v9 = *((_DWORD *)a2 + 4);
        if (*(_DWORD *)(v3 + 28) != 30)
        {
          this = (std::string *)CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 30;
        }
        *(_DWORD *)(v3 + 16) = v9;
        break;
      case 40:
        uint64_t v10 = *((void *)a2 + 2);
        if (*(_DWORD *)(v3 + 28) != 40)
        {
          this = (std::string *)CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 40;
        }
        *(void *)(v3 + 16) = v10;
        break;
      case 50:
        char v6 = *((unsigned char *)a2 + 16);
        if (*(_DWORD *)(v3 + 28) != 50)
        {
          this = (std::string *)CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 50;
        }
        *(unsigned char *)(v3 + 16) = v6;
        break;
    }
    return this;
  }
  if (v5 != 10)
  {
    if (v5 != 20) {
      return this;
    }
    unint64_t v7 = (const std::string *)*((void *)a2 + 2);
    if (*(_DWORD *)(v3 + 28) == 20)
    {
      int v8 = *(std::string **)(v3 + 16);
      if (v8 != (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string)
      {
        return std::string::operator=(v8, v7);
      }
    }
    else
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
      *(_DWORD *)(v3 + 28) = 20;
      *(void *)(v3 + 16) = &_tc_google::protobuf::internal::fixed_address_empty_string;
    }
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  uint64_t v11 = *((void *)a2 + 2);
  if (*(_DWORD *)(v3 + 28) != 10)
  {
    this = (std::string *)CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
    *(_DWORD *)(v3 + 28) = 10;
  }
  *(void *)(v3 + 16) = v11;
  return this;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::IsInitialized(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  return 1;
}

void *CoreML::Specification::CustomLayerParams_CustomLayerParamValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CustomLayerParams.CustomLayerParamValue");
}

CoreML::Specification::CustomLayerParams *CoreML::Specification::CustomLayerParams::CustomLayerParams(CoreML::Specification::CustomLayerParams *this)
{
  *(void *)this = &unk_26D761458;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0u;
  *((_DWORD *)this + 14) = 0;
  BOOL v2 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)_tc_google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::Init((uint64_t)this + 48);
  *((_DWORD *)this + 14) = 0;
  if (this != (CoreML::Specification::CustomLayerParams *)&CoreML::Specification::_CustomLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v2);
  }
  *((void *)this + 9) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1CoreML::Specification::Identity::New(this, 0) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 22) = 0;
  return this;
}

void sub_223F95694(_Unwind_Exception *a1)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::~Map(v3);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)(v1 + 16));
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom(uint64_t a1, uint64_t a2)
{
  uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin(a2 + 8, v10);
  uint64_t v4 = v10[0];
  if (v10[0])
  {
    uint64_t v5 = a1 + 8;
    do
    {
      char v6 = *(const std::string **)(v4 + 24);
      unint64_t v7 = (const CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)&v6[1];
      int v8 = _tc_google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[](v5, v6);
      if (v7 != (const CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)v8)
      {
        int v9 = v8;
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)v8);
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergeFrom(v9, v7);
      }
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v10);
      uint64_t v4 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

void CoreML::Specification::CustomLayerParams::~CustomLayerParams(CoreML::Specification::CustomLayerParams *this)
{
  *(void *)this = &unk_26D761458;
  BOOL v2 = (void *)((char *)this + 48);
  CoreML::Specification::CustomLayerParams::SharedDtor((uint64_t)this);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::~Map(v2);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::CustomLayerParams::~CustomLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::CustomLayerParams::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 72);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *(void *)(v1 + 80);
  if ((uint64_t *)v4 != &_tc_google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    JUMPOUT(0x22A614FA0);
  }
  return this;
}

void *CoreML::Specification::CustomLayerParams::default_instance(CoreML::Specification::CustomLayerParams *this)
{
  return &CoreML::Specification::_CustomLayerParams_default_instance_;
}

void CoreML::Specification::CustomLayerParams::New(CoreML::Specification::CustomLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F95918(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40B612A46ELL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CustomLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomLayerParams>);
  }
  return result;
}

void CoreML::Specification::CustomLayerParams::Clear(CoreML::Specification::CustomLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (CoreML::Specification::WeightParams **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::WeightParams::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::clear((uint64_t)this + 48);
  uint64_t v5 = *((void *)this + 9);
  if ((uint64_t *)v5 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  uint64_t v6 = *((void *)this + 10);
  if ((uint64_t *)v6 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
}

uint64_t CoreML::Specification::CustomLayerParams::MergePartialFromCodedStream(CoreML::Specification::CustomLayerParams *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 80);
  uint64_t v5 = (char *)this + 40;
  uint64_t v6 = (char *)this + 48;
  unint64_t v7 = (char *)this + 16;
  int v8 = (std::string **)((char *)this + 72);
  while (1)
  {
    while (1)
    {
      int v9 = *(unsigned __int8 **)a2;
      unint64_t v10 = *((void *)a2 + 1);
      if (*(void *)a2 >= v10)
      {
        uint64_t v12 = 0;
LABEL_66:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
        unint64_t v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v13 & 0x100000000) == 0) {
          goto LABEL_67;
        }
        goto LABEL_9;
      }
      uint64_t v11 = v9 + 1;
      uint64_t v12 = *v9;
      if ((char)*v9 >= 1) {
        break;
      }
      if ((unint64_t)v11 >= v10) {
        goto LABEL_66;
      }
      int v14 = *v11;
      if ((v12 & ~v14) < 0x80) {
        goto LABEL_66;
      }
      *(void *)a2 = v9 + 2;
      unint64_t v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
LABEL_9:
      unsigned int v15 = v13 >> 3;
      if (v13 >> 3 > 0x1D)
      {
        if (v15 != 30)
        {
          if (v15 != 40 || v13 != 66) {
            goto LABEL_67;
          }
          if (*v4 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
            _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v4)) {
            return 0;
          }
          unint64_t v19 = *v4;
          if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
          {
            unint64_t v19 = (std::string *)v19->__r_.__value_.__r.__words[0];
            int64_t size = (const char *)(*v4)->__r_.__value_.__l.__size_;
          }
          else
          {
            int64_t size = (const char *)HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
          }
          unsigned int v33 = "CoreML.Specification.CustomLayerParams.description";
          goto LABEL_63;
        }
        if (v13 != 242) {
          goto LABEL_67;
        }
        v37[0] = v5;
        v37[1] = v6;
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        std::ios_base::failure __p = 0;
        uint64_t v41 = 0;
        unint64_t v21 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
        {
          VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_73;
          }
        }
        else
        {
          VarintSizeAsIntFallbacint k = *v21;
          *(void *)a2 = v21 + 1;
        }
        unint64_t v26 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, VarintSizeAsIntFallback);
        int v27 = v26;
        if ((v26 & 0x8000000000000000) == 0
          && _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::MergePartialFromCodedStream((uint64_t)v37, (uint64_t)a2)&& _tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27))
        {
          if (v40 >= 0) {
            p_p = (_tc_google::protobuf::internal *)&__p;
          }
          else {
            p_p = (_tc_google::protobuf::internal *)__p;
          }
          if (v40 >= 0) {
            unint64_t v29 = HIBYTE(v40);
          }
          else {
            unint64_t v29 = v39;
          }
          BOOL v30 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, (const char *)v29, 0, (uint64_t)"CoreML.Specification.CustomLayerParams.ParametersEntry.key");
          BOOL v31 = v30;
          if (v30) {
            int v32 = 0;
          }
          else {
            int v32 = 6;
          }
          goto LABEL_52;
        }
LABEL_73:
        BOOL v31 = 0;
        int v32 = 6;
LABEL_52:
        if (v41) {
          (*(void (**)(uint64_t))(*(void *)v41 + 8))(v41);
        }
        if (SHIBYTE(v40) < 0) {
          operator delete(__p);
        }
        if (!v31 && v32) {
          return 0;
        }
      }
      else if (v15 == 10)
      {
        if (v13 != 82) {
          goto LABEL_67;
        }
        if (*v8 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
          _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v8)) {
          return 0;
        }
        unint64_t v19 = *v8;
        if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
        {
          unint64_t v19 = (std::string *)v19->__r_.__value_.__r.__words[0];
          int64_t size = (const char *)(*v8)->__r_.__value_.__l.__size_;
        }
        else
        {
          int64_t size = (const char *)HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
        }
        unsigned int v33 = "CoreML.Specification.CustomLayerParams.className";
LABEL_63:
        if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v19, size, 0, (uint64_t)v33))return 0; {
      }
        }
      else
      {
        if (v15 != 20 || v13 != 162) {
          goto LABEL_67;
        }
        unint64_t v16 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::WeightParams>::TypeHandler>((uint64_t)v7);
        uint64_t v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int v18 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v18 < 0) {
            return 0;
          }
        }
        else
        {
          int v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        unint64_t v23 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(a2, v18);
        if ((v23 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v25 = v23;
        if (!CoreML::Specification::WeightParams::MergePartialFromCodedStream(v16, a2, v24)
          || !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25))
        {
          return 0;
        }
      }
    }
    *(void *)a2 = v11;
    unint64_t v13 = v12 | 0x100000000;
    if ((v13 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_67:
    if (!v13 || (v13 & 7) == 4) {
      return 1;
    }
    if (!_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v13, a3))return 0; {
  }
    }
}

void sub_223F95DC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CustomLayerParams::SerializeWithCachedSizes(CoreML::Specification::CustomLayerParams *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = (_tc_google::protobuf::internal *)*((void *)this + 9);
  if (*((char *)v6 + 23) < 0)
  {
    unint64_t v7 = (const char *)*((void *)v6 + 1);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t v6 = *(_tc_google::protobuf::internal **)v6;
    goto LABEL_6;
  }
  unint64_t v7 = (const char *)*((unsigned __int8 *)v6 + 23);
  if (*((unsigned char *)v6 + 23))
  {
LABEL_6:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(v6, v7, 1, (uint64_t)"CoreML.Specification.CustomLayerParams.className");
    _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(10, *((void *)this + 9), a2);
  }
LABEL_7:
  int v8 = *((_DWORD *)this + 6);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x14, *(void *)(*((void *)this + 4) + 8 * i + 8), a2, a4);
  }
  unint64_t v10 = **((void **)this + 8);
  if (v10)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v10 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_33;
      }
    }
    else if (v10 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_33:
      operator new[]();
    }
    _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 48, v20);
    uint64_t v12 = 0;
    while (v20[0])
    {
      int v14 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v20[0] + 24), *(void *)(v20[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 5));
      if ((void *)v12 != v14)
      {
        if (v12) {
          (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
        }
        uint64_t v12 = (uint64_t)v14;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)0x1E, v12, a2, v13);
      unsigned int v15 = *(unsigned __int8 **)(v20[0] + 24);
      if ((char)v15[23] < 0)
      {
        unsigned int v15 = *(unsigned __int8 **)v15;
        unint64_t v16 = *(const char **)(*(void *)(v20[0] + 24) + 8);
      }
      else
      {
        unint64_t v16 = (const char *)v15[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v15, v16, 1, (uint64_t)"CoreML.Specification.CustomLayerParams.ParametersEntry.key");
      _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v20);
    }
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
  }
  uint64_t result = *((void *)this + 10);
  if (*(char *)(result + 23) < 0)
  {
    unint64_t v19 = *(const char **)(result + 8);
    if (!v19) {
      return result;
    }
    uint64_t result = *(void *)result;
    goto LABEL_39;
  }
  unint64_t v19 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_39:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v19, 1, (uint64_t)"CoreML.Specification.CustomLayerParams.description");
    return _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(40, *((void *)this + 10), a2);
  }
  return result;
}

void sub_223F9615C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614F80](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CustomLayerParams::ByteSizeLong(CoreML::Specification::CustomLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  uint64_t v3 = 2 * v2;
  if (v2)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = CoreML::Specification::WeightParams::ByteSizeLong(*(CoreML::Specification::WeightParams **)(*((void *)this + 4) + 8 * v4 + 8));
      v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v4;
    }
    while (v2 != v4);
  }
  uint64_t v6 = **((void **)this + 8);
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 48, v18);
  unint64_t v7 = 0;
  uint64_t v8 = 2 * v6 + v3;
  while (v18[0])
  {
    int v9 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v18[0] + 24), *(void *)(v18[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 5));
    if (v7 != (_DWORD *)v9)
    {
      if (v7) {
        (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
      }
      unint64_t v7 = v9;
    }
    uint64_t v10 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v7);
    v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v18);
  }
  if (v7) {
    (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
  }
  uint64_t v11 = *((void *)this + 9);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_18;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_18;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v8 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_18:
  uint64_t v14 = *((void *)this + 10);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  if (*(char *)(v14 + 23) < 0)
  {
    if (!*(void *)(v14 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v14 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v8 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  *((_DWORD *)this + 22) = v8;
  return v8;
}

void sub_223F963B8(_Unwind_Exception *exception_object)
{
  if (v1) {
    CoreML::Specification::CustomLayerParams::SerializeWithCachedSizes(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::CustomLayerParams::IsInitialized(CoreML::Specification::CustomLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::CustomLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CustomLayerParams");
}

CoreML::Specification::TransposeLayerParams *CoreML::Specification::TransposeLayerParams::TransposeLayerParams(CoreML::Specification::TransposeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7614F0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::TransposeLayerParams *)&CoreML::Specification::_TransposeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F96458(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::TransposeLayerParams::~TransposeLayerParams(CoreML::Specification::TransposeLayerParams *this)
{
  *(void *)this = &unk_26D7614F0;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::TransposeLayerParams::~TransposeLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::TransposeLayerParams::default_instance(CoreML::Specification::TransposeLayerParams *this)
{
  return &CoreML::Specification::_TransposeLayerParams_default_instance_;
}

void CoreML::Specification::TransposeLayerParams::New(CoreML::Specification::TransposeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F96590(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::TransposeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::TransposeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::TransposeLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::TransposeLayerParams::MergePartialFromCodedStream(CoreML::Specification::TransposeLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        uint64_t v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacint k = *v10;
          *a2 = v10 + 1;
        }
        int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            uint64_t v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v17 & 1) == 0) {
                return 0;
              }
              unint64_t v15 = Varint64Fallback;
            }
            else
            {
              unint64_t v15 = *v14;
              *a2 = v14 + 1;
            }
            signed int v18 = *((_DWORD *)this + 4);
            if (v18 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v18 + 1);
              signed int v18 = *v5;
            }
            uint64_t v19 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v18 + 1;
            *(void *)(v19 + 8 * v18 + 8) = v15;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::TransposeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::TransposeLayerParams::ByteSizeLong(CoreML::Specification::TransposeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::TransposeLayerParams::IsInitialized(CoreML::Specification::TransposeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::TransposeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TransposeLayerParams");
}

CoreML::Specification::BatchedMatMulLayerParams *CoreML::Specification::BatchedMatMulLayerParams::BatchedMatMulLayerParams(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  *(void *)this = &unk_26D761588;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_223F96A2C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BatchedMatMulLayerParams::~BatchedMatMulLayerParams(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  *(void *)this = &unk_26D761588;
  CoreML::Specification::BatchedMatMulLayerParams::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::BatchedMatMulLayerParams::~BatchedMatMulLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::BatchedMatMulLayerParams::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

uint64_t *CoreML::Specification::BatchedMatMulLayerParams::default_instance(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  return &CoreML::Specification::_BatchedMatMulLayerParams_default_instance_;
}

void CoreML::Specification::BatchedMatMulLayerParams::New(CoreML::Specification::BatchedMatMulLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F96BE0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40A7ADAA20);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BatchedMatMulLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BatchedMatMulLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::BatchedMatMulLayerParams::Clear(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v5 = *((void *)this + 3);
  uint64_t v4 = (char *)this + 24;
  uint64_t result = v5;
  *((void *)v4 - 1) = 0;
  if (v5) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *((_DWORD *)v4 + 6) = 0;
  *((void *)v4 + 2) = 0;
  return result;
}

BOOL CoreML::Specification::BatchedMatMulLayerParams::MergePartialFromCodedStream(CoreML::Specification::BatchedMatMulLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_7;
      }
LABEL_13:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_7;
          }
          int v10 = *a2;
          if (*a2 >= a2[1] || *v10 < 0)
          {
            Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v26 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacint k = *v10;
            *a2 = v10 + 1;
          }
          *((unsigned char *)this + 48) = Varint64Fallback != 0;
          continue;
        case 2u:
          if (v7 != 16) {
            goto LABEL_7;
          }
          BOOL v12 = *a2;
          if (*a2 >= a2[1] || *v12 < 0)
          {
            unint64_t v13 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v27 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v13 = *v12;
            *a2 = v12 + 1;
          }
          *((unsigned char *)this + 49) = v13 != 0;
          continue;
        case 5u:
          if (v7 != 40) {
            goto LABEL_7;
          }
          uint64_t v14 = *a2;
          if (*a2 < a2[1] && (*v14 & 0x80000000) == 0)
          {
            *((void *)this + 4) = *v14;
            goto LABEL_30;
          }
          *((void *)this + 4) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v28 & 1) == 0) {
            return 0;
          }
          continue;
        case 6u:
          if (v7 != 48) {
            goto LABEL_7;
          }
          uint64_t v14 = *a2;
          if (*a2 >= a2[1] || *v14 < 0)
          {
            *((void *)this + 5) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v14;
LABEL_30:
            *a2 = v14 + 1;
          }
          continue;
        case 7u:
          if (v7 != 56) {
            goto LABEL_7;
          }
          unint64_t v15 = *a2;
          if (*a2 >= a2[1] || *v15 < 0)
          {
            unint64_t v16 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v16 = *v15;
            *a2 = v15 + 1;
          }
          *((unsigned char *)this + 5CoreML::Specification::Identity::New(this, 0) = v16 != 0;
          continue;
        case 8u:
          if (v7 != 66) {
            goto LABEL_7;
          }
          unint64_t v17 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
          if (!v17) {
            operator new();
          }
          goto LABEL_41;
        case 9u:
          if (v7 != 74) {
            goto LABEL_7;
          }
          unint64_t v17 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v17) {
            operator new();
          }
LABEL_41:
          int v18 = *a2;
          if (*a2 >= a2[1] || *v18 < 0)
          {
            VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacint k = *v18;
            *a2 = v18 + 1;
          }
          unint64_t v22 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((v22 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v24 = v22;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v17, (_tc_google::protobuf::io::CodedInputStream *)a2, v23);
          if (!result) {
            return result;
          }
          if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v24))return 0; {
          continue;
          }
        case 0xAu:
          if (v7 != 80) {
            goto LABEL_7;
          }
          uint64_t v20 = *a2;
          if (*a2 >= a2[1] || *v20 < 0)
          {
            unint64_t v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v21 = *v20;
            *a2 = v20 + 1;
          }
          *((unsigned char *)this + 51) = v21 != 0;
          break;
        default:
          goto LABEL_7;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_13;
    }
LABEL_7:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F97018(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BatchedMatMulLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 48)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  if (*(unsigned char *)(v5 + 49)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(2, 1u, a2, a4);
  }
  unint64_t v6 = *(void *)(v5 + 32);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(5, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 40);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(6, v7, a2, a4);
  }
  if (*(unsigned char *)(v5 + 50)) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteBool(7, 1u, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)8, v8, a2, a4);
    }
    uint64_t v9 = *(void *)(v5 + 24);
    if (v9) {
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)9, v9, a2, a4);
    }
  }
  if (*(unsigned char *)(v5 + 51))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(10, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::BatchedMatMulLayerParams::ByteSizeLong(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  if (this == (CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t v9 = v4 + 2;
  }
  else {
    uint64_t v9 = v4;
  }
  if (*((unsigned char *)this + 49)) {
    v9 += 2;
  }
  if (*((unsigned char *)this + 50)) {
    v9 += 2;
  }
  if (*((unsigned char *)this + 51)) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

uint64_t CoreML::Specification::BatchedMatMulLayerParams::IsInitialized(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::BatchedMatMulLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BatchedMatMulLayerParams");
}

CoreML::Specification::ConcatNDLayerParams *CoreML::Specification::ConcatNDLayerParams::ConcatNDLayerParams(CoreML::Specification::ConcatNDLayerParams *this)
{
  *(void *)this = &unk_26D761620;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ConcatNDLayerParams *)&CoreML::Specification::_ConcatNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_223F97310(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ConcatNDLayerParams::~ConcatNDLayerParams(CoreML::Specification::ConcatNDLayerParams *this)
{
  *(void *)this = &unk_26D761620;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761620;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ConcatNDLayerParams::default_instance(CoreML::Specification::ConcatNDLayerParams *this)
{
  return &CoreML::Specification::_ConcatNDLayerParams_default_instance_;
}

void CoreML::Specification::ConcatNDLayerParams::New(CoreML::Specification::ConcatNDLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F97444(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ConcatNDLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ConcatNDLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ConcatNDLayerParams::Clear(uint64_t this)
{
  *(unsigned char *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ConcatNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConcatNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v6 = 0;
LABEL_6:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacint k = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ConcatNDLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  if (*(unsigned char *)(v5 + 24))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(2, 1u, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::ConcatNDLayerParams::ByteSizeLong(CoreML::Specification::ConcatNDLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((unsigned char *)this + 24)) {
    v3 += 2;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::ConcatNDLayerParams::IsInitialized(CoreML::Specification::ConcatNDLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ConcatNDLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ConcatNDLayerParams");
}

CoreML::Specification::SoftmaxNDLayerParams *CoreML::Specification::SoftmaxNDLayerParams::SoftmaxNDLayerParams(CoreML::Specification::SoftmaxNDLayerParams *this)
{
  *(void *)this = &unk_26D7616B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SoftmaxNDLayerParams *)&CoreML::Specification::_SoftmaxNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F976FC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SoftmaxNDLayerParams::~SoftmaxNDLayerParams(CoreML::Specification::SoftmaxNDLayerParams *this)
{
  *(void *)this = &unk_26D7616B8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7616B8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::SoftmaxNDLayerParams::default_instance(CoreML::Specification::SoftmaxNDLayerParams *this)
{
  return &CoreML::Specification::_SoftmaxNDLayerParams_default_instance_;
}

void CoreML::Specification::SoftmaxNDLayerParams::New(CoreML::Specification::SoftmaxNDLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9782C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SoftmaxNDLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SoftmaxNDLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SoftmaxNDLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::SoftmaxNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::SoftmaxNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::SoftmaxNDLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::SoftmaxNDLayerParams::ByteSizeLong(CoreML::Specification::SoftmaxNDLayerParams *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::SoftmaxNDLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::SoftmaxNDLayerParams::IsInitialized(CoreML::Specification::SoftmaxNDLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SoftmaxNDLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SoftmaxNDLayerParams");
}

CoreML::Specification::ReverseLayerParams *CoreML::Specification::ReverseLayerParams::ReverseLayerParams(CoreML::Specification::ReverseLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D761750;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReverseLayerParams *)&CoreML::Specification::_ReverseLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F97A74(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ReverseLayerParams::~ReverseLayerParams(CoreML::Specification::ReverseLayerParams *this)
{
  *(void *)this = &unk_26D761750;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ReverseLayerParams::~ReverseLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ReverseLayerParams::default_instance(CoreML::Specification::ReverseLayerParams *this)
{
  return &CoreML::Specification::_ReverseLayerParams_default_instance_;
}

void CoreML::Specification::ReverseLayerParams::New(CoreML::Specification::ReverseLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F97BA8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ReverseLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ReverseLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ReverseLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ReverseLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReverseLayerParams *this, char **a2, unsigned int a3)
{
  std::string::size_type v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(_tc_google::protobuf::internal::WireFormatLite::FieldType)8>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacint k = *v10;
          *a2 = v10 + 1;
        }
        int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            BOOL v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v16 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              Varint64Fallbacint k = *v14;
              *a2 = v14 + 1;
            }
            BOOL v17 = Varint64Fallback != 0;
            signed int v18 = *((_DWORD *)this + 4);
            if (v18 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v5, v18 + 1);
              signed int v18 = *v5;
            }
            uint64_t v19 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v18 + 1;
            *(unsigned char *)(v19 + v18 + 8) = v17;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ReverseLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *uint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(void *)(v5 + 24);
    if (v13) {
      BOOL v14 = (_tc_google::protobuf::internal::WireFormatLite *)(v13 + 8);
    }
    else {
      BOOL v14 = 0;
    }
    char v15 = (const BOOL *)*(unsigned int *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteBoolArray(v14, v15, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::ReverseLayerParams::ByteSizeLong(CoreML::Specification::ReverseLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if (v1)
  {
    if ((v1 & 0x80000000) != 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 + v1;
  *((_DWORD *)this + 8) = v1;
  *((_DWORD *)this + 9) = v3;
  return v3;
}

uint64_t CoreML::Specification::ReverseLayerParams::IsInitialized(CoreML::Specification::ReverseLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ReverseLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ReverseLayerParams");
}

CoreML::Specification::ReverseSeqLayerParams *CoreML::Specification::ReverseSeqLayerParams::ReverseSeqLayerParams(CoreML::Specification::ReverseSeqLayerParams *this)
{
  *(void *)this = &unk_26D7617E8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReverseSeqLayerParams *)&CoreML::Specification::_ReverseSeqLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F97F9C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ReverseSeqLayerParams::~ReverseSeqLayerParams(CoreML::Specification::ReverseSeqLayerParams *this)
{
  *(void *)this = &unk_26D7617E8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7617E8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ReverseSeqLayerParams::New(CoreML::Specification::ReverseSeqLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F980AC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ReverseSeqLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ReverseSeqLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ReverseSeqLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::ReverseSeqLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReverseSeqLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v6 = 0;
LABEL_6:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        int v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacint k = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ReverseSeqLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::ReverseSeqLayerParams::ByteSizeLong(CoreML::Specification::ReverseSeqLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::ReverseSeqLayerParams::IsInitialized(CoreML::Specification::ReverseSeqLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ReverseSeqLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ReverseSeqLayerParams");
}

CoreML::Specification::LoadConstantNDLayerParams *CoreML::Specification::LoadConstantNDLayerParams::LoadConstantNDLayerParams(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D761880;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_223F98370(_Unwind_Exception *a1)
{
  unint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LoadConstantNDLayerParams::~LoadConstantNDLayerParams(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  *(void *)this = &unk_26D761880;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  unint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::LoadConstantNDLayerParams::~LoadConstantNDLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::LoadConstantNDLayerParams::default_instance(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  return &CoreML::Specification::_LoadConstantNDLayerParams_default_instance_;
}

void CoreML::Specification::LoadConstantNDLayerParams::New(CoreML::Specification::LoadConstantNDLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F984E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LoadConstantNDLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LoadConstantNDLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LoadConstantNDLayerParams::Clear(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

BOOL CoreML::Specification::LoadConstantNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoadConstantNDLayerParams *this, char **a2, unsigned int a3)
{
  unint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        unint64_t v6 = *a2;
        if (*a2 < a2[1]) {
          break;
        }
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        unsigned int v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacint k = *v10;
          *a2 = v10 + 1;
        }
        int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            unint64_t v21 = *a2;
            if (*a2 >= a2[1] || *v21 < 0)
            {
              Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *a2;
    if (*a2 >= a2[1] || *v13 < 0)
    {
      int v14 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *a2 = v13 + 1;
    }
    unint64_t v16 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v14);
    if ((v16 & 0x8000000000000000) != 0) {
      break;
    }
    int v18 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, (_tc_google::protobuf::io::CodedInputStream *)a2, v17);
    if (!result) {
      return result;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v18));
  return 0;
}

void sub_223F987E8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoadConstantNDLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *uint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v5 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *unsigned int v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_LoadConstantNDLayerParams_default_instance_)
  {
    uint64_t v21 = *(void *)(v5 + 40);
    if (v21)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v21, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::LoadConstantNDLayerParams::ByteSizeLong(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  unint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::LoadConstantNDLayerParams::IsInitialized(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LoadConstantNDLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LoadConstantNDLayerParams");
}

CoreML::Specification::FillLikeLayerParams *CoreML::Specification::FillLikeLayerParams::FillLikeLayerParams(CoreML::Specification::FillLikeLayerParams *this)
{
  *(void *)this = &unk_26D761918;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FillLikeLayerParams *)&CoreML::Specification::_FillLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F98B30(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::FillLikeLayerParams::~FillLikeLayerParams(CoreML::Specification::FillLikeLayerParams *this)
{
  *(void *)this = &unk_26D761918;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761918;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::FillLikeLayerParams::New(CoreML::Specification::FillLikeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F98C40(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::FillLikeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::FillLikeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::FillLikeLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::FillLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillLikeLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    int v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::FillLikeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::FillLikeLayerParams::ByteSizeLong(CoreML::Specification::FillLikeLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::FillLikeLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::FillLikeLayerParams::IsInitialized(CoreML::Specification::FillLikeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::FillLikeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FillLikeLayerParams");
}

CoreML::Specification::FillStaticLayerParams *CoreML::Specification::FillStaticLayerParams::FillStaticLayerParams(CoreML::Specification::FillStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7619B0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::FillStaticLayerParams *)&CoreML::Specification::_FillStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 36) = 0;
  return this;
}

void sub_223F98E90(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::FillStaticLayerParams::~FillStaticLayerParams(CoreML::Specification::FillStaticLayerParams *this)
{
  *(void *)this = &unk_26D7619B0;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::FillStaticLayerParams::~FillStaticLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::FillStaticLayerParams::default_instance(CoreML::Specification::FillStaticLayerParams *this)
{
  return &CoreML::Specification::_FillStaticLayerParams_default_instance_;
}

void CoreML::Specification::FillStaticLayerParams::New(CoreML::Specification::FillStaticLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F98FC4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::FillStaticLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::FillStaticLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::FillStaticLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

BOOL CoreML::Specification::FillStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillStaticLayerParams *this, char **a2, unsigned int a3)
{
  float v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_13;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_13;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0x12u, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_13;
          }
          int v12 = *a2;
          if (*a2 >= a2[1] || *v12 < 0)
          {
            VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacint k = *v12;
            *a2 = v12 + 1;
          }
          int v16 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
          {
            do
            {
              unsigned int v17 = *a2;
              if (*a2 >= a2[1] || *v17 < 0)
              {
                Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                if ((v20 & 1) == 0) {
                  return 0;
                }
                unint64_t v18 = Varint64Fallback;
              }
              else
              {
                unint64_t v18 = *v17;
                *a2 = v17 + 1;
              }
              signed int v21 = *((_DWORD *)this + 4);
              if (v21 == *((_DWORD *)this + 5))
              {
                _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v21 + 1);
                signed int v21 = *v5;
              }
              uint64_t v22 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v21 + 1;
              *(void *)(v22 + 8 * v21 + 8) = v18;
            }
            while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
          }
          _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        }
      }
      if (v8 >> 3 != 1 || v8 != 13) {
        break;
      }
      unsigned int v24 = 0;
      int v14 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v24);
        if (!result) {
          return result;
        }
        unsigned int v15 = v24;
      }
      else
      {
        unsigned int v15 = *v14;
        *a2 = (char *)(v14 + 1);
      }
      *((_DWORD *)this + 9) = v15;
    }
LABEL_13:
    if (v8) {
      BOOL v11 = (v8 & 7) == 4;
    }
    else {
      BOOL v11 = 1;
    }
    if (v11) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::FillStaticLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  float v5 = *(float *)(this + 36);
  if (v5 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  }
  if (*(int *)(v4 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x12u);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v4 + 32);
    if (v6 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v4 + 32);
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *uint64_t v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(unsigned int *)(v4 + 16);
    if ((int)v13 >= 1)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v15 = *(void *)(*(void *)(v4 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v15);
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 1);
          if (v15 < 0x80)
          {
            unint64_t v18 = *(void *)(*(void *)(v4 + 24) + 8 * i + 8);
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v17++ = v15 | 0x80;
              unint64_t v18 = v15 >> 7;
              unint64_t v19 = v15 >> 14;
              v15 >>= 7;
            }
            while (v19);
          }
          *unsigned int v17 = v18;
          int v20 = v17 - v16 + 1;
          *((void *)a2 + 1) += v20;
          *((_DWORD *)a2 + 4) -= v20;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::FillStaticLayerParams::ByteSizeLong(CoreML::Specification::FillStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  float v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((float *)this + 9) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::FillStaticLayerParams::IsInitialized(CoreML::Specification::FillStaticLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::FillStaticLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FillStaticLayerParams");
}

CoreML::Specification::FillDynamicLayerParams *CoreML::Specification::FillDynamicLayerParams::FillDynamicLayerParams(CoreML::Specification::FillDynamicLayerParams *this)
{
  *(void *)this = &unk_26D761A48;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FillDynamicLayerParams *)&CoreML::Specification::_FillDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F994E0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::FillDynamicLayerParams::~FillDynamicLayerParams(CoreML::Specification::FillDynamicLayerParams *this)
{
  *(void *)this = &unk_26D761A48;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761A48;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::FillDynamicLayerParams::New(CoreML::Specification::FillDynamicLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F995F0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::FillDynamicLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::FillDynamicLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::FillDynamicLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::FillDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillDynamicLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_11:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      uint64_t v11 = v10;
      if (v10
        || (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      {
        return v11;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
      goto LABEL_11;
    }
    unsigned int v15 = 0;
    int v12 = (unsigned int *)*a2;
    if ((int)(*((_DWORD *)a2 + 2) - *a2) >= 4)
    {
      unsigned int v13 = *v12;
      *a2 = (char *)(v12 + 1);
      goto LABEL_22;
    }
    if (!_tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v15)) {
      return 0;
    }
    unsigned int v13 = v15;
LABEL_22:
    *((_DWORD *)this + 4) = v13;
  }
}

uint64_t CoreML::Specification::FillDynamicLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3)
{
  float v3 = *(float *)(this + 16);
  if (v3 != 0.0) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::FillDynamicLayerParams::ByteSizeLong(CoreML::Specification::FillDynamicLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::FillDynamicLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  float v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::FillDynamicLayerParams::IsInitialized(CoreML::Specification::FillDynamicLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::FillDynamicLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FillDynamicLayerParams");
}

CoreML::Specification::WhereBroadcastableLayerParams *CoreML::Specification::WhereBroadcastableLayerParams::WhereBroadcastableLayerParams(CoreML::Specification::WhereBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D761AE0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::WhereBroadcastableLayerParams *)&CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F99834(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::WhereBroadcastableLayerParams::~WhereBroadcastableLayerParams(CoreML::Specification::WhereBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D761AE0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761AE0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::WhereBroadcastableLayerParams::New(CoreML::Specification::WhereBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F99944(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::WhereBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::WhereBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::WhereBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::WhereBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::WhereBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::WhereBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::WhereBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::WhereBroadcastableLayerParams::IsInitialized(CoreML::Specification::WhereBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::WhereBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.WhereBroadcastableLayerParams");
}

CoreML::Specification::SinLayerParams *CoreML::Specification::SinLayerParams::SinLayerParams(CoreML::Specification::SinLayerParams *this)
{
  *(void *)this = &unk_26D761B78;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SinLayerParams *)&CoreML::Specification::_SinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F99AA4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SinLayerParams::~SinLayerParams(CoreML::Specification::SinLayerParams *this)
{
  *(void *)this = &unk_26D761B78;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761B78;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::SinLayerParams::New(CoreML::Specification::SinLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F99BB4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SinLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SinLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SinLayerParams::MergePartialFromCodedStream(CoreML::Specification::SinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::SinLayerParams::ByteSizeLong(CoreML::Specification::SinLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::SinLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::SinLayerParams::IsInitialized(CoreML::Specification::SinLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SinLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SinLayerParams");
}

CoreML::Specification::CosLayerParams *CoreML::Specification::CosLayerParams::CosLayerParams(CoreML::Specification::CosLayerParams *this)
{
  *(void *)this = &unk_26D761C10;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CosLayerParams *)&CoreML::Specification::_CosLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F99D14(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::CosLayerParams::~CosLayerParams(CoreML::Specification::CosLayerParams *this)
{
  *(void *)this = &unk_26D761C10;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761C10;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::CosLayerParams::New(CoreML::Specification::CosLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F99E24(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CosLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CosLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::CosLayerParams::MergePartialFromCodedStream(CoreML::Specification::CosLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::CosLayerParams::ByteSizeLong(CoreML::Specification::CosLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::CosLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::CosLayerParams::IsInitialized(CoreML::Specification::CosLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::CosLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CosLayerParams");
}

CoreML::Specification::TanLayerParams *CoreML::Specification::TanLayerParams::TanLayerParams(CoreML::Specification::TanLayerParams *this)
{
  *(void *)this = &unk_26D761CA8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TanLayerParams *)&CoreML::Specification::_TanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F99F84(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::TanLayerParams::~TanLayerParams(CoreML::Specification::TanLayerParams *this)
{
  *(void *)this = &unk_26D761CA8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761CA8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::TanLayerParams::New(CoreML::Specification::TanLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9A094(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::TanLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::TanLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::TanLayerParams::MergePartialFromCodedStream(CoreML::Specification::TanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::TanLayerParams::ByteSizeLong(CoreML::Specification::TanLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::TanLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::TanLayerParams::IsInitialized(CoreML::Specification::TanLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::TanLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TanLayerParams");
}

CoreML::Specification::AsinLayerParams *CoreML::Specification::AsinLayerParams::AsinLayerParams(CoreML::Specification::AsinLayerParams *this)
{
  *(void *)this = &unk_26D761D40;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AsinLayerParams *)&CoreML::Specification::_AsinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9A1F4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AsinLayerParams::~AsinLayerParams(CoreML::Specification::AsinLayerParams *this)
{
  *(void *)this = &unk_26D761D40;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761D40;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AsinLayerParams::New(CoreML::Specification::AsinLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9A304(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AsinLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AsinLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AsinLayerParams::MergePartialFromCodedStream(CoreML::Specification::AsinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::AsinLayerParams::ByteSizeLong(CoreML::Specification::AsinLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::AsinLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::AsinLayerParams::IsInitialized(CoreML::Specification::AsinLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AsinLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AsinLayerParams");
}

CoreML::Specification::AcosLayerParams *CoreML::Specification::AcosLayerParams::AcosLayerParams(CoreML::Specification::AcosLayerParams *this)
{
  *(void *)this = &unk_26D761DD8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AcosLayerParams *)&CoreML::Specification::_AcosLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9A464(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AcosLayerParams::~AcosLayerParams(CoreML::Specification::AcosLayerParams *this)
{
  *(void *)this = &unk_26D761DD8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761DD8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AcosLayerParams::New(CoreML::Specification::AcosLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9A574(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AcosLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AcosLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AcosLayerParams::MergePartialFromCodedStream(CoreML::Specification::AcosLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::AcosLayerParams::ByteSizeLong(CoreML::Specification::AcosLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::AcosLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::AcosLayerParams::IsInitialized(CoreML::Specification::AcosLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AcosLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AcosLayerParams");
}

CoreML::Specification::AtanLayerParams *CoreML::Specification::AtanLayerParams::AtanLayerParams(CoreML::Specification::AtanLayerParams *this)
{
  *(void *)this = &unk_26D761E70;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AtanLayerParams *)&CoreML::Specification::_AtanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9A6D4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AtanLayerParams::~AtanLayerParams(CoreML::Specification::AtanLayerParams *this)
{
  *(void *)this = &unk_26D761E70;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761E70;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AtanLayerParams::New(CoreML::Specification::AtanLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9A7E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AtanLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AtanLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AtanLayerParams::MergePartialFromCodedStream(CoreML::Specification::AtanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::AtanLayerParams::ByteSizeLong(CoreML::Specification::AtanLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::AtanLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::AtanLayerParams::IsInitialized(CoreML::Specification::AtanLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AtanLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AtanLayerParams");
}

CoreML::Specification::SinhLayerParams *CoreML::Specification::SinhLayerParams::SinhLayerParams(CoreML::Specification::SinhLayerParams *this)
{
  *(void *)this = &unk_26D761F08;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SinhLayerParams *)&CoreML::Specification::_SinhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9A944(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SinhLayerParams::~SinhLayerParams(CoreML::Specification::SinhLayerParams *this)
{
  *(void *)this = &unk_26D761F08;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761F08;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::SinhLayerParams::New(CoreML::Specification::SinhLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9AA54(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SinhLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SinhLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SinhLayerParams::MergePartialFromCodedStream(CoreML::Specification::SinhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::SinhLayerParams::ByteSizeLong(CoreML::Specification::SinhLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::SinhLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::SinhLayerParams::IsInitialized(CoreML::Specification::SinhLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SinhLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SinhLayerParams");
}

CoreML::Specification::CoshLayerParams *CoreML::Specification::CoshLayerParams::CoshLayerParams(CoreML::Specification::CoshLayerParams *this)
{
  *(void *)this = &unk_26D761FA0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoshLayerParams *)&CoreML::Specification::_CoshLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9ABB4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::CoshLayerParams::~CoshLayerParams(CoreML::Specification::CoshLayerParams *this)
{
  *(void *)this = &unk_26D761FA0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D761FA0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::CoshLayerParams::New(CoreML::Specification::CoshLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9ACC4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CoshLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CoshLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::CoshLayerParams::MergePartialFromCodedStream(CoreML::Specification::CoshLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::CoshLayerParams::ByteSizeLong(CoreML::Specification::CoshLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::CoshLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::CoshLayerParams::IsInitialized(CoreML::Specification::CoshLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::CoshLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoshLayerParams");
}

CoreML::Specification::TanhLayerParams *CoreML::Specification::TanhLayerParams::TanhLayerParams(CoreML::Specification::TanhLayerParams *this)
{
  *(void *)this = &unk_26D762038;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TanhLayerParams *)&CoreML::Specification::_TanhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9AE24(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::TanhLayerParams::~TanhLayerParams(CoreML::Specification::TanhLayerParams *this)
{
  *(void *)this = &unk_26D762038;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762038;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::TanhLayerParams::New(CoreML::Specification::TanhLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9AF34(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::TanhLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::TanhLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::TanhLayerParams::MergePartialFromCodedStream(CoreML::Specification::TanhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::TanhLayerParams::ByteSizeLong(CoreML::Specification::TanhLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::TanhLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::TanhLayerParams::IsInitialized(CoreML::Specification::TanhLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::TanhLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TanhLayerParams");
}

CoreML::Specification::AsinhLayerParams *CoreML::Specification::AsinhLayerParams::AsinhLayerParams(CoreML::Specification::AsinhLayerParams *this)
{
  *(void *)this = &unk_26D7620D0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AsinhLayerParams *)&CoreML::Specification::_AsinhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9B094(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AsinhLayerParams::~AsinhLayerParams(CoreML::Specification::AsinhLayerParams *this)
{
  *(void *)this = &unk_26D7620D0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7620D0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AsinhLayerParams::New(CoreML::Specification::AsinhLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9B1A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AsinhLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AsinhLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AsinhLayerParams::MergePartialFromCodedStream(CoreML::Specification::AsinhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::AsinhLayerParams::ByteSizeLong(CoreML::Specification::AsinhLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::AsinhLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::AsinhLayerParams::IsInitialized(CoreML::Specification::AsinhLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AsinhLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AsinhLayerParams");
}

CoreML::Specification::AcoshLayerParams *CoreML::Specification::AcoshLayerParams::AcoshLayerParams(CoreML::Specification::AcoshLayerParams *this)
{
  *(void *)this = &unk_26D762168;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AcoshLayerParams *)&CoreML::Specification::_AcoshLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9B304(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AcoshLayerParams::~AcoshLayerParams(CoreML::Specification::AcoshLayerParams *this)
{
  *(void *)this = &unk_26D762168;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762168;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AcoshLayerParams::New(CoreML::Specification::AcoshLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9B414(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AcoshLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AcoshLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AcoshLayerParams::MergePartialFromCodedStream(CoreML::Specification::AcoshLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::AcoshLayerParams::ByteSizeLong(CoreML::Specification::AcoshLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::AcoshLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::AcoshLayerParams::IsInitialized(CoreML::Specification::AcoshLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AcoshLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AcoshLayerParams");
}

CoreML::Specification::AtanhLayerParams *CoreML::Specification::AtanhLayerParams::AtanhLayerParams(CoreML::Specification::AtanhLayerParams *this)
{
  *(void *)this = &unk_26D762200;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AtanhLayerParams *)&CoreML::Specification::_AtanhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9B574(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AtanhLayerParams::~AtanhLayerParams(CoreML::Specification::AtanhLayerParams *this)
{
  *(void *)this = &unk_26D762200;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762200;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AtanhLayerParams::New(CoreML::Specification::AtanhLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9B684(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AtanhLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AtanhLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AtanhLayerParams::MergePartialFromCodedStream(CoreML::Specification::AtanhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::AtanhLayerParams::ByteSizeLong(CoreML::Specification::AtanhLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::AtanhLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::AtanhLayerParams::IsInitialized(CoreML::Specification::AtanhLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AtanhLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AtanhLayerParams");
}

CoreML::Specification::PowBroadcastableLayerParams *CoreML::Specification::PowBroadcastableLayerParams::PowBroadcastableLayerParams(CoreML::Specification::PowBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762298;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PowBroadcastableLayerParams *)&CoreML::Specification::_PowBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9B7E4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PowBroadcastableLayerParams::~PowBroadcastableLayerParams(CoreML::Specification::PowBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762298;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762298;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::PowBroadcastableLayerParams::New(CoreML::Specification::PowBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9B8F4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::PowBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::PowBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::PowBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::PowBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::PowBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::PowBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::PowBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::PowBroadcastableLayerParams::IsInitialized(CoreML::Specification::PowBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::PowBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PowBroadcastableLayerParams");
}

CoreML::Specification::Exp2LayerParams *CoreML::Specification::Exp2LayerParams::Exp2LayerParams(CoreML::Specification::Exp2LayerParams *this)
{
  *(void *)this = &unk_26D762330;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Exp2LayerParams *)&CoreML::Specification::_Exp2LayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9BA54(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::Exp2LayerParams::~Exp2LayerParams(CoreML::Specification::Exp2LayerParams *this)
{
  *(void *)this = &unk_26D762330;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762330;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::Exp2LayerParams::New(CoreML::Specification::Exp2LayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9BB64(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::Exp2LayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::Exp2LayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::Exp2LayerParams::MergePartialFromCodedStream(CoreML::Specification::Exp2LayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::Exp2LayerParams::ByteSizeLong(CoreML::Specification::Exp2LayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::Exp2LayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::Exp2LayerParams::IsInitialized(CoreML::Specification::Exp2LayerParams *this)
{
  return 1;
}

void *CoreML::Specification::Exp2LayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Exp2LayerParams");
}

CoreML::Specification::WhereNonZeroLayerParams *CoreML::Specification::WhereNonZeroLayerParams::WhereNonZeroLayerParams(CoreML::Specification::WhereNonZeroLayerParams *this)
{
  *(void *)this = &unk_26D7623C8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::WhereNonZeroLayerParams *)&CoreML::Specification::_WhereNonZeroLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9BCC4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::WhereNonZeroLayerParams::~WhereNonZeroLayerParams(CoreML::Specification::WhereNonZeroLayerParams *this)
{
  *(void *)this = &unk_26D7623C8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7623C8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::WhereNonZeroLayerParams::New(CoreML::Specification::WhereNonZeroLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9BDD4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::WhereNonZeroLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::WhereNonZeroLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::WhereNonZeroLayerParams::MergePartialFromCodedStream(CoreML::Specification::WhereNonZeroLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::WhereNonZeroLayerParams::ByteSizeLong(CoreML::Specification::WhereNonZeroLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::WhereNonZeroLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::WhereNonZeroLayerParams::IsInitialized(CoreML::Specification::WhereNonZeroLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::WhereNonZeroLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.WhereNonZeroLayerParams");
}

CoreML::Specification::MatrixBandPartLayerParams *CoreML::Specification::MatrixBandPartLayerParams::MatrixBandPartLayerParams(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  *(void *)this = &unk_26D762460;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MatrixBandPartLayerParams *)&CoreML::Specification::_MatrixBandPartLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F9BF38(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MatrixBandPartLayerParams::~MatrixBandPartLayerParams(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  *(void *)this = &unk_26D762460;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762460;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::MatrixBandPartLayerParams::New(CoreML::Specification::MatrixBandPartLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9C048(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::MatrixBandPartLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::MatrixBandPartLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::MatrixBandPartLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::MatrixBandPartLayerParams::MergePartialFromCodedStream(CoreML::Specification::MatrixBandPartLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        float v5 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v6 = 0;
LABEL_6:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        int v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacint k = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::MatrixBandPartLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::MatrixBandPartLayerParams::ByteSizeLong(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::MatrixBandPartLayerParams::IsInitialized(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::MatrixBandPartLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MatrixBandPartLayerParams");
}

CoreML::Specification::UpperTriangularLayerParams *CoreML::Specification::UpperTriangularLayerParams::UpperTriangularLayerParams(CoreML::Specification::UpperTriangularLayerParams *this)
{
  *(void *)this = &unk_26D7624F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::UpperTriangularLayerParams *)&CoreML::Specification::_UpperTriangularLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F9C300(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::UpperTriangularLayerParams::~UpperTriangularLayerParams(CoreML::Specification::UpperTriangularLayerParams *this)
{
  *(void *)this = &unk_26D7624F8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7624F8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::UpperTriangularLayerParams::New(CoreML::Specification::UpperTriangularLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9C410(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::UpperTriangularLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::UpperTriangularLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::UpperTriangularLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::UpperTriangularLayerParams::MergePartialFromCodedStream(CoreML::Specification::UpperTriangularLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::UpperTriangularLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::UpperTriangularLayerParams::ByteSizeLong(CoreML::Specification::UpperTriangularLayerParams *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::UpperTriangularLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::UpperTriangularLayerParams::IsInitialized(CoreML::Specification::UpperTriangularLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::UpperTriangularLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.UpperTriangularLayerParams");
}

CoreML::Specification::LowerTriangularLayerParams *CoreML::Specification::LowerTriangularLayerParams::LowerTriangularLayerParams(CoreML::Specification::LowerTriangularLayerParams *this)
{
  *(void *)this = &unk_26D762590;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LowerTriangularLayerParams *)&CoreML::Specification::_LowerTriangularLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F9C650(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::LowerTriangularLayerParams::~LowerTriangularLayerParams(CoreML::Specification::LowerTriangularLayerParams *this)
{
  *(void *)this = &unk_26D762590;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762590;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::LowerTriangularLayerParams::New(CoreML::Specification::LowerTriangularLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9C760(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::LowerTriangularLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::LowerTriangularLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::LowerTriangularLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::LowerTriangularLayerParams::MergePartialFromCodedStream(CoreML::Specification::LowerTriangularLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      std::string::size_type v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::LowerTriangularLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::LowerTriangularLayerParams::ByteSizeLong(CoreML::Specification::LowerTriangularLayerParams *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::LowerTriangularLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::LowerTriangularLayerParams::IsInitialized(CoreML::Specification::LowerTriangularLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::LowerTriangularLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LowerTriangularLayerParams");
}

CoreML::Specification::BroadcastToLikeLayerParams *CoreML::Specification::BroadcastToLikeLayerParams::BroadcastToLikeLayerParams(CoreML::Specification::BroadcastToLikeLayerParams *this)
{
  *(void *)this = &unk_26D762628;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BroadcastToLikeLayerParams *)&CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9C99C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BroadcastToLikeLayerParams::~BroadcastToLikeLayerParams(CoreML::Specification::BroadcastToLikeLayerParams *this)
{
  *(void *)this = &unk_26D762628;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762628;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::BroadcastToLikeLayerParams::New(CoreML::Specification::BroadcastToLikeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9CAAC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BroadcastToLikeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BroadcastToLikeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::BroadcastToLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::BroadcastToLikeLayerParams::ByteSizeLong(CoreML::Specification::BroadcastToLikeLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::BroadcastToLikeLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::BroadcastToLikeLayerParams::IsInitialized(CoreML::Specification::BroadcastToLikeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::BroadcastToLikeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BroadcastToLikeLayerParams");
}

CoreML::Specification::BroadcastToStaticLayerParams *CoreML::Specification::BroadcastToStaticLayerParams::BroadcastToStaticLayerParams(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7626C0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::BroadcastToStaticLayerParams *)&CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F9CC18(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BroadcastToStaticLayerParams::~BroadcastToStaticLayerParams(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  *(void *)this = &unk_26D7626C0;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::BroadcastToStaticLayerParams::~BroadcastToStaticLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::BroadcastToStaticLayerParams::default_instance(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  return &CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_;
}

void CoreML::Specification::BroadcastToStaticLayerParams::New(CoreML::Specification::BroadcastToStaticLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9CD4C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BroadcastToStaticLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BroadcastToStaticLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToStaticLayerParams *this, char **a2, unsigned int a3)
{
  std::string::size_type v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacint k = *v10;
          *a2 = v10 + 1;
        }
        int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            BOOL v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v17 & 1) == 0) {
                return 0;
              }
              unint64_t v15 = Varint64Fallback;
            }
            else
            {
              unint64_t v15 = *v14;
              *a2 = v14 + 1;
            }
            signed int v18 = *((_DWORD *)this + 4);
            if (v18 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v18 + 1);
              signed int v18 = *v5;
            }
            uint64_t v19 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v18 + 1;
            *(void *)(v19 + 8 * v18 + 8) = v15;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::ByteSizeLong(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::IsInitialized(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::BroadcastToStaticLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BroadcastToStaticLayerParams");
}

CoreML::Specification::BroadcastToDynamicLayerParams *CoreML::Specification::BroadcastToDynamicLayerParams::BroadcastToDynamicLayerParams(CoreML::Specification::BroadcastToDynamicLayerParams *this)
{
  *(void *)this = &unk_26D762758;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BroadcastToDynamicLayerParams *)&CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9D1E0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BroadcastToDynamicLayerParams::~BroadcastToDynamicLayerParams(CoreML::Specification::BroadcastToDynamicLayerParams *this)
{
  *(void *)this = &unk_26D762758;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762758;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::BroadcastToDynamicLayerParams::New(CoreML::Specification::BroadcastToDynamicLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9D2F0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::BroadcastToDynamicLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::BroadcastToDynamicLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::BroadcastToDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::BroadcastToDynamicLayerParams::ByteSizeLong(CoreML::Specification::BroadcastToDynamicLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::BroadcastToDynamicLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::BroadcastToDynamicLayerParams::IsInitialized(CoreML::Specification::BroadcastToDynamicLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::BroadcastToDynamicLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BroadcastToDynamicLayerParams");
}

CoreML::Specification::AddBroadcastableLayerParams *CoreML::Specification::AddBroadcastableLayerParams::AddBroadcastableLayerParams(CoreML::Specification::AddBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D7627F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AddBroadcastableLayerParams *)&CoreML::Specification::_AddBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9D450(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AddBroadcastableLayerParams::~AddBroadcastableLayerParams(CoreML::Specification::AddBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D7627F0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7627F0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::AddBroadcastableLayerParams::New(CoreML::Specification::AddBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9D564(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::AddBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::AddBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::AddBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::AddBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::AddBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::AddBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::AddBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::AddBroadcastableLayerParams::IsInitialized(CoreML::Specification::AddBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::AddBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AddBroadcastableLayerParams");
}

CoreML::Specification::MaxBroadcastableLayerParams *CoreML::Specification::MaxBroadcastableLayerParams::MaxBroadcastableLayerParams(CoreML::Specification::MaxBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762888;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MaxBroadcastableLayerParams *)&CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9D6C4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MaxBroadcastableLayerParams::~MaxBroadcastableLayerParams(CoreML::Specification::MaxBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762888;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762888;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::MaxBroadcastableLayerParams::New(CoreML::Specification::MaxBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9D7D4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::MaxBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::MaxBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::MaxBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MaxBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::MaxBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::MaxBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::MaxBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::MaxBroadcastableLayerParams::IsInitialized(CoreML::Specification::MaxBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::MaxBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MaxBroadcastableLayerParams");
}

CoreML::Specification::MinBroadcastableLayerParams *CoreML::Specification::MinBroadcastableLayerParams::MinBroadcastableLayerParams(CoreML::Specification::MinBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762920;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MinBroadcastableLayerParams *)&CoreML::Specification::_MinBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9D934(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MinBroadcastableLayerParams::~MinBroadcastableLayerParams(CoreML::Specification::MinBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762920;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762920;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::MinBroadcastableLayerParams::New(CoreML::Specification::MinBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9DA44(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::MinBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::MinBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::MinBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MinBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::MinBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::MinBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::MinBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::MinBroadcastableLayerParams::IsInitialized(CoreML::Specification::MinBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::MinBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MinBroadcastableLayerParams");
}

CoreML::Specification::ModBroadcastableLayerParams *CoreML::Specification::ModBroadcastableLayerParams::ModBroadcastableLayerParams(CoreML::Specification::ModBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D7629B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ModBroadcastableLayerParams *)&CoreML::Specification::_ModBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9DBA4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ModBroadcastableLayerParams::~ModBroadcastableLayerParams(CoreML::Specification::ModBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D7629B8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7629B8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ModBroadcastableLayerParams::New(CoreML::Specification::ModBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9DCB4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ModBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ModBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ModBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::ModBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::ModBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::ModBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::ModBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::ModBroadcastableLayerParams::IsInitialized(CoreML::Specification::ModBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ModBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ModBroadcastableLayerParams");
}

CoreML::Specification::FloorDivBroadcastableLayerParams *CoreML::Specification::FloorDivBroadcastableLayerParams::FloorDivBroadcastableLayerParams(CoreML::Specification::FloorDivBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762A50;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FloorDivBroadcastableLayerParams *)&CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9DE14(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::FloorDivBroadcastableLayerParams::~FloorDivBroadcastableLayerParams(CoreML::Specification::FloorDivBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762A50;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762A50;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::FloorDivBroadcastableLayerParams::New(CoreML::Specification::FloorDivBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9DF24(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::FloorDivBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::FloorDivBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::FloorDivBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::FloorDivBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::FloorDivBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::FloorDivBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::FloorDivBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::FloorDivBroadcastableLayerParams::IsInitialized(CoreML::Specification::FloorDivBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::FloorDivBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FloorDivBroadcastableLayerParams");
}

CoreML::Specification::SubtractBroadcastableLayerParams *CoreML::Specification::SubtractBroadcastableLayerParams::SubtractBroadcastableLayerParams(CoreML::Specification::SubtractBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762AE8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SubtractBroadcastableLayerParams *)&CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9E084(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::SubtractBroadcastableLayerParams::~SubtractBroadcastableLayerParams(CoreML::Specification::SubtractBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762AE8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762AE8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::SubtractBroadcastableLayerParams::New(CoreML::Specification::SubtractBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9E194(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::SubtractBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::SubtractBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::SubtractBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::SubtractBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::SubtractBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::SubtractBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::SubtractBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::SubtractBroadcastableLayerParams::IsInitialized(CoreML::Specification::SubtractBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::SubtractBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SubtractBroadcastableLayerParams");
}

CoreML::Specification::MultiplyBroadcastableLayerParams *CoreML::Specification::MultiplyBroadcastableLayerParams::MultiplyBroadcastableLayerParams(CoreML::Specification::MultiplyBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762B80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MultiplyBroadcastableLayerParams *)&CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9E2F4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MultiplyBroadcastableLayerParams::~MultiplyBroadcastableLayerParams(CoreML::Specification::MultiplyBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762B80;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762B80;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::MultiplyBroadcastableLayerParams::New(CoreML::Specification::MultiplyBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9E404(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::MultiplyBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::MultiplyBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::MultiplyBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MultiplyBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::MultiplyBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::MultiplyBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::MultiplyBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::MultiplyBroadcastableLayerParams::IsInitialized(CoreML::Specification::MultiplyBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::MultiplyBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MultiplyBroadcastableLayerParams");
}

CoreML::Specification::DivideBroadcastableLayerParams *CoreML::Specification::DivideBroadcastableLayerParams::DivideBroadcastableLayerParams(CoreML::Specification::DivideBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762C18;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DivideBroadcastableLayerParams *)&CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9E564(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::DivideBroadcastableLayerParams::~DivideBroadcastableLayerParams(CoreML::Specification::DivideBroadcastableLayerParams *this)
{
  *(void *)this = &unk_26D762C18;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762C18;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::DivideBroadcastableLayerParams::New(CoreML::Specification::DivideBroadcastableLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9E674(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::DivideBroadcastableLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::DivideBroadcastableLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::DivideBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::DivideBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::DivideBroadcastableLayerParams::ByteSizeLong(CoreML::Specification::DivideBroadcastableLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::DivideBroadcastableLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::DivideBroadcastableLayerParams::IsInitialized(CoreML::Specification::DivideBroadcastableLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::DivideBroadcastableLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DivideBroadcastableLayerParams");
}

CoreML::Specification::GatherLayerParams *CoreML::Specification::GatherLayerParams::GatherLayerParams(CoreML::Specification::GatherLayerParams *this)
{
  *(void *)this = &unk_26D762CB0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherLayerParams *)&CoreML::Specification::_GatherLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F9E7D8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::GatherLayerParams::~GatherLayerParams(CoreML::Specification::GatherLayerParams *this)
{
  *(void *)this = &unk_26D762CB0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762CB0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::GatherLayerParams::New(CoreML::Specification::GatherLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9E8EC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::GatherLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::GatherLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::GatherLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::GatherLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::GatherLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::GatherLayerParams::ByteSizeLong(CoreML::Specification::GatherLayerParams *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::GatherLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::GatherLayerParams::IsInitialized(CoreML::Specification::GatherLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::GatherLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GatherLayerParams");
}

CoreML::Specification::ScatterLayerParams *CoreML::Specification::ScatterLayerParams::ScatterLayerParams(CoreML::Specification::ScatterLayerParams *this)
{
  *(void *)this = &unk_26D762D48;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterLayerParams *)&CoreML::Specification::_ScatterLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F9EB28(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ScatterLayerParams::~ScatterLayerParams(CoreML::Specification::ScatterLayerParams *this)
{
  *(void *)this = &unk_26D762D48;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762D48;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ScatterLayerParams::New(CoreML::Specification::ScatterLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9EC38(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ScatterLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ScatterLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ScatterLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ScatterLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        std::string::size_type v5 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v6 = 0;
LABEL_6:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_30;
          }
        }
        Varint32Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_30:
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ScatterLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  signed int v7 = *(_DWORD *)(v5 + 24);
  if (v7)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::ScatterLayerParams::ByteSizeLong(CoreML::Specification::ScatterLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::ScatterLayerParams::IsInitialized(CoreML::Specification::ScatterLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ScatterLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ScatterLayerParams");
}

CoreML::Specification::GatherNDLayerParams *CoreML::Specification::GatherNDLayerParams::GatherNDLayerParams(CoreML::Specification::GatherNDLayerParams *this)
{
  *(void *)this = &unk_26D762DE0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherNDLayerParams *)&CoreML::Specification::_GatherNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_223F9EF0C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::GatherNDLayerParams::~GatherNDLayerParams(CoreML::Specification::GatherNDLayerParams *this)
{
  *(void *)this = &unk_26D762DE0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762DE0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::GatherNDLayerParams::New(CoreML::Specification::GatherNDLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9F01C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::GatherNDLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::GatherNDLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::GatherNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      unint64_t TagFallback = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

uint64_t CoreML::Specification::GatherNDLayerParams::ByteSizeLong(CoreML::Specification::GatherNDLayerParams *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

std::string *CoreML::Specification::GatherNDLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::GatherNDLayerParams::IsInitialized(CoreML::Specification::GatherNDLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::GatherNDLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GatherNDLayerParams");
}

CoreML::Specification::ScatterNDLayerParams *CoreML::Specification::ScatterNDLayerParams::ScatterNDLayerParams(CoreML::Specification::ScatterNDLayerParams *this)
{
  *(void *)this = &unk_26D762E78;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterNDLayerParams *)&CoreML::Specification::_ScatterNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_223F9F17C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ScatterNDLayerParams::~ScatterNDLayerParams(CoreML::Specification::ScatterNDLayerParams *this)
{
  *(void *)this = &unk_26D762E78;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762E78;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ScatterNDLayerParams::New(CoreML::Specification::ScatterNDLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9F28C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ScatterNDLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ScatterNDLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ScatterNDLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ScatterNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ScatterNDLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::ScatterNDLayerParams::ByteSizeLong(CoreML::Specification::ScatterNDLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

std::string *CoreML::Specification::ScatterNDLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::ScatterNDLayerParams::IsInitialized(CoreML::Specification::ScatterNDLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ScatterNDLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ScatterNDLayerParams");
}

CoreML::Specification::GatherAlongAxisLayerParams *CoreML::Specification::GatherAlongAxisLayerParams::GatherAlongAxisLayerParams(CoreML::Specification::GatherAlongAxisLayerParams *this)
{
  *(void *)this = &unk_26D762F10;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherAlongAxisLayerParams *)&CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F9F4E8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::GatherAlongAxisLayerParams::~GatherAlongAxisLayerParams(CoreML::Specification::GatherAlongAxisLayerParams *this)
{
  *(void *)this = &unk_26D762F10;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762F10;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::GatherAlongAxisLayerParams::New(CoreML::Specification::GatherAlongAxisLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9F5F8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::GatherAlongAxisLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::GatherAlongAxisLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::GatherAlongAxisLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::GatherAlongAxisLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherAlongAxisLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::GatherAlongAxisLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::GatherAlongAxisLayerParams::ByteSizeLong(CoreML::Specification::GatherAlongAxisLayerParams *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::GatherAlongAxisLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::GatherAlongAxisLayerParams::IsInitialized(CoreML::Specification::GatherAlongAxisLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::GatherAlongAxisLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GatherAlongAxisLayerParams");
}

CoreML::Specification::ScatterAlongAxisLayerParams *CoreML::Specification::ScatterAlongAxisLayerParams::ScatterAlongAxisLayerParams(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  *(void *)this = &unk_26D762FA8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterAlongAxisLayerParams *)&CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F9F834(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ScatterAlongAxisLayerParams::~ScatterAlongAxisLayerParams(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  *(void *)this = &unk_26D762FA8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D762FA8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::ScatterAlongAxisLayerParams::New(CoreML::Specification::ScatterAlongAxisLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9F944(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ScatterAlongAxisLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ScatterAlongAxisLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ScatterAlongAxisLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::ScatterAlongAxisLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterAlongAxisLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        std::string::size_type v5 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v6 = 0;
LABEL_6:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        int v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_30;
          }
        }
        Varint32Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_30:
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ScatterAlongAxisLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  signed int v7 = *(_DWORD *)(v5 + 24);
  if (v7)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt32(2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::ScatterAlongAxisLayerParams::ByteSizeLong(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::ScatterAlongAxisLayerParams::IsInitialized(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ScatterAlongAxisLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ScatterAlongAxisLayerParams");
}

CoreML::Specification::StackLayerParams *CoreML::Specification::StackLayerParams::StackLayerParams(CoreML::Specification::StackLayerParams *this)
{
  *(void *)this = &unk_26D763040;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::StackLayerParams *)&CoreML::Specification::_StackLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_223F9FC1C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::StackLayerParams::~StackLayerParams(CoreML::Specification::StackLayerParams *this)
{
  *(void *)this = &unk_26D763040;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D763040;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::StackLayerParams::default_instance(CoreML::Specification::StackLayerParams *this)
{
  return &CoreML::Specification::_StackLayerParams_default_instance_;
}

void CoreML::Specification::StackLayerParams::New(CoreML::Specification::StackLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F9FD4C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::StackLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::StackLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::StackLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::StackLayerParams::MergePartialFromCodedStream(CoreML::Specification::StackLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::StackLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::StackLayerParams::ByteSizeLong(CoreML::Specification::StackLayerParams *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::StackLayerParams::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::StackLayerParams::IsInitialized(CoreML::Specification::StackLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::StackLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StackLayerParams");
}

CoreML::Specification::RankPreservingReshapeLayerParams *CoreML::Specification::RankPreservingReshapeLayerParams::RankPreservingReshapeLayerParams(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7630D8;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RankPreservingReshapeLayerParams *)&CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F9FF94(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RankPreservingReshapeLayerParams::~RankPreservingReshapeLayerParams(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  *(void *)this = &unk_26D7630D8;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::RankPreservingReshapeLayerParams::~RankPreservingReshapeLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::RankPreservingReshapeLayerParams::default_instance(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  return &CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_;
}

void CoreML::Specification::RankPreservingReshapeLayerParams::New(CoreML::Specification::RankPreservingReshapeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA00C8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RankPreservingReshapeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RankPreservingReshapeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RankPreservingReshapeLayerParams *this, char **a2, unsigned int a3)
{
  std::string::size_type v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          VarintSizeAsIntFallbacint k = *v10;
          *a2 = v10 + 1;
        }
        int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            BOOL v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v17 & 1) == 0) {
                return 0;
              }
              unint64_t v15 = Varint64Fallback;
            }
            else
            {
              unint64_t v15 = *v14;
              *a2 = v14 + 1;
            }
            signed int v18 = *((_DWORD *)this + 4);
            if (v18 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v18 + 1);
              signed int v18 = *v5;
            }
            uint64_t v19 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v18 + 1;
            *(void *)(v19 + 8 * v18 + 8) = v15;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::ByteSizeLong(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::IsInitialized(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RankPreservingReshapeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RankPreservingReshapeLayerParams");
}

CoreML::Specification::ConstantPaddingLayerParams *CoreML::Specification::ConstantPaddingLayerParams::ConstantPaddingLayerParams(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D763170;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ConstantPaddingLayerParams *)&CoreML::Specification::_ConstantPaddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 11) = 0;
  return this;
}

void sub_223FA0570(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ConstantPaddingLayerParams::~ConstantPaddingLayerParams(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  *(void *)this = &unk_26D763170;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::ConstantPaddingLayerParams::~ConstantPaddingLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::ConstantPaddingLayerParams::default_instance(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  return &CoreML::Specification::_ConstantPaddingLayerParams_default_instance_;
}

void CoreML::Specification::ConstantPaddingLayerParams::New(CoreML::Specification::ConstantPaddingLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA06A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C404456B134);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::ConstantPaddingLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::ConstantPaddingLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::ConstantPaddingLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 36) = 0;
  *(unsigned char *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  return this;
}

BOOL CoreML::Specification::ConstantPaddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConstantPaddingLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 >= a2[1])
          {
            uint64_t v7 = 0;
LABEL_7:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
            unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0) {
              goto LABEL_27;
            }
            goto LABEL_8;
          }
          uint64_t v7 = *v6;
          if (*v6 < 1) {
            goto LABEL_7;
          }
          *a2 = v6 + 1;
          unint64_t v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v10 = v8 >> 3;
          if (v8 >> 3 != 3) {
            break;
          }
          if (v8 != 24) {
            goto LABEL_27;
          }
          uint64_t v14 = *a2;
          if (*a2 >= a2[1] || *v14 < 0)
          {
            Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacint k = *v14;
            *a2 = v14 + 1;
          }
          *((unsigned char *)this + 4CoreML::Specification::Identity::New(this, 0) = Varint64Fallback != 0;
        }
        if (v10 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0x12u, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_27;
          }
          unint64_t v16 = *a2;
          if (*a2 >= a2[1] || *v16 < 0)
          {
            VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            VarintSizeAsIntFallbacint k = *v16;
            *a2 = v16 + 1;
          }
          int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
          {
            do
            {
              signed int v21 = *a2;
              if (*a2 >= a2[1] || *v21 < 0)
              {
                unint64_t v23 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                if ((v24 & 1) == 0) {
                  return 0;
                }
                unint64_t v22 = v23;
              }
              else
              {
                unint64_t v22 = *v21;
                *a2 = v21 + 1;
              }
              signed int v25 = *((_DWORD *)this + 4);
              if (v25 == *((_DWORD *)this + 5))
              {
                _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
                signed int v25 = *v5;
              }
              uint64_t v26 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v25 + 1;
              *(void *)(v26 + 8 * v25 + 8) = v22;
            }
            while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
          }
          _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
        }
      }
      if (v10 != 1 || v8 != 13) {
        break;
      }
      unsigned int v28 = 0;
      BOOL v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v13 = v28;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 9) = v13;
    }
LABEL_27:
    if (v8) {
      BOOL v18 = (v8 & 7) == 4;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ConstantPaddingLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  float v6 = *(float *)(this + 36);
  if (v6 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)1, a2, v6, a3);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x12u);
      int v7 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v7 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v7;
    }
    unsigned int v8 = *(_DWORD *)(v5 + 32);
    if (v7 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v8);
    }
    else
    {
      uint64_t v9 = *((void *)a2 + 1);
      if (v8 < 0x80)
      {
        unsigned int v11 = *(_DWORD *)(v5 + 32);
        unsigned int v10 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v10 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v10++ = v8 | 0x80;
          unsigned int v11 = v8 >> 7;
          unsigned int v12 = v8 >> 14;
          v8 >>= 7;
        }
        while (v12);
      }
      *unsigned int v10 = v11;
      int v13 = v10 - v9 + 1;
      *((void *)a2 + 1) += v13;
      *((_DWORD *)a2 + 4) -= v13;
    }
    uint64_t v14 = *(unsigned int *)(v5 + 16);
    if ((int)v14 >= 1)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        unint64_t v16 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v16);
        }
        else
        {
          uint64_t v17 = *((void *)a2 + 1);
          if (v16 < 0x80)
          {
            unint64_t v19 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            BOOL v18 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            BOOL v18 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v18++ = v16 | 0x80;
              unint64_t v19 = v16 >> 7;
              unint64_t v20 = v16 >> 14;
              v16 >>= 7;
            }
            while (v20);
          }
          unsigned char *v18 = v19;
          int v21 = v18 - v17 + 1;
          *((void *)a2 + 1) += v21;
          *((_DWORD *)a2 + 4) -= v21;
        }
      }
    }
  }
  if (*(unsigned char *)(v5 + 40))
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(3, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::ConstantPaddingLayerParams::ByteSizeLong(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((float *)this + 9) != 0.0) {
    v6 += 5;
  }
  if (*((unsigned char *)this + 40)) {
    v6 += 2;
  }
  *((_DWORD *)this + 11) = v6;
  return v6;
}

uint64_t CoreML::Specification::ConstantPaddingLayerParams::IsInitialized(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::ConstantPaddingLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ConstantPaddingLayerParams");
}

CoreML::Specification::RandomNormalLikeLayerParams *CoreML::Specification::RandomNormalLikeLayerParams::RandomNormalLikeLayerParams(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  *(void *)this = &unk_26D763208;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomNormalLikeLayerParams *)&CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223FA0C60(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomNormalLikeLayerParams::~RandomNormalLikeLayerParams(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  *(void *)this = &unk_26D763208;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D763208;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::RandomNormalLikeLayerParams::New(CoreML::Specification::RandomNormalLikeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA0D70(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomNormalLikeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomNormalLikeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomNormalLikeLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

BOOL CoreML::Specification::RandomNormalLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            uint64_t v6 = 0;
LABEL_6:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        unint64_t v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::RandomNormalLikeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 24);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  float v8 = *(float *)(v5 + 28);
  if (v8 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  }
  return this;
}

unint64_t CoreML::Specification::RandomNormalLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomNormalLikeLayerParams::IsInitialized(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomNormalLikeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomNormalLikeLayerParams");
}

CoreML::Specification::RandomNormalStaticLayerParams *CoreML::Specification::RandomNormalStaticLayerParams::RandomNormalStaticLayerParams(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7632A0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomNormalStaticLayerParams *)&CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_223FA10B0(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomNormalStaticLayerParams::~RandomNormalStaticLayerParams(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  *(void *)this = &unk_26D7632A0;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::RandomNormalStaticLayerParams::~RandomNormalStaticLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::RandomNormalStaticLayerParams::default_instance(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  return &CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_;
}

void CoreML::Specification::RandomNormalStaticLayerParams::New(CoreML::Specification::RandomNormalStaticLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA11E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C7CBD27BLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomNormalStaticLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomNormalStaticLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomNormalStaticLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(void *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(this + 48) = 0;
  return this;
}

BOOL CoreML::Specification::RandomNormalStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalStaticLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      unint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_26;
          }
          unsigned int v10 = *a2;
          if (*a2 >= a2[1] || *v10 < 0)
          {
            Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacint k = *v10;
            *a2 = v10 + 1;
          }
          *((void *)this + 5) = Varint64Fallback;
          continue;
        case 2u:
          if (v8 != 21) {
            goto LABEL_26;
          }
          unsigned int v29 = 0;
          unsigned int v12 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v29);
            if (!result) {
              return result;
            }
            unsigned int v13 = v29;
          }
          else
          {
            unsigned int v13 = *v12;
            *a2 = (char *)(v12 + 1);
          }
          *((_DWORD *)this + 12) = v13;
          continue;
        case 3u:
          if (v8 != 29) {
            goto LABEL_26;
          }
          unsigned int v28 = 0;
          unsigned int v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v28);
            if (!result) {
              return result;
            }
            unsigned int v15 = v28;
          }
          else
          {
            unsigned int v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 13) = v15;
          continue;
        case 4u:
          if (v8 == 32)
          {
            if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0x22u, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 34) {
              goto LABEL_26;
            }
            unsigned int v16 = *a2;
            if (*a2 >= a2[1] || *v16 < 0)
            {
              VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              VarintSizeAsIntFallbacint k = *v16;
              *a2 = v16 + 1;
            }
            int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
            if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
            {
              do
              {
                unsigned int v21 = *a2;
                if (*a2 >= a2[1] || *v21 < 0)
                {
                  unint64_t v23 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                  if ((v24 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v22 = v23;
                }
                else
                {
                  unint64_t v22 = *v21;
                  *a2 = v21 + 1;
                }
                signed int v25 = *((_DWORD *)this + 4);
                if (v25 == *((_DWORD *)this + 5))
                {
                  _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
                  signed int v25 = *v5;
                }
                uint64_t v26 = *((void *)this + 3);
                *((_DWORD *)this + 4) = v25 + 1;
                *(void *)(v26 + 8 * v25 + 8) = v22;
              }
              while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
            }
            _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
          }
          break;
        default:
          goto LABEL_26;
      }
    }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::RandomNormalStaticLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 40);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 48);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  float v8 = *(float *)(v5 + 52);
  if (v8 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x22u);
      int v9 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 34;
      int v9 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v9;
    }
    unsigned int v10 = *(_DWORD *)(v5 + 32);
    if (v9 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v10);
    }
    else
    {
      uint64_t v11 = *((void *)a2 + 1);
      if (v10 < 0x80)
      {
        unsigned int v13 = *(_DWORD *)(v5 + 32);
        unsigned int v12 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v12 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v12++ = v10 | 0x80;
          unsigned int v13 = v10 >> 7;
          unsigned int v14 = v10 >> 14;
          v10 >>= 7;
        }
        while (v14);
      }
      *unsigned int v12 = v13;
      int v15 = v12 - v11 + 1;
      *((void *)a2 + 1) += v15;
      *((_DWORD *)a2 + 4) -= v15;
    }
    uint64_t v16 = *(unsigned int *)(v5 + 16);
    if ((int)v16 >= 1)
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v18);
        }
        else
        {
          uint64_t v19 = *((void *)a2 + 1);
          if (v18 < 0x80)
          {
            unint64_t v21 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            int v20 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v20 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v20++ = v18 | 0x80;
              unint64_t v21 = v18 >> 7;
              unint64_t v22 = v18 >> 14;
              v18 >>= 7;
            }
            while (v22);
          }
          unsigned char *v20 = v21;
          int v23 = v20 - v19 + 1;
          *((void *)a2 + 1) += v23;
          *((_DWORD *)a2 + 4) -= v23;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::RandomNormalStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  BOOL v8 = v7 == 0;
  uint64_t v9 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (!v8) {
    uint64_t v6 = v9 + 1;
  }
  float v10 = *((float *)this + 12);
  float v11 = *((float *)this + 13);
  *((_DWORD *)this + 8) = v2;
  uint64_t v12 = v6 + 5;
  if (v10 == 0.0) {
    uint64_t v12 = v6;
  }
  if (v11 != 0.0) {
    v12 += 5;
  }
  *((_DWORD *)this + 14) = v12;
  return v12;
}

uint64_t CoreML::Specification::RandomNormalStaticLayerParams::IsInitialized(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomNormalStaticLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomNormalStaticLayerParams");
}

CoreML::Specification::RandomNormalDynamicLayerParams *CoreML::Specification::RandomNormalDynamicLayerParams::RandomNormalDynamicLayerParams(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  *(void *)this = &unk_26D763338;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomNormalDynamicLayerParams *)&CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223FA1820(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomNormalDynamicLayerParams::~RandomNormalDynamicLayerParams(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  *(void *)this = &unk_26D763338;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D763338;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::RandomNormalDynamicLayerParams::New(CoreML::Specification::RandomNormalDynamicLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA1930(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomNormalDynamicLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomNormalDynamicLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomNormalDynamicLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

BOOL CoreML::Specification::RandomNormalDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            uint64_t v6 = 0;
LABEL_6:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      float v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::RandomNormalDynamicLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 24);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  float v8 = *(float *)(v5 + 28);
  if (v8 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  }
  return this;
}

unint64_t CoreML::Specification::RandomNormalDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomNormalDynamicLayerParams::IsInitialized(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomNormalDynamicLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomNormalDynamicLayerParams");
}

CoreML::Specification::RandomUniformLikeLayerParams *CoreML::Specification::RandomUniformLikeLayerParams::RandomUniformLikeLayerParams(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  *(void *)this = &unk_26D7633D0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomUniformLikeLayerParams *)&CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223FA1C64(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomUniformLikeLayerParams::~RandomUniformLikeLayerParams(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  *(void *)this = &unk_26D7633D0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7633D0;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::RandomUniformLikeLayerParams::default_instance(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  return &CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_;
}

void CoreML::Specification::RandomUniformLikeLayerParams::New(CoreML::Specification::RandomUniformLikeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA1D94(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomUniformLikeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomUniformLikeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomUniformLikeLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

BOOL CoreML::Specification::RandomUniformLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            uint64_t v6 = 0;
LABEL_6:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      float v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::RandomUniformLikeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 24);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  float v8 = *(float *)(v5 + 28);
  if (v8 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  }
  return this;
}

unint64_t CoreML::Specification::RandomUniformLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomUniformLikeLayerParams::IsInitialized(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomUniformLikeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomUniformLikeLayerParams");
}

CoreML::Specification::RandomUniformStaticLayerParams *CoreML::Specification::RandomUniformStaticLayerParams::RandomUniformStaticLayerParams(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D763468;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomUniformStaticLayerParams *)&CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_223FA20D4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomUniformStaticLayerParams::~RandomUniformStaticLayerParams(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  *(void *)this = &unk_26D763468;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::RandomUniformStaticLayerParams::~RandomUniformStaticLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::RandomUniformStaticLayerParams::default_instance(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  return &CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_;
}

void CoreML::Specification::RandomUniformStaticLayerParams::New(CoreML::Specification::RandomUniformStaticLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA2208(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C7CBD27BLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomUniformStaticLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomUniformStaticLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomUniformStaticLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(void *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(this + 48) = 0;
  return this;
}

BOOL CoreML::Specification::RandomUniformStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformStaticLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      unint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_26;
          }
          float v10 = *a2;
          if (*a2 >= a2[1] || *v10 < 0)
          {
            Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacint k = *v10;
            *a2 = v10 + 1;
          }
          *((void *)this + 5) = Varint64Fallback;
          continue;
        case 2u:
          if (v8 != 21) {
            goto LABEL_26;
          }
          unsigned int v29 = 0;
          uint64_t v12 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v29);
            if (!result) {
              return result;
            }
            unsigned int v13 = v29;
          }
          else
          {
            unsigned int v13 = *v12;
            *a2 = (char *)(v12 + 1);
          }
          *((_DWORD *)this + 12) = v13;
          continue;
        case 3u:
          if (v8 != 29) {
            goto LABEL_26;
          }
          unsigned int v28 = 0;
          unsigned int v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v28);
            if (!result) {
              return result;
            }
            unsigned int v15 = v28;
          }
          else
          {
            unsigned int v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 13) = v15;
          continue;
        case 4u:
          if (v8 == 32)
          {
            if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0x22u, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 34) {
              goto LABEL_26;
            }
            unsigned int v16 = *a2;
            if (*a2 >= a2[1] || *v16 < 0)
            {
              VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              VarintSizeAsIntFallbacint k = *v16;
              *a2 = v16 + 1;
            }
            int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
            if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
            {
              do
              {
                unsigned int v21 = *a2;
                if (*a2 >= a2[1] || *v21 < 0)
                {
                  unint64_t v23 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                  if ((v24 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v22 = v23;
                }
                else
                {
                  unint64_t v22 = *v21;
                  *a2 = v21 + 1;
                }
                signed int v25 = *((_DWORD *)this + 4);
                if (v25 == *((_DWORD *)this + 5))
                {
                  _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
                  signed int v25 = *v5;
                }
                uint64_t v26 = *((void *)this + 3);
                *((_DWORD *)this + 4) = v25 + 1;
                *(void *)(v26 + 8 * v25 + 8) = v22;
              }
              while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
            }
            _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
          }
          break;
        default:
          goto LABEL_26;
      }
    }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::RandomUniformStaticLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 40);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 48);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  float v8 = *(float *)(v5 + 52);
  if (v8 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x22u);
      int v9 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 34;
      int v9 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v9;
    }
    unsigned int v10 = *(_DWORD *)(v5 + 32);
    if (v9 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v10);
    }
    else
    {
      uint64_t v11 = *((void *)a2 + 1);
      if (v10 < 0x80)
      {
        unsigned int v13 = *(_DWORD *)(v5 + 32);
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v12++ = v10 | 0x80;
          unsigned int v13 = v10 >> 7;
          unsigned int v14 = v10 >> 14;
          v10 >>= 7;
        }
        while (v14);
      }
      *uint64_t v12 = v13;
      int v15 = v12 - v11 + 1;
      *((void *)a2 + 1) += v15;
      *((_DWORD *)a2 + 4) -= v15;
    }
    uint64_t v16 = *(unsigned int *)(v5 + 16);
    if ((int)v16 >= 1)
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        unint64_t v18 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v18);
        }
        else
        {
          uint64_t v19 = *((void *)a2 + 1);
          if (v18 < 0x80)
          {
            unint64_t v21 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            int v20 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v20 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v20++ = v18 | 0x80;
              unint64_t v21 = v18 >> 7;
              unint64_t v22 = v18 >> 14;
              v18 >>= 7;
            }
            while (v22);
          }
          unsigned char *v20 = v21;
          int v23 = v20 - v19 + 1;
          *((void *)a2 + 1) += v23;
          *((_DWORD *)a2 + 4) -= v23;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::RandomUniformStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  BOOL v8 = v7 == 0;
  uint64_t v9 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (!v8) {
    uint64_t v6 = v9 + 1;
  }
  float v10 = *((float *)this + 12);
  float v11 = *((float *)this + 13);
  *((_DWORD *)this + 8) = v2;
  uint64_t v12 = v6 + 5;
  if (v10 == 0.0) {
    uint64_t v12 = v6;
  }
  if (v11 != 0.0) {
    v12 += 5;
  }
  *((_DWORD *)this + 14) = v12;
  return v12;
}

uint64_t CoreML::Specification::RandomUniformStaticLayerParams::IsInitialized(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomUniformStaticLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomUniformStaticLayerParams");
}

CoreML::Specification::RandomUniformDynamicLayerParams *CoreML::Specification::RandomUniformDynamicLayerParams::RandomUniformDynamicLayerParams(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  *(void *)this = &unk_26D763500;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomUniformDynamicLayerParams *)&CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223FA2844(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomUniformDynamicLayerParams::~RandomUniformDynamicLayerParams(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  *(void *)this = &unk_26D763500;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D763500;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::RandomUniformDynamicLayerParams::default_instance(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  return &CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_;
}

void CoreML::Specification::RandomUniformDynamicLayerParams::New(CoreML::Specification::RandomUniformDynamicLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA2974(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomUniformDynamicLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomUniformDynamicLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomUniformDynamicLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

BOOL CoreML::Specification::RandomUniformDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            uint64_t v6 = 0;
LABEL_6:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      float v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::RandomUniformDynamicLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 24);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  float v8 = *(float *)(v5 + 28);
  if (v8 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  }
  return this;
}

unint64_t CoreML::Specification::RandomUniformDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomUniformDynamicLayerParams::IsInitialized(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomUniformDynamicLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomUniformDynamicLayerParams");
}

CoreML::Specification::RandomBernoulliLikeLayerParams *CoreML::Specification::RandomBernoulliLikeLayerParams::RandomBernoulliLikeLayerParams(CoreML::Specification::RandomBernoulliLikeLayerParams *this)
{
  *(void *)this = &unk_26D763598;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomBernoulliLikeLayerParams *)&CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_223FA2CA4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomBernoulliLikeLayerParams::~RandomBernoulliLikeLayerParams(CoreML::Specification::RandomBernoulliLikeLayerParams *this)
{
  *(void *)this = &unk_26D763598;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D763598;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::RandomBernoulliLikeLayerParams::default_instance(CoreML::Specification::RandomBernoulliLikeLayerParams *this)
{
  return &CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_;
}

void CoreML::Specification::RandomBernoulliLikeLayerParams::New(CoreML::Specification::RandomBernoulliLikeLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA2DD4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomBernoulliLikeLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomBernoulliLikeLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomBernoulliLikeLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

BOOL CoreML::Specification::RandomBernoulliLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v6 = 0;
LABEL_6:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v17 = 0;
        uint64_t v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      float v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::RandomBernoulliLikeLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 24);
  if (v7 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  return this;
}

unint64_t CoreML::Specification::RandomBernoulliLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomBernoulliLikeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomBernoulliLikeLayerParams::IsInitialized(CoreML::Specification::RandomBernoulliLikeLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomBernoulliLikeLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomBernoulliLikeLayerParams");
}

CoreML::Specification::RandomBernoulliStaticLayerParams *CoreML::Specification::RandomBernoulliStaticLayerParams::RandomBernoulliStaticLayerParams(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D763630;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomBernoulliStaticLayerParams *)&CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_223FA309C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomBernoulliStaticLayerParams::~RandomBernoulliStaticLayerParams(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  *(void *)this = &unk_26D763630;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::RandomBernoulliStaticLayerParams::~RandomBernoulliStaticLayerParams(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::RandomBernoulliStaticLayerParams::default_instance(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  return &CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_;
}

void CoreML::Specification::RandomBernoulliStaticLayerParams::New(CoreML::Specification::RandomBernoulliStaticLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA31D0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C403321297FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomBernoulliStaticLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomBernoulliStaticLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomBernoulliStaticLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(void *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(_DWORD *)(this + 48) = 0;
  return this;
}

BOOL CoreML::Specification::RandomBernoulliStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliStaticLayerParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v6 = *a2;
          if (*a2 >= a2[1])
          {
            uint64_t v7 = 0;
LABEL_7:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
            unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0) {
              goto LABEL_27;
            }
            goto LABEL_8;
          }
          uint64_t v7 = *v6;
          if (*v6 < 1) {
            goto LABEL_7;
          }
          *a2 = v6 + 1;
          unint64_t v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v10 = v8 >> 3;
          if (v8 >> 3 != 3) {
            break;
          }
          if (v8 == 24)
          {
            if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0x1Au, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 26) {
              goto LABEL_27;
            }
            BOOL v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              VarintSizeAsIntFallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              VarintSizeAsIntFallbacint k = *v14;
              *a2 = v14 + 1;
            }
            int v20 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
            if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
            {
              do
              {
                unsigned int v21 = *a2;
                if (*a2 >= a2[1] || *v21 < 0)
                {
                  Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
                  if ((v24 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v22 = Varint64Fallback;
                }
                else
                {
                  unint64_t v22 = *v21;
                  *a2 = v21 + 1;
                }
                signed int v25 = *((_DWORD *)this + 4);
                if (v25 == *((_DWORD *)this + 5))
                {
                  _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
                  signed int v25 = *v5;
                }
                uint64_t v26 = *((void *)this + 3);
                *((_DWORD *)this + 4) = v25 + 1;
                *(void *)(v26 + 8 * v25 + 8) = v22;
              }
              while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
            }
            _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
          }
        }
        if (v10 != 2) {
          break;
        }
        if (v8 != 21) {
          goto LABEL_27;
        }
        unsigned int v28 = 0;
        unsigned int v16 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v17 = v28;
        }
        else
        {
          unsigned int v17 = *v16;
          *a2 = (char *)(v16 + 1);
        }
        *((_DWORD *)this + 12) = v17;
      }
      if (v10 != 1 || v8 != 8) {
        break;
      }
      uint64_t v12 = *a2;
      if (*a2 >= a2[1] || *v12 < 0)
      {
        unint64_t v13 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v19 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v13 = *v12;
        *a2 = v12 + 1;
      }
      *((void *)this + 5) = v13;
    }
LABEL_27:
    if (v8) {
      BOOL v18 = (v8 & 7) == 4;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::RandomBernoulliStaticLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 40);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 48);
  if (v7 != 0.0) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0x1Au);
      int v8 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 26;
      int v8 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v8;
    }
    unsigned int v9 = *(_DWORD *)(v5 + 32);
    if (v8 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v9);
    }
    else
    {
      uint64_t v10 = *((void *)a2 + 1);
      if (v9 < 0x80)
      {
        unsigned int v12 = *(_DWORD *)(v5 + 32);
        float v11 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        float v11 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v11++ = v9 | 0x80;
          unsigned int v12 = v9 >> 7;
          unsigned int v13 = v9 >> 14;
          v9 >>= 7;
        }
        while (v13);
      }
      *float v11 = v12;
      int v14 = v11 - v10 + 1;
      *((void *)a2 + 1) += v14;
      *((_DWORD *)a2 + 4) -= v14;
    }
    uint64_t v15 = *(unsigned int *)(v5 + 16);
    if ((int)v15 >= 1)
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        unint64_t v17 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v17);
        }
        else
        {
          uint64_t v18 = *((void *)a2 + 1);
          if (v17 < 0x80)
          {
            unint64_t v20 = *(void *)(*(void *)(v5 + 24) + 8 * i + 8);
            char v19 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            char v19 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v19++ = v17 | 0x80;
              unint64_t v20 = v17 >> 7;
              unint64_t v21 = v17 >> 14;
              v17 >>= 7;
            }
            while (v21);
          }
          *char v19 = v20;
          int v22 = v19 - v18 + 1;
          *((void *)a2 + 1) += v22;
          *((_DWORD *)a2 + 4) -= v22;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::RandomBernoulliStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  uint64_t v8 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (v7) {
    uint64_t v6 = v8 + 1;
  }
  if (*((float *)this + 12) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 13) = v6;
  return v6;
}

uint64_t CoreML::Specification::RandomBernoulliStaticLayerParams::IsInitialized(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomBernoulliStaticLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomBernoulliStaticLayerParams");
}

CoreML::Specification::RandomBernoulliDynamicLayerParams *CoreML::Specification::RandomBernoulliDynamicLayerParams::RandomBernoulliDynamicLayerParams(CoreML::Specification::RandomBernoulliDynamicLayerParams *this)
{
  *(void *)this = &unk_26D7636C8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomBernoulliDynamicLayerParams *)&CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_223FA3774(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::RandomBernoulliDynamicLayerParams::~RandomBernoulliDynamicLayerParams(CoreML::Specification::RandomBernoulliDynamicLayerParams *this)
{
  *(void *)this = &unk_26D7636C8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7636C8;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::RandomBernoulliDynamicLayerParams::default_instance(CoreML::Specification::RandomBernoulliDynamicLayerParams *this)
{
  return &CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_;
}

void CoreML::Specification::RandomBernoulliDynamicLayerParams::New(CoreML::Specification::RandomBernoulliDynamicLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA38A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::RandomBernoulliDynamicLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::RandomBernoulliDynamicLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::RandomBernoulliDynamicLayerParams::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

BOOL CoreML::Specification::RandomBernoulliDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v6 = 0;
LABEL_6:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v17 = 0;
        unsigned int v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::RandomBernoulliDynamicLayerParams::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, _tc_google::protobuf::io::CodedOutputStream *a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  float v7 = *(float *)(v5 + 24);
  if (v7 != 0.0)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloat((_tc_google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  return this;
}

unint64_t CoreML::Specification::RandomBernoulliDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomBernoulliDynamicLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomBernoulliDynamicLayerParams::IsInitialized(CoreML::Specification::RandomBernoulliDynamicLayerParams *this)
{
  return 1;
}

void *CoreML::Specification::RandomBernoulliDynamicLayerParams::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RandomBernoulliDynamicLayerParams");
}

CoreML::Specification::CategoricalDistributionLayerParams *CoreML::Specification::CategoricalDistributionLayerParams::CategoricalDistributionLayerParams(CoreML::Specification::CategoricalDistributionLayerParams *this)
{
  *(void *)this = &unk_26D763760;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CategoricalDistributionLayerParams *)&CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_223FA3B64(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::CategoricalDistributionLayerParams::~CategoricalDistributionLayerParams(CoreML::Specification::CategoricalDistributionLayerParams *this)
{
  *(void *)this = &unk_26D763760;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D763760;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::CategoricalDistributionLayerParams::New(CoreML::Specification::CategoricalDistributionLayerParams *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223FA3C74(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C4067988C7FLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CategoricalDistributionLayerParams>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalDistributionLayerParams>);
  }
  return result;
}

uint64_t CoreML::Specification::CategoricalDistributionLayerParams::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 4CoreML::Specification::Identity::New(this, 0) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

BOOL CoreML::Specification::CategoricalDistributionLayerParams::MergePartialFromCodedStream(CoreML::Specification::CategoricalDistributionLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      uint64_t v6 = 0;
LABEL_6:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_28;
          }
          unsigned int v9 = *a2;
          if (*a2 >= a2[1] || *v9 < 0)
          {
            Varint64Fallbacint k = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v20 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacint k = *v9;
            *a2 = v9 + 1;
          }
          *((void *)this + 2) = Varint64Fallback;
          continue;
        case 2u:
          if (v7 != 16) {
            goto LABEL_28;
          }
          float v11 = *a2;
          if (*a2 >= a2[1] || *v11 < 0)
          {
            unint64_t v12 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v12 = *v11;
            *a2 = v11 + 1;
          }
          *((void *)this + 3) = v12;
          continue;
        case 3u:
          if (v7 != 24) {
            goto LABEL_28;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if ((v22 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v14 = *v13;
            *a2 = v13 + 1;
          }
          *((unsigned char *)this + 32) = v14 != 0;
          break;
        case 4u:
          if (v7 != 37) {
            goto LABEL_28;
          }
          unsigned int v25 = 0;
          char v15 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
            if (!result) {
              return result;
            }
            unsigned int v16 = v25;
          }
          else
          {
            unsigned int v16 = *v15;
            *a2 = (char *)(v15 + 1);
          }
          *((_DWORD *)this + 9) = v16;
          continue;
        case 5u:
          if (v7 != 45) {
            goto LABEL_28;
          }
          unsigned int v24 = 0;
          unsigned int v17 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v24);
            if (!result) {
              return result;
            }
            unsigned int v18 = v24;
          }
          else
          {
            unsigned int v18 = *v17;
            *a2 = (char *)(v17 + 1);
          }
          *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v18;
          continue;
        default:
          goto LABEL_28;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_28:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}