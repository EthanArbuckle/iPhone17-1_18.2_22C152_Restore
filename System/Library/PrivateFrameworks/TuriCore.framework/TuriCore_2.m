void sub_223EADFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;
  uint64_t v15;

  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v15);
  boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l>::~expr(v14);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  v8 = (void *)(a1 + 24);
  unint64_t v9 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::__rehash<true>(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    void *v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  i = (unsigned __int8 *)v26[0];
  v26[0] = 0;
  ++*v8;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,turi::flexible_type>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,turi::flexible_type>,void *>>>>::reset[abi:ne180100]((uint64_t)v26, 0);
  return i;
}

void sub_223EAE2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,turi::flexible_type>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,turi::flexible_type>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

std::string *std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  v8 = (char *)operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)v8 = 0;
  *((void *)v8 + 1) = a2;
  result = std::pair<std::string const,turi::flexible_type>::pair[abi:ne180100]<std::string const&>((std::string *)(v8 + 16), *a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_223EAE33C(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,turi::flexible_type>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,turi::flexible_type>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::string const,turi::flexible_type>::pair[abi:ne180100]<std::string const&>(std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
  this[1].__r_.__value_.__r.__words[0] = 0;
  LODWORD(this[1].__r_.__value_.__r.__words[1]) = 0;
  this[1].__r_.__value_.__s.__data_[12] = 0;
  return this;
}

uint64_t boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::action(uint64_t a1, uint64_t a2, __int16 a3)
{
  v6 = parser_impl::parser_config::parser_config((std::string *)a1, (long long *)a2);
  __int16 v7 = *(_WORD *)(a2 + 184);
  v6[7].__r_.__value_.__s.__data_[18] = *(unsigned char *)(a2 + 186);
  LOWORD(v6[7].__r_.__value_.__r.__words[2]) = v7;
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)&v6[8], a2 + 192);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_WORD *)(a1 + 240) = a3;
  return a1;
}

void sub_223EAE410(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 136);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 96);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 56);
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((void **)v1);
  _Unwind_Resume(a1);
}

uint64_t *boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::swap(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = (uint64_t)result;
    v4[0] = 0;
    boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::move_assign((uint64_t)v4, result);
    boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::move_assign(v3, a2);
    boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::move_assign((uint64_t)a2, v4);
    return boost::function0<void>::~function0(v4);
  }
  return result;
}

void sub_223EAE4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_6actionIN11parser_impl13string_parserENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS14_6tagns_3tag6assignENS14_7argsns_5list2INS13_INS6_9attributeILi0EEEEENS13_INS6_8argumentILi0EEEEEEELl2EEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS1Q_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  parser_impl::parser_config::parser_config(&v4, (long long *)a2);
  __int16 v5 = *(_WORD *)(a2 + 184);
  char v6 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v7, a2 + 192);
  v7[40] = *(unsigned char *)(a2 + 232);
  __int16 v8 = *(_WORD *)(a2 + 240);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(a1, (uint64_t)&v4);
}

void sub_223EAE594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(void *a1, uint64_t a2)
{
  *a1 = 0;
  parser_impl::parser_config::parser_config(&v4, (long long *)a2);
  __int16 v5 = *(_WORD *)(a2 + 184);
  char v6 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v7, a2 + 192);
  v7[40] = *(unsigned char *)(a2 + 232);
  __int16 v8 = *(_WORD *)(a2 + 240);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v4);
}

void sub_223EAE6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  parser_impl::parser_config::parser_config(&v3, (long long *)a2);
  __int16 v4 = *(_WORD *)(a2 + 184);
  char v5 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v6, a2 + 192);
  v6[40] = *(unsigned char *)(a2 + 232);
  __int16 v7 = *(_WORD *)(a2 + 240);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>)::stored_vtable, (uint64_t)&v3);
}

void sub_223EAE7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(std::string **a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  parser_impl::parser_config::parser_config(&v4, (long long *)a2);
  __int16 v5 = *(_WORD *)(a2 + 184);
  char v6 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v7, a2 + 192);
  v7[40] = *(unsigned char *)(a2 + 232);
  __int16 v8 = *(_WORD *)(a2 + 240);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(a1, (uint64_t)&v4);
}

{
  std::string v3;
  __int16 v4;
  char v5;
  unsigned char v6[48];
  __int16 v7;

  parser_impl::parser_config::parser_config(&v3, (long long *)a2);
  std::string v4 = *(_WORD *)(a2 + 184);
  __int16 v5 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v6, a2 + 192);
  v6[40] = *(unsigned char *)(a2 + 232);
  __int16 v7 = *(_WORD *)(a2 + 240);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>();
}

void sub_223EAE94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  std::string v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 192);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 136);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 96);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 56);
        if (*(char *)(v5 + 47) < 0) {
          operator delete(*(void **)(v5 + 24));
        }
        if (*(char *)(v5 + 23) < 0) {
          operator delete(*(void **)v5);
        }
        result = MEMORY[0x22A614FA0](v5, 0x10B2C4034433CABLL);
      }
      goto LABEL_12;
    case 3:
      result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C1338 & 0x7FFFFFFFFFFFFFFFLL)
        || (result = strcmp((const char *)result, (const char *)(0x80000002246C1338 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_12:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EAEB1C(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 136);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 96);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 56);
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  MEMORY[0x22A614FA0](v1, 0x10B2C4034433CABLL);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(std::string *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  v29 = 0;
  LODWORD(v30) = 0;
  BYTE4(v30) = 0;
  memset(v28, 0, 13);
  boost::initialized<turi::flexible_type>::wrapper::~wrapper((uint64_t)&v29);
  unint64_t v10 = *a2;
  if (parser_impl::string_parser::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>(a1, a2, a3, a4, a5, (unsigned __int8 *)v28))
  {
    char v26 = 1;
    v25 = v28;
    v29 = a1 + 10;
    v30 = &v25;
    uint64_t v31 = a4;
    v32 = &v26;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<turi::flexible_type &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)v27, (uint64_t)&a1[10], (uint64_t)&v29);
    if (v26)
    {
      uint64_t v11 = 1;
    }
    else
    {
      uint64_t v11 = 0;
      *a2 = v10;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  switch(BYTE4(v28[1]))
  {
    case 2:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint8x8_t v12 = v28[0];
        if (v28[0])
        {
          if (*((char *)v28[0] + 31) < 0) {
            operator delete(*((void **)v28[0] + 1));
          }
          unint64_t v13 = v12;
          uint64_t v14 = 0x1012C404EF22A49;
          goto LABEL_37;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v15 = v28[0];
        if (v28[0])
        {
          unint64_t v16 = (void *)v28[0][1];
          if (v16)
          {
            v28[0][2] = (atomic_ullong)v16;
            operator delete(v16);
          }
          unint64_t v13 = v15;
          uint64_t v14 = 0x1080C409938AC02;
          goto LABEL_37;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        float v17 = v28[0];
        if (v28[0])
        {
          v29 = (std::string *)(v28[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
          goto LABEL_23;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        float v17 = v28[0];
        if (v28[0])
        {
          v29 = (std::string *)(v28[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
LABEL_23:
          unint64_t v13 = v17;
          uint64_t v14 = 0x1020C405E66F15BLL;
          goto LABEL_37;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        float v18 = v28[0];
        if (v28[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v28[0] + 2);
          unint64_t v13 = v18;
          unsigned int v19 = -235920773;
          goto LABEL_36;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        unint64_t v20 = v28[0];
        if (v28[0])
        {
          unint64_t v21 = (void *)v28[0][6];
          if (v21)
          {
            v28[0][7] = (atomic_ullong)v21;
            operator delete(v21);
          }
          size_t v22 = (void *)v20[3];
          if (v22)
          {
            v20[4] = (atomic_ullong)v22;
            operator delete(v22);
          }
          v23 = (std::__shared_weak_count *)v20[2];
          if (v23) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v23);
          }
          unint64_t v13 = v20;
          unsigned int v19 = 2071181815;
LABEL_36:
          uint64_t v14 = v19 | 0x1030C4000000000;
LABEL_37:
          MEMORY[0x22A614FA0](v13, v14);
        }
      }
      break;
    default:
      return v11;
  }
  return v11;
}

void sub_223EAEE64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  switch(a14)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v15 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      if (*(char *)(a12 + 31) < 0) {
        operator delete(*(void **)(a12 + 8));
      }
      unint64_t v16 = (void *)v15;
      uint64_t v17 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v20 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      unint64_t v21 = *(void **)(a12 + 8);
      if (v21)
      {
        *(void *)(a12 + 16) = v21;
        operator delete(v21);
      }
      unint64_t v16 = (void *)v20;
      uint64_t v17 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v18 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      a11 = a12 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
      goto LABEL_21;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v18 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      a11 = a12 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
LABEL_21:
      unint64_t v16 = (void *)v18;
      uint64_t v17 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v22 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a12 + 16));
      unint64_t v16 = (void *)v22;
      unsigned int v19 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a12) {
        goto LABEL_27;
      }
      unint64_t v16 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a12);
      unsigned int v19 = 2071181815;
LABEL_25:
      uint64_t v17 = v19 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v16, v17);
LABEL_27:
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_27;
  }
}

BOOL parser_impl::string_parser::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>(std::string *this, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6)
{
  uint64_t v86 = *MEMORY[0x263EF8340];
  __int16 v8 = *a2;
  unint64_t v9 = *a3;
  if (*a2 == *a3)
  {
LABEL_7:
    unint64_t v9 = v8;
    goto LABEL_8;
  }
  if ((boost::spirit::char_encoding::iso8859_1_char_types[*v8] & 0x40) != 0)
  {
    unint64_t v10 = v8 + 1;
    do
    {
      __int16 v8 = v10;
      *a2 = v10;
      unint64_t v9 = *a3;
      if (v10 == *a3) {
        goto LABEL_7;
      }
      ++v10;
    }
    while ((boost::spirit::char_encoding::iso8859_1_char_types[*v8] & 0x40) != 0);
  }
LABEL_8:
  memset(__p, 0, sizeof(__p));
  if (SHIBYTE(this[1].__r_.__value_.__r.__words[2]) < 0)
  {
    data = (std::string *)this[1].__r_.__value_.__l.__data_;
    std::string::size_type size = this[1].__r_.__value_.__l.__size_;
  }
  else
  {
    data = this + 1;
    std::string::size_type size = HIBYTE(this[1].__r_.__value_.__r.__words[2]);
  }
  int64_t v72 = size;
  if (v8 == v9)
  {
    unsigned __int8 v70 = 0;
    unint64_t v13 = 0;
    goto LABEL_82;
  }
  int v12 = 0;
  unint64_t v13 = 0;
  unsigned __int8 v70 = 0;
  int v14 = 0;
  while (1)
  {
    int v15 = *v8;
    if (v14 == 2) {
      break;
    }
    if (std::string::find(this, v15, 0) != -1) {
      goto LABEL_79;
    }
    if (this[7].__r_.__value_.__s.__data_[16] && this[7].__r_.__value_.__s.__data_[17] == v15)
    {
      if (this[7].__r_.__value_.__s.__data_[18]) {
        goto LABEL_79;
      }
      if (v72 <= *a3 - v8)
      {
        if (!v72)
        {
LABEL_79:
          unint64_t v9 = v8;
          goto LABEL_82;
        }
        uint64_t v28 = 0;
        while (v8[v28] == data->__r_.__value_.__s.__data_[v28])
        {
          if (v72 == ++v28) {
            goto LABEL_79;
          }
        }
      }
    }
    unint64_t v9 = v8 + 1;
    if (v14 == 1)
    {
      if (*(void *)&__p[24] > 0x7FuLL)
      {
        if (*(void *)&__p[24] == 128)
        {
          v29 = operator new(0x88uLL);
          long long v30 = v82;
          v29[4] = v81;
          v29[5] = v30;
          long long v31 = v84;
          v29[6] = v83;
          v29[7] = v31;
          long long v32 = v78;
          _OWORD *v29 = v77;
          v29[1] = v32;
          long long v33 = v80;
          v29[2] = v79;
          v29[3] = v33;
          *((unsigned char *)v29 + 128) = 0;
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
          *(void *)__p = v29;
          *(_OWORD *)&__p[8] = xmmword_2246C1220;
        }
        std::string::push_back((std::string *)__p, v15);
      }
      else
      {
        *((unsigned char *)&v77 + *(void *)&__p[24]) = v15;
      }
      ++*(void *)&__p[24];
      int v27 = this[2].__r_.__value_.__s.__data_[0];
      if (this[2].__r_.__value_.__s.__data_[0])
      {
        int v21 = this[2].__r_.__value_.__s.__data_[1];
        int v14 = 1;
LABEL_62:
        __int16 v8 = v13;
LABEL_63:
        int v27 = v15 == v21;
        goto LABEL_66;
      }
      int v14 = 1;
LABEL_65:
      __int16 v8 = v13;
      goto LABEL_66;
    }
    int v14 = 2;
    if (v15 != 34 && v15 != 39)
    {
      if (*(void *)&__p[24] > 0x7FuLL)
      {
        if (*(void *)&__p[24] == 128)
        {
          v34 = operator new(0x88uLL);
          long long v35 = v82;
          v34[4] = v81;
          v34[5] = v35;
          long long v36 = v84;
          v34[6] = v83;
          v34[7] = v36;
          long long v37 = v78;
          _OWORD *v34 = v77;
          v34[1] = v37;
          long long v38 = v80;
          v34[2] = v79;
          v34[3] = v38;
          *((unsigned char *)v34 + 128) = 0;
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
          *(void *)__p = v34;
          *(_OWORD *)&__p[8] = xmmword_2246C1220;
        }
        std::string::push_back((std::string *)__p, v15);
      }
      else
      {
        *((unsigned char *)&v77 + *(void *)&__p[24]) = v15;
      }
      ++*(void *)&__p[24];
      int v27 = this[2].__r_.__value_.__s.__data_[0];
      if (!this[2].__r_.__value_.__s.__data_[0])
      {
        int v14 = 1;
        goto LABEL_66;
      }
      int v21 = this[2].__r_.__value_.__s.__data_[1];
      int v14 = 1;
      goto LABEL_63;
    }
    unsigned __int8 v70 = v15;
    int v27 = v12;
LABEL_66:
    unint64_t v13 = v8;
    int v12 = (v12 ^ 1) & v27;
    __int16 v8 = v9;
    if (v9 == *a3) {
      goto LABEL_82;
    }
  }
  if ((v15 != v70) | v12 & 1)
  {
    if (*(void *)&__p[24] > 0x7FuLL)
    {
      if (*(void *)&__p[24] == 128)
      {
        unint64_t v16 = operator new(0x88uLL);
        long long v17 = v82;
        v16[4] = v81;
        v16[5] = v17;
        long long v18 = v84;
        v16[6] = v83;
        v16[7] = v18;
        long long v19 = v78;
        *unint64_t v16 = v77;
        v16[1] = v19;
        long long v20 = v80;
        v16[2] = v79;
        v16[3] = v20;
        *((unsigned char *)v16 + 128) = 0;
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        *(void *)__p = v16;
        *(_OWORD *)&__p[8] = xmmword_2246C1220;
      }
      std::string::push_back((std::string *)__p, v15);
    }
    else
    {
      *((unsigned char *)&v77 + *(void *)&__p[24]) = v15;
    }
    ++*(void *)&__p[24];
    int v27 = this[2].__r_.__value_.__s.__data_[0];
    if (this[2].__r_.__value_.__s.__data_[0])
    {
      int v21 = this[2].__r_.__value_.__s.__data_[1];
      int v14 = 2;
      unint64_t v9 = v8 + 1;
      goto LABEL_62;
    }
    int v14 = 2;
    unint64_t v9 = v8 + 1;
    goto LABEL_65;
  }
  if (v70 != 34) {
    goto LABEL_81;
  }
  if (this[2].__r_.__value_.__s.__data_[2])
  {
    unint64_t v9 = v8 + 2;
    if (v8 + 2 < *a3 && v8[1] == 34)
    {
      if (*(void *)&__p[24] > 0x7FuLL)
      {
        if (*(void *)&__p[24] == 128)
        {
          uint64_t v22 = operator new(0x88uLL);
          long long v23 = v82;
          v22[4] = v81;
          v22[5] = v23;
          long long v24 = v84;
          v22[6] = v83;
          v22[7] = v24;
          long long v25 = v78;
          *uint64_t v22 = v77;
          v22[1] = v25;
          long long v26 = v80;
          v22[2] = v79;
          v22[3] = v26;
          *((unsigned char *)v22 + 128) = 0;
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
          *(void *)__p = v22;
          *(_OWORD *)&__p[8] = xmmword_2246C1220;
        }
        std::string::push_back((std::string *)__p, 34);
      }
      else
      {
        *((unsigned char *)&v77 + *(void *)&__p[24]) = 34;
      }
      ++*(void *)&__p[24];
      int v27 = this[2].__r_.__value_.__s.__data_[0];
      if (this[2].__r_.__value_.__s.__data_[0])
      {
        int v15 = this[2].__r_.__value_.__s.__data_[1];
        int v14 = 2;
        int v21 = 34;
        unsigned __int8 v70 = 34;
        goto LABEL_62;
      }
      unsigned __int8 v70 = 34;
      int v14 = 2;
      goto LABEL_65;
    }
  }
  unsigned __int8 v70 = 34;
LABEL_81:
  unint64_t v9 = v8 + 1;
LABEL_82:
  v39 = *a2;
  if (v9 != *a2)
  {
    *a2 = v9;
    if (this[9].__r_.__value_.__s.__data_[16] && v13)
    {
      std::string::basic_string[abi:ne180100](&__dst, v13, v9 - v13);
      MEMORY[0x22A614D20](&v73);
      LODWORD(v75.__locale_) = 0x4000;
      std::locale::locale(&v76, &v73);
      boost::algorithm::trim_right_if<std::string,boost::algorithm::detail::is_classifiedF>(&__dst, &v75);
      std::locale::~locale(&v76);
      std::locale::~locale(&v73);
      v40 = std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>(this[8].__r_.__value_.__r.__words, (unsigned __int8 *)&__dst);
      v41 = v40;
      if (v40)
      {
        v42 = v40 + 40;
        if (v40 + 40 != a6)
        {
          switch(a6[12])
          {
            case 2u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v43 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_128;
                }
                if (*((char *)v43 + 31) < 0) {
                  operator delete((void *)v43[1]);
                }
                v44 = v43;
                uint64_t v45 = 0x1012C404EF22A49;
                goto LABEL_127;
              }
              break;
            case 3u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v54 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_128;
                }
                v55 = (void *)v54[1];
                if (v55)
                {
                  v54[2] = (atomic_ullong)v55;
                  operator delete(v55);
                }
                v44 = v54;
                uint64_t v45 = 0x1080C409938AC02;
                goto LABEL_127;
              }
              break;
            case 4u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v56 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_128;
                }
                v75.__locale_ = (std::locale::__imp *)(v56 + 1);
                std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v75);
                goto LABEL_119;
              }
              break;
            case 5u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v56 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_128;
                }
                v75.__locale_ = (std::locale::__imp *)(v56 + 1);
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v75);
LABEL_119:
                v44 = v56;
                uint64_t v45 = 0x1020C405E66F15BLL;
                goto LABEL_127;
              }
              break;
            case 8u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v57 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_128;
                }
                boost::detail::shared_count::~shared_count((atomic_uint **)v57 + 2);
                v44 = v57;
                unsigned int v58 = -235920773;
                goto LABEL_126;
              }
              break;
            case 9u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                if (*(void *)a6)
                {
                  v44 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*(void **)a6);
                  unsigned int v58 = 2071181815;
LABEL_126:
                  uint64_t v45 = v58 | 0x1030C4000000000;
LABEL_127:
                  MEMORY[0x22A614FA0](v44, v45);
                }
LABEL_128:
                *(void *)a6 = 0;
              }
              break;
            default:
              break;
          }
          v59 = (void *)*v42;
          *(void *)(a6 + 5) = *(void *)(v41 + 45);
          *(void *)a6 = v59;
          unsigned int v60 = v41[52];
          goto LABEL_152;
        }
        goto LABEL_155;
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
    long long v47 = *(_OWORD *)string;
    __dst.__r_.__value_.__r.__words[2] = *(void *)(string + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v47;
    *(void *)(string + 8) = 0;
    *(void *)(string + 16) = 0;
    *(void *)uint64_t string = 0;
    if (v70)
    {
      turi::unescape_string(&__dst, this[2].__r_.__value_.__s.__data_[0], this[2].__r_.__value_.__s.__data_[1], v70, this[2].__r_.__value_.__s.__data_[2] != 0);
    }
    else
    {
      MEMORY[0x22A614D20](&v73);
      LODWORD(v75.__locale_) = 0x4000;
      std::locale::locale(&v76, &v73);
      boost::algorithm::trim_right_if<std::string,boost::algorithm::detail::is_classifiedF>(&__dst, &v75);
      std::locale::~locale(&v76);
      std::locale::~locale(&v73);
    }
    if (this[9].__r_.__value_.__s.__data_[16]
      || (v48 = std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>(this[8].__r_.__value_.__r.__words, (unsigned __int8 *)&__dst), (v49 = v48) == 0))
    {
      turi::flexible_type::operator=<std::string>((uint64_t)a6);
    }
    v50 = v48 + 40;
    if (v48 + 40 != a6)
    {
      switch(a6[12])
      {
        case 2u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v51 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_150;
            }
            if (*((char *)v51 + 31) < 0) {
              operator delete((void *)v51[1]);
            }
            v52 = v51;
            uint64_t v53 = 0x1012C404EF22A49;
            goto LABEL_149;
          }
          break;
        case 3u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v61 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_150;
            }
            v62 = (void *)v61[1];
            if (v62)
            {
              v61[2] = (atomic_ullong)v62;
              operator delete(v62);
            }
            v52 = v61;
            uint64_t v53 = 0x1080C409938AC02;
            goto LABEL_149;
          }
          break;
        case 4u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v63 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_150;
            }
            v75.__locale_ = (std::locale::__imp *)(v63 + 1);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v75);
            goto LABEL_141;
          }
          break;
        case 5u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v63 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_150;
            }
            v75.__locale_ = (std::locale::__imp *)(v63 + 1);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v75);
LABEL_141:
            v52 = v63;
            uint64_t v53 = 0x1020C405E66F15BLL;
            goto LABEL_149;
          }
          break;
        case 8u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v64 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_150;
            }
            boost::detail::shared_count::~shared_count((atomic_uint **)v64 + 2);
            v52 = v64;
            unsigned int v65 = -235920773;
            goto LABEL_148;
          }
          break;
        case 9u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            if (*(void *)a6)
            {
              v52 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*(void **)a6);
              unsigned int v65 = 2071181815;
LABEL_148:
              uint64_t v53 = v65 | 0x1030C4000000000;
LABEL_149:
              MEMORY[0x22A614FA0](v52, v53);
            }
LABEL_150:
            *(void *)a6 = 0;
          }
          break;
        default:
          break;
      }
      v66 = (void *)*v50;
      *(void *)(a6 + 5) = *(void *)(v49 + 45);
      *(void *)a6 = v66;
      unsigned int v60 = v49[52];
LABEL_152:
      a6[12] = v60;
      if (v60 <= 9 && ((1 << v60) & 0x33C) != 0) {
        atomic_fetch_add(*(atomic_ullong *volatile *)a6, 1uLL);
      }
    }
LABEL_155:
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  return v9 != v39;
}

void sub_223EAFAF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::locale a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a48 < 0) {
    operator delete(a43);
  }
  _Unwind_Resume(exception_object);
}

uint64_t boost::initialized<turi::flexible_type>::wrapper::~wrapper(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v2 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          if (*((char *)v2 + 31) < 0) {
            operator delete((void *)v2[1]);
          }
          atomic_ullong *volatile v3 = v2;
          uint64_t v4 = 0x1012C404EF22A49;
          goto LABEL_32;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v5 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          char v6 = (void *)v5[1];
          if (v6)
          {
            v5[2] = (atomic_ullong)v6;
            operator delete(v6);
          }
          atomic_ullong *volatile v3 = v5;
          uint64_t v4 = 0x1080C409938AC02;
          goto LABEL_32;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v7 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          int v15 = (void **)(v7 + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v15);
          goto LABEL_18;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v7 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          int v15 = (void **)(v7 + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v15);
LABEL_18:
          atomic_ullong *volatile v3 = v7;
          uint64_t v4 = 0x1020C405E66F15BLL;
          goto LABEL_32;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v8 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v8 + 2);
          atomic_ullong *volatile v3 = v8;
          unsigned int v9 = -235920773;
          goto LABEL_31;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          uint64_t v11 = (void *)v10[6];
          if (v11)
          {
            v10[7] = (atomic_ullong)v11;
            operator delete(v11);
          }
          int v12 = (void *)v10[3];
          if (v12)
          {
            v10[4] = (atomic_ullong)v12;
            operator delete(v12);
          }
          unint64_t v13 = (std::__shared_weak_count *)v10[2];
          if (v13) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v13);
          }
          atomic_ullong *volatile v3 = v10;
          unsigned int v9 = 2071181815;
LABEL_31:
          uint64_t v4 = v9 | 0x1030C4000000000;
LABEL_32:
          MEMORY[0x22A614FA0](v3, v4);
        }
      }
      break;
    default:
      break;
  }
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 12) = 0;
  return a1;
}

uint64_t parser_impl::anonymous namespace'::stack_buffer::get_string(parser_impl::_anonymous_namespace_::stack_buffer *this)
{
  size_t v2 = *((void *)this + 19);
  if (v2 <= 0x80)
  {
    std::string::basic_string[abi:ne180100](&__dst, this, v2);
    atomic_ullong *volatile v3 = (void **)((char *)this + 128);
    if (*((char *)this + 151) < 0) {
      operator delete(*v3);
    }
    *(_OWORD *)atomic_ullong *volatile v3 = __dst;
    *((void *)this + 18) = v6;
  }
  return (uint64_t)this + 128;
}

void boost::algorithm::trim_right_if<std::string,boost::algorithm::detail::is_classifiedF>(std::string *a1, const std::locale *a2)
{
  int v3 = SHIBYTE(a1->__r_.__value_.__r.__words[2]);
  if (v3 >= 0) {
    uint64_t v4 = (char *)a1;
  }
  else {
    uint64_t v4 = (char *)a1->__r_.__value_.__r.__words[0];
  }
  if (v3 >= 0) {
    std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
  }
  uint64_t v6 = &v4[size];
  int locale = (int)a2->__locale_;
  std::locale::locale(&v15, a2 + 1);
  int v16 = locale;
  std::locale::locale(&v17, &v15);
  atomic_ullong *volatile v7 = (std::locale::id *)MEMORY[0x263F8C108];
  while (size)
  {
    std::string::size_type v8 = size;
    uint64_t v9 = v4[size - 1];
    atomic_ullong *volatile v10 = std::locale::use_facet(&v17, v7);
    if ((v9 & 0x80) != 0)
    {
      uint64_t v4 = v6;
      break;
    }
    --v6;
    int v11 = *((_DWORD *)&v10[1].~facet + v9);
    std::string::size_type size = v8 - 1;
    if ((v11 & v16) == 0)
    {
      v4 += v8;
      break;
    }
  }
  std::locale::~locale(&v17);
  std::string::size_type v12 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v12 & 0x80u) == 0) {
    unint64_t v13 = (char *)a1;
  }
  else {
    unint64_t v13 = (char *)a1->__r_.__value_.__r.__words[0];
  }
  if ((v12 & 0x80u) != 0) {
    std::string::size_type v12 = a1->__r_.__value_.__l.__size_;
  }
  std::string::erase(a1, v4 - v13, &v13[v12] - v4);
  std::locale::~locale(&v15);
}

void sub_223EAFF34(_Unwind_Exception *a1)
{
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

uint64_t boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<turi::flexible_type &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(uint64_t ***)(a3 + 8);
  uint64_t v4 = *(uint64_t **)(a3 + 16);
  atomic_ullong *volatile v5 = *v3;
  uint64_t v6 = *v4;
  if (*v3 != (uint64_t *)*v4)
  {
    switch(*(unsigned char *)(v6 + 12))
    {
      case 2:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v6, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v7 = *(atomic_ullong *volatile *)v6;
          if (!*(void *)v6) {
            goto LABEL_34;
          }
          if (*((char *)v7 + 31) < 0) {
            operator delete((void *)v7[1]);
          }
          atomic_ullong *volatile v8 = v7;
          uint64_t v9 = 0x1012C404EF22A49;
          goto LABEL_33;
        }
        break;
      case 3:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v6, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)v6;
          if (!*(void *)v6) {
            goto LABEL_34;
          }
          int v11 = (void *)v10[1];
          if (v11)
          {
            v10[2] = (atomic_ullong)v11;
            operator delete(v11);
          }
          atomic_ullong *volatile v8 = v10;
          uint64_t v9 = 0x1080C409938AC02;
          goto LABEL_33;
        }
        break;
      case 4:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v6, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)v6;
          if (!*(void *)v6) {
            goto LABEL_34;
          }
          long long v24 = (void **)(v12 + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v24);
          goto LABEL_19;
        }
        break;
      case 5:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v6, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)v6;
          if (!*(void *)v6) {
            goto LABEL_34;
          }
          long long v24 = (void **)(v12 + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v24);
LABEL_19:
          atomic_ullong *volatile v8 = v12;
          uint64_t v9 = 0x1020C405E66F15BLL;
          goto LABEL_33;
        }
        break;
      case 8:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v6, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v13 = *(atomic_ullong *volatile *)v6;
          if (!*(void *)v6) {
            goto LABEL_34;
          }
          boost::detail::shared_count::~shared_count((atomic_uint **)v13 + 2);
          atomic_ullong *volatile v8 = v13;
          unsigned int v14 = -235920773;
          goto LABEL_32;
        }
        break;
      case 9:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v6, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v15 = *(atomic_ullong *volatile *)v6;
          if (*(void *)v6)
          {
            int v16 = (void *)v15[6];
            if (v16)
            {
              v15[7] = (atomic_ullong)v16;
              operator delete(v16);
            }
            std::locale v17 = (void *)v15[3];
            if (v17)
            {
              v15[4] = (atomic_ullong)v17;
              operator delete(v17);
            }
            long long v18 = (std::__shared_weak_count *)v15[2];
            if (v18) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v18);
            }
            atomic_ullong *volatile v8 = v15;
            unsigned int v14 = 2071181815;
LABEL_32:
            uint64_t v9 = v14 | 0x1030C4000000000;
LABEL_33:
            MEMORY[0x22A614FA0](v8, v9);
          }
LABEL_34:
          *(void *)uint64_t v6 = 0;
        }
        break;
      default:
        break;
    }
    uint64_t v19 = *v5;
    *(void *)(v6 + 5) = *(uint64_t *)((char *)v5 + 5);
    *(void *)uint64_t v6 = v19;
    LODWORD(v19) = *((unsigned __int8 *)v5 + 12);
    *(unsigned char *)(v6 + 12) = v19;
    BOOL v20 = v19 > 9;
    int v21 = (1 << v19) & 0x33C;
    if (!v20 && v21 != 0) {
      atomic_fetch_add(*(atomic_ullong *volatile *)v6, 1uLL);
    }
  }
  return v6;
}

void sub_223EB0294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>()
{
}

void sub_223EB0368(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 136);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 96);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 56);
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  MEMORY[0x22A614FA0](v1, 0x10B2C4034433CABLL);
  _Unwind_Resume(a1);
}

uint64_t boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::move_assign(uint64_t result, uint64_t *a2)
{
  if (a2 != (uint64_t *)result)
  {
    size_t v2 = a2;
    int v3 = (uint64_t *)result;
    uint64_t v4 = *a2;
    if (*a2)
    {
      *(void *)result = v4;
      if (v4)
      {
        long long v7 = *(_OWORD *)(a2 + 1);
        *(void *)(result + 24) = a2[3];
        *(_OWORD *)(result + 8) = v7;
      }
      else
      {
        result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 & 0xFFFFFFFFFFFFFFFELL))(a2 + 1, result + 8, 1);
      }
    }
    else
    {
      uint64_t v5 = *(void *)result;
      if (!*(void *)result) {
        return result;
      }
      if ((v5 & 1) == 0)
      {
        uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 & 0xFFFFFFFFFFFFFFFELL);
        if (v6) {
          result = v6(result + 8, result + 8, 2);
        }
      }
      size_t v2 = v3;
    }
    *size_t v2 = 0;
  }
  return result;
}

void sub_223EB0468(void *a1)
{
  __cxa_begin_catch(a1);
  *uint64_t v1 = 0;
  __cxa_rethrow();
}

void sub_223EB0478(_Unwind_Exception *a1)
{
}

uint64_t boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v2 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          if (*((char *)v2 + 31) < 0) {
            operator delete((void *)v2[1]);
          }
          atomic_ullong *volatile v3 = v2;
          uint64_t v4 = 0x1012C404EF22A49;
          goto LABEL_32;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v5 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          uint64_t v6 = (void *)v5[1];
          if (v6)
          {
            v5[2] = (atomic_ullong)v6;
            operator delete(v6);
          }
          atomic_ullong *volatile v3 = v5;
          uint64_t v4 = 0x1080C409938AC02;
          goto LABEL_32;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v7 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          atomic_ullong *volatile v15 = (void **)(v7 + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v15);
          goto LABEL_18;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v7 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          atomic_ullong *volatile v15 = (void **)(v7 + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v15);
LABEL_18:
          atomic_ullong *volatile v3 = v7;
          uint64_t v4 = 0x1020C405E66F15BLL;
          goto LABEL_32;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v8 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v8 + 2);
          atomic_ullong *volatile v3 = v8;
          unsigned int v9 = -235920773;
          goto LABEL_31;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)a1;
        if (*(void *)a1)
        {
          int v11 = (void *)v10[6];
          if (v11)
          {
            v10[7] = (atomic_ullong)v11;
            operator delete(v11);
          }
          atomic_ullong *volatile v12 = (void *)v10[3];
          if (v12)
          {
            v10[4] = (atomic_ullong)v12;
            operator delete(v12);
          }
          atomic_ullong *volatile v13 = (std::__shared_weak_count *)v10[2];
          if (v13) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v13);
          }
          atomic_ullong *volatile v3 = v10;
          unsigned int v9 = 2071181815;
LABEL_31:
          uint64_t v4 = v9 | 0x1030C4000000000;
LABEL_32:
          MEMORY[0x22A614FA0](v3, v4);
        }
      }
      break;
    default:
      break;
  }
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 12) = 0;
  return a1;
}

void _ZN5boost6spirit2qi4ruleIPKcFN4turi13flexible_typeEvEKNS_5proto7exprns_4exprINS8_6tagns_3tag8terminalENS8_7argsns_4termINS0_3tag9char_codeINSG_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEENS0_11unused_typeESP_E6defineIN4mpl_5BOOL_ILb0EEENSA_INSC_10bitwise_orENSE_5list2IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_INSC_9subscriptENSW_IRNS0_8terminalINSG_12stateful_tagINS5_20strict_real_policiesIdEENSG_7double_EdSP_EEEERKNS_7phoenix5actorINS9_10basic_exprINSC_6assignENSW_INS17_INS0_9attributeILi0EEEEENS17_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSA_ISX_NSW_IRKNSY_INSG_9long_longEEES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNSt3__16vectorIdNS21_9allocatorIdEEEEvESO_SP_SP_EES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNS22_IS6_NS23_IS6_EEEEvESO_SP_SP_EES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNS22_INS21_4pairIS6_S6_EENS23_IS2V_EEEEvESO_SP_SP_EES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNSA_ISD_NSF_INS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS3A_13parser_configEEEEEEEELl0EEES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRKNSY_INSG_3epsEEERKNS17_INS18_IS19_NSW_IS1C_NS17_INS18_ISD_NSF_IS6_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEEEEvRSQ_RKT0_NST_ILb1EEE(uint64_t a1, uint64_t a2)
{
  v18[36] = *MEMORY[0x263EF8340];
  _ZNK5boost6spirit6detail11make_binaryINS0_2qi6domainENS_5proto6tagns_3tag10bitwise_orENS0_13meta_compilerIS4_E12meta_grammarELb1EE4implIRKNS5_7exprns_4exprIS8_NS5_7argsns_5list2IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_INS7_9subscriptENSH_IRNS0_8terminalINS0_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSK_7double_EdNS0_11unused_typeEEEEERKNS_7phoenix5actorINSE_10basic_exprINS7_6assignENSH_INSV_INS0_9attributeILi0EEEEENSV_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_9long_longEEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS3_4ruleIPKcFNSt3__16vectorIdNS1S_9allocatorIdEEEEvEKNSF_INS7_8terminalENSG_4termINSK_9char_codeINSK_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEESQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INSM_13flexible_typeENS1U_IS2I_EEEEvES27_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INS1S_4pairIS2I_S2I_EENS1U_IS2X_EEEEvES27_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNSF_IS1Y_NS1Z_INS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS3C_13parser_configEEEEEEEELl0EEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_3epsEEERKNSV_INSW_ISX_NSH_IS10_NSV_INSW_IS1Y_NS1Z_IS2I_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSQ_EclES4E_S4I_S4J_(a2, (uint64_t)&v3);
  __int16 v11 = v3;
  char v12 = v4;
  __int16 v13 = v5;
  char v14 = v6;
  long long v15 = v7;
  long long v16 = v8;
  long long v17 = v9;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v18, (uint64_t)&v10);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1U_9allocatorIdEEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_ISB_NS1W_ISB_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2J_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_IN11parser_impl13string_parserES1N_EENS9_INS10_INSJ_10eps_parserENS16_INS19_IS1C_NS1E_IS1H_NS16_INS19_IS21_NS22_ISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES3F_(a1 + 32, &v11);
}

void sub_223EB0800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1U_9allocatorIdEEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_ISB_NS1W_ISB_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2J_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_IN11parser_impl13string_parserES1N_EENS9_INS10_INSJ_10eps_parserENS16_INS19_IS1C_NS1E_IS1H_NS16_INS19_IS21_NS22_ISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES3F_(uint64_t a1, __int16 *a2)
{
  v11[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v2 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v2;
  long long v10 = *((_OWORD *)a2 + 3);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v11, (uint64_t)(a2 + 32));
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1U_9allocatorIdEEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_ISB_NS1W_ISB_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2J_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_IN11parser_impl13string_parserES1N_EENS9_INS10_INSJ_10eps_parserENS16_INS19_IS1C_NS1E_IS1H_NS16_INS19_IS21_NS22_ISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS3E_EE5valueEiE4typeE(v3, (uint64_t)&v4);
}

void sub_223EB0940(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  boost::function0<void>::~function0((uint64_t *)va);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder(uint64_t a1)
{
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  return a1;
}

uint64_t boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons(uint64_t a1, uint64_t a2)
{
  __int16 v4 = parser_impl::parser_config::parser_config((std::string *)a1, (long long *)a2);
  __int16 v5 = *(_WORD *)(a2 + 184);
  v4[7].__r_.__value_.__s.__data_[18] = *(unsigned char *)(a2 + 186);
  LOWORD(v4[7].__r_.__value_.__r.__words[2]) = v5;
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)&v4[8], a2 + 192);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_WORD *)(a1 + 240) = *(_WORD *)(a2 + 240);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(void *)(a1 + 264) = 0;
  *(_DWORD *)(a1 + 272) = 0;
  *(unsigned char *)(a1 + 276) = 0;
  if (a2 != a1)
  {
    uint64_t v6 = *(void *)(a2 + 264);
    *(void *)(a1 + 269) = *(void *)(a2 + 269);
    *(void *)(a1 + 264) = v6;
    unsigned int v7 = *(unsigned __int8 *)(a2 + 276);
    *(unsigned char *)(a1 + 276) = v7;
    if (v7 <= 9 && ((1 << v7) & 0x33C) != 0) {
      atomic_fetch_add(*(atomic_ullong *volatile *)(a1 + 264), 1uLL);
    }
  }
  return a1;
}

void sub_223EB0A94(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 136);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 96);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 56);
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((void **)v1);
  _Unwind_Resume(a1);
}

void _ZNK5boost6spirit6detail11make_binaryINS0_2qi6domainENS_5proto6tagns_3tag10bitwise_orENS0_13meta_compilerIS4_E12meta_grammarELb1EE4implIRKNS5_7exprns_4exprIS8_NS5_7argsns_5list2IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_INS7_9subscriptENSH_IRNS0_8terminalINS0_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSK_7double_EdNS0_11unused_typeEEEEERKNS_7phoenix5actorINSE_10basic_exprINS7_6assignENSH_INSV_INS0_9attributeILi0EEEEENSV_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_9long_longEEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS3_4ruleIPKcFNSt3__16vectorIdNS1S_9allocatorIdEEEEvEKNSF_INS7_8terminalENSG_4termINSK_9char_codeINSK_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEESQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INSM_13flexible_typeENS1U_IS2I_EEEEvES27_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INS1S_4pairIS2I_S2I_EENS1U_IS2X_EEEEvES27_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNSF_IS1Y_NS1Z_INS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS3C_13parser_configEEEEEEEELl0EEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_3epsEEERKNSV_INSW_ISX_NSH_IS10_NSV_INSW_IS1Y_NS1Z_IS2I_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSQ_EclES4E_S4I_S4J_(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v19[3] = *MEMORY[0x263EF8340];
  _ZNK5boost5proto6detail17reverse_fold_implINS0_4makeINS_6fusion4nil_EEENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINSB_13meta_compilerINSB_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprISA_NS0_7argsns_5list2IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_INS9_9subscriptENSO_IRNSB_8terminalINSB_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSR_7double_EdNSB_11unused_typeEEEEERKNS_7phoenix5actorINSL_10basic_exprINS9_6assignENSO_INS12_INSB_9attributeILi0EEEEENS12_INSB_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSM_ISP_NSO_IRKNSQ_INSR_9long_longEEES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNSF_4ruleIPKcFNSt3__16vectorIdNS1Z_9allocatorIdEEEEvEKNSM_INS9_8terminalENSN_4termINSR_9char_codeINSR_5spaceENSB_13char_encoding9iso8859_1EEEEELl0EEESX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNS1W_IS1Y_FNS20_INST_13flexible_typeENS21_IS2P_EEEEvES2E_SX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNS1W_IS1Y_FNS20_INS1Z_4pairIS2P_S2P_EENS21_IS34_EEEEvES2E_SX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNSM_IS25_NS26_INSB_11terminal_exIN11parser_impl3tag17restricted_stringENS4_6vectorIJNS3J_13parser_configEEEEEEEELl0EEES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRKNSQ_INSR_3epsEEERKNS12_INS13_IS14_NSO_IS17_NS12_INS13_IS25_NS26_IS2P_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSX_Ll2EEclES4K_S4O_S4P_(a1, (uint64_t)&v4);
  *(_WORD *)a2 = v4;
  *(unsigned char *)(a2 + 2) = v5;
  *(_WORD *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 10) = v7;
  long long v3 = v9;
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v10;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons(a2 + 64, (uint64_t)&v11);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v19);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v18);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v17);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  if (v14 < 0) {
    operator delete(__p);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
}

void sub_223EB0BC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t _ZNK5boost5proto6detail17reverse_fold_implINS0_4makeINS_6fusion4nil_EEENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINSB_13meta_compilerINSB_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprISA_NS0_7argsns_5list2IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_INS9_9subscriptENSO_IRNSB_8terminalINSB_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSR_7double_EdNSB_11unused_typeEEEEERKNS_7phoenix5actorINSL_10basic_exprINS9_6assignENSO_INS12_INSB_9attributeILi0EEEEENS12_INSB_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSM_ISP_NSO_IRKNSQ_INSR_9long_longEEES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNSF_4ruleIPKcFNSt3__16vectorIdNS1Z_9allocatorIdEEEEvEKNSM_INS9_8terminalENSN_4termINSR_9char_codeINSR_5spaceENSB_13char_encoding9iso8859_1EEEEELl0EEESX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNS1W_IS1Y_FNS20_INST_13flexible_typeENS21_IS2P_EEEEvES2E_SX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNS1W_IS1Y_FNS20_INS1Z_4pairIS2P_S2P_EENS21_IS34_EEEEvES2E_SX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNSM_IS25_NS26_INSB_11terminal_exIN11parser_impl3tag17restricted_stringENS4_6vectorIJNS3J_13parser_configEEEEEEEELl0EEES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRKNSQ_INSR_3epsEEERKNS12_INS13_IS14_NSO_IS17_NS12_INS13_IS25_NS26_IS2P_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSX_Ll2EEclES4K_S4O_S4P_@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v6[3] = *MEMORY[0x263EF8340];
  boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const&>,2l> const&,boost::fusion::nil_,boost::spirit::unused_type &>::operator()(*(void *)(a1 + 8), (uint64_t)v5);
  _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorIdNS1W_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INSQ_13flexible_typeENS1Y_IS2M_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INS1W_4pairIS2M_S2M_EENS1Y_IS31_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSJ_IS22_NS23_INS8_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS3G_13parser_configEEEEEEEELl0EEES1C_EELl2EEEEELl2EEENS3J_4consINSC_6actionINSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS22_NS23_IS2M_EELl0EEEEEEELl2EEEEEEENS3J_4nil_EEERSU_Ll2EEclES3Y_RKS4A_S4B_(*(uint64_t **)a1, (uint64_t)v5, a2);
  return boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v6);
}

void sub_223EB0C80(_Unwind_Exception *a1)
{
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v1 + 16);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const&>,2l> const&,boost::fusion::nil_,boost::spirit::unused_type &>::operator()@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  boost::spirit::detail::make_action<boost::spirit::qi::domain,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const&>,2l> const&,boost::fusion::nil_ const&,boost::spirit::unused_type &>::operator()(a1, (uint64_t)v6);
  *(unsigned char *)(a2 + 8) = v6[8];
  *(void *)(a2 + 16) = 0;
  long long v3 = (atomic_ullong *volatile *)(a2 + 16);
  *(_DWORD *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 28) = 0;
  if (v6 != (unsigned char *)a2)
  {
    *(void *)(a2 + 21) = *(void *)&v7[5];
    *long long v3 = *(atomic_ullong *volatile *)v7;
    unsigned int v4 = v7[12];
    *(unsigned char *)(a2 + 28) = v7[12];
    if (v4 <= 9 && ((1 << v4) & 0x33C) != 0) {
      atomic_fetch_add(*v3, 1uLL);
    }
  }
  return boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v7);
}

uint64_t boost::spirit::detail::make_action<boost::spirit::qi::domain,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const&>,2l> const&,boost::fusion::nil_ const&,boost::spirit::unused_type &>::operator()@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  long long v3 = *(char **)(a1 + 8);
  char v4 = *v3;
  char v9 = *v3;
  memset(v10, 0, 13);
  if (v3 == &v9)
  {
    char v12 = v4;
    *(atomic_ullong **)&v13[5] = *(atomic_ullong **)((char *)v10 + 5);
    *(atomic_ullong **)__int16 v13 = v10[0];
    v13[12] = 0;
  }
  else
  {
    char v5 = (atomic_ullong *)*((void *)v3 + 1);
    *(atomic_ullong **)((char *)v10 + 5) = *(atomic_ullong **)(v3 + 13);
    v10[0] = v5;
    unsigned int v6 = v3[20];
    BYTE4(v10[1]) = v6;
    if (v6 <= 9 && ((1 << v6) & 0x33C) != 0)
    {
      atomic_fetch_add(v10[0], 1uLL);
      char v4 = v9;
      unsigned int v6 = BYTE4(v10[1]);
    }
    char v12 = v4;
    *(atomic_ullong **)&v13[5] = *(atomic_ullong **)((char *)v10 + 5);
    *(atomic_ullong **)__int16 v13 = v10[0];
    v13[12] = v6;
    if (v6 <= 9 && ((1 << v6) & 0x33C) != 0) {
      atomic_fetch_add(*(atomic_ullong *volatile *)v13, 1uLL);
    }
  }
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v10);
  boost::spirit::make_component<boost::spirit::qi::domain,boost::spirit::tag::action,void>::operator()<boost::fusion::cons<boost::spirit::qi::eps_parser,boost::fusion::cons<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>,boost::fusion::nil_>>>((uint64_t)v11, a2);
  return boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v13);
}

void sub_223EB0EBC(_Unwind_Exception *a1)
{
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v1);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::make_component<boost::spirit::qi::domain,boost::spirit::tag::action,void>::operator()<boost::fusion::cons<boost::spirit::qi::eps_parser,boost::fusion::cons<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>,boost::fusion::nil_>>>@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v7[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  char v2 = *(unsigned char *)(a1 + 8);
  char v6 = v2;
  memset(v7, 0, 13);
  if ((char *)(a1 + 8) != &v6)
  {
    *(atomic_ullong **)((char *)v7 + 5) = *(atomic_ullong **)(a1 + 21);
    v7[0] = *(atomic_ullong **)(a1 + 16);
    BYTE4(v7[1]) = *(unsigned char *)(a1 + 28);
    if (BYTE4(v7[1]) <= 9u && ((1 << SBYTE4(v7[1])) & 0x33C) != 0)
    {
      atomic_fetch_add(v7[0], 1uLL);
      char v2 = v6;
    }
  }
  *(unsigned char *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 28) = 0;
  *(void *)(a2 + 16) = 0;
  long long v3 = (atomic_ullong *volatile *)(a2 + 16);
  if ((char *)(a2 + 8) != &v6)
  {
    *(atomic_ullong **)(a2 + 21) = *(atomic_ullong **)((char *)v7 + 5);
    *long long v3 = v7[0];
    unsigned int v4 = BYTE4(v7[1]);
    *(unsigned char *)(a2 + 28) = BYTE4(v7[1]);
    if (v4 <= 9 && ((1 << v4) & 0x33C) != 0) {
      atomic_fetch_add(*v3, 1uLL);
    }
  }
  return boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v7);
}

uint64_t _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorIdNS1W_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INSQ_13flexible_typeENS1Y_IS2M_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INS1W_4pairIS2M_S2M_EENS1Y_IS31_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSJ_IS22_NS23_INS8_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS3G_13parser_configEEEEEEEELl0EEES1C_EELl2EEEEELl2EEENS3J_4consINSC_6actionINSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS22_NS23_IS2M_EELl0EEEEEEELl2EEEEEEENS3J_4nil_EEERSU_Ll2EEclES3Y_RKS4A_S4B_@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v16[3] = *(atomic_ullong **)MEMORY[0x263EF8340];
  v15[8] = *(unsigned char *)(a2 + 8);
  memset(v16, 0, 13);
  if (v15 != (unsigned char *)a2)
  {
    *(atomic_ullong **)((char *)v16 + 5) = *(atomic_ullong **)(a2 + 21);
    v16[0] = *(atomic_ullong **)(a2 + 16);
    BYTE4(v16[1]) = *(unsigned char *)(a2 + 28);
    if (BYTE4(v16[1]) <= 9u && ((1 << SBYTE4(v16[1])) & 0x33C) != 0) {
      atomic_fetch_add(v16[0], 1uLL);
    }
  }
  boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>,boost::spirit::unused_type &>::operator()(a1[1], (uint64_t)v15, (uint64_t)v6);
  _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorIdNS1W_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INSQ_13flexible_typeENS1Y_IS2M_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INS1W_4pairIS2M_S2M_EENS1Y_IS31_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionIN11parser_impl13string_parserES1A_EENS3G_INS3H_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS22_NS23_IS2M_EELl0EEEEEEELl2EEEEEEENS3F_4nil_EEEEERSU_Ll2EEclES3E_RKS3V_S3W_(*a1, (uint64_t)v6, a3);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v14);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v13);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v12);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v11);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v10);
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  return boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v16);
}

void sub_223EB113C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::~cons((uint64_t)va);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v3);
  _Unwind_Resume(a1);
}

uint64_t boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::~cons(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>,boost::spirit::unused_type &>::operator()(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  boost::spirit::detail::make_action<boost::spirit::qi::domain,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type &>::operator()(a1, (uint64_t)v5);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons(a3, (uint64_t)v5, a2);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v12);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v11);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v10);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v9);
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
}

void sub_223EB1260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = parser_impl::parser_config::parser_config((std::string *)a1, (long long *)a2);
  __int16 v7 = *(_WORD *)(a2 + 184);
  v6[7].__r_.__value_.__s.__data_[18] = *(unsigned char *)(a2 + 186);
  LOWORD(v6[7].__r_.__value_.__r.__words[2]) = v7;
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)&v6[8], a2 + 192);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_WORD *)(a1 + 240) = *(_WORD *)(a2 + 240);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a3 + 8);
  *(void *)(a1 + 264) = 0;
  *(_DWORD *)(a1 + 272) = 0;
  *(unsigned char *)(a1 + 276) = 0;
  if (a1 + 248 != a3)
  {
    uint64_t v8 = *(void *)(a3 + 16);
    *(void *)(a1 + 269) = *(void *)(a3 + 21);
    *(void *)(a1 + 264) = v8;
    unsigned int v9 = *(unsigned __int8 *)(a3 + 28);
    *(unsigned char *)(a1 + 276) = v9;
    if (v9 <= 9 && ((1 << v9) & 0x33C) != 0) {
      atomic_fetch_add(*(atomic_ullong *volatile *)(a1 + 264), 1uLL);
    }
  }
  return a1;
}

void sub_223EB133C(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 136);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 96);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1 + 56);
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((void **)v1);
  _Unwind_Resume(a1);
}

void _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorIdNS1W_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INSQ_13flexible_typeENS1Y_IS2M_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INS1W_4pairIS2M_S2M_EENS1Y_IS31_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionIN11parser_impl13string_parserES1A_EENS3G_INS3H_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS22_NS23_IS2M_EELl0EEEEEEELl2EEEEEEENS3F_4nil_EEEEERSU_Ll2EEclES3E_RKS3V_S3W_(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void v26[3] = *MEMORY[0x263EF8340];
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v18, a2);
  char v5 = *(uint64_t ***)(a1 + 8);
  uint64_t v6 = **v5;
  uint64_t v7 = *(unsigned __int16 *)v5[1];
  *(void *)&long long v8 = v6;
  *((void *)&v8 + 1) = v7;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)&v9, (uint64_t)v18);
  _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorIdNS1W_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INSQ_13flexible_typeENS1Y_IS2M_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionINSC_9referenceIKNS1T_IS1V_FNS1X_INS1W_4pairIS2M_S2M_EENS1Y_IS35_EEEEvES2B_SU_SU_EEEES1A_EENS31_INS32_IN11parser_impl13string_parserES1A_EENS31_INS32_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS22_NS23_IS2M_EELl0EEEEEEELl2EEEEEEENS30_4nil_EEEEEEERSU_Ll2EEclES2Z_RKS3R_S3S_(*(uint64_t **)a1, &v8, a3);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v17);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v13);
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v26);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v25);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v24);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v23);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v22);
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v19 < 0) {
    operator delete(v18[0]);
  }
}

void sub_223EB14C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
}

uint64_t boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>::~cons(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorIdNS1W_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INSQ_13flexible_typeENS1Y_IS2M_EEEEvES2B_SU_SU_EES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionINSC_9referenceIKNS1T_IS1V_FNS1X_INS1W_4pairIS2M_S2M_EENS1Y_IS35_EEEEvES2B_SU_SU_EEEES1A_EENS31_INS32_IN11parser_impl13string_parserES1A_EENS31_INS32_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS22_NS23_IS2M_EELl0EEEEEEELl2EEEEEEENS30_4nil_EEEEEEERSU_Ll2EEclES2Z_RKS3R_S3S_(uint64_t *a1@<X1>, long long *a2@<X2>, uint64_t a3@<X8>)
{
  v27[4] = *MEMORY[0x263EF8340];
  long long v18 = *a2;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v19, (uint64_t)(a2 + 1));
  uint64_t v5 = a1[1];
  uint64_t v6 = **(void **)v5;
  uint64_t v7 = **(unsigned __int16 **)(v5 + 8);
  *(void *)&v8[0] = v6;
  *((void *)&v8[0] + 1) = v7;
  v8[1] = v18;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)&v9, (uint64_t)v19);
  _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorIdNS1W_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionINSC_9referenceIKNS1T_IS1V_FNS1X_INSQ_13flexible_typeENS1Y_IS2Q_EEEEvES2B_SU_SU_EEEES1A_EENS2N_INS2O_INS2P_IKNS1T_IS1V_FNS1X_INS1W_4pairIS2Q_S2Q_EENS1Y_IS2Z_EEEEvES2B_SU_SU_EEEES1A_EENS2N_INS2O_IN11parser_impl13string_parserES1A_EENS2N_INS2O_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS22_NS23_IS2Q_EELl0EEEEEEELl2EEEEEEENS2M_4nil_EEEEEEEEERSU_Ll2EEclES2L_RKS3M_S3N_(*a1, v8, a3);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v17);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v13);
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v27);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v26);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v25);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v24);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v23);
  if (v22 < 0) {
    operator delete(v21);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
}

void sub_223EB16BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

uint64_t boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>::~cons(uint64_t a1)
{
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  return a1;
}

void _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorIdNS1W_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionINSC_9referenceIKNS1T_IS1V_FNS1X_INSQ_13flexible_typeENS1Y_IS2Q_EEEEvES2B_SU_SU_EEEES1A_EENS2N_INS2O_INS2P_IKNS1T_IS1V_FNS1X_INS1W_4pairIS2Q_S2Q_EENS1Y_IS2Z_EEEEvES2B_SU_SU_EEEES1A_EENS2N_INS2O_IN11parser_impl13string_parserES1A_EENS2N_INS2O_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS22_NS23_IS2Q_EELl0EEEEEEELl2EEEEEEENS2M_4nil_EEEEEEEEERSU_Ll2EEclES2L_RKS3M_S3N_(uint64_t a1@<X1>, long long *a2@<X2>, uint64_t a3@<X8>)
{
  v29[4] = *MEMORY[0x263EF8340];
  long long v5 = a2[1];
  long long v19 = *a2;
  long long v20 = v5;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v21, (uint64_t)(a2 + 2));
  uint64_t v6 = *(uint64_t ***)(a1 + 8);
  uint64_t v7 = **v6;
  uint64_t v8 = *(unsigned __int16 *)v6[1];
  *(void *)&v9[0] = v7;
  *((void *)&v9[0] + 1) = v8;
  v9[1] = v19;
  v9[2] = v20;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)&v10, (uint64_t)v21);
  _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionINSC_9referenceIKNSC_4ruleIPKcFNSt3__16vectorIdNS20_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EEEES1A_EENS1U_INS1V_INS1W_IKNS1X_IS1Z_FNS21_INSQ_13flexible_typeENS22_IS2K_EEEEvES2F_SU_SU_EEEES1A_EENS1U_INS1V_INS1W_IKNS1X_IS1Z_FNS21_INS20_4pairIS2K_S2K_EENS22_IS2T_EEEEvES2F_SU_SU_EEEES1A_EENS1U_INS1V_IN11parser_impl13string_parserES1A_EENS1U_INS1V_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS26_NS27_IS2K_EELl0EEEEEEELl2EEEEEEENS1T_4nil_EEEEEEEEEEERSU_Ll2EEclES1S_RKS3H_S3I_(*(void **)a1, v9, a3);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v18);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v17);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  if (v13 < 0) {
    operator delete(__p);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v29);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v28);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v27);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v26);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v25);
  if (v24 < 0) {
    operator delete(v23);
  }
  if (v22 < 0) {
    operator delete(v21[0]);
  }
}

void sub_223EB18C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

uint64_t boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons(uint64_t a1)
{
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  return a1;
}

void _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionINSC_9referenceIKNSC_4ruleIPKcFNSt3__16vectorIdNS20_9allocatorIdEEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EEEES1A_EENS1U_INS1V_INS1W_IKNS1X_IS1Z_FNS21_INSQ_13flexible_typeENS22_IS2K_EEEEvES2F_SU_SU_EEEES1A_EENS1U_INS1V_INS1W_IKNS1X_IS1Z_FNS21_INS20_4pairIS2K_S2K_EENS22_IS2T_EEEEvES2F_SU_SU_EEEES1A_EENS1U_INS1V_IN11parser_impl13string_parserES1A_EENS1U_INS1V_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS26_NS27_IS2K_EELl0EEEEEEELl2EEEEEEENS1T_4nil_EEEEEEEEEEERSU_Ll2EEclES1S_RKS3H_S3I_(void *a1@<X1>, long long *a2@<X2>, uint64_t a3@<X8>)
{
  v32[4] = *MEMORY[0x263EF8340];
  long long v5 = a2[1];
  long long v21 = *a2;
  long long v22 = v5;
  long long v23 = a2[2];
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v24, (uint64_t)(a2 + 3));
  char v8 = HIBYTE(**(_WORD **)(a1[1] + 8));
  __int16 v7 = **(_WORD **)(a1[1] + 8) << 8;
  long long v9 = v21;
  long long v10 = v22;
  long long v11 = v23;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v12, (uint64_t)v24);
  __int16 v6 = **(_WORD **)(*a1 + 8);
  *(unsigned char *)(a3 + 2) = HIBYTE(v6);
  *(_WORD *)a3 = v6 << 8;
  *(_WORD *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 10) = v8;
  *(_OWORD *)(a3 + 16) = v9;
  *(_OWORD *)(a3 + 32) = v10;
  *(_OWORD *)(a3 + 48) = v11;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons(a3 + 64, (uint64_t)v12);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v20);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v19);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v18);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v17);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v16);
  if (v15 < 0) {
    operator delete(__p);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v32);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v31);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v30);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v29);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v28);
  if (v27 < 0) {
    operator delete(v26);
  }
  if (v25 < 0) {
    operator delete(v24[0]);
  }
}

void sub_223EB1B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

uint64_t boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>::~cons(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  return a1;
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1U_9allocatorIdEEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_ISB_NS1W_ISB_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2J_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_IN11parser_impl13string_parserES1N_EENS9_INS10_INSJ_10eps_parserENS16_INS19_IS1C_NS1E_IS1H_NS16_INS19_IS21_NS22_ISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS3E_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  v11[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *(_WORD *)a2;
  char v5 = *(unsigned char *)(a2 + 2);
  __int16 v6 = *(_WORD *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 10);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v8 = *(_OWORD *)(a2 + 16);
  long long v9 = v3;
  long long v10 = *(_OWORD *)(a2 + 48);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v11, a2 + 64);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(a1, &v4);
}

void sub_223EB1CB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(void *a1, __int16 *a2)
{
  v11[36] = *(void **)MEMORY[0x263EF8340];
  *a1 = 0;
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v3 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v3;
  long long v10 = *((_OWORD *)a2 + 3);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v11, (uint64_t)(a2 + 32));
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v4);
}

void sub_223EB1DD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v3 = *(_WORD *)a2;
  char v4 = *(unsigned char *)(a2 + 2);
  __int16 v5 = *(_WORD *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 10);
  long long v2 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v8 = v2;
  long long v9 = *(_OWORD *)(a2 + 48);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, a2 + 64);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>)::stored_vtable, &v3);
}

void sub_223EB1F0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

BOOL boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a1;
  v7[0] = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  return boost::fusion::any<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>>(v5, (uint64_t)v7);
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(uint64_t a1, __int16 *a2)
{
  v11[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v3 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v3;
  long long v10 = *((_OWORD *)a2 + 3);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v11, (uint64_t)(a2 + 32));
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(a1, (uint64_t)&v4);
}

void sub_223EB2080(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  __int16 v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v5 + 328);
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 256);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 200);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 160);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 120);
        if (*(char *)(v5 + 111) < 0) {
          operator delete(*(void **)(v5 + 88));
        }
        if (*(char *)(v5 + 87) < 0) {
          operator delete(*(void **)(v5 + 64));
        }
        result = MEMORY[0x22A614FA0](v5, 0x10F2C400BC9F32ALL);
      }
      goto LABEL_11;
    case 3:
      result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C153DLL & 0x7FFFFFFFFFFFFFFFLL)
        || (result = strcmp((const char *)result, (const char *)(0x80000002246C153DLL & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EB2230(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C400BC9F32ALL);
  _Unwind_Resume(a1);
}

BOOL boost::fusion::any<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>>(uint64_t a1, uint64_t a2)
{
  long long v3 = *(uint64_t **)a2;
  __int16 v4 = *(uint64_t **)(a2 + 8);
  uint64_t v5 = *(void ***)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if ((boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1, *(uint64_t **)a2, v4, (uint64_t)v5, v6) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 8, v3, v4, (uint64_t)v5, v6) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t *)(a1 + 16), (uint64_t)v3, (uint64_t)v4, (uint64_t)v5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 32, (uint64_t)v3,
          (uint64_t)v4,
          v5) & 1) != 0
    || (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 48, (uint64_t)v3, (uint64_t)v4, v5) & 1) != 0|| (boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((std::string *)(a1 + 64), (unsigned __int8 **)v3, (unsigned __int8 **)v4, (uint64_t)v5, v6) & 1) != 0)
  {
    return 1;
  }
  return boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 312, (unsigned __int8 **)v3, (unsigned __int8 **)v4, (uint64_t)v5);
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = 0;
  uint64_t v8 = *a2;
  if (!boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>(a1, a2, a3, a4, a5, (double *)&v11))return 0; {
  uint64_t v9 = 1;
  }
  char v13 = 1;
  char v12 = &v11;
  v14[0] = a1 + 1;
  v14[1] = &v12;
  v14[2] = a4;
  v14[3] = &v13;
  boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<double &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)&v15, a1 + 1, (uint64_t)v14);
  if (!v13)
  {
    uint64_t v9 = 0;
    *a2 = v8;
  }
  return v9;
}

uint64_t boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, double *a6)
{
  for (i = (unsigned __int8 *)*a2; i != (unsigned __int8 *)*a3; *a2 = (uint64_t)++i)
  {
    if ((boost::spirit::char_encoding::iso8859_1_char_types[*i] & 0x40) == 0) {
      break;
    }
  }
  return boost::spirit::qi::detail::real_impl<double,turi::strict_real_policies<double>>::parse<char const*,double>(a2, a3, a6);
}

uint64_t boost::spirit::qi::detail::real_impl<double,turi::strict_real_policies<double>>::parse<char const*,double>(uint64_t *a1, uint64_t *a2, double *a3)
{
  long long v3 = (unsigned __int8 *)*a1;
  uint64_t v4 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  int v8 = *v3;
  if (v8 == 45 || v8 == 43)
  {
    BOOL v9 = v8 == 45;
    long long v10 = v3 + 1;
    *a1 = (uint64_t)(v3 + 1);
    uint64_t v4 = *a2;
  }
  else
  {
    BOOL v9 = 0;
    long long v10 = (unsigned __int8 *)*a1;
  }
  unint64_t v27 = 0;
  double v28 = 0.0;
  if (v10 != (unsigned __int8 *)v4)
  {
    if (boost::spirit::qi::detail::extract_int<unsigned long,10u,1u,-1,boost::spirit::qi::detail::positive_accumulator<10u>,false,false>::parse_main<char const*,unsigned long>(a1, a2, &v27))
    {
      unsigned int v26 = 0;
      uint64_t v11 = (unsigned __int8 *)*a1;
      if (*a1 != *a2)
      {
        int v12 = *v11;
        if (v12 == 101 || v12 == 69) {
          goto LABEL_21;
        }
        if (v12 == 46)
        {
          *a1 = (uint64_t)(v11 + 1);
          boost::spirit::qi::ureal_policies<double>::parse_frac_n<char const*,unsigned long>(a1, a2, &v27, &v26);
          goto LABEL_19;
        }
      }
LABEL_25:
      uint64_t result = 0;
      *a1 = (uint64_t)v3;
      return result;
    }
    *a1 = (uint64_t)v10;
  }
  if ((boost::spirit::qi::ureal_policies<double>::parse_nan<char const*,double>((unsigned __int8 **)a1, (unsigned __int8 **)a2, &v28) & 1) != 0|| boost::spirit::qi::ureal_policies<double>::parse_inf<char const*,double>((unsigned __int8 **)a1, (unsigned __int8 **)a2, &v28))
  {
    goto LABEL_49;
  }
  unsigned int v26 = 0;
  char v13 = (unsigned char *)*a1;
  if (*a1 == *a2) {
    goto LABEL_25;
  }
  if (*v13 != 46) {
    goto LABEL_25;
  }
  *a1 = (uint64_t)(v13 + 1);
  if ((boost::spirit::qi::ureal_policies<double>::parse_frac_n<char const*,unsigned long>(a1, a2, &v27, &v26) & 1) == 0) {
    goto LABEL_25;
  }
LABEL_19:
  uint64_t v11 = (unsigned __int8 *)*a1;
  if (*a1 != *a2 && (*v11 | 0x20) == 0x65)
  {
LABEL_21:
    *a1 = (uint64_t)(v11 + 1);
    int v25 = 0;
    if (boost::spirit::qi::ureal_policies<double>::parse_exp_n<char const*>(a1, a2, &v25))
    {
      unsigned int v14 = v25 - v26;
      if ((int)(v25 - v26) >= 0)
      {
        if (v14 <= 0x134)
        {
          double v15 = (double)v27;
          double v16 = boost::spirit::traits::pow10_helper<double,void>::call::exponents[v14];
LABEL_34:
          double v22 = v16 * v15;
LABEL_48:
          double v28 = v22;
          goto LABEL_49;
        }
        return 0;
      }
      if (v14 > 0xFFFFFECC)
      {
        double v20 = (double)v27;
        unsigned int v21 = v26 - v25;
      }
      else
      {
        if (v14 < 0xFFFFFD9A) {
          return 0;
        }
        double v20 = ((double)(v27 % 0xA) + (double)(10 * (v27 / 0xA))) / 1.0e307;
        unsigned int v21 = -307 - v14;
      }
      goto LABEL_46;
    }
    *a1 = (uint64_t)v11;
    uint64_t v18 = v26;
    goto LABEL_28;
  }
  uint64_t v18 = v26;
  if (!v26)
  {
    if (v27 != 1)
    {
      double v22 = (double)v27;
      goto LABEL_48;
    }
    if ((boost::spirit::qi::ureal_policies<double>::parse_nan<char const*,double>((unsigned __int8 **)a1, (unsigned __int8 **)a2, &v28) & 1) == 0&& !boost::spirit::qi::ureal_policies<double>::parse_inf<char const*,double>((unsigned __int8 **)a1, (unsigned __int8 **)a2, &v28))
    {
      double v22 = (double)v27;
      goto LABEL_48;
    }
    goto LABEL_49;
  }
LABEL_28:
  unsigned int v19 = -(int)v18;
  if ((int)v18 <= 0)
  {
    if (v19 <= 0x134)
    {
      double v15 = (double)v27;
      double v16 = boost::spirit::traits::pow10_helper<double,void>::call::exponents[v19];
      goto LABEL_34;
    }
  }
  else
  {
    if (v19 > 0xFFFFFECC)
    {
      double v20 = (double)v27;
      double v23 = boost::spirit::traits::pow10_helper<double,void>::call::exponents[v18];
LABEL_47:
      double v22 = v20 / v23;
      goto LABEL_48;
    }
    double v20 = ((double)(v27 % 0xA) + (double)(10 * (v27 / 0xA))) / 1.0e307;
    double v28 = v20;
    if (v19 >= 0xFFFFFD9A)
    {
      unsigned int v21 = v18 - 307;
LABEL_46:
      double v23 = boost::spirit::traits::pow10_helper<double,void>::call::exponents[v21];
      goto LABEL_47;
    }
  }
LABEL_49:
  double v24 = v28;
  if (v9) {
    double v24 = -v28;
  }
  *a3 = v24;
  return 1;
}

uint64_t boost::spirit::qi::ureal_policies<double>::parse_nan<char const*,double>(unsigned __int8 **a1, unsigned __int8 **a2, void *a3)
{
  long long v3 = *a1;
  if (*a1 != *a2 && (*v3 | 0x20) == 0x6E)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 3;
    int v6 = 110;
    while (&v3[v4] != *a2)
    {
      int v7 = v3[v4];
      if (v6 != v7 && aNan_0[v4] != v7) {
        break;
      }
      int v6 = aNan[++v4];
      if (v4 == 3)
      {
        *a1 = v5;
        if (v5 == *a2 || *v5 != 40)
        {
LABEL_17:
          *a3 = 0x7FF8000000000000;
          return 1;
        }
        BOOL v9 = v3 + 4;
        while (v9 != *a2)
        {
          int v10 = *v9++;
          if (v10 == 41)
          {
            *a1 = v9;
            goto LABEL_17;
          }
        }
        return 0;
      }
    }
  }
  return 0;
}

uint64_t boost::spirit::qi::ureal_policies<double>::parse_inf<char const*,double>(unsigned __int8 **a1, unsigned __int8 **a2, void *a3)
{
  long long v3 = *a1;
  if (*a1 != *a2 && (*v3 | 0x20) == 0x69)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 3;
    int v6 = 105;
    while (&v3[v4] != *a2)
    {
      int v7 = v3[v4];
      if (v6 != v7 && aInf_0[v4] != v7) {
        break;
      }
      int v6 = aInf[++v4];
      if (v4 == 3)
      {
        uint64_t v9 = 0;
        *a1 = v5;
        int v10 = v3 + 8;
        int v11 = 105;
        while (&v5[v9] != *a2)
        {
          int v12 = v5[v9];
          if (v11 != v12 && aInity_0[v9] != v12) {
            break;
          }
          int v11 = aInity[++v9];
          if (v9 == 5)
          {
            *a1 = v10;
            break;
          }
        }
        *a3 = 0x7FF0000000000000;
        return 1;
      }
    }
  }
  return 0;
}

uint64_t boost::spirit::qi::ureal_policies<double>::parse_frac_n<char const*,unsigned long>(uint64_t *a1, uint64_t *a2, unint64_t *a3, _DWORD *a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  unint64_t v6 = *a3;
  uint64_t v7 = 1;
  while (1)
  {
    uint64_t v8 = *(unsigned __int8 *)(v4 + v7 - 1);
    if ((v8 - 48) > 9) {
      break;
    }
    if (v6 > 0x1999999999999999 || (v6 *= 10, v6 > 47 - v8))
    {
      uint64_t v5 = v4 + v7 - 1;
LABEL_20:
      *a1 = v5;
      *a3 = v6;
      goto LABEL_27;
    }
    unint64_t v6 = v6 + v8 - 48;
    if (v4 + v7 == v5) {
      goto LABEL_15;
    }
    uint64_t v9 = *(unsigned __int8 *)(v4 + v7);
    if ((v9 - 48) > 9)
    {
      uint64_t v5 = v4 + v7;
      if (!v7) {
        return 0;
      }
      goto LABEL_26;
    }
    if (v6 > 0x1999999999999999 || (v6 *= 10, v6 > 47 - v9))
    {
      uint64_t v5 = v4 + v7;
      goto LABEL_20;
    }
    unint64_t v6 = v6 + v9 - 48;
    int v10 = (unsigned __int8 *)(v4 + v7 + 1);
    if (v10 == (unsigned __int8 *)v5) {
      goto LABEL_15;
    }
    uint64_t v11 = *v10;
    if ((v11 - 48) > 9)
    {
      uint64_t v12 = v7 + 1;
      goto LABEL_25;
    }
    if (v6 > 0x1999999999999999 || (v6 *= 10, v6 > 47 - v11))
    {
      uint64_t v5 = v4 + v7 + 1;
      goto LABEL_20;
    }
    unint64_t v6 = v6 + v11 - 48;
    v7 += 3;
    if (v4 + v7 - 1 == v5)
    {
LABEL_15:
      if (v5 == v4) {
        return 0;
      }
      goto LABEL_26;
    }
  }
  uint64_t v12 = v7 - 1;
LABEL_25:
  uint64_t v5 = v12 + v4;
  if (!v12) {
    return 0;
  }
LABEL_26:
  *a3 = v6;
  *a1 = v5;
LABEL_27:
  *a4 = v5 - v4;
  unsigned int v14 = (unsigned __int8 *)*a2;
  if (v5 != *a2)
  {
    uint64_t v15 = 0;
    while (1)
    {
      unsigned int v16 = *(unsigned __int8 *)(v5 + v15) - 48;
      if (*(unsigned char *)(v5 + v15) != 48) {
        break;
      }
      ++v15;
      if ((unsigned __int8 *)(v5 + v15) == v14) {
        goto LABEL_43;
      }
    }
    uint64_t v17 = (unsigned __int8 *)(v5 + v15);
    if (v16 >= 0xA)
    {
      unsigned int v14 = v17;
      if (!v15) {
        return 1;
      }
    }
    else if (v17 + 1 != v14)
    {
      uint64_t v18 = v17 + 3;
      while (1)
      {
        if (*(v18 - 2) - 48 > 9)
        {
          unsigned int v14 = v18 - 2;
          goto LABEL_43;
        }
        if (v18 - 1 == v14) {
          goto LABEL_43;
        }
        if (*(v18 - 1) - 48 > 9)
        {
          unsigned int v14 = v18 - 1;
          goto LABEL_43;
        }
        if (v18 == v14) {
          goto LABEL_43;
        }
        if (*v18 - 48 > 9) {
          break;
        }
        unsigned int v19 = v18 + 1;
        v18 += 3;
        if (v19 == v14) {
          goto LABEL_43;
        }
      }
      unsigned int v14 = v18;
    }
LABEL_43:
    *a1 = (uint64_t)v14;
  }
  return 1;
}

uint64_t boost::spirit::qi::ureal_policies<double>::parse_exp_n<char const*>(uint64_t *a1, uint64_t *a2, int *a3)
{
  long long v3 = (unsigned __int8 *)*a1;
  if (*a1 == *a2) {
    return 0;
  }
  int v5 = *v3;
  if ((v5 == 45 || v5 == 43) && (*a1 = (uint64_t)(v3 + 1), v5 == 45))
  {
    if ((boost::spirit::qi::detail::extract_int<int,10u,1u,-1,boost::spirit::qi::detail::negative_accumulator<10u>,false,false>::parse_main<char const*,int>(a1, a2, a3) & 1) == 0)
    {
LABEL_6:
      uint64_t result = 0;
      *a1 = (uint64_t)v3;
      return result;
    }
  }
  else if ((boost::spirit::qi::detail::extract_int<int,10u,1u,-1,boost::spirit::qi::detail::positive_accumulator<10u>,false,false>::parse_main<char const*,int>(a1, a2, a3) & 1) == 0)
  {
    goto LABEL_6;
  }
  return 1;
}

uint64_t boost::spirit::qi::detail::extract_int<unsigned long,10u,1u,-1,boost::spirit::qi::detail::positive_accumulator<10u>,false,false>::parse_main<char const*,unsigned long>(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  unint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = *(unsigned __int8 *)(v3 + v5);
    if (v6 != 48) {
      break;
    }
    ++v5;
    if (v3 + v5 == v4)
    {
      *a3 = 0;
LABEL_35:
      *a1 = v4;
      return 1;
    }
  }
  uint64_t v7 = v3 + v5;
  if ((v6 - 48) < 0xA)
  {
    unint64_t v8 = v6 - 48;
    if (v7 + 1 != v4)
    {
      while (1)
      {
        uint64_t v9 = *(unsigned __int8 *)(v3 + v5 + 1);
        if ((v9 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 1;
          goto LABEL_34;
        }
        if (v5 > 0x11)
        {
          if (v8 > 0x1999999999999999 || (v8 *= 10, v8 > 47 - v9))
          {
LABEL_30:
            uint64_t result = 0;
            *a3 = v8;
            return result;
          }
        }
        else
        {
          v8 *= 10;
        }
        unint64_t v8 = v8 + v9 - 48;
        int v10 = (unsigned __int8 *)(v3 + v5 + 2);
        if (v10 == (unsigned __int8 *)v4) {
          goto LABEL_34;
        }
        uint64_t v11 = *v10;
        if ((v11 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 2;
          goto LABEL_34;
        }
        if (v5 + 1 > 0x11)
        {
          if (v8 > 0x1999999999999999) {
            goto LABEL_30;
          }
          v8 *= 10;
          if (v8 > 47 - v11) {
            goto LABEL_30;
          }
        }
        else
        {
          v8 *= 10;
        }
        unint64_t v8 = v8 + v11 - 48;
        uint64_t v12 = (unsigned __int8 *)(v3 + v5 + 3);
        if (v12 == (unsigned __int8 *)v4) {
          goto LABEL_34;
        }
        uint64_t v13 = *v12;
        if ((v13 - 48) > 9) {
          break;
        }
        if (v5 + 2 > 0x11)
        {
          if (v8 > 0x1999999999999999) {
            goto LABEL_30;
          }
          v8 *= 10;
          if (v8 > 47 - v13) {
            goto LABEL_30;
          }
        }
        else
        {
          v8 *= 10;
        }
        unint64_t v8 = v8 + v13 - 48;
        uint64_t v14 = v5 + v3 + 4;
        v5 += 3;
        if (v14 == v4) {
          goto LABEL_34;
        }
      }
      uint64_t v4 = v3 + v5 + 3;
    }
LABEL_34:
    *a3 = v8;
    goto LABEL_35;
  }
  if (!v5) {
    return 0;
  }
  *a3 = 0;
  *a1 = v7;
  return 1;
}

uint64_t boost::spirit::qi::detail::extract_int<int,10u,1u,-1,boost::spirit::qi::detail::negative_accumulator<10u>,false,false>::parse_main<char const*,int>(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  unint64_t v5 = 0;
  while (1)
  {
    int v6 = *(unsigned __int8 *)(v3 + v5);
    if (v6 != 48) {
      break;
    }
    ++v5;
    if (v3 + v5 == v4)
    {
      *a3 = 0;
LABEL_38:
      *a1 = v4;
      return 1;
    }
  }
  uint64_t v7 = v3 + v5;
  if ((v6 - 48) < 0xA)
  {
    int v8 = 48 - v6;
    if (v7 + 1 != v4)
    {
      while (1)
      {
        int v9 = *(unsigned __int8 *)(v3 + v5 + 1);
        int v10 = v9 - 48;
        if ((v9 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 1;
          goto LABEL_37;
        }
        if (v5 > 7)
        {
          if (v8 < -214748364 || (v8 *= 10, v8 < (int)(v10 | 0x80000000)))
          {
LABEL_33:
            uint64_t result = 0;
            *a3 = v8;
            return result;
          }
          v8 -= v10;
        }
        else
        {
          int v8 = 10 * v8 - v9 + 48;
        }
        uint64_t v11 = (unsigned __int8 *)(v3 + v5 + 2);
        if (v11 == (unsigned __int8 *)v4) {
          goto LABEL_37;
        }
        int v12 = *v11;
        int v13 = v12 - 48;
        if ((v12 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 2;
          goto LABEL_37;
        }
        if (v5 + 1 > 7)
        {
          if (v8 < -214748364) {
            goto LABEL_33;
          }
          v8 *= 10;
          if (v8 < (int)(v13 | 0x80000000)) {
            goto LABEL_33;
          }
          v8 -= v13;
        }
        else
        {
          int v8 = 10 * v8 - v12 + 48;
        }
        uint64_t v14 = (unsigned __int8 *)(v3 + v5 + 3);
        if (v14 == (unsigned __int8 *)v4) {
          goto LABEL_37;
        }
        int v15 = *v14;
        int v16 = v15 - 48;
        if ((v15 - 48) > 9) {
          break;
        }
        if (v5 + 2 > 7)
        {
          if (v8 < -214748364) {
            goto LABEL_33;
          }
          v8 *= 10;
          if (v8 < (int)(v16 | 0x80000000)) {
            goto LABEL_33;
          }
          v8 -= v16;
        }
        else
        {
          int v8 = 10 * v8 - v15 + 48;
        }
        uint64_t v17 = v5 + v3 + 4;
        v5 += 3;
        if (v17 == v4) {
          goto LABEL_37;
        }
      }
      uint64_t v4 = v3 + v5 + 3;
    }
LABEL_37:
    *a3 = v8;
    goto LABEL_38;
  }
  if (!v5) {
    return 0;
  }
  *a3 = 0;
  *a1 = v7;
  return 1;
}

uint64_t boost::spirit::qi::detail::extract_int<int,10u,1u,-1,boost::spirit::qi::detail::positive_accumulator<10u>,false,false>::parse_main<char const*,int>(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  unint64_t v5 = 0;
  while (1)
  {
    int v6 = *(unsigned __int8 *)(v3 + v5) - 48;
    if (*(unsigned char *)(v3 + v5) != 48) {
      break;
    }
    ++v5;
    if (v3 + v5 == v4)
    {
      *a3 = 0;
LABEL_35:
      *a1 = v4;
      return 1;
    }
  }
  uint64_t v7 = v3 + v5;
  if (v6 < 0xA)
  {
    if (v7 + 1 != v4)
    {
      while (1)
      {
        int v8 = *(unsigned __int8 *)(v3 + v5 + 1);
        if ((v8 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 1;
          goto LABEL_34;
        }
        if (v5 > 7)
        {
          if (v6 > 214748364 || (v6 *= 10, v6 > -2147483601 - v8))
          {
LABEL_30:
            uint64_t result = 0;
            *a3 = v6;
            return result;
          }
        }
        else
        {
          v6 *= 10;
        }
        int v6 = v6 + v8 - 48;
        int v9 = (unsigned __int8 *)(v3 + v5 + 2);
        if (v9 == (unsigned __int8 *)v4) {
          goto LABEL_34;
        }
        int v10 = *v9;
        if ((v10 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 2;
          goto LABEL_34;
        }
        if (v5 + 1 > 7)
        {
          if (v6 > 214748364) {
            goto LABEL_30;
          }
          v6 *= 10;
          if (v6 > -2147483601 - v10) {
            goto LABEL_30;
          }
        }
        else
        {
          v6 *= 10;
        }
        int v6 = v6 + v10 - 48;
        uint64_t v11 = (unsigned __int8 *)(v3 + v5 + 3);
        if (v11 == (unsigned __int8 *)v4) {
          goto LABEL_34;
        }
        int v12 = *v11;
        if ((v12 - 48) > 9) {
          break;
        }
        if (v5 + 2 > 7)
        {
          if (v6 > 214748364) {
            goto LABEL_30;
          }
          v6 *= 10;
          if (v6 > -2147483601 - v12) {
            goto LABEL_30;
          }
        }
        else
        {
          v6 *= 10;
        }
        int v6 = v6 + v12 - 48;
        uint64_t v13 = v5 + v3 + 4;
        v5 += 3;
        if (v13 == v4) {
          goto LABEL_34;
        }
      }
      uint64_t v4 = v3 + v5 + 3;
    }
LABEL_34:
    *a3 = v6;
    goto LABEL_35;
  }
  if (!v5) {
    return 0;
  }
  *a3 = 0;
  *a1 = v7;
  return 1;
}

uint64_t boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<double &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(uint64_t **)(a3 + 16);
  uint64_t v4 = **(void ***)(a3 + 8);
  uint64_t v5 = *v3;
  switch(*(unsigned char *)(*v3 + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v6 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          if (*((char *)v6 + 31) < 0) {
            operator delete((void *)v6[1]);
          }
          atomic_ullong *volatile v7 = v6;
          uint64_t v8 = 0x1012C404EF22A49;
          goto LABEL_32;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v9 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          int v10 = (void *)v9[1];
          if (v10)
          {
            v9[2] = (atomic_ullong)v10;
            operator delete(v10);
          }
          atomic_ullong *volatile v7 = v9;
          uint64_t v8 = 0x1080C409938AC02;
          goto LABEL_32;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          unsigned int v19 = (void **)(v11 + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v19);
          goto LABEL_18;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          unsigned int v19 = (void **)(v11 + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v19);
LABEL_18:
          atomic_ullong *volatile v7 = v11;
          uint64_t v8 = 0x1020C405E66F15BLL;
          goto LABEL_32;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v12 + 2);
          atomic_ullong *volatile v7 = v12;
          unsigned int v13 = -235920773;
          goto LABEL_31;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v14 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          int v15 = (void *)v14[6];
          if (v15)
          {
            v14[7] = (atomic_ullong)v15;
            operator delete(v15);
          }
          int v16 = (void *)v14[3];
          if (v16)
          {
            void v14[4] = (atomic_ullong)v16;
            operator delete(v16);
          }
          uint64_t v17 = (std::__shared_weak_count *)v14[2];
          if (v17) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v17);
          }
          atomic_ullong *volatile v7 = v14;
          unsigned int v13 = 2071181815;
LABEL_31:
          uint64_t v8 = v13 | 0x1030C4000000000;
LABEL_32:
          MEMORY[0x22A614FA0](v7, v8);
        }
      }
      break;
    default:
      break;
  }
  *(void *)uint64_t v5 = 0;
  *(_DWORD *)(v5 + 8) = 0;
  *(unsigned char *)(v5 + 12) = 1;
  *(void *)uint64_t v5 = *v4;
  return v5;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = 0;
  uint64_t v8 = *a2;
  if (!boost::spirit::qi::any_int_parser<long long,10u,1u,-1>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,long long>(a1, a2, a3, a4, a5, &v11))return 0; {
  uint64_t v9 = 1;
  }
  char v13 = 1;
  atomic_ullong *volatile v12 = &v11;
  v14[0] = a1 + 1;
  v14[1] = &v12;
  v14[2] = a4;
  v14[3] = &v13;
  boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<long long &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)&v15, a1 + 1, (uint64_t)v14);
  if (!v13)
  {
    uint64_t v9 = 0;
    *a2 = v8;
  }
  return v9;
}

uint64_t boost::spirit::qi::any_int_parser<long long,10u,1u,-1>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,long long>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  atomic_ullong *volatile v6 = (unsigned __int8 *)*a2;
  uint64_t v7 = *a3;
  if (*a2 == *a3) {
    return 0;
  }
  int v9 = *v6;
  if ((boost::spirit::char_encoding::iso8859_1_char_types[*v6] & 0x40) != 0)
  {
    int v10 = v6 + 1;
    while (1)
    {
      *a2 = (uint64_t)v10;
      uint64_t v7 = *a3;
      if (v10 == (unsigned __int8 *)*a3) {
        return 0;
      }
      int v11 = *v10++;
      int v9 = v11;
      if ((boost::spirit::char_encoding::iso8859_1_char_types[v11] & 0x40) == 0)
      {
        atomic_ullong *volatile v6 = v10 - 1;
        break;
      }
    }
  }
  if (v6 == (unsigned __int8 *)v7) {
    return 0;
  }
  if ((v9 == 45 || v9 == 43) && (*a2 = (uint64_t)(v6 + 1), v9 == 45))
  {
    if ((boost::spirit::qi::detail::extract_int<long long,10u,1u,-1,boost::spirit::qi::detail::negative_accumulator<10u>,false,false>::parse_main<char const*,long long>(a2, a3, a6) & 1) == 0)
    {
LABEL_12:
      uint64_t result = 0;
      *a2 = (uint64_t)v6;
      return result;
    }
  }
  else if ((boost::spirit::qi::detail::extract_int<long long,10u,1u,-1,boost::spirit::qi::detail::positive_accumulator<10u>,false,false>::parse_main<char const*,long long>(a2, a3, a6) & 1) == 0)
  {
    goto LABEL_12;
  }
  return 1;
}

uint64_t boost::spirit::qi::detail::extract_int<long long,10u,1u,-1,boost::spirit::qi::detail::negative_accumulator<10u>,false,false>::parse_main<char const*,long long>(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  unint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = *(unsigned __int8 *)(v3 + v5);
    if (v6 != 48) {
      break;
    }
    ++v5;
    if (v3 + v5 == v4)
    {
      *a3 = 0;
LABEL_38:
      *a1 = v4;
      return 1;
    }
  }
  uint64_t v7 = v3 + v5;
  if ((v6 - 48) < 0xA)
  {
    uint64_t v8 = 48 - v6;
    if (v7 + 1 != v4)
    {
      while (1)
      {
        uint64_t v9 = *(unsigned __int8 *)(v3 + v5 + 1);
        if ((v9 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 1;
          goto LABEL_37;
        }
        if (v5 > 0x10)
        {
          if (v8 < (uint64_t)0xF333333333333334
            || (v8 *= 10, uint64_t v10 = v9 - 48, v8 < (uint64_t)(v10 | 0x8000000000000000)))
          {
LABEL_33:
            uint64_t result = 0;
            *a3 = v8;
            return result;
          }
          v8 -= v10;
        }
        else
        {
          uint64_t v8 = 10 * v8 - v9 + 48;
        }
        int v11 = (unsigned __int8 *)(v3 + v5 + 2);
        if (v11 == (unsigned __int8 *)v4) {
          goto LABEL_37;
        }
        uint64_t v12 = *v11;
        if ((v12 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 2;
          goto LABEL_37;
        }
        if (v5 + 1 > 0x10)
        {
          if (v8 < (uint64_t)0xF333333333333334) {
            goto LABEL_33;
          }
          v8 *= 10;
          uint64_t v13 = v12 - 48;
          if (v8 < (uint64_t)(v13 | 0x8000000000000000)) {
            goto LABEL_33;
          }
          v8 -= v13;
        }
        else
        {
          uint64_t v8 = 10 * v8 - v12 + 48;
        }
        atomic_ullong *volatile v14 = (unsigned __int8 *)(v3 + v5 + 3);
        if (v14 == (unsigned __int8 *)v4) {
          goto LABEL_37;
        }
        uint64_t v15 = *v14;
        if ((v15 - 48) > 9) {
          break;
        }
        if (v5 + 2 > 0x10)
        {
          if (v8 < (uint64_t)0xF333333333333334) {
            goto LABEL_33;
          }
          v8 *= 10;
          uint64_t v16 = v15 - 48;
          if (v8 < (uint64_t)(v16 | 0x8000000000000000)) {
            goto LABEL_33;
          }
          v8 -= v16;
        }
        else
        {
          uint64_t v8 = 10 * v8 - v15 + 48;
        }
        uint64_t v17 = v5 + v3 + 4;
        v5 += 3;
        if (v17 == v4) {
          goto LABEL_37;
        }
      }
      uint64_t v4 = v3 + v5 + 3;
    }
LABEL_37:
    *a3 = v8;
    goto LABEL_38;
  }
  if (!v5) {
    return 0;
  }
  *a3 = 0;
  *a1 = v7;
  return 1;
}

uint64_t boost::spirit::qi::detail::extract_int<long long,10u,1u,-1,boost::spirit::qi::detail::positive_accumulator<10u>,false,false>::parse_main<char const*,long long>(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  unint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = *(unsigned __int8 *)(v3 + v5);
    if (v6 != 48) {
      break;
    }
    ++v5;
    if (v3 + v5 == v4)
    {
      *a3 = 0;
LABEL_35:
      *a1 = v4;
      return 1;
    }
  }
  uint64_t v7 = v3 + v5;
  if ((v6 - 48) < 0xA)
  {
    uint64_t v8 = v6 - 48;
    if (v7 + 1 != v4)
    {
      while (1)
      {
        uint64_t v9 = *(unsigned __int8 *)(v3 + v5 + 1);
        if ((v9 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 1;
          goto LABEL_34;
        }
        if (v5 > 0x10)
        {
          if (v8 > 0xCCCCCCCCCCCCCCCLL || (v8 *= 10, v8 > (uint64_t)(0x800000000000002FLL - v9)))
          {
LABEL_30:
            uint64_t result = 0;
            *a3 = v8;
            return result;
          }
        }
        else
        {
          v8 *= 10;
        }
        uint64_t v8 = v8 + v9 - 48;
        uint64_t v10 = (unsigned __int8 *)(v3 + v5 + 2);
        if (v10 == (unsigned __int8 *)v4) {
          goto LABEL_34;
        }
        uint64_t v11 = *v10;
        if ((v11 - 48) > 9)
        {
          uint64_t v4 = v3 + v5 + 2;
          goto LABEL_34;
        }
        if (v5 + 1 > 0x10)
        {
          if (v8 > 0xCCCCCCCCCCCCCCCLL) {
            goto LABEL_30;
          }
          v8 *= 10;
          if (v8 > (uint64_t)(0x800000000000002FLL - v11)) {
            goto LABEL_30;
          }
        }
        else
        {
          v8 *= 10;
        }
        uint64_t v8 = v8 + v11 - 48;
        uint64_t v12 = (unsigned __int8 *)(v3 + v5 + 3);
        if (v12 == (unsigned __int8 *)v4) {
          goto LABEL_34;
        }
        uint64_t v13 = *v12;
        if ((v13 - 48) > 9) {
          break;
        }
        if (v5 + 2 > 0x10)
        {
          if (v8 > 0xCCCCCCCCCCCCCCCLL) {
            goto LABEL_30;
          }
          v8 *= 10;
          if (v8 > (uint64_t)(0x800000000000002FLL - v13)) {
            goto LABEL_30;
          }
        }
        else
        {
          v8 *= 10;
        }
        uint64_t v8 = v8 + v13 - 48;
        uint64_t v14 = v5 + v3 + 4;
        v5 += 3;
        if (v14 == v4) {
          goto LABEL_34;
        }
      }
      uint64_t v4 = v3 + v5 + 3;
    }
LABEL_34:
    *a3 = v8;
    goto LABEL_35;
  }
  if (!v5) {
    return 0;
  }
  *a3 = 0;
  *a1 = v7;
  return 1;
}

uint64_t boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<long long &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(uint64_t **)(a3 + 16);
  uint64_t v4 = **(void ***)(a3 + 8);
  uint64_t v5 = *v3;
  switch(*(unsigned char *)(*v3 + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v6 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          if (*((char *)v6 + 31) < 0) {
            operator delete((void *)v6[1]);
          }
          atomic_ullong *volatile v7 = v6;
          uint64_t v8 = 0x1012C404EF22A49;
          goto LABEL_32;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v9 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          uint64_t v10 = (void *)v9[1];
          if (v10)
          {
            v9[2] = (atomic_ullong)v10;
            operator delete(v10);
          }
          atomic_ullong *volatile v7 = v9;
          uint64_t v8 = 0x1080C409938AC02;
          goto LABEL_32;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          unsigned int v19 = (void **)(v11 + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v19);
          goto LABEL_18;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          unsigned int v19 = (void **)(v11 + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v19);
LABEL_18:
          atomic_ullong *volatile v7 = v11;
          uint64_t v8 = 0x1020C405E66F15BLL;
          goto LABEL_32;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v12 + 2);
          atomic_ullong *volatile v7 = v12;
          unsigned int v13 = -235920773;
          goto LABEL_31;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v14 = *(atomic_ullong *volatile *)v5;
        if (*(void *)v5)
        {
          uint64_t v15 = (void *)v14[6];
          if (v15)
          {
            v14[7] = (atomic_ullong)v15;
            operator delete(v15);
          }
          uint64_t v16 = (void *)v14[3];
          if (v16)
          {
            void v14[4] = (atomic_ullong)v16;
            operator delete(v16);
          }
          uint64_t v17 = (std::__shared_weak_count *)v14[2];
          if (v17) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v17);
          }
          atomic_ullong *volatile v7 = v14;
          unsigned int v13 = 2071181815;
LABEL_31:
          uint64_t v8 = v13 | 0x1030C4000000000;
LABEL_32:
          MEMORY[0x22A614FA0](v7, v8);
        }
      }
      break;
    default:
      break;
  }
  *(void *)uint64_t v5 = 0;
  *(_DWORD *)(v5 + 8) = 0;
  *(unsigned char *)(v5 + 12) = 0;
  *(void *)uint64_t v5 = *v4;
  return v5;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  memset(__p, 0, sizeof(__p));
  if (boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::vector<double>>(a1))
  {
    char v9 = 1;
    uint64_t v8 = __p;
    v10[0] = a1 + 1;
    v10[1] = &v8;
    v10[2] = a4;
    v10[3] = &v9;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<double> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)&v11, (uint64_t)(a1 + 1), (uint64_t)v10);
  }
  return 0;
}

void sub_223EB3C1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::vector<double>>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    uint64_t v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::dummy::nonnull;
  }
  else {
    uint64_t v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

uint64_t boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(void *a1)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v4, "call to empty boost::function");
    v4.__vftable = (std::runtime_error_vtbl *)&unk_26D758738;
    boost::throw_exception<boost::bad_function_call>(&v4);
  }
  uint64_t v1 = *(uint64_t (**)(void *))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  long long v2 = a1 + 1;
  return v1(v2);
}

void sub_223EB3D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

void boost::throw_exception<boost::bad_function_call>(const std::runtime_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  std::runtime_error::runtime_error(&v3, a1);
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  int v8 = -1;
  v3.__vftable = (std::runtime_error_vtbl *)&unk_26D7586F0;
  std::runtime_error v4 = &unk_26D758718;
  boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::clone_impl((uint64_t)exception, (uint64_t)&v3);
}

void sub_223EB3DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, void *a11)
{
  a11 = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(v12);
  std::runtime_error::~runtime_error(&a10);
  if (v13) {
    __cxa_free_exception(v11);
  }
  _Unwind_Resume(a1);
}

void boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::~clone_impl(uint64_t a1)
{
  *(void *)(a1 + 16) = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)(a1 + 24));
  std::runtime_error::~runtime_error((std::runtime_error *)a1);
}

{
  uint64_t vars8;

  *(void *)(a1 + 16) = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)(a1 + 24));
  std::runtime_error::~runtime_error((std::runtime_error *)a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::clone_impl(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &unk_26D7542E8;
  std::runtime_error v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&unk_26D758738;
  v4[1].__vftable = (std::runtime_error_vtbl *)&unk_26D754388;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)a1 = &unk_26D758650;
  *(void *)(a1 + 16) = &unk_26D758688;
  *(void *)(a1 + 56) = &unk_26D7586C0;
  uint64_t v11 = 0;
  uint64_t v7 = *(void *)(a2 + 24);
  if (v7)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v7 + 40))(&v10);
    boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::adopt(&v11, v10);
    boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(&v10);
    uint64_t v8 = v11;
  }
  else
  {
    uint64_t v8 = 0;
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::adopt((uint64_t *)(a1 + 24), v8);
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(&v11);
  return a1;
}

{
  uint64_t v4;
  long long v5;

  *(void *)(a1 + 56) = &unk_26D7542E8;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&unk_26D758738;
  std::runtime_error v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &unk_26D754388;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  uint64_t v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &unk_26D758650;
  *(void *)(a1 + 16) = &unk_26D758688;
  *(void *)(a1 + 56) = &unk_26D7586C0;
  return a1;
}

void sub_223EB4044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(&a9);
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(&a10);
  boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::~clone_impl(v10);
  _Unwind_Resume(a1);
}

void boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::clone()
{
}

void sub_223EB4150(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F1C40311038C2);
  _Unwind_Resume(a1);
}

void boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::rethrow(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::clone_impl((uint64_t)exception, a1);
}

void sub_223EB41BC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void non-virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::~clone_impl(void *a1)
{
  uint64_t v1 = (std::runtime_error *)(a1 - 2);
  *a1 = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr(a1 + 1);
  std::runtime_error::~runtime_error(v1);
}

void non-virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::~clone_impl(uint64_t a1)
{
}

void virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::clone()
{
}

void virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::rethrow(void *a1)
{
}

void virtual thunk to'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::~clone_impl(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 40);
  *((void *)v1 + 2) = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)v1 + 3);
  std::runtime_error::~runtime_error((std::runtime_error *)v1);
}

{
  boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call>>::~clone_impl((uint64_t)a1 + *(void *)(*a1 - 40));
}

void boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector(uint64_t a1)
{
  *(void *)(a1 + 16) = &unk_26D754388;
  boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr((uint64_t *)(a1 + 24));
  std::runtime_error::~runtime_error((std::runtime_error *)a1);
  JUMPOUT(0x22A614FA0);
}

void non-virtual thunk to'boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector(uint64_t a1)
{
}

void sub_223EB4488(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<double> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::runtime_error v3 = *(uint64_t **)(a3 + 16);
  uint64_t v4 = *v3;
  switch(*(unsigned char *)(*v3 + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v5 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      if (*((char *)v5 + 31) < 0) {
        operator delete((void *)v5[1]);
      }
      atomic_ullong *volatile v6 = v5;
      uint64_t v7 = 0x1012C404EF22A49;
      goto LABEL_32;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v8 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      char v9 = (void *)v8[1];
      if (v9)
      {
        long long v8[2] = (atomic_ullong)v9;
        operator delete(v9);
      }
      atomic_ullong *volatile v6 = v8;
      uint64_t v7 = 0x1080C409938AC02;
      goto LABEL_32;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      uint64_t v17 = (void **)(v10 + 1);
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v17);
      goto LABEL_18;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      uint64_t v17 = (void **)(v10 + 1);
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v17);
LABEL_18:
      atomic_ullong *volatile v6 = v10;
      uint64_t v7 = 0x1020C405E66F15BLL;
      goto LABEL_32;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)v11 + 2);
      atomic_ullong *volatile v6 = v11;
      unsigned int v12 = -235920773;
      goto LABEL_31;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v13 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      atomic_ullong *volatile v14 = (void *)v13[6];
      if (v14)
      {
        v13[7] = (atomic_ullong)v14;
        operator delete(v14);
      }
      uint64_t v15 = (void *)v13[3];
      if (v15)
      {
        v13[4] = (atomic_ullong)v15;
        operator delete(v15);
      }
      uint64_t v16 = (std::__shared_weak_count *)v13[2];
      if (v16) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v16);
      }
      atomic_ullong *volatile v6 = v13;
      unsigned int v12 = 2071181815;
LABEL_31:
      uint64_t v7 = v12 | 0x1030C4000000000;
LABEL_32:
      MEMORY[0x22A614FA0](v6, v7);
LABEL_33:
      *(void *)uint64_t v4 = 0;
LABEL_34:
      *(void *)uint64_t v4 = 0;
      *(_DWORD *)(v4 + 8) = 0;
      *(unsigned char *)(v4 + 12) = 3;
      operator new();
    default:
      goto LABEL_34;
  }
}

void sub_223EB4A84(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1012C404EF22A49);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  boost::spirit::traits::make_attribute<std::vector<turi::flexible_type>,boost::spirit::unused_type const>::call(v7);
  if (boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::vector<turi::flexible_type>>((uint64_t *)a1))
  {
    char v9 = 1;
    atomic_ullong *volatile v8 = v7;
    v10[0] = (void **)(a1 + 8);
    v10[1] = (void **)&v8;
    v10[2] = a4;
    v10[3] = (void **)&v9;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<turi::flexible_type> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)v11, a1 + 8, (uint64_t)v10);
  }
  v10[0] = (void **)v7;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](v10);
  return 0;
}

void sub_223EB4C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  *(void *)(v10 - 56) = &a10;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)(v10 - 56));
  _Unwind_Resume(a1);
}

void boost::spirit::traits::make_attribute<std::vector<turi::flexible_type>,boost::spirit::unused_type const>::call(void *a1@<X8>)
{
  v2[3] = *MEMORY[0x263EF8340];
  memset(v2, 0, 24);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(a1, 0, 0, 0);
  uint64_t v1 = (void **)v2;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v1);
}

void sub_223EB4CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, char a11)
{
  a10 = (void **)&a11;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::vector<turi::flexible_type>>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    uint64_t v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::dummy::nonnull;
  }
  else {
    uint64_t v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

void boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<turi::flexible_type> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(uint64_t **)(a3 + 16);
  uint64_t v4 = *v3;
  switch(*(unsigned char *)(*v3 + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v5 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      if (*((char *)v5 + 31) < 0) {
        operator delete((void *)v5[1]);
      }
      atomic_ullong *volatile v6 = v5;
      uint64_t v7 = 0x1012C404EF22A49;
      goto LABEL_32;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v8 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      char v9 = (void *)v8[1];
      if (v9)
      {
        long long v8[2] = (atomic_ullong)v9;
        operator delete(v9);
      }
      atomic_ullong *volatile v6 = v8;
      uint64_t v7 = 0x1080C409938AC02;
      goto LABEL_32;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      uint64_t v17 = (void **)(v10 + 1);
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v17);
      goto LABEL_18;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      uint64_t v17 = (void **)(v10 + 1);
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v17);
LABEL_18:
      atomic_ullong *volatile v6 = v10;
      uint64_t v7 = 0x1020C405E66F15BLL;
      goto LABEL_32;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)v11 + 2);
      atomic_ullong *volatile v6 = v11;
      unsigned int v12 = -235920773;
      goto LABEL_31;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v13 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      atomic_ullong *volatile v14 = (void *)v13[6];
      if (v14)
      {
        v13[7] = (atomic_ullong)v14;
        operator delete(v14);
      }
      uint64_t v15 = (void *)v13[3];
      if (v15)
      {
        v13[4] = (atomic_ullong)v15;
        operator delete(v15);
      }
      uint64_t v16 = (std::__shared_weak_count *)v13[2];
      if (v16) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v16);
      }
      atomic_ullong *volatile v6 = v13;
      unsigned int v12 = 2071181815;
LABEL_31:
      uint64_t v7 = v12 | 0x1030C4000000000;
LABEL_32:
      MEMORY[0x22A614FA0](v6, v7);
LABEL_33:
      *(void *)uint64_t v4 = 0;
LABEL_34:
      *(void *)uint64_t v4 = 0;
      *(_DWORD *)(v4 + 8) = 0;
      *(unsigned char *)(v4 + 12) = 4;
      operator new();
    default:
      goto LABEL_34;
  }
}

void sub_223EB5314(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1012C404EF22A49);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  boost::spirit::traits::make_attribute<std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,boost::spirit::unused_type const>::call(v7);
  if (boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>((uint64_t *)a1))
  {
    char v9 = 1;
    atomic_ullong *volatile v8 = v7;
    v10[0] = (void **)(a1 + 8);
    v10[1] = (void **)&v8;
    v10[2] = a4;
    v10[3] = (void **)&v9;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)v11, a1 + 8, (uint64_t)v10);
  }
  v10[0] = (void **)v7;
  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](v10);
  return 0;
}

void sub_223EB54AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  *(void *)(v10 - 56) = &a10;
  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v10 - 56));
  _Unwind_Resume(a1);
}

void boost::spirit::traits::make_attribute<std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,boost::spirit::unused_type const>::call(void *a1@<X8>)
{
  v2[3] = *MEMORY[0x263EF8340];
  memset(v2, 0, 24);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__init_with_size[abi:ne180100]<std::pair<turi::flexible_type,turi::flexible_type>*,std::pair<turi::flexible_type,turi::flexible_type>*>(a1, 0, 0, 0);
  uint64_t v1 = (void **)v2;
  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v1);
}

void sub_223EB5550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, char a11)
{
  a10 = (void **)&a11;
  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    uint64_t v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::dummy::nonnull;
  }
  else {
    uint64_t v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

void boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(uint64_t **)(a3 + 16);
  uint64_t v4 = *v3;
  switch(*(unsigned char *)(*v3 + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v5 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      if (*((char *)v5 + 31) < 0) {
        operator delete((void *)v5[1]);
      }
      atomic_ullong *volatile v6 = v5;
      uint64_t v7 = 0x1012C404EF22A49;
      goto LABEL_32;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v8 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      char v9 = (void *)v8[1];
      if (v9)
      {
        long long v8[2] = (atomic_ullong)v9;
        operator delete(v9);
      }
      atomic_ullong *volatile v6 = v8;
      uint64_t v7 = 0x1080C409938AC02;
      goto LABEL_32;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      uint64_t v17 = (void **)(v10 + 1);
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v17);
      goto LABEL_18;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      uint64_t v17 = (void **)(v10 + 1);
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v17);
LABEL_18:
      atomic_ullong *volatile v6 = v10;
      uint64_t v7 = 0x1020C405E66F15BLL;
      goto LABEL_32;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)v11 + 2);
      atomic_ullong *volatile v6 = v11;
      unsigned int v12 = -235920773;
      goto LABEL_31;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      atomic_ullong *volatile v13 = *(atomic_ullong *volatile *)v4;
      if (!*(void *)v4) {
        goto LABEL_33;
      }
      atomic_ullong *volatile v14 = (void *)v13[6];
      if (v14)
      {
        v13[7] = (atomic_ullong)v14;
        operator delete(v14);
      }
      uint64_t v15 = (void *)v13[3];
      if (v15)
      {
        v13[4] = (atomic_ullong)v15;
        operator delete(v15);
      }
      uint64_t v16 = (std::__shared_weak_count *)v13[2];
      if (v16) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v16);
      }
      atomic_ullong *volatile v6 = v13;
      unsigned int v12 = 2071181815;
LABEL_31:
      uint64_t v7 = v12 | 0x1030C4000000000;
LABEL_32:
      MEMORY[0x22A614FA0](v6, v7);
LABEL_33:
      *(void *)uint64_t v4 = 0;
LABEL_34:
      *(void *)uint64_t v4 = 0;
      *(_DWORD *)(v4 + 8) = 0;
      *(unsigned char *)(v4 + 12) = 5;
      operator new();
    default:
      goto LABEL_34;
  }
}

void sub_223EB5BA4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1012C404EF22A49);
  _Unwind_Resume(a1);
}

BOOL boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4)
{
  atomic_ullong *volatile v5 = *a2;
  if (*a2 != *a3)
  {
    atomic_ullong *volatile v6 = *a2;
    do
    {
      if ((boost::spirit::char_encoding::iso8859_1_char_types[*v6] & 0x40) == 0) {
        break;
      }
      *a2 = ++v6;
    }
    while (v6 != *a3);
  }
  unsigned __int8 v11 = 1;
  atomic_ullong *volatile v10 = &v9;
  v12[0] = a1 + 8;
  v12[1] = &v10;
  v12[2] = a4;
  v12[3] = &v11;
  boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const*,boost::fusion::vector<boost::spirit::unused_type &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)&v13, a1 + 8, (uint64_t)v12);
  int v7 = v11;
  if (!v11) {
    *a2 = v5;
  }
  return v7 != 0;
}

uint64_t boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const*,boost::fusion::vector<boost::spirit::unused_type &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (uint64_t *)(a2 + 8);
  uint64_t v4 = **(void **)(a3 + 16);
  if (a2 + 8 != v4)
  {
    switch(*(unsigned char *)(v4 + 12))
    {
      case 2:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v6 = *(atomic_ullong *volatile *)v4;
          if (!*(void *)v4) {
            goto LABEL_34;
          }
          if (*((char *)v6 + 31) < 0) {
            operator delete((void *)v6[1]);
          }
          atomic_ullong *volatile v7 = v6;
          uint64_t v8 = 0x1012C404EF22A49;
          goto LABEL_33;
        }
        break;
      case 3:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v9 = *(atomic_ullong *volatile *)v4;
          if (!*(void *)v4) {
            goto LABEL_34;
          }
          atomic_ullong *volatile v10 = (void *)v9[1];
          if (v10)
          {
            v9[2] = (atomic_ullong)v10;
            operator delete(v10);
          }
          atomic_ullong *volatile v7 = v9;
          uint64_t v8 = 0x1080C409938AC02;
          goto LABEL_33;
        }
        break;
      case 4:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v4;
          if (!*(void *)v4) {
            goto LABEL_34;
          }
          double v23 = (void **)(v11 + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v23);
          goto LABEL_19;
        }
        break;
      case 5:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v4;
          if (!*(void *)v4) {
            goto LABEL_34;
          }
          double v23 = (void **)(v11 + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v23);
LABEL_19:
          atomic_ullong *volatile v7 = v11;
          uint64_t v8 = 0x1020C405E66F15BLL;
          goto LABEL_33;
        }
        break;
      case 8:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)v4;
          if (!*(void *)v4) {
            goto LABEL_34;
          }
          boost::detail::shared_count::~shared_count((atomic_uint **)v12 + 2);
          atomic_ullong *volatile v7 = v12;
          unsigned int v13 = -235920773;
          goto LABEL_32;
        }
        break;
      case 9:
        if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v14 = *(atomic_ullong *volatile *)v4;
          if (*(void *)v4)
          {
            uint64_t v15 = (void *)v14[6];
            if (v15)
            {
              v14[7] = (atomic_ullong)v15;
              operator delete(v15);
            }
            uint64_t v16 = (void *)v14[3];
            if (v16)
            {
              void v14[4] = (atomic_ullong)v16;
              operator delete(v16);
            }
            uint64_t v17 = (std::__shared_weak_count *)v14[2];
            if (v17) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v17);
            }
            atomic_ullong *volatile v7 = v14;
            unsigned int v13 = 2071181815;
LABEL_32:
            uint64_t v8 = v13 | 0x1030C4000000000;
LABEL_33:
            MEMORY[0x22A614FA0](v7, v8);
          }
LABEL_34:
          *(void *)uint64_t v4 = 0;
        }
        break;
      default:
        break;
    }
    uint64_t v18 = *v3;
    *(void *)(v4 + 5) = *(uint64_t *)((char *)v3 + 5);
    *(void *)uint64_t v4 = v18;
    LODWORD(v18) = *(unsigned __int8 *)(a2 + 20);
    *(unsigned char *)(v4 + 12) = v18;
    BOOL v19 = v18 > 9;
    int v20 = (1 << v18) & 0x33C;
    if (!v19 && v20 != 0) {
      atomic_fetch_add(*(atomic_ullong *volatile *)v4, 1uLL);
    }
  }
  return v4;
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  v2[36] = *(void **)MEMORY[0x263EF8340];
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v2, a2 + 64);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>();
}

void sub_223EB607C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>()
{
}

void sub_223EB6120(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C400BC9F32ALL);
  _Unwind_Resume(a1);
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l>>(uint64_t a1, void *a2)
{
  boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(a2, (uint64_t)&v3);
  __int16 v10 = v3;
  char v11 = v4;
  __int16 v12 = v5;
  char v13 = v6;
  long long v14 = v7;
  long long v15 = v8;
  long long v16 = v9;
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1U_9allocatorIdEEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_ISB_NS1W_ISB_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2J_EEEEvES25_S26_S26_EEEES1N_EESD_EEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES32_(a1 + 32, &v10);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1U_9allocatorIdEEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_ISB_NS1W_ISB_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2J_EEEEvES25_S26_S26_EEEES1N_EESD_EEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES32_(uint64_t a1, __int16 *a2)
{
  long long v2 = *((_OWORD *)a2 + 2);
  long long v5 = *((_OWORD *)a2 + 1);
  __int16 v8 = *a2;
  char v9 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v3 = *((_OWORD *)a2 + 3);
  long long v4 = v2;
  operator new();
}

void sub_223EB6288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  long long v2 = (uint64_t **)a1[1];
  uint64_t v3 = **v2;
  uint64_t v4 = *(unsigned __int16 *)v2[1];
  long long v5 = *(uint64_t ***)(*a1 + 8);
  uint64_t v6 = **v5;
  uint64_t v7 = *(unsigned __int16 *)v5[1];
  __int16 v8 = *(uint64_t ***)(*(void *)*a1 + 8);
  uint64_t v9 = **v8;
  uint64_t v10 = *(unsigned __int16 *)v8[1];
  __int16 v11 = **(_WORD **)(*(void *)(**(void **)*a1 + 8) + 8);
  int v12 = **(unsigned __int16 **)(***(void ***)*a1 + 8);
  uint64_t result = (v12 << 8);
  *(unsigned char *)(a2 + 2) = BYTE1(v12);
  *(_WORD *)a2 = (_WORD)v12 << 8;
  *(unsigned char *)(a2 + 10) = HIBYTE(v11);
  *(_WORD *)(a2 + 8) = v11 << 8;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v3;
  *(void *)(a2 + 56) = v4;
  return result;
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  uint64_t v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t result = *(void *)a2;
      if (*(void *)a2) {
        uint64_t result = MEMORY[0x22A614FA0](result, 0x60C40D76D27DFLL);
      }
      goto LABEL_9;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C2309 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C2309 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(uint64_t *a1, uint64_t *a2, uint64_t *a3, void **a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t *a3, void **a4, uint64_t a5)
{
  if ((boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1, a2, a3, (uint64_t)a4, a5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 8, a2, a3, (uint64_t)a4, a5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t *)(a1 + 16), (uint64_t)a2, (uint64_t)a3, (uint64_t)a4) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 32, (uint64_t)a2,
          (uint64_t)a3,
          a4) & 1) != 0)
  {
    return 1;
  }
  return boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 48, (uint64_t)a2, (uint64_t)a3, a4);
}

void _ZN5boost6spirit2qi4ruleIPKcFN4turi13flexible_typeEvEKNS_5proto7exprns_4exprINS8_6tagns_3tag8terminalENS8_7argsns_4termINS0_3tag9char_codeINSG_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEENS0_11unused_typeESP_E6defineIN4mpl_5BOOL_ILb0EEENSA_INSC_10bitwise_orENSE_5list2IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_INSC_9subscriptENSW_IRNS0_8terminalINSG_12stateful_tagINS5_20strict_real_policiesIdEENSG_7double_EdSP_EEEERKNS_7phoenix5actorINS9_10basic_exprINSC_6assignENSW_INS17_INS0_9attributeILi0EEEEENS17_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSA_ISX_NSW_IRKNSY_INSG_9long_longEEES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNSt3__16vectorIS6_NS21_9allocatorIS6_EEEEvESO_SP_SP_EES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNS22_INS21_4pairIS6_S6_EENS23_IS2I_EEEEvESO_SP_SP_EES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNSA_ISD_NSF_INS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS2X_13parser_configEEEEEEEELl0EEES1K_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRKNSY_INSG_3epsEEERKNS17_INS18_IS19_NSW_IS1C_NS17_INS18_ISD_NSF_IS6_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEEEEvRSQ_RKT0_NST_ILb1EEE(uint64_t a1, uint64_t *a2)
{
  v16[36] = *MEMORY[0x263EF8340];
  _ZNK5boost6spirit6detail11make_binaryINS0_2qi6domainENS_5proto6tagns_3tag10bitwise_orENS0_13meta_compilerIS4_E12meta_grammarELb1EE4implIRKNS5_7exprns_4exprIS8_NS5_7argsns_5list2IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_INS7_9subscriptENSH_IRNS0_8terminalINS0_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSK_7double_EdNS0_11unused_typeEEEEERKNS_7phoenix5actorINSE_10basic_exprINS7_6assignENSH_INSV_INS0_9attributeILi0EEEEENSV_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_9long_longEEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS3_4ruleIPKcFNSt3__16vectorINSM_13flexible_typeENS1S_9allocatorIS1U_EEEEvEKNSF_INS7_8terminalENSG_4termINSK_9char_codeINSK_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEESQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INS1S_4pairIS1U_S1U_EENS1V_IS2K_EEEEvES28_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNSF_IS1Z_NS20_INS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS2Z_13parser_configEEEEEEEELl0EEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_3epsEEERKNSV_INSW_ISX_NSH_IS10_NSV_INSW_IS1Z_NS20_IS1U_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSQ_EclES41_S45_S46_(a2, (uint64_t)&v3);
  __int16 v10 = v3;
  char v11 = v4;
  __int16 v12 = v5;
  char v13 = v6;
  long long v14 = v7;
  long long v15 = v8;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v16, (uint64_t)&v9);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorISB_NS1U_9allocatorISB_EEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2C_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_IN11parser_impl13string_parserES1N_EENS9_INS10_INSJ_10eps_parserENS16_INS19_IS1C_NS1E_IS1H_NS16_INS19_IS21_NS22_ISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES37_(a1 + 32, &v10);
}

void sub_223EB66B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorISB_NS1U_9allocatorISB_EEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2C_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_IN11parser_impl13string_parserES1N_EENS9_INS10_INSJ_10eps_parserENS16_INS19_IS1C_NS1E_IS1H_NS16_INS19_IS21_NS22_ISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES37_(uint64_t a1, __int16 *a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v2 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v2;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, (uint64_t)(a2 + 24));
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorISB_NS1U_9allocatorISB_EEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2C_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_IN11parser_impl13string_parserES1N_EENS9_INS10_INSJ_10eps_parserENS16_INS19_IS1C_NS1E_IS1H_NS16_INS19_IS21_NS22_ISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS36_EE5valueEiE4typeE(v3, (uint64_t)&v4);
}

void sub_223EB67F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  boost::function0<void>::~function0((uint64_t *)va);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va1);
  _Unwind_Resume(a1);
}

void _ZNK5boost6spirit6detail11make_binaryINS0_2qi6domainENS_5proto6tagns_3tag10bitwise_orENS0_13meta_compilerIS4_E12meta_grammarELb1EE4implIRKNS5_7exprns_4exprIS8_NS5_7argsns_5list2IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_INS7_9subscriptENSH_IRNS0_8terminalINS0_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSK_7double_EdNS0_11unused_typeEEEEERKNS_7phoenix5actorINSE_10basic_exprINS7_6assignENSH_INSV_INS0_9attributeILi0EEEEENSV_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_9long_longEEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS3_4ruleIPKcFNSt3__16vectorINSM_13flexible_typeENS1S_9allocatorIS1U_EEEEvEKNSF_INS7_8terminalENSG_4termINSK_9char_codeINSK_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEESQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INS1S_4pairIS1U_S1U_EENS1V_IS2K_EEEEvES28_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNSF_IS1Z_NS20_INS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS2Z_13parser_configEEEEEEEELl0EEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_3epsEEERKNSV_INSW_ISX_NSH_IS10_NSV_INSW_IS1Z_NS20_IS1U_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSQ_EclES41_S45_S46_(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  v18[3] = *MEMORY[0x263EF8340];
  _ZNK5boost5proto6detail17reverse_fold_implINS0_4makeINS_6fusion4nil_EEENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINSB_13meta_compilerINSB_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprISA_NS0_7argsns_5list2IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_INS9_9subscriptENSO_IRNSB_8terminalINSB_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSR_7double_EdNSB_11unused_typeEEEEERKNS_7phoenix5actorINSL_10basic_exprINS9_6assignENSO_INS12_INSB_9attributeILi0EEEEENS12_INSB_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSM_ISP_NSO_IRKNSQ_INSR_9long_longEEES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNSF_4ruleIPKcFNSt3__16vectorINST_13flexible_typeENS1Z_9allocatorIS21_EEEEvEKNSM_INS9_8terminalENSN_4termINSR_9char_codeINSR_5spaceENSB_13char_encoding9iso8859_1EEEEELl0EEESX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNS1W_IS1Y_FNS20_INS1Z_4pairIS21_S21_EENS22_IS2R_EEEEvES2F_SX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNSM_IS26_NS27_INSB_11terminal_exIN11parser_impl3tag17restricted_stringENS4_6vectorIJNS36_13parser_configEEEEEEEELl0EEES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRKNSQ_INSR_3epsEEERKNS12_INS13_IS14_NSO_IS17_NS12_INS13_IS26_NS27_IS21_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSX_Ll2EEclES47_S4B_S4C_(a1, (uint64_t)&v4);
  *(_WORD *)a2 = v4;
  *(unsigned char *)(a2 + 2) = v5;
  *(_WORD *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 10) = v7;
  long long v3 = v9;
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v3;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons(a2 + 48, (uint64_t)&v10);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v18);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v17);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  if (v13 < 0) {
    operator delete(__p);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
}

void sub_223EB690C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t _ZNK5boost5proto6detail17reverse_fold_implINS0_4makeINS_6fusion4nil_EEENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINSB_13meta_compilerINSB_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprISA_NS0_7argsns_5list2IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_INS9_9subscriptENSO_IRNSB_8terminalINSB_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSR_7double_EdNSB_11unused_typeEEEEERKNS_7phoenix5actorINSL_10basic_exprINS9_6assignENSO_INS12_INSB_9attributeILi0EEEEENS12_INSB_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSM_ISP_NSO_IRKNSQ_INSR_9long_longEEES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNSF_4ruleIPKcFNSt3__16vectorINST_13flexible_typeENS1Z_9allocatorIS21_EEEEvEKNSM_INS9_8terminalENSN_4termINSR_9char_codeINSR_5spaceENSB_13char_encoding9iso8859_1EEEEELl0EEESX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNS1W_IS1Y_FNS20_INS1Z_4pairIS21_S21_EENS22_IS2R_EEEEvES2F_SX_SX_EES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRNSM_IS26_NS27_INSB_11terminal_exIN11parser_impl3tag17restricted_stringENS4_6vectorIJNS36_13parser_configEEEEEEEELl0EEES1F_EELl2EEEEELl2EEERKNSM_ISP_NSO_IRKNSQ_INSR_3epsEEERKNS12_INS13_IS14_NSO_IS17_NS12_INS13_IS26_NS27_IS21_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSX_Ll2EEclES47_S4B_S4C_@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  v6[3] = *MEMORY[0x263EF8340];
  boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const&>,2l> const&,boost::fusion::nil_,boost::spirit::unused_type &>::operator()(a1[1], (uint64_t)v5);
  _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorINSQ_13flexible_typeENS1W_9allocatorIS1Y_EEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INS1W_4pairIS1Y_S1Y_EENS1Z_IS2O_EEEEvES2C_SU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSJ_IS23_NS24_INS8_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS33_13parser_configEEEEEEEELl0EEES1C_EELl2EEEEELl2EEENS36_4consINSC_6actionINSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS23_NS24_IS1Y_EELl0EEEEEEELl2EEEEEEENS36_4nil_EEERSU_Ll2EEclES3L_RKS3X_S3Y_(*a1, (uint64_t)v5, a2);
  return boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v6);
}

void sub_223EB69C4(_Unwind_Exception *a1)
{
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v1 + 16);
  _Unwind_Resume(a1);
}

uint64_t _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorINSQ_13flexible_typeENS1W_9allocatorIS1Y_EEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INS1W_4pairIS1Y_S1Y_EENS1Z_IS2O_EEEEvES2C_SU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSJ_IS23_NS24_INS8_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS33_13parser_configEEEEEEEELl0EEES1C_EELl2EEEEELl2EEENS36_4consINSC_6actionINSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS23_NS24_IS1Y_EELl0EEEEEEELl2EEEEEEENS36_4nil_EEERSU_Ll2EEclES3L_RKS3X_S3Y_@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v16[3] = *(atomic_ullong **)MEMORY[0x263EF8340];
  v15[8] = *(unsigned char *)(a2 + 8);
  memset(v16, 0, 13);
  if (v15 != (unsigned char *)a2)
  {
    *(atomic_ullong **)((char *)v16 + 5) = *(atomic_ullong **)(a2 + 21);
    v16[0] = *(atomic_ullong **)(a2 + 16);
    BYTE4(v16[1]) = *(unsigned char *)(a2 + 28);
    if (BYTE4(v16[1]) <= 9u && ((1 << SBYTE4(v16[1])) & 0x33C) != 0) {
      atomic_fetch_add(v16[0], 1uLL);
    }
  }
  boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>,boost::spirit::unused_type &>::operator()(*(void *)(a1 + 8), (uint64_t)v15, (uint64_t)v6);
  _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorINSQ_13flexible_typeENS1W_9allocatorIS1Y_EEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INS1W_4pairIS1Y_S1Y_EENS1Z_IS2O_EEEEvES2C_SU_SU_EES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionIN11parser_impl13string_parserES1A_EENS33_INS34_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS23_NS24_IS1Y_EELl0EEEEEEELl2EEEEEEENS32_4nil_EEEEERSU_Ll2EEclES31_RKS3I_S3J_(*(uint64_t **)a1, (uint64_t)v6, a3);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v14);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v13);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v12);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v11);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v10);
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  return boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v16);
}

void sub_223EB6B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::~cons((uint64_t)va);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v3);
  _Unwind_Resume(a1);
}

void _ZNK5boost5proto6detail17reverse_fold_implINS0_6_stateENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINS8_13meta_compilerINS8_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprIS7_NS0_7argsns_5list2IRKNSJ_IS7_NSL_IRKNSJ_IS7_NSL_IRKNSJ_INS6_9subscriptENSL_IRNS8_8terminalINS8_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSO_7double_EdNS8_11unused_typeEEEEERKNS_7phoenix5actorINSI_10basic_exprINS6_6assignENSL_INSZ_INS8_9attributeILi0EEEEENSZ_INS8_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSJ_ISM_NSL_IRKNSN_INSO_9long_longEEES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNSC_4ruleIPKcFNSt3__16vectorINSQ_13flexible_typeENS1W_9allocatorIS1Y_EEEEvEKNSJ_INS6_8terminalENSK_4termINSO_9char_codeINSO_5spaceENS8_13char_encoding9iso8859_1EEEEELl0EEESU_SU_EES1C_EELl2EEEEELl2EEERKNSJ_ISM_NSL_IRNS1T_IS1V_FNS1X_INS1W_4pairIS1Y_S1Y_EENS1Z_IS2O_EEEEvES2C_SU_SU_EES1C_EELl2EEEEELl2EEENS_6fusion4consINSC_6actionIN11parser_impl13string_parserES1A_EENS33_INS34_INSC_10eps_parserENSZ_INS10_IS11_NSL_IS14_NSZ_INS10_IS23_NS24_IS1Y_EELl0EEEEEEELl2EEEEEEENS32_4nil_EEEEERSU_Ll2EEclES31_RKS3I_S3J_(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void v26[3] = *MEMORY[0x263EF8340];
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v18, a2);
  uint64_t v5 = a1[1];
  uint64_t v6 = **(void **)v5;
  uint64_t v7 = **(unsigned __int16 **)(v5 + 8);
  *(void *)&long long v8 = v6;
  *((void *)&v8 + 1) = v7;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)&v9, (uint64_t)v18);
  boost::proto::detail::reverse_fold_impl<boost::proto::_state,boost::proto::detail::reverse_fold_tree_<boost::proto::tagns_::tag::bitwise_or,boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>,boost::spirit::unused_type&,2l>::operator()(*a1, &v8, a3);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v17);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v13);
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v26);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v25);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v24);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v23);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v22);
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v19 < 0) {
    operator delete(v18[0]);
  }
}

void sub_223EB6CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
}

void boost::proto::detail::reverse_fold_impl<boost::proto::_state,boost::proto::detail::reverse_fold_tree_<boost::proto::tagns_::tag::bitwise_or,boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>,boost::spirit::unused_type&,2l>::operator()(uint64_t a1@<X1>, long long *a2@<X2>, uint64_t a3@<X8>)
{
  v27[4] = *MEMORY[0x263EF8340];
  long long v18 = *a2;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v19, (uint64_t)(a2 + 1));
  uint64_t v5 = *(uint64_t ***)(a1 + 8);
  uint64_t v6 = **v5;
  uint64_t v7 = *(unsigned __int16 *)v5[1];
  *(void *)&v8[0] = v6;
  *((void *)&v8[0] + 1) = v7;
  v8[1] = v18;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)&v9, (uint64_t)v19);
  boost::proto::detail::reverse_fold_impl<boost::proto::_state,boost::proto::detail::reverse_fold_tree_<boost::proto::tagns_::tag::bitwise_or,boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>,boost::spirit::unused_type&,2l>::operator()(*(void **)a1, v8, a3);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v17);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v13);
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v27);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v26);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v25);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v24);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v23);
  if (v22 < 0) {
    operator delete(v21);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
}

void sub_223EB6E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

void boost::proto::detail::reverse_fold_impl<boost::proto::_state,boost::proto::detail::reverse_fold_tree_<boost::proto::tagns_::tag::bitwise_or,boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>,boost::spirit::unused_type&,2l>::operator()(void *a1@<X1>, long long *a2@<X2>, uint64_t a3@<X8>)
{
  v30[4] = *MEMORY[0x263EF8340];
  long long v5 = a2[1];
  long long v20 = *a2;
  long long v21 = v5;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v22, (uint64_t)(a2 + 2));
  char v8 = HIBYTE(**(_WORD **)(a1[1] + 8));
  __int16 v7 = **(_WORD **)(a1[1] + 8) << 8;
  long long v9 = v20;
  long long v10 = v21;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v11, (uint64_t)v22);
  __int16 v6 = **(_WORD **)(*a1 + 8);
  *(unsigned char *)(a3 + 2) = HIBYTE(v6);
  *(_WORD *)a3 = v6 << 8;
  *(_WORD *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 10) = v8;
  *(_OWORD *)(a3 + 16) = v9;
  *(_OWORD *)(a3 + 32) = v10;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons(a3 + 48, (uint64_t)v11);
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)&v19);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v18);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v17);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  if (v14 < 0) {
    operator delete(__p);
  }
  if (v12 < 0) {
    operator delete(v11[0]);
  }
  boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr((uint64_t)v30);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v29);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v28);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v27);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v26);
  if (v25 < 0) {
    operator delete(v24);
  }
  if (v23 < 0) {
    operator delete(v22[0]);
  }
}

void sub_223EB7004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

uint64_t boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons(uint64_t a1)
{
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  return a1;
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS17_6tagns_3tag6assignENS17_7argsns_5list2INS16_INS6_9attributeILi0EEEEENS16_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INS10_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1N_EENS9_INS10_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorISB_NS1U_9allocatorISB_EEEEvEKNS18_4exprINS1B_8terminalENS1D_4termISQ_EELl0EEENS6_11unused_typeES26_EEEES1N_EENS9_INS10_INS1S_IKNS1T_IS2_FNS1V_INS1U_4pairISB_SB_EENS1W_IS2C_EEEEvES25_S26_S26_EEEES1N_EENS9_INS10_IN11parser_impl13string_parserES1N_EENS9_INS10_INSJ_10eps_parserENS16_INS19_IS1C_NS1E_IS1H_NS16_INS19_IS21_NS22_ISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS36_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *(_WORD *)a2;
  char v5 = *(unsigned char *)(a2 + 2);
  __int16 v6 = *(_WORD *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 10);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v8 = *(_OWORD *)(a2 + 16);
  long long v9 = v3;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, a2 + 48);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(a1, &v4);
}

void sub_223EB7194(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(void *a1, __int16 *a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  *a1 = 0;
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v3 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v3;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, (uint64_t)(a2 + 24));
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v4);
}

void sub_223EB72A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  v9[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v3 = *(_WORD *)a2;
  char v4 = *(unsigned char *)(a2 + 2);
  __int16 v5 = *(_WORD *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 10);
  long long v2 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v8 = v2;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v9, a2 + 48);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>)::stored_vtable, &v3);
}

void sub_223EB73D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

BOOL boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(std::string **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v5 = *a1;
  v7[0] = a2;
  v7[1] = a3;
  v7[2] = a4;
  void v7[3] = a5;
  return boost::fusion::any<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>,boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>>(v5, (uint64_t)v7);
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(uint64_t a1, __int16 *a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v3 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v3;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, (uint64_t)(a2 + 24));
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(a1, (uint64_t)&v4);
}

void sub_223EB7544(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  __int16 v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v5 + 312);
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 240);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 184);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 144);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 104);
        if (*(char *)(v5 + 95) < 0) {
          operator delete(*(void **)(v5 + 72));
        }
        if (*(char *)(v5 + 71) < 0) {
          operator delete(*(void **)(v5 + 48));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C40F54C5DD6);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C2625 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C2625 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EB76EC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C40F54C5DD6);
  _Unwind_Resume(a1);
}

BOOL boost::fusion::any<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>,boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>>(std::string *a1, uint64_t a2)
{
  long long v3 = *(uint64_t **)a2;
  __int16 v4 = *(uint64_t **)(a2 + 8);
  uint64_t v5 = *(void ***)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if ((boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t)a1, *(uint64_t **)a2, v4, (uint64_t)v5, v6) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t)&a1->__r_.__value_.__l.__size_, v3, v4, (uint64_t)v5, v6) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t)&a1->__r_.__value_.__r.__words[2], (uint64_t)v3, (uint64_t)v4, v5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t)&a1[1].__r_.__value_.__l.__size_, (uint64_t)v3,
          (uint64_t)v4,
          v5) & 1) != 0
    || (boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 2, (unsigned __int8 **)v3, (unsigned __int8 **)v4, (uint64_t)v5, v6) & 1) != 0)
  {
    return 1;
  }
  return boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t)&a1[12].__r_.__value_.__l.__size_, (unsigned __int8 **)v3, (unsigned __int8 **)v4, (uint64_t)v5);
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  v2[36] = *(void **)MEMORY[0x263EF8340];
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v2, a2 + 48);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>();
}

void sub_223EB7948(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>()
{
}

void sub_223EB79E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C40F54C5DD6);
  _Unwind_Resume(a1);
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l>>(uint64_t a1, uint64_t *a2)
{
  boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(a2, (uint64_t)&v3);
  long long v6 = v3;
  __int16 v7 = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v8, (uint64_t)&v5);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSZ_INS9_INSJ_12literal_charINSO_8standardELb0ELb0EEENS9_IS22_SD_EEEEEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES2L_(a1 + 32, &v6);
}

void sub_223EB7B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSZ_INS9_INSJ_12literal_charINSO_8standardELb0ELb0EEENS9_IS22_SD_EEEEEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES2L_(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  __int16 v3 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, (uint64_t)a2 + 24);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSZ_INS9_INSJ_12literal_charINSO_8standardELb0ELb0EEENS9_IS22_SD_EEEEEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2K_EE5valueEiE4typeE(v5, (uint64_t)&v2);
}

void sub_223EB7BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  boost::function0<void>::~function0((uint64_t *)(v9 - 64));
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

void boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  boost::proto::detail::reverse_fold_impl<boost::proto::make<boost::fusion::nil_>,boost::proto::detail::reverse_fold_tree_<boost::proto::tagns_::tag::bitwise_or,boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&,2l>::operator()(a1, (uint64_t)&v3);
  *(_OWORD *)a2 = v3;
  *(_WORD *)(a2 + 16) = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder(a2 + 24, (uint64_t)&v5);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v12);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v11);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v10);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v9);
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v6 < 0) {
    operator delete(v5);
  }
}

void sub_223EB7D04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::proto::detail::reverse_fold_impl<boost::proto::make<boost::fusion::nil_>,boost::proto::detail::reverse_fold_tree_<boost::proto::tagns_::tag::bitwise_or,boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&,2l>::operator()(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::fusion::nil_,boost::spirit::unused_type &>::operator()(a1[1], (uint64_t)v9);
  __int16 v4 = *(uint64_t ***)*a1;
  char v5 = **(unsigned char **)(**(void **)(*a1 + 8) + 8);
  char v6 = ****(unsigned char ****)(*a1 + 8);
  uint64_t v7 = **v4;
  uint64_t v8 = *(unsigned __int16 *)v4[1];
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 17) = v5;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder(a2 + 24, (uint64_t)v9);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v13);
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_223EB7DE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::fusion::nil_,boost::spirit::unused_type &>::operator()(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  boost::spirit::detail::make_action<boost::spirit::qi::domain,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type &>::operator()(a1, (uint64_t)v3);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder(a2, (uint64_t)v3);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v10);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v9);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v8);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v7);
  if (v6 < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
}

void sub_223EB7E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSZ_INS9_INSJ_12literal_charINSO_8standardELb0ELb0EEENS9_IS22_SD_EEEEEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2K_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)a2;
  __int16 v4 = *(_WORD *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(a1, &v3);
}

void sub_223EB7F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(void *a1, long long *a2)
{
  *a1 = 0;
  long long v3 = *a2;
  __int16 v4 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, (uint64_t)a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v3);
}

void sub_223EB7FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)a2;
  __int16 v3 = *(_WORD *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>)::stored_vtable, &v2);
}

void sub_223EB80CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(std::string **a1, unsigned __int8 **a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  __int16 v4 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, (uint64_t)a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(a1, (uint64_t)&v3);
}

void sub_223EB81BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  __int16 v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 216);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 160);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 120);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 80);
        if (*(char *)(v5 + 71) < 0) {
          operator delete(*(void **)(v5 + 48));
        }
        if (*(char *)(v5 + 47) < 0) {
          operator delete(*(void **)(v5 + 24));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C406BA737B4);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C2989 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C2989 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EB833C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C406BA737B4);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(std::string *a1, unsigned __int8 **a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  if (boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t)a1, a2, a3, a4, a5))return 1; {
  return boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 1, a2, a3, (uint64_t)a4, (uint64_t)a5);
  }
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  uint64_t v11 = *a2;
  uint64_t result = boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1, (uint64_t *)&v11, (uint64_t)a3, (uint64_t)a4);
  if (result)
  {
    char v12 = v11;
    uint64_t result = boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((unsigned __int8 *)(a1 + 16), &v12, a3, a4, a5);
    if (result)
    {
      *a2 = v11;
      return 1;
    }
  }
  return result;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v26 = 0;
  LODWORD(v27) = 0;
  BYTE4(v27) = 0;
  *(atomic_ullong **)((char *)v25 + 5) = 0;
  v25[0] = 0;
  boost::initialized<turi::flexible_type>::wrapper::~wrapper((uint64_t)&v26);
  uint64_t v7 = *a2;
  if (boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>((uint64_t *)a1))
  {
    char v23 = 1;
    char v22 = v25;
    uint64_t v26 = (void **)(a1 + 8);
    uint64_t v27 = &v22;
    uint64_t v28 = a4;
    uint64_t v29 = &v23;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<turi::flexible_type &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)v24, a1 + 8, (uint64_t)&v26);
    if (v23)
    {
      uint64_t v8 = 1;
    }
    else
    {
      uint64_t v8 = 0;
      *a2 = v7;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  switch(BYTE4(v25[1]))
  {
    case 2:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v9 = v25[0];
        if (v25[0])
        {
          if (*((char *)v25[0] + 31) < 0) {
            operator delete(*((void **)v25[0] + 1));
          }
          uint64_t v10 = v9;
          uint64_t v11 = 0x1012C404EF22A49;
          goto LABEL_37;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        char v12 = v25[0];
        if (v25[0])
        {
          uint64_t v13 = (void *)v25[0][1];
          if (v13)
          {
            v25[0][2] = (atomic_ullong)v13;
            operator delete(v13);
          }
          uint64_t v10 = v12;
          uint64_t v11 = 0x1080C409938AC02;
          goto LABEL_37;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v14 = v25[0];
        if (v25[0])
        {
          uint64_t v26 = (void **)(v25[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v26);
          goto LABEL_23;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v14 = v25[0];
        if (v25[0])
        {
          uint64_t v26 = (void **)(v25[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v26);
LABEL_23:
          uint64_t v10 = v14;
          uint64_t v11 = 0x1020C405E66F15BLL;
          goto LABEL_37;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v15 = v25[0];
        if (v25[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v25[0] + 2);
          uint64_t v10 = v15;
          unsigned int v16 = -235920773;
          goto LABEL_36;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v17 = v25[0];
        if (v25[0])
        {
          uint64_t v18 = (void *)v25[0][6];
          if (v18)
          {
            v25[0][7] = (atomic_ullong)v18;
            operator delete(v18);
          }
          uint64_t v19 = (void *)v17[3];
          if (v19)
          {
            v17[4] = (atomic_ullong)v19;
            operator delete(v19);
          }
          long long v20 = (std::__shared_weak_count *)v17[2];
          if (v20) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v20);
          }
          uint64_t v10 = v17;
          unsigned int v16 = 2071181815;
LABEL_36:
          uint64_t v11 = v16 | 0x1030C4000000000;
LABEL_37:
          MEMORY[0x22A614FA0](v10, v11);
        }
      }
      break;
    default:
      return v8;
  }
  return v8;
}

void sub_223EB876C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  switch(a14)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v15 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      if (*(char *)(a12 + 31) < 0) {
        operator delete(*(void **)(a12 + 8));
      }
      unsigned int v16 = (void *)v15;
      uint64_t v17 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v20 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      long long v21 = *(void **)(a12 + 8);
      if (v21)
      {
        *(void *)(a12 + 16) = v21;
        operator delete(v21);
      }
      unsigned int v16 = (void *)v20;
      uint64_t v17 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v18 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      a11 = a12 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
      goto LABEL_21;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v18 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      a11 = a12 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
LABEL_21:
      unsigned int v16 = (void *)v18;
      uint64_t v17 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v22 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a12 + 16));
      unsigned int v16 = (void *)v22;
      unsigned int v19 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a12) {
        goto LABEL_27;
      }
      unsigned int v16 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a12);
      unsigned int v19 = 2071181815;
LABEL_25:
      uint64_t v17 = v19 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v16, v17);
LABEL_27:
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_27;
  }
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    __int16 v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::dummy::nonnull;
  }
  else {
    __int16 v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(unsigned __int8 *a1, unsigned __int8 **a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  v7[0] = a2;
  v7[1] = a3;
  v7[2] = a4;
  void v7[3] = a5;
  if (boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>(v7, a1))return 1; {
  else
  }
    return boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>(v7, a1 + 1);
}

uint64_t boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>(unsigned __int8 ***a1, unsigned __int8 *a2)
{
  long long v2 = *a1;
  uint64_t v3 = a1[1];
  __int16 v4 = **a1;
  uint64_t v5 = *v3;
  if (v4 == *v3) {
    return 0;
  }
  unsigned int v6 = *v4;
  if ((boost::spirit::char_encoding::iso8859_1_char_types[*v4] & 0x40) != 0)
  {
    uint64_t v7 = v4 + 1;
    while (1)
    {
      *long long v2 = v7;
      uint64_t v5 = *v3;
      if (v7 == *v3) {
        return 0;
      }
      unsigned int v8 = *v7++;
      unsigned int v6 = v8;
      if ((boost::spirit::char_encoding::iso8859_1_char_types[v8] & 0x40) == 0)
      {
        __int16 v4 = v7 - 1;
        break;
      }
    }
  }
  if (v4 == v5 || *a2 != v6) {
    return 0;
  }
  *long long v2 = v4 + 1;
  return 1;
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v2, a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>();
}

void sub_223EB8B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>()
{
}

void sub_223EB8B9C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C406BA737B4);
  _Unwind_Resume(a1);
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l>>(uint64_t a1, uint64_t *a2)
{
  boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(a2, (uint64_t)&v3);
  long long v6 = v3;
  char v7 = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v8, (uint64_t)&v5);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_12literal_charINSO_8standardELb0ELb0EEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES2I_(a1 + 32, &v6);
}

void sub_223EB8CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_12literal_charINSO_8standardELb0ELb0EEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES2I_(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  char v3 = *((unsigned char *)a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, (uint64_t)a2 + 24);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_12literal_charINSO_8standardELb0ELb0EEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2H_EE5valueEiE4typeE(v5, (uint64_t)&v2);
}

void sub_223EB8D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  boost::function0<void>::~function0((uint64_t *)(v9 - 64));
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  boost::proto::detail::reverse_fold_impl<boost::proto::make<boost::fusion::nil_>,boost::proto::detail::reverse_fold_tree_<boost::proto::tagns_::tag::bitwise_or,boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&,2l>::operator()(a1, (uint64_t)&v3);
  *(_OWORD *)a2 = v3;
  *(unsigned char *)(a2 + 16) = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder(a2 + 24, (uint64_t)&v5);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v12);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v11);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v10);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v9);
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v6 < 0) {
    operator delete(v5);
  }
}

void sub_223EB8E58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::proto::detail::reverse_fold_impl<boost::proto::make<boost::fusion::nil_>,boost::proto::detail::reverse_fold_tree_<boost::proto::tagns_::tag::bitwise_or,boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&,2l>::operator()(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::fusion::nil_,boost::spirit::unused_type &>::operator()(a1[1], (uint64_t)v8);
  char v4 = *(uint64_t ***)*a1;
  char v5 = ***(unsigned char ***)(*a1 + 8);
  uint64_t v6 = **v4;
  uint64_t v7 = *(unsigned __int16 *)v4[1];
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v5;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder(a2 + 24, (uint64_t)v8);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v13);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v12);
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8[0]);
  }
}

void sub_223EB8F28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_12literal_charINSO_8standardELb0ELb0EEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2H_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(a1, &v3);
}

void sub_223EB8FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(void *a1, long long *a2)
{
  *a1 = 0;
  long long v3 = *a2;
  char v4 = *((unsigned char *)a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, (uint64_t)a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v3);
}

void sub_223EB9098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>)::stored_vtable, &v2);
}

void sub_223EB916C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(std::string **a1, uint64_t *a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  char v4 = *((unsigned char *)a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, (uint64_t)a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(a1, (uint64_t)&v3);
}

void sub_223EB925C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  char v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 216);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 160);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 120);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 80);
        if (*(char *)(v5 + 71) < 0) {
          operator delete(*(void **)(v5 + 48));
        }
        if (*(char *)(v5 + 47) < 0) {
          operator delete(*(void **)(v5 + 24));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C4099367000);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C2C0ALL & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C2C0ALL & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EB93D4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C4099367000);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(std::string *a1, uint64_t *a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  if (boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t)a1, a2, a3, a4))return 1; {
  return boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 1, (unsigned __int8 **)a2, a3, a4, a5);
  }
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, unsigned __int8 **a3, uint64_t a4)
{
  uint64_t v10 = (unsigned __int8 *)*a2;
  uint64_t result = boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1, (uint64_t *)&v10, (uint64_t)a3, a4);
  if (result)
  {
    char v8 = *a3;
    if (v10 == *a3) {
      return 0;
    }
    char v9 = v10;
    while ((boost::spirit::char_encoding::iso8859_1_char_types[*v9] & 0x40) != 0)
    {
      if (++v9 == v8) {
        return 0;
      }
    }
    if (v9 == v8 || *(unsigned __int8 *)(a1 + 16) != *v9)
    {
      return 0;
    }
    else
    {
      *a2 = (uint64_t)v10;
      return 1;
    }
  }
  return result;
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v2, a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>();
}

void sub_223EB95EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_functor<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>()
{
}

void sub_223EB9668(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C4099367000);
  _Unwind_Resume(a1);
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::no_skip>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,2l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l>>(uint64_t a1, uint64_t *a2)
{
  boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::no_skip>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,2l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(a2, (uint64_t)&v3);
  long long v6 = v3;
  __int16 v7 = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v8, (uint64_t)&v5);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_17no_skip_directiveINSZ_INS9_INSJ_12literal_charINSO_8standardELb0ELb0EEENS9_IS23_NS9_ISR_SD_EEEEEEEEEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES2O_(a1 + 32, &v6);
}

void sub_223EB9788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_17no_skip_directiveINSZ_INS9_INSJ_12literal_charINSO_8standardELb0ELb0EEENS9_IS23_NS9_ISR_SD_EEEEEEEEEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES2O_(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  __int16 v3 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, (uint64_t)a2 + 24);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_17no_skip_directiveINSZ_INS9_INSJ_12literal_charINSO_8standardELb0ELb0EEENS9_IS23_NS9_ISR_SD_EEEEEEEEEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2N_EE5valueEiE4typeE(v5, (uint64_t)&v2);
}

void sub_223EB9864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  boost::function0<void>::~function0((uint64_t *)(v9 - 64));
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::no_skip>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,2l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  _ZNK5boost5proto6detail17reverse_fold_implINS0_4makeINS_6fusion4nil_EEENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINSB_13meta_compilerINSB_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprISA_NS0_7argsns_5list2IRKNSM_INS9_11shift_rightENSO_IRKNSM_INS9_9subscriptENSO_IRNSF_4ruleIPKcFN4turi13flexible_typeEvEKNSM_INS9_8terminalENSN_4termINSB_3tag9char_codeINSZ_5spaceENSB_13char_encoding9iso8859_1EEEEELl0EEENSB_11unused_typeES18_EERKNS_7phoenix5actorINSL_10basic_exprINS9_6assignENSO_INS1C_INSB_9attributeILi0EEEEENS1C_INSB_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSM_INS9_10address_ofENSN_5list1IRKNSM_ISQ_NSO_IRKNSM_ISX_NSY_INSZ_7no_skipEEELl0EEERKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISX_NSY_INSB_11terminal_exINS10_INSZ_5char_ENS12_8standardEEENS4_6vectorIJcEEEEEEELl0EEES2B_EELl2EEERS17_EELl2EEEEELl2EEEEELl1EEEEELl2EEERKNSM_ISQ_NSO_IRNSM_ISX_NSY_INS21_IN11parser_impl3tag17restricted_stringENS25_IJNS2X_13parser_configEEEEEEEELl0EEES1P_EELl2EEEEELl2EEERKN4mpl_5void_ERS18_Ll2EEclES3D_S3H_S3I_(a1, (uint64_t)&v3);
  *(_OWORD *)a2 = v3;
  *(_WORD *)(a2 + 16) = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder(a2 + 24, (uint64_t)&v5);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v12);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v11);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v10);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v9);
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v6 < 0) {
    operator delete(v5);
  }
}

void sub_223EB9924(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void _ZNK5boost5proto6detail17reverse_fold_implINS0_4makeINS_6fusion4nil_EEENS1_18reverse_fold_tree_INS0_6tagns_3tag10bitwise_orENS_6spirit6detail18make_binary_helperINSB_13meta_compilerINSB_2qi6domainEE12meta_grammarEEEEERKNS0_7exprns_4exprISA_NS0_7argsns_5list2IRKNSM_INS9_11shift_rightENSO_IRKNSM_INS9_9subscriptENSO_IRNSF_4ruleIPKcFN4turi13flexible_typeEvEKNSM_INS9_8terminalENSN_4termINSB_3tag9char_codeINSZ_5spaceENSB_13char_encoding9iso8859_1EEEEELl0EEENSB_11unused_typeES18_EERKNS_7phoenix5actorINSL_10basic_exprINS9_6assignENSO_INS1C_INSB_9attributeILi0EEEEENS1C_INSB_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSM_INS9_10address_ofENSN_5list1IRKNSM_ISQ_NSO_IRKNSM_ISX_NSY_INSZ_7no_skipEEELl0EEERKNSM_ISA_NSO_IRKNSM_ISA_NSO_IRKNSM_ISX_NSY_INSB_11terminal_exINS10_INSZ_5char_ENS12_8standardEEENS4_6vectorIJcEEEEEEELl0EEES2B_EELl2EEERS17_EELl2EEEEELl2EEEEELl1EEEEELl2EEERKNSM_ISQ_NSO_IRNSM_ISX_NSY_INS21_IN11parser_impl3tag17restricted_stringENS25_IJNS2X_13parser_configEEEEEEEELl0EEES1P_EELl2EEEEELl2EEERKN4mpl_5void_ERS18_Ll2EEclES3D_S3H_S3I_(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  boost::spirit::detail::make_binary_helper<boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::fusion::nil_,boost::spirit::unused_type &>::operator()(a1[1], (uint64_t)v9);
  __int16 v4 = *(uint64_t ***)*a1;
  char v5 = **(unsigned char **)(**(void **)(**(void **)(*a1 + 8) + 8) + 8);
  char v6 = ****(unsigned char ****)(**(void **)(*a1 + 8) + 8);
  uint64_t v7 = **v4;
  uint64_t v8 = *(unsigned __int16 *)v4[1];
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 17) = v5;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder(a2 + 24, (uint64_t)v9);
  std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table((uint64_t)&v16);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v15);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v14);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v13);
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_223EB9A08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSL_5spaceENS6_13char_encoding9iso8859_1EEEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS15_6tagns_3tag8terminalENS15_7argsns_4termISQ_EELl0EEENS6_11unused_typeES1G_EEEENS_7phoenix5actorINS16_10basic_exprINS19_6assignENS1B_5list2INS1L_INS6_9attributeILi0EEEEENS1L_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_17no_skip_directiveINSZ_INS9_INSJ_12literal_charINSO_8standardELb0ELb0EEENS9_IS23_NS9_ISR_SD_EEEEEEEEEEEESD_EEEEEENS9_INS11_IN11parser_impl13string_parserES1X_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2N_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)a2;
  __int16 v4 = *(_WORD *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(a1, &v3);
}

void sub_223EB9AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(void *a1, long long *a2)
{
  *a1 = 0;
  long long v3 = *a2;
  __int16 v4 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, (uint64_t)a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v3);
}

void sub_223EB9B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)a2;
  __int16 v3 = *(_WORD *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>)::stored_vtable, &v2);
}

void sub_223EB9C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(std::string **a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  __int16 v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 216);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 160);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 120);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 80);
        if (*(char *)(v5 + 71) < 0) {
          operator delete(*(void **)(v5 + 48));
        }
        if (*(char *)(v5 + 47) < 0) {
          operator delete(*(void **)(v5 + 24));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C406BA737B4);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C2E6ELL & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C2E6ELL & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EB9DFC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C406BA737B4);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(std::string *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  if (boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>((uint64_t)a1, a2, a3, a4))return 1; {
  return boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 1, a2, a3, a4, a5);
  }
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4)
{
  char v10 = *a2;
  uint64_t result = boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1, (uint64_t *)&v10, (uint64_t)a3, a4);
  if (result)
  {
    if (v10 != *a3
      && ((uint64_t v8 = *v10, *(unsigned __int8 *)(a1 + 16) != v8)
        ? (BOOL v9 = *(unsigned __int8 *)(a1 + 17) == v8)
        : (BOOL v9 = 1),
          v9 || (boost::spirit::char_encoding::iso8859_1_char_types[v8] & 0x40) != 0))
    {
      *a2 = v10;
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::modulus,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::no_skip>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::dereference,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,1l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,2l> const&>,2l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>>,2l>>()
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorINSA_4pairIN4turi13flexible_typeESE_EENSA_9allocatorISF_EEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSS_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSQ_6detail13parser_binderINSQ_8sequenceINS9_INSQ_12literal_charINSV_8standardELb1ELb0EEENS9_INSQ_8optionalINSQ_4listINSQ_9referenceIKNSQ_4ruleIS2_FSF_vEKNS_5proto7exprns_4exprINS1F_6tagns_3tag8terminalENS1F_7argsns_4termISX_EELl0EEENS6_11unused_typeES1Q_EEEENSQ_17no_skip_directiveINSQ_11alternativeINS9_INS16_INS9_INSQ_6kleeneISY_EENS9_INS17_IS18_Lb0ELb0EEESK_EEEEEENS9_ISY_SK_EEEEEEEEEEEENS9_IS19_SK_EEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERS12_E4typeES2H_()
{
}

void sub_223EBA050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  __int16 v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t result = *(void *)a2;
      if (*(void *)a2) {
        uint64_t result = MEMORY[0x22A614FA0](result, 0x1060C40861DB1C4);
      }
      goto LABEL_9;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C3126 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C3126 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(*a1, a2, a3, a4, a5, *a4);
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v9 = *a2;
  v10[0] = &v9;
  v10[1] = a3;
  v10[2] = a4;
  v10[3] = a5;
  uint64_t v11 = a6;
  if (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>((unsigned __int8 ***)v10, (unsigned __int8 *)a1) & 1) != 0|| boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(v10, (uint64_t *)(a1 + 8), v11)|| (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>((unsigned __int8 ***)v10, (unsigned __int8 *)(a1 + 24)))
  {
    return 0;
  }
  *a2 = v9;
  return 1;
}

uint64_t boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>(unsigned __int8 ***a1, unsigned __int8 *a2)
{
  long long v2 = *a1;
  __int16 v3 = a1[1];
  __int16 v4 = **a1;
  uint64_t v5 = *v3;
  if (v4 == *v3) {
    return 1;
  }
  int v6 = *v4;
  if ((boost::spirit::char_encoding::iso8859_1_char_types[*v4] & 0x40) != 0)
  {
    uint64_t v7 = v4 + 1;
    while (1)
    {
      *long long v2 = v7;
      uint64_t v5 = *v3;
      if (v7 == *v3) {
        return 1;
      }
      int v8 = *v7++;
      int v6 = v8;
      if ((boost::spirit::char_encoding::iso8859_1_char_types[v8] & 0x40) == 0)
      {
        __int16 v4 = v7 - 1;
        break;
      }
    }
  }
  if (v4 == v5 || *a2 != v6) {
    return 1;
  }
  uint64_t result = 0;
  *long long v2 = v4 + 1;
  return result;
}

uint64_t boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(uint64_t **a1, uint64_t *a2, uint64_t a3)
{
  __int16 v3 = *a1;
  __int16 v4 = a1[3];
  uint64_t v10 = **a1;
  int v6 = &v10;
  long long v7 = *(_OWORD *)(a1 + 1);
  int v8 = v4;
  uint64_t v9 = a3;
  if (boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>>(a2, (uint64_t)&v6))
  {
    *__int16 v3 = v10;
  }
  return 0;
}

BOOL boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>>(uint64_t *a1, uint64_t a2)
{
  BOOL v4 = boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>::dispatch_container<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>>(a2, a1);
  if (!v4)
  {
    do
    {
      uint64_t v5 = *(unsigned __int8 ***)a2;
      int v6 = *(unsigned __int8 ***)(a2 + 8);
      uint64_t v7 = **(void **)a2;
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v10 = *(void *)(a2 + 24);
    }
    while (boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>((uint64_t)(a1 + 1), v5, v6, v8, (uint64_t)&v10)&& !boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>::dispatch_container<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>>(a2, a1));
    **(void **)a2 = v7;
  }
  return !v4;
}

BOOL boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>::dispatch_container<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t v5 = 0;
  int v6 = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  int v9 = 0;
  char v10 = 0;
  BOOL v3 = boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::pair<turi::flexible_type,turi::flexible_type>>(a2);
  if (v3) {
    std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::insert(*(void *)(a1 + 32), *(void *)(*(void *)(a1 + 32) + 8), &v5);
  }
  std::pair<turi::flexible_type,turi::flexible_type>::~pair((uint64_t)&v5);
  return !v3;
}

void sub_223EBA45C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::pair<turi::flexible_type,turi::flexible_type>::~pair((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::pair<turi::flexible_type,turi::flexible_type>>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    BOOL v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::pair<turi::flexible_type,turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::dummy::nonnull;
  }
  else {
    BOOL v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

uint64_t *std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::insert(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  BOOL v4 = (uint64_t *)a2;
  unint64_t v6 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  uint64_t v7 = a1 + 16;
  unint64_t v8 = v9;
  if (v6 >= v9)
  {
    char v10 = *(uint64_t **)a1;
    unint64_t v11 = ((uint64_t)(v6 - *(void *)a1) >> 5) + 1;
    if (v11 >> 59) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = (a2 - (uint64_t)v10) >> 5;
    uint64_t v13 = v8 - (void)v10;
    uint64_t v14 = v13 >> 4;
    if (v13 >> 4 <= v11) {
      uint64_t v14 = ((uint64_t)(v6 - *(void *)a1) >> 5) + 1;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v15 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v14;
    }
    uint64_t v22 = v7;
    if (v15) {
      uint64_t v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<turi::flexible_type,turi::flexible_type>>>(v7, v15);
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v18 = v16;
    unsigned int v19 = &v16[32 * v12];
    uint64_t v20 = v19;
    long long v21 = &v16[32 * v15];
    std::__split_buffer<std::pair<turi::flexible_type,turi::flexible_type>>::push_back[abi:ne180100](&v18, a3);
    BOOL v4 = std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__swap_out_circular_buffer((uint64_t **)a1, &v18, v4);
    std::__split_buffer<std::pair<turi::flexible_type,turi::flexible_type>>::~__split_buffer((uint64_t)&v18);
  }
  else if (a2 == v6)
  {
    std::pair<turi::flexible_type,turi::flexible_type>::pair[abi:ne180100](a2, a3);
    *(void *)(a1 + 8) = v4 + 4;
  }
  else
  {
    std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__move_range(a1, a2, v6, a2 + 32);
    if (v4 <= a3) {
      a3 += 4 * (*(void *)(a1 + 8) > (unint64_t)a3);
    }
    std::pair<turi::flexible_type,turi::flexible_type>::operator=[abi:ne180100]((uint64_t)v4, a3);
  }
  return v4;
}

void sub_223EBA608(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<turi::flexible_type,turi::flexible_type>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__move_range(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 8);
  uint64_t v5 = (uint64_t *)(a2 + v4 - a4);
  uint64_t v6 = v4;
  while ((unint64_t)v5 < a3)
  {
    *(void *)uint64_t v6 = 0;
    *(_DWORD *)(v6 + 8) = 0;
    *(unsigned char *)(v6 + 12) = 0;
    uint64_t v7 = *v5;
    *(void *)(v6 + 5) = *(uint64_t *)((char *)v5 + 5);
    *(void *)uint64_t v6 = v7;
    *(unsigned char *)(v6 + 12) = *((unsigned char *)v5 + 12);
    *((unsigned char *)v5 + 12) = 0;
    *(void *)(v6 + 16) = 0;
    *(_DWORD *)(v6 + 24) = 0;
    *(unsigned char *)(v6 + 28) = 0;
    uint64_t v8 = v5[2];
    *(void *)(v6 + 21) = *(uint64_t *)((char *)v5 + 21);
    *(void *)(v6 + 16) = v8;
    *(unsigned char *)(v6 + 28) = *((unsigned char *)v5 + 28);
    *((unsigned char *)v5 + 28) = 0;
    v6 += 32;
    v5 += 4;
  }
  *(void *)(result + 8) = v6;
  if (v4 != a4)
  {
    uint64_t v9 = v4 - 32;
    uint64_t v10 = 32 * ((v4 - a4) >> 5);
    uint64_t v11 = a2 - 32;
    do
    {
      uint64_t result = std::pair<turi::flexible_type,turi::flexible_type>::operator=[abi:ne180100](v9, (uint64_t *)(v11 + v10));
      v9 -= 32;
      v10 -= 32;
    }
    while (v10);
  }
  return result;
}

uint64_t std::__split_buffer<std::pair<turi::flexible_type,turi::flexible_type>>::push_back[abi:ne180100](void *a1, uint64_t *a2)
{
  uint64_t v4 = a1[2];
  if (v4 == a1[3])
  {
    uint64_t v5 = (uint64_t *)a1[1];
    uint64_t v6 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      uint64_t v14 = v4 - *a1;
      BOOL v13 = v4 == *a1;
      uint64_t v15 = a1[4];
      uint64_t v16 = v14 >> 4;
      if (v13) {
        unint64_t v17 = 1;
      }
      else {
        unint64_t v17 = v16;
      }
      uint64_t v32 = 0;
      uint64_t v33 = v15;
      uint64_t v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<turi::flexible_type,turi::flexible_type>>>(v15, v17);
      uint64_t v20 = &v18[32 * (v17 >> 2)];
      unint64_t v21 = a1[1];
      unint64_t v22 = a1[2] - v21;
      if (v22)
      {
        char v23 = &v20[v22];
        uint64_t v24 = &v18[32 * (v17 >> 2)];
        do
        {
          *(void *)uint64_t v24 = 0;
          *((_DWORD *)v24 + 2) = 0;
          v24[12] = 0;
          uint64_t v25 = *(void *)v21;
          *(void *)(v24 + 5) = *(void *)(v21 + 5);
          *(void *)uint64_t v24 = v25;
          v24[12] = *(unsigned char *)(v21 + 12);
          *(unsigned char *)(v21 + 12) = 0;
          *((void *)v24 + 2) = 0;
          *((_DWORD *)v24 + 6) = 0;
          v24[28] = 0;
          uint64_t v26 = *(void *)(v21 + 16);
          *(void *)(v24 + 21) = *(void *)(v21 + 21);
          *((void *)v24 + 2) = v26;
          v24[28] = *(unsigned char *)(v21 + 28);
          *(unsigned char *)(v21 + 28) = 0;
          v24 += 32;
          v21 += 32;
        }
        while (v24 != v23);
        int64x2_t v27 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v27 = vdupq_n_s64(v21);
        char v23 = &v18[32 * (v17 >> 2)];
      }
      uint64_t v30 = *a1;
      *a1 = v18;
      a1[1] = v20;
      int64x2_t v31 = v27;
      uint64_t v28 = a1[3];
      a1[2] = v23;
      a1[3] = &v18[32 * v19];
      uint64_t v32 = v28;
      std::__split_buffer<std::pair<turi::flexible_type,turi::flexible_type>>::~__split_buffer((uint64_t)&v30);
      uint64_t v4 = a1[2];
    }
    else
    {
      uint64_t v7 = v6 >> 5;
      BOOL v8 = v6 >> 5 < -1;
      uint64_t v9 = (v6 >> 5) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      if (v5 == (uint64_t *)v4)
      {
        uint64_t v12 = &v5[-4 * (v10 >> 1)];
      }
      else
      {
        do
        {
          std::pair<turi::flexible_type,turi::flexible_type>::operator=[abi:ne180100]((uint64_t)&v5[4 * v11], v5);
          v5 += 4;
        }
        while (v5 != (uint64_t *)v4);
        uint64_t v4 = a1[1];
        uint64_t v12 = &v5[4 * v11];
      }
      a1[1] = v4 + 32 * v11;
      a1[2] = v12;
      uint64_t v4 = (uint64_t)v12;
    }
  }
  uint64_t result = std::pair<turi::flexible_type,turi::flexible_type>::pair[abi:ne180100](v4, a2);
  a1[2] += 32;
  return result;
}

uint64_t *std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__swap_out_circular_buffer(uint64_t **a1, void *a2, uint64_t *a3)
{
  uint64_t result = (uint64_t *)a2[1];
  uint64_t v5 = *a1;
  uint64_t v6 = result;
  if (*a1 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      BOOL v8 = &result[v7];
      uint64_t v9 = &a3[v7];
      *(v8 - 4) = 0;
      *((_DWORD *)v8 - 6) = 0;
      *((unsigned char *)v8 - 20) = 0;
      uint64_t v10 = a3[v7 - 4];
      *(uint64_t *)((char *)v8 - 27) = *(uint64_t *)((char *)&a3[v7 - 3] - 3);
      *(v8 - 4) = v10;
      *((unsigned char *)v8 - 20) = *((unsigned char *)&a3[v7 - 2] - 4);
      *((unsigned char *)v9 - 20) = 0;
      *(v8 - 2) = 0;
      *((_DWORD *)v8 - 2) = 0;
      *((unsigned char *)v8 - 4) = 0;
      uint64_t v11 = a3[v7 - 2];
      *(uint64_t *)((char *)v8 - 11) = *(uint64_t *)((char *)&a3[v7 - 1] - 3);
      *(v8 - 2) = v11;
      *((unsigned char *)v8 - 4) = BYTE4(a3[v7 - 1]);
      *((unsigned char *)v9 - 4) = 0;
      v7 -= 4;
    }
    while (&a3[v7] != v5);
    uint64_t v6 = &result[v7];
  }
  a2[1] = v6;
  uint64_t v12 = a1[1];
  uint64_t v13 = a2[2];
  if (v12 != a3)
  {
    do
    {
      *(void *)uint64_t v13 = 0;
      *(_DWORD *)(v13 + 8) = 0;
      *(unsigned char *)(v13 + 12) = 0;
      uint64_t v14 = *a3;
      *(void *)(v13 + 5) = *(uint64_t *)((char *)a3 + 5);
      *(void *)uint64_t v13 = v14;
      *(unsigned char *)(v13 + 12) = *((unsigned char *)a3 + 12);
      *((unsigned char *)a3 + 12) = 0;
      *(void *)(v13 + 16) = 0;
      *(_DWORD *)(v13 + 24) = 0;
      *(unsigned char *)(v13 + 28) = 0;
      uint64_t v15 = a3[2];
      *(void *)(v13 + 21) = *(uint64_t *)((char *)a3 + 21);
      *(void *)(v13 + 16) = v15;
      *(unsigned char *)(v13 + 28) = *((unsigned char *)a3 + 28);
      *((unsigned char *)a3 + 28) = 0;
      v13 += 32;
      a3 += 4;
    }
    while (a3 != v12);
    uint64_t v6 = (uint64_t *)a2[1];
  }
  a2[2] = v13;
  uint64_t v16 = *a1;
  *a1 = v6;
  a2[1] = v16;
  unint64_t v17 = a1[1];
  a1[1] = (uint64_t *)a2[2];
  a2[2] = v17;
  uint64_t v18 = a1[2];
  a1[2] = (uint64_t *)a2[3];
  a2[3] = v18;
  *a2 = a2[1];
  return result;
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a2;
  BOOL v8 = a3;
  uint64_t v9 = a4;
  uint64_t v10 = a5;
  if ((boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>::operator()<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>(&v7, a1) & 1) == 0)
  {
    uint64_t v5 = *v7;
    if (*v7 == *v8 || (boost::spirit::char_encoding::iso8859_1_char_types[*v5] & 0x40) == 0) {
      return 0;
    }
    *uint64_t v7 = v5 + 1;
  }
  return 1;
}

uint64_t boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>::operator()<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>(unsigned __int8 ***a1, uint64_t a2)
{
  long long v2 = **a1;
  uint64_t v3 = *a1[1];
  if (v2 != v3)
  {
    while ((boost::spirit::char_encoding::iso8859_1_char_types[*v2] & 0x40) != 0)
    {
      if (++v2 == v3)
      {
        long long v2 = *a1[1];
        break;
      }
    }
  }
  if (v2 == v3 || *(unsigned __int8 *)(a2 + 1) != *v2) {
    return 0;
  }
  **a1 = v2 + 1;
  return 1;
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__14pairIN4turi13flexible_typeESD_EENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSO_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSM_6detail13parser_binderINSM_8sequenceINS9_INSM_9referenceIKNSM_4ruleIS2_FSD_vEKNS_5proto7exprns_4exprINS16_6tagns_3tag8terminalENS16_7argsns_4termIST_EELl0EEENS6_11unused_typeES1H_EEEENS9_INSM_12literal_charINSR_8standardELb1ELb0EEENS9_IS1K_SG_EEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSY_E4typeES1X_()
{
}

void sub_223EBAB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  uint64_t v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t result = *(void *)a2;
      if (*(void *)a2) {
        uint64_t result = MEMORY[0x22A614FA0](result, 0x1060C40C13665F2);
      }
      goto LABEL_9;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C3366 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C3366 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

BOOL boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::pair<turi::flexible_type,turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(uint64_t *a1, uint64_t *a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::pair<turi::flexible_type,turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::pair<turi::flexible_type,turi::flexible_type>>(*a1, a2, a3, a4, a5);
}

BOOL boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::pair<turi::flexible_type,turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,std::pair<turi::flexible_type,turi::flexible_type>>(uint64_t a1, uint64_t *a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  uint64_t v7 = *a2;
  long long v9[3] = a5;
  uint64_t v10 = v7;
  v9[0] = (unsigned __int8 **)&v10;
  v9[1] = a3;
  v9[2] = a4;
  BOOL result = boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>((uint64_t *)a1);
  if (result)
  {
    if (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>(v9, (unsigned __int8 *)(a1 + 8)))
    {
      return 0;
    }
    else
    {
      BOOL result = boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>((uint64_t *)(a1 + 16));
      if (result)
      {
        *a2 = v10;
        return 1;
      }
    }
  }
  return result;
}

void boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::modulus,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>>,2l> const&>,2l>>(uint64_t a1, unsigned char ***a2)
{
  char v2 = *a2[1][1];
  uint64_t v3 = (uint64_t ***)*((void *)*a2[1] + 1);
  uint64_t v4 = ***v3;
  unint64_t v5 = *(unsigned __int16 *)(*v3)[1] | ((unint64_t)*((unsigned __int8 *)(*v3)[1] + 2) << 16);
  LOBYTE(v3) = *(unsigned char *)v3[1];
  char v6 = **(unsigned char **)*a2[1];
  char v7 = *(*a2)[1];
  v8[0] = ***a2;
  v8[1] = v7;
  v8[8] = v6;
  uint64_t v9 = v4;
  unint64_t v10 = v5;
  char v11 = (char)v3;
  char v12 = v2;
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorIN4turi13flexible_typeENSA_9allocatorISD_EEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSQ_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSO_6detail13parser_binderINSO_11alternativeINS9_INSO_8sequenceINS9_INSO_12literal_charINST_8standardELb0ELb0EEENS9_INS16_IS17_Lb1ELb0EEESI_EEEEEENS9_INS15_INS9_IS19_NS9_INSO_4listINSO_6actionINSO_9referenceIKNSO_4ruleIS2_FSD_vEKNS_5proto7exprns_4exprINS1I_6tagns_3tag8terminalENS1I_7argsns_4termISV_EELl0EEENS6_11unused_typeES1T_EEEENS_7phoenix5actorINS1J_10basic_exprINS1X_6detail3tag13function_evalENS1O_5list3INS1Z_IS1N_NS1P_INS1X_3stl9push_backEEELl0EEENS1Y_INS6_9attributeILi0EEEEENS1Y_INS6_8argumentILi0EEEEEEELl3EEEEEEES18_EES1A_EEEEEESI_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERS10_E4typeES2U_(a1 + 32, (uint64_t)v8);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorIN4turi13flexible_typeENSA_9allocatorISD_EEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSQ_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSO_6detail13parser_binderINSO_11alternativeINS9_INSO_8sequenceINS9_INSO_12literal_charINST_8standardELb0ELb0EEENS9_INS16_IS17_Lb1ELb0EEESI_EEEEEENS9_INS15_INS9_IS19_NS9_INSO_4listINSO_6actionINSO_9referenceIKNSO_4ruleIS2_FSD_vEKNS_5proto7exprns_4exprINS1I_6tagns_3tag8terminalENS1I_7argsns_4termISV_EELl0EEENS6_11unused_typeES1T_EEEENS_7phoenix5actorINS1J_10basic_exprINS1X_6detail3tag13function_evalENS1O_5list3INS1Z_IS1N_NS1P_INS1X_3stl9push_backEEELl0EEENS1Y_INS6_9attributeILi0EEEEENS1Y_INS6_8argumentILi0EEEEEEELl3EEEEEEES18_EES1A_EEEEEESI_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERS10_E4typeES2U_(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  operator new();
}

void sub_223EBAE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  uint64_t v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)BOOL result = 0;
      return result;
    case 2:
      BOOL result = *(void *)a2;
      if (*(void *)a2) {
        BOOL result = MEMORY[0x22A614FA0](result, 0x1060C40C5F72233);
      }
      goto LABEL_9;
    case 3:
      BOOL result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C34E4 & 0x7FFFFFFFFFFFFFFFLL)
        || (BOOL result = strcmp((const char *)result, (const char *)(0x80000002246C34E4 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(unsigned __int8 **a1, uint64_t *a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(unsigned __int8 *a1, uint64_t *a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  if (boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1, a2, a3, a4, a5))return 1; {
  return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 8, a2, (uint64_t *)a3, (uint64_t *)a4, (uint64_t *)a5, (uint64_t)&boost::spirit::unused);
  }
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(unsigned __int8 *a1, uint64_t *a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  uint64_t v7 = *a2;
  long long v9[3] = a5;
  uint64_t v10 = v7;
  v9[0] = (unsigned __int8 **)&v10;
  v9[1] = a3;
  v9[2] = a4;
  if (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>(v9, a1) & 1) != 0|| (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>(v9, a1 + 1))
  {
    return 0;
  }
  *a2 = v10;
  return 1;
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(unsigned __int8 *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v9 = *a2;
  v11[3] = a5;
  uint64_t v12 = v9;
  v11[0] = &v12;
  v11[1] = a3;
  v11[2] = a4;
  if (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>((unsigned __int8 ***)v11, a1) & 1) != 0|| boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::spirit::unused_type const>(v11, (uint64_t)(a1 + 8), a6)|| (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>((unsigned __int8 ***)v11, a1 + 32))
  {
    return 0;
  }
  *a2 = v12;
  return 1;
}

BOOL boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::spirit::unused_type const>(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[3];
  uint64_t v11 = **a1;
  uint64_t v7 = (unsigned __int8 **)&v11;
  long long v8 = *(_OWORD *)(a1 + 1);
  uint64_t v9 = v4;
  uint64_t v10 = a3;
  BOOL v5 = boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const,mpl_::BOOL_<false>>>(a2, &v7);
  if (v5) {
    *uint64_t v3 = v11;
  }
  return !v5;
}

BOOL boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const,mpl_::BOOL_<false>>>(uint64_t a1, unsigned __int8 ***a2)
{
  BOOL v4 = boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type>((uint64_t *)a1, (uint64_t)*a2, (uint64_t)a2[1], (uint64_t **)a2[2]);
  if (v4)
  {
    while (1)
    {
      BOOL v5 = *a2;
      char v6 = a2[1];
      uint64_t v7 = **a2;
      long long v8 = *v6;
      if (v7 == *v6) {
        break;
      }
      unint64_t v9 = *v7;
      if ((boost::spirit::char_encoding::iso8859_1_char_types[v9] & 0x40) != 0)
      {
        unint64_t v9 = (unint64_t)(v7 + 1);
        while (1)
        {
          *BOOL v5 = v9;
          long long v8 = *v6;
          if ((unsigned __int8 *)v9 == *v6) {
            goto LABEL_12;
          }
          int v12 = *(unsigned __int8 *)v9++;
          int v11 = v12;
          if ((boost::spirit::char_encoding::iso8859_1_char_types[v12] & 0x40) == 0)
          {
            uint64_t v10 = (unsigned __int8 *)(v9 - 1);
            LODWORD(v9) = v11;
            goto LABEL_9;
          }
        }
      }
      uint64_t v10 = **a2;
LABEL_9:
      if (v10 != v8 && *(unsigned __int8 *)(a1 + 16) == v9)
      {
        *BOOL v5 = v10 + 1;
        if (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type>((uint64_t *)a1, (uint64_t)*a2, (uint64_t)a2[1], (uint64_t **)a2[2]))
        {
          continue;
        }
      }
      break;
    }
LABEL_12:
    **a2 = v7;
  }
  return v4;
}

BOOL boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  unint64_t v21 = 0;
  int v22 = 0;
  char v23 = 0;
  *(atomic_ullong **)((char *)v20 + 5) = 0;
  v20[0] = 0;
  boost::initialized<turi::flexible_type>::wrapper::~wrapper((uint64_t)&v21);
  BOOL v6 = boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>(a1);
  if (v6) {
    boost::phoenix::stl::push_back::operator()<std::vector<turi::flexible_type>,turi::flexible_type>((uint64_t)(a1 + 1), *a4, (uint64_t)v20);
  }
  switch(BYTE4(v20[1]))
  {
    case 2:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v7 = v20[0];
        if (v20[0])
        {
          if (*((char *)v20[0] + 31) < 0) {
            operator delete(*((void **)v20[0] + 1));
          }
          long long v8 = v7;
          uint64_t v9 = 0x1012C404EF22A49;
          goto LABEL_34;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v10 = v20[0];
        if (v20[0])
        {
          int v11 = (void *)v20[0][1];
          if (v11)
          {
            v20[0][2] = (atomic_ullong)v11;
            operator delete(v11);
          }
          long long v8 = v10;
          uint64_t v9 = 0x1080C409938AC02;
          goto LABEL_34;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        int v12 = v20[0];
        if (v20[0])
        {
          unint64_t v21 = (void **)(v20[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v21);
          goto LABEL_20;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        int v12 = v20[0];
        if (v20[0])
        {
          unint64_t v21 = (void **)(v20[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v21);
LABEL_20:
          long long v8 = v12;
          uint64_t v9 = 0x1020C405E66F15BLL;
          goto LABEL_34;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v13 = v20[0];
        if (v20[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v20[0] + 2);
          long long v8 = v13;
          unsigned int v14 = -235920773;
          goto LABEL_33;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v15 = v20[0];
        if (v20[0])
        {
          uint64_t v16 = (void *)v20[0][6];
          if (v16)
          {
            v20[0][7] = (atomic_ullong)v16;
            operator delete(v16);
          }
          unint64_t v17 = (void *)v15[3];
          if (v17)
          {
            v15[4] = (atomic_ullong)v17;
            operator delete(v17);
          }
          uint64_t v18 = (std::__shared_weak_count *)v15[2];
          if (v18) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v18);
          }
          long long v8 = v15;
          unsigned int v14 = 2071181815;
LABEL_33:
          uint64_t v9 = v14 | 0x1030C4000000000;
LABEL_34:
          MEMORY[0x22A614FA0](v8, v9);
        }
      }
      break;
    default:
      return v6;
  }
  return v6;
}

void sub_223EBB510(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13)
{
  switch(a12)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a10) {
        goto LABEL_27;
      }
      if (*(char *)(a10 + 31) < 0) {
        operator delete(*(void **)(a10 + 8));
      }
      unsigned int v14 = (void *)a10;
      uint64_t v15 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a10) {
        goto LABEL_27;
      }
      uint64_t v18 = *(void **)(a10 + 8);
      if (v18)
      {
        *(void *)(a10 + 16) = v18;
        operator delete(v18);
      }
      unsigned int v14 = (void *)a10;
      uint64_t v15 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v16 = a10;
      if (!a10) {
        goto LABEL_27;
      }
      a13 = a10 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
      goto LABEL_21;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v16 = a10;
      if (!a10) {
        goto LABEL_27;
      }
      a13 = a10 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
LABEL_21:
      unsigned int v14 = (void *)v16;
      uint64_t v15 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a10) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a10 + 16));
      unsigned int v14 = (void *)a10;
      unsigned int v17 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a10) {
        goto LABEL_27;
      }
      unsigned int v14 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a10);
      unsigned int v17 = 2071181815;
LABEL_25:
      uint64_t v15 = v17 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v14, v15);
LABEL_27:
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_27;
  }
}

uint64_t boost::phoenix::stl::push_back::operator()<std::vector<turi::flexible_type>,turi::flexible_type>(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a2[1];
  if (v4 >= a2[2])
  {
    uint64_t result = std::vector<turi::flexible_type>::__push_back_slow_path<turi::flexible_type const&>(a2, (atomic_ullong *volatile *)a3);
  }
  else
  {
    *(void *)unint64_t v4 = 0;
    *(_DWORD *)(v4 + 8) = 0;
    *(unsigned char *)(v4 + 12) = 0;
    if (v4 != a3)
    {
      atomic_ullong *volatile v5 = *(atomic_ullong *volatile *)a3;
      *(void *)(v4 + 5) = *(void *)(a3 + 5);
      *(void *)unint64_t v4 = v5;
      unsigned int v6 = *(unsigned __int8 *)(a3 + 12);
      *(unsigned char *)(v4 + 12) = v6;
      if (v6 <= 9 && ((1 << v6) & 0x33C) != 0) {
        atomic_fetch_add(*(atomic_ullong *volatile *)v4, 1uLL);
      }
    }
    uint64_t result = v4 + 16;
  }
  a2[1] = result;
  return result;
}

uint64_t *_ZN5boost6spirit2qi4ruleIPKcFNSt3__16vectorIdNS5_9allocatorIdEEEEvEKNS_5proto7exprns_4exprINSB_6tagns_3tag8terminalENSB_7argsns_4termINS0_3tag9char_codeINSJ_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEENS0_11unused_typeESS_E6defineIN4mpl_5BOOL_ILb0EEENSD_INSF_10bitwise_orENSH_5list2IRKNSD_INSF_11shift_rightENSZ_IRKNSD_ISG_NSI_INS0_11terminal_exINSK_INSJ_5char_ENSM_8standardEEENS_6fusion6vectorIJcEEEEEEELl0EEENSD_ISG_NSI_IRS3_EELl0EEEEELl2EEERKNSD_IS10_NSZ_IRKNSD_IS10_NSZ_IS1F_RKNSD_INSF_7modulusENSZ_IRKNSD_INSF_9subscriptENSZ_IRKNS0_8terminalINSJ_7double_EEERKNS_7phoenix5actorINSC_10basic_exprINS1R_6detail3tag13function_evalENSH_5list3INS1T_ISG_NSI_INS1R_3stl9push_backEEELl0EEENS1S_INS0_9attributeILi0EEEEENS1S_INS0_8argumentILi0EEEEEEELl3EEEEEEELl2EEERKNSD_IS1L_NSZ_IRKNSD_ISG_NSI_INSJ_7no_skipEEELl0EEERKNSD_ISY_NSZ_IRKNSD_ISY_NSZ_IRKNSD_IS10_NSZ_IRKNSD_INSF_11dereferenceENSH_5list1IRSR_EELl1EEES1C_EELl2EEES2W_EELl2EEES2O_EELl2EEEEELl2EEEEELl2EEEEELl2EEES1F_EELl2EEEEELl2EEEEEvRST_RKT0_NSW_ILb1EEE(uint64_t a1, unsigned char ***a2)
{
  char v2 = *a2[1][1];
  uint64_t v3 = (void *)*((void *)*a2[1] + 1);
  int v4 = (**(unsigned __int16 **)(*v3 + 8) << 8) | (*(unsigned __int8 *)(*(void *)(*v3 + 8) + 2) << 24);
  char v5 = **(unsigned char **)(*(void *)(**(void **)(v3[1] + 8) + 8) + 8);
  LOBYTE(v3) = **(unsigned char **)(***(void ***)(v3[1] + 8) + 8);
  char v6 = **(unsigned char **)*a2[1];
  char v7 = *(*a2)[1];
  LOBYTE(v9) = ***a2;
  HIBYTE(v9) = v7;
  char v10 = v6;
  int v11 = v4;
  char v12 = (char)v3;
  char v13 = v5;
  char v14 = v2;
  return _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorIdNSA_9allocatorIdEEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSO_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSM_6detail13parser_binderINSM_11alternativeINS9_INSM_8sequenceINS9_INSM_12literal_charINSR_8standardELb0ELb0EEENS9_INS14_IS15_Lb1ELb0EEESG_EEEEEENS9_INS13_INS9_IS17_NS9_INSM_4listINSM_6actionINSM_15any_real_parserIdNSM_13real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS1H_6detail3tag13function_evalENS1J_7argsns_5list3INS1L_INS1J_6tagns_3tag8terminalENS1P_4termINS1H_3stl9push_backEEELl0EEENS1I_INS6_9attributeILi0EEEEENS1I_INS6_8argumentILi0EEEEEEELl3EEEEEEENSM_17no_skip_directiveINS12_INS9_INS13_INS9_INSM_6kleeneISU_EENS9_IS16_SG_EEEEEENS9_IS2E_NS9_ISU_SG_EEEEEEEEEEEES18_EEEEEESG_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSY_E4typeES2W_((uint64_t *)(a1 + 32), &v9);
}

uint64_t *_ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorIdNSA_9allocatorIdEEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi10char_classINS6_3tag9char_codeINSO_5spaceENS6_13char_encoding9iso8859_1EEEEEEEaSINSM_6detail13parser_binderINSM_11alternativeINS9_INSM_8sequenceINS9_INSM_12literal_charINSR_8standardELb0ELb0EEENS9_INS14_IS15_Lb1ELb0EEESG_EEEEEENS9_INS13_INS9_IS17_NS9_INSM_4listINSM_6actionINSM_15any_real_parserIdNSM_13real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS1H_6detail3tag13function_evalENS1J_7argsns_5list3INS1L_INS1J_6tagns_3tag8terminalENS1P_4termINS1H_3stl9push_backEEELl0EEENS1I_INS6_9attributeILi0EEEEENS1I_INS6_8argumentILi0EEEEEEELl3EEEEEEENSM_17no_skip_directiveINS12_INS9_INS13_INS9_INSM_6kleeneISU_EENS9_IS16_SG_EEEEEENS9_IS2E_NS9_ISU_SG_EEEEEEEEEEEES18_EEEEEESG_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSY_E4typeES2W_(uint64_t *a1, __int16 *a2)
{
  char v3 = *((unsigned char *)a2 + 3);
  int v4 = *((_DWORD *)a2 + 1);
  __int16 v5 = a2[4];
  __int16 v6 = *(__int16 *)((char *)a2 + 11);
  char v7 = *((unsigned char *)a2 + 16);
  __int16 v10 = *a2;
  char v11 = v3;
  int v12 = v4;
  __int16 v13 = v5;
  __int16 v14 = v6;
  char v15 = v7;
  __int16 v9 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>)::stored_vtable;
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::swap((uint64_t *)&v9, a1);
  boost::function0<void>::~function0((uint64_t *)&v9);
  return a1;
}

void sub_223EBB8A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C3783 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C3783 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = v4;
      }
      else
      {
        *(void *)a2 = 0;
      }
    }
  }
  else
  {
    *(unsigned char *)a2 = *(unsigned char *)result;
    *(unsigned char *)(a2 + 1) = *(unsigned char *)(result + 1);
    *(unsigned char *)(a2 + 3) = *(unsigned char *)(result + 3);
    *(_DWORD *)(a2 + 4) = *(_DWORD *)(result + 4);
    *(unsigned char *)(a2 + 8) = *(unsigned char *)(result + 8);
    *(unsigned char *)(a2 + 9) = *(unsigned char *)(result + 9);
    *(unsigned char *)(a2 + 11) = *(unsigned char *)(result + 11);
    *(unsigned char *)(a2 + 12) = *(unsigned char *)(result + 12);
    *(unsigned char *)(a2 + 16) = *(unsigned char *)(result + 16);
  }
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::invoke(unsigned __int8 *a1, uint64_t *a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1, a2, a3, a4, a5);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(unsigned __int8 *a1, uint64_t *a2, unsigned __int8 **a3, unsigned __int8 **a4, unsigned __int8 **a5)
{
  if (boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1, a2, a3, a4, a5))return 1; {
  return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(a1 + 3, a2, (uint64_t *)a3, (uint64_t *)a4, (uint64_t *)a5, (uint64_t)&boost::spirit::unused);
  }
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type const>(unsigned __int8 *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v9 = *a2;
  v11[3] = a5;
  uint64_t v12 = v9;
  v11[0] = &v12;
  v11[1] = a3;
  v11[2] = a4;
  if (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>((unsigned __int8 ***)v11, a1) & 1) != 0|| boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::spirit::unused_type const>(v11, (uint64_t)(a1 + 1), a6)|| (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::spirit::unused_type const>((unsigned __int8 ***)v11, a1 + 13))
  {
    return 0;
  }
  *a2 = v12;
  return 1;
}

uint64_t boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>::operator()<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::spirit::unused_type const>(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  char v3 = *a1;
  uint64_t v4 = a1[3];
  uint64_t v11 = **a1;
  char v7 = (unsigned __int8 **)&v11;
  long long v8 = *(_OWORD *)(a1 + 1);
  uint64_t v9 = v4;
  uint64_t v10 = a3;
  int v5 = boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const,mpl_::BOOL_<false>>>(a2, &v7);
  if (v5) {
    *char v3 = v11;
  }
  return v5 ^ 1u;
}

uint64_t boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const,mpl_::BOOL_<false>>>(uint64_t a1, unsigned __int8 ***a2)
{
  uint64_t v4 = boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type>(a1, *a2, a2[1], (uint64_t *)a2[2], (uint64_t)a2[3]);
  if (v4)
  {
    do
    {
      int v5 = *a2;
      __int16 v6 = a2[1];
      char v7 = **a2;
      uint64_t v8 = (uint64_t)a2[2];
      uint64_t v10 = a2[3];
    }
    while (boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>(a1 + 4, v5, v6, v8, (uint64_t)&v10)&& (boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type>(a1, *a2, a2[1], (uint64_t *)a2[2], (uint64_t)a2[3]) & 1) != 0);
    **a2 = v7;
  }
  return v4;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::spirit::unused_type>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9 = 0;
  uint64_t v7 = boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>(a1, a2, a3, (uint64_t)a4, a5, (double *)&v9);
  if (v7) {
    boost::phoenix::stl::push_back::operator()<std::vector<double>,double>(a1 + 1, *a4, &v9);
  }
  return v7;
}

uint64_t boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, double *a6)
{
  for (i = *a2; i != *a3; *a2 = ++i)
  {
    if ((boost::spirit::char_encoding::iso8859_1_char_types[*i] & 0x40) == 0) {
      break;
    }
  }
  return boost::spirit::qi::detail::real_impl<double,boost::spirit::qi::real_policies<double>>::parse<char const*,double>(a2, a3, a6);
}

uint64_t boost::spirit::qi::detail::real_impl<double,boost::spirit::qi::real_policies<double>>::parse<char const*,double>(unsigned __int8 **a1, unsigned __int8 **a2, double *a3)
{
  char v3 = *a1;
  uint64_t v4 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  int v8 = *v3;
  if (v8 == 45 || v8 == 43)
  {
    BOOL v9 = v8 == 45;
    uint64_t v10 = v3 + 1;
    *a1 = v3 + 1;
    uint64_t v4 = *a2;
  }
  else
  {
    BOOL v9 = 0;
    uint64_t v10 = *a1;
  }
  unint64_t v27 = 0;
  double v28 = 0.0;
  if (v10 == v4) {
    goto LABEL_14;
  }
  if ((boost::spirit::qi::detail::extract_int<unsigned long,10u,1u,-1,boost::spirit::qi::detail::positive_accumulator<10u>,false,false>::parse_main<char const*,unsigned long>((uint64_t *)a1, (uint64_t *)a2, &v27) & 1) == 0)
  {
    *a1 = v10;
LABEL_14:
    if ((boost::spirit::qi::ureal_policies<double>::parse_nan<char const*,double>(a1, a2, &v28) & 1) != 0
      || boost::spirit::qi::ureal_policies<double>::parse_inf<char const*,double>(a1, a2, &v28))
    {
      goto LABEL_49;
    }
    unsigned int v26 = 0;
    __int16 v13 = *a1;
    if (*a1 == *a2
      || *v13 != 46
      || (*a1 = v13 + 1,
          (boost::spirit::qi::ureal_policies<double>::parse_frac_n<char const*,unsigned long>((uint64_t *)a1, (uint64_t *)a2, &v27, &v26) & 1) == 0))
    {
      uint64_t result = 0;
      *a1 = v3;
      return result;
    }
    goto LABEL_19;
  }
  unsigned int v26 = 0;
  uint64_t v11 = *a1;
  if (*a1 == *a2) {
    goto LABEL_27;
  }
  int v12 = *v11;
  if (v12 == 101 || v12 == 69) {
    goto LABEL_21;
  }
  if (v12 != 46) {
    goto LABEL_26;
  }
  *a1 = v11 + 1;
  boost::spirit::qi::ureal_policies<double>::parse_frac_n<char const*,unsigned long>((uint64_t *)a1, (uint64_t *)a2, &v27, &v26);
LABEL_19:
  uint64_t v11 = *a1;
  if (*a1 != *a2 && (*v11 | 0x20) == 0x65)
  {
LABEL_21:
    *a1 = v11 + 1;
    int v25 = 0;
    if (boost::spirit::qi::ureal_policies<double>::parse_exp_n<char const*>((uint64_t *)a1, (uint64_t *)a2, &v25))
    {
      unsigned int v14 = v25 - v26;
      if ((int)(v25 - v26) >= 0)
      {
        if (v14 <= 0x134)
        {
          double v15 = (double)v27;
          double v16 = boost::spirit::traits::pow10_helper<double,void>::call::exponents[v14];
LABEL_39:
          double v19 = v16 * v15;
          goto LABEL_48;
        }
        return 0;
      }
      if (v14 > 0xFFFFFECC)
      {
        double v21 = (double)v27;
        unsigned int v22 = v26 - v25;
      }
      else
      {
        if (v14 < 0xFFFFFD9A) {
          return 0;
        }
        double v21 = ((double)(v27 % 0xA) + (double)(10 * (v27 / 0xA))) / 1.0e307;
        unsigned int v22 = -307 - v14;
      }
      goto LABEL_46;
    }
    *a1 = v11;
    uint64_t v18 = v26;
    goto LABEL_33;
  }
LABEL_26:
  uint64_t v18 = v26;
  if (!v26)
  {
LABEL_27:
    if (v27 == 1)
    {
      if ((boost::spirit::qi::ureal_policies<double>::parse_nan<char const*,double>(a1, a2, &v28) & 1) != 0
        || boost::spirit::qi::ureal_policies<double>::parse_inf<char const*,double>(a1, a2, &v28))
      {
        goto LABEL_49;
      }
      double v19 = (double)v27;
    }
    else
    {
      double v19 = (double)v27;
    }
LABEL_48:
    double v28 = v19;
    goto LABEL_49;
  }
LABEL_33:
  unsigned int v20 = -(int)v18;
  if ((int)v18 <= 0)
  {
    if (v20 <= 0x134)
    {
      double v15 = (double)v27;
      double v16 = boost::spirit::traits::pow10_helper<double,void>::call::exponents[v20];
      goto LABEL_39;
    }
  }
  else
  {
    if (v20 > 0xFFFFFECC)
    {
      double v21 = (double)v27;
      double v23 = boost::spirit::traits::pow10_helper<double,void>::call::exponents[v18];
LABEL_47:
      double v19 = v21 / v23;
      goto LABEL_48;
    }
    double v21 = ((double)(v27 % 0xA) + (double)(10 * (v27 / 0xA))) / 1.0e307;
    double v28 = v21;
    if (v20 >= 0xFFFFFD9A)
    {
      unsigned int v22 = v18 - 307;
LABEL_46:
      double v23 = boost::spirit::traits::pow10_helper<double,void>::call::exponents[v22];
      goto LABEL_47;
    }
  }
LABEL_49:
  double v24 = v28;
  if (v9) {
    double v24 = -v28;
  }
  *a3 = v24;
  return 1;
}

void boost::phoenix::stl::push_back::operator()<std::vector<double>,double>(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a2 + 16;
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 8);
  if ((unint64_t)v7 >= v6)
  {
    BOOL v9 = *(void **)a2;
    uint64_t v10 = ((uint64_t)v7 - *(void *)a2) >> 3;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 61) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v6 - (void)v9;
    if (v12 >> 2 > v11) {
      unint64_t v11 = v12 >> 2;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      unsigned int v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v5, v13);
      BOOL v9 = *(void **)a2;
      uint64_t v7 = *(void **)(a2 + 8);
    }
    else
    {
      unsigned int v14 = 0;
    }
    double v15 = &v14[8 * v10];
    double v16 = &v14[8 * v13];
    *(void *)double v15 = *a3;
    int v8 = v15 + 8;
    while (v7 != v9)
    {
      uint64_t v17 = *--v7;
      *((void *)v15 - 1) = v17;
      v15 -= 8;
    }
    *(void *)a2 = v15;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v16;
    if (v9) {
      operator delete(v9);
    }
  }
  else
  {
    *uint64_t v7 = *a3;
    int v8 = v7 + 1;
  }
  *(void *)(a2 + 8) = v8;
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  BOOL v9 = a3;
  uint64_t v10 = a4;
  uint64_t v11 = a5;
  if ((boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>::operator()<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>(&v8, a1) & 1) == 0&& (boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>::operator()<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>(&v8, a1 + 3) & 1) == 0)
  {
    unint64_t v6 = *v8;
    if (*v8 == *v9 || (boost::spirit::char_encoding::iso8859_1_char_types[*v6] & 0x40) == 0) {
      return 0;
    }
    void *v8 = v6 + 1;
  }
  return 1;
}

void std::shared_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>::shared_ptr[abi:ne180100]<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223EBC1E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>::reset[abi:ne180100]((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const> *,std::shared_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>::__shared_ptr_default_delete<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>,turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>,std::allocator<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>::~flexible_type_parser_impl(result);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const> *,std::shared_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>::__shared_ptr_default_delete<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>,turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>,std::allocator<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>::~flexible_type_parser_impl(uint64_t a1)
{
  if (*(char *)(a1 + 823) < 0) {
    operator delete(*(void **)(a1 + 800));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 768));
  if (*(char *)(a1 + 767) < 0) {
    operator delete(*(void **)(a1 + 744));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 704));
  if (*(char *)(a1 + 703) < 0) {
    operator delete(*(void **)(a1 + 680));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 640));
  if (*(char *)(a1 + 639) < 0) {
    operator delete(*(void **)(a1 + 616));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 576));
  if (*(char *)(a1 + 575) < 0) {
    operator delete(*(void **)(a1 + 552));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 512));
  if (*(char *)(a1 + 511) < 0) {
    operator delete(*(void **)(a1 + 488));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 448));
  if (*(char *)(a1 + 447) < 0) {
    operator delete(*(void **)(a1 + 424));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 384));
  if (*(char *)(a1 + 383) < 0) {
    operator delete(*(void **)(a1 + 360));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 320));
  if (*(char *)(a1 + 319) < 0) {
    operator delete(*(void **)(a1 + 296));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 256));
  if (*(char *)(a1 + 255) < 0) {
    operator delete(*(void **)(a1 + 232));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 192));
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*(void **)(a1 + 168));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 128));
  if (*(char *)(a1 + 127) < 0) {
    operator delete(*(void **)(a1 + 104));
  }
  boost::function0<void>::~function0((uint64_t *)(a1 + 64));
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t std::unique_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>::reset[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>::~flexible_type_parser_impl(result);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

void turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>::flexible_type_parser_impl(uint64_t a1, const std::string *a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  v82[3] = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-grammar");
  *(void *)a1 = a1 + 32;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(std::string *)(a1 + 8) = __p;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 32) = a1 + 32;
  unsigned int v14 = (std::string *)(a1 + 40);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v14, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v15 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 64) = 0;
    if (v15 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v14->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 56) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 64) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 96) = a1 + 96;
  double v16 = (std::string *)(a1 + 104);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v16, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v17 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 128) = 0;
    if (v17 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v16->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 120) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 128) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 160) = a1 + 160;
  uint64_t v18 = (std::string *)(a1 + 168);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v18, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v19 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 192) = 0;
    if (v19 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v18->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 184) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 192) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 224) = a1 + 224;
  unsigned int v20 = (std::string *)(a1 + 232);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v20, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v21 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 256) = 0;
    if (v21 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v20->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 248) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 256) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 288) = a1 + 288;
  unsigned int v22 = (std::string *)(a1 + 296);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v22, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v23 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 320) = 0;
    if (v23 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v22->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 312) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 320) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 352) = a1 + 352;
  double v24 = (std::string *)(a1 + 360);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v24, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v25 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 384) = 0;
    if (v25 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v24->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 376) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 384) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 416) = a1 + 416;
  unsigned int v26 = (std::string *)(a1 + 424);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v26, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v27 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 448) = 0;
    if (v27 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v26->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 440) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 448) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 480) = a1 + 480;
  double v28 = (std::string *)(a1 + 488);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v28, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v29 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 512) = 0;
    if (v29 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v28->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 504) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 512) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 544) = a1 + 544;
  uint64_t v30 = (std::string *)(a1 + 552);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v30, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v31 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 576) = 0;
    if (v31 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v30->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 568) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 576) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 608) = a1 + 608;
  uint64_t v32 = (std::string *)(a1 + 616);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v32, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v33 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 640) = 0;
    if (v33 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v32->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 632) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 640) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 672) = a1 + 672;
  v34 = (std::string *)(a1 + 680);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v34, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v35 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 704) = 0;
    if (v35 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v34->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 696) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 704) = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "unnamed-rule");
  *(void *)(a1 + 736) = a1 + 736;
  long long v36 = (std::string *)(a1 + 744);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v36, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    int v37 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(void *)(a1 + 768) = 0;
    if (v37 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v36->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(a1 + 760) = *((void *)&__p.__r_.__value_.__l + 2);
    *(void *)(a1 + 768) = 0;
  }
  long long v38 = (std::string *)(a1 + 800);
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v38, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v39 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
    *(void *)(a1 + 816) = *((void *)&a2->__r_.__value_.__l + 2);
    *(_OWORD *)&v38->__r_.__value_.__l.__data_ = v39;
  }
  long long v71 = 0u;
  *(_OWORD *)unsigned __int8 v70 = 0u;
  *(_OWORD *)v69 = 0u;
  __int16 v72 = 23553;
  char v73 = 1;
  memset(v74, 0, sizeof(v74));
  int v75 = 1065353216;
  memset(v76, 0, sizeof(v76));
  memset(v78, 0, sizeof(v78));
  int v77 = 1065353216;
  int v79 = 1065353216;
  char v80 = 0;
  MEMORY[0x22A614700](v69, ",{}[]");
  LOBYTE(v72) = a3;
  HIBYTE(v72) = a4;
  char v73 = 1;
  if (v74 != (void *)a5)
  {
    int v75 = *(_DWORD *)(a5 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v74, *(uint64_t **)(a5 + 16), 0);
  }
  if (v76 != (_OWORD *)a6)
  {
    int v77 = *(_DWORD *)(a6 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v76, *(uint64_t **)(a6 + 16), 0);
  }
  if (v78 != (void *)a7)
  {
    int v79 = *(_DWORD *)(a7 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v78, *(uint64_t **)(a7 + 16), 0);
  }
  char v80 = a8;
  *(_OWORD *)unsigned int v58 = 0u;
  long long v59 = 0u;
  *(_OWORD *)atomic_ullong *volatile v57 = 0u;
  __int16 v60 = 23553;
  char v61 = 1;
  memset(v62, 0, sizeof(v62));
  int v63 = 1065353216;
  memset(v64, 0, sizeof(v64));
  memset(v66, 0, sizeof(v66));
  int v65 = 1065353216;
  int v67 = 1065353216;
  char v68 = 0;
  MEMORY[0x22A614700](v57, " ,\t{}[]:;");
  LOBYTE(v60) = a3;
  HIBYTE(v60) = a4;
  char v61 = 1;
  if (v62 != (void *)a5)
  {
    int v63 = *(_DWORD *)(a5 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v62, *(uint64_t **)(a5 + 16), 0);
  }
  if (v64 != (_OWORD *)a6)
  {
    int v65 = *(_DWORD *)(a6 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v64, *(uint64_t **)(a6 + 16), 0);
  }
  if (v66 != (void *)a7)
  {
    int v67 = *(_DWORD *)(a7 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v66, *(uint64_t **)(a7 + 16), 0);
  }
  char v68 = a8;
  *(_OWORD *)v46 = 0u;
  long long v47 = 0u;
  *(_OWORD *)uint64_t v45 = 0u;
  __int16 v48 = 23553;
  char v49 = 1;
  memset(v50, 0, sizeof(v50));
  int v51 = 1065353216;
  memset(v52, 0, sizeof(v52));
  memset(v54, 0, sizeof(v54));
  int v53 = 1065353216;
  int v55 = 1065353216;
  char v56 = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    unint64_t size = a2->__r_.__value_.__l.__size_;
  }
  else {
    unint64_t size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  if (size >= 2) {
    v41 = (std::string *)&v46[1];
  }
  else {
    v41 = (std::string *)v45;
  }
  std::string::operator=(v41, a2);
  LOBYTE(v48) = a3;
  HIBYTE(v48) = a4;
  char v49 = 1;
  if (v50 != (void *)a5)
  {
    int v51 = *(_DWORD *)(a5 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v50, *(uint64_t **)(a5 + 16), 0);
  }
  if (v52 != (_OWORD *)a6)
  {
    int v53 = *(_DWORD *)(a6 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v52, *(uint64_t **)(a6 + 16), 0);
  }
  if (v54 != (void *)a7)
  {
    int v55 = *(_DWORD *)(a7 + 32);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(v54, *(uint64_t **)(a7 + 16), 0);
  }
  char v56 = a8;
  boost::spirit::terminal<parser_impl::tag::restricted_string>::operator()<parser_impl::parser_config>((long long *)v45, &__p);
  LOWORD(v81) = 0;
  v82[0] = &__p;
  v82[1] = &v81;
  boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l>>(a1 + 736, (uint64_t)v82);
}

void sub_223EBD93C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  if (*(char *)(a26 + 31) < 0) {
    operator delete(*a11);
  }
  _Unwind_Resume(a1);
}

void sub_223EBDBF8()
{
}

void sub_223EBDC00()
{
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l>>(uint64_t a1, uint64_t a2)
{
  boost::spirit::detail::make_action<boost::spirit::qi::domain,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type &>::operator()(a2, (uint64_t)v3);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)v4, (uint64_t)v3);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_6actionIN11parser_impl13string_parserENS_7phoenix5actorINS_5proto7exprns_10basic_exprINSZ_6tagns_3tag6assignENSZ_7argsns_5list2INSY_INS6_9attributeILi0EEEEENSY_INS6_8argumentILi0EEEEEEELl2EEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES1M_(a1 + 32, (uint64_t)v4);
}

void sub_223EBDCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_6actionIN11parser_impl13string_parserENS_7phoenix5actorINS_5proto7exprns_10basic_exprINSZ_6tagns_3tag6assignENSZ_7argsns_5list2INSY_INS6_9attributeILi0EEEEENSY_INS6_8argumentILi0EEEEEEELl2EEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES1M_(uint64_t a1, uint64_t a2)
{
  parser_impl::parser_config::parser_config(&v3, (long long *)a2);
  __int16 v4 = *(_WORD *)(a2 + 184);
  char v5 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v6, a2 + 192);
  v6[40] = *(unsigned char *)(a2 + 232);
  __int16 v7 = *(_WORD *)(a2 + 240);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_6actionIN11parser_impl13string_parserENS_7phoenix5actorINS_5proto7exprns_10basic_exprINSZ_6tagns_3tag6assignENSZ_7argsns_5list2INSY_INS6_9attributeILi0EEEEENSY_INS6_8argumentILi0EEEEEEELl2EEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS1L_EE5valueEiE4typeE(v8, (uint64_t)&v3);
}

void sub_223EBDDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  boost::function0<void>::~function0((uint64_t *)(v21 - 80));
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_6actionIN11parser_impl13string_parserENS_7phoenix5actorINS_5proto7exprns_10basic_exprINSZ_6tagns_3tag6assignENSZ_7argsns_5list2INSY_INS6_9attributeILi0EEEEENSY_INS6_8argumentILi0EEEEEEELl2EEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS1L_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  parser_impl::parser_config::parser_config(&v4, (long long *)a2);
  __int16 v5 = *(_WORD *)(a2 + 184);
  char v6 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v7, a2 + 192);
  v7[40] = *(unsigned char *)(a2 + 232);
  __int16 v8 = *(_WORD *)(a2 + 240);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(a1, (uint64_t)&v4);
}

void sub_223EBDF1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(void *a1, uint64_t a2)
{
  *a1 = 0;
  parser_impl::parser_config::parser_config(&v4, (long long *)a2);
  __int16 v5 = *(_WORD *)(a2 + 184);
  char v6 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v7, a2 + 192);
  v7[40] = *(unsigned char *)(a2 + 232);
  __int16 v8 = *(_WORD *)(a2 + 240);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v4);
}

void sub_223EBE040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  parser_impl::parser_config::parser_config(&v3, (long long *)a2);
  __int16 v4 = *(_WORD *)(a2 + 184);
  char v5 = *(unsigned char *)(a2 + 186);
  std::unordered_map<std::string,turi::flexible_type>::unordered_map((uint64_t)v6, a2 + 192);
  v6[40] = *(unsigned char *)(a2 + 232);
  __int16 v7 = *(_WORD *)(a2 + 240);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>)::stored_vtable, (uint64_t)&v3);
}

void sub_223EBE178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(std::string **a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(std::string *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  int v29 = 0;
  LODWORD(v30) = 0;
  BYTE4(v30) = 0;
  memset(v28, 0, 13);
  boost::initialized<turi::flexible_type>::wrapper::~wrapper((uint64_t)&v29);
  uint64_t v10 = *a2;
  if (parser_impl::string_parser::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,turi::flexible_type>(a1, a2, a3, a4, a5, (unsigned __int8 *)v28))
  {
    char v26 = 1;
    int v25 = v28;
    int v29 = a1 + 10;
    uint64_t v30 = &v25;
    uint64_t v31 = a4;
    uint64_t v32 = &v26;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<turi::flexible_type &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)v27, (uint64_t)&a1[10], (uint64_t)&v29);
    if (v26)
    {
      uint64_t v11 = 1;
    }
    else
    {
      uint64_t v11 = 0;
      *a2 = v10;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  switch(BYTE4(v28[1]))
  {
    case 2:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v12 = v28[0];
        if (v28[0])
        {
          if (*((char *)v28[0] + 31) < 0) {
            operator delete(*((void **)v28[0] + 1));
          }
          unint64_t v13 = v12;
          uint64_t v14 = 0x1012C404EF22A49;
          goto LABEL_37;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        int v15 = v28[0];
        if (v28[0])
        {
          double v16 = (void *)v28[0][1];
          if (v16)
          {
            v28[0][2] = (atomic_ullong)v16;
            operator delete(v16);
          }
          unint64_t v13 = v15;
          uint64_t v14 = 0x1080C409938AC02;
          goto LABEL_37;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        int v17 = v28[0];
        if (v28[0])
        {
          int v29 = (std::string *)(v28[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
          goto LABEL_23;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        int v17 = v28[0];
        if (v28[0])
        {
          int v29 = (std::string *)(v28[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
LABEL_23:
          unint64_t v13 = v17;
          uint64_t v14 = 0x1020C405E66F15BLL;
          goto LABEL_37;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v18 = v28[0];
        if (v28[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v28[0] + 2);
          unint64_t v13 = v18;
          unsigned int v19 = -235920773;
          goto LABEL_36;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v28[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        unsigned int v20 = v28[0];
        if (v28[0])
        {
          uint64_t v21 = (void *)v28[0][6];
          if (v21)
          {
            v28[0][7] = (atomic_ullong)v21;
            operator delete(v21);
          }
          unsigned int v22 = (void *)v20[3];
          if (v22)
          {
            v20[4] = (atomic_ullong)v22;
            operator delete(v22);
          }
          int v23 = (std::__shared_weak_count *)v20[2];
          if (v23) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v23);
          }
          unint64_t v13 = v20;
          unsigned int v19 = 2071181815;
LABEL_36:
          uint64_t v14 = v19 | 0x1030C4000000000;
LABEL_37:
          MEMORY[0x22A614FA0](v13, v14);
        }
      }
      break;
    default:
      return v11;
  }
  return v11;
}

void sub_223EBE4B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  switch(a14)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v15 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      if (*(char *)(a12 + 31) < 0) {
        operator delete(*(void **)(a12 + 8));
      }
      double v16 = (void *)v15;
      uint64_t v17 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v20 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      uint64_t v21 = *(void **)(a12 + 8);
      if (v21)
      {
        *(void *)(a12 + 16) = v21;
        operator delete(v21);
      }
      double v16 = (void *)v20;
      uint64_t v17 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v18 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      a11 = a12 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
      goto LABEL_21;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v18 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      a11 = a12 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
LABEL_21:
      double v16 = (void *)v18;
      uint64_t v17 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v22 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a12 + 16));
      double v16 = (void *)v22;
      unsigned int v19 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a12) {
        goto LABEL_27;
      }
      double v16 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a12);
      unsigned int v19 = 2071181815;
LABEL_25:
      uint64_t v17 = v19 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v16, v17);
LABEL_27:
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_27;
  }
}

BOOL parser_impl::string_parser::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,turi::flexible_type>(std::string *this, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6)
{
  uint64_t v85 = *MEMORY[0x263EF8340];
  __int16 v7 = *a2;
  memset(__p, 0, sizeof(__p));
  if (SHIBYTE(this[1].__r_.__value_.__r.__words[2]) < 0)
  {
    data = (std::string *)this[1].__r_.__value_.__l.__data_;
    std::string::size_type size = this[1].__r_.__value_.__l.__size_;
  }
  else
  {
    data = this + 1;
    std::string::size_type size = HIBYTE(this[1].__r_.__value_.__r.__words[2]);
  }
  int64_t v70 = size;
  if (v7 == *a3)
  {
    unsigned __int8 v11 = 0;
    uint64_t v10 = 0;
    goto LABEL_74;
  }
  int v9 = 0;
  uint64_t v10 = 0;
  unsigned __int8 v11 = 0;
  int v12 = 0;
  unint64_t v13 = v7;
  while (1)
  {
    int v14 = *v13;
    if (v12 == 2) {
      break;
    }
    if (std::string::find(this, v14, 0) != -1) {
      goto LABEL_72;
    }
    if (this[7].__r_.__value_.__s.__data_[16] && this[7].__r_.__value_.__s.__data_[17] == v14)
    {
      if (this[7].__r_.__value_.__s.__data_[18]) {
        goto LABEL_72;
      }
      if (v70 <= *a3 - v13)
      {
        if (!v70)
        {
LABEL_72:
          __int16 v7 = v13;
          goto LABEL_74;
        }
        uint64_t v27 = 0;
        while (v13[v27] == data->__r_.__value_.__s.__data_[v27])
        {
          if (v70 == ++v27) {
            goto LABEL_72;
          }
        }
      }
    }
    __int16 v7 = v13 + 1;
    if (v12 == 1)
    {
      if (*(void *)&__p[24] > 0x7FuLL)
      {
        if (*(void *)&__p[24] == 128)
        {
          double v28 = operator new(0x88uLL);
          long long v29 = v81;
          v28[4] = v80;
          v28[5] = v29;
          long long v30 = v83;
          v28[6] = v82;
          v28[7] = v30;
          long long v31 = v77;
          *double v28 = v76;
          v28[1] = v31;
          long long v32 = v79;
          v28[2] = v78;
          v28[3] = v32;
          *((unsigned char *)v28 + 128) = 0;
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
          *(void *)std::string __p = v28;
          *(_OWORD *)&__p[8] = xmmword_2246C1220;
        }
        std::string::push_back((std::string *)__p, v14);
      }
      else
      {
        *((unsigned char *)&v76 + *(void *)&__p[24]) = v14;
      }
      ++*(void *)&__p[24];
      int v26 = this[2].__r_.__value_.__s.__data_[0];
      if (!this[2].__r_.__value_.__s.__data_[0])
      {
        int v12 = 1;
        goto LABEL_58;
      }
      int v20 = this[2].__r_.__value_.__s.__data_[1];
      int v12 = 1;
      goto LABEL_55;
    }
    int v12 = 2;
    if (v14 != 34 && v14 != 39)
    {
      if (*(void *)&__p[24] > 0x7FuLL)
      {
        if (*(void *)&__p[24] == 128)
        {
          uint64_t v33 = operator new(0x88uLL);
          long long v34 = v81;
          v33[4] = v80;
          v33[5] = v34;
          long long v35 = v83;
          v33[6] = v82;
          v33[7] = v35;
          long long v36 = v77;
          *uint64_t v33 = v76;
          v33[1] = v36;
          long long v37 = v79;
          v33[2] = v78;
          v33[3] = v37;
          *((unsigned char *)v33 + 128) = 0;
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
          *(void *)std::string __p = v33;
          *(_OWORD *)&__p[8] = xmmword_2246C1220;
        }
        std::string::push_back((std::string *)__p, v14);
      }
      else
      {
        *((unsigned char *)&v76 + *(void *)&__p[24]) = v14;
      }
      ++*(void *)&__p[24];
      int v26 = this[2].__r_.__value_.__s.__data_[0];
      if (!this[2].__r_.__value_.__s.__data_[0])
      {
        int v12 = 1;
        goto LABEL_59;
      }
      int v20 = this[2].__r_.__value_.__s.__data_[1];
      int v12 = 1;
      goto LABEL_56;
    }
    unsigned __int8 v11 = v14;
    int v26 = v9;
LABEL_59:
    uint64_t v10 = v13;
    int v9 = (v9 ^ 1) & v26;
    unint64_t v13 = v7;
    if (v7 == *a3) {
      goto LABEL_74;
    }
  }
  if ((v14 != v11) | v9 & 1)
  {
    if (*(void *)&__p[24] > 0x7FuLL)
    {
      if (*(void *)&__p[24] == 128)
      {
        uint64_t v15 = operator new(0x88uLL);
        long long v16 = v81;
        v15[4] = v80;
        v15[5] = v16;
        long long v17 = v83;
        v15[6] = v82;
        v15[7] = v17;
        long long v18 = v77;
        _OWORD *v15 = v76;
        v15[1] = v18;
        long long v19 = v79;
        v15[2] = v78;
        v15[3] = v19;
        *((unsigned char *)v15 + 128) = 0;
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        *(void *)std::string __p = v15;
        *(_OWORD *)&__p[8] = xmmword_2246C1220;
      }
      std::string::push_back((std::string *)__p, v14);
    }
    else
    {
      *((unsigned char *)&v76 + *(void *)&__p[24]) = v14;
    }
    ++*(void *)&__p[24];
    int v26 = this[2].__r_.__value_.__s.__data_[0];
    if (!this[2].__r_.__value_.__s.__data_[0])
    {
      int v12 = 2;
      __int16 v7 = v13 + 1;
LABEL_58:
      unint64_t v13 = v10;
      goto LABEL_59;
    }
    int v20 = this[2].__r_.__value_.__s.__data_[1];
    int v12 = 2;
    __int16 v7 = v13 + 1;
LABEL_55:
    unint64_t v13 = v10;
LABEL_56:
    int v26 = v14 == v20;
    goto LABEL_59;
  }
  if (v11 == 34)
  {
    unsigned __int8 v11 = 34;
    if (this[2].__r_.__value_.__s.__data_[2])
    {
      __int16 v7 = v13 + 2;
      if (v13 + 2 < *a3 && v13[1] == 34)
      {
        if (*(void *)&__p[24] > 0x7FuLL)
        {
          if (*(void *)&__p[24] == 128)
          {
            uint64_t v21 = operator new(0x88uLL);
            long long v22 = v81;
            v21[4] = v80;
            v21[5] = v22;
            long long v23 = v83;
            v21[6] = v82;
            v21[7] = v23;
            long long v24 = v77;
            *uint64_t v21 = v76;
            v21[1] = v24;
            long long v25 = v79;
            v21[2] = v78;
            v21[3] = v25;
            *((unsigned char *)v21 + 128) = 0;
            if ((__p[23] & 0x80000000) != 0) {
              operator delete(*(void **)__p);
            }
            *(void *)std::string __p = v21;
            *(_OWORD *)&__p[8] = xmmword_2246C1220;
          }
          std::string::push_back((std::string *)__p, 34);
        }
        else
        {
          *((unsigned char *)&v76 + *(void *)&__p[24]) = 34;
        }
        ++*(void *)&__p[24];
        int v26 = this[2].__r_.__value_.__s.__data_[0];
        if (!this[2].__r_.__value_.__s.__data_[0])
        {
          int v12 = 2;
          goto LABEL_58;
        }
        int v14 = this[2].__r_.__value_.__s.__data_[1];
        int v12 = 2;
        int v20 = 34;
        goto LABEL_55;
      }
    }
  }
  __int16 v7 = v13 + 1;
LABEL_74:
  long long v38 = *a2;
  if (v7 != *a2)
  {
    *a2 = v7;
    if (this[9].__r_.__value_.__s.__data_[16] && v10)
    {
      std::string::basic_string[abi:ne180100](&__dst, v10, v7 - v10);
      MEMORY[0x22A614D20](&v72);
      LODWORD(v74.__locale_) = 0x4000;
      std::locale::locale(&v75, &v72);
      boost::algorithm::trim_right_if<std::string,boost::algorithm::detail::is_classifiedF>(&__dst, &v74);
      std::locale::~locale(&v75);
      std::locale::~locale(&v72);
      long long v39 = std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>(this[8].__r_.__value_.__r.__words, (unsigned __int8 *)&__dst);
      v40 = v39;
      if (v39)
      {
        v41 = v39 + 40;
        if (v39 + 40 != a6)
        {
          switch(a6[12])
          {
            case 2u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v42 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_120;
                }
                if (*((char *)v42 + 31) < 0) {
                  operator delete((void *)v42[1]);
                }
                atomic_ullong *volatile v43 = v42;
                uint64_t v44 = 0x1012C404EF22A49;
                goto LABEL_119;
              }
              break;
            case 3u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v53 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_120;
                }
                atomic_ullong *volatile v54 = (void *)v53[1];
                if (v54)
                {
                  v53[2] = (atomic_ullong)v54;
                  operator delete(v54);
                }
                atomic_ullong *volatile v43 = v53;
                uint64_t v44 = 0x1080C409938AC02;
                goto LABEL_119;
              }
              break;
            case 4u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v55 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_120;
                }
                v74.__locale_ = (std::locale::__imp *)(v55 + 1);
                std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v74);
                goto LABEL_111;
              }
              break;
            case 5u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v55 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_120;
                }
                v74.__locale_ = (std::locale::__imp *)(v55 + 1);
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v74);
LABEL_111:
                atomic_ullong *volatile v43 = v55;
                uint64_t v44 = 0x1020C405E66F15BLL;
                goto LABEL_119;
              }
              break;
            case 8u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v56 = *(atomic_ullong *volatile *)a6;
                if (!*(void *)a6) {
                  goto LABEL_120;
                }
                boost::detail::shared_count::~shared_count((atomic_uint **)v56 + 2);
                atomic_ullong *volatile v43 = v56;
                unsigned int v57 = -235920773;
                goto LABEL_118;
              }
              break;
            case 9u:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                if (*(void *)a6)
                {
                  atomic_ullong *volatile v43 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*(void **)a6);
                  unsigned int v57 = 2071181815;
LABEL_118:
                  uint64_t v44 = v57 | 0x1030C4000000000;
LABEL_119:
                  MEMORY[0x22A614FA0](v43, v44);
                }
LABEL_120:
                *(void *)a6 = 0;
              }
              break;
            default:
              break;
          }
          unsigned int v58 = (void *)*v41;
          *(void *)(a6 + 5) = *(void *)(v40 + 45);
          *(void *)a6 = v58;
          unsigned int v59 = v40[52];
          goto LABEL_144;
        }
        goto LABEL_147;
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
    long long v46 = *(_OWORD *)string;
    __dst.__r_.__value_.__r.__words[2] = *(void *)(string + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v46;
    *(void *)(string + 8) = 0;
    *(void *)(string + 16) = 0;
    *(void *)uint64_t string = 0;
    if (v11)
    {
      turi::unescape_string(&__dst, this[2].__r_.__value_.__s.__data_[0], this[2].__r_.__value_.__s.__data_[1], v11, this[2].__r_.__value_.__s.__data_[2] != 0);
    }
    else
    {
      MEMORY[0x22A614D20](&v72);
      LODWORD(v74.__locale_) = 0x4000;
      std::locale::locale(&v75, &v72);
      boost::algorithm::trim_right_if<std::string,boost::algorithm::detail::is_classifiedF>(&__dst, &v74);
      std::locale::~locale(&v75);
      std::locale::~locale(&v72);
    }
    if (this[9].__r_.__value_.__s.__data_[16]
      || (long long v47 = std::__hash_table<std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MPSMatrix * {__strong}>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MPSMatrix * {__strong}>>>::find<std::string>(this[8].__r_.__value_.__r.__words, (unsigned __int8 *)&__dst), (v48 = v47) == 0))
    {
      turi::flexible_type::operator=<std::string>((uint64_t)a6);
    }
    char v49 = v47 + 40;
    if (v47 + 40 != a6)
    {
      switch(a6[12])
      {
        case 2u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v50 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_142;
            }
            if (*((char *)v50 + 31) < 0) {
              operator delete((void *)v50[1]);
            }
            int v51 = v50;
            uint64_t v52 = 0x1012C404EF22A49;
            goto LABEL_141;
          }
          break;
        case 3u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v60 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_142;
            }
            char v61 = (void *)v60[1];
            if (v61)
            {
              v60[2] = (atomic_ullong)v61;
              operator delete(v61);
            }
            int v51 = v60;
            uint64_t v52 = 0x1080C409938AC02;
            goto LABEL_141;
          }
          break;
        case 4u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v62 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_142;
            }
            v74.__locale_ = (std::locale::__imp *)(v62 + 1);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v74);
            goto LABEL_133;
          }
          break;
        case 5u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v62 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_142;
            }
            v74.__locale_ = (std::locale::__imp *)(v62 + 1);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v74);
LABEL_133:
            int v51 = v62;
            uint64_t v52 = 0x1020C405E66F15BLL;
            goto LABEL_141;
          }
          break;
        case 8u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v63 = *(atomic_ullong *volatile *)a6;
            if (!*(void *)a6) {
              goto LABEL_142;
            }
            boost::detail::shared_count::~shared_count((atomic_uint **)v63 + 2);
            int v51 = v63;
            unsigned int v64 = -235920773;
            goto LABEL_140;
          }
          break;
        case 9u:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)a6, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            if (*(void *)a6)
            {
              int v51 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*(void **)a6);
              unsigned int v64 = 2071181815;
LABEL_140:
              uint64_t v52 = v64 | 0x1030C4000000000;
LABEL_141:
              MEMORY[0x22A614FA0](v51, v52);
            }
LABEL_142:
            *(void *)a6 = 0;
          }
          break;
        default:
          break;
      }
      int v65 = (void *)*v49;
      *(void *)(a6 + 5) = *(void *)(v48 + 45);
      *(void *)a6 = v65;
      unsigned int v59 = v48[52];
LABEL_144:
      a6[12] = v59;
      if (v59 <= 9 && ((1 << v59) & 0x33C) != 0) {
        atomic_fetch_add(*(atomic_ullong *volatile *)a6, 1uLL);
      }
    }
LABEL_147:
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  return v7 != v38;
}

void sub_223EBF0EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::locale a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a48 < 0) {
    operator delete(a43);
  }
  _Unwind_Resume(exception_object);
}

void _ZN5boost6spirit2qi4ruleIPKcFN4turi13flexible_typeEvEKNS_5proto7exprns_4exprINS8_6tagns_3tag11logical_notENS8_7argsns_5list1IRKNS0_8terminalINS0_3tag3epsEEEEELl1EEENS0_11unused_typeESP_E6defineIN4mpl_5BOOL_ILb0EEENSA_INSC_10bitwise_orENSE_5list2IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_INSC_9subscriptENSW_IRNSG_INSH_12stateful_tagINS5_20strict_real_policiesIdEENSH_7double_EdSP_EEEERKNS_7phoenix5actorINS9_10basic_exprINSC_6assignENSW_INS16_INS0_9attributeILi0EEEEENS16_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSA_ISX_NSW_IRKNSG_INSH_9long_longEEES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNSt3__16vectorIdNS20_9allocatorIdEEEEvESO_SP_SP_EES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNS21_IS6_NS22_IS6_EEEEvESO_SP_SP_EES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNS21_INS20_4pairIS6_S6_EENS22_IS2U_EEEEvESO_SP_SP_EES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNSA_INSC_8terminalENSE_4termINS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS3B_13parser_configEEEEEEEELl0EEES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_ISL_RKNS16_INS17_IS18_NSW_IS1B_NS16_INS17_IS38_NS39_IS6_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEEEEvRSQ_RKT0_NST_ILb1EEE(uint64_t a1, uint64_t a2)
{
  v18[36] = *MEMORY[0x263EF8340];
  _ZNK5boost6spirit6detail11make_binaryINS0_2qi6domainENS_5proto6tagns_3tag10bitwise_orENS0_13meta_compilerIS4_E12meta_grammarELb1EE4implIRKNS5_7exprns_4exprIS8_NS5_7argsns_5list2IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_INS7_9subscriptENSH_IRNS0_8terminalINS0_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSK_7double_EdNS0_11unused_typeEEEEERKNS_7phoenix5actorINSE_10basic_exprINS7_6assignENSH_INSV_INS0_9attributeILi0EEEEENSV_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_9long_longEEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS3_4ruleIPKcFNSt3__16vectorIdNS1S_9allocatorIdEEEEvEKNSF_INS7_8terminalENSG_4termINSK_9char_codeINSK_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEESQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INSM_13flexible_typeENS1U_IS2I_EEEEvES27_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INS1S_4pairIS2I_S2I_EENS1U_IS2X_EEEEvES27_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNSF_IS1Y_NS1Z_INS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS3C_13parser_configEEEEEEEELl0EEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_3epsEEERKNSV_INSW_ISX_NSH_IS10_NSV_INSW_IS1Y_NS1Z_IS2I_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSQ_EclES4E_S4I_S4J_(a2, (uint64_t)&v3);
  __int16 v11 = v3;
  char v12 = v4;
  __int16 v13 = v5;
  char v14 = v6;
  long long v15 = v7;
  long long v16 = v8;
  long long v17 = v9;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v18, (uint64_t)&v10);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1P_9allocatorIdEEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_ISB_NS1R_ISB_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2K_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_IN11parser_impl13string_parserES1I_EENS9_INSV_ISL_NS11_INS14_IS17_NS19_IS1C_NS11_INS14_INS16_8terminalENS18_4termISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES3H_(a1 + 32, &v11);
}

void sub_223EBF2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1P_9allocatorIdEEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_ISB_NS1R_ISB_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2K_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_IN11parser_impl13string_parserES1I_EENS9_INSV_ISL_NS11_INS14_IS17_NS19_IS1C_NS11_INS14_INS16_8terminalENS18_4termISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES3H_(uint64_t a1, __int16 *a2)
{
  v11[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v2 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v2;
  long long v10 = *((_OWORD *)a2 + 3);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v11, (uint64_t)(a2 + 32));
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1P_9allocatorIdEEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_ISB_NS1R_ISB_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2K_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_IN11parser_impl13string_parserES1I_EENS9_INSV_ISL_NS11_INS14_IS17_NS19_IS1C_NS11_INS14_INS16_8terminalENS18_4termISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS3G_EE5valueEiE4typeE(v3, (uint64_t)&v4);
}

void sub_223EBF428(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  boost::function0<void>::~function0((uint64_t *)va);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va1);
  _Unwind_Resume(a1);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1P_9allocatorIdEEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_ISB_NS1R_ISB_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2K_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_IN11parser_impl13string_parserES1I_EENS9_INSV_ISL_NS11_INS14_IS17_NS19_IS1C_NS11_INS14_INS16_8terminalENS18_4termISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS3G_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  v11[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *(_WORD *)a2;
  char v5 = *(unsigned char *)(a2 + 2);
  __int16 v6 = *(_WORD *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 10);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v8 = *(_OWORD *)(a2 + 16);
  long long v9 = v3;
  long long v10 = *(_OWORD *)(a2 + 48);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v11, a2 + 64);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(a1, &v4);
}

void sub_223EBF554(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(void *a1, __int16 *a2)
{
  v11[36] = *(void **)MEMORY[0x263EF8340];
  *a1 = 0;
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v3 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v3;
  long long v10 = *((_OWORD *)a2 + 3);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v11, (uint64_t)(a2 + 32));
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v4);
}

void sub_223EBF670(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v3 = *(_WORD *)a2;
  char v4 = *(unsigned char *)(a2 + 2);
  __int16 v5 = *(_WORD *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 10);
  long long v2 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v8 = v2;
  long long v9 = *(_OWORD *)(a2 + 48);
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, a2 + 64);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>)::stored_vtable, &v3);
}

void sub_223EBF7A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

BOOL boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a1;
  v7[0] = a2;
  v7[1] = a3;
  v7[2] = a4;
  void v7[3] = a5;
  return boost::fusion::any<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>>(v5, (uint64_t)v7);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  char v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v5 + 328);
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 256);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 200);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 160);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 120);
        if (*(char *)(v5 + 111) < 0) {
          operator delete(*(void **)(v5 + 88));
        }
        if (*(char *)(v5 + 87) < 0) {
          operator delete(*(void **)(v5 + 64));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C400BC9F32ALL);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C3D54 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C3D54 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EBF9A8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C400BC9F32ALL);
  _Unwind_Resume(a1);
}

BOOL boost::fusion::any<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>>(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(uint64_t **)a2;
  char v4 = *(uint64_t **)(a2 + 8);
  uint64_t v5 = *(void ***)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if ((boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1, *(uint64_t **)a2, v4, (uint64_t)v5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 8, v3, v4, (uint64_t)v5, v6) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t *)(a1 + 16), (uint64_t)v3, (uint64_t)v4, (uint64_t)v5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 32, (uint64_t)v3, (uint64_t)v4,
          v5) & 1) != 0
    || (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 48, (uint64_t)v3, (uint64_t)v4, v5) & 1) != 0|| (boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((std::string *)(a1 + 64), (unsigned __int8 **)v3, (unsigned __int8 **)v4, (uint64_t)v5, v6) & 1) != 0)
  {
    return 1;
  }
  return boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 312, v3, (uint64_t)v4, (uint64_t)v5);
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v10 = 0;
  uint64_t v7 = *a2;
  if (!boost::spirit::qi::detail::real_impl<double,turi::strict_real_policies<double>>::parse<char const*,double>(a2, a3, (double *)&v10))return 0; {
  uint64_t v8 = 1;
  }
  char v12 = 1;
  __int16 v11 = &v10;
  v13[0] = a1 + 1;
  v13[1] = &v11;
  v13[2] = a4;
  v13[3] = &v12;
  boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<double &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)&v14, a1 + 1, (uint64_t)v13);
  if (!v12)
  {
    uint64_t v8 = 0;
    *a2 = v7;
  }
  return v8;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = 0;
  uint64_t v8 = *a2;
  if (!boost::spirit::qi::any_int_parser<long long,10u,1u,-1>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,long long>(a1, a2, a3, a4, a5, &v11))return 0; {
  uint64_t v9 = 1;
  }
  char v13 = 1;
  char v12 = &v11;
  v14[0] = a1 + 1;
  v14[1] = &v12;
  v14[2] = a4;
  v14[3] = &v13;
  boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<long long &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)&v15, a1 + 1, (uint64_t)v14);
  if (!v13)
  {
    uint64_t v9 = 0;
    *a2 = v8;
  }
  return v9;
}

uint64_t boost::spirit::qi::any_int_parser<long long,10u,1u,-1>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,long long>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v6 = (unsigned __int8 *)*a2;
  if (*a2 == *a3) {
    return 0;
  }
  int v8 = *v6;
  if ((v8 == 45 || v8 == 43) && (*a2 = (uint64_t)(v6 + 1), v8 == 45))
  {
    if ((boost::spirit::qi::detail::extract_int<long long,10u,1u,-1,boost::spirit::qi::detail::negative_accumulator<10u>,false,false>::parse_main<char const*,long long>(a2, a3, a6) & 1) == 0)
    {
LABEL_6:
      uint64_t result = 0;
      *a2 = (uint64_t)v6;
      return result;
    }
  }
  else if ((boost::spirit::qi::detail::extract_int<long long,10u,1u,-1,boost::spirit::qi::detail::positive_accumulator<10u>,false,false>::parse_main<char const*,long long>(a2, a3, a6) & 1) == 0)
  {
    goto LABEL_6;
  }
  return 1;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  memset(__p, 0, sizeof(__p));
  if (boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::vector<double>>(a1))
  {
    char v9 = 1;
    int v8 = __p;
    v10[0] = a1 + 1;
    v10[1] = &v8;
    v10[2] = a4;
    v10[3] = &v9;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<double> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)&v11, (uint64_t)(a1 + 1), (uint64_t)v10);
  }
  return 0;
}

void sub_223EBFDD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::vector<double>>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    char v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::dummy::nonnull;
  }
  else {
    char v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  boost::spirit::traits::make_attribute<std::vector<turi::flexible_type>,boost::spirit::unused_type const>::call(v7);
  if (boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::vector<turi::flexible_type>>((uint64_t *)a1))
  {
    char v9 = 1;
    int v8 = v7;
    v10[0] = (void **)(a1 + 8);
    v10[1] = (void **)&v8;
    v10[2] = a4;
    v10[3] = (void **)&v9;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<turi::flexible_type> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)v11, a1 + 8, (uint64_t)v10);
  }
  v10[0] = (void **)v7;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](v10);
  return 0;
}

void sub_223EBFF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  *(void *)(v10 - 56) = &a10;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)(v10 - 56));
  _Unwind_Resume(a1);
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::vector<turi::flexible_type>>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    char v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::dummy::nonnull;
  }
  else {
    char v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  boost::spirit::traits::make_attribute<std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,boost::spirit::unused_type const>::call(v7);
  if (boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>((uint64_t *)a1))
  {
    char v9 = 1;
    int v8 = v7;
    v10[0] = (void **)(a1 + 8);
    v10[1] = (void **)&v8;
    v10[2] = a4;
    v10[3] = (void **)&v9;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)v11, a1 + 8, (uint64_t)v10);
  }
  v10[0] = (void **)v7;
  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](v10);
  return 0;
}

void sub_223EC0088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  *(void *)(v10 - 56) = &a10;
  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v10 - 56));
  _Unwind_Resume(a1);
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    char v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::dummy::nonnull;
  }
  else {
    char v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

BOOL boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a2;
  unsigned __int8 v10 = 1;
  char v9 = &v8;
  v11[0] = a1 + 8;
  v11[1] = &v9;
  v11[2] = a4;
  v11[3] = &v10;
  boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>> const*,boost::fusion::vector<boost::spirit::unused_type &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)&v12, a1 + 8, (uint64_t)v11);
  int v6 = v10;
  if (!v10) {
    *a2 = v5;
  }
  return v6 != 0;
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l>>(uint64_t a1, void *a2)
{
  boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::stateful_tag<turi::strict_real_policies<double>,boost::spirit::tag::double_,double,boost::spirit::unused_type>> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::long_long> const&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(a2, (uint64_t)&v3);
  __int16 v10 = v3;
  char v11 = v4;
  __int16 v12 = v5;
  char v13 = v6;
  long long v14 = v7;
  long long v15 = v8;
  long long v16 = v9;
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1P_9allocatorIdEEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_ISB_NS1R_ISB_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2K_EEEEvES26_S27_S27_EEEES1I_EESD_EEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES33_(a1 + 32, &v10);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorIdNS1P_9allocatorIdEEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_ISB_NS1R_ISB_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2K_EEEEvES26_S27_S27_EEEES1I_EESD_EEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES33_(uint64_t a1, __int16 *a2)
{
  long long v2 = *((_OWORD *)a2 + 2);
  long long v5 = *((_OWORD *)a2 + 1);
  __int16 v8 = *a2;
  char v9 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v3 = *((_OWORD *)a2 + 3);
  long long v4 = v2;
  operator new();
}

void sub_223EC02C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  long long v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t result = *(void *)a2;
      if (*(void *)a2) {
        uint64_t result = MEMORY[0x22A614FA0](result, 0x60C40D76D27DFLL);
      }
      goto LABEL_9;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C40F2 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C40F2 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(uint64_t *a1, uint64_t *a2, uint64_t *a3, void **a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t *a3, void **a4, uint64_t a5)
{
  if ((boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1, a2, a3, (uint64_t)a4) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 8, a2, a3, (uint64_t)a4, a5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t *)(a1 + 16), (uint64_t)a2, (uint64_t)a3, (uint64_t)a4) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 32, (uint64_t)a2, (uint64_t)a3,
          a4) & 1) != 0)
  {
    return 1;
  }
  return boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 48, (uint64_t)a2, (uint64_t)a3, a4);
}

void _ZN5boost6spirit2qi4ruleIPKcFN4turi13flexible_typeEvEKNS_5proto7exprns_4exprINS8_6tagns_3tag11logical_notENS8_7argsns_5list1IRKNS0_8terminalINS0_3tag3epsEEEEELl1EEENS0_11unused_typeESP_E6defineIN4mpl_5BOOL_ILb0EEENSA_INSC_10bitwise_orENSE_5list2IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_ISV_NSW_IRKNSA_INSC_9subscriptENSW_IRNSG_INSH_12stateful_tagINS5_20strict_real_policiesIdEENSH_7double_EdSP_EEEERKNS_7phoenix5actorINS9_10basic_exprINSC_6assignENSW_INS16_INS0_9attributeILi0EEEEENS16_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSA_ISX_NSW_IRKNSG_INSH_9long_longEEES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNSt3__16vectorIS6_NS20_9allocatorIS6_EEEEvESO_SP_SP_EES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNS2_IS4_FNS21_INS20_4pairIS6_S6_EENS22_IS2H_EEEEvESO_SP_SP_EES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_IRNSA_INSC_8terminalENSE_4termINS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS2Y_13parser_configEEEEEEEELl0EEES1J_EELl2EEEEELl2EEERKNSA_ISX_NSW_ISL_RKNS16_INS17_IS18_NSW_IS1B_NS16_INS17_IS2V_NS2W_IS6_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEEEEvRSQ_RKT0_NST_ILb1EEE(uint64_t a1, uint64_t *a2)
{
  v16[36] = *MEMORY[0x263EF8340];
  _ZNK5boost6spirit6detail11make_binaryINS0_2qi6domainENS_5proto6tagns_3tag10bitwise_orENS0_13meta_compilerIS4_E12meta_grammarELb1EE4implIRKNS5_7exprns_4exprIS8_NS5_7argsns_5list2IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_IS8_NSH_IRKNSF_INS7_9subscriptENSH_IRNS0_8terminalINS0_3tag12stateful_tagIN4turi20strict_real_policiesIdEENSK_7double_EdNS0_11unused_typeEEEEERKNS_7phoenix5actorINSE_10basic_exprINS7_6assignENSH_INSV_INS0_9attributeILi0EEEEENSV_INS0_8argumentILi0EEEEEEELl2EEEEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_9long_longEEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS3_4ruleIPKcFNSt3__16vectorINSM_13flexible_typeENS1S_9allocatorIS1U_EEEEvEKNSF_INS7_8terminalENSG_4termINSK_9char_codeINSK_5spaceENS0_13char_encoding9iso8859_1EEEEELl0EEESQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNS1P_IS1R_FNS1T_INS1S_4pairIS1U_S1U_EENS1V_IS2K_EEEEvES28_SQ_SQ_EES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRNSF_IS1Z_NS20_INS0_11terminal_exIN11parser_impl3tag17restricted_stringENS_6fusion6vectorIJNS2Z_13parser_configEEEEEEEELl0EEES18_EELl2EEEEELl2EEERKNSF_ISI_NSH_IRKNSJ_INSK_3epsEEERKNSV_INSW_ISX_NSH_IS10_NSV_INSW_IS1Z_NS20_IS1U_EELl0EEEEEEELl2EEEEEEELl2EEEEELl2EEERKN4mpl_5void_ERSQ_EclES41_S45_S46_(a2, (uint64_t)&v3);
  __int16 v10 = v3;
  char v11 = v4;
  __int16 v12 = v5;
  char v13 = v6;
  long long v14 = v7;
  long long v15 = v8;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v16, (uint64_t)&v9);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorISB_NS1P_9allocatorISB_EEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2D_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_IN11parser_impl13string_parserES1I_EENS9_INSV_ISL_NS11_INS14_IS17_NS19_IS1C_NS11_INS14_INS16_8terminalENS18_4termISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES39_(a1 + 32, &v10);
}

void sub_223EC067C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorISB_NS1P_9allocatorISB_EEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2D_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_IN11parser_impl13string_parserES1I_EENS9_INSV_ISL_NS11_INS14_IS17_NS19_IS1C_NS11_INS14_INS16_8terminalENS18_4termISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES39_(uint64_t a1, __int16 *a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v2 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v2;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, (uint64_t)(a2 + 24));
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorISB_NS1P_9allocatorISB_EEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2D_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_IN11parser_impl13string_parserES1I_EENS9_INSV_ISL_NS11_INS14_IS17_NS19_IS1C_NS11_INS14_INS16_8terminalENS18_4termISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS38_EE5valueEiE4typeE(v3, (uint64_t)&v4);
}

void sub_223EC07B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  boost::function0<void>::~function0((uint64_t *)va);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va1);
  _Unwind_Resume(a1);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_6actionINSJ_15any_real_parserIdNSA_20strict_real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS12_6tagns_3tag6assignENS12_7argsns_5list2INS11_INS6_9attributeILi0EEEEENS11_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSV_INSJ_14any_int_parserIxLj10ELj1ELin1EEES1I_EENS9_INSV_INSJ_9referenceIKNSJ_4ruleIS2_FNSt3__16vectorISB_NS1P_9allocatorISB_EEEEvEKNS13_4exprINS16_11logical_notENS18_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES27_EEEES1I_EENS9_INSV_INS1N_IKNS1O_IS2_FNS1Q_INS1P_4pairISB_SB_EENS1R_IS2D_EEEEvES26_S27_S27_EEEES1I_EENS9_INSV_IN11parser_impl13string_parserES1I_EENS9_INSV_ISL_NS11_INS14_IS17_NS19_IS1C_NS11_INS14_INS16_8terminalENS18_4termISB_EELl0EEEEEEELl2EEEEEEESD_EEEEEEEEEEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS38_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v4 = *(_WORD *)a2;
  char v5 = *(unsigned char *)(a2 + 2);
  __int16 v6 = *(_WORD *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 10);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v8 = *(_OWORD *)(a2 + 16);
  long long v9 = v3;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, a2 + 48);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(a1, &v4);
}

void sub_223EC08D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(void *a1, __int16 *a2)
{
  v10[36] = *(void **)MEMORY[0x263EF8340];
  *a1 = 0;
  __int16 v4 = *a2;
  char v5 = *((unsigned char *)a2 + 2);
  __int16 v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 10);
  long long v3 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 1);
  long long v9 = v3;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v10, (uint64_t)(a2 + 24));
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v4);
}

void sub_223EC09EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  v9[36] = *(void **)MEMORY[0x263EF8340];
  __int16 v3 = *(_WORD *)a2;
  char v4 = *(unsigned char *)(a2 + 2);
  __int16 v5 = *(_WORD *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 10);
  long long v2 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v8 = v2;
  boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>::cons((uint64_t)v9, a2 + 48);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>)::stored_vtable, &v3);
}

void sub_223EC0B1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>::~cons((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

BOOL boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(std::string **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v5 = *a1;
  v7[0] = a2;
  v7[1] = a3;
  v7[2] = a4;
  void v7[3] = a5;
  return boost::fusion::any<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>,boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>>(v5, (uint64_t)v7);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  char v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>::~basic_expr(v5 + 312);
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 240);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 184);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 144);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 104);
        if (*(char *)(v5 + 95) < 0) {
          operator delete(*(void **)(v5 + 72));
        }
        if (*(char *)(v5 + 71) < 0) {
          operator delete(*(void **)(v5 + 48));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C40F54C5DD6);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C43F3 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C43F3 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EC0D14(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C40F54C5DD6);
  _Unwind_Resume(a1);
}

BOOL boost::fusion::any<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>,boost::fusion::nil_>>>>>>,boost::spirit::qi::detail::alternative_function<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>>(std::string *a1, uint64_t a2)
{
  __int16 v3 = *(uint64_t **)a2;
  char v4 = *(uint64_t **)(a2 + 8);
  uint64_t v5 = *(void ***)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if ((boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,turi::strict_real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t)a1, *(uint64_t **)a2, v4, (uint64_t)v5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::any_int_parser<long long,10u,1u,-1>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t)&a1->__r_.__value_.__l.__size_, v3, v4, (uint64_t)v5, v6) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t)&a1->__r_.__value_.__r.__words[2], (uint64_t)v3, (uint64_t)v4, v5) & 1) != 0|| (boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t)&a1[1].__r_.__value_.__l.__size_, (uint64_t)v3, (uint64_t)v4,
          v5) & 1) != 0
    || (boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 2, (unsigned __int8 **)v3, (unsigned __int8 **)v4, (uint64_t)v5, v6) & 1) != 0)
  {
    return 1;
  }
  return boost::spirit::qi::action<boost::spirit::qi::eps_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<turi::flexible_type>,0l>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t)&a1[12].__r_.__value_.__l.__size_, v3, (uint64_t)v4, (uint64_t)v5);
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l>>(uint64_t a1, uint64_t *a2)
{
  boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(a2, (uint64_t)&v3);
  long long v6 = v3;
  __int16 v7 = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v8, (uint64_t)&v5);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSU_INS9_INSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_IS24_SD_EEEEEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES2N_(a1 + 32, &v6);
}

void sub_223EC0F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSU_INS9_INSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_IS24_SD_EEEEEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES2N_(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  __int16 v3 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, (uint64_t)a2 + 24);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSU_INS9_INSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_IS24_SD_EEEEEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2M_EE5valueEiE4typeE(v5, (uint64_t)&v2);
}

void sub_223EC104C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  boost::function0<void>::~function0((uint64_t *)(v9 - 64));
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSU_INS9_INSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_IS24_SD_EEEEEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2M_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)a2;
  __int16 v4 = *(_WORD *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(a1, &v3);
}

void sub_223EC1114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(void *a1, long long *a2)
{
  *a1 = 0;
  long long v3 = *a2;
  __int16 v4 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, (uint64_t)a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v3);
}

void sub_223EC11CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)a2;
  __int16 v3 = *(_WORD *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>)::stored_vtable, &v2);
}

void sub_223EC12A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(std::string **a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  __int16 v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 216);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 160);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 120);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 80);
        if (*(char *)(v5 + 71) < 0) {
          operator delete(*(void **)(v5 + 48));
        }
        if (*(char *)(v5 + 47) < 0) {
          operator delete(*(void **)(v5 + 24));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C406BA737B4);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C474ALL & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C474ALL & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EC1450(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C406BA737B4);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(std::string *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  if (boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t)a1, a2, a3, a4))return 1; {
  return boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 1, a2, a3, a4, a5);
  }
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4)
{
  __int16 v10 = *a2;
  uint64_t result = boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1, (uint64_t *)&v10, (uint64_t)a3, a4);
  if (result)
  {
    if (v10 != *a3
      && ((v8 = *v10, *(unsigned __int8 *)(a1 + 16) != v8) ? (BOOL v9 = *(unsigned __int8 *)(a1 + 17) == v8) : (BOOL v9 = 1), v9))
    {
      *a2 = v10;
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v26 = 0;
  LODWORD(v27) = 0;
  BYTE4(v27) = 0;
  *(atomic_ullong **)((char *)v25 + 5) = 0;
  v25[0] = 0;
  boost::initialized<turi::flexible_type>::wrapper::~wrapper((uint64_t)&v26);
  uint64_t v7 = *a2;
  if (boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,turi::flexible_type>((uint64_t *)a1))
  {
    char v23 = 1;
    long long v22 = v25;
    int v26 = (void **)(a1 + 8);
    uint64_t v27 = &v22;
    uint64_t v28 = a4;
    long long v29 = &v23;
    boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&,boost::phoenix::vector4<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const*,boost::fusion::vector<turi::flexible_type &> &,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,BOOL &> &,boost::phoenix::default_actions const&>::operator()((uint64_t)v24, a1 + 8, (uint64_t)&v26);
    if (v23)
    {
      uint64_t v8 = 1;
    }
    else
    {
      uint64_t v8 = 0;
      *a2 = v7;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  switch(BYTE4(v25[1]))
  {
    case 2:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        BOOL v9 = v25[0];
        if (v25[0])
        {
          if (*((char *)v25[0] + 31) < 0) {
            operator delete(*((void **)v25[0] + 1));
          }
          __int16 v10 = v9;
          uint64_t v11 = 0x1012C404EF22A49;
          goto LABEL_37;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        __int16 v12 = v25[0];
        if (v25[0])
        {
          char v13 = (void *)v25[0][1];
          if (v13)
          {
            v25[0][2] = (atomic_ullong)v13;
            operator delete(v13);
          }
          __int16 v10 = v12;
          uint64_t v11 = 0x1080C409938AC02;
          goto LABEL_37;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        long long v14 = v25[0];
        if (v25[0])
        {
          int v26 = (void **)(v25[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v26);
          goto LABEL_23;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        long long v14 = v25[0];
        if (v25[0])
        {
          int v26 = (void **)(v25[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v26);
LABEL_23:
          __int16 v10 = v14;
          uint64_t v11 = 0x1020C405E66F15BLL;
          goto LABEL_37;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        long long v15 = v25[0];
        if (v25[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v25[0] + 2);
          __int16 v10 = v15;
          unsigned int v16 = -235920773;
          goto LABEL_36;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        long long v17 = v25[0];
        if (v25[0])
        {
          long long v18 = (void *)v25[0][6];
          if (v18)
          {
            v25[0][7] = (atomic_ullong)v18;
            operator delete(v18);
          }
          long long v19 = (void *)v17[3];
          if (v19)
          {
            v17[4] = (atomic_ullong)v19;
            operator delete(v19);
          }
          int v20 = (std::__shared_weak_count *)v17[2];
          if (v20) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v20);
          }
          __int16 v10 = v17;
          unsigned int v16 = 2071181815;
LABEL_36:
          uint64_t v11 = v16 | 0x1030C4000000000;
LABEL_37:
          MEMORY[0x22A614FA0](v10, v11);
        }
      }
      break;
    default:
      return v8;
  }
  return v8;
}

void sub_223EC1870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  switch(a14)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v15 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      if (*(char *)(a12 + 31) < 0) {
        operator delete(*(void **)(a12 + 8));
      }
      unsigned int v16 = (void *)v15;
      uint64_t v17 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v20 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      uint64_t v21 = *(void **)(a12 + 8);
      if (v21)
      {
        *(void *)(a12 + 16) = v21;
        operator delete(v21);
      }
      unsigned int v16 = (void *)v20;
      uint64_t v17 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v18 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      a11 = a12 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
      goto LABEL_21;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v18 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      a11 = a12 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
LABEL_21:
      unsigned int v16 = (void *)v18;
      uint64_t v17 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v22 = a12;
      if (!a12) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a12 + 16));
      unsigned int v16 = (void *)v22;
      unsigned int v19 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a12, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a12) {
        goto LABEL_27;
      }
      unsigned int v16 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a12);
      unsigned int v19 = 2071181815;
LABEL_25:
      uint64_t v17 = v19 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v16, v17);
LABEL_27:
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_27;
  }
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,turi::flexible_type>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    __int16 v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::dummy::nonnull;
  }
  else {
    __int16 v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l>>(uint64_t a1, uint64_t *a2)
{
  boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(a2, (uint64_t)&v3);
  long long v6 = v3;
  char v7 = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v8, (uint64_t)&v5);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES2K_(a1 + 32, &v6);
}

void sub_223EC1BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES2K_(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  char v3 = *((unsigned char *)a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, (uint64_t)a2 + 24);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2J_EE5valueEiE4typeE(v5, (uint64_t)&v2);
}

void sub_223EC1C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  boost::function0<void>::~function0((uint64_t *)(v9 - 64));
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2J_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(a1, &v3);
}

void sub_223EC1D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(void *a1, long long *a2)
{
  *a1 = 0;
  long long v3 = *a2;
  char v4 = *((unsigned char *)a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, (uint64_t)a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v3);
}

void sub_223EC1E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>)::stored_vtable, &v2);
}

void sub_223EC1EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(std::string **a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  char v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 216);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 160);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 120);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 80);
        if (*(char *)(v5 + 71) < 0) {
          operator delete(*(void **)(v5 + 48));
        }
        if (*(char *)(v5 + 47) < 0) {
          operator delete(*(void **)(v5 + 24));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C4099367000);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C49C0 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C49C0 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EC2088(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C4099367000);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(std::string *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  if (boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t)a1, a2, a3, a4))return 1; {
  return boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 1, a2, a3, a4, a5);
  }
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4)
{
  uint64_t v8 = *a2;
  uint64_t result = boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1, (uint64_t *)&v8, (uint64_t)a3, a4);
  if (result)
  {
    if (v8 == *a3 || *(unsigned __int8 *)(a1 + 16) != *v8)
    {
      return 0;
    }
    else
    {
      *a2 = v8;
      return 1;
    }
  }
  return result;
}

void boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>&,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::no_skip>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,2l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l>>(uint64_t a1, uint64_t *a2)
{
  boost::spirit::detail::make_binary<boost::spirit::qi::domain,boost::proto::tagns_::tag::bitwise_or,boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar,true>::impl<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::address_of,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::no_skip>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,2l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<parser_impl::tag::restricted_string,boost::fusion::vector<parser_impl::parser_config>>>,0l> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>> const&>,2l> const&>,2l> const&,mpl_::void_ const&,boost::spirit::unused_type&>::operator()(a2, (uint64_t)&v3);
  long long v6 = v3;
  __int16 v7 = v4;
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v8, (uint64_t)&v5);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_17no_skip_directiveINSU_INS9_INSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_IS25_NS9_INSJ_10char_classINS19_9char_codeINS19_5spaceENS23_9iso8859_1EEEEESD_EEEEEEEEEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES2W_(a1 + 32, &v6);
}

void sub_223EC22C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEaSINSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_17no_skip_directiveINSU_INS9_INSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_IS25_NS9_INSJ_10char_classINS19_9char_codeINS19_5spaceENS23_9iso8859_1EEEEESD_EEEEEEEEEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSQ_E4typeES2W_(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  __int16 v3 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, (uint64_t)a2 + 24);
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_17no_skip_directiveINSU_INS9_INSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_IS25_NS9_INSJ_10char_classINS19_9char_codeINS19_5spaceENS23_9iso8859_1EEEEESD_EEEEEEEEEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2V_EE5valueEiE4typeE(v5, (uint64_t)&v2);
}

void sub_223EC23A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  boost::function0<void>::~function0((uint64_t *)(v9 - 64));
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>::~parser_binder((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRN4turi13flexible_typeENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSJ_10eps_parserEEEEEC2INSJ_6detail13parser_binderINSJ_11alternativeINS9_INSJ_8sequenceINS9_INSJ_6actionINSJ_9referenceIKNSJ_4ruleIS2_FSB_vEKNS_5proto7exprns_4exprINS10_6tagns_3tag11logical_notENS10_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1H_EEEENS_7phoenix5actorINS11_10basic_exprINS14_6assignENS16_5list2INS1M_INS6_9attributeILi0EEEEENS1M_INS6_8argumentILi0EEEEEEELl2EEEEEEENS9_INSJ_13and_predicateINSJ_17no_skip_directiveINSU_INS9_INSJ_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_IS25_NS9_INSJ_10char_classINS19_9char_codeINS19_5spaceENS23_9iso8859_1EEEEESD_EEEEEEEEEEEESD_EEEEEENS9_INSW_IN11parser_impl13string_parserES1Y_EESD_EEEEEEN4mpl_5BOOL_ILb0EEEEEEET_NS_11enable_if_cIXntsr11is_integralIS2V_EE5valueEiE4typeE(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)a2;
  __int16 v4 = *(_WORD *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(a1, &v3);
}

void sub_223EC246C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::function4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(void *a1, long long *a2)
{
  *a1 = 0;
  long long v3 = *a2;
  __int16 v4 = *((_WORD *)a2 + 8);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v5, (uint64_t)a2 + 24);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)a1, (uint64_t)&v3);
}

void sub_223EC2524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)a2;
  __int16 v3 = *(_WORD *)(a2 + 16);
  boost::spirit::qi::detail::parser_binder<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,mpl_::BOOL_<false>>::parser_binder((uint64_t)&v4, a2 + 24);
  boost::detail::function::basic_vtable4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>((uint64_t)boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>)::stored_vtable, &v2);
}

void sub_223EC25F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(std::string **a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  __int16 v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        std::__hash_table<std::__hash_value_type<std::string,turi::flexible_type>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,turi::flexible_type>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,turi::flexible_type>>>::~__hash_table(v5 + 216);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 160);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 120);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v5 + 80);
        if (*(char *)(v5 + 71) < 0) {
          operator delete(*(void **)(v5 + 48));
        }
        if (*(char *)(v5 + 47) < 0) {
          operator delete(*(void **)(v5 + 24));
        }
        uint64_t result = MEMORY[0x22A614FA0](v5, 0x10F2C406BA737B4);
      }
      goto LABEL_11;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C4C19 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C4C19 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_11:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223EC27A8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10F2C406BA737B4);
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(std::string *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  if (boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>((uint64_t)a1, a2, a3, a4))return 1; {
  return boost::spirit::qi::action<parser_impl::string_parser,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 1, a2, a3, a4, a5);
  }
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>,boost::fusion::cons<boost::spirit::qi::and_predicate<boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::nil_>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4)
{
  __int16 v10 = *a2;
  uint64_t result = boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign,boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,2l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1, (uint64_t *)&v10, (uint64_t)a3, a4);
  if (result)
  {
    if (v10 != *a3
      && ((uint64_t v8 = *v10, *(unsigned __int8 *)(a1 + 16) != v8)
        ? (BOOL v9 = *(unsigned __int8 *)(a1 + 17) == v8)
        : (BOOL v9 = 1),
          v9 || (boost::spirit::char_encoding::iso8859_1_char_types[v8] & 0x40) != 0))
    {
      *a2 = v10;
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::modulus,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::no_skip>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::dereference,boost::proto::argsns_::list1<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,1l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const&>,2l> const&>,2l> const&>,2l> const&>,1l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>>,2l>>()
{
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorINSA_4pairIN4turi13flexible_typeESE_EENSA_9allocatorISF_EEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSQ_10eps_parserEEEEEaSINSQ_6detail13parser_binderINSQ_8sequenceINS9_INSQ_12literal_charINS6_13char_encoding8standardELb1ELb0EEENS9_INSQ_8optionalINSQ_4listINSQ_9referenceIKNSQ_4ruleIS2_FSF_vEKNS_5proto7exprns_4exprINS1B_6tagns_3tag11logical_notENS1B_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1S_EEEENSQ_17no_skip_directiveINSQ_11alternativeINS9_INS11_INS9_INSQ_6kleeneINSQ_10char_classINS1K_9char_codeINS1K_5spaceENS13_9iso8859_1EEEEEEENS9_INS12_IS14_Lb0ELb0EEESK_EEEEEENS9_IS24_SK_EEEEEEEEEEEENS9_IS15_SK_EEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSX_E4typeES2P_()
{
}

void sub_223EC29FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  __int16 v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t result = *(void *)a2;
      if (*(void *)a2) {
        uint64_t result = MEMORY[0x22A614FA0](result, 0x1060C40861DB1C4);
      }
      goto LABEL_9;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C4EEFLL & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C4EEFLL & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(uint64_t **a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t *a4, uint64_t a5)
{
  return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(*a1, a2, a3, (uint64_t)a4, a5, *a4);
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(uint64_t *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v6 = *a2;
  __int16 v12 = &v11;
  char v13 = a3;
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v16 = a6;
  if (v6 == *a3) {
    return 0;
  }
  if (*(unsigned __int8 *)a1 != *v6) {
    return 0;
  }
  uint64_t v11 = v6 + 1;
  if (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>::operator()<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>((uint64_t **)&v12, a1 + 1, a6))return 0; {
  BOOL v9 = *v12;
  }
  if (*v12 == *v13 || *((unsigned __int8 *)a1 + 24) != *v9) {
    return 0;
  }
  *__int16 v12 = v9 + 1;
  *a2 = v11;
  return 1;
}

uint64_t boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>::operator()<boost::spirit::qi::optional<boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>(uint64_t **a1, uint64_t *a2, uint64_t a3)
{
  __int16 v3 = *a1;
  __int16 v4 = a1[3];
  uint64_t v10 = **a1;
  long long v6 = &v10;
  long long v7 = *(_OWORD *)(a1 + 1);
  uint64_t v8 = v4;
  uint64_t v9 = a3;
  if (boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>>(a2, (uint64_t)&v6))
  {
    *__int16 v3 = v10;
  }
  return 0;
}

BOOL boost::spirit::qi::list<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>>(uint64_t *a1, uint64_t a2)
{
  BOOL v4 = boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>::dispatch_container<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>>(a2, a1);
  if (!v4)
  {
    do
    {
      uint64_t v5 = *(unsigned __int8 ***)a2;
      long long v6 = *(unsigned __int8 ***)(a2 + 8);
      uint64_t v7 = **(void **)a2;
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v10 = *(void *)(a2 + 24);
    }
    while (boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>((uint64_t)(a1 + 1), v5, v6, v8, (uint64_t)&v10)&& !boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>::dispatch_container<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>>(a2, a1));
    **(void **)a2 = v7;
  }
  return !v4;
}

BOOL boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,mpl_::BOOL_<false>>::dispatch_container<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t v5 = 0;
  int v6 = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  int v9 = 0;
  char v10 = 0;
  BOOL v3 = boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::pair<turi::flexible_type,turi::flexible_type>>(a2);
  if (v3) {
    std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::insert(*(void *)(a1 + 32), *(void *)(*(void *)(a1 + 32) + 8), &v5);
  }
  std::pair<turi::flexible_type,turi::flexible_type>::~pair((uint64_t)&v5);
  return !v3;
}

void sub_223EC2DB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::pair<turi::flexible_type,turi::flexible_type>::~pair((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,std::pair<turi::flexible_type,turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::pair<turi::flexible_type,turi::flexible_type>>(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  long long v2 = (void *)(v1 + 32);
  if (v3) {
    BOOL v4 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::pair<turi::flexible_type,turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::dummy::nonnull;
  }
  else {
    BOOL v4 = 0;
  }
  return v4
      && (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v2) & 1) != 0;
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__14pairIN4turi13flexible_typeESD_EENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSM_10eps_parserEEEEEaSINSM_6detail13parser_binderINSM_8sequenceINS9_INSM_9referenceIKNSM_4ruleIS2_FSD_vEKNS_5proto7exprns_4exprINS11_6tagns_3tag11logical_notENS11_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1I_EEEENS9_INSM_12literal_charINS6_13char_encoding8standardELb1ELb0EEENS9_IS1L_SG_EEEEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERST_E4typeES1Z_()
{
}

void sub_223EC2EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  BOOL v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      return result;
    case 2:
      uint64_t result = *(void *)a2;
      if (*(void *)a2) {
        uint64_t result = MEMORY[0x22A614FA0](result, 0x1060C40C13665F2);
      }
      goto LABEL_9;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C514CLL & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C514CLL & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

BOOL boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::pair<turi::flexible_type,turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(uint64_t *a1, unsigned __int8 **a2, unsigned __int8 **a3)
{
  return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::pair<turi::flexible_type,turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::pair<turi::flexible_type,turi::flexible_type>>(*a1, a2, a3);
}

BOOL boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::pair<turi::flexible_type,turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,std::pair<turi::flexible_type,turi::flexible_type>>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3)
{
  char v7 = *a2;
  BOOL result = boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,turi::flexible_type>((uint64_t *)a1);
  if (result)
  {
    if (v7 == *a3 || *(unsigned __int8 *)(a1 + 8) != *v7)
    {
      return 0;
    }
    else
    {
      uint64_t v8 = v7 + 1;
      BOOL result = boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,turi::flexible_type>((uint64_t *)(a1 + 16));
      if (result)
      {
        *a2 = v8;
        return 1;
      }
    }
  }
  return result;
}

void boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type>::define<mpl_::BOOL_<false>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>,boost::proto::exprns_::expr<boost::proto::tagns_::tag::modulus,boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript,boost::proto::argsns_::list2<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> &,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_,boost::spirit::char_encoding::standard>,boost::fusion::vector<char>>>,0l> const&>,2l> const&>,2l> const&,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<char const&>,0l>>,2l> const&>,2l>>(uint64_t a1, unsigned char ***a2)
{
  char v2 = *a2[1][1];
  uint64_t v3 = (uint64_t ***)*((void *)*a2[1] + 1);
  uint64_t v4 = ***v3;
  unint64_t v5 = *(unsigned __int16 *)(*v3)[1] | ((unint64_t)*((unsigned __int8 *)(*v3)[1] + 2) << 16);
  LOBYTE(v3) = *(unsigned char *)v3[1];
  char v6 = **(unsigned char **)*a2[1];
  char v7 = *(*a2)[1];
  v8[0] = ***a2;
  v8[1] = v7;
  v8[8] = v6;
  uint64_t v9 = v4;
  unint64_t v10 = v5;
  char v11 = (char)v3;
  char v12 = v2;
  _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorIN4turi13flexible_typeENSA_9allocatorISD_EEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSO_10eps_parserEEEEEaSINSO_6detail13parser_binderINSO_11alternativeINS9_INSO_8sequenceINS9_INSO_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_INS11_IS13_Lb1ELb0EEESI_EEEEEENS9_INS10_INS9_IS15_NS9_INSO_4listINSO_6actionINSO_9referenceIKNSO_4ruleIS2_FSD_vEKNS_5proto7exprns_4exprINS1E_6tagns_3tag11logical_notENS1E_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1V_EEEENS_7phoenix5actorINS1F_10basic_exprINS1Z_6detail3tag13function_evalENS1K_5list3INS21_INS1I_8terminalENS1K_4termINS1Z_3stl9push_backEEELl0EEENS20_INS6_9attributeILi0EEEEENS20_INS6_8argumentILi0EEEEEEELl3EEEEEEES14_EES16_EEEEEESI_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES2Y_(a1 + 32, (uint64_t)v8);
}

void _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorIN4turi13flexible_typeENSA_9allocatorISD_EEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSO_10eps_parserEEEEEaSINSO_6detail13parser_binderINSO_11alternativeINS9_INSO_8sequenceINS9_INSO_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_INS11_IS13_Lb1ELb0EEESI_EEEEEENS9_INS10_INS9_IS15_NS9_INSO_4listINSO_6actionINSO_9referenceIKNSO_4ruleIS2_FSD_vEKNS_5proto7exprns_4exprINS1E_6tagns_3tag11logical_notENS1E_7argsns_5list1IRKNS6_8terminalINS6_3tag3epsEEEEELl1EEENS6_11unused_typeES1V_EEEENS_7phoenix5actorINS1F_10basic_exprINS1Z_6detail3tag13function_evalENS1K_5list3INS21_INS1I_8terminalENS1K_4termINS1Z_3stl9push_backEEELl0EEENS20_INS6_9attributeILi0EEEEENS20_INS6_8argumentILi0EEEEEEELl3EEEEEEES14_EES16_EEEEEESI_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERSV_E4typeES2Y_(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  operator new();
}

void sub_223EC31CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::functor_manager<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  uint64_t v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)BOOL result = 0;
      return result;
    case 2:
      BOOL result = *(void *)a2;
      if (*(void *)a2) {
        BOOL result = MEMORY[0x22A614FA0](result, 0x1060C40C5F72233);
      }
      goto LABEL_9;
    case 3:
      BOOL result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C52BFLL & 0x7FFFFFFFFFFFFFFFLL)
        || (BOOL result = strcmp((const char *)result, (const char *)(0x80000002246C52BFLL & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(unsigned __int8 **a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(*a1, a2, a3, a4, a5);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(unsigned __int8 *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = *a2;
  if (*a2 == *a3) {
    return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 8, a2, a3, a4, a5, (uint64_t)&boost::spirit::unused);
  }
  char v6 = v5 + 1;
  BOOL v7 = *a1 != *v5 || v6 == *a3;
  if (v7 || a1[1] != *v6) {
    return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 8, a2, a3, a4, a5, (uint64_t)&boost::spirit::unused);
  }
  *a2 = v5 + 2;
  return 1;
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(unsigned __int8 *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6 = *a2;
  char v11 = &v15;
  char v12 = a3;
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  if (v6 == *a3) {
    return 0;
  }
  if (*a1 != *v6) {
    return 0;
  }
  uint64_t v15 = v6 + 1;
  if (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>::operator()<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::spirit::unused_type const>((uint64_t **)&v11, (uint64_t)(a1 + 8), a6))
  {
    return 0;
  }
  uint64_t v9 = *v11;
  if (*v11 == *v12 || a1[32] != *v9) {
    return 0;
  }
  *char v11 = v9 + 1;
  *a2 = v15;
  return 1;
}

BOOL boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>::operator()<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>,boost::spirit::unused_type const>(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[3];
  uint64_t v11 = **a1;
  BOOL v7 = &v11;
  long long v8 = *(_OWORD *)(a1 + 1);
  uint64_t v9 = v4;
  uint64_t v10 = a3;
  BOOL v5 = boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,boost::spirit::unused_type const,mpl_::BOOL_<false>>>(a2, (uint64_t *)&v7);
  if (v5) {
    *uint64_t v3 = v11;
  }
  return !v5;
}

BOOL boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,boost::spirit::unused_type const,mpl_::BOOL_<false>>>(uint64_t a1, uint64_t *a2)
{
  BOOL v4 = boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type>((uint64_t *)a1, *a2, a2[1], (uint64_t **)a2[2]);
  if (v4)
  {
    while (1)
    {
      BOOL v5 = (void *)*a2;
      char v6 = *(unsigned __int8 **)*a2;
      if (v6 == *(unsigned __int8 **)a2[1] || *(unsigned __int8 *)(a1 + 16) != *v6) {
        break;
      }
      *BOOL v5 = v6 + 1;
      if (!boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type>((uint64_t *)a1, *a2, a2[1], (uint64_t **)a2[2]))
      {
        BOOL v5 = (void *)*a2;
        break;
      }
    }
    *BOOL v5 = v6;
  }
  return v4;
}

BOOL boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v21 = 0;
  int v22 = 0;
  char v23 = 0;
  *(atomic_ullong **)((char *)v20 + 5) = 0;
  v20[0] = 0;
  boost::initialized<turi::flexible_type>::wrapper::~wrapper((uint64_t)&v21);
  BOOL v6 = boost::spirit::qi::reference<boost::spirit::qi::rule<char const*,turi::flexible_type ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const,boost::spirit::unused_type,boost::spirit::unused_type> const>::parse<char const*,boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,turi::flexible_type>(a1);
  if (v6) {
    boost::phoenix::stl::push_back::operator()<std::vector<turi::flexible_type>,turi::flexible_type>((uint64_t)(a1 + 1), *a4, (uint64_t)v20);
  }
  switch(BYTE4(v20[1]))
  {
    case 2:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        BOOL v7 = v20[0];
        if (v20[0])
        {
          if (*((char *)v20[0] + 31) < 0) {
            operator delete(*((void **)v20[0] + 1));
          }
          long long v8 = v7;
          uint64_t v9 = 0x1012C404EF22A49;
          goto LABEL_34;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v10 = v20[0];
        if (v20[0])
        {
          uint64_t v11 = (void *)v20[0][1];
          if (v11)
          {
            v20[0][2] = (atomic_ullong)v11;
            operator delete(v11);
          }
          long long v8 = v10;
          uint64_t v9 = 0x1080C409938AC02;
          goto LABEL_34;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        char v12 = v20[0];
        if (v20[0])
        {
          uint64_t v21 = (void **)(v20[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v21);
          goto LABEL_20;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        char v12 = v20[0];
        if (v20[0])
        {
          uint64_t v21 = (void **)(v20[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v21);
LABEL_20:
          long long v8 = v12;
          uint64_t v9 = 0x1020C405E66F15BLL;
          goto LABEL_34;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v13 = v20[0];
        if (v20[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v20[0] + 2);
          long long v8 = v13;
          unsigned int v14 = -235920773;
          goto LABEL_33;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v20[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v15 = v20[0];
        if (v20[0])
        {
          uint64_t v16 = (void *)v20[0][6];
          if (v16)
          {
            v20[0][7] = (atomic_ullong)v16;
            operator delete(v16);
          }
          uint64_t v17 = (void *)v15[3];
          if (v17)
          {
            v15[4] = (atomic_ullong)v17;
            operator delete(v17);
          }
          uint64_t v18 = (std::__shared_weak_count *)v15[2];
          if (v18) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v18);
          }
          long long v8 = v15;
          unsigned int v14 = 2071181815;
LABEL_33:
          uint64_t v9 = v14 | 0x1030C4000000000;
LABEL_34:
          MEMORY[0x22A614FA0](v8, v9);
        }
      }
      break;
    default:
      return v6;
  }
  return v6;
}

void sub_223EC37D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13)
{
  switch(a12)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a10) {
        goto LABEL_27;
      }
      if (*(char *)(a10 + 31) < 0) {
        operator delete(*(void **)(a10 + 8));
      }
      unsigned int v14 = (void *)a10;
      uint64_t v15 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a10) {
        goto LABEL_27;
      }
      uint64_t v18 = *(void **)(a10 + 8);
      if (v18)
      {
        *(void *)(a10 + 16) = v18;
        operator delete(v18);
      }
      unsigned int v14 = (void *)a10;
      uint64_t v15 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v16 = a10;
      if (!a10) {
        goto LABEL_27;
      }
      a13 = a10 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
      goto LABEL_21;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v16 = a10;
      if (!a10) {
        goto LABEL_27;
      }
      a13 = a10 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
LABEL_21:
      unsigned int v14 = (void *)v16;
      uint64_t v15 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a10) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a10 + 16));
      unsigned int v14 = (void *)a10;
      unsigned int v17 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a10, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a10) {
        goto LABEL_27;
      }
      unsigned int v14 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a10);
      unsigned int v17 = 2071181815;
LABEL_25:
      uint64_t v15 = v17 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v14, v15);
LABEL_27:
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_27;
  }
}

uint64_t *_ZN5boost6spirit2qi4ruleIPKcFNSt3__16vectorIdNS5_9allocatorIdEEEEvEKNS_5proto7exprns_4exprINSB_6tagns_3tag11logical_notENSB_7argsns_5list1IRKNS0_8terminalINS0_3tag3epsEEEEELl1EEENS0_11unused_typeESS_E6defineIN4mpl_5BOOL_ILb0EEENSD_INSF_10bitwise_orENSH_5list2IRKNSD_INSF_11shift_rightENSZ_IRKNSD_INSF_8terminalENSH_4termINS0_11terminal_exINSK_9char_codeINSK_5char_ENS0_13char_encoding8standardEEENS_6fusion6vectorIJcEEEEEEELl0EEENSD_IS11_NS12_IRS3_EELl0EEEEELl2EEERKNSD_IS10_NSZ_IRKNSD_IS10_NSZ_IS1J_RKNSD_INSF_7modulusENSZ_IRKNSD_INSF_9subscriptENSZ_IRKNSJ_INSK_7double_EEERKNS_7phoenix5actorINSC_10basic_exprINS1U_6detail3tag13function_evalENSH_5list3INS1W_IS11_NS12_INS1U_3stl9push_backEEELl0EEENS1V_INS0_9attributeILi0EEEEENS1V_INS0_8argumentILi0EEEEEEELl3EEEEEEELl2EEERKNSD_IS1P_NSZ_IRKNSD_IS11_NS12_INSK_7no_skipEEELl0EEERKNSD_ISY_NSZ_IRKNSD_ISY_NSZ_IRKNSD_IS10_NSZ_IRKNSD_INSF_11dereferenceENSI_IRKNSD_IS11_NS12_INS14_INSK_5spaceENS16_9iso8859_1EEEEELl0EEEEELl1EEES1G_EELl2EEES34_EELl2EEES2W_EELl2EEEEELl2EEEEELl2EEEEELl2EEES1J_EELl2EEEEELl2EEEEEvRST_RKT0_NSW_ILb1EEE(uint64_t a1, unsigned char ***a2)
{
  char v2 = *a2[1][1];
  uint64_t v3 = (void *)*((void *)*a2[1] + 1);
  int v4 = (**(unsigned __int16 **)(*v3 + 8) << 8) | (*(unsigned __int8 *)(*(void *)(*v3 + 8) + 2) << 24);
  char v5 = **(unsigned char **)(*(void *)(**(void **)(v3[1] + 8) + 8) + 8);
  LOBYTE(v3) = **(unsigned char **)(***(void ***)(v3[1] + 8) + 8);
  char v6 = **(unsigned char **)*a2[1];
  char v7 = *(*a2)[1];
  LOBYTE(v9) = ***a2;
  HIBYTE(v9) = v7;
  char v10 = v6;
  int v11 = v4;
  char v12 = (char)v3;
  char v13 = v5;
  char v14 = v2;
  return _ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorIdNSA_9allocatorIdEEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSM_10eps_parserEEEEEaSINSM_6detail13parser_binderINSM_11alternativeINS9_INSM_8sequenceINS9_INSM_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_INSZ_IS11_Lb1ELb0EEESG_EEEEEENS9_INSY_INS9_IS13_NS9_INSM_4listINSM_6actionINSM_15any_real_parserIdNSM_13real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS1D_6detail3tag13function_evalENS1F_7argsns_5list3INS1H_INS1F_6tagns_3tag8terminalENS1L_4termINS1D_3stl9push_backEEELl0EEENS1E_INS6_9attributeILi0EEEEENS1E_INS6_8argumentILi0EEEEEEELl3EEEEEEENSM_17no_skip_directiveINSX_INS9_INSY_INS9_INSM_6kleeneINSM_10char_classINS6_3tag9char_codeINS28_5spaceENS10_9iso8859_1EEEEEEENS9_IS12_SG_EEEEEENS9_IS2H_NS9_IS2D_SG_EEEEEEEEEEEES14_EEEEEESG_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERST_E4typeES2Z_((uint64_t *)(a1 + 32), &v9);
}

uint64_t *_ZN5boost8functionIFbRPKcRKS2_RNS_6spirit7contextINS_6fusion4consIRNSt3__16vectorIdNSA_9allocatorIdEEEENS8_4nil_EEENS8_6vectorIJEEEEERKNS6_2qi13not_predicateINSM_10eps_parserEEEEEaSINSM_6detail13parser_binderINSM_11alternativeINS9_INSM_8sequenceINS9_INSM_12literal_charINS6_13char_encoding8standardELb0ELb0EEENS9_INSZ_IS11_Lb1ELb0EEESG_EEEEEENS9_INSY_INS9_IS13_NS9_INSM_4listINSM_6actionINSM_15any_real_parserIdNSM_13real_policiesIdEEEENS_7phoenix5actorINS_5proto7exprns_10basic_exprINS1D_6detail3tag13function_evalENS1F_7argsns_5list3INS1H_INS1F_6tagns_3tag8terminalENS1L_4termINS1D_3stl9push_backEEELl0EEENS1E_INS6_9attributeILi0EEEEENS1E_INS6_8argumentILi0EEEEEEELl3EEEEEEENSM_17no_skip_directiveINSX_INS9_INSY_INS9_INSM_6kleeneINSM_10char_classINS6_3tag9char_codeINS28_5spaceENS10_9iso8859_1EEEEEEENS9_IS12_SG_EEEEEENS9_IS2H_NS9_IS2D_SG_EEEEEEEEEEEES14_EEEEEESG_EEEEEEN4mpl_5BOOL_ILb0EEEEEEENS_11enable_if_cIXntsr11is_integralIT_EE5valueERST_E4typeES2Z_(uint64_t *a1, __int16 *a2)
{
  char v3 = *((unsigned char *)a2 + 3);
  int v4 = *((_DWORD *)a2 + 1);
  __int16 v5 = a2[4];
  __int16 v6 = *(__int16 *)((char *)a2 + 11);
  char v7 = *((unsigned char *)a2 + 16);
  __int16 v10 = *a2;
  char v11 = v3;
  int v12 = v4;
  __int16 v13 = v5;
  __int16 v14 = v6;
  char v15 = v7;
  __int16 v9 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::assign_to<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>>(boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>)::stored_vtable;
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::swap((uint64_t *)&v9, a1);
  boost::function0<void>::~function0((uint64_t *)&v9);
  return a1;
}

void sub_223EC3AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::detail::function::function_obj_invoker4<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>,mpl_::BOOL_<false>>,BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser> const&>::invoke(unsigned __int8 *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  return boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1, a2, a3, a4, a5);
}

uint64_t boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::nil_>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(unsigned __int8 *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5)
{
  __int16 v5 = *a2;
  if (*a2 == *a3) {
    return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 3, a2, a3, a4, a5, (uint64_t)&boost::spirit::unused);
  }
  __int16 v6 = v5 + 1;
  BOOL v7 = *a1 != *v5 || v6 == *a3;
  if (v7 || a1[1] != *v6) {
    return boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(a1 + 3, a2, a3, a4, a5, (uint64_t)&boost::spirit::unused);
  }
  *a2 = v5 + 2;
  return 1;
}

uint64_t boost::spirit::qi::sequence_base<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::cons<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,true,false>,boost::fusion::nil_>>>>::parse_impl<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type const>(unsigned __int8 *a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int16 v6 = *a2;
  char v11 = &v15;
  int v12 = a3;
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  if (v6 == *a3) {
    return 0;
  }
  if (*a1 != *v6) {
    return 0;
  }
  char v15 = v6 + 1;
  if (boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>::operator()<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::spirit::unused_type const>((uint64_t **)&v11, (uint64_t)(a1 + 1), a6))return 0; {
  __int16 v9 = *v11;
  }
  if (*v11 == *v12 || a1[13] != *v9) {
    return 0;
  }
  *char v11 = v9 + 1;
  *a2 = v15;
  return 1;
}

uint64_t boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>::operator()<boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>,boost::spirit::unused_type const>(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  char v3 = *a1;
  int v4 = a1[3];
  uint64_t v11 = **a1;
  BOOL v7 = (unsigned __int8 **)&v11;
  long long v8 = *(_OWORD *)(a1 + 1);
  __int16 v9 = v4;
  uint64_t v10 = a3;
  int v5 = boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,boost::spirit::unused_type const,mpl_::BOOL_<false>>>(a2, &v7);
  if (v5) {
    *char v3 = v11;
  }
  return v5 ^ 1u;
}

uint64_t boost::spirit::qi::list<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>,boost::spirit::qi::no_skip_directive<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>>>::parse_container<boost::spirit::qi::detail::pass_container<boost::spirit::qi::detail::fail_function<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>>,boost::spirit::unused_type const,mpl_::BOOL_<false>>>(uint64_t a1, unsigned __int8 ***a2)
{
  uint64_t v4 = boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type>(a1, *a2, a2[1], (uint64_t *)a2[2]);
  if (v4)
  {
    do
    {
      int v5 = *a2;
      __int16 v6 = a2[1];
      BOOL v7 = **a2;
      uint64_t v8 = (uint64_t)a2[2];
      uint64_t v10 = a2[3];
    }
    while (boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::kleene<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard,false,false>,boost::fusion::nil_>>>,boost::fusion::cons<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,boost::fusion::nil_>>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::detail::unused_skipper<boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>>,boost::spirit::unused_type const>(a1 + 4, v5, v6, v8, (uint64_t)&v10)&& (boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type>(a1, *a2, a2[1], (uint64_t *)a2[2]) & 1) != 0);
    **a2 = v7;
  }
  return v4;
}

uint64_t boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double,boost::spirit::qi::real_policies<double>>,boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval,boost::proto::argsns_::list3<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::phoenix::stl::push_back>,0l>,boost::phoenix::actor<boost::spirit::attribute<0>>,boost::phoenix::actor<boost::spirit::argument<0>>>,3l>>>::parse<char const*,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>>,boost::spirit::qi::not_predicate<boost::spirit::qi::eps_parser>,boost::spirit::unused_type>(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3, uint64_t *a4)
{
  double v8 = 0.0;
  uint64_t v6 = boost::spirit::qi::detail::real_impl<double,boost::spirit::qi::real_policies<double>>::parse<char const*,double>(a2, a3, &v8);
  if (v6) {
    boost::phoenix::stl::push_back::operator()<std::vector<double>,double>(a1 + 1, *a4, &v8);
  }
  return v6;
}

void std::shared_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>>::shared_ptr[abi:ne180100]<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223EC3DE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>>::reset[abi:ne180100]((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const> *,std::shared_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>>::__shared_ptr_default_delete<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>,turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>>,std::allocator<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const>::~flexible_type_parser_impl(result);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const> *,std::shared_ptr<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>>::__shared_ptr_default_delete<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>,turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>>,std::allocator<turi::flexible_type_parser_impl<char const*,boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not,boost::proto::argsns_::list1<boost::spirit::terminal<boost::spirit::tag::eps> const&>,1l> const>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t boost::spirit::qi::rule<char const*,std::vector<std::pair<turi::flexible_type,turi::flexible_type>> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::parse<boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::spirit::locals<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = (void *)(a1 + 32);
  if (v2) {
    char v3 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<std::pair<turi::flexible_type,turi::flexible_type>> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::dummy::nonnull;
  }
  else {
    char v3 = 0;
  }
  if (v3)
  {
    memset(v6, 0, sizeof(v6));
    int v5 = (void **)v6;
    if (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v1)) {
      boost::spirit::traits::assign_to_attribute_from_value<turi::flexible_type,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,void>::call<std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>();
    }
    int v5 = (void **)v6;
    std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
  return 0;
}

void sub_223EC3F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void boost::spirit::traits::assign_to_attribute_from_value<turi::flexible_type,std::vector<std::pair<turi::flexible_type,turi::flexible_type>>,void>::call<std::vector<std::pair<turi::flexible_type,turi::flexible_type>>>()
{
}

void sub_223EC4240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  MEMORY[0x22A614FA0](v11, 0x1020C405E66F15BLL);
  if (atomic_fetch_add((atomic_ullong *volatile)v10, 0xFFFFFFFFFFFFFFFFLL) == 1 && v10 != 0)
  {
    a10 = (void **)(v10 + 8);
    std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&a10);
    MEMORY[0x22A614FA0](v10, 0x1020C405E66F15BLL);
  }
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::rule<char const*,std::vector<turi::flexible_type> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::parse<boost::spirit::context<boost::fusion::cons<turi::flexible_type&,boost::fusion::nil_>,boost::spirit::locals<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = (void *)(a1 + 32);
  if (v2) {
    char v3 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<turi::flexible_type> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::dummy::nonnull;
  }
  else {
    char v3 = 0;
  }
  if (v3)
  {
    memset(v6, 0, sizeof(v6));
    int v5 = (void **)v6;
    if (boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v1)) {
      boost::spirit::traits::assign_to_attribute_from_value<turi::flexible_type,std::vector<turi::flexible_type>,void>::call<std::vector<turi::flexible_type>>();
    }
    int v5 = (void **)v6;
    std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
  return 0;
}

void sub_223EC4370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void boost::spirit::traits::assign_to_attribute_from_value<turi::flexible_type,std::vector<turi::flexible_type>,void>::call<std::vector<turi::flexible_type>>()
{
}

void sub_223EC4680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  MEMORY[0x22A614FA0](v11, 0x1020C405E66F15BLL);
  if (atomic_fetch_add((atomic_ullong *volatile)v10, 0xFFFFFFFFFFFFFFFFLL) == 1 && v10 != 0)
  {
    a10 = (void **)(v10 + 8);
    std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a10);
    MEMORY[0x22A614FA0](v10, 0x1020C405E66F15BLL);
  }
  _Unwind_Resume(a1);
}

uint64_t boost::spirit::qi::rule<char const*,std::vector<double> ()(void),boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal,boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,0l> const,boost::spirit::unused_type,boost::spirit::unused_type>::parse<boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::spirit::locals<mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na,mpl_::na>>,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>>,turi::flexible_type>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = (void *)(a1 + 32);
  if (v2) {
    char v3 = boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::dummy::nonnull;
  }
  else {
    char v3 = 0;
  }
  if (v3
    && boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<std::vector<double> &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::operator()(v1))
  {
    boost::spirit::traits::assign_to_attribute_from_value<turi::flexible_type,std::vector<double>,void>::call<std::vector<double>>();
  }
  return 0;
}

void sub_223EC47A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void boost::spirit::traits::assign_to_attribute_from_value<turi::flexible_type,std::vector<double>,void>::call<std::vector<double>>()
{
}

void sub_223EC4AB8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v2, 0x1080C409938AC02);
  if (atomic_fetch_add(v1, 0xFFFFFFFFFFFFFFFFLL) == 1 && v1 != 0)
  {
    int v5 = (void *)v1[1];
    if (v5)
    {
      v1[2] = (atomic_ullong)v5;
      operator delete(v5);
    }
    MEMORY[0x22A614FA0](v1, 0x1080C409938AC02);
  }
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_3(void **a1)
{
}

void turi::escape_string(uint64_t *a1, std::string::value_type a2, char a3, int a4, int a5, int a6, std::string *this, void *a8)
{
  std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  char v17 = size;
  if ((size & 0x80u) != 0) {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
  }
  if (*((char *)a1 + 23) < 0) {
    uint64_t v18 = a1[1];
  }
  else {
    uint64_t v18 = *((unsigned __int8 *)a1 + 23);
  }
  std::string::size_type v19 = 2 * v18 + 2;
  if (size < v19)
  {
    std::string::resize(this, v19, 0);
    char v17 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  if (v17 >= 0) {
    uint64_t v20 = this;
  }
  else {
    uint64_t v20 = (std::string *)this->__r_.__value_.__r.__words[0];
  }
  if (a5)
  {
    v20->__r_.__value_.__s.__data_[0] = a4;
    uint64_t v20 = (std::string *)((char *)v20 + 1);
  }
  int v21 = *((char *)a1 + 23);
  uint64_t v22 = *((unsigned __int8 *)a1 + 23);
  BOOL v23 = v21 < 0;
  uint64_t v24 = a1[1];
  if (v21 >= 0) {
    uint64_t v25 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    uint64_t v25 = a1[1];
  }
  if ((a3 & 1) == 0)
  {
    if (!v25) {
      goto LABEL_86;
    }
    unint64_t v36 = 0;
    if (a4 == 39) {
      int v37 = a6;
    }
    else {
      int v37 = 0;
    }
    while (1)
    {
      long long v38 = (uint64_t *)*a1;
      if (!v23) {
        long long v38 = a1;
      }
      int v39 = *((char *)v38 + v36);
      if (v39 == 34)
      {
        v20->__r_.__value_.__s.__data_[0] = 34;
        v40 = (std::string *)((char *)&v20->__r_.__value_.__l.__data_ + 1);
        if (!a6) {
          goto LABEL_81;
        }
        v20->__r_.__value_.__s.__data_[1] = 34;
      }
      else
      {
        if (v39 != 39)
        {
          v20->__r_.__value_.__s.__data_[0] = v39;
          uint64_t v20 = (std::string *)((char *)v20 + 1);
          goto LABEL_83;
        }
        v20->__r_.__value_.__s.__data_[0] = 39;
        v40 = (std::string *)((char *)&v20->__r_.__value_.__l.__data_ + 1);
        if (!v37)
        {
LABEL_81:
          uint64_t v20 = v40;
          goto LABEL_83;
        }
        v20->__r_.__value_.__s.__data_[1] = 39;
      }
      uint64_t v20 = (std::string *)((char *)v20 + 2);
LABEL_83:
      ++v36;
      BOOL v23 = *((char *)a1 + 23) < 0;
      unint64_t v41 = *((unsigned __int8 *)a1 + 23);
      if ((v41 & 0x80u) != 0) {
        unint64_t v41 = a1[1];
      }
      if (v36 >= v41) {
        goto LABEL_86;
      }
    }
  }
  if (v25)
  {
    unint64_t v26 = 0;
    if (a4 == 34) {
      int v27 = a6;
    }
    else {
      int v27 = 0;
    }
    if (a4 == 34) {
      int v28 = a5;
    }
    else {
      int v28 = 0;
    }
    if (a4 == 39) {
      int v29 = a6;
    }
    else {
      int v29 = 0;
    }
    if (a4 == 39) {
      int v30 = a5;
    }
    else {
      int v30 = 0;
    }
    do
    {
      if (v23) {
        long long v31 = (uint64_t *)*a1;
      }
      else {
        long long v31 = a1;
      }
      int v32 = *((char *)v31 + v26);
      if (v32 <= 33)
      {
        switch(*((unsigned char *)v31 + v26))
        {
          case 8:
            v20->__r_.__value_.__s.__data_[0] = a2;
            v20->__r_.__value_.__s.__data_[1] = 98;
            goto LABEL_60;
          case 9:
            v20->__r_.__value_.__s.__data_[0] = a2;
            v20->__r_.__value_.__s.__data_[1] = 116;
            goto LABEL_60;
          case 0xA:
            v20->__r_.__value_.__s.__data_[0] = a2;
            v20->__r_.__value_.__s.__data_[1] = 110;
            goto LABEL_60;
          case 0xB:
          case 0xC:
            goto LABEL_54;
          case 0xD:
            v20->__r_.__value_.__s.__data_[0] = a2;
            v20->__r_.__value_.__s.__data_[1] = 114;
            goto LABEL_60;
          default:
            if (*((unsigned char *)v31 + v26)) {
              goto LABEL_54;
            }
            v20->__r_.__value_.__s.__data_[0] = a2;
            v20->__r_.__value_.__s.__data_[1] = 0;
            break;
        }
        goto LABEL_60;
      }
      switch(v32)
      {
        case '""':
          if (!v27)
          {
            if (!v28)
            {
              v20->__r_.__value_.__s.__data_[0] = 34;
              uint64_t v20 = (std::string *)((char *)v20 + 1);
              break;
            }
            v20->__r_.__value_.__s.__data_[0] = a2;
            v20->__r_.__value_.__s.__data_[1] = 34;
            goto LABEL_60;
          }
          LOWORD(v20->__r_.__value_.__l.__data_) = 8738;
          uint64_t v20 = (std::string *)((char *)v20 + 2);
          break;
        case '\\':
          if (v23) {
            uint64_t v33 = v24;
          }
          else {
            uint64_t v33 = v22;
          }
          if (v26 >= v33 - 1 || (int v34 = *((unsigned __int8 *)v31 + v26 + 1), v34 != 120) && v34 != 117)
          {
            v20->__r_.__value_.__s.__data_[0] = a2;
            v20->__r_.__value_.__s.__data_[1] = 92;
LABEL_60:
            uint64_t v20 = (std::string *)((char *)v20 + 2);
            break;
          }
LABEL_54:
          v20->__r_.__value_.__s.__data_[0] = *((unsigned char *)v31 + v26);
          uint64_t v20 = (std::string *)((char *)v20 + 1);
          break;
        case '\'':
          if (!v29)
          {
            if (!v30)
            {
              v20->__r_.__value_.__s.__data_[0] = 39;
              uint64_t v20 = (std::string *)((char *)v20 + 1);
              break;
            }
            v20->__r_.__value_.__s.__data_[0] = a2;
            v20->__r_.__value_.__s.__data_[1] = 39;
            goto LABEL_60;
          }
          LOWORD(v20->__r_.__value_.__l.__data_) = 10023;
          uint64_t v20 = (std::string *)((char *)v20 + 2);
          break;
        default:
          goto LABEL_54;
      }
      ++v26;
      uint64_t v22 = *((unsigned __int8 *)a1 + 23);
      BOOL v23 = *((char *)a1 + 23) < 0;
      uint64_t v24 = a1[1];
      if (*((char *)a1 + 23) >= 0) {
        unint64_t v35 = *((unsigned __int8 *)a1 + 23);
      }
      else {
        unint64_t v35 = a1[1];
      }
    }
    while (v26 < v35);
  }
LABEL_86:
  if (a5)
  {
    v20->__r_.__value_.__s.__data_[0] = a4;
    uint64_t v20 = (std::string *)((char *)v20 + 1);
  }
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    atomic_ullong *volatile v42 = this;
  }
  else {
    atomic_ullong *volatile v42 = (std::string *)this->__r_.__value_.__r.__words[0];
  }
  *a8 = (char *)v20 - (char *)v42;
}

BOOL turi::parse_hex_block(turi *this, char *a2, unint64_t *a3)
{
  BOOL v3 = 0;
  unint64_t v4 = 0;
  uint64_t v5 = 0;
  do
  {
    uint64_t v6 = 16 * v5;
    *(void *)a2 = v6;
    int v7 = *((char *)this + v4);
    if ((v7 - 48) >= 0xAu)
    {
      int v8 = -87;
      if ((v7 - 97) >= 6u)
      {
        if ((v7 - 65) > 5u) {
          return v3;
        }
        int v8 = -55;
      }
    }
    else
    {
      int v8 = -48;
    }
    uint64_t v5 = v6 + (v8 + v7);
    *(void *)a2 = v5;
    BOOL v3 = v4++ > 2;
  }
  while (v4 != 4);
  return v3;
}

uint64_t turi::write_utf8(unint64_t this, unsigned char *a2, char *a3)
{
  if (this > 0x7F)
  {
    if (this > 0x7FF)
    {
      if (this >> 16)
      {
        if (this >> 16 > 0x10)
        {
          return 0;
        }
        else
        {
          *a2 = (this >> 18) - 16;
          a2[1] = (this >> 12) & 0x3F | 0x80;
          a2[2] = (this >> 6) & 0x3F | 0x80;
          a2[3] = this & 0x3F | 0x80;
          return 4;
        }
      }
      else
      {
        *a2 = (this >> 12) - 32;
        a2[1] = (this >> 6) & 0x3F | 0x80;
        a2[2] = this & 0x3F | 0x80;
        return 3;
      }
    }
    else
    {
      *a2 = (this >> 6) - 64;
      a2[1] = this & 0x3F | 0x80;
      return 2;
    }
  }
  else
  {
    *a2 = this;
    return 1;
  }
}

uint64_t turi::unescape_string(turi *this, char *a2, int a3, unsigned __int8 a4, unsigned __int8 a5, int a6)
{
  if (a2)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    int v12 = a5;
    int v13 = a4;
    while (1)
    {
      if (a3)
      {
        uint64_t v14 = (char *)this + v10;
        unint64_t v15 = v10 + 1;
        if (*((unsigned __int8 *)this + v10) == v13 && v15 < (unint64_t)a2) {
          break;
        }
      }
      int v17 = *((unsigned __int8 *)this + v10);
      if (!a6
        || v17 != v12
        || (LOBYTE(v17) = v12, v10 + 1 >= (unint64_t)a2)
        || (LOBYTE(v17) = v12, *((unsigned __int8 *)this + v10 + 1) != v12))
      {
        *((unsigned char *)this + v11) = v17;
LABEL_15:
        ++v11;
        goto LABEL_16;
      }
      *((unsigned char *)this + v11++) = v12;
      ++v10;
LABEL_16:
      if ((char *)++v10 == a2) {
        return v11;
      }
    }
    int v18 = *((char *)this + v15);
    if (v18 > 91)
    {
      int v19 = v18 - 110;
      char v20 = v13;
      switch(v19)
      {
        case 0:
          *((unsigned char *)this + v11) = 10;
          goto LABEL_36;
        case 1:
        case 2:
        case 3:
        case 5:
          goto LABEL_32;
        case 4:
          *((unsigned char *)this + v11) = 13;
          goto LABEL_36;
        case 6:
          *((unsigned char *)this + v11) = 9;
          goto LABEL_36;
        case 7:
          if (v10 + 6 > (unint64_t)a2) {
            goto LABEL_31;
          }
          *(void *)int v28 = 0;
          if (!turi::parse_hex_block((turi *)(v14 + 2), v28, (unint64_t *)9)) {
            goto LABEL_46;
          }
          unint64_t v22 = *(void *)v28;
          if (*(void *)v28 >> 8 == 216)
          {
            unint64_t v27 = 0;
            if (v10 + 12 > (unint64_t)a2
              || *((unsigned __int8 *)this + v10 + 6) != v13
              || *((unsigned char *)this + v10 + 7) != 117
              || (unint64_t v23 = *(void *)v28, !turi::parse_hex_block((turi *)(v14 + 8), (char *)&v27, v21))
              || v27 >> 10 < 0x37
              || v27 >= 0xE000)
            {
LABEL_46:
              char v20 = v13;
              goto LABEL_32;
            }
            unint64_t v22 = v27 + (v23 << 10) - 56613888;
            uint64_t v24 = 11;
          }
          else
          {
            uint64_t v24 = 5;
          }
          v10 += v24;
          uint64_t v25 = turi::write_utf8(v22, (unsigned char *)this + v11, (char *)v21);
          v11 += v25;
          if (v25) {
            goto LABEL_16;
          }
          char v20 = *((unsigned char *)this + v10);
          goto LABEL_32;
        default:
          if (v13 == 92)
          {
            *((unsigned char *)this + v11) = 92;
          }
          else
          {
            if (v13 != 98) {
              goto LABEL_31;
            }
            *((unsigned char *)this + v11) = 8;
          }
          break;
      }
      goto LABEL_36;
    }
    switch(v18)
    {
      case '""':
        *((unsigned char *)this + v11) = 34;
        goto LABEL_36;
      case '\'':
        *((unsigned char *)this + v11) = 39;
        goto LABEL_36;
      case '/':
        *((unsigned char *)this + v11) = 47;
LABEL_36:
        ++v11;
        ++v10;
        goto LABEL_16;
    }
LABEL_31:
    char v20 = v13;
LABEL_32:
    *((unsigned char *)this + v11) = v20;
    goto LABEL_15;
  }
  return 0;
}

void turi::unescape_string(std::string *a1, int a2, unsigned __int8 a3, unsigned __int8 a4, int a5)
{
  __int16 v9 = a1;
  std::string::size_type size = (char *)a1->__r_.__value_.__l.__size_;
  if ((a1->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
  {
    uint64_t v11 = (char *)HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  else
  {
    a1 = (std::string *)a1->__r_.__value_.__r.__words[0];
    uint64_t v11 = size;
  }
  std::string::size_type v12 = turi::unescape_string((turi *)a1, v11, a2, a3, a4, a5);
  std::string::resize(v9, v12, 0);
}

void *std::__function::__value_func<void ()(unsigned long)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t std::__function::__value_func<void ()(void)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

{
  void *v3;
  uint64_t v4;

  uint64_t v3 = (void *)(a2 + 24);
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t std::__function::__value_func<void ()(unsigned long)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t std::function<void ()(unsigned long)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void turi::style_transfer::ResNet16Checkpoint::ResNet16Checkpoint(uint64_t a1, int *a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)a2;
  uint64_t v5 = *((void *)a2 + 2);
  uint64_t v3 = *(unsigned __int8 *)(a3 + 23);
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *(void *)(a3 + 8);
  }
  if (v3) {
    turi::style_transfer::init_resnet();
  }
  turi::style_transfer::init_resnet((turi::style_transfer *)*a2);
}

void sub_223EC565C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, turi::neural_net::model_spec *a9)
{
}

uint64_t turi::style_transfer::ResNet16Checkpoint::ResNet16Checkpoint(uint64_t a1, long long *a2, void *a3)
{
  long long v13 = *a2;
  uint64_t v14 = *((void *)a2 + 2);
  long long v4 = (void *)*a3;
  uint64_t v6 = a3 + 1;
  uint64_t v5 = (void *)a3[1];
  uint64_t v10 = (void *)*a3;
  uint64_t v11 = v5;
  uint64_t v7 = a3[2];
  uint64_t v12 = v7;
  if (v7)
  {
    v5[2] = &v11;
    *a3 = v6;
    void *v6 = 0;
    a3[2] = 0;
  }
  else
  {
    uint64_t v10 = &v11;
    long long v4 = &v11;
  }
  *(void *)a1 = &unk_26D758B80;
  *(_OWORD *)(a1 + 8) = v13;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v5;
  uint64_t v8 = a1 + 40;
  *(void *)(a1 + 48) = v7;
  if (v7)
  {
    v5[2] = v8;
    uint64_t v10 = &v11;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    *(void *)(a1 + 32) = v8;
  }
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)&v10, v5);
  *(void *)a1 = &unk_26D758AC0;
  return a1;
}

void turi::style_transfer::ResNet16Checkpoint::CreateModelTrainer(void *a1@<X8>)
{
  *a1 = 0;
  operator new();
}

void sub_223EC57FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)&a10, a11);
  MEMORY[0x22A614FA0](v12, 0x10A1C40F8EEC480);
  *uint64_t v11 = 0;
  _Unwind_Resume(a1);
}

void turi::style_transfer::ResNet16Checkpoint::ExportToCoreML(turi::style_transfer::ResNet16Checkpoint *this)
{
}

void sub_223EC58BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100]((turi::neural_net::model_spec **)va, 0);
  _Unwind_Resume(a1);
}

uint64_t turi::style_transfer::ResNet16ModelTrainer::ResNet16ModelTrainer(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(void *)(a1 + 24) = v5;
  *(void *)a1 = &unk_26D758AF0;
  uint64_t v6 = (char *)operator new(0x40uLL);
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *(void *)uint64_t v6 = &unk_26D758BB0;
  *((void *)v6 + 7) = 0;
  *(void *)(a1 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *((void *)v6 + 5) = v6 + 48;
  *(void *)(a1 + 32) = v6 + 24;
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__move_assign((uint64_t)(v6 + 40), a3);
  return a1;
}

void turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(turi::style_transfer::ResNet16ModelTrainer *this@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = (char *)operator new(0x30uLL);
  uint64_t v5 = (std::__shared_weak_count *)v4;
  *((void *)v4 + 1) = 0;
  *((void *)v4 + 2) = 0;
  *(void *)long long v4 = &unk_26D758C00;
  uint64_t v6 = (std::__shared_weak_count_vtbl *)(v4 + 24);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)((char *)this + 8);
  uint64_t v7 = *((void *)this + 4);
  *((void *)v4 + 5) = *((void *)this + 3);
  uint64_t v8 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v8)
  {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v12 = (std::__shared_weak_count *)v4;
    uint64_t v13 = v7;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v4 + 1, 1uLL, memory_order_relaxed);
    uint64_t v14 = v8;
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v12 = (std::__shared_weak_count *)v4;
    uint64_t v13 = v7;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v4 + 1, 1uLL, memory_order_relaxed);
    uint64_t v14 = 0;
  }
  uint64_t v11 = v4 + 24;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v4 + 1, 1uLL, memory_order_relaxed);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  __int16 v9 = (std::__shared_weak_count *)operator new(0x50uLL);
  v9->__shared_weak_owners_ = 0;
  v9->__shared_owners_ = 0;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758C50;
  v9[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758CA0;
  v9[1].__shared_owners_ = (uint64_t)&v9[1];
  v9[2].__vftable = v6;
  v9[2].__shared_owners_ = (uint64_t)v5;
  v9[2].__shared_weak_owners_ = v7;
  v9[3].__vftable = (std::__shared_weak_count_vtbl *)v8;
  atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  atomic_fetch_add_explicit(&v9->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  v9[1].__shared_weak_owners_ = (uint64_t)v9;
  std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>::AsPublisher((uint64_t)&v9[1], &v10);
  std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  *a2 = v10;
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v5);
}

void sub_223EC5B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0::~$_0((uint64_t)&a9);
  turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0::~$_0((uint64_t)&a15);
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  _Unwind_Resume(a1);
}

uint64_t turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0::~$_0(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  return a1;
}

void turi::style_transfer::ResNet16ModelTrainer::CreateTrainingBackend(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  turi::neural_net::shared_float_array::wrap(1.0, (uint64_t)&v11);
  std::string::basic_string[abi:ne180100]<0>(v16, "st_training");
  v16[3] = &unk_26D752D58;
  long long v2 = v12;
  long long v12 = 0uLL;
  long long v17 = v2;
  long long v18 = v13;
  long long v19 = v14;
  turi::neural_net::shared_float_array::wrap((float)*(int *)(a1 + 8), (uint64_t)&v7);
  std::string::basic_string[abi:ne180100]<0>(v20, "st_num_styles");
  int v21 = &unk_26D752D58;
  long long v3 = v8;
  long long v8 = 0uLL;
  v22[0] = v3;
  v22[1] = v9;
  v22[2] = v10;
  std::map<std::string,turi::neural_net::shared_float_array>::map[abi:ne180100]((uint64_t)v15, v16, 2);
  unint64_t v4 = 0;
  while (1)
  {
    uint64_t v5 = &v16[v4 / 8];
    *(void **)((char *)&v21 + v4) = &unk_26D752D58;
    uint64_t v6 = (std::__shared_weak_count *)*((void *)&v22[v4 / 0x10] + 1);
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
    if (*((char *)v5 + 103) < 0) {
      operator delete((void *)v5[10]);
    }
    v4 -= 80;
    if (v4 == -160)
    {
      uint64_t v7 = (turi::neural_net::model_spec *)&unk_26D752D58;
      if (*((void *)&v8 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v8 + 1));
      }
      uint64_t v11 = &unk_26D752D58;
      if (*((void *)&v12 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v12 + 1));
      }
      turi::style_transfer::init_vgg_16();
    }
  }
}

void sub_223EC5EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, turi::neural_net::model_spec *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,void *a26,uint64_t a27,char a28,void *a29)
{
  if (a10) {
    turi::style_transfer::ResNet16ModelTrainer::CreateTrainingBackend(a10);
  }
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)&a18, a19);
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)&a28, a29);
  std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a11, 0);
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)&a25, a26);
  _Unwind_Resume(a1);
}

uint64_t *turi::style_transfer::ResNet16ModelTrainer::GetWeights@<X0>(const void ***a1@<X0>, uint64_t *a2@<X8>)
{
  long long v3 = *a1;
  if (v3) {
    return (uint64_t *)(*((uint64_t (**)(void))*v3 + 2))();
  }
  else {
    return std::map<std::string,turi::neural_net::shared_float_array>::map[abi:ne180100](a2, a1 + 2);
  }
}

void std::shared_ptr<turi::neural_net::model_backend>::operator=[abi:ne180100]<turi::neural_net::model_backend,std::default_delete<turi::neural_net::model_backend>,void>()
{
}

void turi::style_transfer::ResNet16ModelTrainer::CreateInferenceBackend(turi::style_transfer::ResNet16ModelTrainer *this@<X0>, turi::neural_net::compute_context *a2@<X1>, void *a3@<X8>)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  turi::neural_net::shared_float_array::wrap(0.0, (uint64_t)&v15);
  std::string::basic_string[abi:ne180100]<0>(v20, "st_training");
  void v20[3] = &unk_26D752D58;
  long long v6 = v16;
  long long v16 = 0uLL;
  long long v21 = v6;
  long long v22 = v17;
  long long v23 = v18;
  turi::neural_net::shared_float_array::wrap((float)*((int *)this + 2), (uint64_t)&v11);
  std::string::basic_string[abi:ne180100]<0>(v24, "st_num_styles");
  uint64_t v25 = &unk_26D752D58;
  long long v7 = v12;
  long long v12 = 0uLL;
  v26[0] = v7;
  v26[1] = v13;
  v26[2] = v14;
  std::map<std::string,turi::neural_net::shared_float_array>::map[abi:ne180100]((uint64_t)v19, v20, 2);
  unint64_t v8 = 0;
  while (1)
  {
    long long v9 = &v20[v8 / 8];
    *(void **)((char *)&v25 + v8) = &unk_26D752D58;
    long long v10 = (std::__shared_weak_count *)*((void *)&v26[v8 / 0x10] + 1);
    if (v10) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v10);
    }
    if (*((char *)v9 + 103) < 0) {
      operator delete((void *)v9[10]);
    }
    v8 -= 80;
    if (v8 == -160)
    {
      uint64_t v11 = &unk_26D752D58;
      if (*((void *)&v12 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v12 + 1));
      }
      unint64_t v15 = &unk_26D752D58;
      if (*((void *)&v16 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v16 + 1));
      }
      turi::style_transfer::ResNet16ModelTrainer::GetWeights(*((const void ****)this + 4), (uint64_t *)v20);
      (*(void (**)(void **__return_ptr, turi::neural_net::compute_context *, unsigned char *, const void **))(*(void *)a2 + 48))(&v15, a2, v19, v20);
      *a3 = v15;
      operator new();
    }
  }
}

void sub_223EC6380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,void *a26,uint64_t a27,char a28)
{
  if (a18) {
    turi::style_transfer::ResNet16ModelTrainer::CreateTrainingBackend(a18);
  }
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)&a28, *(void **)(v28 + 8));
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)&a25, a26);
  _Unwind_Resume(a1);
}

void turi::style_transfer::ResNet16Checkpoint::~ResNet16Checkpoint(turi::style_transfer::ResNet16Checkpoint *this)
{
  *(void *)this = &unk_26D758B80;
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)this + 32, *((void **)this + 5));
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D758B80;
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy((uint64_t)this + 32, *((void **)this + 5));
  JUMPOUT(0x22A614FA0);
}

void turi::style_transfer::ResNet16ModelTrainer::~ResNet16ModelTrainer(turi::style_transfer::ResNet16ModelTrainer *this)
{
  *(void *)this = &unk_26D758AF0;
  uint64_t v1 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

{
  std::__shared_weak_count *v1;
  uint64_t vars8;

  *(void *)this = &unk_26D758AF0;
  uint64_t v1 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  JUMPOUT(0x22A614FA0);
}

uint64_t turi::style_transfer::ResNet16ModelTrainer::SupportsLossComponents(turi::style_transfer::ResNet16ModelTrainer *this)
{
  return 0;
}

void std::__shared_ptr_emplace<turi::style_transfer::ResNet16ModelTrainer::ModelState>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758BB0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::style_transfer::ResNet16ModelTrainer::ModelState>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758BB0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::style_transfer::ResNet16ModelTrainer::ModelState>::__on_zero_shared(uint64_t a1)
{
  std::allocator<turi::style_transfer::ResNet16ModelTrainer::ModelState>::destroy[abi:ne180100]((uint64_t)&v1, a1 + 24);
}

void std::allocator<turi::style_transfer::ResNet16ModelTrainer::ModelState>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy(a2 + 16, *(void **)(a2 + 24));
  long long v3 = *(std::__shared_weak_count **)(a2 + 8);
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__move_assign(uint64_t a1, void *a2)
{
  unint64_t v4 = (void *)(a1 + 8);
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::destroy(a1, *(void **)(a1 + 8));
  *(void *)a1 = *a2;
  uint64_t v5 = a2 + 1;
  uint64_t v6 = a2[1];
  *unint64_t v4 = v6;
  uint64_t v7 = a2[2];
  *(void *)(a1 + 16) = v7;
  if (v7)
  {
    *(void *)(v6 + 16) = v4;
    *a2 = v5;
    *uint64_t v5 = 0;
    a2[2] = 0;
  }
  else
  {
    *(void *)a1 = v4;
  }
}

void std::__shared_ptr_emplace<turi::style_transfer::Config>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758C00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::style_transfer::Config>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758C00;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>::AsPublisher(uint64_t a1@<X0>, void *a2@<X8>)
{
  std::shared_ptr<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>>::shared_ptr[abi:ne180100]<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>,void>(&v3, (void *)(a1 + 8));
  std::allocate_shared[abi:ne180100]<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>>,std::shared_ptr<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>>,void>(&v3, a2);
  if (*((void *)&v3 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v3 + 1));
  }
}

void sub_223EC6834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_emplace<turi::neural_net::CallableIterator<turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758C50;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::neural_net::CallableIterator<turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758C50;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<turi::neural_net::CallableIterator<turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *turi::neural_net::CallableIterator<turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0>::~CallableIterator(void *a1)
{
  *a1 = &unk_26D758CA0;
  long long v2 = (std::__shared_weak_count *)a1[6];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  long long v3 = (std::__shared_weak_count *)a1[4];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  unint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  return a1;
}

void turi::neural_net::CallableIterator<turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0>::~CallableIterator(void *a1)
{
  *a1 = &unk_26D758CA0;
  long long v2 = (std::__shared_weak_count *)a1[6];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  long long v3 = (std::__shared_weak_count *)a1[4];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  unint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  JUMPOUT(0x22A614FA0);
}

uint64_t turi::neural_net::CallableIterator<turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0>::HasNext()
{
  return 1;
}

void turi::neural_net::CallableIterator<turi::style_transfer::ResNet16ModelTrainer::AsCheckpointPublisher(void)::$_0>::Next(void *a1@<X8>)
{
  *a1 = 0;
  operator new();
}

void sub_223EC6A6C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v2, 0x10A1C4010D4A631);
  *char v1 = 0;
  _Unwind_Resume(a1);
}

void std::allocate_shared[abi:ne180100]<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>>,std::shared_ptr<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>>,void>(long long *a1@<X1>, void *a2@<X8>)
{
  unint64_t v4 = operator new(0x40uLL);
  v4[1] = 0;
  v4[2] = 0;
  *unint64_t v4 = &unk_26D758D20;
  long long v5 = *a1;
  *(void *)a1 = 0;
  *((void *)a1 + 1) = 0;
  v4[5] = 0;
  v4[3] = &unk_26D758D70;
  *((_OWORD *)v4 + 3) = v5;
  *a2 = v4 + 3;
  a2[1] = v4;
  uint64_t v4[4] = 0;
  std::shared_ptr<turi::visualization::Plot>::__enable_weak_this[abi:ne180100]<cppipc::ipc_object_base,turi::visualization::Plot,void>((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void std::__shared_ptr_emplace<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758D20;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758D20;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::~IteratorPublisher(void *a1)
{
  *a1 = &unk_26D758D70;
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  long long v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  return a1;
}

void turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::~IteratorPublisher(void *a1)
{
  *a1 = &unk_26D758D70;
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  long long v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  JUMPOUT(0x22A614FA0);
}

void turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::Receive(uint64_t a1, uint64_t *a2)
{
  std::allocate_shared[abi:ne180100]<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>,std::shared_ptr<turi::neural_net::Subscriber<std::unique_ptr<turi::style_transfer::Checkpoint>>> &,std::shared_ptr<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>> &,void>(a2, (uint64_t *)(a1 + 24), &v5);
  uint64_t v3 = *a2;
  long long v4 = v5;
  long long v5 = 0uLL;
  (*(void (**)(uint64_t, long long *))(*(void *)v3 + 16))(v3, &v4);
  if (*((void *)&v4 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v4 + 1));
  }
  if (*((void *)&v5 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v5 + 1));
  }
}

void sub_223EC6D2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

void *std::allocate_shared[abi:ne180100]<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>,std::shared_ptr<turi::neural_net::Subscriber<std::unique_ptr<turi::style_transfer::Checkpoint>>> &,std::shared_ptr<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>> &,void>@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = operator new(0x40uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>>::__shared_ptr_emplace[abi:ne180100]<std::shared_ptr<turi::neural_net::Subscriber<std::unique_ptr<turi::style_transfer::Checkpoint>>> &,std::shared_ptr<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>> &,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>,0>(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_223EC6DA0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>>::__shared_ptr_emplace[abi:ne180100]<std::shared_ptr<turi::neural_net::Subscriber<std::unique_ptr<turi::style_transfer::Checkpoint>>> &,std::shared_ptr<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>> &,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>,0>(void *result, uint64_t *a2, uint64_t *a3)
{
  result[1] = 0;
  result[2] = 0;
  void *result = &unk_26D758DE8;
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = *a3;
  uint64_t v5 = a3[1];
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  result[3] = &unk_26D758E38;
  result[4] = v4;
  result[5] = v3;
  result[6] = v6;
  result[7] = v5;
  return result;
}

void std::__shared_ptr_emplace<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758DE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D758DE8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription,std::allocator<turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription::~IteratorSubscription(void *a1)
{
  *a1 = &unk_26D758E38;
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  return a1;
}

void turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription::~IteratorSubscription(void *a1)
{
  *a1 = &unk_26D758E38;
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  JUMPOUT(0x22A614FA0);
}

void turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription::Cancel(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void turi::neural_net::IteratorPublisher<std::unique_ptr<turi::style_transfer::Checkpoint>>::IteratorSubscription::Request(uint64_t a1, int w1_0)
{
  int v2 = w1_0;
  v21[1] = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 8)) {
    BOOL v3 = w1_0 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    do
    {
      v19.__ptr_ = 0;
      if ((*(unsigned int (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24)))
      {
        uint64_t v5 = v21;
        (*(void (**)(void *__return_ptr))(**(void **)(a1 + 24) + 24))(v21);
      }
      else
      {
        uint64_t v5 = 0;
      }
      if (v19.__ptr_)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        std::exception_ptr::exception_ptr(&v17, &v19);
        turi::neural_net::Completion::Failure(&v17, v22, &v18);
        (*(void (**)(uint64_t, std::exception_ptr *))(*(void *)v6 + 32))(v6, &v18);
        std::exception_ptr::~exception_ptr(&v18);
        uint64_t v7 = &v17;
      }
      else
      {
        if (v5)
        {
          BOOL v8 = v2 > 0;
          uint64_t v9 = *(void *)(a1 + 8);
          uint64_t v10 = *v5;
          *uint64_t v5 = 0;
          uint64_t v15 = v10;
          int v11 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v9 + 24))(v9, &v15);
          uint64_t v12 = v15;
          uint64_t v15 = 0;
          if (v12) {
            (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
          }
          if (((v2 - v8) | v11) < 0) {
            int v2 = -1;
          }
          else {
            int v2 = v11 + v2 - v8;
          }
          uint64_t v13 = *v5;
          *uint64_t v5 = 0;
          if (v13) {
            (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
          }
          goto LABEL_13;
        }
        uint64_t v14 = *(void *)(a1 + 8);
        v20.__ptr_ = 0;
        uint64_t v7 = &v16;
        std::exception_ptr::exception_ptr(&v16, &v20);
        std::exception_ptr::~exception_ptr(&v20);
        (*(void (**)(uint64_t, std::exception_ptr *))(*(void *)v14 + 32))(v14, &v16);
      }
      std::exception_ptr::~exception_ptr(v7);
      (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
LABEL_13:
      std::exception_ptr::~exception_ptr(&v19);
    }
    while (*(void *)(a1 + 8) && v2);
  }
}

void sub_223EC7270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, char a11, std::exception_ptr a12, std::exception_ptr a13)
{
}

void *std::shared_ptr<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>>::shared_ptr[abi:ne180100]<turi::neural_net::Iterator<std::unique_ptr<turi::style_transfer::Checkpoint>>,void>(void *a1, void *a2)
{
  BOOL v3 = (std::__shared_weak_count *)a2[1];
  *a1 = *a2;
  if (!v3)
  {
    a1[1] = 0;
LABEL_5:
    std::__throw_bad_weak_ptr[abi:ne180100]();
  }
  uint64_t v4 = std::__shared_weak_count::lock(v3);
  a1[1] = v4;
  if (!v4) {
    goto LABEL_5;
  }
  return a1;
}

void turi::image_type::image_type(turi::image_type *this, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = a3;
  *((void *)this + 3) = a4;
  *((void *)this + 4) = a5;
  *((void *)this + 5) = a6;
  *((unsigned char *)this + 48) = a7;
  *((void *)this + 7) = a8;
  operator new[]();
}

void sub_223EC7398(_Unwind_Exception *a1)
{
  boost::detail::shared_count::~shared_count((atomic_uint **)(v1 + 8));
  _Unwind_Resume(a1);
}

void boost::shared_ptr<char []>::reset<char>(uint64_t a1, uint64_t a2)
{
  boost::shared_ptr<char []>::shared_ptr<char>(&v2, a2);
}

uint64_t turi::image_type::save(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a1 + 48);
  if (*(void *)a2)
  {
    std::ostream::write();
  }
  else
  {
    unint64_t v5 = *(void *)(a2 + 40);
    if (*(void *)(a2 + 32) + 1 > v5)
    {
      size_t v22 = 2 * v5 + 2;
      *(void *)(a2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v22;
      long long v23 = *(void **)(a2 + 16);
      if (v23)
      {
        uint64_t v6 = (unsigned char *)*v23;
        size_t v24 = v23[1] - *v23;
        BOOL v25 = v22 >= v24;
        std::vector<char>::size_type v26 = v22 - v24;
        if (v26 != 0 && v25)
        {
          std::vector<char>::__append(*(std::vector<char> **)(a2 + 16), v26);
          uint64_t v6 = **(unsigned char ***)(a2 + 16);
        }
        else if (!v25)
        {
          v23[1] = &v6[v22];
        }
      }
      else
      {
        uint64_t v6 = malloc_type_realloc(*(void **)(a2 + 24), v22, 0xF6EA6B1uLL);
      }
      *(void *)(a2 + 24) = v6;
    }
    else
    {
      uint64_t v6 = *(unsigned char **)(a2 + 24);
    }
    v6[(*(void *)(a2 + 32))++] = *v4;
  }
  if (*(void *)a2)
  {
    std::ostream::write();
  }
  else
  {
    unint64_t v7 = *(void *)(a2 + 40);
    if (*(void *)(a2 + 32) + 8 > v7)
    {
      size_t v27 = 2 * v7 + 16;
      *(void *)(a2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v27;
      uint64_t v28 = *(char ***)(a2 + 16);
      if (v28)
      {
        BOOL v8 = *v28;
        size_t v29 = v28[1] - *v28;
        BOOL v30 = v27 >= v29;
        std::vector<char>::size_type v31 = v27 - v29;
        if (v31 != 0 && v30)
        {
          std::vector<char>::__append(*(std::vector<char> **)(a2 + 16), v31);
          BOOL v8 = **(char ***)(a2 + 16);
        }
        else if (!v30)
        {
          v28[1] = &v8[v27];
        }
      }
      else
      {
        BOOL v8 = (char *)malloc_type_realloc(*(void **)(a2 + 24), v27, 0xF6EA6B1uLL);
      }
      *(void *)(a2 + 24) = v8;
    }
    else
    {
      BOOL v8 = *(char **)(a2 + 24);
    }
    *(void *)&v8[*(void *)(a2 + 32)] = *(void *)(a1 + 16);
    *(void *)(a2 + 32) += 8;
  }
  if (*(void *)a2)
  {
    std::ostream::write();
  }
  else
  {
    unint64_t v9 = *(void *)(a2 + 40);
    if (*(void *)(a2 + 32) + 8 > v9)
    {
      size_t v32 = 2 * v9 + 16;
      *(void *)(a2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v32;
      uint64_t v33 = *(char ***)(a2 + 16);
      if (v33)
      {
        uint64_t v10 = *v33;
        size_t v34 = v33[1] - *v33;
        BOOL v35 = v32 >= v34;
        std::vector<char>::size_type v36 = v32 - v34;
        if (v36 != 0 && v35)
        {
          std::vector<char>::__append(*(std::vector<char> **)(a2 + 16), v36);
          uint64_t v10 = **(char ***)(a2 + 16);
        }
        else if (!v35)
        {
          v33[1] = &v10[v32];
        }
      }
      else
      {
        uint64_t v10 = (char *)malloc_type_realloc(*(void **)(a2 + 24), v32, 0xF6EA6B1uLL);
      }
      *(void *)(a2 + 24) = v10;
    }
    else
    {
      uint64_t v10 = *(char **)(a2 + 24);
    }
    *(void *)&v10[*(void *)(a2 + 32)] = *(void *)(a1 + 24);
    *(void *)(a2 + 32) += 8;
  }
  if (*(void *)a2)
  {
    std::ostream::write();
  }
  else
  {
    unint64_t v11 = *(void *)(a2 + 40);
    if (*(void *)(a2 + 32) + 8 > v11)
    {
      size_t v37 = 2 * v11 + 16;
      *(void *)(a2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v37;
      long long v38 = *(char ***)(a2 + 16);
      if (v38)
      {
        uint64_t v12 = *v38;
        size_t v39 = v38[1] - *v38;
        BOOL v40 = v37 >= v39;
        std::vector<char>::size_type v41 = v37 - v39;
        if (v41 != 0 && v40)
        {
          std::vector<char>::__append(*(std::vector<char> **)(a2 + 16), v41);
          uint64_t v12 = **(char ***)(a2 + 16);
        }
        else if (!v40)
        {
          v38[1] = &v12[v37];
        }
      }
      else
      {
        uint64_t v12 = (char *)malloc_type_realloc(*(void **)(a2 + 24), v37, 0xF6EA6B1uLL);
      }
      *(void *)(a2 + 24) = v12;
    }
    else
    {
      uint64_t v12 = *(char **)(a2 + 24);
    }
    *(void *)&v12[*(void *)(a2 + 32)] = *(void *)(a1 + 32);
    *(void *)(a2 + 32) += 8;
  }
  if (*(void *)a2)
  {
    std::ostream::write();
  }
  else
  {
    unint64_t v13 = *(void *)(a2 + 40);
    if (*(void *)(a2 + 32) + 8 > v13)
    {
      size_t v42 = 2 * v13 + 16;
      *(void *)(a2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v42;
      atomic_ullong *volatile v43 = *(char ***)(a2 + 16);
      if (v43)
      {
        uint64_t v14 = *v43;
        size_t v44 = v43[1] - *v43;
        BOOL v45 = v42 >= v44;
        std::vector<char>::size_type v46 = v42 - v44;
        if (v46 != 0 && v45)
        {
          std::vector<char>::__append(*(std::vector<char> **)(a2 + 16), v46);
          uint64_t v14 = **(char ***)(a2 + 16);
        }
        else if (!v45)
        {
          v43[1] = &v14[v42];
        }
      }
      else
      {
        uint64_t v14 = (char *)malloc_type_realloc(*(void **)(a2 + 24), v42, 0xF6EA6B1uLL);
      }
      *(void *)(a2 + 24) = v14;
    }
    else
    {
      uint64_t v14 = *(char **)(a2 + 24);
    }
    *(void *)&v14[*(void *)(a2 + 32)] = *(void *)(a1 + 56);
    *(void *)(a2 + 32) += 8;
  }
  uint64_t v15 = (size_t *)(a1 + 40);
  if (*(void *)a2)
  {
    uint64_t result = std::ostream::write();
  }
  else
  {
    unint64_t v17 = *(void *)(a2 + 40);
    if (*(void *)(a2 + 32) + 8 > v17)
    {
      size_t v47 = 2 * v17 + 16;
      *(void *)(a2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v47;
      __int16 v48 = *(uint64_t **)(a2 + 16);
      if (v48)
      {
        uint64_t result = *v48;
        size_t v49 = v48[1] - *v48;
        BOOL v50 = v47 >= v49;
        std::vector<char>::size_type v51 = v47 - v49;
        if (v51 != 0 && v50)
        {
          std::vector<char>::__append(*(std::vector<char> **)(a2 + 16), v51);
          uint64_t result = **(void **)(a2 + 16);
        }
        else if (!v50)
        {
          v48[1] = result + v47;
        }
      }
      else
      {
        uint64_t result = (uint64_t)malloc_type_realloc(*(void **)(a2 + 24), v47, 0xF6EA6B1uLL);
      }
      *(void *)(a2 + 24) = result;
    }
    else
    {
      uint64_t result = *(void *)(a2 + 24);
    }
    *(void *)(result + *(void *)(a2 + 3turi::style_transfer::init_resnet((turi::style_transfer *)*((int *)this + 2)) = *v15;
    *(void *)(a2 + 32) += 8;
  }
  size_t v18 = *v15;
  if (v18)
  {
    std::exception_ptr v19 = *(const void **)a1;
    if (*(void *)a2)
    {
      return std::ostream::write();
    }
    else
    {
      size_t v20 = *(void *)(a2 + 40);
      if (*(void *)(a2 + 32) + v18 > v20)
      {
        size_t v52 = 2 * (v20 + v18);
        *(void *)(a2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v52;
        atomic_ullong *volatile v53 = *(char ***)(a2 + 16);
        if (v53)
        {
          long long v21 = *v53;
          size_t v54 = v53[1] - *v53;
          BOOL v55 = v52 >= v54;
          std::vector<char>::size_type v56 = v52 - v54;
          if (v56 != 0 && v55)
          {
            std::vector<char>::__append(*(std::vector<char> **)(a2 + 16), v56);
            long long v21 = **(char ***)(a2 + 16);
          }
          else if (!v55)
          {
            v53[1] = &v21[v52];
          }
        }
        else
        {
          long long v21 = (char *)malloc_type_realloc(*(void **)(a2 + 24), v52, 0xF6EA6B1uLL);
        }
        *(void *)(a2 + 24) = v21;
      }
      else
      {
        long long v21 = *(char **)(a2 + 24);
      }
      uint64_t result = (uint64_t)memcpy(&v21[*(void *)(a2 + 32)], v19, v18);
      *(void *)(a2 + 32) += v18;
    }
  }
  return result;
}

__n128 turi::image_type::load(turi::image_type *this, turi::iarchive *a2)
{
  uint64_t v4 = *((void *)a2 + 2);
  if (v4) {
    *((unsigned char *)this + 48) = *(unsigned char *)(v4 + (*((void *)a2 + 3))++);
  }
  else {
    std::istream::read();
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (v5)
  {
    *((void *)this + 2) = *(void *)(v5 + *((void *)a2 + 3));
    *((void *)a2 + 3) += 8;
  }
  else
  {
    std::istream::read();
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (v6)
  {
    *((void *)this + 3) = *(void *)(v6 + *((void *)a2 + 3));
    *((void *)a2 + 3) += 8;
  }
  else
  {
    std::istream::read();
  }
  uint64_t v7 = *((void *)a2 + 2);
  if (v7)
  {
    *((void *)this + 4) = *(void *)(v7 + *((void *)a2 + 3));
    *((void *)a2 + 3) += 8;
  }
  else
  {
    std::istream::read();
  }
  uint64_t v8 = *((void *)a2 + 2);
  if (v8)
  {
    *((void *)this + 7) = *(void *)(v8 + *((void *)a2 + 3));
    *((void *)a2 + 3) += 8;
  }
  else
  {
    std::istream::read();
  }
  unint64_t v9 = (void *)((char *)this + 40);
  uint64_t v10 = *((void *)a2 + 2);
  if (v10)
  {
    uint64_t v11 = *(void *)(v10 + *((void *)a2 + 3));
    *unint64_t v9 = v11;
    *((void *)a2 + 3) += 8;
    if (v11) {
      goto LABEL_18;
    }
  }
  else
  {
    std::istream::read();
    if (*v9) {
LABEL_18:
    }
      operator new[]();
  }
  long long v12 = *(_OWORD *)this;
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)&v14 + 1) = *((void *)&v12 + 1);
  boost::detail::shared_count::~shared_count((atomic_uint **)&v14 + 1);
  return result;
}

uint64_t turi::image_type::get_image_data(turi::image_type *this)
{
  if (*((void *)this + 5)) {
    return *(void *)this;
  }
  else {
    return 0;
  }
}

BOOL turi::image_type::operator==(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16)
    && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    && *(void *)(a1 + 32) == *(void *)(a2 + 32)
    && (size_t v2 = *(void *)(a1 + 40), v2 == *(void *)(a2 + 40))
    && *(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48)
    && *(void *)(a1 + 56) == *(void *)(a2 + 56))
  {
    return memcmp(*(const void **)a1, *(const void **)a2, v2) == 0;
  }
  else
  {
    return 0;
  }
}

void std::vector<char>::__append(std::vector<char> *this, std::vector<char>::size_type __n)
{
  end = this->__end_;
  value = this->__end_cap_.__value_;
  if (value - end >= __n)
  {
    if (__n)
    {
      bzero(this->__end_, __n);
      end += __n;
    }
    this->__end_ = end;
  }
  else
  {
    std::vector<char>::pointer begin = this->__begin_;
    int64_t v7 = end - this->__begin_;
    unint64_t v8 = v7 + __n;
    if ((uint64_t)(v7 + __n) < 0) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v9 = value - begin;
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v10 = v8;
    }
    if (v10) {
      uint64_t v11 = (char *)operator new(v10);
    }
    else {
      uint64_t v11 = 0;
    }
    long long v12 = &v11[v7];
    unint64_t v13 = &v11[v10];
    bzero(v12, __n);
    if (end == begin)
    {
      uint64_t v11 = v12;
    }
    else
    {
      long long v14 = &end[~(unint64_t)begin];
      do
      {
        char v15 = *--end;
        (v14--)[(void)v11] = v15;
      }
      while (end != begin);
      end = this->__begin_;
    }
    this->__begin_ = v11;
    this->__end_ = &v12[__n];
    this->__end_cap_.__value_ = v13;
    if (end)
    {
      operator delete(end);
    }
  }
}

void boost::shared_ptr<char []>::shared_ptr<char>(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  boost::detail::shared_count::shared_count<char *,boost::checked_array_deleter<char>>(&v2);
}

void sub_223EC7D54(_Unwind_Exception *a1)
{
  boost::detail::shared_count::~shared_count(v1);
  _Unwind_Resume(a1);
}

void boost::detail::shared_count::shared_count<char *,boost::checked_array_deleter<char>>(void *a1)
{
  *a1 = 0;
  operator new();
}

void sub_223EC7DD8(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    MEMORY[0x22A614F80](v1, 0x1000C8077774924);
  }
  __cxa_rethrow();
}

void sub_223EC7E00(_Unwind_Exception *a1)
{
}

void boost::detail::sp_counted_impl_pd<char *,boost::checked_array_deleter<char>>::~sp_counted_impl_pd()
{
}

uint64_t boost::detail::sp_counted_impl_pd<char *,boost::checked_array_deleter<char>>::dispose(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    JUMPOUT(0x22A614F80);
  }
  return result;
}

uint64_t boost::detail::sp_counted_impl_pd<char *,boost::checked_array_deleter<char>>::get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

uint64_t boost::detail::sp_counted_impl_pd<char *,boost::checked_array_deleter<char>>::get_local_deleter(uint64_t a1, uint64_t a2)
{
  return 0;
}

uint64_t boost::detail::sp_counted_impl_pd<char *,boost::checked_array_deleter<char>>::get_untyped_deleter(uint64_t a1)
{
  return a1 + 24;
}

uint64_t turi::image_util_detail::resize_image_impl(uint64_t this, const char *a2, unint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, char **a9, int a10)
{
  uint64_t v11 = a4;
  switch(a4)
  {
    case 4:
      if (a7 != 4)
      {
        if (a7 != 3)
        {
          if (a7 == 1)
          {
            turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(this);
          }
          size_t v10 = (unint64_t *)&v11;
          turi::image_util_detail::resize_image_impl(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::$_2::operator()(&v10);
        }
        turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>>(this);
      }
      turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>>(this);
    case 3:
      if (a7 != 4)
      {
        if (a7 != 3)
        {
          if (a7 == 1)
          {
            turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(this);
          }
          size_t v10 = (unint64_t *)&v11;
          turi::image_util_detail::resize_image_impl(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::$_1::operator()(&v10);
        }
        turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>>(this);
      }
      turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>>(this);
    case 1:
      if (a7 != 4)
      {
        if (a7 != 3)
        {
          if (a7 == 1)
          {
            turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(this);
          }
          size_t v10 = (unint64_t *)&v11;
          turi::image_util_detail::resize_image_impl(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::$_0::operator()(&v10);
        }
        turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>>(this);
      }
      turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>>(this);
  }
  return this;
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>>(uint64_t a1)
{
  if (a1) {
    operator new[]();
  }
  turi::image_util_detail::resize_image_detail<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(char const*,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,unsigned long,char **,int)::{lambda(void)#1}::operator()();
}

void *turi::image_util_detail::decode_image_impl(void *this, turi::image_type *a2)
{
  uint64_t v2 = this[7];
  if (v2 != 2)
  {
    BOOL v3 = this;
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    if (v2 != 1)
    {
      if (!v2)
      {
        image_data = (turi *)turi::image_type::get_image_data((turi::image_type *)this);
        turi::decode_jpeg(image_data, (const char *)v3[5], &v9, &v8, v5);
      }
      turi::image_util_detail::decode_image_impl(turi::image_type &)::$_0::operator()();
    }
    uint64_t v6 = (turi *)turi::image_type::get_image_data((turi::image_type *)this);
    turi::decode_png(v6, (const char *)v3[5], (unint64_t)&v9, &v8, v7);
  }
  return this;
}

void *turi::image_util_detail::encode_image_impl(void *this, turi::image_type *a2)
{
  if (this[7] == 2)
  {
    uint64_t v2 = this;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    image_data = (turi *)turi::image_type::get_image_data((turi::image_type *)this);
    turi::encode_png(image_data, (const char *)v2[3], v2[2], v2[4], (unint64_t)&v6, &v5, v4);
  }
  return this;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v10 = a2[2] + a2[3] * v7;
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,double>(v6, v11.f64, (unsigned char *)(v10 + v9++));
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,double>(void *a1, double *a2, unsigned char *a3)
{
  uint64_t result = 0;
  double v5 = a2[1];
  if (*a2 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (v5 >= 0.0) {
    double v7 = 0.5;
  }
  else {
    double v7 = -0.5;
  }
  if (((uint64_t)(*a2 + v6) & 0x80000000) == 0)
  {
    uint64_t v8 = (uint64_t)(v5 + v7);
    uint64_t v9 = (uint64_t)(*a2 + v6);
    if ((v8 & 0x80000000) == 0 && *a1 > v9)
    {
      if (a1[1] <= (uint64_t)v8)
      {
        return 0;
      }
      else
      {
        *a3 = *(unsigned char *)(a1[2] + v9 + a1[3] * (uint64_t)(v5 + v7));
        return 1;
      }
    }
  }
  return result;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v28 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  v31.f64[0] = v25 + v26 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::matrix3x2<double>>(a1, a2, &v31, v11 * 0.5+ a4+ v24.__cosval * v23- v22 * v24.__sinval+ 0.0+ (v24.__sinval * v23 + v22 * v24.__cosval + 0.0) * 0.0, v11 * 0.5 + a4, v26 + v25 * 0.0, v24.__sinval * v21 + v20 * v24.__cosval + (v24.__cosval * v21 - v20 * v24.__sinval) * 0.0, v24.__cosval * v21 - v20 * v24.__sinval + (v24.__sinval * v21 + v20 * v24.__cosval) * 0.0, v28 * 0.5+ a3+ v24.__sinval * v23+ v22 * v24.__cosval+ 0.0+ (v24.__cosval * v23 - v22 * v24.__sinval + 0.0) * 0.0);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v9 = a2[1];
  if (v9 >= 1)
  {
    double v12 = (int64_t *)result;
    uint64_t v13 = 0;
    uint64_t v14 = *a2;
    do
    {
      if (v14 >= 1)
      {
        uint64_t v15 = 0;
        double v19 = (double)v13;
        uint64_t v16 = a2[2] + a2[3] * v13;
        do
        {
          float64x2_t v17 = *a3;
          float64x2_t v18 = vmlaq_n_f64(vmulq_n_f64(a3[1], v19), *a3, (double)v15);
          float64x2_t v20 = vaddq_f64(a3[2], v18);
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,double>(v12, v20.f64, (unsigned char *)(v16 + v15++), v20.f64[0], v17.f64[0], v18.f64[0], v19, a8, a9);
        }
        while (v14 != v15);
      }
      ++v13;
    }
    while (v13 != v9);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,double>(int64_t *a1, double *a2, unsigned char *a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v9 = 0;
  int64_t v10 = vcvtmd_s64_f64(*a2);
  if ((v10 & 0x8000000000000000) == 0)
  {
    double v11 = a2[1];
    int64_t v12 = vcvtmd_s64_f64(v11);
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v10) {
        return 0;
      }
      int64_t v13 = a1[1];
      if (v13 <= v12)
      {
        return 0;
      }
      else
      {
        double v14 = (double)(uint64_t)floor(v11);
        double v15 = v11 - v14;
        int64_t v16 = a1[3];
        float64x2_t v17 = (unsigned char *)(a1[2] + v10 + v16 * v12);
        int64_t v18 = v10 + 1;
        int64_t v19 = v12 + 1;
        if (v18 >= *a1)
        {
          if (v19 >= v13)
          {
            LOBYTE(v15) = *v17;
            double v28 = (double)*(unint64_t *)&v15;
          }
          else
          {
            LOBYTE(v14) = *v17;
            *(double *)&unint64_t v29 = (double)*(unint64_t *)&v14;
            double v30 = *(double *)&v29 * (1.0 - v15) + 0.0;
            LOBYTE(v29) = v17[v16];
            double v28 = v30 + (double)v29 * v15;
          }
        }
        else
        {
          double v20 = *a2 - (double)(uint64_t)floor(*a2);
          double v21 = 1.0 - v20;
          if (v19 >= v13)
          {
            LOBYTE(v15) = *v17;
            double v31 = (double)*(unint64_t *)&v15 * v21 + 0.0;
            LOBYTE(v21) = v17[1];
            double v28 = v31 + (double)*(unint64_t *)&v21 * v20;
          }
          else
          {
            LOBYTE(a9) = *v17;
            *(double *)&unint64_t v22 = (double)*(unint64_t *)&a9;
            *(double *)&unint64_t v23 = *(double *)&v22 * (v21 * (1.0 - v15)) + 0.0;
            LOBYTE(v22) = v17[1];
            double v24 = *(double *)&v23 + (double)v22 * (v20 * (1.0 - v15));
            double v25 = &v17[v16];
            LOBYTE(v23) = *v25;
            double v26 = v24 + (double)v23 * (v21 * v15);
            double v27 = v20 * v15;
            LOBYTE(v2std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v25[1];
            double v28 = v26 + (double)*(unint64_t *)&v20 * v27;
          }
        }
        *a3 = (int)v28;
        return 1;
      }
    }
  }
  return v9;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    double v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 3;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,double>(void *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  double v4 = a2[1];
  if (*a2 >= 0.0) {
    double v5 = 0.5;
  }
  else {
    double v5 = -0.5;
  }
  if (v4 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (((uint64_t)(*a2 + v5) & 0x80000000) == 0)
  {
    uint64_t v7 = (uint64_t)(v4 + v6);
    uint64_t v8 = (uint64_t)(*a2 + v5);
    if ((v7 & 0x80000000) == 0 && *a1 > v8)
    {
      if (a1[1] <= (uint64_t)v7)
      {
        return 0;
      }
      else
      {
        char v10 = *(unsigned char *)(a1[2] + v8 + a1[4] * (uint64_t)(v4 + v6));
        *a3 = v10;
        a3[1] = v10;
        a3[2] = v10;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    double v6 = (int64_t *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 3;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,double>(int64_t *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  int64_t v4 = vcvtmd_s64_f64(*a2);
  if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = a2[1];
    int64_t v6 = vcvtmd_s64_f64(v5);
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v4) {
        return 0;
      }
      int64_t v7 = a1[1];
      if (v7 <= v6)
      {
        return 0;
      }
      else
      {
        double v8 = v5 - (double)(uint64_t)floor(v5);
        int64_t v9 = a1[4];
        double v10 = (unsigned __int8 *)(a1[2] + v4 + v9 * v6);
        int64_t v11 = v4 + 1;
        int64_t v12 = v6 + 1;
        unsigned int v13 = *v10;
        if (v11 >= *a1)
        {
          if (v12 >= v7)
          {
            double v22 = (double)v13;
          }
          else
          {
            *(double *)&unint64_t v23 = (double)v13;
            LOBYTE(v23) = v10[v9];
            double v22 = (double)v13 * (1.0 - v8) + 0.0 + (double)v23 * v8;
          }
        }
        else
        {
          double v14 = *a2 - (double)(uint64_t)floor(*a2);
          double v15 = 1.0 - v14;
          if (v12 >= v7)
          {
            double v24 = (double)v13 * v15 + 0.0;
            LOBYTE(v15) = v10[1];
            double v22 = v24 + (double)*(unint64_t *)&v15 * v14;
          }
          else
          {
            *(double *)&unint64_t v16 = (double)v13;
            *(double *)&unint64_t v17 = (double)v13 * (v15 * (1.0 - v8)) + 0.0;
            LOBYTE(v16) = v10[1];
            double v18 = *(double *)&v17 + (double)v16 * (v14 * (1.0 - v8));
            double v19 = &v10[v9];
            LOBYTE(v17) = *v19;
            double v20 = v18 + (double)v17 * (v15 * v8);
            double v21 = v14 * v8;
            LOBYTE(v14) = v19[1];
            double v22 = v20 + (double)*(unint64_t *)&v14 * v21;
          }
        }
        *a3 = (int)v22;
        a3[1] = (int)v22;
        a3[2] = (int)v22;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    int64_t v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 4;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,double>(void *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  double v4 = a2[1];
  if (*a2 >= 0.0) {
    double v5 = 0.5;
  }
  else {
    double v5 = -0.5;
  }
  if (v4 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (((uint64_t)(*a2 + v5) & 0x80000000) == 0)
  {
    uint64_t v7 = (uint64_t)(v4 + v6);
    uint64_t v8 = (uint64_t)(*a2 + v5);
    if ((v7 & 0x80000000) == 0 && *a1 > v8)
    {
      if (a1[1] <= (uint64_t)v7)
      {
        return 0;
      }
      else
      {
        char v10 = *(unsigned char *)(a1[2] + v8 + a1[4] * (uint64_t)(v4 + v6));
        *a3 = v10;
        a3[1] = v10;
        a3[2] = v10;
        a3[3] = -1;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    double v6 = (int64_t *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 4;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,double>(int64_t *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  int64_t v4 = vcvtmd_s64_f64(*a2);
  if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = a2[1];
    int64_t v6 = vcvtmd_s64_f64(v5);
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v4) {
        return 0;
      }
      int64_t v7 = a1[1];
      if (v7 <= v6)
      {
        return 0;
      }
      else
      {
        double v8 = v5 - (double)(uint64_t)floor(v5);
        int64_t v9 = a1[4];
        double v10 = (unsigned __int8 *)(a1[2] + v4 + v9 * v6);
        int64_t v11 = v4 + 1;
        int64_t v12 = v6 + 1;
        unsigned int v13 = *v10;
        if (v11 >= *a1)
        {
          if (v12 >= v7)
          {
            double v24 = (double)v13;
            double v25 = 255.0;
          }
          else
          {
            double v24 = (double)v13 * (1.0 - v8) + 0.0 + (double)v10[v9] * v8;
            double v25 = (1.0 - v8) * 255.0 + 0.0 + v8 * 255.0;
          }
        }
        else
        {
          double v14 = *a2 - (double)(uint64_t)floor(*a2);
          double v15 = 1.0 - v14;
          if (v12 >= v7)
          {
            double v26 = (double)v13 * v15 + 0.0;
            double v27 = v15 * 255.0 + 0.0;
            LOBYTE(v15) = v10[1];
            double v24 = v26 + (double)*(unint64_t *)&v15 * v14;
            double v25 = v27 + v14 * 255.0;
          }
          else
          {
            *(double *)&unint64_t v16 = v15 * (1.0 - v8) * 255.0 + 0.0;
            double v17 = v14 * (1.0 - v8);
            double v18 = (double)v13 * (v15 * (1.0 - v8)) + 0.0 + (double)v10[1] * v17;
            double v19 = *(double *)&v16 + v17 * 255.0;
            double v20 = &v10[v9];
            double v21 = v15 * v8;
            LOBYTE(v16) = *v20;
            double v22 = v19 + v21 * 255.0;
            double v23 = v14 * v8;
            LOBYTE(v14) = v20[1];
            double v24 = v18 + (double)v16 * v21 + (double)*(unint64_t *)&v14 * v23;
            double v25 = v22 + v23 * 255.0;
          }
        }
        *a3 = (int)v24;
        a3[1] = (int)v24;
        a3[2] = (int)v24;
        a3[3] = (int)v25;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    int64_t v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v10 = a2[2] + a2[3] * v7;
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, (unsigned char *)(v10 + v9++));
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,double>(void *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  double v4 = a2[1];
  if (*a2 >= 0.0) {
    double v5 = 0.5;
  }
  else {
    double v5 = -0.5;
  }
  if (v4 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (((uint64_t)(*a2 + v5) & 0x80000000) == 0)
  {
    uint64_t v7 = (uint64_t)(v4 + v6);
    uint64_t v8 = (uint64_t)(*a2 + v5);
    if ((v7 & 0x80000000) == 0 && *a1 > v8)
    {
      if (a1[1] <= (uint64_t)v7)
      {
        return 0;
      }
      else
      {
        uint64_t v10 = (unsigned __int8 *)(a1[2] + 3 * v8 + a1[4] * (uint64_t)(v4 + v6));
        *a3 = (9667 * v10[1] + 4915 * *v10 + 1802 * v10[2] + 0x2000) >> 14;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    double v6 = (int64_t *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v10 = a2[2] + a2[3] * v7;
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, (unsigned char *)(v10 + v9++));
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,double>(int64_t *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  int64_t v4 = vcvtmd_s64_f64(*a2);
  if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = a2[1];
    int64_t v6 = vcvtmd_s64_f64(v5);
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v4) {
        return 0;
      }
      int64_t v7 = a1[1];
      if (v7 <= v6)
      {
        return 0;
      }
      else
      {
        double v8 = v5 - (double)(uint64_t)floor(v5);
        int64_t v9 = a1[4];
        uint64_t v10 = (unsigned __int8 *)(a1[2] + 3 * v4 + v9 * v6);
        int64_t v11 = v4 + 1;
        int64_t v12 = v6 + 1;
        unsigned int v13 = 9667 * v10[1] + 4915 * *v10 + 1802 * v10[2] + 0x2000;
        if (v11 >= *a1)
        {
          if (v12 >= v7) {
            double v18 = (double)(v13 >> 14);
          }
          else {
            double v18 = (double)(v13 >> 14) * (1.0 - v8)
          }
                + 0.0
                + (double)((9667 * v10[v9 + 1]
                                           + 4915 * v10[v9]
                                           + 1802 * v10[v9 + 2]
                                           + 0x2000) >> 14)
                * v8;
        }
        else
        {
          double v14 = *a2 - (double)(uint64_t)floor(*a2);
          double v15 = 1.0 - v14;
          if (v12 >= v7)
          {
            double v18 = (double)(v13 >> 14) * v15
                + 0.0
                + (double)((9667 * v10[4] + 4915 * v10[3] + 1802 * v10[5] + 0x2000) >> 14)
                * v14;
          }
          else
          {
            double v16 = (double)(v13 >> 14) * (v15 * (1.0 - v8))
                + 0.0
                + (double)((9667 * v10[4] + 4915 * v10[3] + 1802 * v10[5] + 0x2000) >> 14)
                * (v14
                 * (1.0 - v8));
            double v17 = &v10[v9];
            double v18 = v16
                + (double)((9667 * v17[1] + 4915 * *v17 + 1802 * v17[2] + 0x2000) >> 14)
                * (v15
                 * v8)
                + (double)((9667 * v17[4] + 4915 * v17[3] + 1802 * v17[5] + 0x2000) >> 14)
                * (v14
                 * v8);
          }
        }
        *a3 = (int)v18;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    int64_t v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 3;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,double>(void *a1, double *a2, unsigned char *a3)
{
  uint64_t result = 0;
  double v5 = a2[1];
  if (*a2 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (v5 >= 0.0) {
    double v7 = 0.5;
  }
  else {
    double v7 = -0.5;
  }
  if (((uint64_t)(*a2 + v6) & 0x80000000) == 0)
  {
    uint64_t v8 = (uint64_t)(v5 + v7);
    uint64_t v9 = (uint64_t)(*a2 + v6);
    if ((v8 & 0x80000000) == 0 && *a1 > v9)
    {
      if (a1[1] <= (uint64_t)v8)
      {
        return 0;
      }
      else
      {
        float64x2_t v11 = (unsigned char *)(a1[2] + 3 * v9 + a1[3] * (uint64_t)(v5 + v7));
        *a3 = *v11;
        a3[1] = v11[1];
        a3[2] = v11[2];
        return 1;
      }
    }
  }
  return result;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v28 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  v31.f64[0] = v25 + v26 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::matrix3x2<double>>(a1, a2, &v31, v11 * 0.5+ a4+ v24.__cosval * v23- v22 * v24.__sinval+ 0.0+ (v24.__sinval * v23 + v22 * v24.__cosval + 0.0) * 0.0, v11 * 0.5 + a4, v26 + v25 * 0.0, v24.__sinval * v21 + v20 * v24.__cosval + (v24.__cosval * v21 - v20 * v24.__sinval) * 0.0, v24.__cosval * v21 - v20 * v24.__sinval + (v24.__sinval * v21 + v20 * v24.__cosval) * 0.0, v28 * 0.5+ a3+ v24.__sinval * v23+ v22 * v24.__cosval+ 0.0+ (v24.__cosval * v23 - v22 * v24.__sinval + 0.0) * 0.0,
           v24.__sinval * v23 + v22 * v24.__cosval + 0.0,
           v28 * 0.5 + a3);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v11 = a2[1];
  if (v11 >= 1)
  {
    double v14 = (int64_t *)result;
    uint64_t v15 = 0;
    uint64_t v16 = *a2;
    do
    {
      if (v16 >= 1)
      {
        uint64_t v17 = 0;
        double v21 = (double)v15;
        double v18 = (unsigned char *)(a2[2] + a2[3] * v15);
        do
        {
          float64x2_t v19 = *a3;
          float64x2_t v20 = vmlaq_n_f64(vmulq_n_f64(a3[1], v21), *a3, (double)v17);
          float64x2_t v22 = vaddq_f64(a3[2], v20);
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,double>(v14, v22.f64, v18, v22.f64[0], v19.f64[0], v20.f64[0], v21, a8, a9, a10, a11);
          ++v17;
          v18 += 3;
        }
        while (v16 != v17);
      }
      ++v15;
    }
    while (v15 != v11);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,double>(int64_t *a1, double *a2, unsigned char *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v12 = 0;
  int64_t v13 = vcvtmd_s64_f64(*a2);
  if ((v13 & 0x8000000000000000) == 0)
  {
    double v14 = a2[1];
    int64_t v15 = vcvtmd_s64_f64(v14);
    if ((v15 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v13) {
        return 0;
      }
      int64_t v16 = a1[1];
      if (v16 <= v15)
      {
        return 0;
      }
      else
      {
        double v17 = (double)(uint64_t)floor(v14);
        double v18 = v14 - v17;
        int64_t v19 = a1[3];
        float64x2_t v20 = (unsigned char *)(a1[2] + 3 * v13 + v19 * v15);
        int64_t v21 = v13 + 1;
        int64_t v22 = v15 + 1;
        if (v21 >= *a1)
        {
          if (v22 >= v16)
          {
            LOBYTE(v18) = *v20;
            double v39 = (double)*(unint64_t *)&v18;
            LOBYTE(v18) = v20[1];
            double v41 = (double)*(unint64_t *)&v18;
            LOBYTE(v18) = v20[2];
            double v42 = (double)*(unint64_t *)&v18;
          }
          else
          {
            LOBYTE(v17) = *v20;
            LOBYTE(a8) = v20[1];
            *(double *)&unint64_t v43 = (double)*(unint64_t *)&a8 * (1.0 - v18) + 0.0;
            LOBYTE(a9) = v20[2];
            size_t v44 = &v20[v19];
            *(double *)&unint64_t v45 = (double)*v44;
            double v39 = (double)*(unint64_t *)&v17 * (1.0 - v18) + 0.0 + *(double *)&v45 * v18;
            LOBYTE(v45) = v44[1];
            double v41 = *(double *)&v43 + (double)v45 * v18;
            LOBYTE(v43) = v44[2];
            double v42 = (double)*(unint64_t *)&a9 * (1.0 - v18) + 0.0 + (double)v43 * v18;
          }
        }
        else
        {
          double v23 = *a2 - (double)(uint64_t)floor(*a2);
          double v24 = 1.0 - v23;
          if (v22 >= v16)
          {
            LOBYTE(v18) = *v20;
            *(double *)&unint64_t v46 = (double)*(unint64_t *)&v18 * v24 + 0.0;
            LOBYTE(a8) = v20[1];
            double v47 = (double)*(unint64_t *)&a8 * v24 + 0.0;
            LOBYTE(a9) = v20[2];
            double v48 = (double)*(unint64_t *)&a9 * v24 + 0.0;
            LOBYTE(v24) = v20[3];
            double v39 = *(double *)&v46 + (double)*(unint64_t *)&v24 * v23;
            LOBYTE(v46) = v20[4];
            *(double *)&unint64_t v49 = (double)v46;
            double v41 = v47 + *(double *)&v49 * v23;
            LOBYTE(v49) = v20[5];
            double v42 = v48 + (double)v49 * v23;
          }
          else
          {
            LOBYTE(a9) = *v20;
            LOBYTE(a11) = v20[1];
            *(double *)&unint64_t v25 = (double)*(unint64_t *)&a11 * (v24 * (1.0 - v18)) + 0.0;
            LOBYTE(v11) = v20[2];
            *(double *)&unint64_t v26 = (double)v11 * (v24 * (1.0 - v18)) + 0.0;
            double v27 = v23 * (1.0 - v18);
            *(double *)&unint64_t v28 = (double)v20[3];
            *(double *)&unint64_t v29 = (double)*(unint64_t *)&a9 * (v24 * (1.0 - v18)) + 0.0 + *(double *)&v28 * v27;
            LOBYTE(v28) = v20[4];
            *(double *)&unint64_t v30 = *(double *)&v25 + (double)v28 * v27;
            LOBYTE(v25) = v20[5];
            double v31 = *(double *)&v26 + (double)v25 * v27;
            double v32 = &v20[v19];
            double v33 = v24 * v18;
            LOBYTE(v26) = *v32;
            double v34 = *(double *)&v29 + (double)v26 * v33;
            LOBYTE(v29) = v32[1];
            double v35 = *(double *)&v30 + (double)v29 * v33;
            LOBYTE(v3std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v32[2];
            double v36 = v31 + (double)v30 * v33;
            double v37 = v23 * v18;
            LOBYTE(v23) = v32[3];
            *(double *)&unint64_t v38 = (double)*(unint64_t *)&v23;
            double v39 = v34 + *(double *)&v38 * v37;
            LOBYTE(v38) = v32[4];
            *(double *)&unint64_t v40 = (double)v38;
            double v41 = v35 + *(double *)&v40 * v37;
            LOBYTE(v4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v32[5];
            double v42 = v36 + (double)v40 * v37;
          }
        }
        *a3 = (int)v39;
        a3[1] = (int)v41;
        a3[2] = (int)v42;
        return 1;
      }
    }
  }
  return v12;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    double v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v10 = a2[2] + a2[3] * v7;
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 4;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,double>(void *a1, double *a2, uint64_t a3)
{
  uint64_t v3 = 0;
  double v4 = a2[1];
  if (*a2 >= 0.0) {
    double v5 = 0.5;
  }
  else {
    double v5 = -0.5;
  }
  if (v4 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (((uint64_t)(*a2 + v5) & 0x80000000) == 0)
  {
    uint64_t v7 = (uint64_t)(v4 + v6);
    uint64_t v8 = (uint64_t)(*a2 + v5);
    if ((v7 & 0x80000000) == 0 && *a1 > v8)
    {
      if (a1[1] <= (uint64_t)v7)
      {
        return 0;
      }
      else
      {
        uint64_t v10 = a1[2] + 3 * v8 + a1[4] * (uint64_t)(v4 + v6);
        __int16 v11 = *(_WORD *)v10;
        LOBYTE(v1std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = *(unsigned char *)(v10 + 2);
        *(_WORD *)a3 = v11;
        *(unsigned char *)(a3 + 2) = v10;
        *(unsigned char *)(a3 + 3) = -1;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    double v6 = (int64_t *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 4;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::default_color_converter>>>>>,double>(int64_t *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  int64_t v4 = vcvtmd_s64_f64(*a2);
  if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = a2[1];
    int64_t v6 = vcvtmd_s64_f64(v5);
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v4) {
        return 0;
      }
      int64_t v7 = a1[1];
      if (v7 <= v6)
      {
        return 0;
      }
      else
      {
        double v8 = v5 - (double)(uint64_t)floor(v5);
        int64_t v9 = a1[4];
        double v10 = (unsigned __int8 *)(a1[2] + 3 * v4 + v9 * v6);
        int64_t v11 = v4 + 1;
        int64_t v12 = v6 + 1;
        unsigned int v13 = *v10;
        unsigned int v14 = v10[1];
        unsigned int v15 = v10[2];
        if (v11 >= *a1)
        {
          if (v12 >= v7)
          {
            double v34 = (double)v13;
            double v36 = (double)v14;
            double v37 = (double)v15;
            double v38 = 255.0;
          }
          else
          {
            *(double *)&unint64_t v39 = (double)v14 * (1.0 - v8) + 0.0;
            unint64_t v40 = &v10[v9];
            *(double *)&unint64_t v41 = (double)*v40;
            double v34 = (double)v13 * (1.0 - v8) + 0.0 + *(double *)&v41 * v8;
            LOBYTE(v41) = v40[1];
            double v36 = *(double *)&v39 + (double)v41 * v8;
            LOBYTE(v39) = v40[2];
            double v37 = (double)v15 * (1.0 - v8) + 0.0 + (double)v39 * v8;
            double v38 = (1.0 - v8) * 255.0 + 0.0 + v8 * 255.0;
          }
        }
        else
        {
          double v16 = *a2 - (double)(uint64_t)floor(*a2);
          double v17 = 1.0 - v16;
          if (v12 >= v7)
          {
            *(double *)&unint64_t v42 = (double)v13 * v17 + 0.0;
            double v43 = (double)v14 * v17 + 0.0;
            double v44 = (double)v15 * v17 + 0.0;
            double v45 = v17 * 255.0 + 0.0;
            LOBYTE(v17) = v10[3];
            double v34 = *(double *)&v42 + (double)*(unint64_t *)&v17 * v16;
            LOBYTE(v42) = v10[4];
            *(double *)&unint64_t v46 = (double)v42;
            double v36 = v43 + *(double *)&v46 * v16;
            LOBYTE(v46) = v10[5];
            double v37 = v44 + (double)v46 * v16;
            double v38 = v45 + v16 * 255.0;
          }
          else
          {
            *(double *)&unint64_t v18 = (double)v14 * (v17 * (1.0 - v8)) + 0.0;
            *(double *)&unint64_t v19 = v17 * (1.0 - v8) * 255.0 + 0.0;
            double v20 = v16 * (1.0 - v8);
            *(double *)&unint64_t v21 = (double)v10[3];
            *(double *)&unint64_t v22 = (double)v13 * (v17 * (1.0 - v8)) + 0.0 + *(double *)&v21 * v20;
            LOBYTE(v21) = v10[4];
            *(double *)&unint64_t v23 = *(double *)&v18 + (double)v21 * v20;
            LOBYTE(v18) = v10[5];
            double v24 = (double)v15 * (v17 * (1.0 - v8)) + 0.0 + (double)v18 * v20;
            double v25 = *(double *)&v19 + v20 * 255.0;
            double v26 = &v10[v9];
            double v27 = v17 * v8;
            LOBYTE(v19) = *v26;
            double v28 = *(double *)&v22 + (double)v19 * v27;
            LOBYTE(v22) = v26[1];
            double v29 = *(double *)&v23 + (double)v22 * v27;
            LOBYTE(v23) = v26[2];
            double v30 = v24 + (double)v23 * v27;
            double v31 = v25 + v27 * 255.0;
            double v32 = v16 * v8;
            LOBYTE(v16) = v26[3];
            *(double *)&unint64_t v33 = (double)*(unint64_t *)&v16;
            double v34 = v28 + *(double *)&v33 * v32;
            LOBYTE(v33) = v26[4];
            *(double *)&unint64_t v35 = (double)v33;
            double v36 = v29 + *(double *)&v35 * v32;
            LOBYTE(v35) = v26[5];
            double v37 = v30 + (double)v35 * v32;
            double v38 = v31 + v32 * 255.0;
          }
        }
        *a3 = (int)v34;
        a3[1] = (int)v36;
        a3[2] = (int)v37;
        a3[3] = (int)v38;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    int64_t v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v10 = a2[2] + a2[3] * v7;
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, (unsigned char *)(v10 + v9++));
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,double>(void *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  double v4 = a2[1];
  if (*a2 >= 0.0) {
    double v5 = 0.5;
  }
  else {
    double v5 = -0.5;
  }
  if (v4 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (((uint64_t)(*a2 + v5) & 0x80000000) == 0)
  {
    uint64_t v7 = (uint64_t)(v4 + v6);
    if ((v7 & 0x80000000) == 0 && *a1 > (uint64_t)(uint64_t)(*a2 + v5))
    {
      if (a1[1] <= (uint64_t)v7)
      {
        return 0;
      }
      else
      {
        boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v12, (unsigned __int8 *)(a1[2] + 4 * (uint64_t)(*a2 + v5) + a1[4] * (uint64_t)(v4 + v6)), &v11);
        *a3 = v11;
        return 1;
      }
    }
  }
  return v3;
}

void boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>(uint64_t a1, unsigned __int8 *a2, unsigned char *a3)
{
  int v3 = a2[3];
  unsigned int v4 = (v3 * *a2 + 128 + ((v3 * *a2 + 128) >> 8)) >> 8;
  unsigned int v5 = a2[1] * v3 + 128;
  unsigned int v6 = a2[2] * v3 + 128;
  *a3 = (9667 * ((v5 + (v5 >> 8)) >> 8) + 4915 * v4 + 1802 * ((v6 + (v6 >> 8)) >> 8) + 0x2000) >> 14;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    unsigned int v6 = (int64_t *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v10 = a2[2] + a2[3] * v7;
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, (unsigned char *)(v10 + v9++));
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>,boost::gil::default_color_converter>>>>>,double>(int64_t *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  int64_t v4 = vcvtmd_s64_f64(*a2);
  if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = a2[1];
    int64_t v6 = vcvtmd_s64_f64(v5);
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v4) {
        return 0;
      }
      int64_t v7 = a1[1];
      if (v7 <= v6)
      {
        return 0;
      }
      else
      {
        double v9 = v5 - (double)(uint64_t)floor(v5);
        int64_t v10 = a1[4];
        float64x2_t v11 = (unsigned __int8 *)(a1[2] + v10 * v6 + 4 * v4);
        int64_t v12 = v4 + 1;
        int64_t v13 = v6 + 1;
        if (v12 >= *a1)
        {
          if (v13 >= v7)
          {
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, v11, &v33);
            LOBYTE(v31) = v33;
            double v24 = (double)v31;
          }
          else
          {
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, v11, &v33);
            LOBYTE(v25) = v33;
            double v26 = (double)v25 * (1.0 - v9) + 0.0;
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, &v11[v10], &v33);
            LOBYTE(v27) = v33;
            double v24 = v26 + (double)v27 * v9;
          }
        }
        else
        {
          double v14 = *a2 - (double)(uint64_t)floor(*a2);
          double v15 = 1.0 - v14;
          if (v13 >= v7)
          {
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, v11, &v33);
            LOBYTE(v28) = v33;
            double v29 = (double)v28 * v15 + 0.0;
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, v11 + 4, &v33);
            LOBYTE(v3std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v33;
            double v24 = v29 + (double)v30 * v14;
          }
          else
          {
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, v11, &v33);
            LOBYTE(v16) = v33;
            double v17 = (double)v16 * (v15 * (1.0 - v9)) + 0.0;
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, v11 + 4, &v33);
            LOBYTE(v18) = v33;
            double v19 = v17 + (double)v18 * (v14 * (1.0 - v9));
            double v20 = &v11[v10];
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, v20, &v33);
            LOBYTE(v21) = v33;
            double v22 = v19 + (double)v21 * (v15 * v9);
            boost::gil::default_color_converter_impl<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::vector1<boost::gil::gray_color_t>>::operator()<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector1<boost::gil::gray_color_t>,boost::mpl::range_c<int,0,1>>>>((uint64_t)&v34, v20 + 4, &v33);
            LOBYTE(v23) = v33;
            double v24 = v22 + (double)v23 * (v14 * v9);
          }
        }
        *a3 = (int)v24;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    int64_t v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 3;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,double>(void *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  double v4 = a2[1];
  if (*a2 >= 0.0) {
    double v5 = 0.5;
  }
  else {
    double v5 = -0.5;
  }
  if (v4 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (((uint64_t)(*a2 + v5) & 0x80000000) == 0)
  {
    uint64_t v7 = (uint64_t)(v4 + v6);
    if ((v7 & 0x80000000) == 0 && *a1 > (uint64_t)(uint64_t)(*a2 + v5))
    {
      if (a1[1] <= (uint64_t)v7)
      {
        return 0;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(a1[2]
                               + 4 * (uint64_t)(*a2 + v5)
                               + a1[4] * (uint64_t)(v4 + v6));
        int v10 = v9[3];
        unsigned int v11 = (v10 * *v9 + 128 + ((v10 * *v9 + 128) >> 8)) >> 8;
        unsigned int v12 = v9[1] * v10 + 128;
        LODWORD(v9) = v9[2] * v10 + 128;
        *a3 = v11;
        a3[1] = (unsigned __int16)(v12 + (v12 >> 8)) >> 8;
        a3[2] = (unsigned __int16)((_WORD)v9 + (v9 >> 8)) >> 8;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>*>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    double v6 = (int64_t *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 3;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::dereference_iterator_adaptor<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *,boost::gil::color_convert_deref_fn<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> const&,boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector3<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t>,boost::mpl::range_c<int,0,3>>>,boost::gil::default_color_converter>>>>>,double>(int64_t *a1, double *a2, unsigned char *a3)
{
  uint64_t v3 = 0;
  int64_t v4 = vcvtmd_s64_f64(*a2);
  if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = a2[1];
    int64_t v6 = vcvtmd_s64_f64(v5);
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v4) {
        return 0;
      }
      int64_t v7 = a1[1];
      if (v7 <= v6)
      {
        return 0;
      }
      else
      {
        double v8 = v5 - (double)(uint64_t)floor(v5);
        int64_t v9 = a1[4];
        double v10 = (unsigned __int8 *)(a1[2] + v9 * v6 + 4 * v4);
        int64_t v11 = v4 + 1;
        int64_t v12 = v6 + 1;
        int v13 = v10[3];
        unsigned int v14 = v13 * *v10 + 128 + ((v13 * *v10 + 128) >> 8);
        unsigned int v15 = v10[1] * v13 + 128;
        unsigned int v16 = v15 + (v15 >> 8);
        unsigned int v17 = v10[2] * v13 + 128 + ((v10[2] * v13 + 128) >> 8);
        if (v11 >= *a1)
        {
          if (v12 >= v7)
          {
            double v40 = (double)BYTE1(v14);
            double v41 = (double)BYTE1(v16);
            double v42 = (double)BYTE1(v17);
          }
          else
          {
            double v43 = (double)BYTE1(v14) * (1.0 - v8) + 0.0;
            double v44 = &v10[v9];
            int v45 = v44[3];
            unsigned int v46 = v44[1] * v45 + 128;
            double v40 = v43
                + (double)((unsigned __int16)(v45 * *v44 + 128 + ((v45 * *v44 + 128) >> 8)) >> 8)
                * v8;
            double v41 = (double)BYTE1(v16) * (1.0 - v8)
                + 0.0
                + (double)((unsigned __int16)(v46 + (v46 >> 8)) >> 8) * v8;
            double v42 = (double)BYTE1(v17) * (1.0 - v8)
                + 0.0
                + (double)((unsigned __int16)(v44[2] * (_WORD)v45
                                                             + 128
                                                             + ((v44[2] * v45 + 128) >> 8)) >> 8)
                * v8;
          }
        }
        else
        {
          double v18 = *a2 - (double)(uint64_t)floor(*a2);
          double v19 = 1.0 - v18;
          if (v12 >= v7)
          {
            double v47 = (double)BYTE1(v14) * v19 + 0.0;
            double v48 = (double)BYTE1(v16) * v19 + 0.0;
            double v49 = (double)BYTE1(v17) * v19 + 0.0;
            int v50 = v10[7];
            unsigned int v51 = v50 * v10[4] + 128;
            unsigned int v52 = v10[5] * v50 + 128;
            double v40 = v47 + (double)((unsigned __int16)(v51 + (v51 >> 8)) >> 8) * v18;
            double v41 = v48 + (double)((unsigned __int16)(v52 + (v52 >> 8)) >> 8) * v18;
            double v42 = v49
                + (double)((unsigned __int16)(v10[6] * (_WORD)v50
                                                             + 128
                                                             + ((v10[6] * v50 + 128) >> 8)) >> 8)
                * v18;
          }
          else
          {
            double v20 = (double)BYTE1(v14) * (v19 * (1.0 - v8)) + 0.0;
            double v21 = (double)BYTE1(v16) * (v19 * (1.0 - v8)) + 0.0;
            int v22 = v10[7];
            unsigned int v23 = v22 * v10[4] + 128;
            unsigned int v24 = v10[5] * v22 + 128;
            double v25 = v18 * (1.0 - v8);
            double v26 = v20 + (double)((unsigned __int16)(v23 + (v23 >> 8)) >> 8) * v25;
            double v27 = v21 + (double)((unsigned __int16)(v24 + (v24 >> 8)) >> 8) * v25;
            double v28 = (double)BYTE1(v17) * (v19 * (1.0 - v8))
                + 0.0
                + (double)((unsigned __int16)(v10[6] * (_WORD)v22
                                                             + 128
                                                             + ((v10[6] * v22 + 128) >> 8)) >> 8)
                * v25;
            double v29 = &v10[v9];
            int v30 = v29[3];
            unsigned int v31 = v29[1] * v30 + 128;
            double v32 = v19 * v8;
            double v33 = v26
                + (double)((unsigned __int16)(v30 * *v29 + 128 + ((v30 * *v29 + 128) >> 8)) >> 8)
                * v32;
            double v34 = v27 + (double)((unsigned __int16)(v31 + (v31 >> 8)) >> 8) * v32;
            double v35 = v28
                + (double)((unsigned __int16)(v29[2] * (_WORD)v30
                                                             + 128
                                                             + ((v29[2] * v30 + 128) >> 8)) >> 8)
                * v32;
            int v36 = v29[7];
            unsigned int v37 = v36 * v29[4] + 128;
            unsigned int v38 = v29[5] * v36 + 128;
            double v39 = v18 * v8;
            double v40 = v33 + (double)((unsigned __int16)(v37 + (v37 >> 8)) >> 8) * v39;
            double v41 = v34 + (double)((unsigned __int16)(v38 + (v38 >> 8)) >> 8) * v39;
            double v42 = v35
                + (double)((unsigned __int16)(v29[6] * (_WORD)v36
                                                             + 128
                                                             + ((v29[6] * v36 + 128) >> 8)) >> 8)
                * v39;
          }
        }
        *a3 = (int)v40;
        a3[1] = (int)v41;
        a3[2] = (int)v42;
        return 1;
      }
    }
  }
  return v3;
}

uint64_t boost::gil::resample_subimage<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v32 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  double v27 = v24.__sinval * v21 + v20 * v24.__cosval;
  double v28 = v24.__cosval * v21 - v20 * v24.__sinval;
  double v29 = v24.__sinval * v23 + v22 * v24.__cosval + 0.0;
  double v30 = v24.__cosval * v23 - v22 * v24.__sinval + 0.0;
  v35.f64[0] = v25 + v26 * 0.0;
  v35.f64[1] = v26 + v25 * 0.0;
  double v36 = v27 + v28 * 0.0;
  double v37 = v28 + v27 * 0.0;
  double v38 = v32 * 0.5 + a3 + v29 + v30 * 0.0;
  double v39 = v11 * 0.5 + a4 + v30 + v29 * 0.0;
  return boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::matrix3x2<double>>(a1, a2, &v35);
}

uint64_t boost::gil::resample_pixels<boost::gil::nearest_neighbor_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3)
{
  uint64_t v3 = a2[1];
  if (v3 >= 1)
  {
    int64_t v6 = (void *)result;
    uint64_t v7 = 0;
    uint64_t v8 = *a2;
    do
    {
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        double v10 = (unsigned char *)(a2[2] + a2[3] * v7);
        do
        {
          float64x2_t v11 = vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], (double)v7), *a3, (double)v9));
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,double>(v6, v11.f64, v10);
          ++v9;
          v10 += 4;
        }
        while (v8 != v9);
      }
      ++v7;
    }
    while (v7 != v3);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,double>(void *a1, double *a2, unsigned char *a3)
{
  uint64_t result = 0;
  double v5 = a2[1];
  if (*a2 >= 0.0) {
    double v6 = 0.5;
  }
  else {
    double v6 = -0.5;
  }
  if (v5 >= 0.0) {
    double v7 = 0.5;
  }
  else {
    double v7 = -0.5;
  }
  if (((uint64_t)(*a2 + v6) & 0x80000000) == 0)
  {
    uint64_t v8 = (uint64_t)(v5 + v7);
    if ((v8 & 0x80000000) == 0 && *a1 > (uint64_t)(uint64_t)(*a2 + v6))
    {
      if (a1[1] <= (uint64_t)v8)
      {
        return 0;
      }
      else
      {
        double v10 = (unsigned char *)(a1[2] + 4 * (uint64_t)(*a2 + v6) + a1[3] * (uint64_t)(v5 + v7));
        *a3 = *v10;
        a3[1] = v10[1];
        a3[2] = v10[2];
        a3[3] = v10[3];
        return 1;
      }
    }
  }
  return result;
}

uint64_t boost::gil::resample_subimage<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>>(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7)
{
  double v9 = a5 - a3 + -1.0;
  if (v9 < 1.0) {
    double v9 = 1.0;
  }
  double v28 = v9;
  double v10 = a6 - a4;
  if (v10 + -1.0 >= 1.0) {
    double v11 = v10 + -1.0;
  }
  else {
    double v11 = 1.0;
  }
  if ((double)(*a2 - 1) >= 1.0) {
    double v12 = (double)(*a2 - 1);
  }
  else {
    double v12 = 1.0;
  }
  double v13 = (double)(a2[1] - 1);
  if (v13 < 1.0) {
    double v13 = 1.0;
  }
  double v14 = v12 * -0.5;
  double v15 = v13 * -0.5;
  double v16 = v9 / v12;
  double v17 = v11 / v13;
  double v18 = v16 + 0.0;
  double v19 = v17 * 0.0 + 0.0;
  double v20 = v16 * 0.0 + 0.0;
  double v21 = v17 + 0.0;
  double v22 = v15 * 0.0 + v14 * v16 + 0.0;
  double v23 = v17 * v15 + v14 * 0.0 + 0.0;
  __double2 v24 = __sincos_stret(a7);
  double v25 = v24.__sinval * v19 + v18 * v24.__cosval;
  double v26 = v24.__cosval * v19 - v18 * v24.__sinval;
  v31.f64[0] = v25 + v26 * 0.0;
  return boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::matrix3x2<double>>(a1, a2, &v31, v11 * 0.5+ a4+ v24.__cosval * v23- v22 * v24.__sinval+ 0.0+ (v24.__sinval * v23 + v22 * v24.__cosval + 0.0) * 0.0, v11 * 0.5 + a4, v26 + v25 * 0.0, v24.__sinval * v21 + v20 * v24.__cosval + (v24.__cosval * v21 - v20 * v24.__sinval) * 0.0, v24.__cosval * v21 - v20 * v24.__sinval + (v24.__sinval * v21 + v20 * v24.__cosval) * 0.0, v28 * 0.5+ a3+ v24.__sinval * v23+ v22 * v24.__cosval+ 0.0+ (v24.__cosval * v23 - v22 * v24.__sinval + 0.0) * 0.0,
           v24.__sinval * v23 + v22 * v24.__cosval + 0.0,
           v28 * 0.5 + a3);
}

uint64_t boost::gil::resample_pixels<boost::gil::bilinear_sampler,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>> *>>>,boost::gil::matrix3x2<double>>(uint64_t result, uint64_t *a2, float64x2_t *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v11 = a2[1];
  if (v11 >= 1)
  {
    double v14 = (int64_t *)result;
    uint64_t v15 = 0;
    uint64_t v16 = *a2;
    do
    {
      if (v16 >= 1)
      {
        uint64_t v17 = 0;
        double v21 = (double)v15;
        double v18 = (unsigned char *)(a2[2] + a2[3] * v15);
        do
        {
          float64x2_t v19 = *a3;
          float64x2_t v20 = vmlaq_n_f64(vmulq_n_f64(a3[1], v21), *a3, (double)v17);
          float64x2_t v22 = vaddq_f64(a3[2], v20);
          uint64_t result = boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,double>(v14, v22.f64, v18, v22.f64[0], v19.f64[0], v20.f64[0], v21, a8, a9, a10, a11);
          ++v17;
          v18 += 4;
        }
        while (v16 != v17);
      }
      ++v15;
    }
    while (v15 != v11);
  }
  return result;
}

uint64_t boost::gil::sample<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>,boost::gil::image_view<boost::gil::memory_based_2d_locator<boost::gil::memory_based_step_iterator<boost::gil::pixel<unsigned char,boost::gil::layout<boost::mpl::vector4<boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t>,boost::mpl::range_c<int,0,4>>>*>>>,double>(int64_t *a1, double *a2, unsigned char *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v13 = 0;
  int64_t v14 = vcvtmd_s64_f64(*a2);
  if ((v14 & 0x8000000000000000) == 0)
  {
    double v15 = a2[1];
    int64_t v16 = vcvtmd_s64_f64(v15);
    if ((v16 & 0x8000000000000000) == 0)
    {
      if (*a1 <= v14) {
        return 0;
      }
      int64_t v17 = a1[1];
      if (v17 <= v16)
      {
        return 0;
      }
      else
      {
        double v18 = (double)(uint64_t)floor(v15);
        double v19 = v15 - v18;
        int64_t v20 = a1[3];
        double v21 = (unsigned char *)(a1[2] + v20 * v16 + 4 * v14);
        int64_t v22 = v14 + 1;
        int64_t v23 = v16 + 1;
        if (v22 >= *a1)
        {
          if (v23 >= v17)
          {
            LOBYTE(v19) = *v21;
            double v43 = (double)*(unint64_t *)&v19;
            LOBYTE(v19) = v21[1];
            double v45 = (double)*(unint64_t *)&v19;
            LOBYTE(v19) = v21[2];
            double v47 = (double)*(unint64_t *)&v19;
            LOBYTE(v19) = v21[3];
            double v48 = (double)*(unint64_t *)&v19;
          }
          else
          {
            LOBYTE(v18) = *v21;
            LOBYTE(a8) = v21[1];
            *(double *)&unint64_t v49 = (double)*(unint64_t *)&a8 * (1.0 - v19) + 0.0;
            LOBYTE(a9) = v21[2];
            *(double *)&unint64_t v50 = (double)*(unint64_t *)&a9 * (1.0 - v19) + 0.0;
            LOBYTE(a1std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v21[3];
            unsigned int v51 = &v21[v20];
            *(double *)&unint64_t v52 = (double)*v51;
            double v43 = (double)*(unint64_t *)&v18 * (1.0 - v19) + 0.0 + *(double *)&v52 * v19;
            LOBYTE(v52) = v51[1];
            double v45 = *(double *)&v49 + (double)v52 * v19;
            LOBYTE(v49) = v51[2];
            double v47 = *(double *)&v50 + (double)v49 * v19;
            LOBYTE(v5std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v51[3];
            double v48 = (double)*(unint64_t *)&a10 * (1.0 - v19) + 0.0 + (double)v50 * v19;
          }
        }
        else
        {
          double v24 = *a2 - (double)(uint64_t)floor(*a2);
          double v25 = 1.0 - v24;
          if (v23 >= v17)
          {
            LOBYTE(v19) = *v21;
            *(double *)&unint64_t v53 = (double)*(unint64_t *)&v19 * v25 + 0.0;
            LOBYTE(a8) = v21[1];
            double v54 = (double)*(unint64_t *)&a8 * v25 + 0.0;
            LOBYTE(a9) = v21[2];
            double v55 = (double)*(unint64_t *)&a9 * v25 + 0.0;
            LOBYTE(a1std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v21[3];
            double v56 = (double)*(unint64_t *)&a10 * v25 + 0.0;
            LOBYTE(v25) = v21[4];
            double v43 = *(double *)&v53 + (double)*(unint64_t *)&v25 * v24;
            LOBYTE(v53) = v21[5];
            *(double *)&unint64_t v57 = (double)v53;
            double v45 = v54 + *(double *)&v57 * v24;
            LOBYTE(v57) = v21[6];
            *(double *)&unint64_t v58 = (double)v57;
            double v47 = v55 + *(double *)&v58 * v24;
            LOBYTE(v58) = v21[7];
            double v48 = v56 + (double)v58 * v24;
          }
          else
          {
            LOBYTE(a9) = *v21;
            LOBYTE(a11) = v21[1];
            *(double *)&unint64_t v26 = (double)*(unint64_t *)&a11 * (v25 * (1.0 - v19)) + 0.0;
            LOBYTE(v11) = v21[2];
            *(double *)&unint64_t v27 = (double)v11 * (v25 * (1.0 - v19)) + 0.0;
            LOBYTE(v12) = v21[3];
            *(double *)&unint64_t v28 = (double)v12 * (v25 * (1.0 - v19)) + 0.0;
            double v29 = v24 * (1.0 - v19);
            *(double *)&unint64_t v30 = (double)v21[4];
            *(double *)&unint64_t v31 = (double)*(unint64_t *)&a9 * (v25 * (1.0 - v19)) + 0.0 + *(double *)&v30 * v29;
            LOBYTE(v3std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v21[5];
            *(double *)&unint64_t v32 = *(double *)&v26 + (double)v30 * v29;
            LOBYTE(v26) = v21[6];
            *(double *)&unint64_t v33 = *(double *)&v27 + (double)v26 * v29;
            LOBYTE(v27) = v21[7];
            double v34 = *(double *)&v28 + (double)v27 * v29;
            float64x2_t v35 = &v21[v20];
            double v36 = v25 * v19;
            LOBYTE(v28) = *v35;
            double v37 = *(double *)&v31 + (double)v28 * v36;
            LOBYTE(v31) = v35[1];
            double v38 = *(double *)&v32 + (double)v31 * v36;
            LOBYTE(v32) = v35[2];
            double v39 = *(double *)&v33 + (double)v32 * v36;
            LOBYTE(v33) = v35[3];
            double v40 = v34 + (double)v33 * v36;
            double v41 = v24 * v19;
            LOBYTE(v24) = v35[4];
            *(double *)&unint64_t v42 = (double)*(unint64_t *)&v24;
            double v43 = v37 + *(double *)&v42 * v41;
            LOBYTE(v42) = v35[5];
            *(double *)&unint64_t v44 = (double)v42;
            double v45 = v38 + *(double *)&v44 * v41;
            LOBYTE(v44) = v35[6];
            *(double *)&unint64_t v46 = (double)v44;
            double v47 = v39 + *(double *)&v46 * v41;
            LOBYTE(v46) = v35[7];
            double v48 = v40 + (double)v46 * v41;
          }
        }
        *a3 = (int)v43;
        a3[1] = (int)v45;
        a3[2] = (int)v47;
        a3[3] = (int)v48;
        return 1;
      }
    }
  }
  return v13;
}

__n128 OUTLINED_FUNCTION_0_4(__n128 *a1)
{
  __n128 result = *a1;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  return result;
}

__n128 OUTLINED_FUNCTION_1_2(__n128 *a1)
{
  __n128 result = *a1;
  v1[1].n128_u64[0] = a1[1].n128_u64[0];
  *uint64_t v1 = result;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  return result;
}

void turi::read_image(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 48) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 56) = 3;
  uint64_t v2 = 0;
  turi::read_raw_image(a1, (uint64_t)&v2, (uint64_t *)(a2 + 40));
}

void sub_223ECD03C(_Unwind_Exception *a1)
{
  boost::detail::shared_count::~shared_count((atomic_uint **)(v1 + 8));
  _Unwind_Resume(a1);
}

void turi::read_raw_image(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v4, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v4 = *(std::string *)a1;
  }
  turi::general_ifstream::general_ifstream(v5, (uint64_t)&v4);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  *a3 = turi::general_ifstream::file_size((turi::neural_net::shared_float_array **)v5);
  operator new[]();
}

void sub_223ECD3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __cxa_end_catch();
  turi::general_ifstream::~general_ifstream((turi::general_ifstream *)va);
  _Unwind_Resume(a1);
}

BOOL boost::algorithm::iends_with<std::string,char [4]>(uint64_t *a1, const char *a2, std::locale *a3)
{
  std::locale::locale(&v14, a3);
  int v5 = *((char *)a1 + 23);
  if (v5 >= 0) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = (uint64_t *)*a1;
  }
  if (v5 >= 0) {
    uint64_t v7 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    uint64_t v7 = a1[1];
  }
  size_t v8 = strlen(a2);
  std::locale::locale(&v15, &v14);
  uint64_t v9 = (uint64_t)v6 - 1;
  double v10 = a2 - 1;
  while (v7 && v8)
  {
    if (!boost::algorithm::is_iequal::operator()<char,char>(&v15, (char *)(v9 + v7--), (char *)&v10[v8--]))
    {
      BOOL v12 = 0;
      goto LABEL_13;
    }
  }
  BOOL v12 = v8 == 0;
LABEL_13:
  std::locale::~locale(&v15);
  std::locale::~locale(&v14);
  return v12;
}

void sub_223ECD4A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

void turi::general_ifstream::~general_ifstream(turi::general_ifstream *this)
{
  *(void *)this = &unk_26D758EF8;
  uint64_t v2 = (char *)this + 216;
  *((void *)this + 27) = &unk_26D758F20;
  if (*((char *)this + 215) < 0) {
    operator delete(*((void **)this + 24));
  }
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)this + 16);
  MEMORY[0x22A614E30](v2);
}

{
  char *v2;
  uint64_t vars8;

  *(void *)this = &unk_26D758EF8;
  uint64_t v2 = (char *)this + 216;
  *((void *)this + 27) = &unk_26D758F20;
  if (*((char *)this + 215) < 0) {
    operator delete(*((void **)this + 24));
  }
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)this + 16);
  MEMORY[0x22A614E30](v2);
  JUMPOUT(0x22A614FA0);
}

void virtual thunk to'turi::general_ifstream::~general_ifstream(turi::general_ifstream *this)
{
  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 24);
  *(void *)uint64_t v1 = &unk_26D758EF8;
  *((void *)v1 + 27) = &unk_26D758F20;
  if (v1[215] < 0) {
    operator delete(*((void **)v1 + 24));
  }
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  JUMPOUT(0x22A614E30);
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 24);
  *(void *)uint64_t v1 = &unk_26D758EF8;
  *((void *)v1 + 27) = &unk_26D758F20;
  if (v1[215] < 0) {
    operator delete(*((void **)v1 + 24));
  }
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  MEMORY[0x22A614E30](v1 + 216);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::iostreams::stream<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>>::~stream(uint64_t a1)
{
  uint64_t v2 = std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](a1 + 192);
  return a1;
}

void boost::iostreams::stream<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>>::~stream(uint64_t a1)
{
  uint64_t v2 = std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](a1 + 192);
  JUMPOUT(0x22A614FA0);
}

void virtual thunk to'boost::iostreams::stream<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>>::~stream(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  JUMPOUT(0x22A614E30);
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  MEMORY[0x22A614E30](v1 + 192);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,std::istream>::~stream_base(uint64_t a1)
{
  uint64_t v2 = std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](a1 + 192);
  return a1;
}

void boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,std::istream>::~stream_base(uint64_t a1)
{
  uint64_t v2 = std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(v2 + 16);
  MEMORY[0x22A614E30](a1 + 192);
  JUMPOUT(0x22A614FA0);
}

void virtual thunk to'boost::iostreams::detail::stream_base<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,std::istream>::~stream_base(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  JUMPOUT(0x22A614E30);
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::istream::~istream();
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer((uint64_t)(v1 + 16));
  MEMORY[0x22A614E30](v1 + 192);
  JUMPOUT(0x22A614FA0);
}

uint64_t boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(uint64_t a1)
{
  *(void *)a1 = &unk_26D7590E8;
  if ((~*(_DWORD *)(a1 + 168) & 5) == 0) {
    boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_source>>>,boost::iostreams::detail::clear_flags_operation<int>>((_DWORD *)a1, 8, (_DWORD *)a1, 16, (turi::fileio_impl::general_fstream_source *)(a1 + 72), (_DWORD *)(a1 + 168));
  }
  *(void *)a1 = &unk_26D7591F8;
  uint64_t v2 = *(void **)(a1 + 144);
  if (v2) {
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 128))
  {
    turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)(a1 + 72));
    *(unsigned char *)(a1 + 128) = 0;
  }
  return std::streambuf::~streambuf();
}

void sub_223ECDB50(void *a1)
{
}

void boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(uint64_t a1)
{
  boost::iostreams::stream_buffer<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~stream_buffer(a1);
  JUMPOUT(0x22A614FA0);
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::imbue(uint64_t a1, const std::locale *a2)
{
  if (*(unsigned char *)(a1 + 168))
  {
    uint64_t v2 = *(std::locale **)(a1 + 136);
    if (v2)
    {
      std::string v4 = v2 + 1;
      (*((void (**)(std::locale *))v2->__locale_ + 2))(v2);
      std::locale::locale(&v5, v4);
      std::locale::operator=(v4, a2);
      std::locale::~locale(&v5);
    }
  }
}

double boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::seekpos@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)&double result = boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::seek_impl(0, a1, (const char *)*(void *)(a2 + 128), a3, a4).n128_u64[0];
  return result;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::sync(uint64_t a1)
{
  boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::sync_impl(a1);
  uint64_t result = *(void *)(a1 + 136);
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 48))(result);
    return 0;
  }
  return result;
}

void sub_223ECDC80(void *a1)
{
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::underflow(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 **)(a1 + 24);
  if (!v2)
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 168))(a1);
    uint64_t v2 = *(unsigned __int8 **)(a1 + 24);
  }
  if ((unint64_t)v2 < *(void *)(a1 + 32)) {
    return *v2;
  }
  uint64_t v4 = *(void *)(a1 + 160);
  if (v4 >= (uint64_t)&v2[-*(void *)(a1 + 16)]) {
    size_t v5 = (size_t)&v2[-*(void *)(a1 + 16)];
  }
  else {
    size_t v5 = *(void *)(a1 + 160);
  }
  if (v5)
  {
    uint64_t v6 = -(uint64_t)v5;
    memmove((void *)(*(void *)(a1 + 144) + v4 - v5), &v2[-v5], v5);
    uint64_t v4 = *(void *)(a1 + 160);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 152);
  size_t v8 = (char *)(*(void *)(a1 + 144) + v4);
  *(void *)(a1 + 16) = &v8[v6];
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = turi::fileio_impl::general_fstream_source::read((turi::fileio_impl::general_fstream_source *)(a1 + 72), v8, v7 - v4);
  if (v9 == -1)
  {
    *(_DWORD *)(a1 + 64) |= 1u;
    *(void *)(a1 + 32) = *(void *)(a1 + 144) + *(void *)(a1 + 160);
  }
  else
  {
    double v10 = *(unsigned __int8 **)(a1 + 24);
    *(void *)(a1 + 32) = *(void *)(a1 + 144) + *(void *)(a1 + 160) + v9;
    if (v9) {
      return *v10;
    }
  }
  return 0xFFFFFFFFLL;
}

boost::iostreams::detail *boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::pbackfail(uint64_t a1, boost::iostreams::detail *this)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 == *(void *)(a1 + 16))
  {
    boost::iostreams::detail::bad_putback(&v5);
    boost::throw_exception<std::ios_base::failure>((uint64_t)&v5);
  }
  uint64_t v3 = (unsigned char *)(v2 - 1);
  *(void *)(a1 + 24) = v3;
  if (this == -1) {
    return 0;
  }
  *uint64_t v3 = (_BYTE)this;
  return this;
}

void sub_223ECDE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::overflow(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 168) & 2) != 0 && !*(void *)(a1 + 48)) {
    (*(void (**)(uint64_t))(*(void *)a1 + 176))(a1);
  }
  if (a2 == -1) {
    return 0;
  }
  if ((*(unsigned char *)(a1 + 168) & 2) == 0) {
    boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<turi::fileio_impl::general_fstream_source,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>();
  }
  uint64_t v4 = *(unsigned char **)(a1 + 48);
  if (v4 == *(unsigned char **)(a1 + 56))
  {
    boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::sync_impl(a1);
    uint64_t v4 = *(unsigned char **)(a1 + 48);
    if (v4 == *(unsigned char **)(a1 + 56)) {
      return 0xFFFFFFFFLL;
    }
  }
  *uint64_t v4 = a2;
  ++*(void *)(a1 + 48);
  return a2;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::set_next(uint64_t result, uint64_t a2)
{
  *(void *)(result + 136) = a2;
  return result;
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::close_impl(void *a1, int a2)
{
  if (a2 == 8)
  {
    a1[2] = 0;
    a1[3] = 0;
    a1[4] = 0;
  }
  boost::iostreams::close<turi::fileio_impl::general_fstream_source>((turi::fileio_impl::general_fstream_source *)(a1 + 9), a2);
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::auto_close(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 168) >> 2) & 1;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::set_auto_close(uint64_t result, int a2)
{
  if (a2) {
    int v2 = 4;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(result + 168) = *(_DWORD *)(result + 168) & 0xFFFFFFFB | v2;
  return result;
}

BOOL boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::strict_sync(uint64_t a1)
{
  boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::sync_impl(a1);
  uint64_t v2 = *(void *)(a1 + 136);
  return !v2 || (*(unsigned int (**)(uint64_t))(*(void *)v2 + 48))(v2) != -1;
}

void sub_223ECDFA0(void *a1)
{
}

void *boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::component_type()
{
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::component_impl(uint64_t a1)
{
  return a1 + 72;
}

void *boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::init_get_area(void *result)
{
  uint64_t v1 = result[18];
  result[2] = v1;
  result[3] = v1;
  result[4] = v1;
  return result;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::init_put_area(uint64_t result)
{
  if ((*(unsigned char *)(result + 168) & 2) != 0)
  {
    uint64_t v1 = *(void *)(result + 144);
    uint64_t v2 = v1 + *(void *)(result + 152);
  }
  else
  {
    uint64_t v1 = 0;
    uint64_t v2 = 0;
  }
  *(void *)(result + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v1;
  *(void *)(result + 48) = v1;
  *(void *)(result + 56) = v2;
  return result;
}

uint64_t boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_source>>>,boost::iostreams::detail::clear_flags_operation<int>>(_DWORD *a1, int a2, _DWORD *a3, int a4, turi::fileio_impl::general_fstream_source *a5, _DWORD *a6)
{
  uint64_t result = boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_source>>>>(a1, a2, a3, a4, a5);
  *a6 = 0;
  return result;
}

void sub_223ECE024(void *a1)
{
  __cxa_begin_catch(a1);
  *uint64_t v1 = 0;
  __cxa_rethrow();
}

void sub_223ECE034(_Unwind_Exception *a1)
{
}

uint64_t boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<turi::fileio_impl::general_fstream_source>>>>(_DWORD *a1, int a2, _DWORD *a3, int a4, turi::fileio_impl::general_fstream_source *a5)
{
  uint64_t v6 = boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>>(a1, a2, a3, a4);
  if (*((unsigned char *)a5 + 56))
  {
    turi::fileio_impl::general_fstream_source::~general_fstream_source(a5);
    *((unsigned char *)a5 + 56) = 0;
  }
  return v6;
}

void sub_223ECE088(void *a1)
{
  __cxa_begin_catch(a1);
  if (*((unsigned char *)v1 + 56))
  {
    turi::fileio_impl::general_fstream_source::~general_fstream_source(v1);
    *((unsigned char *)v1 + 56) = 0;
  }
  __cxa_rethrow();
}

void sub_223ECE0A8(_Unwind_Exception *a1)
{
}

uint64_t boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>>(_DWORD *a1, int a2, _DWORD *a3, int a4)
{
  return 0;
}

void sub_223ECE0F4(void *a1)
{
  __cxa_begin_catch(a1);
  boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>::close(v2, v1);
  __cxa_rethrow();
}

void sub_223ECE118(_Unwind_Exception *a1)
{
}

_DWORD *boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>::close(_DWORD *result, int a2)
{
  if (a2 == 16)
  {
    int v4 = result[16];
    if ((v4 & 4) != 0) {
      return result;
    }
    int v3 = v4 | 4;
    goto LABEL_7;
  }
  if (a2 == 8)
  {
    int v2 = result[16];
    if ((v2 & 2) == 0)
    {
      int v3 = v2 | 2;
LABEL_7:
      result[16] = v3;
      return (_DWORD *)(*(uint64_t (**)(void))(*(void *)result + 120))();
    }
  }
  return result;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~indirect_streambuf(uint64_t a1)
{
  *(void *)a1 = &unk_26D7591F8;
  int v2 = *(void **)(a1 + 144);
  if (v2) {
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 128))
  {
    turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)(a1 + 72));
    *(unsigned char *)(a1 + 128) = 0;
  }
  return std::streambuf::~streambuf();
}

void boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::~indirect_streambuf(uint64_t a1)
{
  *(void *)a1 = &unk_26D7591F8;
  int v2 = *(void **)(a1 + 144);
  if (v2) {
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 128))
  {
    turi::fileio_impl::general_fstream_source::~general_fstream_source((turi::fileio_impl::general_fstream_source *)(a1 + 72));
    *(unsigned char *)(a1 + 128) = 0;
  }
  std::streambuf::~streambuf();
  JUMPOUT(0x22A614FA0);
}

__n128 boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::seek_impl@<Q0>(uint64_t a1@<X2>, uint64_t a2@<X0>, const char *a3@<X1>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a3;
  if (a1 == 1
    && a4 == 8
    && (uint64_t v9 = *(void *)(a2 + 24)) != 0
    && *(void *)(a2 + 16) - v9 <= (uint64_t)a3
    && *(void *)(a2 + 32) - v9 >= (uint64_t)a3)
  {
    *(void *)(a2 + 24) = v9 + (int)a3;
    turi::fileio_impl::general_fstream_source::seek((turi::fileio_impl::general_fstream_source *)(a2 + 72), 0, 1);
    uint64_t v12 = *(void *)(a2 + 24) - *(void *)(a2 + 32);
    *(_OWORD *)(a5 + 96) = v19;
    *(_OWORD *)(a5 + 112) = v20;
    *(void *)(a5 + 128) = v21;
    *(_OWORD *)(a5 + 32) = v15;
    *(_OWORD *)(a5 + 48) = v16;
    *(_OWORD *)(a5 + 64) = v17;
    *(_OWORD *)(a5 + 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v18;
    __n128 result = v14;
    *(_OWORD *)a5 = v13;
    *(__n128 *)(a5 + 16) = v14;
    *(void *)(a5 + 128) = v12 + v21;
  }
  else
  {
    if (*(void *)(a2 + 48)) {
      (*(void (**)(uint64_t))(*(void *)a2 + 48))(a2);
    }
    if (a1 == 1)
    {
      uint64_t v10 = *(void *)(a2 + 24);
      if (v10) {
        uint64_t v6 = &v6[v10 - *(void *)(a2 + 32)];
      }
    }
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    turi::fileio_impl::general_fstream_source::seek((turi::fileio_impl::general_fstream_source *)(a2 + 72), v6, a1);
  }
  return result;
}

uint64_t boost::iostreams::detail::indirect_streambuf<turi::fileio_impl::general_fstream_source,std::char_traits<char>,std::allocator<char>,boost::iostreams::input_seekable>::sync_impl(uint64_t result)
{
  if ((uint64_t)(*(void *)(result + 48) - *(void *)(result + 40)) >= 1) {
    boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<turi::fileio_impl::general_fstream_source,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>();
  }
  return result;
}

void boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<turi::fileio_impl::general_fstream_source,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char>>>()
{
  *(void *)&__ec.__val_ = 1;
  __ec.__cat_ = std::iostream_category();
  std::ios_base::failure::failure(&v0, "no write access", &__ec);
  boost::throw_exception<std::ios_base::failure>((uint64_t)&v0);
}

void sub_223ECE4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

std::ios_base::failure *boost::iostreams::detail::bad_putback@<X0>(std::ios_base::failure *a1@<X8>)
{
  *(void *)&v4.__val_ = 1;
  v4.__cat_ = std::iostream_category();
  return std::ios_base::failure::failure(a1, "putback buffer full", &v4);
}

void boost::iostreams::close<turi::fileio_impl::general_fstream_source>(turi::fileio_impl::general_fstream_source *a1, int a2)
{
  if (a2 == 8)
  {
    turi::fileio_impl::general_fstream_source::close(a1);
  }
  else if (a2 == 24)
  {
    boost::iostreams::detail::close_all<turi::fileio_impl::general_fstream_source>(a1);
  }
}

void boost::iostreams::detail::close_all<turi::fileio_impl::general_fstream_source>(turi::fileio_impl::general_fstream_source *a1)
{
}

void sub_223ECE570(void *a1)
{
}

void sub_223ECE57C(_Unwind_Exception *a1)
{
}

void std::vector<std::string>::resize(std::vector<std::string> *this, std::vector<std::string>::size_type __sz)
{
  std::vector<std::string>::pointer end = this->__end_;
  std::vector<std::string>::size_type v4 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)this->__begin_) >> 3);
  BOOL v5 = __sz >= v4;
  std::vector<std::string>::size_type v6 = __sz - v4;
  if (v6 != 0 && v5)
  {
    std::vector<std::string>::__append(this, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = &this->__begin_[__sz];
    while (end != v7)
    {
      if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(end[-1].__r_.__value_.__l.__data_);
      }
      --end;
    }
    this->__end_ = v7;
  }
}

void std::vector<std::string>::__append(std::vector<std::string> *this, std::vector<std::string>::size_type __n)
{
  value = this->__end_cap_.__value_;
  p_end_cap = &this->__end_cap_;
  BOOL v5 = value;
  uint64_t v7 = p_end_cap[-1].__value_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)value - (char *)v7) >> 3) >= __n)
  {
    if (__n)
    {
      size_t v13 = 24 * ((24 * __n - 24) / 0x18) + 24;
      bzero(p_end_cap[-1].__value_, v13);
      uint64_t v7 = (std::string *)((char *)v7 + v13);
    }
    this->__end_ = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (char *)this->__begin_) >> 3);
    unint64_t v9 = v8 + __n;
    if (v8 + __n > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (char *)this->__begin_) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    __v.__end_cap_.__value_ = (std::allocator<std::string> *)p_end_cap;
    if (v11) {
      uint64_t v12 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)p_end_cap, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    __v.__first_ = v12;
    __v.__begin_ = v12 + v8;
    __v.__end_cap_.__value_ = &v12[v11];
    size_t v14 = 24 * ((24 * __n - 24) / 0x18) + 24;
    bzero(__v.__begin_, v14);
    __v.__end_ = (std::__split_buffer<std::string>::pointer)((char *)__v.__begin_ + v14);
    std::vector<std::string>::__swap_out_circular_buffer(this, &__v);
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
}

void sub_223ECE784(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

BOOL boost::algorithm::is_iequal::operator()<char,char>(const std::locale *a1, char *a2, char *a3)
{
  uint64_t v5 = *a2;
  std::vector<std::string>::size_type v6 = (std::locale::id *)MEMORY[0x263F8C108];
  uint64_t v7 = std::locale::use_facet(a1, MEMORY[0x263F8C108]);
  LODWORD(v5) = ((uint64_t (*)(const std::locale::facet *, uint64_t))v7->__vftable[1].~facet)(v7, v5);
  uint64_t v8 = *a3;
  unint64_t v9 = std::locale::use_facet(a1, v6);
  return v5 == ((unsigned int (*)(const std::locale::facet *, uint64_t))v9->__vftable[1].~facet)(v9, v8);
}

CoreML::Model *CoreML::FeatureVectorizer::FeatureVectorizer(CoreML::Model *a1, const std::string *a2)
{
  __n128 result = CoreML::Model::Model(a1, a2);
  *(void *)__n128 result = &unk_26D7594B0;
  return result;
}

void CoreML::FeatureVectorizer::~FeatureVectorizer(CoreML::FeatureVectorizer *this)
{
  CoreML::Model::~Model(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::FeatureVectorizer::add(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v1 + 44) == 602) {
    operator new();
  }
  CoreML::Specification::Model::clear_Type(*(void *)(a1 + 8));
  *(_DWORD *)(v1 + 44) = 602;
  operator new();
}

void sub_223ECE9AC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

void *std::allocate_shared[abi:ne180100]<CoreML::Specification::Model,std::allocator<CoreML::Specification::Model>,CoreML::Specification::Model const&,void>@<X0>(const CoreML::Specification::Model *a1@<X1>, void *a2@<X8>)
{
  std::vector<std::string>::size_type v4 = operator new(0x48uLL);
  __n128 result = std::__shared_ptr_emplace<CoreML::Specification::Model>::__shared_ptr_emplace[abi:ne180100]<CoreML::Specification::Model const&,std::allocator<CoreML::Specification::Model>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_223ECEA2C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<CoreML::Specification::Model>::__shared_ptr_emplace[abi:ne180100]<CoreML::Specification::Model const&,std::allocator<CoreML::Specification::Model>,0>(void *a1, const CoreML::Specification::Model *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D7594F8;
  CoreML::Specification::Model::Model((CoreML::Specification::Model *)(a1 + 3), a2);
  return a1;
}

void sub_223ECEA88(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<CoreML::Specification::Model>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D7594F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<CoreML::Specification::Model>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D7594F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<CoreML::Specification::Model>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

unsigned int *_tc_google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureVectorizer_InputColumn>::TypeHandler>(unsigned int *result, const CoreML::Specification::V5::Value_FileValue *a2)
{
  if (*(void *)result) {
    return _tc_google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureVectorizer_InputColumn>::TypeHandler>(result, a2, 0, *(_tc_google::protobuf::Arena **)result);
  }
  int v2 = (int *)*((void *)result + 2);
  if (!v2) {
    return _tc_google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureVectorizer_InputColumn>::TypeHandler>(result, a2, 0, *(_tc_google::protobuf::Arena **)result);
  }
  uint64_t v3 = *v2;
  if ((int)v3 >= (int)result[3]) {
    return _tc_google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureVectorizer_InputColumn>::TypeHandler>(result, a2, 0, *(_tc_google::protobuf::Arena **)result);
  }
  std::vector<std::string>::size_type v4 = v2 + 2;
  uint64_t v5 = (int)result[2];
  if ((int)v5 < (int)v3) {
    *(void *)&v4[2 * v3] = *(void *)&v4[2 * v5];
  }
  *(void *)&v4[2 * v5] = a2;
  result[2] = v5 + 1;
  ++**((_DWORD **)result + 2);
  return result;
}

unsigned int *_tc_google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureVectorizer_InputColumn>::TypeHandler>(unsigned int *a1, const CoreML::Specification::V5::Value_FileValue *a2, _tc_google::protobuf::Arena *a3, _tc_google::protobuf::Arena *a4)
{
  std::vector<std::string>::size_type v6 = a2;
  if (a3 || !a4)
  {
    if (a4 != a3)
    {
      if (!a4) {
        operator new();
      }
      CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(Aligned);
      _tc_google::protobuf::Arena::AddListNode(a4, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>);
      _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v6, (std::string *)Aligned);
      if (!a3) {
        (*(void (**)(const CoreML::Specification::V5::Value_FileValue *))(*(void *)v6 + 8))(v6);
      }
      std::vector<std::string>::size_type v6 = Aligned;
    }
  }
  else
  {
    _tc_google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer_InputColumn>(a4, a2);
  }
  return _tc_google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureVectorizer_InputColumn>::TypeHandler>(a1, (uint64_t)v6);
}

void sub_223ECECA8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer_InputColumn>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer_InputColumn>);
  }
  return result;
}

std::string *_tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(const CoreML::Specification::V5::Value_FileValue *a1, std::string *a2)
{
  return CoreML::Specification::V5::Value_FileValue::MergeFrom(a2, a1);
}

unsigned int *_tc_google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureVectorizer_InputColumn>::TypeHandler>(unsigned int *result, uint64_t a2)
{
  uint64_t v3 = result;
  std::vector<std::string>::size_type v4 = (int *)*((void *)result + 2);
  if (!v4)
  {
    int v5 = result[3];
    goto LABEL_11;
  }
  int v5 = result[2];
  unsigned int v6 = result[3];
  if (v5 == v6)
  {
LABEL_11:
    __n128 result = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve(result, v5 + 1);
    goto LABEL_12;
  }
  uint64_t v7 = *v4;
  if (v7 != v6)
  {
    if (v5 >= (int)v7)
    {
      int v9 = v7 + 1;
      goto LABEL_13;
    }
    *(void *)&v4[2 * v7 + 2] = *(void *)&v4[2 * v5 + 2];
LABEL_12:
    std::vector<std::string>::size_type v4 = (int *)*((void *)v3 + 2);
    int v9 = *v4 + 1;
LABEL_13:
    *std::vector<std::string>::size_type v4 = v9;
    goto LABEL_14;
  }
  __n128 result = *(unsigned int **)&v4[2 * v5 + 2];
  if (result) {
    BOOL v8 = *(void *)v3 == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    __n128 result = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(void *)result + 8))(result);
    std::vector<std::string>::size_type v4 = (int *)*((void *)v3 + 2);
  }
LABEL_14:
  uint64_t v10 = (int)v3[2];
  v3[2] = v10 + 1;
  *(void *)&v4[2 * v10 + 2] = a2;
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer_InputColumn>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *_tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureVectorizer_InputColumn>::TypeHandler>(std::string *result, std::string **a2, const CoreML::Specification::V5::Value_FileValue **a3, unsigned int a4, unsigned int a5)
{
  int v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      size_t v14 = *v11++;
      size_t v13 = v14;
      long long v15 = *v12++;
      __n128 result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    long long v18 = *v9;
    long long v19 = &a3[a5];
    long long v20 = (CoreML::Specification::FeatureVectorizer_InputColumn **)&a2[a5];
    do
    {
      uint64_t v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>);
      __n128 result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v21, (std::string *)Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223ECEF34(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

void std::vector<std::pair<std::string,unsigned long>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  int v2 = *a1;
  if (*v2)
  {
    std::vector<std::pair<std::string,unsigned long>>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::pair<std::string,unsigned long>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 32)
  {
    if (*(char *)(i - 9) < 0) {
      operator delete(*(void **)(i - 32));
    }
  }
  a1[1] = v2;
}

uint64_t turi::parse_jpeg(turi *this, const char *a2, void *a3, unint64_t *a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  bzero(v16, 0x290uLL);
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  uint64_t v15 = jpeg_std_error((uint64_t)v13);
  *(void *)&v13[0] = turi::jpeg_error_exit;
  jpeg_CreateDecompress((char *)&v15, 90, 664);
  jpeg_mem_src(&v15, (uint64_t)this, (uint64_t)a2);
  jpeg_read_header((uint64_t)&v15, 1);
  if ((v16[14] - 3) <= 0xFFFFFFFD) {
    turi::parse_jpeg(char const*,unsigned long,unsigned long &,unsigned long &,unsigned long &)::$_0::operator()();
  }
  unint64_t v11 = v16[11];
  *a3 = v16[10];
  *a4 = v11;
  *a5 = v16[12];
  return jpeg_destroy_decompress(&v15);
}

void sub_223ECF144(_Unwind_Exception *a1)
{
}

void sub_223ECF150(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x223ECF158);
  }
  __clang_call_terminate(a1);
}

void turi::jpeg_error_exit(uint64_t a1)
{
}

void turi::decode_jpeg(turi *this, const char *a2, void *a3, char **a4, unint64_t *a5)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  bzero(v12, 0x290uLL);
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  uint64_t v11 = jpeg_std_error((uint64_t)v9);
  *(void *)&v9[0] = turi::jpeg_error_exit;
  *a3 = 0;
  *a4 = 0;
  if (this)
  {
    jpeg_CreateDecompress((char *)&v11, 90, 664);
    jpeg_mem_src(&v11, (uint64_t)this, (uint64_t)a2);
    jpeg_read_header((uint64_t)&v11, 1);
    jpeg_start_decompress((uint64_t)&v11);
    *a4 = (char *)(v12[12] * (unint64_t)v12[10] * v12[11]);
    operator new[]();
  }
  turi::decode_jpeg(char const*,unsigned long,char **,unsigned long &)::$_0::operator()();
}

void sub_223ECF30C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  if (a2)
  {
    __cxa_begin_catch(exception_object);
    if (*v34)
    {
      MEMORY[0x22A614F80](*v34, 0x1000C8077774924);
      *unint64_t v33 = 0;
    }
    jpeg_destroy_decompress(&a33);
    __cxa_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_223ECF360(_Unwind_Exception *a1)
{
}

void sub_223ECF36C(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x223ECF374);
  }
  __clang_call_terminate(a1);
}

uint64_t turi::neural_net::is_convertible_to_fp16(float *a1, uint64_t a2)
{
  if (!a2) {
    return 1;
  }
  uint64_t v2 = 4 * a2 - 4;
  do
  {
    float v3 = *a1++;
    unsigned int v4 = (int)v3 + 65503;
    BOOL v5 = v4 < 0x1FFBF;
    BOOL v6 = v4 > 0x1FFBE || v2 == 0;
    v2 -= 4;
  }
  while (!v6);
  return v5;
}

char *turi::neural_net::get_half_precision_weights@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  return std::vector<half>::__init_with_size[abi:ne180100]<float const*,float const*>((char *)a3, a1, &a1[a2], (4 * a2) >> 2);
}

char *std::vector<half>::__init_with_size[abi:ne180100]<float const*,float const*>(char *result, int *a2, int *a3, uint64_t a4)
{
  if (a4)
  {
    BOOL v6 = result;
    __n128 result = std::vector<half>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = (_WORD *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      int v8 = *a2++;
      _S0 = v8;
      __asm { FCVT            H0, S0 }
      *v7++ = _S0;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_223ECF454(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<half>::__vallocate[abi:ne180100](void *a1, uint64_t a2)
{
  if (a2 < 0) {
    std::vector<float>::__throw_length_error[abi:ne180100]();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<half>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

void *turi::png_memwrite_func(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t io_ptr = png_get_io_ptr(a1);
  uint64_t v7 = *(void *)(io_ptr + 8);
  if (*(void *)io_ptr) {
    int v8 = (char *)malloc_type_realloc(*(void **)io_ptr, v7 + a3, 0xD592089EuLL);
  }
  else {
    int v8 = (char *)malloc_type_malloc(v7 + a3, 0x8184DCB0uLL);
  }
  *(void *)uint64_t io_ptr = v8;
  if (!v8) {
    png_error(a1, "Write Error");
  }
  __n128 result = memcpy(&v8[*(void *)(io_ptr + 8)], a2, a3);
  *(void *)(io_ptr + 8) += a3;
  return result;
}

void *turi::png_memread_func(uint64_t a1, void *a2, size_t a3)
{
  __n128 result = (void *)png_get_io_ptr(a1);
  if (result)
  {
    BOOL v6 = result;
    uint64_t v7 = result[2];
    if (v7 + a3 <= result[1])
    {
      __n128 result = memcpy(a2, (const void *)(*result + v7), a3);
      v6[2] += a3;
    }
  }
  return result;
}

void turi::setup_png_reader(uint64_t a1, unint64_t a2, uint64_t *a3, void *a4)
{
  if (a2 < 5 || png_sig_cmp(a1, 0, 4uLL))
  {
    if (*((int *)global_logger() + 169) <= 6)
    {
      int v9 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/image/png_io.cpp", "setup_png_reader", 90, 1);
      uint64_t v10 = file_logger::operator<<((pthread_key_t *)v9, "Invalid PNG signature");
      file_logger::operator<<((uint64_t)v10, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    }
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Invalid PNG file");
LABEL_15:
  }
  BOOL v6 = png_create_read_struct("1.6.37", 0, (uint64_t)turi::png_error_handler, 0);
  BOOL v16 = v6;
  if (!v6)
  {
    if (*((int *)global_logger() + 169) <= 6)
    {
      uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/image/png_io.cpp", "setup_png_reader", 99, 1);
      uint64_t v13 = file_logger::operator<<((pthread_key_t *)v12, "Fail allocating PNG reader struct");
      file_logger::operator<<((uint64_t)v13, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    }
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Unexpected libpng error");
    goto LABEL_15;
  }
  uint64_t v7 = (uint64_t)v6;
  png_set_option((uint64_t)v6, 2u, 3);
  png_create_info_struct(v7);
  if (!v8)
  {
    png_destroy_read_struct((uint64_t *)&v16, 0, 0);
    if (*((int *)global_logger() + 169) <= 6)
    {
      uint64_t v14 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/image/png_io.cpp", "setup_png_reader", 112, 1);
      uint64_t v15 = file_logger::operator<<((pthread_key_t *)v14, "Fail allocating PNG info struct");
      file_logger::operator<<((uint64_t)v15, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    }
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Unexpected libpng error");
    goto LABEL_15;
  }
  *a3 = v7;
  *a4 = v8;
}

void sub_223ECF7C4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

pthread_key_t *file_logger::operator<<(pthread_key_t *a1, const char *a2)
{
  uint64_t v4 = (char *)pthread_getspecific(a1[74]);
  if (v4)
  {
    if (v4[280])
    {
      BOOL v5 = v4 + 16;
      size_t v6 = strlen(a2);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)a2, v6);
      size_t v7 = strlen(a2);
      if (v7)
      {
        if (a2[v7 - 1] == 10) {
          file_logger::stream_flush((file_logger *)a1);
        }
      }
    }
  }
  return a1;
}

uint64_t file_logger::operator<<(uint64_t a1, void (*a2)(unsigned char *))
{
  uint64_t v4 = pthread_getspecific(*(void *)(a1 + 592));
  if (v4)
  {
    if (v4[280])
    {
      a2(v4 + 16);
      file_logger::stream_flush((file_logger *)a1);
      if (*(_DWORD *)(a1 + 600) == 7)
      {
        __print_back_trace();
        exception = __cxa_allocate_exception(8uLL);
        void *exception = "LOG_FATAL encountered";
        __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
      }
    }
  }
  return a1;
}

void turi::png_error_handler(uint64_t a1, const char *a2)
{
  uint64_t v14 = a1;
  float v3 = (int *)global_logger();
  if (v3[169] <= 6)
  {
    if (cppipc::must_cancel((cppipc *)v3)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    uint64_t v4 = (file_logger *)global_logger();
    started = file_logger::start_stream(v4, 6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/image/png_io.cpp", "png_error_handler", 80, 1);
    size_t v6 = pthread_getspecific(*((void *)started + 74));
    if (v6 && *((unsigned char *)v6 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6 + 2, (uint64_t)"libpng error: ", 14);
    }
    size_t v7 = (char *)pthread_getspecific(*((void *)started + 74));
    if (v7)
    {
      if (v7[280])
      {
        uint64_t v8 = v7 + 16;
        size_t v9 = strlen(a2);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)a2, v9);
        size_t v10 = strlen(a2);
        if (v10)
        {
          if (a2[v10 - 1] == 10) {
            file_logger::stream_flush(started);
          }
        }
      }
    }
    uint64_t v11 = pthread_getspecific(*((void *)started + 74));
    if (v11 && *((unsigned char *)v11 + 280))
    {
      std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(v11[2] - 24) + 16));
      uint64_t v12 = std::locale::use_facet(&v15, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
      std::locale::~locale(&v15);
      std::ostream::put();
      std::ostream::flush();
      file_logger::stream_flush(started);
      if (*((_DWORD *)started + 150) == 7)
      {
        __print_back_trace();
        exception = __cxa_allocate_exception(8uLL);
        void *exception = "LOG_FATAL encountered";
        __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
      }
    }
  }
  png_destroy_read_struct(&v14, 0, 0);
  turi::png_error_handler(png_struct_def *,char const*)::$_0::operator()();
}

void sub_223ECFAA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

uint64_t turi::setup_png_writer(uint64_t *a1, uint64_t *a2, unsigned int a3, unsigned int a4, int a5)
{
  size_t v10 = png_create_write_struct("1.6.37", 0, (uint64_t)turi::png_error_handler, 0);
  uint64_t v21 = v10;
  if (!v10)
  {
    if (*((int *)global_logger() + 169) <= 6)
    {
      BOOL v16 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/image/png_io.cpp", "setup_png_writer", 145, 1);
      uint64_t v17 = file_logger::operator<<((pthread_key_t *)v16, "Fail allocating PNG writer struct");
      file_logger::operator<<((uint64_t)v17, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    }
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Unexpected libpng error");
LABEL_13:
  }
  uint64_t v11 = (uint64_t)v10;
  png_create_info_struct((uint64_t)v10);
  if (!v12)
  {
    png_destroy_write_struct((uint64_t *)&v21, 0);
    if (*((int *)global_logger() + 169) <= 6)
    {
      long long v19 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/image/png_io.cpp", "setup_png_writer", 154, 1);
      long long v20 = file_logger::operator<<((pthread_key_t *)v19, "Fail allocating PNG info struct");
      file_logger::operator<<((uint64_t)v20, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    }
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Unexpected libpng error");
    goto LABEL_13;
  }
  uint64_t v13 = v12;
  if ((a5 - 1) > 3) {
    LOBYTE(v14) = -1;
  }
  else {
    int v14 = dword_2246C60B0[a5 - 1];
  }
  uint64_t result = png_set_IHDR(v11, v12, a3, a4, 8u, v14, 0, 0, 0);
  *a1 = v11;
  *a2 = v13;
  return result;
}

void sub_223ECFC94(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void turi::parse_png(turi *this, const char *a2, void *a3, unint64_t *a4, unint64_t *a5, unint64_t *a6)
{
  double v24 = 0;
  uint64_t v23 = 0;
  turi::setup_png_reader((uint64_t)this, (unint64_t)a2, (uint64_t *)&v24, &v23);
  v22[0] = this;
  v22[1] = a2;
  v22[2] = 0;
  uint64_t v11 = v24;
  png_set_read_fn(v24, (uint64_t)v22, (size_t (*)(size_t, void *, size_t))turi::png_memread_func);
  uint64_t v12 = v23;
  png_read_info((uint64_t)v11, v23);
  uint64_t v21 = 0;
  int v19 = -1;
  int v20 = 0;
  if (png_get_IHDR((uint64_t)v11, v12, (_DWORD *)&v21 + 1, &v21, &v20, &v19, 0, 0, 0) != 1)
  {
    if (*((int *)global_logger() + 169) <= 6)
    {
      std::locale v15 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/image/png_io.cpp", "parse_png", 223, 1);
      BOOL v16 = file_logger::operator<<((pthread_key_t *)v15, "Fail parsing PNG header");
      file_logger::operator<<((uint64_t)v16, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
    }
    png_destroy_read_struct((uint64_t *)&v24, (void **)&v23, 0);
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Invalid PNG file");
  }
  *a3 = HIDWORD(v21);
  *a4 = v21;
  unint64_t v13 = 2;
  unint64_t v14 = 1;
  switch(v19)
  {
    case 0:
      goto LABEL_5;
    case 2:
    case 3:
      unint64_t v14 = 3;
      goto LABEL_5;
    case 4:
      goto LABEL_10;
    case 6:
      unint64_t v14 = 4;
LABEL_5:
      *a5 = v14;
      png_destroy_read_struct((uint64_t *)&v24, (void **)&v23, 0);
      return;
    default:
      unint64_t v13 = -1;
LABEL_10:
      *a5 = v13;
      png_destroy_read_struct((uint64_t *)&v24, (void **)&v23, 0);
      long long v18 = &v19;
      turi::parse_png(char const*,unsigned long,unsigned long &,unsigned long &,unsigned long &)::$_0::operator()(&v18);
  }
}

void turi::encode_png(turi *this, const char *a2, uint64_t a3, uint64_t a4, unint64_t a5, char **a6, unint64_t *a7)
{
  uint64_t v23 = 0;
  *(void *)double v24 = 0;
  turi::setup_png_writer((uint64_t *)v24, &v23, a2, a3, a4);
  uint64_t v12 = *(void **)v24;
  unint64_t v13 = png_malloc(*(void **)v24, 8 * a3);
  if (a3)
  {
    uint64_t v14 = 0;
    do
    {
      std::locale v15 = png_malloc(*(void **)v24, a4 * (void)a2);
      v13[v14] = v15;
      if (a2)
      {
        BOOL v16 = 0;
        do
        {
          for (uint64_t i = a4; i; --i)
          {
            char v18 = *(unsigned char *)this;
            this = (turi *)((char *)this + 1);
            *(unsigned char *)std::locale v15 = v18;
            std::locale v15 = (void *)((char *)v15 + 1);
          }
          ++v16;
        }
        while (v16 != a2);
      }
      ++v14;
    }
    while (v14 != a3);
    uint64_t v12 = *(void **)v24;
  }
  __src = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  png_set_write_fn(v12, (uint64_t)&__src, (size_t (*)(size_t, void *, size_t))turi::png_memwrite_func, (uint64_t (*)(uint64_t))turi::png_mem_flush);
  uint64_t v19 = v23;
  png_set_rows((uint64_t)v12, v23, (uint64_t)v13);
  png_write_png((uint64_t)v12, v19, 0);
  *a6 = v21;
  operator new[]();
}

void turi::decode_png(turi *this, const char *a2, unint64_t a3, char **a4, unint64_t *a5)
{
  if (this)
  {
    char v18 = 0;
    uint64_t v17 = 0;
    turi::setup_png_reader((uint64_t)this, (unint64_t)a2, (uint64_t *)&v18, &v17);
    v16[0] = this;
    v16[1] = a2;
    v16[2] = 0;
    uint64_t v8 = v18;
    png_set_read_fn(v18, (uint64_t)v16, (size_t (*)(size_t, void *, size_t))turi::png_memread_func);
    uint64_t v9 = v17;
    png_read_info((uint64_t)v8, v17);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    int v13 = 0;
    png_get_IHDR((uint64_t)v8, v9, (_DWORD *)&v15 + 1, &v15, (_DWORD *)&v14 + 1, &v14, &v13, 0, 0);
    int v10 = v14;
    if (v14 == 3)
    {
      png_set_palette_to_rgb((uint64_t)v8);
      int v10 = v14;
    }
    int v11 = HIDWORD(v14);
    if (!v10 && SHIDWORD(v14) <= 7)
    {
      png_set_expand_gray_1_2_4_to_8((uint64_t)v8);
      int v11 = HIDWORD(v14);
    }
    if (v11 == 16) {
      png_set_scale_16((uint64_t)v8);
    }
    if (v14 > 6) {
      int v12 = -1;
    }
    else {
      int v12 = dword_2246C608C[(int)v14];
    }
    *a4 = (char *)(HIDWORD(v15) * v12 * v15);
    operator new[]();
  }
  turi::decode_png(char const*,unsigned long,char **,unsigned long &)::$_0::operator()();
}

void std::string::__throw_out_of_range[abi:ne180100]()
{
}

uint64_t turi::infer_type_of_list(uint64_t *a1)
{
  int v10 = 0;
  uint64_t v11 = 0;
  uint64_t v9 = (uint64_t *)&v10;
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1 == v2) {
    goto LABEL_11;
  }
  int v3 = 7;
  do
  {
    int v4 = *(unsigned __int8 *)(v1 + 12);
    if (v4 != v3 && v4 != 7)
    {
      char v8 = *(unsigned char *)(v1 + 12);
      std::__tree<turi::flex_type_enum>::__emplace_unique_key_args<turi::flex_type_enum,turi::flex_type_enum>(&v9, &v8, &v8);
      int v3 = *(unsigned __int8 *)(v1 + 12);
    }
    v1 += 16;
  }
  while (v1 != v2);
  if (!v11) {
LABEL_11:
  }
    uint64_t common_type = 7;
  else {
    uint64_t common_type = turi::get_common_type(&v9);
  }
  std::__tree<std::__value_type<unsigned long long,double>,std::__map_value_compare<unsigned long long,std::__value_type<unsigned long long,double>,std::less<unsigned long long>,true>,std::allocator<std::__value_type<unsigned long long,double>>>::destroy((uint64_t)&v9, v10);
  return common_type;
}

uint64_t turi::get_common_type(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 1;
  }
  if (v1 != 2)
  {
    if (v1 != 1)
    {
      exception = __cxa_allocate_exception(0x18uLL);
      std::string::basic_string[abi:ne180100]<0>(exception, "Could not find a common type to convert all values.");
    }
    return *(char *)(*a1 + 25);
  }
  int v3 = (uint64_t **)a1[1];
  if (!v3) {
    return 7;
  }
  int v4 = (uint64_t **)a1[1];
  while (1)
  {
    int v5 = *((char *)v4 + 25);
    if (v5 <= 0) {
      break;
    }
LABEL_10:
    int v4 = (uint64_t **)*v4;
    if (!v4) {
      goto LABEL_17;
    }
  }
  if (v5 < 0)
  {
    ++v4;
    goto LABEL_10;
  }
  size_t v6 = (uint64_t **)a1[1];
  do
  {
    int v7 = *((char *)v6 + 25);
    if (v7 <= 1)
    {
      if (v7 == 1) {
        return 1;
      }
      ++v6;
    }
    size_t v6 = (uint64_t **)*v6;
  }
  while (v6);
LABEL_17:
  char v8 = (uint64_t **)a1[1];
  do
  {
    int v9 = *((char *)v8 + 25);
    if (v9 <= 4)
    {
      if (v9 == 4)
      {
        while (1)
        {
          int v10 = *((char *)v3 + 25);
          if (v10 <= 3)
          {
            if (v10 == 3) {
              return 4;
            }
            ++v3;
          }
          int v3 = (uint64_t **)*v3;
          if (!v3) {
            return 7;
          }
        }
      }
      ++v8;
    }
    char v8 = (uint64_t **)*v8;
  }
  while (v8);
  return 7;
}

void sub_223ED0488(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void turi::check_vector_equal_size(turi *this, const turi::gl_sarray *a2)
{
  void v12[4] = *MEMORY[0x263EF8340];
  unint64_t v3 = turi::thread::cpu_count(this);
  if (v3 <= 1) {
    unint64_t v4 = 1;
  }
  else {
    unint64_t v4 = v3;
  }
  uint64_t v11 = turi::gl_sarray::size(this);
  v12[0] = -1;
  std::vector<unsigned long>::vector(__p, v4, v12);
  int v5 = operator new(0x28uLL);
  *int v5 = &unk_26D7595A0;
  v5[1] = &v11;
  v5[2] = this;
  v5[3] = __p;
  void v5[4] = &v10;
  v12[3] = v5;
  turi::in_parallel((turi::thread_pool *)v12);
  std::__function::__value_func<void ()(unsigned long,unsigned long)>::~__value_func[abi:ne180100](v12);
  uint64_t v6 = 0;
  uint64_t v7 = -1;
  do
  {
    uint64_t v8 = *((void *)__p[0] + v6);
    if (v8 != -1)
    {
      if (v7 == -1)
      {
        uint64_t v7 = *((void *)__p[0] + v6);
      }
      else if (v8 != v7)
      {
        turi::check_vector_equal_size(turi::gl_sarray const&)::$_0::operator()();
      }
    }
    ++v6;
  }
  while (v4 != v6);
  __p[1] = __p[0];
  operator delete(__p[0]);
}

void sub_223ED05C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t turi::gl_sarray::size(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 96))(v3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223ED0680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::in_parallel(turi::thread_pool *a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  instance = (turi::thread_pool *)turi::thread_pool::get_instance(a1);
  uint64_t v3 = (turi::thread *)turi::thread_pool::size(instance);
  tls_data = (turi::thread_pool *)turi::thread::get_tls_data(v3);
  if (*((unsigned char *)tls_data + 8)) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = (unint64_t)v3 > 1;
  }
  if (v5)
  {
    uint64_t v7 = (turi::thread_pool *)turi::thread_pool::get_instance(tls_data);
    turi::parallel_task_queue::parallel_task_queue((turi::parallel_task_queue *)v11, v7);
    int v9 = 0;
    char v10 = v3;
    v8[0] = (uint64_t)boost::function0<void>::assign_to<turi::in_parallel(std::function<void ()(unsigned long,unsigned long)> const&)::{lambda(void)#1}>(turi::in_parallel(std::function<void ()(unsigned long,unsigned long)> const&)::{lambda(void)#1})::stored_vtable
          + 1;
    v8[1] = (uint64_t)a1;
    turi::parallel_task_queue::launch((uint64_t)v11, v8);
  }
  return std::function<void ()(unsigned long,unsigned long)>::operator()((uint64_t)a1, 0, 1);
}

void sub_223ED07D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  turi::parallel_task_queue::~parallel_task_queue((turi::parallel_task_queue *)va);
  _Unwind_Resume(a1);
}

void turi::check_vector_equal_size(turi::gl_sarray const&)::$_0::operator()()
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"Vectors must be of the same size. Row ", 38);
  std::ios_base::failure v0 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)" contains a vector of size ", 27);
  uint64_t v1 = (void *)std::ostream::operator<<();
  uint64_t v2 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)". Expected a vector of", 22);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" size ", 6);
  uint64_t v3 = (void *)std::ostream::operator<<();
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)".", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  turi::check_vector_equal_size(turi::gl_sarray const&)::$_0::operator() const(unsigned long,unsigned long,unsigned long)::{lambda(void)#1}::operator()();
}

void sub_223ED08B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  a10 = *MEMORY[0x263F8C2B8];
  uint64_t v30 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(uint64_t *)((char *)&a10 + *(void *)(a10 - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  a12 = v30;
  a13 = MEMORY[0x263F8C318] + 16;
  if (a26 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x22A614E30](&a29);
  _Unwind_Resume(a1);
}

turi::gl_sarray *turi::gl_sarray::gl_sarray(turi::gl_sarray *this)
{
  *(void *)this = &unk_26D759548;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  turi::gl_sarray::instantiate_new(this);
  return this;
}

void sub_223ED0A24(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 32);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  unint64_t v4 = *(std::__shared_weak_count **)(v1 + 16);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::instantiate_new(turi::gl_sarray *this)
{
  _ZNSt3__115allocate_sharedB8ne180100IN4turi12unity_sarrayENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(&v4);
  long long v2 = v4;
  long long v4 = 0uLL;
  uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 2);
  *(_OWORD *)((char *)this + 8) = v2;
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    if (*((void *)&v4 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v4 + 1));
    }
  }
}

turi::gl_sarray *turi::gl_sarray::gl_sarray(turi::gl_sarray *this, const turi::gl_sarray *a2)
{
  *(void *)this = &unk_26D759548;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  (*(void (**)(long long *__return_ptr, const turi::gl_sarray *))(*(void *)a2 + 16))(&v6, a2);
  long long v3 = v6;
  long long v6 = 0uLL;
  long long v4 = (std::__shared_weak_count *)*((void *)this + 2);
  *(_OWORD *)((char *)this + 8) = v3;
  if (v4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    if (*((void *)&v6 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  return this;
}

void sub_223ED0B48(_Unwind_Exception *exception_object)
{
  long long v3 = *(std::__shared_weak_count **)(v1 + 32);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  long long v4 = *(std::__shared_weak_count **)(v1 + 16);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sarray::gl_sarray(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26D759548;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 16))(&v6, a2);
  long long v3 = v6;
  long long v6 = 0uLL;
  long long v4 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = v3;
  if (v4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    if (*((void *)&v6 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  return a1;
}

{
  uint64_t *v4;
  uint64_t v5;
  std::string __p;

  *(void *)a1 = &unk_26D759548;
  *(_OWORD *)(a1 + 8) = 0u;
  long long v4 = (uint64_t *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  turi::gl_sarray::instantiate_new((turi::gl_sarray *)a1);
  BOOL v5 = *v4;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  (*(void (**)(uint64_t, std::string *))(*(void *)v5 + 48))(v5, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

{
  void *v3;
  uint64_t v5;
  std::__shared_weak_count *v6;

  *(void *)a1 = &unk_26D759548;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  long long v3 = *(void **)a2;
  if (*(void *)a2
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    long long v6 = *(std::__shared_weak_count **)(a1 + 16);
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v5;
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
  }
  else
  {
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_223ED0C14(_Unwind_Exception *exception_object)
{
  long long v3 = *(std::__shared_weak_count **)(v1 + 32);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  long long v4 = *(std::__shared_weak_count **)(v1 + 16);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_223ED0D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  BOOL v16 = *(std::__shared_weak_count **)(v14 + 32);
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  uint64_t v17 = *(std::__shared_weak_count **)(v14 + 16);
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sarray::operator=(uint64_t a1, uint64_t a2)
{
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 16))(&v6, a2);
  long long v3 = v6;
  long long v6 = 0uLL;
  long long v4 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = v3;
  if (v4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    if (*((void *)&v6 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  return a1;
}

uint64_t turi::gl_sarray::get_proxy@<X0>(uint64_t this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(this + 16);
  *a2 = *(void *)(this + 8);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

turi::gl_sarray *turi::gl_sarray::gl_sarray(turi::gl_sarray *this, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(void *)this = &unk_26D759548;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (a3 == 7) {
    uint64_t v3 = turi::infer_type_of_list(a2);
  }
  turi::gl_sarray::instantiate_new(this);
  (*(void (**)(uint64_t *__return_ptr, turi::gl_sarray *))(*(void *)this + 16))(&v7, this);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v7 + 32))(v7, a2, v3);
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  return this;
}

void sub_223ED0ECC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  uint64_t v12 = *(std::__shared_weak_count **)(v10 + 32);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  int v13 = *(std::__shared_weak_count **)(v10 + 16);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::construct_from_vector(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a3 == 7) {
    uint64_t v3 = turi::infer_type_of_list(a2);
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 16))(&v6, a1);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v6 + 32))(v6, a2, v3);
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_223ED0FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::from_const(turi::gl_sarray *this@<X0>, const turi::flexible_type *a2@<X1>, turi::gl_sarray *a3@<X8>)
{
  turi::gl_sarray::gl_sarray(a3);
  uint64_t v6 = *((void *)a3 + 1);
  uint64_t v7 = (std::__shared_weak_count *)*((void *)a3 + 2);
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  (*(void (**)(uint64_t, turi::gl_sarray *, const turi::flexible_type *, uint64_t))(*(void *)v6 + 40))(v6, this, a2, 7);
  if (v7)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_223ED107C(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  turi::gl_sarray::~gl_sarray(v1);
  _Unwind_Resume(a1);
}

void turi::gl_sarray::read_json(uint64_t a1@<X0>, turi::gl_sarray *a2@<X8>)
{
  turi::gl_sarray::gl_sarray(a2);
  uint64_t v5 = *((void *)a2 + 1);
  long long v4 = (std::__shared_weak_count *)*((void *)a2 + 2);
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  (*(void (**)(uint64_t, std::string *))(*(void *)v5 + 72))(v5, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED1160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  turi::gl_sarray::~gl_sarray(v15);
  _Unwind_Resume(a1);
}

void turi::gl_sarray::from_sequence(turi::gl_sarray *this@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  BOOL v5 = a2 >= (unint64_t)this;
  uint64_t v6 = a2 - (void)this;
  if (!v5)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "End must be greater than start");
  }
  turi::unity_sarray::create_sequential_sarray(v6, this, a3, &v9);
  turi::gl_sarray::gl_sarray(a4, (uint64_t)&v9);
  if (*((void *)&v9 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v9 + 1));
  }
}

void sub_223ED1228(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t turi::gl_sarray::gl_sarray(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26D759548;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (v3)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
    BOOL v5 = *(std::__shared_weak_count **)(a1 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v3;
    if (v5) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v5);
    }
  }
  else
  {
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = 0;
  }
  return a1;
}

void turi::gl_sarray::gl_sarray(void *a1)
{
  *a1 = &unk_26D759548;
  operator new();
}

void sub_223ED143C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  uint64_t v12 = *(std::__shared_weak_count **)(v10 + 32);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  int v13 = *(std::__shared_weak_count **)(v10 + 16);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::~gl_sarray(turi::gl_sarray *this)
{
  *(void *)this = &unk_26D759548;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 4);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 2);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

{
  uint64_t vars8;

  turi::gl_sarray::~gl_sarray(this);
  JUMPOUT(0x22A614FA0);
}

double turi::gl_sarray::operator std::shared_ptr<turi::unity_sarray_base>@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  (*(void (**)(long long *__return_ptr))(*(void *)a1 + 16))(&v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

void turi::operator-(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v25[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a2 + 16))(&v20, a2);
  uint64_t v5 = v20;
  memset(v25, 0, 13);
  if (v25 != (atomic_ullong **)a1)
  {
    *(atomic_ullong **)((char *)v25 + 5) = *(atomic_ullong **)(a1 + 5);
    v25[0] = *(atomic_ullong **)a1;
    BYTE4(v25[1]) = *(unsigned char *)(a1 + 12);
    if (BYTE4(v25[1]) <= 9u && ((1 << SBYTE4(v25[1])) & 0x33C) != 0) {
      atomic_fetch_add(v25[0], 1uLL);
    }
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "-");
  (*(void (**)(uint64_t *__return_ptr, uint64_t, atomic_ullong **, void **))(*(void *)v5 + 304))(&v22, v5, v25, __p);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v22);
  if (v23) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v23);
  }
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  switch(BYTE4(v25[1]))
  {
    case 2:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v6 = v25[0];
        if (v25[0])
        {
          if (*((char *)v25[0] + 31) < 0) {
            operator delete(*((void **)v25[0] + 1));
          }
          uint64_t v7 = v6;
          uint64_t v8 = 0x1012C404EF22A49;
          goto LABEL_40;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v15 = v25[0];
        if (v25[0])
        {
          BOOL v16 = (void *)v25[0][1];
          if (v16)
          {
            v25[0][2] = (atomic_ullong)v16;
            operator delete(v16);
          }
          uint64_t v7 = v15;
          uint64_t v8 = 0x1080C409938AC02;
          goto LABEL_40;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        long long v9 = v25[0];
        if (v25[0])
        {
          double v24 = (void **)(v25[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v24);
          goto LABEL_35;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        long long v9 = v25[0];
        if (v25[0])
        {
          double v24 = (void **)(v25[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v24);
LABEL_35:
          uint64_t v7 = v9;
          uint64_t v8 = 0x1020C405E66F15BLL;
          goto LABEL_40;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v17 = v25[0];
        if (v25[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v25[0] + 2);
          uint64_t v7 = v17;
          unsigned int v14 = -235920773;
          goto LABEL_39;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v10 = v25[0];
        if (v25[0])
        {
          uint64_t v11 = (void *)v25[0][6];
          if (v11)
          {
            v25[0][7] = (atomic_ullong)v11;
            operator delete(v11);
          }
          uint64_t v12 = (void *)v10[3];
          if (v12)
          {
            void v10[4] = (atomic_ullong)v12;
            operator delete(v12);
          }
          int v13 = (std::__shared_weak_count *)v10[2];
          if (v13) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v13);
          }
          uint64_t v7 = v10;
          unsigned int v14 = 2071181815;
LABEL_39:
          uint64_t v8 = v14 | 0x1030C4000000000;
LABEL_40:
          MEMORY[0x22A614FA0](v7, v8);
        }
      }
      break;
    default:
      break;
  }
  memset(v25, 0, 13);
  if (v21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  }
}

void sub_223ED18AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, uint64_t a19, void *a20)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  switch(*(unsigned char *)(v20 - 44))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v22 = *(void *)(v20 - 56);
      if (!v22) {
        goto LABEL_29;
      }
      if (*(char *)(v22 + 31) < 0) {
        operator delete(*(void **)(v22 + 8));
      }
      uint64_t v23 = (void *)v22;
      uint64_t v24 = 0x1012C404EF22A49;
      goto LABEL_28;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      unint64_t v28 = *(void **)(v20 - 56);
      if (!v28) {
        goto LABEL_29;
      }
      double v29 = (void *)v28[1];
      if (v29)
      {
        v28[2] = v29;
        operator delete(v29);
      }
      uint64_t v23 = v28;
      uint64_t v24 = 0x1080C409938AC02;
      goto LABEL_28;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      double v25 = *(void **)(v20 - 56);
      if (!v25) {
        goto LABEL_29;
      }
      a20 = v25 + 1;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a20);
      goto LABEL_23;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      double v25 = *(void **)(v20 - 56);
      if (!v25) {
        goto LABEL_29;
      }
      a20 = v25 + 1;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a20);
LABEL_23:
      uint64_t v23 = v25;
      uint64_t v24 = 0x1020C405E66F15BLL;
      goto LABEL_28;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v30 = *(void *)(v20 - 56);
      if (!v30) {
        goto LABEL_29;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(v30 + 16));
      uint64_t v23 = (void *)v30;
      unsigned int v27 = -235920773;
      goto LABEL_27;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      unint64_t v26 = *(void **)(v20 - 56);
      if (!v26) {
        goto LABEL_29;
      }
      uint64_t v23 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v26);
      unsigned int v27 = 2071181815;
LABEL_27:
      uint64_t v24 = v27 | 0x1030C4000000000;
LABEL_28:
      MEMORY[0x22A614FA0](v23, v24);
LABEL_29:
      *(void *)(v20 - 56) = 0;
      *(_DWORD *)(v20 - 48) = 0;
      *(unsigned char *)(v20 - 44) = 0;
      if (a17) {
        std::__shared_weak_count::__release_shared[abi:ne180100](a17);
      }
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_29;
  }
}

void turi::gl_sarray::operator==(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v10);
  uint64_t v5 = v10;
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 16))(&v8, a2);
  long long v9 = v8;
  long long v8 = 0uLL;
  std::string::basic_string[abi:ne180100]<0>(__p, "==");
  (*(void (**)(uint64_t *__return_ptr, uint64_t, long long *, void **))(*(void *)v5 + 312))(&v12, v5, &v9, __p);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v12);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  if (*((void *)&v9 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v9 + 1));
  }
  if (*((void *)&v8 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v8 + 1));
  }
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
}

{
  uint64_t v5;
  atomic_ullong *v6;
  atomic_ullong *v7;
  uint64_t v8;
  atomic_ullong *v9;
  atomic_ullong *v10;
  void *v11;
  void *v12;
  std::__shared_weak_count *v13;
  unsigned int v14;
  atomic_ullong *v15;
  void *v16;
  atomic_ullong *v17;
  void *__p[2];
  char v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  void **v24;
  atomic_ullong *v25[3];

  v25[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v20);
  uint64_t v5 = v20;
  memset(v25, 0, 13);
  if (v25 != (atomic_ullong **)a2)
  {
    *(atomic_ullong **)((char *)v25 + 5) = *(atomic_ullong **)(a2 + 5);
    v25[0] = *(atomic_ullong **)a2;
    BYTE4(v25[1]) = *(unsigned char *)(a2 + 12);
    if (BYTE4(v25[1]) <= 9u && ((1 << SBYTE4(v25[1])) & 0x33C) != 0) {
      atomic_fetch_add(v25[0], 1uLL);
    }
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "==");
  (*(void (**)(uint64_t *__return_ptr, uint64_t, atomic_ullong **, void **))(*(void *)v5 + 296))(&v22, v5, v25, __p);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v22);
  if (v23) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v23);
  }
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  switch(BYTE4(v25[1]))
  {
    case 2:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v6 = v25[0];
        if (v25[0])
        {
          if (*((char *)v25[0] + 31) < 0) {
            operator delete(*((void **)v25[0] + 1));
          }
          char v7 = v6;
          long long v8 = 0x1012C404EF22A49;
          goto LABEL_40;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v15 = v25[0];
        if (v25[0])
        {
          BOOL v16 = (void *)v25[0][1];
          if (v16)
          {
            v25[0][2] = (atomic_ullong)v16;
            operator delete(v16);
          }
          char v7 = v15;
          long long v8 = 0x1080C409938AC02;
          goto LABEL_40;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        long long v9 = v25[0];
        if (v25[0])
        {
          uint64_t v24 = (void **)(v25[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v24);
          goto LABEL_35;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        long long v9 = v25[0];
        if (v25[0])
        {
          uint64_t v24 = (void **)(v25[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v24);
LABEL_35:
          char v7 = v9;
          long long v8 = 0x1020C405E66F15BLL;
          goto LABEL_40;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v17 = v25[0];
        if (v25[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v25[0] + 2);
          char v7 = v17;
          unsigned int v14 = -235920773;
          goto LABEL_39;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v25[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v10 = v25[0];
        if (v25[0])
        {
          uint64_t v11 = (void *)v25[0][6];
          if (v11)
          {
            v25[0][7] = (atomic_ullong)v11;
            operator delete(v11);
          }
          uint64_t v12 = (void *)v10[3];
          if (v12)
          {
            void v10[4] = (atomic_ullong)v12;
            operator delete(v12);
          }
          int v13 = (std::__shared_weak_count *)v10[2];
          if (v13) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v13);
          }
          char v7 = v10;
          unsigned int v14 = 2071181815;
LABEL_39:
          long long v8 = v14 | 0x1030C4000000000;
LABEL_40:
          MEMORY[0x22A614FA0](v7, v8);
        }
      }
      break;
    default:
      break;
  }
  memset(v25, 0, 13);
  if (v21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  }
}

void sub_223ED1BF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, std::__shared_weak_count *a19, uint64_t a20,std::__shared_weak_count *a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a19);
  }
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (a21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a21);
  }
  _Unwind_Resume(exception_object);
}

void sub_223ED1F74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, uint64_t a19, void *a20)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  switch(*(unsigned char *)(v20 - 44))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v22 = *(void *)(v20 - 56);
      if (!v22) {
        goto LABEL_29;
      }
      if (*(char *)(v22 + 31) < 0) {
        operator delete(*(void **)(v22 + 8));
      }
      uint64_t v23 = (void *)v22;
      uint64_t v24 = 0x1012C404EF22A49;
      goto LABEL_28;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      unint64_t v28 = *(void **)(v20 - 56);
      if (!v28) {
        goto LABEL_29;
      }
      double v29 = (void *)v28[1];
      if (v29)
      {
        v28[2] = v29;
        operator delete(v29);
      }
      uint64_t v23 = v28;
      uint64_t v24 = 0x1080C409938AC02;
      goto LABEL_28;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      double v25 = *(void **)(v20 - 56);
      if (!v25) {
        goto LABEL_29;
      }
      a20 = v25 + 1;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a20);
      goto LABEL_23;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      double v25 = *(void **)(v20 - 56);
      if (!v25) {
        goto LABEL_29;
      }
      a20 = v25 + 1;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a20);
LABEL_23:
      uint64_t v23 = v25;
      uint64_t v24 = 0x1020C405E66F15BLL;
      goto LABEL_28;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v30 = *(void *)(v20 - 56);
      if (!v30) {
        goto LABEL_29;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(v30 + 16));
      uint64_t v23 = (void *)v30;
      unsigned int v27 = -235920773;
      goto LABEL_27;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v20 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      unint64_t v26 = *(void **)(v20 - 56);
      if (!v26) {
        goto LABEL_29;
      }
      uint64_t v23 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v26);
      unsigned int v27 = 2071181815;
LABEL_27:
      uint64_t v24 = v27 | 0x1030C4000000000;
LABEL_28:
      MEMORY[0x22A614FA0](v23, v24);
LABEL_29:
      *(void *)(v20 - 56) = 0;
      *(_DWORD *)(v20 - 48) = 0;
      *(unsigned char *)(v20 - 44) = 0;
      if (a17) {
        std::__shared_weak_count::__release_shared[abi:ne180100](a17);
      }
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_29;
  }
}

void turi::gl_sarray::operator[](void **a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count **__return_ptr))(*a1)[2])(&v12);
  unint64_t v6 = ((uint64_t (*)(std::__shared_weak_count *))v12->__vftable[2].__on_zero_shared)(v12);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  if (v6 <= a2)
  {
LABEL_14:
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Index out of range");
  }
  turi::gl_sarray::ensure_has_sarray_reader((uint64_t)a1);
  std::vector<turi::flexible_type>::vector(&v12, 1uLL);
  char v7 = (void **)(*(uint64_t (**)(void *, unint64_t, unint64_t, std::__shared_weak_count **))(*a1[3] + 48))(a1[3], a2, a2 + 1, &v12);
  long long v8 = v12;
  if (v13 == v12) {
    turi::gl_sarray::operator[](long long)const::$_0::operator()();
  }
  unsigned int v14 = (std::__shared_weak_count **)v7;
  if (v7 != (void **)1) {
    turi::gl_sarray::operator[](long long)const::$_1::operator()();
  }
  *(void *)a3 = 0;
  *(_DWORD *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 12) = 0;
  if (v8 != (std::__shared_weak_count *)a3)
  {
    long long v9 = v8->__vftable;
    *(void *)(a3 + 5) = *(std::__shared_weak_count_vtbl **)((char *)&v8->__vftable + 5);
    *(void *)a3 = v9;
    unsigned int v10 = BYTE4(v8->__shared_owners_);
    *(unsigned char *)(a3 + 12) = v10;
    if (v10 <= 9 && ((1 << v10) & 0x33C) != 0) {
      atomic_fetch_add(*(atomic_ullong *volatile *)a3, 1uLL);
    }
  }
  unsigned int v14 = &v12;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v14);
}

void sub_223ED2348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, void **a14)
{
  a14 = (void **)&a11;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a14);
  _Unwind_Resume(a1);
}

uint64_t turi::gl_sarray::ensure_has_sarray_reader(uint64_t this)
{
  uint64_t v1 = (void *)(this + 24);
  if (!*(void *)(this + 24))
  {
    uint64_t v2 = this;
    pthread_mutex_lock(&turi::reader_shared_ptr_lock);
    if (!*v1)
    {
      (*(void (**)(turi::unity_sarray **__return_ptr, uint64_t))(*(void *)v2 + 16))(&v3, v2);
      turi::unity_sarray::get_underlying_sarray(v3, &v4);
      turi::sarray<turi::flexible_type>::get_reader(v4);
    }
    return pthread_mutex_unlock(&turi::reader_shared_ptr_lock);
  }
  return this;
}

void sub_223ED247C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, std::__shared_weak_count *a13)
{
  uint64_t v15 = *(void *)(v13 - 24);
  *(void *)(v13 - 24) = 0;
  if (v15) {
    turi::gl_sarray::ensure_has_sarray_reader(v15);
  }
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  pthread_mutex_unlock(&turi::reader_shared_ptr_lock);
  _Unwind_Resume(a1);
}

void turi::gl_sarray::operator[](long long)const::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sarray.cpp", 96);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  long long v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"rows.size() > 0", 15);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sarray.cpp", "operator()", 296, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::gl_sarray::operator[](long long)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223ED25D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::gl_sarray::operator[](long long)const::$_1::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sarray.cpp", 96);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  long long v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"rows_read", 9);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  unint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"1", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  char v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  long long v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  unsigned int v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sarray.cpp", "operator()", 297, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::gl_sarray::operator[](long long)::$_1::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223ED2868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::gl_sarray::operator[](uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v8);
  uint64_t v5 = v8;
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 16))(&v6, a2);
  long long v7 = v6;
  long long v6 = 0uLL;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, long long *))(*(void *)v5 + 168))(&v10, v5, &v7);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v10);
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  if (*((void *)&v7 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v7 + 1));
  }
  if (*((void *)&v6 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v6 + 1));
  }
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
}

void sub_223ED2A70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::operator[](turi::gl_sarray *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = *(const void **)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  std::string __dst = 0;
  uint64_t v20 = 0;
  std::string __p = 0;
  if (v5)
  {
    std::vector<unsigned long>::__vallocate[abi:ne180100](&__p, v5);
    long long v7 = (char *)__dst;
    memmove(__dst, v6, 8 * v5);
    uint64_t v8 = &v7[8 * v5];
    std::string __dst = v8;
    long long v9 = (char *)__p;
  }
  else
  {
    long long v9 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v10 = (v8 - v9) >> 3;
  if (v10 == 2)
  {
    uint64_t v11 = 1;
  }
  else
  {
    if (v10 != 3)
    {
      exception = __cxa_allocate_exception(0x18uLL);
      std::string::basic_string[abi:ne180100]<0>(exception, "Invalid slice. Slice must be of the form {start, end} or {start, step, end}");
    }
    uint64_t v11 = 2;
  }
  uint64_t v12 = *(void *)&v9[8 * v11];
  if ((*(void *)v9 & 0x8000000000000000) != 0)
  {
    turi::gl_sarray::size(a1);
    if ((v12 & 0x8000000000000000) == 0) {
      goto LABEL_13;
    }
  }
  else if ((v12 & 0x8000000000000000) == 0)
  {
    goto LABEL_13;
  }
  turi::gl_sarray::size(a1);
LABEL_13:
  (*(void (**)(uint64_t *__return_ptr, turi::gl_sarray *))(*(void *)a1 + 16))(&v14, a1);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v14 + 528))(&v16);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v16);
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (__p)
  {
    std::string __dst = __p;
    operator delete(__p);
  }
}

void sub_223ED2C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  __cxa_free_exception(v15);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void turi::query_eval::materialize_options::~materialize_options(void **this)
{
  uint64_t v2 = this + 9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  std::__function::__value_func<BOOL ()(unsigned long,std::shared_ptr<turi::sframe_rows> const&)>::~__value_func[abi:ne180100](this + 1);
}

void turi::gl_sarray::range_iterator(turi::gl_sarray *this@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, void **a4@<X8>)
{
  unint64_t v4 = a3;
  if (a3 == -1)
  {
    (*(void (**)(uint64_t *__return_ptr, turi::gl_sarray *))(*(void *)this + 16))(&v15, this);
    unint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 96))(v15);
    if (v16) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v16);
    }
  }
  if (v4 < a2)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "start must be less than end");
    goto LABEL_19;
  }
  (*(void (**)(uint64_t *__return_ptr, turi::gl_sarray *))(*(void *)this + 16))(&v15, this);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v15 + 96))(v15) <= a2)
  {
    BOOL v8 = (v4 | a2) != 0;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, turi::gl_sarray *))(*(void *)this + 16))(&v13, this);
    BOOL v8 = v4 > (*(uint64_t (**)(uint64_t))(*(void *)v13 + 96))(v13);
    if (v14) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v14);
    }
  }
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  if (v8)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Index out of range");
LABEL_19:
  }
  turi::gl_sarray::ensure_has_sarray_reader((uint64_t)this);
  long long v9 = (std::__shared_weak_count *)*((void *)this + 4);
  uint64_t v11 = *((void *)this + 3);
  uint64_t v12 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  turi::gl_sarray_range::gl_sarray_range(a4, &v11, a2, v4);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
}

void sub_223ED2F30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::save(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v42, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string v42 = *(std::string *)a3;
  }
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v42.__r_.__value_.__l.__size_) {
      goto LABEL_26;
    }
  }
  else
  {
    int v5 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
    if (*((unsigned char *)&v42.__r_.__value_.__s + 23)) {
      goto LABEL_27;
    }
  }
  uint64_t v6 = 0;
  int v7 = *(char *)(a2 + 23);
  BOOL v8 = v7 < 0;
  long long v9 = *(const std::string::value_type **)a2;
  if (v7 >= 0) {
    long long v9 = (const std::string::value_type *)a2;
  }
  uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  if (v8) {
    uint64_t v10 = *(void *)(a2 + 8);
  }
  while (-v10 != v6 && v6 != -4)
  {
    int v11 = v9[v10 - 1 + v6];
    int v12 = aCsv[v6-- + 3];
    if (v11 != v12) {
      goto LABEL_17;
    }
  }
  if (v6 == -4) {
    goto LABEL_24;
  }
LABEL_17:
  uint64_t v13 = 0;
  uint64_t v14 = (uint64_t)&v9[v10 - 1];
  uint64_t v15 = -v10;
  uint64_t v16 = "binary";
  while (v15 != v13 && v13 != -7)
  {
    int v17 = *(unsigned __int8 *)(v14 + v13);
    int v18 = aCsvGz[v13-- + 6];
    if (v17 != v18) {
      goto LABEL_25;
    }
  }
  if (v13 != -7)
  {
    uint64_t v16 = "binary";
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v16 = "csv";
LABEL_25:
  MEMORY[0x22A614700](&v42, v16);
LABEL_26:
  int v5 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = v42.__r_.__value_.__l.__size_;
    if (v42.__r_.__value_.__l.__size_ != 6)
    {
LABEL_37:
      if (size == 4)
      {
        if (*(_DWORD *)v42.__r_.__value_.__l.__data_ == 1954047348) {
          goto LABEL_52;
        }
        std::string::size_type size = v42.__r_.__value_.__l.__size_;
      }
      if (size != 3) {
        goto LABEL_45;
      }
      double v25 = (std::string *)v42.__r_.__value_.__r.__words[0];
      goto LABEL_47;
    }
    int v19 = 1;
    uint64_t v20 = (std::string *)v42.__r_.__value_.__r.__words[0];
    goto LABEL_31;
  }
LABEL_27:
  if (v5 != 6) {
    goto LABEL_42;
  }
  int v19 = 0;
  uint64_t v20 = &v42;
LABEL_31:
  int data = (int)v20->__r_.__value_.__l.__data_;
  int v23 = WORD2(v20->__r_.__value_.__r.__words[0]);
  if (data == 1634625890 && v23 == 31090)
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(&v34, a1);
    unint64_t v31 = v34;
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v41, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string v41 = *(std::string *)a2;
    }
    (*(void (**)(void *, std::string *))(*(void *)v31 + 80))(v31, &v41);
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v41.__r_.__value_.__l.__data_);
    }
    uint64_t v30 = v35;
    if (v35) {
      goto LABEL_59;
    }
    goto LABEL_60;
  }
  if (v19)
  {
    std::string::size_type size = v42.__r_.__value_.__l.__size_;
    goto LABEL_37;
  }
LABEL_42:
  if (v5 != 3)
  {
    if (v5 != 4 || LODWORD(v42.__r_.__value_.__l.__data_) != 1954047348) {
      goto LABEL_45;
    }
    goto LABEL_52;
  }
  double v25 = &v42;
LABEL_47:
  int data_low = LOWORD(v25->__r_.__value_.__l.__data_);
  int v28 = v25->__r_.__value_.__s.__data_[2];
  if (data_low != 29539 || v28 != 118)
  {
LABEL_45:
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Invalid format. Supported formats are 'csv', 'text', and 'binary'");
  }
LABEL_52:
  turi::gl_sframe::gl_sframe((turi::gl_sframe *)v39);
  std::string::basic_string[abi:ne180100]<0>(v32, "X1");
  turi::gl_sframe::operator[]((uint64_t)v39, (uint64_t)v32, (turi::gl_sarray *)&v34);
  turi::gl_sarray_reference::operator=((uint64_t)&v34, a1);
  double v34 = &unk_26D759E80;
  if (v38 < 0) {
    operator delete(__p);
  }
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v34);
  if (v33 < 0) {
    operator delete(v32[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(&v34, "csv");
  turi::gl_sframe::save((uint64_t)v39, a2, (uint64_t)&v34);
  if (v36 < 0) {
    operator delete(v34);
  }
  v39[0] = &unk_26D759E10;
  uint64_t v30 = v40;
  if (v40) {
LABEL_59:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v30);
LABEL_60:
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
}

void sub_223ED336C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, std::__shared_weak_count *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (*(char *)(v30 - 41) < 0) {
    operator delete(*(void **)(v30 - 64));
  }
  _Unwind_Resume(exception_object);
}

BOOL turi::gl_sarray::empty(turi::gl_sarray *this)
{
  return turi::gl_sarray::size(this) == 0;
}

uint64_t turi::gl_sarray::dtype(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 112))(v3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223ED34E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::materialize(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v1);
  (*(void (**)(void))(*(void *)v1 + 392))();
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223ED3590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sarray::is_materialized(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 400))();
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223ED3644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::head(turi::gl_sarray *this@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 120))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED3704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::tail(turi::gl_sarray *this@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 360))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED37D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::count_words(uint64_t a1, unsigned int a2)
{
  v7[5] = *MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v3);
  std::string::basic_string[abi:ne180100]<0>(v4, "to_lower");
  char v6 = 0;
  int v5 = 0;
  v4[3] = a2;
  std::pair<std::string const,turi::flexible_type>::pair[abi:ne180100]<char const(&)[11],std::vector<turi::flexible_type> &,0>(v7, "delimiters");
}

void sub_223ED3958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, char a18)
{
  std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)&a11, a12);
  for (uint64_t i = 40; i != -40; i -= 40)
    std::pair<std::string const,turi::flexible_type>::~pair((uint64_t)(&a18 + i));
  if (a15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a15);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sarray::count_ngrams(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unsigned int a4@<W3>, unsigned int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  if ((*((char *)a3 + 23) & 0x80000000) == 0)
  {
    int v10 = *((unsigned __int8 *)a3 + 23);
    if (v10 != 4)
    {
      if (v10 != 9) {
        goto LABEL_27;
      }
      goto LABEL_9;
    }
    if (*(_DWORD *)a3 != 1685221239) {
      goto LABEL_27;
    }
LABEL_20:
    (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v23);
    uint64_t v15 = v23;
    std::string::basic_string[abi:ne180100]<0>(&v27, "to_lower");
    char v30 = 0;
    int v29 = 0;
    uint64_t v28 = a4;
    std::string::basic_string[abi:ne180100]<0>(v31, "ignore_space");
    char v34 = 0;
    int v33 = 0;
    uint64_t v32 = a5;
    std::map<std::string,turi::flexible_type>::map[abi:ne180100]((uint64_t)v21, &v27, 2);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, unsigned char *))(*(void *)v15 + 432))(&v25, v15, a2, v21);
    turi::gl_sarray::gl_sarray(a6, (uint64_t)&v25);
    if (v26) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v26);
    }
    std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)v21, v22);
    for (uint64_t i = 40; i != -40; i -= 40)
      std::pair<std::string const,turi::flexible_type>::~pair((uint64_t)&v27 + i);
    goto LABEL_24;
  }
  uint64_t v11 = a3[1];
  if (v11 == 4 && *(_DWORD *)*a3 == 1685221239) {
    goto LABEL_20;
  }
  if (v11 != 9) {
    goto LABEL_27;
  }
  a3 = (uint64_t *)*a3;
LABEL_9:
  if (*a3 != 0x6574636172616863 || *((unsigned char *)a3 + 8) != 114)
  {
LABEL_27:
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Invalid 'method' input  value. Please input either 'word' or 'character' ");
  }
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v23);
  uint64_t v13 = v23;
  std::string::basic_string[abi:ne180100]<0>(&v27, "to_lower");
  char v30 = 0;
  int v29 = 0;
  uint64_t v28 = a4;
  std::string::basic_string[abi:ne180100]<0>(v31, "ignore_space");
  char v34 = 0;
  int v33 = 0;
  uint64_t v32 = a5;
  std::map<std::string,turi::flexible_type>::map[abi:ne180100]((uint64_t)v18, &v27, 2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, void **))(*(void *)v13 + 424))(&v19, v13, a2, v18);
  turi::gl_sarray::gl_sarray(a6, (uint64_t)&v19);
  if (v20) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  }
  std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)v18, v18[1]);
  for (uint64_t j = 40; j != -40; j -= 40)
    std::pair<std::string const,turi::flexible_type>::~pair((uint64_t)&v27 + j);
LABEL_24:
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
}

void sub_223ED3D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, std::__shared_weak_count *a19, uint64_t a20,uint64_t a21,char a22)
{
  std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)&a15, a16);
  for (uint64_t i = 40; i != -40; i -= 40)
    std::pair<std::string const,turi::flexible_type>::~pair((uint64_t)(&a22 + i));
  if (a19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a19);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sarray::dict_trim_by_keys(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 440))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED3E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::dict_trim_by_values(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 448))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED3F74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::dict_keys(turi::gl_sarray *this@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 456))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED4040(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::dict_has_any_keys(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 472))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED4114(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::dict_has_all_keys(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 480))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED41E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::apply(uint64_t a1, uint64_t a2, int a3, char a4)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v10);
  uint64_t v7 = v10;
  BOOL v8 = (turi::random *)std::__function::__value_func<turi::flexible_type ()(turi::flexible_type const&)>::__value_func[abi:ne180100]((uint64_t)v11, a2);
  uint64_t v9 = turi::random::pure_random_seed(v8);
  turi::unity_sarray::transform_lambda(v7, (uint64_t)v11, a3, a4, v9);
}

void sub_223ED42F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::sample(turi::gl_sarray *this@<X0>, double a2@<D0>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v6);
  v5.n128_f32[0] = a2;
  (*(void (**)(uint64_t *__return_ptr, __n128))(*(void *)v6 + 344))(&v8, v5);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v8);
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_223ED4400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sarray::all(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 184))(v3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223ED44A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sarray::any(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 192))(v3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223ED4540(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::max(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 200))(v1);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223ED45E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::min(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 208))(v1);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223ED4680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::sum(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 216))(v1);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223ED4720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::mean(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 224))(v1);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223ED47C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::std(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v1);
  (*(void (**)(uint64_t, void))(*(void *)v1 + 232))(v1, 0);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223ED4864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sarray::nnz(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 256))();
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223ED4918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sarray::num_missing(turi::gl_sarray *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 248))(v3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223ED49B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::datetime_to_str(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v7);
  uint64_t v5 = v7;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, std::string *))(*(void *)v5 + 280))(&v9, v5, &__p);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v9);
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
}

void sub_223ED4AC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::str_to_datetime(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v7);
  uint64_t v5 = v7;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, std::string *))(*(void *)v5 + 288))(&v9, v5, &__p);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v9);
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
}

void sub_223ED4BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::astype(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 264))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED4CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::clip(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  v175[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  switch(byte_268081524)
  {
    case 0:
      switch(a2[12])
      {
        case 0u:
          if (*(void *)a2 != turi::FLEX_UNDEFINED) {
            goto LABEL_120;
          }
          goto LABEL_92;
        case 1u:
          double v33 = *(double *)a2;
          uint64_t v61 = turi::FLEX_UNDEFINED;
          goto LABEL_86;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_120;
        case 6u:
          if (turi::FLEX_UNDEFINED == (uint64_t)(*(void *)a2 << 8) >> 8 && !*((_DWORD *)a2 + 2)) {
            goto LABEL_92;
          }
          goto LABEL_120;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 1:
      switch(a2[12])
      {
        case 0u:
          double v33 = *(double *)&turi::FLEX_UNDEFINED;
          uint64_t v61 = *(void *)a2;
LABEL_86:
          double v40 = (double)v61;
          goto LABEL_87;
        case 1u:
          double v33 = *(double *)a2;
          double v40 = *(double *)&turi::FLEX_UNDEFINED;
          goto LABEL_87;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_120;
        case 6u:
          double v64 = vabdd_f64((double)*((int *)a2 + 2) / 1000000.0 + (double)((uint64_t)(*(void *)a2 << 8) >> 8), *(double *)&turi::FLEX_UNDEFINED);
          goto LABEL_91;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 2:
      unsigned int v50 = a2[12];
      if (v50 - 3 < 7 || v50 < 2) {
        goto LABEL_120;
      }
      if (v50 != 2) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      double v52 = *(double *)a2;
      char v53 = *(unsigned char *)(*(void *)a2 + 31);
      size_t v54 = v53 < 0 ? *(void *)(*(void *)&v52 + 16) : *(unsigned __int8 *)(*(void *)a2 + 31);
      uint64_t v162 = *(char *)(turi::FLEX_UNDEFINED + 31) < 0
           ? *(void *)(turi::FLEX_UNDEFINED + 16)
           : *(unsigned __int8 *)(turi::FLEX_UNDEFINED + 31);
      if (v54 != v162) {
        goto LABEL_120;
      }
      v163 = (unsigned __int8 *)(*(void *)&v52 + 8);
      if ((*(unsigned char *)(*(void *)a2 + 31) & 0x80) != 0) {
        v163 = *(unsigned __int8 **)v163;
      }
      v164 = (unsigned __int8 *)(turi::FLEX_UNDEFINED + 8);
      if ((*(unsigned char *)(turi::FLEX_UNDEFINED + 31) & 0x80) != 0) {
        v164 = *(unsigned __int8 **)v164;
      }
      if (v53 < 0)
      {
        if (memcmp(v163, v164, v54)) {
          goto LABEL_120;
        }
      }
      else
      {
        if (!v54) {
          goto LABEL_92;
        }
        do
        {
          if (*v163 != *v164) {
            goto LABEL_120;
          }
          ++v163;
          ++v164;
          --v54;
        }
        while (v54);
      }
      goto LABEL_92;
    case 3:
      unsigned int v55 = a2[12];
      if (v55 > 9) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      if (v55 != 3) {
        goto LABEL_120;
      }
      double v56 = *(double **)(*(void *)a2 + 8);
      unint64_t v57 = *(double **)(*(void *)a2 + 16);
      unint64_t v58 = v57 - v56;
      unsigned int v59 = *(double **)(turi::FLEX_UNDEFINED + 8);
      if (v58 != (uint64_t)(*(void *)(turi::FLEX_UNDEFINED + 16) - (void)v59) >> 3) {
        goto LABEL_120;
      }
      if (v57 == v56) {
        goto LABEL_92;
      }
      if (v58 <= 1) {
        unint64_t v58 = 1;
      }
      while (*v56 == *v59)
      {
        ++v59;
        ++v56;
        if (!--v58) {
          goto LABEL_92;
        }
      }
      goto LABEL_120;
    case 4:
      unsigned int v8 = a2[12];
      if (v8 > 9) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      if (v8 != 4) {
        goto LABEL_120;
      }
      char v9 = turi::flexible_type_impl::approx_equality_operator::operator()((uint64_t)&v170, (uint64_t *)(*(void *)a2 + 8), (void *)(turi::FLEX_UNDEFINED + 8));
      goto LABEL_66;
    case 5:
      unsigned int v62 = a2[12];
      if (v62 > 9) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      if (v62 != 5) {
        goto LABEL_120;
      }
      char v9 = turi::flexible_type_impl::approx_equality_operator::operator()((uint64_t)&v170, (uint64_t **)(*(void *)a2 + 8), (uint64_t **)(turi::FLEX_UNDEFINED + 8));
LABEL_66:
      if ((v9 & 1) == 0) {
        goto LABEL_120;
      }
      goto LABEL_92;
    case 6:
      switch(a2[12])
      {
        case 0u:
          if (*(void *)a2 == turi::FLEX_UNDEFINED << 8 >> 8 && !dword_268081520) {
            goto LABEL_92;
          }
          goto LABEL_120;
        case 1u:
          double v64 = vabdd_f64(*(double *)a2, (double)dword_268081520 / 1000000.0 + (double)(turi::FLEX_UNDEFINED << 8 >> 8));
LABEL_91:
          if (v64 < 0.0000005) {
            goto LABEL_92;
          }
          goto LABEL_120;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_120;
        case 6u:
          if (((turi::FLEX_UNDEFINED ^ *(void *)a2) & 0xFFFFFFFFFFFFFFLL) != 0
            || *((_DWORD *)a2 + 2) != dword_268081520)
          {
            goto LABEL_120;
          }
          goto LABEL_92;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 7:
      unsigned int v60 = a2[12];
      if (v60 < 7 || v60 - 8 < 2) {
        goto LABEL_120;
      }
      if (v60 != 7) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      goto LABEL_92;
    case 8:
      unsigned int v63 = a2[12];
      if (v63 < 8) {
        goto LABEL_120;
      }
      if (v63 == 8)
      {
        if (turi::image_type::operator==(*(void *)a2 + 8, turi::FLEX_UNDEFINED + 8)) {
          goto LABEL_92;
        }
      }
      else if (v63 != 9)
      {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      goto LABEL_120;
    case 9:
      unsigned int v10 = a2[12];
      if (v10 < 9) {
        goto LABEL_120;
      }
      if (v10 != 9) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      uint64_t v11 = turi::FLEX_UNDEFINED;
      uint64_t v12 = *(void **)a2;
      if (turi::FLEX_UNDEFINED == *(void *)a2) {
        goto LABEL_92;
      }
      if (!turi::flexible_type_impl::ndarray<double>::same_shape((uint64_t)(v12 + 1), turi::FLEX_UNDEFINED + 8)) {
        goto LABEL_120;
      }
      uint64_t v14 = (char *)v12[3];
      uint64_t v13 = (char *)v12[4];
      uint64_t v15 = v13 - v14;
      if (v13 == v14) {
        goto LABEL_92;
      }
      if (!v12[1]) {
        goto LABEL_92;
      }
      uint64_t v16 = 1;
      do
      {
        uint64_t v17 = *(void *)v14;
        v14 += 8;
        v16 *= v17;
      }
      while (v14 != v13);
      if (!v16) {
        goto LABEL_92;
      }
      v173 = 0;
      std::vector<unsigned long>::vector(&v171, v15 >> 3, &v173);
      int v18 = v171;
      uint64_t v19 = v172;
      uint64_t v20 = **(void **)(v11 + 8);
      int64_t v21 = (char *)v172 - (char *)v171;
      unint64_t v22 = ((char *)v172 - (char *)v171) >> 3;
      unint64_t v23 = v22 - 1;
      if (v22 <= 1) {
        int64_t v24 = 1;
      }
      else {
        int64_t v24 = ((char *)v172 - (char *)v171) >> 3;
      }
      break;
    default:
      turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
  }
  do
  {
    if (v19 == v18)
    {
      uint64_t v32 = 0;
      double v33 = *(double *)(*(void *)v12[1] + 8 * v12[9]);
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v26 = (uint64_t *)v12[6];
      std::string v27 = (uint64_t *)v18;
      int64_t v28 = v24;
      do
      {
        uint64_t v30 = *v27++;
        uint64_t v29 = v30;
        uint64_t v31 = *v26++;
        v25 += v31 * v29;
        --v28;
      }
      while (v28);
      uint64_t v32 = 0;
      double v33 = *(double *)(*(void *)v12[1] + 8 * (v12[9] + v25));
      char v34 = *(uint64_t **)(v11 + 48);
      uint64_t v35 = (uint64_t *)v18;
      int64_t v36 = v24;
      do
      {
        uint64_t v38 = *v35++;
        uint64_t v37 = v38;
        uint64_t v39 = *v34++;
        v32 += v39 * v37;
        --v36;
      }
      while (v36);
    }
    double v40 = *(double *)(v20 + 8 * (*(void *)(v11 + 72) + v32));
    if (v33 != v40) {
      break;
    }
    uint64_t v41 = v22;
    uint64_t v42 = v22 - 1;
    if (v21 >= 1)
    {
      uint64_t v43 = v12[3];
      unint64_t v44 = *((void *)&v18->__vftable + v23) + 1;
      *((void *)&v18->__vftable + v23) = v44;
      unint64_t v45 = (v21 & 0xFFFFFFFFFFFFFFF8) - 16;
      uint64_t v42 = v22 - 1;
      if (v44 >= *(void *)(v43 + 8 * v23))
      {
        while (1)
        {
          *(uint64_t *)((char *)&v18->__shared_owners_ + v45) = 0;
          if (v42 <= 0) {
            break;
          }
          --v42;
          unint64_t v46 = (unint64_t)&(*(std::__shared_weak_count_vtbl **)((char *)&v18->__vftable + v45))->~__shared_weak_count
              + 1;
          *(std::__shared_weak_count_vtbl **)((char *)&v18->__vftable + v45) = (std::__shared_weak_count_vtbl *)v46;
          unint64_t v47 = *(void *)(v43 + v45);
          v45 -= 8;
          if (v46 < v47)
          {
            uint64_t v41 = 1;
            goto LABEL_35;
          }
        }
        v172 = v18;
        operator delete(v18);
        goto LABEL_92;
      }
      uint64_t v41 = 1;
      uint64_t v42 = v22 - 1;
    }
LABEL_35:
    ;
  }
  while ((v42 & 0x8000000000000000) == 0 && v41);
  if (v18)
  {
    v172 = v18;
    double v48 = v33;
    double v49 = v40;
    operator delete(v18);
    if (v48 != v49) {
      goto LABEL_120;
    }
  }
  else
  {
LABEL_87:
    if (v33 != v40) {
      goto LABEL_120;
    }
  }
LABEL_92:
  switch(a2[12])
  {
    case 2u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a2, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v65 = *(double *)a2;
        if (!*(void *)a2) {
          goto LABEL_118;
        }
        if (*(char *)(*(void *)&v65 + 31) < 0) {
          operator delete(*(void **)(*(void *)&v65 + 8));
        }
        double v66 = v65;
        uint64_t v67 = 0x1012C404EF22A49;
        goto LABEL_117;
      }
      break;
    case 3u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a2, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v70 = *(double *)a2;
        if (!*(void *)a2) {
          goto LABEL_118;
        }
        long long v71 = *(void **)(*(void *)&v70 + 8);
        if (v71)
        {
          *(void *)(*(void *)&v70 + 16) = v71;
          operator delete(v71);
        }
        double v66 = v70;
        uint64_t v67 = 0x1080C409938AC02;
        goto LABEL_117;
      }
      break;
    case 4u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a2, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v68 = *(double *)a2;
        if (!*(void *)a2) {
          goto LABEL_118;
        }
        v171 = (std::__shared_weak_count *)(*(void *)&v68 + 8);
        std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v171);
        goto LABEL_112;
      }
      break;
    case 5u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a2, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v68 = *(double *)a2;
        if (!*(void *)a2) {
          goto LABEL_118;
        }
        v171 = (std::__shared_weak_count *)(*(void *)&v68 + 8);
        std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v171);
LABEL_112:
        double v66 = v68;
        uint64_t v67 = 0x1020C405E66F15BLL;
        goto LABEL_117;
      }
      break;
    case 8u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a2, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v72 = *(double *)a2;
        if (!*(void *)a2) {
          goto LABEL_118;
        }
        boost::detail::shared_count::~shared_count((atomic_uint **)(*(void *)&v72 + 16));
        double v66 = v72;
        unsigned int v69 = -235920773;
        goto LABEL_116;
      }
      break;
    case 9u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a2, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        if (*(void *)a2)
        {
          double v66 = COERCE_DOUBLE(std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*(void **)a2));
          unsigned int v69 = 2071181815;
LABEL_116:
          uint64_t v67 = v69 | 0x1030C4000000000;
LABEL_117:
          MEMORY[0x22A614FA0](*(void *)&v66, v67);
        }
LABEL_118:
        *(void *)a2 = 0;
      }
      break;
    default:
      break;
  }
  *((_DWORD *)a2 + 2) = 0;
  a2[12] = 1;
  *(void *)a2 = 0x7FF8000000000000;
LABEL_120:
  switch(byte_268081524)
  {
    case 0:
      switch(a3[12])
      {
        case 0u:
          if (*(void *)a3 != turi::FLEX_UNDEFINED) {
            goto LABEL_239;
          }
          goto LABEL_211;
        case 1u:
          double v98 = *(double *)a3;
          uint64_t v125 = turi::FLEX_UNDEFINED;
          goto LABEL_205;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_239;
        case 6u:
          if (turi::FLEX_UNDEFINED == (uint64_t)(*(void *)a3 << 8) >> 8 && !*((_DWORD *)a3 + 2)) {
            goto LABEL_211;
          }
          goto LABEL_239;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 1:
      switch(a3[12])
      {
        case 0u:
          double v98 = *(double *)&turi::FLEX_UNDEFINED;
          uint64_t v125 = *(void *)a3;
LABEL_205:
          double v105 = (double)v125;
          goto LABEL_206;
        case 1u:
          double v98 = *(double *)a3;
          double v105 = *(double *)&turi::FLEX_UNDEFINED;
          goto LABEL_206;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_239;
        case 6u:
          double v128 = vabdd_f64((double)*((int *)a3 + 2) / 1000000.0 + (double)((uint64_t)(*(void *)a3 << 8) >> 8), *(double *)&turi::FLEX_UNDEFINED);
          goto LABEL_210;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 2:
      unsigned int v115 = a3[12];
      if (v115 - 3 < 7 || v115 < 2) {
        goto LABEL_239;
      }
      if (v115 != 2) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      double v117 = *(double *)a3;
      size_t v118 = *(char *)(*(void *)a3 + 31) < 0
           ? *(void *)(*(void *)&v117 + 16)
           : *(unsigned __int8 *)(*(void *)a3 + 31);
      uint64_t v165 = *(char *)(turi::FLEX_UNDEFINED + 31) < 0
           ? *(void *)(turi::FLEX_UNDEFINED + 16)
           : *(unsigned __int8 *)(turi::FLEX_UNDEFINED + 31);
      if (v118 != v165) {
        goto LABEL_239;
      }
      v166 = (unsigned __int8 *)(*(void *)&v117 + 8);
      if ((*(unsigned char *)(*(void *)a3 + 31) & 0x80) != 0) {
        v166 = *(unsigned __int8 **)v166;
      }
      v167 = (unsigned __int8 *)(turi::FLEX_UNDEFINED + 8);
      if ((*(unsigned char *)(turi::FLEX_UNDEFINED + 31) & 0x80) != 0) {
        v167 = *(unsigned __int8 **)v167;
      }
      if ((*(unsigned char *)(*(void *)a3 + 31) & 0x80) != 0)
      {
        if (memcmp(v166, v167, v118)) {
          goto LABEL_239;
        }
      }
      else
      {
        if (!v118) {
          goto LABEL_211;
        }
        do
        {
          if (*v166 != *v167) {
            goto LABEL_239;
          }
          ++v166;
          ++v167;
          --v118;
        }
        while (v118);
      }
      goto LABEL_211;
    case 3:
      unsigned int v119 = a3[12];
      if (v119 > 9) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      if (v119 != 3) {
        goto LABEL_239;
      }
      v120 = *(double **)(*(void *)a3 + 8);
      v121 = *(double **)(*(void *)a3 + 16);
      unint64_t v122 = v121 - v120;
      v123 = *(double **)(turi::FLEX_UNDEFINED + 8);
      if (v122 != (uint64_t)(*(void *)(turi::FLEX_UNDEFINED + 16) - (void)v123) >> 3) {
        goto LABEL_239;
      }
      if (v121 == v120) {
        goto LABEL_211;
      }
      if (v122 <= 1) {
        unint64_t v122 = 1;
      }
      while (*v120 == *v123)
      {
        ++v123;
        ++v120;
        if (!--v122) {
          goto LABEL_211;
        }
      }
      goto LABEL_239;
    case 4:
      unsigned int v73 = a3[12];
      if (v73 > 9) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      if (v73 != 4) {
        goto LABEL_239;
      }
      char v74 = turi::flexible_type_impl::approx_equality_operator::operator()((uint64_t)&v170, (uint64_t *)(*(void *)a3 + 8), (void *)(turi::FLEX_UNDEFINED + 8));
      goto LABEL_185;
    case 5:
      unsigned int v126 = a3[12];
      if (v126 > 9) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      if (v126 != 5) {
        goto LABEL_239;
      }
      char v74 = turi::flexible_type_impl::approx_equality_operator::operator()((uint64_t)&v170, (uint64_t **)(*(void *)a3 + 8), (uint64_t **)(turi::FLEX_UNDEFINED + 8));
LABEL_185:
      if ((v74 & 1) == 0) {
        goto LABEL_239;
      }
      goto LABEL_211;
    case 6:
      switch(a3[12])
      {
        case 0u:
          if (*(void *)a3 == turi::FLEX_UNDEFINED << 8 >> 8 && !dword_268081520) {
            goto LABEL_211;
          }
          goto LABEL_239;
        case 1u:
          double v128 = vabdd_f64(*(double *)a3, (double)dword_268081520 / 1000000.0 + (double)(turi::FLEX_UNDEFINED << 8 >> 8));
LABEL_210:
          if (v128 < 0.0000005) {
            goto LABEL_211;
          }
          goto LABEL_239;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_239;
        case 6u:
          if (((turi::FLEX_UNDEFINED ^ *(void *)a3) & 0xFFFFFFFFFFFFFFLL) != 0
            || *((_DWORD *)a3 + 2) != dword_268081520)
          {
            goto LABEL_239;
          }
          goto LABEL_211;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 7:
      unsigned int v124 = a3[12];
      if (v124 < 7 || v124 - 8 < 2) {
        goto LABEL_239;
      }
      if (v124 != 7) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      goto LABEL_211;
    case 8:
      unsigned int v127 = a3[12];
      if (v127 < 8) {
        goto LABEL_239;
      }
      if (v127 == 8)
      {
        if (turi::image_type::operator==(*(void *)a3 + 8, turi::FLEX_UNDEFINED + 8)) {
          goto LABEL_211;
        }
      }
      else if (v127 != 9)
      {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      goto LABEL_239;
    case 9:
      unsigned int v75 = a3[12];
      if (v75 < 9) {
        goto LABEL_239;
      }
      if (v75 != 9) {
        turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      uint64_t v76 = turi::FLEX_UNDEFINED;
      long long v77 = *(void **)a3;
      if (turi::FLEX_UNDEFINED == *(void *)a3) {
        goto LABEL_211;
      }
      if (!turi::flexible_type_impl::ndarray<double>::same_shape((uint64_t)(v77 + 1), turi::FLEX_UNDEFINED + 8)) {
        goto LABEL_239;
      }
      long long v79 = (char *)v77[3];
      long long v78 = (char *)v77[4];
      uint64_t v80 = v78 - v79;
      if (v78 == v79) {
        goto LABEL_211;
      }
      if (!v77[1]) {
        goto LABEL_211;
      }
      uint64_t v81 = 1;
      do
      {
        uint64_t v82 = *(void *)v79;
        v79 += 8;
        v81 *= v82;
      }
      while (v79 != v78);
      if (!v81) {
        goto LABEL_211;
      }
      v173 = 0;
      std::vector<unsigned long>::vector(&v171, v80 >> 3, &v173);
      long long v83 = v171;
      long long v84 = v172;
      uint64_t v85 = **(void **)(v76 + 8);
      int64_t v86 = (char *)v172 - (char *)v171;
      unint64_t v87 = ((char *)v172 - (char *)v171) >> 3;
      unint64_t v88 = v87 - 1;
      if (v87 <= 1) {
        int64_t v89 = 1;
      }
      else {
        int64_t v89 = ((char *)v172 - (char *)v171) >> 3;
      }
      break;
    default:
      turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
  }
  do
  {
    if (v84 == v83)
    {
      uint64_t v97 = 0;
      double v98 = *(double *)(*(void *)v77[1] + 8 * v77[9]);
    }
    else
    {
      uint64_t v90 = 0;
      v91 = (uint64_t *)v77[6];
      v92 = (uint64_t *)v83;
      int64_t v93 = v89;
      do
      {
        uint64_t v95 = *v92++;
        uint64_t v94 = v95;
        uint64_t v96 = *v91++;
        v90 += v96 * v94;
        --v93;
      }
      while (v93);
      uint64_t v97 = 0;
      double v98 = *(double *)(*(void *)v77[1] + 8 * (v77[9] + v90));
      v99 = *(uint64_t **)(v76 + 48);
      v100 = (uint64_t *)v83;
      int64_t v101 = v89;
      do
      {
        uint64_t v103 = *v100++;
        uint64_t v102 = v103;
        uint64_t v104 = *v99++;
        v97 += v104 * v102;
        --v101;
      }
      while (v101);
    }
    double v105 = *(double *)(v85 + 8 * (*(void *)(v76 + 72) + v97));
    if (v98 != v105) {
      break;
    }
    uint64_t v106 = v87;
    uint64_t v107 = v87 - 1;
    if (v86 >= 1)
    {
      uint64_t v108 = v77[3];
      unint64_t v109 = *((void *)&v83->__vftable + v88) + 1;
      *((void *)&v83->__vftable + v88) = v109;
      unint64_t v110 = (v86 & 0xFFFFFFFFFFFFFFF8) - 16;
      uint64_t v107 = v87 - 1;
      if (v109 >= *(void *)(v108 + 8 * v88))
      {
        while (1)
        {
          *(uint64_t *)((char *)&v83->__shared_owners_ + v11std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
          if (v107 <= 0) {
            break;
          }
          --v107;
          unint64_t v111 = (unint64_t)&(*(std::__shared_weak_count_vtbl **)((char *)&v83->__vftable + v110))->~__shared_weak_count
               + 1;
          *(std::__shared_weak_count_vtbl **)((char *)&v83->__vftable + v11std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = (std::__shared_weak_count_vtbl *)v111;
          unint64_t v112 = *(void *)(v108 + v110);
          v110 -= 8;
          if (v111 < v112)
          {
            uint64_t v106 = 1;
            goto LABEL_154;
          }
        }
        v172 = v83;
        operator delete(v83);
        goto LABEL_211;
      }
      uint64_t v106 = 1;
      uint64_t v107 = v87 - 1;
    }
LABEL_154:
    ;
  }
  while ((v107 & 0x8000000000000000) == 0 && v106);
  if (v83)
  {
    v172 = v83;
    double v113 = v98;
    double v114 = v105;
    operator delete(v83);
    if (v113 != v114) {
      goto LABEL_239;
    }
  }
  else
  {
LABEL_206:
    if (v98 != v105) {
      goto LABEL_239;
    }
  }
LABEL_211:
  switch(a3[12])
  {
    case 2u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a3, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v129 = *(double *)a3;
        if (!*(void *)a3) {
          goto LABEL_237;
        }
        if (*(char *)(*(void *)&v129 + 31) < 0) {
          operator delete(*(void **)(*(void *)&v129 + 8));
        }
        double v130 = v129;
        uint64_t v131 = 0x1012C404EF22A49;
        goto LABEL_236;
      }
      break;
    case 3u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a3, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v134 = *(double *)a3;
        if (!*(void *)a3) {
          goto LABEL_237;
        }
        v135 = *(void **)(*(void *)&v134 + 8);
        if (v135)
        {
          *(void *)(*(void *)&v134 + 16) = v135;
          operator delete(v135);
        }
        double v130 = v134;
        uint64_t v131 = 0x1080C409938AC02;
        goto LABEL_236;
      }
      break;
    case 4u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a3, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v132 = *(double *)a3;
        if (!*(void *)a3) {
          goto LABEL_237;
        }
        v171 = (std::__shared_weak_count *)(*(void *)&v132 + 8);
        std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v171);
        goto LABEL_231;
      }
      break;
    case 5u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a3, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v132 = *(double *)a3;
        if (!*(void *)a3) {
          goto LABEL_237;
        }
        v171 = (std::__shared_weak_count *)(*(void *)&v132 + 8);
        std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v171);
LABEL_231:
        double v130 = v132;
        uint64_t v131 = 0x1020C405E66F15BLL;
        goto LABEL_236;
      }
      break;
    case 8u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a3, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        double v136 = *(double *)a3;
        if (!*(void *)a3) {
          goto LABEL_237;
        }
        boost::detail::shared_count::~shared_count((atomic_uint **)(*(void *)&v136 + 16));
        double v130 = v136;
        unsigned int v133 = -235920773;
        goto LABEL_235;
      }
      break;
    case 9u:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)a3, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        if (*(void *)a3)
        {
          double v130 = COERCE_DOUBLE(std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*(void **)a3));
          unsigned int v133 = 2071181815;
LABEL_235:
          uint64_t v131 = v133 | 0x1030C4000000000;
LABEL_236:
          MEMORY[0x22A614FA0](*(void *)&v130, v131);
        }
LABEL_237:
        *(void *)a3 = 0;
      }
      break;
    default:
      break;
  }
  *((_DWORD *)a3 + 2) = 0;
  a3[12] = 1;
  *(void *)a3 = 0x7FF8000000000000;
LABEL_239:
  (*(void (**)(std::__shared_weak_count **__return_ptr, uint64_t))(*(void *)a1 + 16))(&v171, a1);
  v137 = (void **)&v171->__vftable;
  memset(v175, 0, 13);
  if (v175 != (atomic_ullong **)a2)
  {
    *(atomic_ullong **)((char *)v175 + 5) = *(atomic_ullong **)(a2 + 5);
    v175[0] = *(atomic_ullong **)a2;
    BYTE4(v175[1]) = a2[12];
    if (BYTE4(v175[1]) <= 9u && ((1 << SBYTE4(v175[1])) & 0x33C) != 0) {
      atomic_fetch_add(v175[0], 1uLL);
    }
  }
  memset(v174, 0, 13);
  if (v174 != (atomic_ullong **)a3)
  {
    *(atomic_ullong **)((char *)v174 + 5) = *(atomic_ullong **)(a3 + 5);
    v174[0] = *(atomic_ullong **)a3;
    BYTE4(v174[1]) = a3[12];
    if (BYTE4(v174[1]) <= 9u && ((1 << SBYTE4(v174[1])) & 0x33C) != 0) {
      atomic_fetch_add(v174[0], 1uLL);
    }
  }
  (*((void (**)(uint64_t *__return_ptr))*v137 + 42))(&v168);
  turi::gl_sarray::gl_sarray(a4, (uint64_t)&v168);
  if (v169) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v169);
  }
  switch(BYTE4(v174[1]))
  {
    case 2:
      if (atomic_fetch_add(v174[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v138 = v174[0];
        if (v174[0])
        {
          if (*((char *)v174[0] + 31) < 0) {
            operator delete(*((void **)v174[0] + 1));
          }
          v139 = v138;
          uint64_t v140 = 0x1012C404EF22A49;
          goto LABEL_280;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v174[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v147 = v174[0];
        if (v174[0])
        {
          v148 = (void *)v174[0][1];
          if (v148)
          {
            v174[0][2] = (atomic_ullong)v148;
            operator delete(v148);
          }
          v139 = v147;
          uint64_t v140 = 0x1080C409938AC02;
          goto LABEL_280;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v174[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v141 = v174[0];
        if (v174[0])
        {
          v173 = (void **)(v174[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v173);
          goto LABEL_275;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v174[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v141 = v174[0];
        if (v174[0])
        {
          v173 = (void **)(v174[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v173);
LABEL_275:
          v139 = v141;
          uint64_t v140 = 0x1020C405E66F15BLL;
          goto LABEL_280;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v174[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v149 = v174[0];
        if (v174[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v174[0] + 2);
          v139 = v149;
          unsigned int v146 = -235920773;
          goto LABEL_279;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v174[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v142 = v174[0];
        if (v174[0])
        {
          v143 = (void *)v174[0][6];
          if (v143)
          {
            v174[0][7] = (atomic_ullong)v143;
            operator delete(v143);
          }
          v144 = (void *)v142[3];
          if (v144)
          {
            v142[4] = (atomic_ullong)v144;
            operator delete(v144);
          }
          v145 = (std::__shared_weak_count *)v142[2];
          if (v145) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v145);
          }
          v139 = v142;
          unsigned int v146 = 2071181815;
LABEL_279:
          uint64_t v140 = v146 | 0x1030C4000000000;
LABEL_280:
          MEMORY[0x22A614FA0](v139, v140);
        }
      }
      break;
    default:
      break;
  }
  memset(v174, 0, 13);
  switch(BYTE4(v175[1]))
  {
    case 2:
      if (atomic_fetch_add(v175[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v150 = v175[0];
        if (v175[0])
        {
          if (*((char *)v175[0] + 31) < 0) {
            operator delete(*((void **)v175[0] + 1));
          }
          v151 = v150;
          uint64_t v152 = 0x1012C404EF22A49;
          goto LABEL_312;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v175[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v159 = v175[0];
        if (v175[0])
        {
          v160 = (void *)v175[0][1];
          if (v160)
          {
            v175[0][2] = (atomic_ullong)v160;
            operator delete(v160);
          }
          v151 = v159;
          uint64_t v152 = 0x1080C409938AC02;
          goto LABEL_312;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v175[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v153 = v175[0];
        if (v175[0])
        {
          v173 = (void **)(v175[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v173);
          goto LABEL_307;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v175[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v153 = v175[0];
        if (v175[0])
        {
          v173 = (void **)(v175[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v173);
LABEL_307:
          v151 = v153;
          uint64_t v152 = 0x1020C405E66F15BLL;
          goto LABEL_312;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v175[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v161 = v175[0];
        if (v175[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v175[0] + 2);
          v151 = v161;
          unsigned int v158 = -235920773;
          goto LABEL_311;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v175[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        v154 = v175[0];
        if (v175[0])
        {
          v155 = (void *)v175[0][6];
          if (v155)
          {
            v175[0][7] = (atomic_ullong)v155;
            operator delete(v155);
          }
          v156 = (void *)v154[3];
          if (v156)
          {
            v154[4] = (atomic_ullong)v156;
            operator delete(v156);
          }
          v157 = (std::__shared_weak_count *)v154[2];
          if (v157) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v157);
          }
          v151 = v154;
          unsigned int v158 = 2071181815;
LABEL_311:
          uint64_t v152 = v158 | 0x1030C4000000000;
LABEL_312:
          MEMORY[0x22A614FA0](v151, v152);
        }
      }
      break;
    default:
      break;
  }
  memset(v175, 0, 13);
  if (v172) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v172);
  }
}

void sub_223ED61D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, int a20,char a21)
{
  switch(a18)
  {
    case 2:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a16);
      break;
    case 3:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a16);
      break;
    case 4:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a16);
      break;
    case 5:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a16);
      break;
    case 8:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a16);
      break;
    case 9:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a16);
      break;
    default:
      break;
  }
  a16 = 0;
  a17 = 0;
  a18 = 0;
  switch(a21)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a19, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v22 = a19;
      if (!a19) {
        goto LABEL_34;
      }
      if (*(char *)(a19 + 31) < 0) {
        operator delete(*(void **)(a19 + 8));
      }
      unint64_t v23 = (void *)v22;
      uint64_t v24 = 0x1012C404EF22A49;
      goto LABEL_33;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a19, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v27 = a19;
      if (!a19) {
        goto LABEL_34;
      }
      int64_t v28 = *(void **)(a19 + 8);
      if (v28)
      {
        *(void *)(a19 + 16) = v28;
        operator delete(v28);
      }
      unint64_t v23 = (void *)v27;
      uint64_t v24 = 0x1080C409938AC02;
      goto LABEL_33;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a19, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v25 = a19;
      if (!a19) {
        goto LABEL_34;
      }
      a15 = a19 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
      goto LABEL_28;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a19, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v25 = a19;
      if (!a19) {
        goto LABEL_34;
      }
      a15 = a19 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
LABEL_28:
      unint64_t v23 = (void *)v25;
      uint64_t v24 = 0x1020C405E66F15BLL;
      goto LABEL_33;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a19, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v29 = a19;
      if (!a19) {
        goto LABEL_34;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a19 + 16));
      unint64_t v23 = (void *)v29;
      unsigned int v26 = -235920773;
      goto LABEL_32;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a19, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a19) {
        goto LABEL_34;
      }
      unint64_t v23 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a19);
      unsigned int v26 = 2071181815;
LABEL_32:
      uint64_t v24 = v26 | 0x1030C4000000000;
LABEL_33:
      MEMORY[0x22A614FA0](v23, v24);
LABEL_34:
      a19 = 0;
      a20 = 0;
      a21 = 0;
      if (a13) {
        std::__shared_weak_count::__release_shared[abi:ne180100](a13);
      }
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_34;
  }
}

void turi::gl_sarray::dropna(turi::gl_sarray *this@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 320))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED66C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::fillna(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v23[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v18);
  uint64_t v5 = v18;
  memset(v23, 0, 13);
  if (v23 != (atomic_ullong **)a2)
  {
    *(atomic_ullong **)((char *)v23 + 5) = *(atomic_ullong **)(a2 + 5);
    v23[0] = *(atomic_ullong **)a2;
    BYTE4(v23[1]) = *(unsigned char *)(a2 + 12);
    if (BYTE4(v23[1]) <= 9u && ((1 << SBYTE4(v23[1])) & 0x33C) != 0) {
      atomic_fetch_add(v23[0], 1uLL);
    }
  }
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v5 + 328))(&v20);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v20);
  if (v21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  }
  switch(BYTE4(v23[1]))
  {
    case 2:
      if (atomic_fetch_add(v23[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v6 = v23[0];
        if (v23[0])
        {
          if (*((char *)v23[0] + 31) < 0) {
            operator delete(*((void **)v23[0] + 1));
          }
          uint64_t v7 = v6;
          uint64_t v8 = 0x1012C404EF22A49;
          goto LABEL_38;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v23[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        char v9 = v23[0];
        if (v23[0])
        {
          unsigned int v10 = (void *)v23[0][1];
          if (v10)
          {
            v23[0][2] = (atomic_ullong)v10;
            operator delete(v10);
          }
          uint64_t v7 = v9;
          uint64_t v8 = 0x1080C409938AC02;
          goto LABEL_38;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v23[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v11 = v23[0];
        if (v23[0])
        {
          uint64_t v22 = (void **)(v23[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v22);
          goto LABEL_24;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v23[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v11 = v23[0];
        if (v23[0])
        {
          uint64_t v22 = (void **)(v23[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v22);
LABEL_24:
          uint64_t v7 = v11;
          uint64_t v8 = 0x1020C405E66F15BLL;
          goto LABEL_38;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v23[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v17 = v23[0];
        if (v23[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v23[0] + 2);
          uint64_t v7 = v17;
          unsigned int v16 = -235920773;
          goto LABEL_37;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v23[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v12 = v23[0];
        if (v23[0])
        {
          uint64_t v13 = (void *)v23[0][6];
          if (v13)
          {
            v23[0][7] = (atomic_ullong)v13;
            operator delete(v13);
          }
          uint64_t v14 = (void *)v12[3];
          if (v14)
          {
            void v12[4] = (atomic_ullong)v14;
            operator delete(v14);
          }
          uint64_t v15 = (std::__shared_weak_count *)v12[2];
          if (v15) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v15);
          }
          uint64_t v7 = v12;
          unsigned int v16 = 2071181815;
LABEL_37:
          uint64_t v8 = v16 | 0x1030C4000000000;
LABEL_38:
          MEMORY[0x22A614FA0](v7, v8);
        }
      }
      break;
    default:
      break;
  }
  memset(v23, 0, 13);
  if (v19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v19);
  }
}

void sub_223ED69E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16)
{
  switch(a16)
  {
    case 2:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a14);
      break;
    case 3:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a14);
      break;
    case 4:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a14);
      break;
    case 5:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a14);
      break;
    case 8:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a14);
      break;
    case 9:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a14);
      break;
    default:
      break;
  }
  a14 = 0;
  a15 = 0;
  a16 = 0;
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::topk_index(turi::gl_sarray *this@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 176))(&v5);
  turi::gl_sarray::gl_sarray(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223ED6B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::append(turi::gl_sarray *this@<X0>, const turi::gl_sarray *a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 16))(&v8);
  uint64_t v5 = v8;
  (*(void (**)(long long *__return_ptr, const turi::gl_sarray *))(*(void *)a2 + 16))(&v6, a2);
  long long v7 = v6;
  long long v6 = 0uLL;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, long long *))(*(void *)v5 + 408))(&v10, v5, &v7);
  turi::gl_sarray::gl_sarray(a3, (uint64_t)&v10);
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  if (*((void *)&v7 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v7 + 1));
  }
  if (*((void *)&v6 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v6 + 1));
  }
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
}

void sub_223ED6C9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::unique(turi::gl_sarray *this)
{
  v10[5] = *MEMORY[0x263EF8340];
  std::pair<std::string,turi::gl_sarray>::pair[abi:ne180100]<char const(&)[2],turi::gl_sarray const&,0>(__p, "a", this);
  turi::gl_sframe::gl_sframe(v6, __p, 1);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(&v7, "a");
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  p_int data = 0;
  uint64_t v3 = (std::string *)operator new(0x18uLL);
  unint64_t v4 = v3;
  p_int data = (const void **)&v3[1].__r_.__value_.__l.__data_;
  unint64_t v4 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&p_data, &v7, (long long *)__p, v3);
  v2[0] = 0;
  v2[1] = 0;
  uint64_t v1 = v2;
  turi::gl_sframe::groupby((uint64_t)v6, (const void ***)&v3, &v1);
}

void sub_223ED6EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::pair<std::string,turi::gl_sarray>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void turi::gl_sarray::split_datetime(uint64_t a1@<X0>, long long **a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  memset(&v32, 0, sizeof(v32));
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)&v32, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  if (a3)
  {
    long long v7 = (std::string *)std::__find_impl[abi:ne180100]<std::string *,std::string *,char [9],std::__identity>((unsigned __int8 *)v32.__begin_, (unsigned __int8 *)v32.__end_, "timezone");
    if (v7 == v32.__end_)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "timezone");
      std::vector<std::string>::pointer end = v32.__end_;
      if (v32.__end_ >= v32.__end_cap_.__value_)
      {
        unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v32.__end_ - (char *)v32.__begin_) >> 3);
        unint64_t v11 = v10 + 1;
        if (v10 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<float>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556 * (((char *)v32.__end_cap_.__value_ - (char *)v32.__begin_) >> 3) > v11) {
          unint64_t v11 = 0x5555555555555556 * (((char *)v32.__end_cap_.__value_ - (char *)v32.__begin_) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * (((char *)v32.__end_cap_.__value_ - (char *)v32.__begin_) >> 3) >= 0x555555555555555) {
          unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v12 = v11;
        }
        __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v32.__end_cap_;
        if (v12) {
          uint64_t v13 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)&v32.__end_cap_, v12);
        }
        else {
          uint64_t v13 = 0;
        }
        uint64_t v14 = v13 + v10;
        __v.__first_ = v13;
        __v.__begin_ = v14;
        __v.__end_cap_.__value_ = &v13[v12];
        long long v15 = *(_OWORD *)__p;
        v14->__r_.__value_.__r.__words[2] = v31;
        *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v15;
        __p[1] = 0;
        std::string::size_type v31 = 0;
        __p[0] = 0;
        __v.__end_ = v14 + 1;
        std::vector<std::string>::__swap_out_circular_buffer(&v32, &__v);
        unsigned int v16 = v32.__end_;
        std::__split_buffer<std::string>::~__split_buffer(&__v);
        v32.__end_ = v16;
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        long long v9 = *(_OWORD *)__p;
        v32.__end_->__r_.__value_.__r.__words[2] = v31;
        *(_OWORD *)&end->__r_.__value_.__l.__data_ = v9;
        v32.__end_ = end + 1;
      }
    }
  }
  std::string::basic_string[abi:ne180100]<0>(&__v, "year");
  LOBYTE(__v.__end_cap_.__value_) = 0;
  std::string::basic_string[abi:ne180100]<0>(&__v.__end_cap_.__value_, "month");
  char v34 = 0;
  std::string::basic_string[abi:ne180100]<0>(v35, "day");
  char v36 = 0;
  std::string::basic_string[abi:ne180100]<0>(v37, "hour");
  char v38 = 0;
  std::string::basic_string[abi:ne180100]<0>(v39, "minute");
  char v40 = 0;
  std::string::basic_string[abi:ne180100]<0>(v41, "second");
  char v42 = 0;
  std::string::basic_string[abi:ne180100]<0>(v43, "timezone");
  char v44 = 1;
  std::map<std::string,turi::flex_type_enum>::map[abi:ne180100]((uint64_t)__p, (const void **)&__v.__first_, 7);
  for (uint64_t i = 0; i != -28; i -= 4)
  {
    if (SHIBYTE(v43[i + 2]) < 0) {
      operator delete((void *)v43[i]);
    }
  }
  std::vector<turi::flex_type_enum>::vector(&__v, 0xAAAAAAAAAAAAAAABLL * (((char *)v32.__end_ - (char *)v32.__begin_) >> 3));
  std::vector<std::string>::pointer begin = v32.__begin_;
  std::vector<std::string>::pointer v19 = v32.__end_;
  if (v32.__end_ == v32.__begin_)
  {
    unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * (((char *)v32.__end_ - (char *)v32.__begin_) >> 3);
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v21 = 0;
    do
    {
      if (!std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)__p, (const void **)&begin[v20].__r_.__value_.__l.__data_))
      {
        exception = __cxa_allocate_exception(0x18uLL);
        std::string::basic_string[abi:ne180100]<0>(exception, "Unrecognized date time limit specifier");
      }
      v29[0] = (long long *)&v32.__begin_[v20];
      uint64_t v22 = std::__tree<std::__value_type<std::string,turi::flex_type_enum>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flex_type_enum>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flex_type_enum>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)__p, (const void **)&v32.__begin_[v20].__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, v29);
      __v.__first_->__r_.__value_.__s.__data_[v21++] = *((unsigned char *)v22 + 56);
      std::vector<std::string>::pointer begin = v32.__begin_;
      std::vector<std::string>::pointer v19 = v32.__end_;
      unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * (((char *)v32.__end_ - (char *)v32.__begin_) >> 3);
      ++v20;
    }
    while (v21 < v23);
  }
  memset(v29, 0, sizeof(v29));
  std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::string *>,std::__wrap_iter<std::string *>>(v29, (uint64_t)begin, (uint64_t)v19, v23);
  (*(void (**)(long long ***__return_ptr, uint64_t))(*(void *)a1 + 16))(&v25, a1);
  (*((void (**)(uint64_t *__return_ptr))*v25 + 63))(&v27);
  turi::gl_sframe::gl_sframe(a4, &v27);
  if (v28) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v28);
  }
  if (v26) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v26);
  }
  uint64_t v25 = v29;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v25);
  if (__v.__first_)
  {
    __v.__begin_ = __v.__first_;
    operator delete(__v.__first_);
  }
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)__p, (char *)__p[1]);
  __v.__first_ = (std::__split_buffer<std::string>::pointer)&v32;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__v);
}

void sub_223ED7458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *__p, uint64_t a9, int a10, __int16 a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, std::__split_buffer<std::string> *a17, uint64_t a18, void *__pa, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  if (a24 < 0) {
    operator delete(__pa);
  }
  __pa = &a25;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__pa);
  _Unwind_Resume(a1);
}

void turi::gl_sarray::unpack(turi::gl_sarray *a1@<X0>, uint64_t a2@<X2>, uint64_t **a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v169 = *MEMORY[0x263EF8340];
  v153 = 0;
  v154 = 0;
  v155 = 0;
  std::vector<turi::flex_type_enum>::__init_with_size[abi:ne180100]<turi::flex_type_enum*,turi::flex_type_enum*>(&v153, *(const void **)a2, *(void *)(a2 + 8), *(void *)(a2 + 8) - *(void *)a2);
  v150 = 0;
  v151 = 0;
  uint64_t v152 = 0;
  std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&v150, *a3, a3[1], ((char *)a3[1] - (char *)*a3) >> 4);
  if (turi::gl_sarray::dtype(a1) != 5
    && turi::gl_sarray::dtype(a1) != 4
    && turi::gl_sarray::dtype(a1) != 3)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Only SArray of dict/list/array type supports unpack");
    goto LABEL_306;
  }
  uint64_t v8 = (uint64_t)v150;
  uint64_t v7 = (uint64_t)v151;
  if (v151 == v150) {
    goto LABEL_12;
  }
  *(_OWORD *)&v165.__r_.__value_.__r.__words[1] = 0uLL;
  v165.__r_.__value_.__r.__words[0] = (std::string::size_type)&v165.__r_.__value_.__l.__size_;
  do
  {
    LOBYTE(v156) = *(unsigned char *)(v8 + 12);
    std::__tree<turi::flex_type_enum>::__emplace_unique_key_args<turi::flex_type_enum,turi::flex_type_enum>((uint64_t **)&v165, (char *)&v156, &v156);
    v8 += 16;
  }
  while (v8 != v7);
  if (v165.__r_.__value_.__r.__words[2] != 1)
  {
    v137 = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(v137, "'limit' contains values that are different types");
    goto LABEL_303;
  }
  if (turi::gl_sarray::dtype(a1) != 5 && *(unsigned char *)(v165.__r_.__value_.__r.__words[0] + 25))
  {
    v137 = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(v137, "'limit' must contain integer values.");
LABEL_303:
  }
  std::set<turi::flexible_type>::set[abi:ne180100]<std::__wrap_iter<turi::flexible_type*>>((uint64_t)&v156, (uint64_t)v150, (uint64_t)v151, v9);
  uint64_t v10 = v151 - v150;
  uint64_t v11 = v158;
  std::__tree<turi::flexible_type>::destroy((uint64_t)&v156, v157);
  if (v11 != v10 >> 4)
  {
    v137 = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(v137, "'limit' contains duplicate values.");
    goto LABEL_303;
  }
  std::__tree<std::__value_type<unsigned long long,double>,std::__map_value_compare<unsigned long long,std::__value_type<unsigned long long,double>,std::less<unsigned long long>,true>,std::allocator<std::__value_type<unsigned long long,double>>>::destroy((uint64_t)&v165, (void *)v165.__r_.__value_.__l.__size_);
LABEL_12:
  if (v154 != v153)
  {
    if (v151 != v150)
    {
      if (v154 - (unsigned char *)v153 != (v151 - v150) >> 4)
      {
        exception = __cxa_allocate_exception(0x18uLL);
        std::string::basic_string[abi:ne180100]<0>(exception, "limit and column_types do not have the same length");
        goto LABEL_306;
      }
LABEL_286:
      if (turi::gl_sarray::dtype(a1) == 5 && v154 == v153)
      {
        (*(void (**)(std::string *__return_ptr, turi::gl_sarray *))(*(void *)a1 + 16))(&v165, a1);
        (*(void (**)(uint64_t *__return_ptr))(*(void *)v165.__r_.__value_.__l.__data_ + 496))(&v142);
        turi::gl_sframe::gl_sframe(a4, &v142);
        double v132 = v143;
        if (!v143) {
          goto LABEL_290;
        }
      }
      else
      {
        (*(void (**)(std::string *__return_ptr, turi::gl_sarray *))(*(void *)a1 + 16))(&v165, a1);
        (*(void (**)(uint64_t *__return_ptr))(*(void *)v165.__r_.__value_.__l.__data_ + 512))(&v140);
        turi::gl_sframe::gl_sframe(a4, &v140);
        double v132 = v141;
        if (!v141)
        {
LABEL_290:
          if (v165.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v165.__r_.__value_.__l.__size_);
          }
          v165.__r_.__value_.__r.__words[0] = (std::string::size_type)&v150;
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v165);
          if (v153)
          {
            v154 = (char *)v153;
            operator delete(v153);
          }
          return;
        }
      }
      std::__shared_weak_count::__release_shared[abi:ne180100](v132);
      goto LABEL_290;
    }
    if (turi::gl_sarray::dtype(a1) != 5)
    {
      std::vector<turi::flexible_type>::reserve((uint64_t *)&v150, v154 - (unsigned char *)v153);
      if (v154 != v153)
      {
        std::string::size_type v49 = 0;
        do
        {
          v165.__r_.__value_.__s.__data_[12] = 0;
          LODWORD(v165.__r_.__value_.__r.__words[1]) = 0;
          v165.__r_.__value_.__r.__words[0] = v49;
          std::vector<turi::flexible_type>::push_back[abi:ne180100]((uint64_t *)&v150, (uint64_t *)&v165);
          switch(v165.__r_.__value_.__s.__data_[12])
          {
            case 2:
              if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                std::string::size_type v50 = v165.__r_.__value_.__r.__words[0];
                if (v165.__r_.__value_.__r.__words[0])
                {
                  if (*(char *)(v165.__r_.__value_.__r.__words[0] + 31) < 0) {
                    operator delete(*(void **)(v165.__r_.__value_.__r.__words[0] + 8));
                  }
                  unsigned int v51 = (void *)v50;
                  uint64_t v52 = 0x1012C404EF22A49;
                  goto LABEL_116;
                }
              }
              break;
            case 3:
              if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                std::string::size_type v59 = v165.__r_.__value_.__r.__words[0];
                if (v165.__r_.__value_.__r.__words[0])
                {
                  unsigned int v60 = *(void **)(v165.__r_.__value_.__r.__words[0] + 8);
                  if (v60)
                  {
                    *(void *)(v165.__r_.__value_.__r.__words[0] + 16) = v60;
                    operator delete(v60);
                  }
                  unsigned int v51 = (void *)v59;
                  uint64_t v52 = 0x1080C409938AC02;
                  goto LABEL_116;
                }
              }
              break;
            case 4:
              if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                std::string::size_type v53 = v165.__r_.__value_.__r.__words[0];
                if (v165.__r_.__value_.__r.__words[0])
                {
                  v156 = (void **)(v165.__r_.__value_.__r.__words[0] + 8);
                  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v156);
                  goto LABEL_111;
                }
              }
              break;
            case 5:
              if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                std::string::size_type v53 = v165.__r_.__value_.__r.__words[0];
                if (v165.__r_.__value_.__r.__words[0])
                {
                  v156 = (void **)(v165.__r_.__value_.__r.__words[0] + 8);
                  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v156);
LABEL_111:
                  unsigned int v51 = (void *)v53;
                  uint64_t v52 = 0x1020C405E66F15BLL;
                  goto LABEL_116;
                }
              }
              break;
            case 8:
              if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                std::string::size_type v61 = v165.__r_.__value_.__r.__words[0];
                if (v165.__r_.__value_.__r.__words[0])
                {
                  boost::detail::shared_count::~shared_count((atomic_uint **)(v165.__r_.__value_.__r.__words[0] + 16));
                  unsigned int v51 = (void *)v61;
                  unsigned int v58 = -235920773;
                  goto LABEL_115;
                }
              }
              break;
            case 9:
              if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                size_t v54 = (void *)v165.__r_.__value_.__r.__words[0];
                if (v165.__r_.__value_.__r.__words[0])
                {
                  unsigned int v55 = *(void **)(v165.__r_.__value_.__r.__words[0] + 48);
                  if (v55)
                  {
                    *(void *)(v165.__r_.__value_.__r.__words[0] + 56) = v55;
                    operator delete(v55);
                  }
                  double v56 = (void *)v54[3];
                  if (v56)
                  {
                    void v54[4] = v56;
                    operator delete(v56);
                  }
                  unint64_t v57 = (std::__shared_weak_count *)v54[2];
                  if (v57) {
                    std::__shared_weak_count::__release_shared[abi:ne180100](v57);
                  }
                  unsigned int v51 = v54;
                  unsigned int v58 = 2071181815;
LABEL_115:
                  uint64_t v52 = v58 | 0x1030C4000000000;
LABEL_116:
                  MEMORY[0x22A614FA0](v51, v52);
                }
              }
              break;
            default:
              break;
          }
          ++v49;
        }
        while (v49 < v154 - (unsigned char *)v153);
      }
      goto LABEL_286;
    }
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "if 'column_types' is given, 'limit' has to be provided to unpack dict type.");
LABEL_306:
  }
  turi::gl_sarray::head(a1, (uint64_t)&v165);
  turi::gl_sarray::dropna((turi::gl_sarray *)&v165, (uint64_t)v149);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v165);
  unint64_t v13 = turi::gl_sarray::size((turi::gl_sarray *)v149);
  std::vector<unsigned long>::vector(&__p, v13);
  for (unint64_t i = 0; i < turi::gl_sarray::size((turi::gl_sarray *)v149); ++i)
  {
    turi::gl_sarray::operator[](v149, i, (uint64_t)&v165);
    uint64_t v15 = 1;
    switch(v165.__r_.__value_.__s.__data_[12])
    {
      case 3:
        unsigned int v16 = (void *)(v165.__r_.__value_.__r.__words[0] + 8);
        uint64_t v17 = (void *)(v165.__r_.__value_.__r.__words[0] + 16);
        char v18 = 3;
        goto LABEL_22;
      case 4:
        unsigned int v16 = (void *)(v165.__r_.__value_.__r.__words[0] + 8);
        uint64_t v17 = (void *)(v165.__r_.__value_.__r.__words[0] + 16);
        char v18 = 4;
        goto LABEL_22;
      case 5:
        unsigned int v16 = (void *)(v165.__r_.__value_.__r.__words[0] + 8);
        uint64_t v17 = (void *)(v165.__r_.__value_.__r.__words[0] + 16);
        char v18 = 5;
LABEL_22:
        uint64_t v15 = (uint64_t)(*v17 - *v16) >> v18;
        break;
      case 9:
        unint64_t v23 = *(uint64_t **)(v165.__r_.__value_.__r.__words[0] + 24);
        uint64_t v22 = *(uint64_t **)(v165.__r_.__value_.__r.__words[0] + 32);
        if (v22 == v23)
        {
          uint64_t v15 = 0;
        }
        else
        {
          uint64_t v15 = *(void *)(v165.__r_.__value_.__r.__words[0] + 8);
          if (v15)
          {
            uint64_t v15 = 1;
            do
            {
              uint64_t v24 = *v23++;
              v15 *= v24;
            }
            while (v23 != v22);
          }
        }
        break;
      default:
        break;
    }
    *((void *)__p + i) = v15;
    switch(v165.__r_.__value_.__s.__data_[12])
    {
      case 2:
        if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          std::string::size_type v19 = v165.__r_.__value_.__r.__words[0];
          if (v165.__r_.__value_.__r.__words[0])
          {
            if (*(char *)(v165.__r_.__value_.__r.__words[0] + 31) < 0) {
              operator delete(*(void **)(v165.__r_.__value_.__r.__words[0] + 8));
            }
            uint64_t v20 = (void *)v19;
            uint64_t v21 = 0x1012C404EF22A49;
            goto LABEL_59;
          }
        }
        break;
      case 3:
        if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          std::string::size_type v31 = v165.__r_.__value_.__r.__words[0];
          if (v165.__r_.__value_.__r.__words[0])
          {
            std::vector<std::string> v32 = *(void **)(v165.__r_.__value_.__r.__words[0] + 8);
            if (v32)
            {
              *(void *)(v165.__r_.__value_.__r.__words[0] + 16) = v32;
              operator delete(v32);
            }
            uint64_t v20 = (void *)v31;
            uint64_t v21 = 0x1080C409938AC02;
            goto LABEL_59;
          }
        }
        break;
      case 4:
        if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          std::string::size_type v25 = v165.__r_.__value_.__r.__words[0];
          if (v165.__r_.__value_.__r.__words[0])
          {
            v156 = (void **)(v165.__r_.__value_.__r.__words[0] + 8);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v156);
            goto LABEL_54;
          }
        }
        break;
      case 5:
        if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          std::string::size_type v25 = v165.__r_.__value_.__r.__words[0];
          if (v165.__r_.__value_.__r.__words[0])
          {
            v156 = (void **)(v165.__r_.__value_.__r.__words[0] + 8);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v156);
LABEL_54:
            uint64_t v20 = (void *)v25;
            uint64_t v21 = 0x1020C405E66F15BLL;
            goto LABEL_59;
          }
        }
        break;
      case 8:
        if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          std::string::size_type v33 = v165.__r_.__value_.__r.__words[0];
          if (v165.__r_.__value_.__r.__words[0])
          {
            boost::detail::shared_count::~shared_count((atomic_uint **)(v165.__r_.__value_.__r.__words[0] + 16));
            uint64_t v20 = (void *)v33;
            unsigned int v30 = -235920773;
            goto LABEL_58;
          }
        }
        break;
      case 9:
        if (atomic_fetch_add((atomic_ullong *volatile)v165.__r_.__value_.__l.__data_, 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          unsigned int v26 = (void *)v165.__r_.__value_.__r.__words[0];
          if (v165.__r_.__value_.__r.__words[0])
          {
            uint64_t v27 = *(void **)(v165.__r_.__value_.__r.__words[0] + 48);
            if (v27)
            {
              *(void *)(v165.__r_.__value_.__r.__words[0] + 56) = v27;
              operator delete(v27);
            }
            int64_t v28 = (void *)v26[3];
            if (v28)
            {
              void v26[4] = v28;
              operator delete(v28);
            }
            uint64_t v29 = (std::__shared_weak_count *)v26[2];
            if (v29) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v29);
            }
            uint64_t v20 = v26;
            unsigned int v30 = 2071181815;
LABEL_58:
            uint64_t v21 = v30 | 0x1030C4000000000;
LABEL_59:
            MEMORY[0x22A614FA0](v20, v21);
          }
        }
        break;
      default:
        continue;
    }
  }
  char v34 = __p;
  if (v148 == __p) {
    goto LABEL_299;
  }
  uint64_t v35 = (char *)__p + 8;
  if ((char *)__p + 8 != (char *)v148)
  {
    unint64_t v36 = *(void *)__p;
    uint64_t v37 = (char *)__p + 8;
    do
    {
      unint64_t v39 = *(void *)v37;
      v37 += 8;
      unint64_t v38 = v39;
      BOOL v40 = v36 >= v39;
      if (v36 <= v39) {
        unint64_t v36 = v38;
      }
      if (!v40) {
        char v34 = v35;
      }
      uint64_t v35 = v37;
    }
    while (v37 != (char *)v148);
  }
  if (!*v34)
  {
LABEL_299:
    double v136 = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(v136, "Cannot infer number of items from the SArray, SArray may be empty. please explicitly provide column types");
  }
  uint64_t v138 = a4;
  if (turi::gl_sarray::dtype(a1) == 5) {
    goto LABEL_283;
  }
  uint64_t v41 = (unint64_t *)__p;
  if (__p != v148)
  {
    char v42 = (unint64_t *)((char *)__p + 8);
    if ((char *)__p + 8 != (char *)v148)
    {
      unint64_t v43 = *(void *)__p;
      char v44 = (unint64_t *)((char *)__p + 8);
      do
      {
        unint64_t v46 = *v44++;
        unint64_t v45 = v46;
        BOOL v47 = v43 >= v46;
        if (v43 <= v46) {
          unint64_t v43 = v45;
        }
        if (!v47) {
          uint64_t v41 = v42;
        }
        char v42 = v44;
      }
      while (v44 != v148);
    }
  }
  if (v151 == v150)
  {
    unint64_t v48 = *v41;
    std::vector<turi::flexible_type>::resize((uint64_t *)&v150, *v41);
    if (v48)
    {
      uint64_t v62 = 0;
      for (uint64_t j = 0; j != v48; ++j)
      {
        double v64 = &v150[v62];
        switch(v150[v62 + 12])
        {
          case 2:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)v64, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v65 = *(atomic_ullong *volatile *)v64;
              if (!*(void *)v64) {
                goto LABEL_153;
              }
              if (*((char *)v65 + 31) < 0) {
                operator delete((void *)v65[1]);
              }
              atomic_ullong *volatile v66 = v65;
              uint64_t v67 = 0x1012C404EF22A49;
              goto LABEL_152;
            }
            break;
          case 3:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)v64, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v74 = *(atomic_ullong *volatile *)v64;
              if (!*(void *)v64) {
                goto LABEL_153;
              }
              unsigned int v75 = (void *)v74[1];
              if (v75)
              {
                v74[2] = (atomic_ullong)v75;
                operator delete(v75);
              }
              atomic_ullong *volatile v66 = v74;
              uint64_t v67 = 0x1080C409938AC02;
              goto LABEL_152;
            }
            break;
          case 4:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)v64, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v68 = *(atomic_ullong *volatile *)v64;
              if (!*(void *)v64) {
                goto LABEL_153;
              }
              v165.__r_.__value_.__r.__words[0] = (std::string::size_type)(v68 + 1);
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v165);
              goto LABEL_147;
            }
            break;
          case 5:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)v64, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v68 = *(atomic_ullong *volatile *)v64;
              if (!*(void *)v64) {
                goto LABEL_153;
              }
              v165.__r_.__value_.__r.__words[0] = (std::string::size_type)(v68 + 1);
              std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v165);
LABEL_147:
              atomic_ullong *volatile v66 = v68;
              uint64_t v67 = 0x1020C405E66F15BLL;
              goto LABEL_152;
            }
            break;
          case 8:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)v64, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v76 = *(atomic_ullong *volatile *)v64;
              if (!*(void *)v64) {
                goto LABEL_153;
              }
              boost::detail::shared_count::~shared_count((atomic_uint **)v76 + 2);
              atomic_ullong *volatile v66 = v76;
              unsigned int v73 = -235920773;
              goto LABEL_151;
            }
            break;
          case 9:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)v64, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v69 = *(atomic_ullong *volatile *)v64;
              if (*(void *)v64)
              {
                double v70 = (void *)v69[6];
                if (v70)
                {
                  v69[7] = (atomic_ullong)v70;
                  operator delete(v70);
                }
                long long v71 = (void *)v69[3];
                if (v71)
                {
                  v69[4] = (atomic_ullong)v71;
                  operator delete(v71);
                }
                double v72 = (std::__shared_weak_count *)v69[2];
                if (v72) {
                  std::__shared_weak_count::__release_shared[abi:ne180100](v72);
                }
                atomic_ullong *volatile v66 = v69;
                unsigned int v73 = 2071181815;
LABEL_151:
                uint64_t v67 = v73 | 0x1030C4000000000;
LABEL_152:
                MEMORY[0x22A614FA0](v66, v67);
              }
LABEL_153:
              *(void *)double v64 = 0;
            }
            break;
          default:
            break;
        }
        *((_DWORD *)v64 + 2) = 0;
        v64[12] = 0;
        *(void *)double v64 = j;
        v62 += 16;
      }
    }
  }
  else
  {
    unint64_t v48 = (v151 - v150) >> 4;
  }
  if (turi::gl_sarray::dtype(a1) == 3)
  {
    v165.__r_.__value_.__s.__data_[0] = 1;
    if (v48 <= v154 - (unsigned char *)v153)
    {
      if (v48 < v154 - (unsigned char *)v153) {
        v154 = (char *)v153 + v48;
      }
    }
    else
    {
      std::vector<turi::flex_type_enum>::__append((unint64_t *)&v153, v48 - (v154 - (unsigned char *)v153), &v165);
    }
    goto LABEL_283;
  }
  v154 = (char *)v153;
  long long v77 = v150;
  uint64_t v139 = (uint64_t)v151;
  if (v150 == v151)
  {
LABEL_283:
    if (__p)
    {
      v148 = __p;
      operator delete(__p);
    }
    turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v149);
    a4 = v138;
    goto LABEL_286;
  }
  while (1)
  {
    unint64_t v78 = 0;
    uint64_t v144 = 0;
    v145 = 0;
    unint64_t v146 = 0;
LABEL_160:
    if (v78 < turi::gl_sarray::size((turi::gl_sarray *)v149)) {
      break;
    }
    char v118 = turi::infer_type_of_list(&v144);
    char v119 = v118;
    v120 = v154;
    if (v154 >= v155)
    {
      unint64_t v122 = (unint64_t)v153;
      uint64_t v123 = v154 - (unsigned char *)v153;
      uint64_t v124 = v154 - (unsigned char *)v153 + 1;
      if (v124 < 0) {
        std::vector<float>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v125 = v155 - (unsigned char *)v153;
      if (2 * (v155 - (unsigned char *)v153) > (unint64_t)v124) {
        uint64_t v124 = 2 * v125;
      }
      if (v125 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v126 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v126 = v124;
      }
      if (v126) {
        unsigned int v127 = (char *)operator new(v126);
      }
      else {
        unsigned int v127 = 0;
      }
      double v128 = &v127[v123];
      double v129 = &v127[v123];
      *double v129 = v119;
      v121 = v129 + 1;
      if (v120 != (char *)v122)
      {
        double v130 = &v120[~v122];
        do
        {
          char v131 = *--v120;
          (v130--)[(void)v127] = v131;
        }
        while (v120 != (char *)v122);
        double v128 = v127;
      }
      v153 = v128;
      v154 = v121;
      v155 = &v127[v126];
      if (v122) {
        operator delete((void *)v122);
      }
    }
    else
    {
      char *v154 = v118;
      v121 = v120 + 1;
    }
    v154 = v121;
    v165.__r_.__value_.__r.__words[0] = (std::string::size_type)&v144;
    std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v165);
    v77 += 16;
    if (v77 == (unsigned char *)v139) {
      goto LABEL_283;
    }
  }
  turi::gl_sarray::operator[](v149, v78, (uint64_t)&v163);
  uint64_t v79 = 1;
  switch(v164)
  {
    case 0:
    case 1:
    case 2:
    case 6:
    case 8:
      goto LABEL_171;
    case 3:
      uint64_t v80 = v163 + 1;
      uint64_t v81 = v163 + 2;
      char v82 = 3;
      goto LABEL_170;
    case 4:
      uint64_t v80 = v163 + 1;
      uint64_t v81 = v163 + 2;
      char v82 = 4;
      goto LABEL_170;
    case 5:
      uint64_t v80 = v163 + 1;
      uint64_t v81 = v163 + 2;
      char v82 = 5;
LABEL_170:
      uint64_t v79 = (*v81 - *v80) >> v82;
      goto LABEL_171;
    case 7:
LABEL_205:
      ++v78;
      goto LABEL_160;
    case 9:
      long long v84 = (uint64_t *)v163[3];
      atomic_ullong v83 = v163[4];
      if ((uint64_t *)v83 == v84)
      {
        uint64_t v79 = 0;
      }
      else
      {
        uint64_t v79 = v163[1];
        if (v79)
        {
          uint64_t v79 = 1;
          do
          {
            uint64_t v85 = *v84++;
            v79 *= v85;
          }
          while (v84 != (uint64_t *)v83);
        }
      }
LABEL_171:
      switch(v77[12])
      {
        case 0:
          if (*(void *)v77 < v79) {
            goto LABEL_211;
          }
          goto LABEL_173;
        case 1:
          if (*(double *)v77 < (double)v79) {
            goto LABEL_211;
          }
          goto LABEL_173;
        case 2:
        case 3:
        case 4:
        case 5:
        case 7:
        case 8:
        case 9:
          turi::flexible_type_fail(0);
          goto LABEL_173;
        case 6:
          if (v79 > (uint64_t)(*(void *)v77 << 8) >> 8)
          {
LABEL_211:
            uint64_t v98 = 0;
            switch(v77[12])
            {
              case 0:
                uint64_t v98 = *(void *)v77;
                goto LABEL_236;
              case 1:
                uint64_t v98 = (uint64_t)*(double *)v77;
                goto LABEL_236;
              case 2:
                uint64_t v100 = *(void *)v77;
                int64_t v101 = (char **)(*(void *)v77 + 8);
                size_t __idx = 0;
                uint64_t v102 = (char *)v101;
                if (*(char *)(v100 + 31) < 0) {
                  uint64_t v102 = *v101;
                }
                uint64_t v103 = (const std::string *)std::string::basic_string[abi:ne180100]<0>(&v165, v102);
                uint64_t v98 = std::stoll(v103, &__idx, 10);
                if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v165.__r_.__value_.__l.__data_);
                }
                if (*(char *)(v100 + 31) < 0) {
                  uint64_t v104 = *(void *)(v100 + 16);
                }
                else {
                  uint64_t v104 = *(unsigned __int8 *)(v100 + 31);
                }
                if (__idx != v104)
                {
                  unsigned int v133 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
                  std::operator+<char>();
                  double v134 = std::string::append(&v161, " cannot be interpreted as an integer");
                  long long v135 = *(_OWORD *)&v134->__r_.__value_.__l.__data_;
                  v165.__r_.__value_.__r.__words[2] = v134->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v165.__r_.__value_.__l.__data_ = v135;
                  v134->__r_.__value_.__l.__size_ = 0;
                  v134->__r_.__value_.__r.__words[2] = 0;
                  v134->__r_.__value_.__r.__words[0] = 0;
                  std::runtime_error::runtime_error(v133, &v165);
                  __cxa_throw(v133, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
                }
                goto LABEL_236;
              case 3:
                uint64_t v99 = *(void *)v77;
                memset(&v165, 0, sizeof(v165));
                std::vector<unsigned long>::__init_with_size[abi:ne180100]<unsigned long *,unsigned long *>(&v165, *(const void **)(v99 + 8), *(void *)(v99 + 16), (uint64_t)(*(void *)(v99 + 16) - *(void *)(v99 + 8)) >> 3);
                turi::flexible_type_fail(0);
                if (v165.__r_.__value_.__r.__words[0])
                {
                  v165.__r_.__value_.__l.__size_ = v165.__r_.__value_.__r.__words[0];
                  operator delete(v165.__r_.__value_.__l.__data_);
                }
                goto LABEL_235;
              case 4:
                uint64_t v105 = *(void *)v77;
                memset(&v165, 0, sizeof(v165));
                std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&v165, *(uint64_t **)(v105 + 8), *(uint64_t **)(v105 + 16), (uint64_t)(*(void *)(v105 + 16) - *(void *)(v105 + 8)) >> 4);
                turi::flexible_type_fail(0);
                v161.__r_.__value_.__r.__words[0] = (std::string::size_type)&v165;
                std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v161);
                goto LABEL_235;
              case 5:
                uint64_t v106 = *(void *)v77;
                memset(&v165, 0, sizeof(v165));
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__init_with_size[abi:ne180100]<std::pair<turi::flexible_type,turi::flexible_type>*,std::pair<turi::flexible_type,turi::flexible_type>*>(&v165, *(uint64_t **)(v106 + 8), *(uint64_t **)(v106 + 16), (uint64_t)(*(void *)(v106 + 16) - *(void *)(v106 + 8)) >> 5);
                turi::flexible_type_fail(0);
                v161.__r_.__value_.__r.__words[0] = (std::string::size_type)&v165;
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v161);
                goto LABEL_235;
              case 6:
                uint64_t v98 = (uint64_t)(*(void *)v77 << 8) >> 8;
                goto LABEL_236;
              case 7:
                goto LABEL_236;
              case 8:
                uint64_t v107 = *(void *)v77;
                uint64_t v108 = *(atomic_uint **)(*(void *)v77 + 16);
                v156 = *(void ***)(*(void *)v77 + 8);
                v157 = v108;
                if (v108) {
                  atomic_fetch_add_explicit(v108 + 2, 1u, memory_order_relaxed);
                }
                long long v109 = *(_OWORD *)(v107 + 24);
                long long v110 = *(_OWORD *)(v107 + 56);
                long long v159 = *(_OWORD *)(v107 + 40);
                long long v160 = v110;
                long long v158 = v109;
                turi::flexible_type_fail(0);
                boost::detail::shared_count::~shared_count(&v157);
                goto LABEL_235;
              case 9:
                turi::flexible_type_impl::ndarray<double>::ndarray(&v165, *(void *)v77 + 8);
                turi::flexible_type_fail(0);
                if (v167)
                {
                  uint64_t v168 = v167;
                  operator delete(v167);
                }
                if (v165.__r_.__value_.__r.__words[2])
                {
                  std::string::size_type v166 = v165.__r_.__value_.__r.__words[2];
                  operator delete((void *)v165.__r_.__value_.__r.__words[2]);
                }
                if (v165.__r_.__value_.__l.__size_) {
                  std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v165.__r_.__value_.__l.__size_);
                }
LABEL_235:
                uint64_t v98 = 0;
LABEL_236:
                switch(v164)
                {
                  case 2:
                    if (*v163 != 1) {
                      operator new();
                    }
                    return;
                  case 3:
                    if (*v163 != 1) {
                      operator new();
                    }
                    return;
                  case 4:
                    if (*v163 != 1) {
                      operator new();
                    }
                    return;
                  case 5:
                    if (*v163 != 1) {
                      operator new();
                    }
                    return;
                  case 8:
                    if (*v163 != 1) {
                      operator new();
                    }
                    return;
                  case 9:
                    if (*v163 != 1) {
                      operator new();
                    }
                    return;
                  default:
                    break;
                }
                atomic_ullong v111 = v163[1] + 16 * v98;
                unint64_t v112 = v145;
                if ((unint64_t)v145 >= v146)
                {
                  uint64_t v117 = std::vector<turi::flexible_type>::__push_back_slow_path<turi::flexible_type const&>(&v144, (atomic_ullong *volatile *)v111);
                }
                else
                {
                  void *v145 = 0;
                  *((_DWORD *)v112 + 2) = 0;
                  *((unsigned char *)v112 + 12) = 0;
                  if (v112 != (void *)v111)
                  {
                    atomic_ullong *volatile v113 = *(atomic_ullong *volatile *)v111;
                    *(void *)((char *)v112 + 5) = *(void *)(v111 + 5);
                    *unint64_t v112 = v113;
                    LODWORD(v113) = *(unsigned __int8 *)(v111 + 12);
                    *((unsigned char *)v112 + 12) = (_BYTE)v113;
                    BOOL v114 = v113 > 9;
                    int v115 = (1 << (char)v113) & 0x33C;
                    if (!v114 && v115 != 0) {
                      atomic_fetch_add((atomic_ullong *volatile)*v112, 1uLL);
                    }
                  }
                  uint64_t v117 = (uint64_t)(v112 + 2);
                }
                v145 = (void *)v117;
                break;
              default:
                goto LABEL_298;
            }
          }
LABEL_173:
          switch(v164)
          {
            case 2:
              if (atomic_fetch_add(v163, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                int64_t v86 = v163;
                if (v163)
                {
                  if (*((char *)v163 + 31) < 0) {
                    operator delete((void *)v163[1]);
                  }
                  unint64_t v87 = v86;
                  uint64_t v88 = 0x1012C404EF22A49;
                  goto LABEL_204;
                }
              }
              break;
            case 3:
              if (atomic_fetch_add(v163, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                uint64_t v95 = v163;
                if (v163)
                {
                  uint64_t v96 = (void *)v163[1];
                  if (v96)
                  {
                    v163[2] = (atomic_ullong)v96;
                    operator delete(v96);
                  }
                  unint64_t v87 = v95;
                  uint64_t v88 = 0x1080C409938AC02;
                  goto LABEL_204;
                }
              }
              break;
            case 4:
              if (atomic_fetch_add(v163, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                int64_t v89 = v163;
                if (v163)
                {
                  v165.__r_.__value_.__r.__words[0] = (std::string::size_type)(v163 + 1);
                  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v165);
                  goto LABEL_199;
                }
              }
              break;
            case 5:
              if (atomic_fetch_add(v163, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                int64_t v89 = v163;
                if (v163)
                {
                  v165.__r_.__value_.__r.__words[0] = (std::string::size_type)(v163 + 1);
                  std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v165);
LABEL_199:
                  unint64_t v87 = v89;
                  uint64_t v88 = 0x1020C405E66F15BLL;
                  goto LABEL_204;
                }
              }
              break;
            case 8:
              if (atomic_fetch_add(v163, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                uint64_t v97 = v163;
                if (v163)
                {
                  boost::detail::shared_count::~shared_count((atomic_uint **)v163 + 2);
                  unint64_t v87 = v97;
                  unsigned int v94 = -235920773;
                  goto LABEL_203;
                }
              }
              break;
            case 9:
              if (atomic_fetch_add(v163, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                uint64_t v90 = v163;
                if (v163)
                {
                  v91 = (void *)v163[6];
                  if (v91)
                  {
                    v163[7] = (atomic_ullong)v91;
                    operator delete(v91);
                  }
                  v92 = (void *)v90[3];
                  if (v92)
                  {
                    v90[4] = (atomic_ullong)v92;
                    operator delete(v92);
                  }
                  int64_t v93 = (std::__shared_weak_count *)v90[2];
                  if (v93) {
                    std::__shared_weak_count::__release_shared[abi:ne180100](v93);
                  }
                  unint64_t v87 = v90;
                  unsigned int v94 = 2071181815;
LABEL_203:
                  uint64_t v88 = v94 | 0x1030C4000000000;
LABEL_204:
                  MEMORY[0x22A614FA0](v87, v88);
                }
              }
              break;
            default:
              goto LABEL_205;
          }
          goto LABEL_205;
        default:
          goto LABEL_298;
      }
    default:
LABEL_298:
      turi::flexible_type_fail(0);
      __break(1u);
      break;
  }
}

void sub_223ED8C34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, boost::detail::shared_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,uint64_t a23,char *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p) {
    operator delete(__p);
  }
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&a24);
  a24 = &a29;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a24);
  if (a32)
  {
    a33 = (uint64_t)a32;
    operator delete(a32);
  }
  _Unwind_Resume(a1);
}

void **std::vector<turi::flexible_type>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  double result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = (unint64_t)*(result - 1);
  if (v7 >= v6)
  {
    uint64_t v10 = (uint64_t)(v7 - *a1) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v5 - *a1;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    v17[4] = result;
    if (v13) {
      uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>((uint64_t)result, v13);
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v15 = &v14[16 * v10];
    v17[0] = v14;
    v17[1] = v15;
    v17[3] = &v14[16 * v13];
    *(void *)uint64_t v15 = 0;
    *((_DWORD *)v15 + 2) = 0;
    v15[12] = 0;
    uint64_t v16 = *a2;
    *(void *)(v15 + 5) = *(uint64_t *)((char *)a2 + 5);
    *(void *)uint64_t v15 = v16;
    v15[12] = *((unsigned char *)a2 + 12);
    *((unsigned char *)a2 + 12) = 0;
    v17[2] = v15 + 16;
    std::vector<turi::flexible_type>::__swap_out_circular_buffer(a1, v17);
    uint64_t v9 = a1[1];
    double result = std::__split_buffer<turi::flexible_type>::~__split_buffer(v17);
  }
  else
  {
    *(void *)unint64_t v7 = 0;
    *(_DWORD *)(v7 + 8) = 0;
    *(unsigned char *)(v7 + 12) = 0;
    uint64_t v8 = *a2;
    *(void *)(v7 + 5) = *(uint64_t *)((char *)a2 + 5);
    *(void *)unint64_t v7 = v8;
    *(unsigned char *)(v7 + 12) = *((unsigned char *)a2 + 12);
    *((unsigned char *)a2 + 12) = 0;
    uint64_t v9 = v7 + 16;
    a1[1] = v7 + 16;
  }
  a1[1] = v9;
  return result;
}

void sub_223ED93A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<turi::flexible_type>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

void turi::gl_sarray::sort(turi::gl_sarray *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  v11[5] = *MEMORY[0x263EF8340];
  std::pair<std::string,turi::gl_sarray>::pair[abi:ne180100]<char const(&)[2],turi::gl_sarray const&,0>(__p, "a", this);
  turi::gl_sframe::gl_sframe(v7, __p, 1);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v11);
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(v5, "a");
  turi::gl_sframe::sort((uint64_t)v7, (uint64_t)v5, a2, __p);
  turi::gl_sframe::operator=((uint64_t)v7, (uint64_t)__p);
  __p[0] = &unk_26D759E10;
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "a");
  turi::gl_sframe::select_column((uint64_t)v7, a3);
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  v7[0] = &unk_26D759E10;
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
}

void sub_223ED951C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::subslice(turi::gl_sarray *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v54[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  if ((turi::gl_sarray::dtype(a1) - 5) <= 0xFCu) {
    turi::gl_sarray::subslice(turi::flexible_type,turi::flexible_type,turi::flexible_type)const::$_0::operator()();
  }
  (*(void (**)(uint64_t *__return_ptr, turi::gl_sarray *))(*(void *)a1 + 16))(&v47, a1);
  uint64_t v10 = v47;
  memset(v54, 0, 13);
  if (v54 != (atomic_ullong **)a2)
  {
    *(atomic_ullong **)((char *)v54 + 5) = *(atomic_ullong **)(a2 + 5);
    v54[0] = *(atomic_ullong **)a2;
    BYTE4(v54[1]) = *(unsigned char *)(a2 + 12);
    if (BYTE4(v54[1]) <= 9u && ((1 << SBYTE4(v54[1])) & 0x33C) != 0) {
      atomic_fetch_add(v54[0], 1uLL);
    }
  }
  memset(v53, 0, 13);
  if (v53 != (atomic_ullong **)a4)
  {
    *(atomic_ullong **)((char *)v53 + 5) = *(atomic_ullong **)(a4 + 5);
    v53[0] = *(atomic_ullong **)a4;
    BYTE4(v53[1]) = *(unsigned char *)(a4 + 12);
    if (BYTE4(v53[1]) <= 9u && ((1 << SBYTE4(v53[1])) & 0x33C) != 0) {
      atomic_fetch_add(v53[0], 1uLL);
    }
  }
  memset(v52, 0, 13);
  if (v52 != (atomic_ullong **)a3)
  {
    *(atomic_ullong **)((char *)v52 + 5) = *(atomic_ullong **)(a3 + 5);
    v52[0] = *(atomic_ullong **)a3;
    BYTE4(v52[1]) = *(unsigned char *)(a3 + 12);
    if (BYTE4(v52[1]) <= 9u && ((1 << SBYTE4(v52[1])) & 0x33C) != 0) {
      atomic_fetch_add(v52[0], 1uLL);
    }
  }
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v10 + 536))(&v49);
  turi::gl_sarray::gl_sarray(a5, (uint64_t)&v49);
  if (v50) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v50);
  }
  switch(BYTE4(v52[1]))
  {
    case 2:
      if (atomic_fetch_add(v52[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        unint64_t v11 = v52[0];
        if (v52[0])
        {
          if (*((char *)v52[0] + 31) < 0) {
            operator delete(*((void **)v52[0] + 1));
          }
          uint64_t v12 = v11;
          uint64_t v13 = 0x1012C404EF22A49;
          goto LABEL_47;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v52[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v14 = v52[0];
        if (v52[0])
        {
          uint64_t v15 = (void *)v52[0][1];
          if (v15)
          {
            v52[0][2] = (atomic_ullong)v15;
            operator delete(v15);
          }
          uint64_t v12 = v14;
          uint64_t v13 = 0x1080C409938AC02;
          goto LABEL_47;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v52[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v16 = v52[0];
        if (v52[0])
        {
          unsigned int v51 = (void **)(v52[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v51);
          goto LABEL_42;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v52[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v16 = v52[0];
        if (v52[0])
        {
          unsigned int v51 = (void **)(v52[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v51);
LABEL_42:
          uint64_t v12 = v16;
          uint64_t v13 = 0x1020C405E66F15BLL;
          goto LABEL_47;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v52[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v22 = v52[0];
        if (v52[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v52[0] + 2);
          uint64_t v12 = v22;
          unsigned int v21 = -235920773;
          goto LABEL_46;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v52[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v17 = v52[0];
        if (v52[0])
        {
          char v18 = (void *)v52[0][6];
          if (v18)
          {
            v52[0][7] = (atomic_ullong)v18;
            operator delete(v18);
          }
          std::string::size_type v19 = (void *)v17[3];
          if (v19)
          {
            v17[4] = (atomic_ullong)v19;
            operator delete(v19);
          }
          uint64_t v20 = (std::__shared_weak_count *)v17[2];
          if (v20) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v20);
          }
          uint64_t v12 = v17;
          unsigned int v21 = 2071181815;
LABEL_46:
          uint64_t v13 = v21 | 0x1030C4000000000;
LABEL_47:
          MEMORY[0x22A614FA0](v12, v13);
        }
      }
      break;
    default:
      break;
  }
  memset(v52, 0, 13);
  switch(BYTE4(v53[1]))
  {
    case 2:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        unint64_t v23 = v53[0];
        if (v53[0])
        {
          if (*((char *)v53[0] + 31) < 0) {
            operator delete(*((void **)v53[0] + 1));
          }
          uint64_t v24 = v23;
          uint64_t v25 = 0x1012C404EF22A49;
          goto LABEL_79;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        unsigned int v26 = v53[0];
        if (v53[0])
        {
          uint64_t v27 = (void *)v53[0][1];
          if (v27)
          {
            v53[0][2] = (atomic_ullong)v27;
            operator delete(v27);
          }
          uint64_t v24 = v26;
          uint64_t v25 = 0x1080C409938AC02;
          goto LABEL_79;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        int64_t v28 = v53[0];
        if (v53[0])
        {
          unsigned int v51 = (void **)(v53[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v51);
          goto LABEL_74;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        int64_t v28 = v53[0];
        if (v53[0])
        {
          unsigned int v51 = (void **)(v53[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v51);
LABEL_74:
          uint64_t v24 = v28;
          uint64_t v25 = 0x1020C405E66F15BLL;
          goto LABEL_79;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        char v34 = v53[0];
        if (v53[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v53[0] + 2);
          uint64_t v24 = v34;
          unsigned int v33 = -235920773;
          goto LABEL_78;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v29 = v53[0];
        if (v53[0])
        {
          unsigned int v30 = (void *)v53[0][6];
          if (v30)
          {
            v53[0][7] = (atomic_ullong)v30;
            operator delete(v30);
          }
          std::string::size_type v31 = (void *)v29[3];
          if (v31)
          {
            v29[4] = (atomic_ullong)v31;
            operator delete(v31);
          }
          std::vector<std::string> v32 = (std::__shared_weak_count *)v29[2];
          if (v32) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v32);
          }
          uint64_t v24 = v29;
          unsigned int v33 = 2071181815;
LABEL_78:
          uint64_t v25 = v33 | 0x1030C4000000000;
LABEL_79:
          MEMORY[0x22A614FA0](v24, v25);
        }
      }
      break;
    default:
      break;
  }
  memset(v53, 0, 13);
  switch(BYTE4(v54[1]))
  {
    case 2:
      if (atomic_fetch_add(v54[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v35 = v54[0];
        if (v54[0])
        {
          if (*((char *)v54[0] + 31) < 0) {
            operator delete(*((void **)v54[0] + 1));
          }
          unint64_t v36 = v35;
          uint64_t v37 = 0x1012C404EF22A49;
          goto LABEL_111;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v54[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        unint64_t v38 = v54[0];
        if (v54[0])
        {
          unint64_t v39 = (void *)v54[0][1];
          if (v39)
          {
            v54[0][2] = (atomic_ullong)v39;
            operator delete(v39);
          }
          unint64_t v36 = v38;
          uint64_t v37 = 0x1080C409938AC02;
          goto LABEL_111;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v54[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        BOOL v40 = v54[0];
        if (v54[0])
        {
          unsigned int v51 = (void **)(v54[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v51);
          goto LABEL_106;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v54[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        BOOL v40 = v54[0];
        if (v54[0])
        {
          unsigned int v51 = (void **)(v54[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v51);
LABEL_106:
          unint64_t v36 = v40;
          uint64_t v37 = 0x1020C405E66F15BLL;
          goto LABEL_111;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v54[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        unint64_t v46 = v54[0];
        if (v54[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v54[0] + 2);
          unint64_t v36 = v46;
          unsigned int v45 = -235920773;
          goto LABEL_110;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v54[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v41 = v54[0];
        if (v54[0])
        {
          char v42 = (void *)v54[0][6];
          if (v42)
          {
            v54[0][7] = (atomic_ullong)v42;
            operator delete(v42);
          }
          unint64_t v43 = (void *)v41[3];
          if (v43)
          {
            v41[4] = (atomic_ullong)v43;
            operator delete(v43);
          }
          char v44 = (std::__shared_weak_count *)v41[2];
          if (v44) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v44);
          }
          unint64_t v36 = v41;
          unsigned int v45 = 2071181815;
LABEL_110:
          uint64_t v37 = v45 | 0x1030C4000000000;
LABEL_111:
          MEMORY[0x22A614FA0](v36, v37);
        }
      }
      break;
    default:
      break;
  }
  memset(v54, 0, 13);
  if (v48) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v48);
  }
}

void sub_223ED9D54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, uint64_t a17, int a18, char a19, uint64_t a20,int a21,char a22)
{
  switch(a16)
  {
    case 2:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a14);
      break;
    case 3:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a14);
      break;
    case 4:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a14);
      break;
    case 5:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a14);
      break;
    case 8:
      turi::gl_sarray::clip((atomic_ullong *volatile *)&a14);
      break;
    case 9:
      turi::full_type_name<turi::flexible_type>((atomic_ullong *volatile *)&a14);
      break;
    default:
      break;
  }
  a14 = 0;
  a15 = 0;
  a16 = 0;
  switch(a19)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a17, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v23 = a17;
      if (!a17) {
        goto LABEL_34;
      }
      if (*(char *)(a17 + 31) < 0) {
        operator delete(*(void **)(a17 + 8));
      }
      uint64_t v24 = (void *)v23;
      uint64_t v25 = 0x1012C404EF22A49;
      goto LABEL_33;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a17, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v28 = a17;
      if (!a17) {
        goto LABEL_34;
      }
      uint64_t v29 = *(void **)(a17 + 8);
      if (v29)
      {
        *(void *)(a17 + 16) = v29;
        operator delete(v29);
      }
      uint64_t v24 = (void *)v28;
      uint64_t v25 = 0x1080C409938AC02;
      goto LABEL_33;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a17, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v26 = a17;
      if (!a17) {
        goto LABEL_34;
      }
      a13 = a17 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
      goto LABEL_28;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a17, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v26 = a17;
      if (!a17) {
        goto LABEL_34;
      }
      a13 = a17 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
LABEL_28:
      uint64_t v24 = (void *)v26;
      uint64_t v25 = 0x1020C405E66F15BLL;
      goto LABEL_33;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a17, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_34;
      }
      uint64_t v30 = a17;
      if (!a17) {
        goto LABEL_34;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a17 + 16));
      uint64_t v24 = (void *)v30;
      unsigned int v27 = -235920773;
      goto LABEL_32;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a17, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a17) {
        goto LABEL_34;
      }
      uint64_t v24 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a17);
      unsigned int v27 = 2071181815;
LABEL_32:
      uint64_t v25 = v27 | 0x1030C4000000000;
LABEL_33:
      MEMORY[0x22A614FA0](v24, v25);
LABEL_34:
      a17 = 0;
      a18 = 0;
      a19 = 0;
      switch(a22)
      {
        case 2:
          if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
            goto LABEL_60;
          }
          uint64_t v31 = a20;
          if (!a20) {
            goto LABEL_60;
          }
          if (*(char *)(a20 + 31) < 0) {
            operator delete(*(void **)(a20 + 8));
          }
          std::vector<std::string> v32 = (void *)v31;
          uint64_t v33 = 0x1012C404EF22A49;
          goto LABEL_59;
        case 3:
          if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
            goto LABEL_60;
          }
          uint64_t v36 = a20;
          if (!a20) {
            goto LABEL_60;
          }
          uint64_t v37 = *(void **)(a20 + 8);
          if (v37)
          {
            *(void *)(a20 + 16) = v37;
            operator delete(v37);
          }
          std::vector<std::string> v32 = (void *)v36;
          uint64_t v33 = 0x1080C409938AC02;
          goto LABEL_59;
        case 4:
          if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
            goto LABEL_60;
          }
          uint64_t v34 = a20;
          if (!a20) {
            goto LABEL_60;
          }
          a13 = a20 + 8;
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
          goto LABEL_54;
        case 5:
          if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
            goto LABEL_60;
          }
          uint64_t v34 = a20;
          if (!a20) {
            goto LABEL_60;
          }
          a13 = a20 + 8;
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
LABEL_54:
          std::vector<std::string> v32 = (void *)v34;
          uint64_t v33 = 0x1020C405E66F15BLL;
          goto LABEL_59;
        case 8:
          if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
            goto LABEL_60;
          }
          uint64_t v38 = a20;
          if (!a20) {
            goto LABEL_60;
          }
          boost::detail::shared_count::~shared_count((atomic_uint **)(a20 + 16));
          std::vector<std::string> v32 = (void *)v38;
          unsigned int v35 = -235920773;
          goto LABEL_58;
        case 9:
          if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a20) {
            goto LABEL_60;
          }
          std::vector<std::string> v32 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a20);
          unsigned int v35 = 2071181815;
LABEL_58:
          uint64_t v33 = v35 | 0x1030C4000000000;
LABEL_59:
          MEMORY[0x22A614FA0](v32, v33);
LABEL_60:
          a20 = 0;
          a21 = 0;
          a22 = 0;
          if (a10) {
            std::__shared_weak_count::__release_shared[abi:ne180100](a10);
          }
          _Unwind_Resume(exception_object);
          return;
        default:
          goto LABEL_60;
      }
    default:
      goto LABEL_34;
  }
}

void turi::gl_sarray::show(turi::gl_sarray *a1, uint64_t a2, const turi::flexible_type *a3, const turi::flexible_type *a4, const turi::flexible_type *a5)
{
}

void sub_223EDA250(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray::plot(turi::gl_sarray *this, const turi::flexible_type *a2, const turi::flexible_type *a3, const turi::flexible_type *a4)
{
  turi::gl_sarray::materialize(this);
  if (turi::gl_sarray::size(this))
  {
    unsigned int v8 = turi::gl_sarray::dtype(this);
    if (v8 < 2)
    {
      turi::visualization::plot_histogram(this, a3, a4, a2, v9);
    }
    if (v8 == 2)
    {
      turi::visualization::plot_item_frequency(this, a3, a4, a2, v9);
    }
    uint64_t v10 = this;
    turi::gl_sarray::plot(turi::flexible_type const&,turi::flexible_type const&,turi::flexible_type const&)const::$_1::operator()(&v10);
  }
  turi::gl_sarray::plot(turi::flexible_type const&,turi::flexible_type const&,turi::flexible_type const&)const::$_0::operator()();
}

void turi::gl_sarray::cumulative_aggregate(turi::gl_sarray *a1@<X0>, void *a2@<X1>, turi::gl_sarray *a3@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v6 = turi::gl_sarray::dtype(a1);
  uint64_t v7 = *a2;
  unsigned int v8 = operator new(1uLL);
  __p[0] = v8;
  unsigned char *v8 = v6;
  __p[1] = v8 + 1;
  *(void *)&long long v19 = v8 + 1;
  uint64_t v9 = (*(uint64_t (**)(uint64_t, void **))(*(void *)v7 + 56))(v7, __p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (((*(uint64_t (**)(void, uint64_t))(*(void *)*a2 + 48))(*a2, v6) & 1) == 0)
  {
    std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)__p);
    unint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v19, (uint64_t)"Cannot perform this operation on an SArray of type ", 51);
    if (v6 > 9) {
      uint64_t v12 = "undefined";
    }
    else {
      uint64_t v12 = off_2646D6CE0[(int)v6];
    }
    size_t v13 = strlen(v12);
    uint64_t v14 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)v12, v13);
    uint64_t v15 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)".", 1);
    std::endl[abi:ne180100]<char,std::char_traits<char>>(v15);
    *(void *)&long long v17 = __p;
    turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)const::$_0::operator()();
  }
  uint64_t v10 = (turi::gl_sarray_writer_impl *)turi::gl_sarray::size(a1);
  v16[1] = v10;
  if (v10)
  {
    turi::thread::cpu_count(v10);
    turi::gl_sarray_writer::gl_sarray_writer(v16);
  }
  __p[0] = 0;
  __p[1] = 0;
  *(void *)&long long v19 = 0;
  turi::gl_sarray::gl_sarray(a3, (uint64_t *)__p, v9);
  *(void *)&long long v17 = __p;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v17);
}

void sub_223EDA7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
}

void turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)const::$_2::operator()(uint64_t a1)
{
  v4[5] = *(atomic_ullong **)MEMORY[0x263EF8340];
  *(atomic_ullong **)((char *)v4 + 5) = *(atomic_ullong **)((char *)&turi::FLEX_UNDEFINED + 5);
  v4[0] = (atomic_ullong *)turi::FLEX_UNDEFINED;
  BYTE4(v4[1]) = byte_268081524;
  if (byte_268081524 <= 9u && ((1 << byte_268081524) & 0x33C) != 0) {
    atomic_fetch_add(v4[0], 1uLL);
  }
  uint64_t v2 = (****(uint64_t (*****)(void))(a1 + 8))(**(void **)(a1 + 8));
  std::shared_ptr<turi::group_aggregate_value>::shared_ptr[abi:ne180100]<turi::group_aggregate_value,void>(&v3, v2);
}

void sub_223EDB5D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22)
{
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }
  switch(a22)
  {
    case 2:
      if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v23 = a20;
      if (!a20) {
        goto LABEL_29;
      }
      if (*(char *)(a20 + 31) < 0) {
        operator delete(*(void **)(a20 + 8));
      }
      uint64_t v24 = (void *)v23;
      uint64_t v25 = 0x1012C404EF22A49;
      goto LABEL_28;
    case 3:
      if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v28 = a20;
      if (!a20) {
        goto LABEL_29;
      }
      uint64_t v29 = *(void **)(a20 + 8);
      if (v29)
      {
        *(void *)(a20 + 16) = v29;
        operator delete(v29);
      }
      uint64_t v24 = (void *)v28;
      uint64_t v25 = 0x1080C409938AC02;
      goto LABEL_28;
    case 4:
      if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v26 = a20;
      if (!a20) {
        goto LABEL_29;
      }
      a12 = a20 + 8;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a12);
      goto LABEL_23;
    case 5:
      if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v26 = a20;
      if (!a20) {
        goto LABEL_29;
      }
      a12 = a20 + 8;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a12);
LABEL_23:
      uint64_t v24 = (void *)v26;
      uint64_t v25 = 0x1020C405E66F15BLL;
      goto LABEL_28;
    case 8:
      if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v30 = a20;
      if (!a20) {
        goto LABEL_29;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(a20 + 16));
      uint64_t v24 = (void *)v30;
      unsigned int v27 = -235920773;
      goto LABEL_27;
    case 9:
      if (atomic_fetch_add((atomic_ullong *volatile)a20, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a20) {
        goto LABEL_29;
      }
      uint64_t v24 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair((void *)a20);
      unsigned int v27 = 2071181815;
LABEL_27:
      uint64_t v25 = v27 | 0x1030C4000000000;
LABEL_28:
      MEMORY[0x22A614FA0](v24, v25);
LABEL_29:
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_29;
  }
}

void turi::gl_sarray_writer::close(turi::gl_sarray_writer_impl **this)
{
}

void turi::gl_sarray_writer::~gl_sarray_writer(turi::gl_sarray_writer *this)
{
  uint64_t v1 = *(void *)this;
  *(void *)this = 0;
  if (v1) {
    std::default_delete<turi::gl_sarray_writer_impl>::operator()[abi:ne180100]((uint64_t)this, v1);
  }
}

void turi::gl_sarray::builtin_cumulative_aggregate(turi::gl_sarray *a1@<X0>, std::string::size_type a2@<X1>, turi::gl_sarray *a3@<X8>)
{
  int v6 = turi::gl_sarray::dtype(a1);
  int v8 = *(unsigned __int8 *)(a2 + 23);
  if ((v8 & 0x80) != 0)
  {
    if (*(void *)(a2 + 8) != 20) {
      goto LABEL_107;
    }
    uint64_t v20 = *(uint64_t **)a2;
    if (**(void **)a2 != 0x69746C6975625F5FLL
      || *(void *)(*(void *)a2 + 8) != 0x735F6D75635F5F6ELL
      || *(_DWORD *)(*(void *)a2 + 16) != 1600089461)
    {
      if (*v20 != 0x69746C6975625F5FLL || v20[1] != 0x615F6D75635F5F6ELL || *((_DWORD *)v20 + 4) != 1600087926)
      {
        if (*v20 != 0x69746C6975625F5FLL || v20[1] != 0x6D5F6D75635F5F6ELL || *((_DWORD *)v20 + 4) != 1600092257)
        {
          uint64_t v27 = *v20;
          uint64_t v28 = v20[1];
          uint64_t v29 = *((unsigned int *)v20 + 4);
          if (v27 != 0x69746C6975625F5FLL || v28 != 0x6D5F6D75635F5F6ELL || v29 != 1600089705)
          {
            if (*(void *)(a2 + 8) != 20) {
              goto LABEL_107;
            }
            long long v19 = *(uint64_t **)a2;
            if (**(void **)a2 != 0x69746C6975625F5FLL
              || *(void *)(*(void *)a2 + 8) != 0x765F6D75635F5F6ELL
              || *(_DWORD *)(*(void *)a2 + 16) != 1600090721)
            {
              if ((v8 & 0x80) == 0)
              {
                long long v19 = (uint64_t *)a2;
                if (v8 != 20) {
                  goto LABEL_107;
                }
              }
              goto LABEL_79;
            }
LABEL_97:
            std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__var__");
            turi::get_builtin_group_aggregator(&__p, &v44);
            goto LABEL_98;
          }
LABEL_96:
          std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__min__");
          turi::get_builtin_group_aggregator(&__p, &v44);
          goto LABEL_98;
        }
LABEL_94:
        std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__max__");
        turi::get_builtin_group_aggregator(&__p, &v44);
        goto LABEL_98;
      }
      goto LABEL_91;
    }
LABEL_88:
    if (v6 == 3)
    {
      turi::check_vector_equal_size(a1, v7);
      std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__vector__sum__");
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__sum__");
    }
    goto LABEL_90;
  }
  if (v8 != 20) {
    goto LABEL_107;
  }
  if (*(void *)a2 == 0x69746C6975625F5FLL
    && *(void *)(a2 + 8) == 0x735F6D75635F5F6ELL
    && *(_DWORD *)(a2 + 16) == 1600089461)
  {
    goto LABEL_88;
  }
  if (*(void *)a2 == 0x69746C6975625F5FLL
    && *(void *)(a2 + 8) == 0x615F6D75635F5F6ELL
    && *(_DWORD *)(a2 + 16) == 1600087926)
  {
LABEL_91:
    if (v6 == 3)
    {
      turi::check_vector_equal_size(a1, v7);
      std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__vector__avg__");
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__avg__");
    }
LABEL_90:
    turi::get_builtin_group_aggregator(&__p, &v44);
    goto LABEL_98;
  }
  if (*(void *)a2 == 0x69746C6975625F5FLL
    && *(void *)(a2 + 8) == 0x6D5F6D75635F5F6ELL
    && *(_DWORD *)(a2 + 16) == 1600092257)
  {
    goto LABEL_94;
  }
  if (*(void *)a2 == 0x69746C6975625F5FLL
    && *(void *)(a2 + 8) == 0x6D5F6D75635F5F6ELL
    && *(_DWORD *)(a2 + 16) == 1600089705)
  {
    goto LABEL_96;
  }
  BOOL v18 = *(void *)a2 == 0x69746C6975625F5FLL
     && *(void *)(a2 + 8) == 0x765F6D75635F5F6ELL
     && *(_DWORD *)(a2 + 16) == 1600090721;
  long long v19 = (uint64_t *)a2;
  if (v18) {
    goto LABEL_97;
  }
LABEL_79:
  uint64_t v34 = *v19;
  uint64_t v35 = v19[1];
  uint64_t v36 = *((unsigned int *)v19 + 4);
  if (v34 != 0x69746C6975625F5FLL || v35 != 0x735F6D75635F5F6ELL || v36 != 1600087156)
  {
LABEL_107:
    __p.__r_.__value_.__r.__words[0] = a2;
    turi::gl_sarray::builtin_cumulative_aggregate(std::string const&)const::$_0::operator()();
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__stdv__");
  turi::get_builtin_group_aggregator(&__p, &v44);
LABEL_98:
  long long v39 = v44;
  long long v44 = 0uLL;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    long long v41 = v39;
    operator delete(__p.__r_.__value_.__l.__data_);
    long long v39 = v41;
  }
  long long v42 = v39;
  BOOL v40 = (std::__shared_weak_count *)*((void *)&v39 + 1);
  if (*((void *)&v39 + 1)) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v39 + 1) + 8), 1uLL, memory_order_relaxed);
  }
  turi::gl_sarray::cumulative_aggregate(a1, &v42, a3);
  if (*((void *)&v42 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v42 + 1));
  }
  if (v40) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v40);
  }
}

void *turi::operator<<(void *a1, turi::gl_sarray *this)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  turi::gl_sarray::head(this, (uint64_t)v36);
  unsigned int v4 = turi::gl_sarray::dtype(this);
  unint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"dtype: ", 7);
  if (v4 > 9) {
    int v6 = "undefined";
  }
  else {
    int v6 = off_2646D6CE0[v4];
  }
  size_t v7 = strlen(v6);
  int v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)v6, v7);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"\n", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"Rows: ", 6);
  turi::gl_sarray::size(this);
  uint64_t v9 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)"\n", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"[", 1);
  turi::gl_sarray::range_iterator((turi::gl_sarray *)v36, 0, 0xFFFFFFFFFFFFFFFFLL, v42);
  uint64_t v34 = 0;
  uint64_t v35 = v42;
  uint64_t v10 = *(void *)(v43 + 72) - *(void *)(v43 + 56);
  uint64_t v33 = (void **)*MEMORY[0x263F8C2B8];
  uint64_t v31 = *(void ***)(MEMORY[0x263F8C2B8] + 72);
  std::vector<std::string> v32 = *(void ***)(MEMORY[0x263F8C2B8] + 64);
  char v11 = 1;
  while (v34 != v10)
  {
    memset(v41, 0, 13);
    if (v35 != v41)
    {
      uint64_t v12 = *v35;
      *(atomic_ullong **)((char *)v41 + 5) = *(atomic_ullong **)((char *)v35 + 5);
      v41[0] = v12;
      BYTE4(v41[1]) = *((unsigned char *)v35 + 12);
      if (BYTE4(v41[1]) <= 9u && ((1 << SBYTE4(v41[1])) & 0x33C) != 0) {
        atomic_fetch_add(v41[0], 1uLL);
      }
    }
    if ((v11 & 1) == 0) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)",", 1);
    }
    if (v4 == 2) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"", 1);
    }
    if (BYTE4(v41[1]) == 7)
    {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"None", 4);
    }
    else
    {
      switch(BYTE4(v41[1]))
      {
        case 0:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v38);
          std::ostream::operator<<();
          std::stringbuf::str();
          goto LABEL_28;
        case 1:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v38);
          std::ostream::operator<<();
          std::stringbuf::str();
LABEL_28:
          v38[0] = v33;
          *(void ***)((char *)v38 + (void)*(v33 - 3)) = v32;
          v38[2] = v31;
          v38[3] = (void **)(MEMORY[0x263F8C318] + 16);
          if (v39 < 0) {
            operator delete(v38[11]);
          }
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x22A614E30](&v40);
          break;
        case 2:
          if (*((char *)v41[0] + 31) < 0)
          {
            std::string::__init_copy_ctor_external(&v37, *((const std::string::value_type **)v41[0] + 1), v41[0][2]);
          }
          else
          {
            long long v14 = *(_OWORD *)(v41[0] + 1);
            v37.__r_.__value_.__r.__words[2] = v41[0][3];
            *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v14;
          }
          break;
        case 3:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v38, v41[0] + 1);
          break;
        case 4:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v38, v41[0] + 1);
          break;
        case 5:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v38, v41[0] + 1);
          break;
        case 6:
          turi::flexible_type_impl::get_string_visitor::operator()((turi::flexible_type_impl *)v41, &v37);
          break;
        case 8:
          turi::flexible_type_impl::get_string_visitor::operator()();
          break;
        case 9:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v38, v41[0] + 1);
          break;
        default:
          turi::flexible_type_fail(0);
          __break(1u);
          return result;
      }
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v15 = &v37;
      }
      else {
        uint64_t v15 = (std::string *)v37.__r_.__value_.__r.__words[0];
      }
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v37.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v15, size);
      if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v37.__r_.__value_.__l.__data_);
      }
    }
    if (v4 == 2) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"", 1);
    }
    switch(BYTE4(v41[1]))
    {
      case 2:
        if (atomic_fetch_add(v41[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          long long v17 = v41[0];
          if (v41[0])
          {
            if (*((char *)v41[0] + 31) < 0) {
              operator delete(*((void **)v41[0] + 1));
            }
            BOOL v18 = v17;
            uint64_t v19 = 0x1012C404EF22A49;
            goto LABEL_74;
          }
        }
        break;
      case 3:
        if (atomic_fetch_add(v41[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v26 = v41[0];
          if (v41[0])
          {
            uint64_t v27 = (void *)v41[0][1];
            if (v27)
            {
              v41[0][2] = (atomic_ullong)v27;
              operator delete(v27);
            }
            BOOL v18 = v26;
            uint64_t v19 = 0x1080C409938AC02;
            goto LABEL_74;
          }
        }
        break;
      case 4:
        if (atomic_fetch_add(v41[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v20 = v41[0];
          if (v41[0])
          {
            v38[0] = (void **)(v41[0] + 1);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](v38);
            goto LABEL_69;
          }
        }
        break;
      case 5:
        if (atomic_fetch_add(v41[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v20 = v41[0];
          if (v41[0])
          {
            v38[0] = (void **)(v41[0] + 1);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](v38);
LABEL_69:
            BOOL v18 = v20;
            uint64_t v19 = 0x1020C405E66F15BLL;
            goto LABEL_74;
          }
        }
        break;
      case 8:
        if (atomic_fetch_add(v41[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v28 = v41[0];
          if (v41[0])
          {
            boost::detail::shared_count::~shared_count((atomic_uint **)v41[0] + 2);
            BOOL v18 = v28;
            unsigned int v25 = -235920773;
            goto LABEL_73;
          }
        }
        break;
      case 9:
        if (atomic_fetch_add(v41[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          unsigned int v21 = v41[0];
          if (v41[0])
          {
            uint64_t v22 = (void *)v41[0][6];
            if (v22)
            {
              v41[0][7] = (atomic_ullong)v22;
              operator delete(v22);
            }
            uint64_t v23 = (void *)v21[3];
            if (v23)
            {
              v21[4] = (atomic_ullong)v23;
              operator delete(v23);
            }
            uint64_t v24 = (std::__shared_weak_count *)v21[2];
            if (v24) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v24);
            }
            BOOL v18 = v21;
            unsigned int v25 = 2071181815;
LABEL_73:
            uint64_t v19 = v25 | 0x1030C4000000000;
LABEL_74:
            MEMORY[0x22A614FA0](v18, v19);
          }
        }
        break;
      default:
        break;
    }
    turi::gl_sarray_range::iterator::increment((turi::gl_sarray_range::iterator *)&v34);
    char v11 = 0;
  }
  turi::gl_sarray_range::~gl_sarray_range((turi::gl_sarray_range *)v42);
  uint64_t v29 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"]", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v29, (uint64_t)"\n", 1);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v36);
  return a1;
}

void sub_223EDC454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28)
{
}

uint64_t turi::gl_sarray_range::begin(turi::gl_sarray_range *this)
{
  return 0;
}

uint64_t turi::gl_sarray_range::end(turi::gl_sarray_range *this)
{
  return *(void *)(*((void *)this + 2) + 72) - *(void *)(*((void *)this + 2) + 56);
}

void turi::sarray<turi::flexible_type>::get_reader(uint64_t a1)
{
  assert_msg(*(unsigned char *)(a1 + 249) == 0, "Cannot open an SArraying which is still writing.");
  operator new();
}

{
  assert_msg(*(unsigned __int8 *)(a1 + 248), "Invalid SArray");
  assert_msg(*(unsigned char *)(a1 + 249) == 0, "Cannot open an SArray which is still writing.");
  operator new();
}

{
  assert_msg(*(unsigned __int8 *)(a1 + 248), "Invalid SArray");
  assert_msg(*(unsigned char *)(a1 + 249) == 0, "Cannot open an SArray which is still writing.");
  operator new();
}

void sub_223EDC788(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  _Unwind_Resume(a1);
}

void std::shared_ptr<turi::sarray_reader<turi::flexible_type>>::operator=[abi:ne180100]<turi::sarray_reader<turi::flexible_type>,std::default_delete<turi::sarray_reader<turi::flexible_type>>,void>()
{
}

void **turi::gl_sarray_range::gl_sarray_range(void **a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v20 = a4;
  uint64_t v21 = a3;
  *a1 = 0;
  *((_DWORD *)a1 + 2) = 0;
  *((unsigned char *)a1 + 12) = 0;
  a1[2] = 0;
  unint64_t v5 = a1 + 2;
  a1[3] = 0;
  std::allocate_shared[abi:ne180100]<turi::sarray_reader_buffer<turi::flexible_type>,std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,std::shared_ptr<turi::sarray_reader<turi::flexible_type>> &,unsigned long &,unsigned long &,void>(a2, &v21, &v20, &v19);
  long long v6 = v19;
  long long v19 = 0uLL;
  size_t v7 = (std::__shared_weak_count *)a1[3];
  *((_OWORD *)a1 + 1) = v6;
  if (v7)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    if (*((void *)&v19 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v19 + 1));
    }
  }
  if ((*v5)[11] < (unint64_t)(*v5)[9])
  {
    uint64_t v8 = turi::sarray_reader_buffer<turi::flexible_type>::next(*v5);
    if ((void **)v8 != a1)
    {
      switch(*((unsigned char *)a1 + 12))
      {
        case 2:
          if (atomic_fetch_add(*a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v9 = (uint64_t)*a1;
            if (!*a1) {
              goto LABEL_32;
            }
            if (*(char *)(v9 + 31) < 0) {
              operator delete(*(void **)(v9 + 8));
            }
            uint64_t v10 = (void *)v9;
            uint64_t v11 = 0x1012C404EF22A49;
            goto LABEL_31;
          }
          break;
        case 3:
          if (atomic_fetch_add(*a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v12 = *a1;
            if (!*a1) {
              goto LABEL_32;
            }
            size_t v13 = (void *)v12[1];
            if (v13)
            {
              v12[2] = (atomic_ullong)v13;
              operator delete(v13);
            }
            uint64_t v10 = v12;
            uint64_t v11 = 0x1080C409938AC02;
            goto LABEL_31;
          }
          break;
        case 4:
          if (atomic_fetch_add(*a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v14 = *a1;
            if (!*a1) {
              goto LABEL_32;
            }
            *(void *)&long long v19 = v14 + 1;
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v19);
            goto LABEL_23;
          }
          break;
        case 5:
          if (atomic_fetch_add(*a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v14 = *a1;
            if (!*a1) {
              goto LABEL_32;
            }
            *(void *)&long long v19 = v14 + 1;
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v19);
LABEL_23:
            uint64_t v10 = v14;
            uint64_t v11 = 0x1020C405E66F15BLL;
            goto LABEL_31;
          }
          break;
        case 8:
          if (atomic_fetch_add(*a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v15 = *a1;
            if (!*a1) {
              goto LABEL_32;
            }
            boost::detail::shared_count::~shared_count((atomic_uint **)v15 + 2);
            uint64_t v10 = v15;
            unsigned int v16 = -235920773;
            goto LABEL_30;
          }
          break;
        case 9:
          if (atomic_fetch_add(*a1, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            if (*a1)
            {
              uint64_t v10 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*a1);
              unsigned int v16 = 2071181815;
LABEL_30:
              uint64_t v11 = v16 | 0x1030C4000000000;
LABEL_31:
              MEMORY[0x22A614FA0](v10, v11);
            }
LABEL_32:
            *a1 = 0;
          }
          break;
        default:
          break;
      }
      long long v17 = *(void **)v8;
      *(void **)((char *)a1 + 5) = *(void **)(v8 + 5);
      *a1 = v17;
      *((unsigned char *)a1 + 12) = *(unsigned char *)(v8 + 12);
      *(unsigned char *)(v8 + 12) = 0;
    }
  }
  return a1;
}

void sub_223EDCAC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, atomic_ullong *volatile a9)
{
  uint64_t v11 = (std::__shared_weak_count *)*((void *)v9 + 3);
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  switch(*((unsigned char *)v9 + 12))
  {
    case 2:
      if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_30;
      }
      atomic_ullong *volatile v12 = *v9;
      if (!*v9) {
        goto LABEL_29;
      }
      if (*((char *)v12 + 31) < 0) {
        operator delete((void *)v12[1]);
      }
      size_t v13 = v12;
      uint64_t v14 = 0x1012C404EF22A49;
      goto LABEL_28;
    case 3:
      if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_30;
      }
      atomic_ullong *volatile v17 = *v9;
      if (!*v9) {
        goto LABEL_29;
      }
      BOOL v18 = (void *)v17[1];
      if (v18)
      {
        v17[2] = (atomic_ullong)v18;
        operator delete(v18);
      }
      size_t v13 = v17;
      uint64_t v14 = 0x1080C409938AC02;
      goto LABEL_28;
    case 4:
      if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_30;
      }
      atomic_ullong *volatile v15 = *v9;
      if (!*v9) {
        goto LABEL_29;
      }
      a9 = v15 + 1;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
      goto LABEL_23;
    case 5:
      if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_30;
      }
      atomic_ullong *volatile v15 = *v9;
      if (!*v9) {
        goto LABEL_29;
      }
      a9 = v15 + 1;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
LABEL_23:
      size_t v13 = v15;
      uint64_t v14 = 0x1020C405E66F15BLL;
      goto LABEL_28;
    case 8:
      if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_30;
      }
      atomic_ullong *volatile v19 = *v9;
      if (!*v9) {
        goto LABEL_29;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)v19 + 2);
      size_t v13 = v19;
      unsigned int v16 = -235920773;
      goto LABEL_27;
    case 9:
      if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_30;
      }
      if (!*v9) {
        goto LABEL_29;
      }
      size_t v13 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*(void **)v9);
      unsigned int v16 = 2071181815;
LABEL_27:
      uint64_t v14 = v16 | 0x1030C4000000000;
LABEL_28:
      MEMORY[0x22A614FA0](v13, v14);
LABEL_29:
      *uint64_t v9 = 0;
LABEL_30:
      *uint64_t v9 = 0;
      *((_DWORD *)v9 + 2) = 0;
      *((unsigned char *)v9 + 12) = 0;
      _Unwind_Resume(exception_object);
      return;
    default:
      goto LABEL_30;
  }
}

uint64_t turi::sarray_reader_buffer<turi::flexible_type>::next(uint64_t *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = *a1;
  if (v2 == (a1[1] - *a1) >> 4)
  {
    uint64_t v4 = a1[8];
    if (a1[10] >= (unint64_t)(a1[9] - v4)) {
      uint64_t v5 = a1[9] - v4;
    }
    else {
      uint64_t v5 = a1[10];
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(*(void *)a1[5] + 48))(a1[5], v4, v5 + v4, a1);
    uint64_t v2 = 0;
    a1[8] += v5;
    uint64_t v3 = *a1;
  }
  ++a1[11];
  a1[6] = v2 + 1;
  return v3 + 16 * v2;
}

atomic_ullong *turi::gl_sarray_range::iterator::increment(turi::gl_sarray_range::iterator *this)
{
  uint64_t v2 = *((void *)this + 1);
  ++*(void *)this;
  atomic_ullong *volatile result = *(atomic_ullong *volatile *)(v2 + 16);
  if (result[11] < (unint64_t)result[9])
  {
    atomic_ullong *volatile result = (atomic_ullong *volatile)turi::sarray_reader_buffer<turi::flexible_type>::next(result);
    uint64_t v4 = *((void *)this + 1);
    if (result != (atomic_ullong *volatile)v4)
    {
      atomic_ullong *volatile v5 = result;
      switch(*(unsigned char *)(v4 + 12))
      {
        case 2:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v6 = *(atomic_ullong *volatile *)v4;
            if (!*(void *)v4) {
              goto LABEL_29;
            }
            if (*((char *)v6 + 31) < 0) {
              operator delete((void *)v6[1]);
            }
            size_t v7 = v6;
            uint64_t v8 = 0x1012C404EF22A49;
            goto LABEL_28;
          }
          break;
        case 3:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v9 = *(atomic_ullong *volatile *)v4;
            if (!*(void *)v4) {
              goto LABEL_29;
            }
            uint64_t v10 = (void *)v9[1];
            if (v10)
            {
              v9[2] = (atomic_ullong)v10;
              operator delete(v10);
            }
            size_t v7 = v9;
            uint64_t v8 = 0x1080C409938AC02;
            goto LABEL_28;
          }
          break;
        case 4:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v4;
            if (!*(void *)v4) {
              goto LABEL_29;
            }
            atomic_ullong *volatile v15 = (void **)(v11 + 1);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v15);
            goto LABEL_20;
          }
          break;
        case 5:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v11 = *(atomic_ullong *volatile *)v4;
            if (!*(void *)v4) {
              goto LABEL_29;
            }
            atomic_ullong *volatile v15 = (void **)(v11 + 1);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v15);
LABEL_20:
            size_t v7 = v11;
            uint64_t v8 = 0x1020C405E66F15BLL;
            goto LABEL_28;
          }
          break;
        case 8:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)v4;
            if (!*(void *)v4) {
              goto LABEL_29;
            }
            boost::detail::shared_count::~shared_count((atomic_uint **)v12 + 2);
            size_t v7 = v12;
            unsigned int v13 = -235920773;
            goto LABEL_27;
          }
          break;
        case 9:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile result = *(atomic_ullong *volatile *)v4;
            if (*(void *)v4)
            {
              size_t v7 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(result);
              unsigned int v13 = 2071181815;
LABEL_27:
              uint64_t v8 = v13 | 0x1030C4000000000;
LABEL_28:
              atomic_ullong *volatile result = (atomic_ullong *volatile)MEMORY[0x22A614FA0](v7, v8);
            }
LABEL_29:
            *(void *)uint64_t v4 = 0;
          }
          break;
        default:
          break;
      }
      atomic_ullong v14 = *v5;
      *(void *)(v4 + 5) = *(atomic_ullong *volatile)((char *)v5 + 5);
      *(void *)uint64_t v4 = v14;
      *(unsigned char *)(v4 + 12) = *((unsigned char *)v5 + 12);
      *((unsigned char *)v5 + 12) = 0;
    }
  }
  return result;
}

uint64_t turi::gl_sarray_range::iterator::dereference(turi::gl_sarray_range::iterator *this)
{
  return *((void *)this + 1);
}

void turi::gl_sarray_writer_impl::gl_sarray_writer_impl(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  _ZNSt3__115allocate_sharedB8ne180100IN4turi6sarrayINS1_13flexible_typeEEENS_9allocatorIS4_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(&v4);
  long long v2 = v4;
  long long v4 = 0uLL;
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v2;
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    if (*((void *)&v4 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  turi::sarray<turi::flexible_type>::open_for_write(*(void *)a1);
}

void sub_223EDD18C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  uint64_t v5 = *(std::__shared_weak_count **)(v3 + 8);
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  _Unwind_Resume(a1);
}

void turi::sarray<turi::flexible_type>::open_for_write(uint64_t a1)
{
  long long v2 = (turi::fileio::fixed_size_cache_manager *)assert_msg(*(unsigned char *)(a1 + 248) == 0, "Attempting to init an SArray which has already been inited");
  uint64_t instance = turi::fileio::fixed_size_cache_manager::get_instance(v2);
  std::string::basic_string[abi:ne180100]<0>(__p, ".sidx");
  turi::fileio::fixed_size_cache_manager::get_temp_cache_id(instance, (uint64_t)__p, &__str);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  std::string::operator=((std::string *)(a1 + 152), &__str);
  operator new();
}

void sub_223EDD4A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v28 - 33) < 0) {
    operator delete(*(void **)(v28 - 56));
  }
  _Unwind_Resume(exception_object);
}

void turi::sarray<turi::flexible_type>::set_type(uint64_t a1, int a2)
{
  assert_msg(*(unsigned __int8 *)(a1 + 248), "Invalid SArray");
  assert_msg(*(unsigned __int8 *)(a1 + 249), "SArray not opened for writing");
  std::string::basic_string[abi:ne180100]<0>(v5, "__type__");
  std::to_string(&__p, a2);
  turi::sarray<turi::flexible_type>::set_metadata(a1, (long long *)v5, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
}

void sub_223EDD5C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::resize(uint64_t *result, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((result[1] - *result) >> 5);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3) {
    return (uint64_t *)std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__append(result, v4);
  }
  if (!v3) {
    return std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__base_destruct_at_end[abi:ne180100](result, *result + 96 * a2);
  }
  return result;
}

uint64_t turi::gl_sarray_writer_impl::write(turi::gl_sarray_writer_impl *this, const turi::flexible_type *a2, unint64_t a3)
{
  uint64_t v3 = *((void *)this + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((*((void *)this + 3) - v3) >> 5) <= a3) {
    turi::gl_sarray_writer_impl::write(turi::flexible_type const&,unsigned long)::$_0::operator()();
  }
  uint64_t v4 = *(void *)(v3 + 96 * a3 + 24);
  if (!v4) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  char v5 = *(uint64_t (**)(void))(*(void *)v4 + 48);
  return v5();
}

void turi::gl_sarray_writer_impl::write(turi::flexible_type const&,unsigned long)::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sarray.cpp", 96);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  unint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"segmentid", 9);
  char v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"<", 1);
  char v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"m_output_iterators.size()", 25);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  size_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  atomic_ullong *volatile v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"<", 1);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  atomic_ullong *volatile v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    atomic_ullong *volatile v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sarray.cpp", "operator()", 986, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  unsigned int v13 = v16;
  turi::gl_sarray_writer_impl::write(turi::flexible_type const&,unsigned long)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EDD85C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::gl_sarray_writer_impl::close(turi::gl_sarray_writer_impl *this)
{
  std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__base_destruct_at_end[abi:ne180100]((void *)this + 2, *((void *)this + 2));
  (*(void (**)(void))(**(void **)this + 40))();
  _ZNSt3__115allocate_sharedB8ne180100IN4turi12unity_sarrayENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(&v5);
  uint64_t v2 = v5;
  uint64_t v3 = *((void *)this + 1);
  v4[0] = *(void *)this;
  v4[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  turi::unity_sarray::construct_from_sarray(v2, v4);
}

void sub_223EDDA28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, uint64_t a14, std::__shared_weak_count *a15)
{
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }
  if (a15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a15);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sarray_writer::gl_sarray_writer(void *a1)
{
  *a1 = 0;
  operator new();
}

void sub_223EDDAC0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v2, 0x20C40769AC3DALL);
  uint64_t v4 = *v1;
  *uint64_t v1 = 0;
  if (v4) {
    std::default_delete<turi::gl_sarray_writer_impl>::operator()[abi:ne180100]((uint64_t)v1, v4);
  }
  _Unwind_Resume(a1);
}

uint64_t turi::gl_sarray_writer::write(turi::gl_sarray_writer_impl **this, const turi::flexible_type *a2, unint64_t a3)
{
  return turi::gl_sarray_writer_impl::write(*this, a2, a3);
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::str[abi:ne180100]()
{
  return std::stringbuf::str();
}

uint64_t std::function<void ()(unsigned long,unsigned long)>::operator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v3 + 48))(v3, &v6, &v5);
}

uint64_t boost::detail::function::functor_manager<turi::in_parallel(std::function<void ()(unsigned long,unsigned long)> const&)::{lambda(void)#1}>::manage(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }
      atomic_ullong *volatile result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246D1E54 & 0x7FFFFFFFFFFFFFFFLL)
        || (atomic_ullong *volatile result = strcmp((const char *)result, (const char *)(0x80000002246D1E54 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = v4;
      }
      else
      {
        *(void *)a2 = 0;
      }
    }
  }
  else
  {
    long long v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }
  return result;
}

uint64_t boost::detail::function::void_function_obj_invoker0<turi::in_parallel(std::function<void ()(unsigned long,unsigned long)> const&)::{lambda(void)#1},void>::invoke(uint64_t a1)
{
  return std::function<void ()(unsigned long,unsigned long)>::operator()(*(void *)a1, *(unsigned int *)(a1 + 8), *(void *)(a1 + 16));
}

void turi::gl_sarray_range::~gl_sarray_range(turi::gl_sarray_range *this)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 3);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  switch(*((unsigned char *)this + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v3 = *(void *)this;
        if (*(void *)this)
        {
          if (*(char *)(v3 + 31) < 0) {
            operator delete(*(void **)(v3 + 8));
          }
          uint64_t v4 = (void *)v3;
          uint64_t v5 = 0x1012C404EF22A49;
          goto LABEL_34;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v6 = *(void **)this;
        if (*(void *)this)
        {
          size_t v7 = (void *)v6[1];
          if (v7)
          {
            v6[2] = v7;
            operator delete(v7);
          }
          uint64_t v4 = v6;
          uint64_t v5 = 0x1080C409938AC02;
          goto LABEL_34;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v8 = *(void *)this;
        if (*(void *)this)
        {
          char v15 = (void **)(v8 + 8);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v15);
          goto LABEL_20;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v8 = *(void *)this;
        if (*(void *)this)
        {
          char v15 = (void **)(v8 + 8);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v15);
LABEL_20:
          uint64_t v4 = (void *)v8;
          uint64_t v5 = 0x1020C405E66F15BLL;
          goto LABEL_34;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v9 = *(void *)this;
        if (*(void *)this)
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)(v9 + 16));
          uint64_t v4 = (void *)v9;
          unsigned int v10 = -235920773;
          goto LABEL_33;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v11 = *(void **)this;
        if (*(void *)this)
        {
          atomic_ullong *volatile v12 = (void *)v11[6];
          if (v12)
          {
            v11[7] = v12;
            operator delete(v12);
          }
          unsigned int v13 = (void *)v11[3];
          if (v13)
          {
            void v11[4] = v13;
            operator delete(v13);
          }
          atomic_ullong v14 = (std::__shared_weak_count *)v11[2];
          if (v14) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v14);
          }
          uint64_t v4 = v11;
          unsigned int v10 = 2071181815;
LABEL_33:
          uint64_t v5 = v10 | 0x1030C4000000000;
LABEL_34:
          MEMORY[0x22A614FA0](v4, v5);
        }
      }
      break;
    default:
      break;
  }
  *(void *)this = 0;
  *((_DWORD *)this + 2) = 0;
  *((unsigned char *)this + 12) = 0;
}

void *std::__function::__value_func<void ()(turi::flexible_type const&)>::operator=[abi:ne180100](void *a1, uint64_t a2)
{
  std::__function::__value_func<void ()(turi::flexible_type const&)>::operator=[abi:ne180100](a1);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v4;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

void *std::__function::__value_func<void ()(turi::flexible_type const&)>::operator=[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *std::__function::__value_func<void ()(turi::flexible_type &&)>::operator=[abi:ne180100](void *a1, uint64_t a2)
{
  std::__function::__value_func<void ()(turi::flexible_type &&)>::operator=[abi:ne180100](a1);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v4;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

void *std::__function::__value_func<void ()(turi::flexible_type &&)>::operator=[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *std::__function::__value_func<void ()(turi::flexible_type &&)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *std::__function::__value_func<void ()(turi::flexible_type const&)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *std::vector<turi::flex_type_enum>::__init_with_size[abi:ne180100]<turi::flex_type_enum*,turi::flex_type_enum*>(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    atomic_ullong *volatile result = std::vector<turi::flex_type_enum>::__vallocate[abi:ne180100](result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      atomic_ullong *volatile result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_223EDE1C8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **std::__tree<turi::flex_type_enum>::__emplace_unique_key_args<turi::flex_type_enum,turi::flex_type_enum>(uint64_t **a1, char *a2, unsigned char *a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        size_t v8 = (uint64_t **)v5;
        int v9 = *((char *)v5 + 25);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    size_t v8 = a1 + 1;
LABEL_10:
    unsigned int v10 = (uint64_t *)operator new(0x20uLL);
    *((unsigned char *)v10 + 25) = *a3;
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

void std::__function::__func<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1,std::allocator<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1>,void ()(unsigned long,unsigned long)>::~__func()
{
}

__n128 std::__function::__func<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1,std::allocator<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1>,void ()(unsigned long,unsigned long)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v2 = &unk_26D7595A0;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 std::__function::__func<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1,std::allocator<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1>,void ()(unsigned long,unsigned long)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26D7595A0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void std::__function::__func<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1,std::allocator<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1>,void ()(unsigned long,unsigned long)>::operator()(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v102 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a2;
  uint64_t v5 = **(void **)(a1 + 8);
  unint64_t v6 = v5 * *a2;
  unint64_t v7 = v6 / *a3;
  turi::gl_sarray::range_iterator(*(turi::gl_sarray **)(a1 + 16), v7, (v5 + v6) / *a3, v100);
  uint64_t v94 = 0;
  uint64_t v95 = (unsigned __int8 *)v100;
  uint64_t v8 = *(void *)(v101 + 72) - *(void *)(v101 + 56);
  uint64_t v9 = -1;
  while (v94 != v8)
  {
    unsigned int v10 = v95;
    switch(byte_268081524)
    {
      case 0:
        switch(v95[12])
        {
          case 0u:
            if (*(void *)v95 == turi::FLEX_UNDEFINED) {
              goto LABEL_98;
            }
            goto LABEL_79;
          case 1u:
            double v67 = *(double *)v95;
            uint64_t v68 = turi::FLEX_UNDEFINED;
            goto LABEL_118;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_79;
          case 6u:
            if (turi::FLEX_UNDEFINED == (uint64_t)(*(void *)v95 << 8) >> 8 && !*((_DWORD *)v95 + 2)) {
              goto LABEL_98;
            }
            goto LABEL_79;
          default:
            goto LABEL_145;
        }
      case 1:
        switch(v95[12])
        {
          case 0u:
            double v67 = *(double *)&turi::FLEX_UNDEFINED;
            uint64_t v68 = *(void *)v95;
LABEL_118:
            double v86 = (double)v68;
            goto LABEL_119;
          case 1u:
            double v67 = *(double *)v95;
            double v86 = *(double *)&turi::FLEX_UNDEFINED;
LABEL_119:
            if (v67 != v86) {
              goto LABEL_79;
            }
            goto LABEL_98;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_79;
          case 6u:
            double v85 = vabdd_f64((double)*((int *)v95 + 2) / 1000000.0 + (double)((uint64_t)(*(void *)v95 << 8) >> 8), *(double *)&turi::FLEX_UNDEFINED);
            goto LABEL_123;
          default:
            goto LABEL_145;
        }
      case 2:
        unsigned int v50 = v95[12];
        if (v50 - 3 < 7 || v50 < 2) {
          goto LABEL_79;
        }
        if (v50 != 2) {
          goto LABEL_145;
        }
        double v52 = *(double *)v95;
        if (*(char *)(*(void *)v95 + 31) < 0) {
          size_t v53 = *(void *)(*(void *)&v52 + 16);
        }
        else {
          size_t v53 = *(unsigned __int8 *)(*(void *)v95 + 31);
        }
        if (*(char *)(turi::FLEX_UNDEFINED + 31) < 0) {
          uint64_t v87 = *(void *)(turi::FLEX_UNDEFINED + 16);
        }
        else {
          uint64_t v87 = *(unsigned __int8 *)(turi::FLEX_UNDEFINED + 31);
        }
        if (v53 != v87) {
          goto LABEL_79;
        }
        uint64_t v88 = (unsigned __int8 *)(*(void *)&v52 + 8);
        if ((*(unsigned char *)(*(void *)v95 + 31) & 0x80) != 0) {
          uint64_t v88 = *(unsigned __int8 **)v88;
        }
        int64_t v89 = (unsigned __int8 *)(turi::FLEX_UNDEFINED + 8);
        if ((*(unsigned char *)(turi::FLEX_UNDEFINED + 31) & 0x80) != 0)
        {
          int64_t v89 = *(unsigned __int8 **)v89;
          if ((*(unsigned char *)(*(void *)v95 + 31) & 0x80) == 0)
          {
LABEL_134:
            if (!v53) {
              goto LABEL_98;
            }
            do
            {
              if (*v88 != *v89) {
                goto LABEL_79;
              }
              ++v88;
              ++v89;
              --v53;
            }
            while (v53);
            goto LABEL_98;
          }
        }
        else if ((*(unsigned char *)(*(void *)v95 + 31) & 0x80) == 0)
        {
          goto LABEL_134;
        }
        if (memcmp(v88, v89, v53)) {
          goto LABEL_79;
        }
LABEL_98:
        ++v7;
        turi::gl_sarray_range::iterator::increment((turi::gl_sarray_range::iterator *)&v94);
        break;
      case 3:
        unsigned int v54 = v95[12];
        if (v54 > 9) {
          goto LABEL_145;
        }
        if (v54 != 3) {
          goto LABEL_79;
        }
        unsigned int v55 = *(double **)(*(void *)v95 + 8);
        double v56 = *(double **)(*(void *)v95 + 16);
        unint64_t v57 = v56 - v55;
        unsigned int v58 = *(double **)(turi::FLEX_UNDEFINED + 8);
        if (v57 != (uint64_t)(*(void *)(turi::FLEX_UNDEFINED + 16) - (void)v58) >> 3) {
          goto LABEL_79;
        }
        if (v56 == v55) {
          goto LABEL_98;
        }
        if (v57 <= 1) {
          uint64_t v59 = 1;
        }
        else {
          uint64_t v59 = v56 - v55;
        }
        if (*v55 != *v58) {
          goto LABEL_79;
        }
        unint64_t v60 = 0;
        std::string::size_type v61 = v58 + 1;
        uint64_t v62 = v55 + 1;
        uint64_t v63 = v59 - 1;
        while (v63 != v60)
        {
          double v64 = v62[v60];
          double v65 = v61[v60++];
          if (v64 != v65)
          {
            if (v60 < v57) {
              goto LABEL_79;
            }
            goto LABEL_98;
          }
        }
        goto LABEL_98;
      case 4:
        unsigned int v11 = v95[12];
        if (v11 > 9) {
          goto LABEL_145;
        }
        if (v11 != 4) {
          goto LABEL_79;
        }
        char v12 = turi::flexible_type_impl::approx_equality_operator::operator()((uint64_t)&v96, (uint64_t *)(*(void *)v95 + 8), (void *)(turi::FLEX_UNDEFINED + 8));
        goto LABEL_108;
      case 5:
        unsigned int v69 = v95[12];
        if (v69 > 9) {
          goto LABEL_145;
        }
        if (v69 != 5) {
          goto LABEL_79;
        }
        char v12 = turi::flexible_type_impl::approx_equality_operator::operator()((uint64_t)&v96, (uint64_t **)(*(void *)v95 + 8), (uint64_t **)(turi::FLEX_UNDEFINED + 8));
        goto LABEL_108;
      case 6:
        switch(v95[12])
        {
          case 0u:
            if (*(void *)v95 == turi::FLEX_UNDEFINED << 8 >> 8 && !dword_268081520) {
              goto LABEL_98;
            }
            goto LABEL_79;
          case 1u:
            double v85 = vabdd_f64(*(double *)v95, (double)dword_268081520 / 1000000.0 + (double)(turi::FLEX_UNDEFINED << 8 >> 8));
LABEL_123:
            if (v85 < 0.0000005) {
              goto LABEL_98;
            }
            goto LABEL_79;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_79;
          case 6u:
            if (((turi::FLEX_UNDEFINED ^ *(void *)v95) & 0xFFFFFFFFFFFFFFLL) == 0
              && *((_DWORD *)v95 + 2) == dword_268081520)
            {
              goto LABEL_98;
            }
            goto LABEL_79;
          default:
            goto LABEL_145;
        }
      case 7:
        unsigned int v66 = v95[12];
        if (v66 < 7 || v66 - 8 < 2) {
          goto LABEL_79;
        }
        if (v66 != 7) {
          goto LABEL_145;
        }
        goto LABEL_98;
      case 8:
        unsigned int v70 = v95[12];
        if (v70 < 8 || v70 == 9) {
          goto LABEL_79;
        }
        if (v70 != 8) {
          goto LABEL_145;
        }
        char v12 = turi::image_type::operator==(*(void *)v95 + 8, turi::FLEX_UNDEFINED + 8);
LABEL_108:
        if (v12) {
          goto LABEL_98;
        }
        goto LABEL_79;
      case 9:
        unsigned int v13 = v95[12];
        if (v13 < 9) {
          goto LABEL_79;
        }
        if (v13 != 9)
        {
LABEL_145:
          turi::flexible_type_fail(0);
          __break(1u);
LABEL_147:
          v91 = *(uint64_t **)(*(void *)v10 + 24);
          uint64_t v90 = *(uint64_t **)(*(void *)v10 + 32);
          if (v90 != v91 && *(void *)(*(void *)v10 + 8))
          {
            uint64_t v92 = 1;
            do
            {
              uint64_t v93 = *v91++;
              v92 *= v93;
            }
            while (v91 != v90);
          }
LABEL_146:
          turi::check_vector_equal_size(turi::gl_sarray const&)::$_0::operator()();
        }
        uint64_t v14 = turi::FLEX_UNDEFINED;
        char v15 = *(void **)v95;
        if (turi::FLEX_UNDEFINED == *(void *)v95) {
          goto LABEL_98;
        }
        if (!turi::flexible_type_impl::ndarray<double>::same_shape((uint64_t)(v15 + 1), turi::FLEX_UNDEFINED + 8)) {
          goto LABEL_79;
        }
        atomic_ullong *volatile v17 = (char *)v15[3];
        unsigned int v16 = (char *)v15[4];
        uint64_t v18 = v16 - v17;
        if (v16 == v17) {
          goto LABEL_98;
        }
        if (!v15[1]) {
          goto LABEL_98;
        }
        uint64_t v19 = 1;
        do
        {
          uint64_t v20 = *(void *)v17;
          v17 += 8;
          v19 *= v20;
        }
        while (v17 != v16);
        if (!v19) {
          goto LABEL_98;
        }
        uint64_t v97 = 0;
        std::vector<unsigned long>::vector(&v98, v18 >> 3, &v97);
        uint64_t v21 = v98;
        uint64_t v22 = v99;
        uint64_t v23 = **(void **)(v14 + 8);
        uint64_t v24 = (char *)v99 - (char *)v98;
        unint64_t v25 = v99 - v98;
        unint64_t v26 = v25 - 1;
        if (v25 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v99 - v98;
        }
        while (1)
        {
          if (v22 == v21)
          {
            uint64_t v35 = 0;
            double v36 = *(double *)(*(void *)v15[1] + 8 * v15[9]);
          }
          else
          {
            uint64_t v28 = 0;
            uint64_t v29 = (uint64_t *)v15[6];
            uint64_t v30 = v21;
            uint64_t v31 = v27;
            do
            {
              uint64_t v33 = *v30++;
              uint64_t v32 = v33;
              uint64_t v34 = *v29++;
              v28 += v34 * v32;
              --v31;
            }
            while (v31);
            uint64_t v35 = 0;
            double v36 = *(double *)(*(void *)v15[1] + 8 * (v15[9] + v28));
            std::string v37 = *(uint64_t **)(v14 + 48);
            uint64_t v38 = v21;
            uint64_t v39 = v27;
            do
            {
              uint64_t v41 = *v38++;
              uint64_t v40 = v41;
              uint64_t v42 = *v37++;
              v35 += v42 * v40;
              --v39;
            }
            while (v39);
          }
          if (v36 != *(double *)(v23 + 8 * (*(void *)(v14 + 72) + v35))) {
            break;
          }
          uint64_t v43 = v25;
          uint64_t v44 = v25 - 1;
          if (v24 >= 1)
          {
            uint64_t v45 = v15[3];
            unint64_t v46 = v21[v26] + 1;
            v21[v26] = v46;
            unint64_t v47 = (v24 & 0xFFFFFFFFFFFFFFF8) - 16;
            uint64_t v44 = v25 - 1;
            if (v46 >= *(void *)(v45 + 8 * v26))
            {
              while (1)
              {
                *(uint64_t *)((char *)v21 + v47 + 8) = 0;
                if (v44 <= 0) {
                  break;
                }
                --v44;
                unint64_t v48 = *(uint64_t *)((char *)v21 + v47) + 1;
                *(uint64_t *)((char *)v21 + v47) = v48;
                unint64_t v49 = *(void *)(v45 + v47);
                v47 -= 8;
                if (v48 < v49)
                {
                  uint64_t v43 = 1;
                  goto LABEL_36;
                }
              }
LABEL_39:
              uint64_t v99 = v21;
              operator delete(v21);
              goto LABEL_98;
            }
            uint64_t v43 = 1;
            uint64_t v44 = v25 - 1;
          }
LABEL_36:
          if (!v43 || v44 < 0)
          {
            if (!v21) {
              goto LABEL_98;
            }
            goto LABEL_39;
          }
        }
        if (v21)
        {
          uint64_t v99 = v21;
          operator delete(v21);
        }
LABEL_79:
        if (v9 == -1)
        {
          uint64_t v9 = 1;
          switch(v10[12])
          {
            case 3u:
              atomic_ullong *volatile v76 = (void *)(*(void *)v10 + 8);
              long long v77 = (void *)(*(void *)v10 + 16);
              char v78 = 3;
              goto LABEL_96;
            case 4u:
              atomic_ullong *volatile v76 = (void *)(*(void *)v10 + 8);
              long long v77 = (void *)(*(void *)v10 + 16);
              char v78 = 4;
              goto LABEL_96;
            case 5u:
              atomic_ullong *volatile v76 = (void *)(*(void *)v10 + 8);
              long long v77 = (void *)(*(void *)v10 + 16);
              char v78 = 5;
LABEL_96:
              uint64_t v9 = (uint64_t)(*v77 - *v76) >> v78;
              break;
            case 9u:
              atomic_ullong v83 = *(uint64_t **)(*(void *)v10 + 24);
              char v82 = *(uint64_t **)(*(void *)v10 + 32);
              if (v82 == v83 || !*(void *)(*(void *)v10 + 8))
              {
                uint64_t v9 = 0;
              }
              else
              {
                uint64_t v9 = 1;
                do
                {
                  uint64_t v84 = *v83++;
                  v9 *= v84;
                }
                while (v83 != v82);
              }
              break;
            default:
              break;
          }
          *(void *)(**(void **)(a1 + 24) + 8 * v4) = v9;
        }
        else
        {
          uint64_t v72 = 1;
          switch(v10[12])
          {
            case 3u:
              unsigned int v73 = (void *)(*(void *)v10 + 8);
              atomic_ullong *volatile v74 = (void *)(*(void *)v10 + 16);
              char v75 = 3;
              goto LABEL_86;
            case 4u:
              unsigned int v73 = (void *)(*(void *)v10 + 8);
              atomic_ullong *volatile v74 = (void *)(*(void *)v10 + 16);
              char v75 = 4;
              goto LABEL_86;
            case 5u:
              unsigned int v73 = (void *)(*(void *)v10 + 8);
              atomic_ullong *volatile v74 = (void *)(*(void *)v10 + 16);
              char v75 = 5;
LABEL_86:
              uint64_t v72 = (uint64_t)(*v74 - *v73) >> v75;
              break;
            case 9u:
              uint64_t v80 = *(uint64_t **)(*(void *)v10 + 24);
              uint64_t v79 = *(uint64_t **)(*(void *)v10 + 32);
              if (v79 == v80)
              {
                uint64_t v72 = 0;
              }
              else
              {
                uint64_t v72 = *(void *)(*(void *)v10 + 8);
                if (v72)
                {
                  uint64_t v72 = 1;
                  do
                  {
                    uint64_t v81 = *v80++;
                    v72 *= v81;
                  }
                  while (v80 != v79);
                }
              }
              break;
            default:
              break;
          }
          if (v9 != v72)
          {
            switch(v10[12])
            {
              case 9u:
                goto LABEL_147;
              default:
                goto LABEL_146;
            }
          }
        }
        goto LABEL_98;
      default:
        goto LABEL_145;
    }
  }
  turi::gl_sarray_range::~gl_sarray_range((turi::gl_sarray_range *)v100);
}

void sub_223EDEC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  turi::gl_sarray_range::~gl_sarray_range((turi::gl_sarray_range *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1,std::allocator<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1>,void ()(unsigned long,unsigned long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1,std::allocator<turi::check_vector_equal_size(turi::gl_sarray const&)::$_1>,void ()(unsigned long,unsigned long)>::target_type()
{
}

void *std::__function::__value_func<void ()(unsigned long,unsigned long)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void std::shared_ptr<turi::unity_sarray>::shared_ptr[abi:ne180100]<turi::unity_sarray,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223EDEEC4(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::shared_ptr<turi::unity_sarray>::shared_ptr[abi:ne180100]<turi::unity_sarray,void>(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__shared_ptr_pointer<turi::unity_sarray *,std::shared_ptr<turi::unity_sarray>::__shared_ptr_default_delete<turi::unity_sarray,turi::unity_sarray>,std::allocator<turi::unity_sarray>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::unity_sarray *,std::shared_ptr<turi::unity_sarray>::__shared_ptr_default_delete<turi::unity_sarray,turi::unity_sarray>,std::allocator<turi::unity_sarray>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__function::__value_func<BOOL ()(unsigned long,std::shared_ptr<turi::sframe_rows> const&)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *std::__function::__value_func<BOOL ()(unsigned long,std::shared_ptr<turi::sframe_rows> const&)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void std::pair<std::string const,turi::flexible_type>::pair[abi:ne180100]<char const(&)[11],std::vector<turi::flexible_type> &,0>(void *a1, char *a2)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  v2[3] = 0;
  *(void *)((char *)v2 + 29) = 0;
  *((unsigned char *)v2 + 36) = 4;
  operator new();
}

void sub_223EDF488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  MEMORY[0x22A614FA0](v11, 0x1012C404EF22A49);
  switch(*(unsigned char *)(v10 + 36))
  {
    case 2:
      if (atomic_fetch_add(*v12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_28;
      }
      atomic_ullong *volatile v14 = *v12;
      if (!*v12) {
        goto LABEL_27;
      }
      if (*((char *)v14 + 31) < 0) {
        operator delete((void *)v14[1]);
      }
      char v15 = v14;
      uint64_t v16 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add(*v12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_28;
      }
      atomic_ullong *volatile v17 = *v12;
      if (!*v12) {
        goto LABEL_27;
      }
      uint64_t v18 = (void *)v17[1];
      if (v18)
      {
        v17[2] = (atomic_ullong)v18;
        operator delete(v18);
      }
      char v15 = v17;
      uint64_t v16 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add(*v12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_28;
      }
      atomic_ullong *volatile v19 = *v12;
      if (!*v12) {
        goto LABEL_27;
      }
      a10 = (void **)(v19 + 1);
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a10);
      goto LABEL_18;
    case 5:
      if (atomic_fetch_add(*v12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_28;
      }
      atomic_ullong *volatile v19 = *v12;
      if (!*v12) {
        goto LABEL_27;
      }
      a10 = (void **)(v19 + 1);
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&a10);
LABEL_18:
      char v15 = v19;
      uint64_t v16 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add(*v12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_28;
      }
      atomic_ullong *volatile v20 = *v12;
      if (!*v12) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)v20 + 2);
      char v15 = v20;
      unsigned int v21 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add(*v12, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_28;
      }
      if (!*v12) {
        goto LABEL_27;
      }
      char v15 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*(void **)v12);
      unsigned int v21 = 2071181815;
LABEL_25:
      uint64_t v16 = v21 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v15, v16);
LABEL_27:
      *char v12 = 0;
LABEL_28:
      *(void *)(v10 + 24) = 0;
      *(_DWORD *)(v10 + 32) = 0;
      *(unsigned char *)(v10 + 36) = 0;
      if (*(char *)(v10 + 23) < 0) {
        operator delete(*(void **)v10);
      }
      _Unwind_Resume(a1);
      return;
    default:
      goto LABEL_28;
  }
}

uint64_t std::__function::__value_func<turi::flexible_type ()(turi::flexible_type const&)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

{
  void *v3;
  uint64_t v4;

  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

void *std::pair<std::string,turi::gl_sarray>::pair[abi:ne180100]<char const(&)[2],turi::gl_sarray const&,0>(void *a1, char *a2, const turi::gl_sarray *a3)
{
  uint64_t v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  turi::gl_sarray::gl_sarray((turi::gl_sarray *)(v5 + 3), a3);
  return a1;
}

void sub_223EDF7D0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *std::__find_impl[abi:ne180100]<std::string *,std::string *,char [9],std::__identity>(unsigned __int8 *a1, unsigned __int8 *a2, char *__s)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    size_t v6 = strlen(__s);
    while (1)
    {
      if ((char)v3[23] < 0)
      {
        if (v6 == *((void *)v3 + 1))
        {
          if (v6 == -1) {
LABEL_14:
          }
            std::string::__throw_out_of_range[abi:ne180100]();
          unint64_t v7 = *(unsigned __int8 **)v3;
LABEL_10:
          if (!memcmp(v7, __s, v6)) {
            return v3;
          }
        }
      }
      else if (v6 == v3[23])
      {
        unint64_t v7 = v3;
        if (v6 == -1) {
          goto LABEL_14;
        }
        goto LABEL_10;
      }
      v3 += 24;
      if (v3 == a2) {
        return a2;
      }
    }
  }
  return v3;
}

uint64_t *std::__tree<std::__value_type<std::string,turi::flex_type_enum>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flex_type_enum>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flex_type_enum>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  size_t v6 = (uint64_t **)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__find_equal<std::string>((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    std::__tree<std::__value_type<std::string,turi::flex_type_enum>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flex_type_enum>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flex_type_enum>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)&v8);
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

void std::__tree<std::__value_type<std::string,turi::flex_type_enum>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flex_type_enum>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flex_type_enum>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  unint64_t v7 = (std::string *)(v6 + 32);
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    *((void *)v6 + 6) = *((void *)v8 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v9;
  }
  v6[56] = 0;
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_223EDF9C4(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,MPSRNNMatrixId>,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

uint64_t std::set<turi::flexible_type>::set[abi:ne180100]<std::__wrap_iter<turi::flexible_type*>>(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v5 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a2 != a3)
  {
    uint64_t v7 = a2;
    do
    {
      std::__tree<turi::flexible_type>::__emplace_hint_unique_key_args<turi::flexible_type,turi::flexible_type const&>((uint64_t **)a1, v5, v7, v7, a4);
      v7 += 16;
    }
    while (v7 != a3);
  }
  return a1;
}

void sub_223EDFA4C(_Unwind_Exception *a1)
{
  std::__tree<turi::flexible_type>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<turi::flexible_type>::__emplace_hint_unique_key_args<turi::flexible_type,turi::flexible_type const&>(uint64_t **a1, void *a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v7 = std::__tree<turi::flexible_type>::__find_equal<turi::flexible_type>(a1, a2, &v13, &v12, a3, a5);
  uint64_t v8 = (uint64_t *)*v7;
  if (!*v7)
  {
    long long v9 = (uint64_t **)v7;
    std::__tree<turi::flexible_type>::__construct_node<turi::flexible_type const&>((uint64_t)a1, a4, (uint64_t)v11);
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, v13, v9, v11[0]);
    uint64_t v8 = v11[0];
    v11[0] = 0;
    std::unique_ptr<std::__tree_node<turi::flexible_type,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<turi::flexible_type,void *>>>>::reset[abi:ne180100]((uint64_t)v11, 0);
  }
  return v8;
}

uint64_t *std::__tree<turi::flexible_type>::__find_equal<turi::flexible_type>(void *a1, void *a2, void *a3, uint64_t *a4, uint64_t a5, __n128 a6)
{
  uint64_t v10 = a1 + 1;
  if (a1 + 1 != a2
    && !std::less<turi::flexible_type>::operator()[abi:ne180100](a6, (uint64_t)(a1 + 2), a5, (uint64_t)(a2 + 4)))
  {
    if (!std::less<turi::flexible_type>::operator()[abi:ne180100](a6, (uint64_t)(a1 + 2), (uint64_t)(a2 + 4), a5))
    {
      *a3 = a2;
      *a4 = (uint64_t)a2;
      return a4;
    }
    a4 = a2 + 1;
    uint64_t v15 = a2[1];
    if (v15)
    {
      uint64_t v16 = (void *)a2[1];
      do
      {
        atomic_ullong *volatile v17 = v16;
        uint64_t v16 = (void *)*v16;
      }
      while (v16);
    }
    else
    {
      unsigned int v21 = a2;
      do
      {
        atomic_ullong *volatile v17 = (void *)v21[2];
        BOOL v19 = *v17 == (void)v21;
        unsigned int v21 = v17;
      }
      while (!v19);
    }
    if (v17 != v10)
    {
      if (!std::less<turi::flexible_type>::operator()[abi:ne180100](v14, (uint64_t)(a1 + 2), a5, (uint64_t)(v17 + 4)))goto LABEL_28; {
      uint64_t v15 = *a4;
      }
    }
    if (v15)
    {
      *a3 = v17;
      return v17;
    }
    else
    {
      *a3 = a2;
    }
    return a4;
  }
  if ((void *)*a1 == a2)
  {
    uint64_t v13 = a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v13;
      return v13 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  uint64_t v12 = (void *)*a2;
  if (*a2)
  {
    do
    {
      uint64_t v13 = v12;
      uint64_t v12 = (void *)v12[1];
    }
    while (v12);
  }
  else
  {
    uint64_t v18 = a2;
    do
    {
      uint64_t v13 = (void *)v18[2];
      BOOL v19 = *v13 == (void)v18;
      uint64_t v18 = v13;
    }
    while (v19);
  }
  if (std::less<turi::flexible_type>::operator()[abi:ne180100](a6, (uint64_t)(a1 + 2), (uint64_t)(v13 + 4), a5))goto LABEL_16; {
LABEL_28:
  }
  return std::__tree<turi::flexible_type>::__find_equal<turi::flexible_type>((uint64_t)a1, a3, a5, v20);
}

char *std::__tree<turi::flexible_type>::__construct_node<turi::flexible_type const&>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t result = (char *)operator new(0x30uLL);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  *((void *)result + 4) = 0;
  uint64_t v7 = (atomic_ullong *volatile *)(result + 32);
  *((_DWORD *)result + 1std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
  result[44] = 0;
  if (result + 32 != (char *)a2)
  {
    *(void *)(result + 37) = *(void *)(a2 + 5);
    *uint64_t v7 = *(atomic_ullong *volatile *)a2;
    unsigned int v8 = *(unsigned __int8 *)(a2 + 12);
    result[44] = v8;
    if (v8 <= 9 && ((1 << v8) & 0x33C) != 0) {
      atomic_fetch_add(*v7, 1uLL);
    }
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t std::less<turi::flexible_type>::operator()[abi:ne180100](__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(*(unsigned char *)(a4 + 12))
  {
    case 0:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
          BOOL v4 = *(void *)a3 < *(void *)a4;
          goto LABEL_26;
        case 1:
          double v13 = *(double *)a3;
          double v14 = (double)*(uint64_t *)a4;
          goto LABEL_36;
        case 2:
        case 3:
        case 4:
        case 5:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        case 6:
          BOOL v12 = *(void *)a4 <= (uint64_t)(*(void *)a3 << 8) >> 8;
          return !v12;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 1:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
          BOOL v12 = *(double *)a4 <= (double)*(uint64_t *)a3;
          return !v12;
        case 1:
          double v13 = *(double *)a3;
          double v14 = *(double *)a4;
LABEL_36:
          BOOL v15 = v13 < v14;
          goto LABEL_38;
        case 2:
        case 3:
        case 4:
        case 5:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        case 6:
          BOOL v15 = (double)*(int *)(a3 + 8) / 1000000.0 + (double)((uint64_t)(*(void *)a3 << 8) >> 8) < *(double *)a4;
LABEL_38:
          uint64_t result = v15;
          break;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      return result;
    case 2:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
        case 1:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        case 2:
          return std::string::compare[abi:ne180100]((const void **)(*(void *)a3 + 8), (unsigned char *)(*(void *)a4 + 8)) >> 31;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 3:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
        case 1:
        case 2:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        case 3:
          size_t v6 = *(double **)(*(void *)a3 + 8);
          uint64_t v7 = *(double **)(*(void *)a4 + 8);
          unint64_t v8 = (uint64_t)(*(void *)(*(void *)a4 + 16) - (void)v7) >> 3;
          unint64_t v9 = (uint64_t)(*(void *)(*(void *)a3 + 16) - (void)v6) >> 3;
          if (*(double **)(*(void *)a3 + 16) == v6) {
            return v9 < v8;
          }
          if (v9 <= 1) {
            uint64_t v10 = 1;
          }
          else {
            uint64_t v10 = (uint64_t)(*(void *)(*(void *)a3 + 16) - (void)v6) >> 3;
          }
          uint64_t v11 = (uint64_t)(*(void *)(*(void *)a4 + 16) - (void)v7) >> 3;
          break;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      return result;
    case 4:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        case 4:
          return turi::flexible_type_impl::lt_operator::operator()(a1, (uint64_t)&v17, (uint64_t *)(*(void *)a3 + 8), (void *)(*(void *)a4 + 8));
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
    case 5:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      goto LABEL_30;
    case 6:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
          BOOL v4 = *(void *)a3 < (uint64_t)(*(void *)a4 << 8) >> 8;
          goto LABEL_26;
        case 1:
          BOOL v12 = (double)*(int *)(a4 + 8) / 1000000.0 + (double)((uint64_t)(*(void *)a4 << 8) >> 8) <= *(double *)a3;
          return !v12;
        case 2:
        case 3:
        case 4:
        case 5:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        case 6:
          uint64_t v16 = (uint64_t)(*(void *)a3 << 8) >> 8;
          if (v16 < (uint64_t)(*(void *)a4 << 8) >> 8) {
            return 1;
          }
          if (v16 != (uint64_t)(*(void *)a4 << 8) >> 8) {
            return 0;
          }
          BOOL v4 = *(_DWORD *)(a3 + 8) < *(_DWORD *)(a4 + 8);
LABEL_26:
          uint64_t result = v4;
          break;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      return result;
    case 7:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      goto LABEL_30;
    case 8:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          goto LABEL_30;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      goto LABEL_30;
    case 9:
      switch(*(unsigned char *)(a3 + 12))
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          break;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
LABEL_30:
      turi::flexible_type_fail(0);
      return 0;
    default:
      turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
  }
  while (1)
  {
    if (!v11 || *v6 > *v7) {
      return 0;
    }
    if (*v6 < *v7) {
      break;
    }
    --v11;
    ++v6;
    ++v7;
    if (!--v10) {
      return v9 < v8;
    }
  }
  return 1;
}

void *std::__tree<turi::flexible_type>::__find_equal<turi::flexible_type>(uint64_t a1, void *a2, uint64_t a3, __n128 a4)
{
  size_t v6 = (void *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  if (v5)
  {
    uint64_t v8 = a1 + 16;
    do
    {
      while (1)
      {
        unint64_t v9 = v5;
        uint64_t v10 = (uint64_t)(v5 + 4);
        if (!std::less<turi::flexible_type>::operator()[abi:ne180100](a4, v8, a3, (uint64_t)(v5 + 4))) {
          break;
        }
        uint64_t v5 = (void *)*v9;
        size_t v6 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (!std::less<turi::flexible_type>::operator()[abi:ne180100](a4, v8, v10, a3)) {
        break;
      }
      size_t v6 = v9 + 1;
      uint64_t v5 = (void *)v9[1];
    }
    while (v5);
  }
  else
  {
    unint64_t v9 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v9;
  return v6;
}

void std::unique_ptr<std::__tree_node<turi::flexible_type,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<turi::flexible_type,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<turi::flexible_type,0>((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t std::__destroy_at[abi:ne180100]<turi::flexible_type,0>(uint64_t result)
{
  uint64_t v1 = result;
  switch(*(unsigned char *)(result + 12))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)result, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v2 = *(atomic_ullong *volatile *)result;
        if (*(void *)result)
        {
          if (*((char *)v2 + 31) < 0) {
            operator delete((void *)v2[1]);
          }
          atomic_ullong *volatile v3 = v2;
          uint64_t v4 = 0x1012C404EF22A49;
          goto LABEL_32;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)result, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v5 = *(atomic_ullong *volatile *)result;
        if (*(void *)result)
        {
          size_t v6 = (void *)v5[1];
          if (v6)
          {
            v5[2] = (atomic_ullong)v6;
            operator delete(v6);
          }
          atomic_ullong *volatile v3 = v5;
          uint64_t v4 = 0x1080C409938AC02;
          goto LABEL_32;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)result, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v7 = *(atomic_ullong *volatile *)result;
        if (*(void *)result)
        {
          double v14 = (void **)(v7 + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v14);
          goto LABEL_18;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)result, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v7 = *(atomic_ullong *volatile *)result;
        if (*(void *)result)
        {
          double v14 = (void **)(v7 + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v14);
LABEL_18:
          atomic_ullong *volatile v3 = v7;
          uint64_t v4 = 0x1020C405E66F15BLL;
          goto LABEL_32;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)result, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v8 = *(atomic_ullong *volatile *)result;
        if (*(void *)result)
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v8 + 2);
          atomic_ullong *volatile v3 = v8;
          unsigned int v9 = -235920773;
          goto LABEL_31;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)result, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)result;
        if (*(void *)result)
        {
          uint64_t v11 = (void *)v10[6];
          if (v11)
          {
            v10[7] = (atomic_ullong)v11;
            operator delete(v11);
          }
          BOOL v12 = (void *)v10[3];
          if (v12)
          {
            void v10[4] = (atomic_ullong)v12;
            operator delete(v12);
          }
          double v13 = (std::__shared_weak_count *)v10[2];
          if (v13) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v13);
          }
          atomic_ullong *volatile v3 = v10;
          unsigned int v9 = 2071181815;
LABEL_31:
          uint64_t v4 = v9 | 0x1030C4000000000;
LABEL_32:
          uint64_t result = MEMORY[0x22A614FA0](v3, v4);
        }
      }
      break;
    default:
      break;
  }
  *(void *)uint64_t v1 = 0;
  *(_DWORD *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 12) = 0;
  return result;
}

void std::__tree<turi::flexible_type>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<turi::flexible_type>::destroy(a1, *a2);
    std::__tree<turi::flexible_type>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<turi::flexible_type,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::vector<turi::flex_type_enum>::__append(unint64_t *a1, unint64_t a2, unsigned char *a3)
{
  unint64_t v4 = a2;
  atomic_ullong *volatile v7 = (unsigned char *)a1[1];
  unint64_t v6 = a1[2];
  if (v6 - (unint64_t)v7 >= a2)
  {
    if (a2)
    {
      double v14 = &v7[a2];
      do
      {
        *v7++ = *a3;
        --v4;
      }
      while (v4);
      atomic_ullong *volatile v7 = v14;
    }
    a1[1] = (unint64_t)v7;
  }
  else
  {
    unint64_t v8 = *a1;
    unsigned int v9 = &v7[-*a1];
    unint64_t v10 = (unint64_t)&v9[a2];
    if ((uint64_t)&v9[a2] < 0) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v11 = v6 - v8;
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v12 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v12 = v10;
    }
    if (v12) {
      double v13 = (char *)operator new(v12);
    }
    else {
      double v13 = 0;
    }
    BOOL v15 = &v9[(void)v13];
    uint64_t v16 = &v9[(void)v13 + v4];
    do
    {
      (v9++)[(void)v13] = *a3;
      --v4;
    }
    while (v4);
    if (v7 != (unsigned char *)v8)
    {
      char v17 = &v7[~v8];
      do
      {
        char v18 = *--v7;
        (v17--)[(void)v13] = v18;
      }
      while (v7 != (unsigned char *)v8);
      BOOL v15 = v13;
    }
    *a1 = (unint64_t)v15;
    a1[1] = (unint64_t)v16;
    a1[2] = (unint64_t)&v13[v12];
    if (v8)
    {
      operator delete((void *)v8);
    }
  }
}

void std::shared_ptr<turi::group_aggregate_value>::shared_ptr[abi:ne180100]<turi::group_aggregate_value,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223EE0800(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::shared_ptr<turi::group_aggregate_value>::shared_ptr[abi:ne180100]<turi::group_aggregate_value,void>(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__shared_ptr_pointer<turi::group_aggregate_value *,std::shared_ptr<turi::group_aggregate_value>::__shared_ptr_default_delete<turi::group_aggregate_value,turi::group_aggregate_value>,std::allocator<turi::group_aggregate_value>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 96))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::group_aggregate_value *,std::shared_ptr<turi::group_aggregate_value>::__shared_ptr_default_delete<turi::group_aggregate_value,turi::group_aggregate_value>,std::allocator<turi::group_aggregate_value>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::vector<std::shared_ptr<turi::group_aggregate_value>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<turi::group_aggregate_value>>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<turi::group_aggregate_value>>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      _OWORD *v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::group_aggregate_value>>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::group_aggregate_value>>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::group_aggregate_value>>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::group_aggregate_value>>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    atomic_ullong *volatile v3 = *(std::__shared_weak_count **)(v1 + 8);
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
    v1 += 16;
  }
}

void **std::__split_buffer<std::shared_ptr<turi::group_aggregate_value>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<std::shared_ptr<turi::group_aggregate_value>>::clear[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  while (v1 != v2)
  {
    *(void *)(a1 + 16) = v1 - 16;
    unint64_t v4 = *(std::__shared_weak_count **)(v1 - 8);
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      uint64_t v1 = *(void *)(a1 + 16);
    }
    else
    {
      v1 -= 16;
    }
  }
}

void std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1>,void ()(unsigned long,unsigned long)>::~__func()
{
}

__n128 std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1>,void ()(unsigned long,unsigned long)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_26D759738;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1>,void ()(unsigned long,unsigned long)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26D759738;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1>,void ()(unsigned long,unsigned long)>::operator()(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a2;
  turi::gl_sarray::range_iterator(*(turi::gl_sarray **)(a1 + 16), (unint64_t)(**(void **)(a1 + 8) * *a2) / *a3, (unint64_t)(**(void **)(a1 + 8) + **(void **)(a1 + 8) * *a2) / *a3, v78);
  uint64_t v72 = 0;
  unsigned int v73 = (unsigned __int8 *)v78;
  uint64_t v6 = *(void *)(v79 + 72) - *(void *)(v79 + 56);
  uint64_t v7 = 16 * v4;
  while (v72 != v6)
  {
    uint64_t v8 = v73;
    switch(byte_268081524)
    {
      case 0:
        switch(v73[12])
        {
          case 0u:
            if (*(void *)v73 == turi::FLEX_UNDEFINED) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 1u:
            v5.n128_u64[0] = *(void *)v73;
            uint64_t v63 = turi::FLEX_UNDEFINED;
            goto LABEL_93;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_79;
          case 6u:
            if (turi::FLEX_UNDEFINED == (uint64_t)(*(void *)v73 << 8) >> 8 && !*((_DWORD *)v73 + 2)) {
              goto LABEL_80;
            }
            goto LABEL_79;
          default:
            goto LABEL_119;
        }
      case 1:
        switch(v73[12])
        {
          case 0u:
            v5.n128_u64[0] = turi::FLEX_UNDEFINED;
            uint64_t v63 = *(void *)v73;
LABEL_93:
            double v68 = (double)v63;
            goto LABEL_94;
          case 1u:
            v5.n128_u64[0] = *(void *)v73;
            double v68 = *(double *)&turi::FLEX_UNDEFINED;
LABEL_94:
            if (v5.n128_f64[0] != v68) {
              goto LABEL_79;
            }
            goto LABEL_80;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_79;
          case 6u:
            v5.n128_f64[0] = vabdd_f64((double)*((int *)v73 + 2) / 1000000.0 + (double)((uint64_t)(*(void *)v73 << 8) >> 8), *(double *)&turi::FLEX_UNDEFINED);
            goto LABEL_98;
          default:
            goto LABEL_119;
        }
      case 2:
        unsigned int v47 = v73[12];
        if (v47 - 3 < 7 || v47 < 2) {
          goto LABEL_79;
        }
        if (v47 != 2) {
          goto LABEL_119;
        }
        uint64_t v49 = *(void *)v73;
        if (*(char *)(*(void *)v73 + 31) < 0) {
          size_t v50 = *(void *)(v49 + 16);
        }
        else {
          size_t v50 = *(unsigned __int8 *)(*(void *)v73 + 31);
        }
        if (*(char *)(turi::FLEX_UNDEFINED + 31) < 0) {
          uint64_t v69 = *(void *)(turi::FLEX_UNDEFINED + 16);
        }
        else {
          uint64_t v69 = *(unsigned __int8 *)(turi::FLEX_UNDEFINED + 31);
        }
        if (v50 != v69) {
          goto LABEL_79;
        }
        unsigned int v70 = (unsigned __int8 *)(v49 + 8);
        if ((*(unsigned char *)(*(void *)v73 + 31) & 0x80) != 0) {
          unsigned int v70 = *(unsigned __int8 **)v70;
        }
        long long v71 = (unsigned __int8 *)(turi::FLEX_UNDEFINED + 8);
        if ((*(unsigned char *)(turi::FLEX_UNDEFINED + 31) & 0x80) != 0)
        {
          long long v71 = *(unsigned __int8 **)v71;
          if ((*(unsigned char *)(*(void *)v73 + 31) & 0x80) == 0)
          {
LABEL_109:
            if (!v50) {
              goto LABEL_80;
            }
            do
            {
              if (*v70 != *v71) {
                goto LABEL_79;
              }
              ++v70;
              ++v71;
              --v50;
            }
            while (v50);
            goto LABEL_80;
          }
        }
        else if ((*(unsigned char *)(*(void *)v73 + 31) & 0x80) == 0)
        {
          goto LABEL_109;
        }
        if (memcmp(v70, v71, v50)) {
          goto LABEL_79;
        }
LABEL_80:
        turi::gl_sarray_range::iterator::increment((turi::gl_sarray_range::iterator *)&v72);
        break;
      case 3:
        unsigned int v51 = v73[12];
        if (v51 > 9) {
          goto LABEL_119;
        }
        if (v51 != 3) {
          goto LABEL_79;
        }
        double v52 = *(unint64_t **)(*(void *)v73 + 8);
        size_t v53 = *(void **)(*(void *)v73 + 16);
        unint64_t v54 = v53 - v52;
        unsigned int v55 = *(double **)(turi::FLEX_UNDEFINED + 8);
        if (v54 != (uint64_t)(*(void *)(turi::FLEX_UNDEFINED + 16) - (void)v55) >> 3) {
          goto LABEL_79;
        }
        if (v53 == v52) {
          goto LABEL_80;
        }
        if (v54 <= 1) {
          uint64_t v56 = 1;
        }
        else {
          uint64_t v56 = v53 - v52;
        }
        v5.n128_u64[0] = *v52;
        if (*(double *)v52 != *v55) {
          goto LABEL_79;
        }
        unint64_t v57 = 0;
        unsigned int v58 = v55 + 1;
        uint64_t v59 = v52 + 1;
        uint64_t v60 = v56 - 1;
        while (v60 != v57)
        {
          v5.n128_u64[0] = v59[v57];
          double v61 = v58[v57++];
          if (v5.n128_f64[0] != v61)
          {
            if (v57 < v54) {
              goto LABEL_79;
            }
            goto LABEL_80;
          }
        }
        goto LABEL_80;
      case 4:
        unsigned int v9 = v73[12];
        if (v9 > 9) {
          goto LABEL_119;
        }
        if (v9 != 4) {
          goto LABEL_79;
        }
        char v10 = turi::flexible_type_impl::approx_equality_operator::operator()((uint64_t)&v74, (uint64_t *)(*(void *)v73 + 8), (void *)(turi::FLEX_UNDEFINED + 8));
        goto LABEL_83;
      case 5:
        unsigned int v64 = v73[12];
        if (v64 > 9) {
          goto LABEL_119;
        }
        if (v64 != 5) {
          goto LABEL_79;
        }
        char v10 = turi::flexible_type_impl::approx_equality_operator::operator()((uint64_t)&v74, (uint64_t **)(*(void *)v73 + 8), (uint64_t **)(turi::FLEX_UNDEFINED + 8));
        goto LABEL_83;
      case 6:
        switch(v73[12])
        {
          case 0u:
            if (*(void *)v73 == turi::FLEX_UNDEFINED << 8 >> 8 && !dword_268081520) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 1u:
            v5.n128_f64[0] = vabdd_f64(*(double *)v73, (double)dword_268081520 / 1000000.0 + (double)(turi::FLEX_UNDEFINED << 8 >> 8));
LABEL_98:
            if (v5.n128_f64[0] < 0.0000005) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_79;
          case 6u:
            if (((turi::FLEX_UNDEFINED ^ *(void *)v73) & 0xFFFFFFFFFFFFFFLL) == 0
              && *((_DWORD *)v73 + 2) == dword_268081520)
            {
              goto LABEL_80;
            }
            goto LABEL_79;
          default:
            goto LABEL_119;
        }
      case 7:
        unsigned int v62 = v73[12];
        if (v62 < 7 || v62 - 8 < 2) {
          goto LABEL_79;
        }
        if (v62 != 7) {
          goto LABEL_119;
        }
        goto LABEL_80;
      case 8:
        unsigned int v65 = v73[12];
        if (v65 < 8 || v65 == 9) {
          goto LABEL_79;
        }
        if (v65 != 8) {
          goto LABEL_119;
        }
        char v10 = turi::image_type::operator==(*(void *)v73 + 8, turi::FLEX_UNDEFINED + 8);
LABEL_83:
        if (v10) {
          goto LABEL_80;
        }
        goto LABEL_79;
      case 9:
        unsigned int v11 = v73[12];
        if (v11 < 9) {
          goto LABEL_79;
        }
        if (v11 != 9)
        {
LABEL_119:
          turi::flexible_type_fail(0);
          __break(1u);
        }
        uint64_t v12 = turi::FLEX_UNDEFINED;
        char v13 = *(void **)v73;
        if (turi::FLEX_UNDEFINED == *(void *)v73) {
          goto LABEL_80;
        }
        if (!turi::flexible_type_impl::ndarray<double>::same_shape((uint64_t)(v13 + 1), turi::FLEX_UNDEFINED + 8)) {
          goto LABEL_79;
        }
        long long v15 = (char *)v13[3];
        long long v14 = (char *)v13[4];
        uint64_t v16 = v14 - v15;
        if (v14 == v15) {
          goto LABEL_80;
        }
        if (!v13[1]) {
          goto LABEL_80;
        }
        uint64_t v17 = 1;
        do
        {
          uint64_t v18 = *(void *)v15;
          v15 += 8;
          v17 *= v18;
        }
        while (v15 != v14);
        if (!v17) {
          goto LABEL_80;
        }
        uint64_t v75 = 0;
        std::vector<unsigned long>::vector(&v76, v16 >> 3, &v75);
        BOOL v19 = v76;
        __n128 v20 = v77;
        uint64_t v21 = **(void **)(v12 + 8);
        uint64_t v22 = (char *)v77 - (char *)v76;
        unint64_t v23 = v77 - v76;
        unint64_t v24 = v23 - 1;
        if (v23 <= 1) {
          uint64_t v25 = 1;
        }
        else {
          uint64_t v25 = v77 - v76;
        }
        while (1)
        {
          if (v20 == v19)
          {
            uint64_t v33 = 0;
            v5.n128_u64[0] = *(void *)(*(void *)v13[1] + 8 * v13[9]);
          }
          else
          {
            uint64_t v26 = 0;
            uint64_t v27 = (uint64_t *)v13[6];
            uint64_t v28 = v19;
            uint64_t v29 = v25;
            do
            {
              uint64_t v31 = *v28++;
              uint64_t v30 = v31;
              uint64_t v32 = *v27++;
              v26 += v32 * v30;
              --v29;
            }
            while (v29);
            uint64_t v33 = 0;
            v5.n128_u64[0] = *(void *)(*(void *)v13[1] + 8 * (v13[9] + v26));
            uint64_t v34 = *(uint64_t **)(v12 + 48);
            uint64_t v35 = v19;
            uint64_t v36 = v25;
            do
            {
              uint64_t v38 = *v35++;
              uint64_t v37 = v38;
              uint64_t v39 = *v34++;
              v33 += v39 * v37;
              --v36;
            }
            while (v36);
          }
          if (v5.n128_f64[0] != *(double *)(v21 + 8 * (*(void *)(v12 + 72) + v33))) {
            break;
          }
          uint64_t v40 = v23;
          uint64_t v41 = v23 - 1;
          if (v22 >= 1)
          {
            uint64_t v42 = v13[3];
            unint64_t v43 = v19[v24] + 1;
            v19[v24] = v43;
            unint64_t v44 = (v22 & 0xFFFFFFFFFFFFFFF8) - 16;
            uint64_t v41 = v23 - 1;
            if (v43 >= *(void *)(v42 + 8 * v24))
            {
              while (1)
              {
                *(uint64_t *)((char *)v19 + v44 + 8) = 0;
                if (v41 <= 0) {
                  break;
                }
                --v41;
                unint64_t v45 = *(uint64_t *)((char *)v19 + v44) + 1;
                *(uint64_t *)((char *)v19 + v44) = v45;
                unint64_t v46 = *(void *)(v42 + v44);
                v44 -= 8;
                if (v45 < v46)
                {
                  uint64_t v40 = 1;
                  goto LABEL_36;
                }
              }
LABEL_39:
              long long v77 = v19;
              operator delete(v19);
              goto LABEL_80;
            }
            uint64_t v40 = 1;
            uint64_t v41 = v23 - 1;
          }
LABEL_36:
          if (!v40 || v41 < 0)
          {
            if (!v19) {
              goto LABEL_80;
            }
            goto LABEL_39;
          }
        }
        if (v19)
        {
          long long v77 = v19;
          operator delete(v19);
        }
LABEL_79:
        uint64_t v67 = *(void *)(**(void **)(a1 + 24) + v7);
        (*(void (**)(uint64_t, unsigned __int8 *, __n128))(*(void *)v67 + 16))(v67, v8, v5);
        goto LABEL_80;
      default:
        goto LABEL_119;
    }
  }
  turi::gl_sarray_range::~gl_sarray_range((turi::gl_sarray_range *)v78);
}

void sub_223EE120C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
}

uint64_t std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1>,void ()(unsigned long,unsigned long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_1>,void ()(unsigned long,unsigned long)>::target_type()
{
}

void std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2>,void ()(unsigned long,unsigned long)>::~__func()
{
}

__n128 std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2>,void ()(unsigned long,unsigned long)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v2 = &unk_26D7597B8;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  return result;
}

__n128 std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2>,void ()(unsigned long,unsigned long)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26D7597B8;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2>,void ()(unsigned long,unsigned long)>::operator()(uint64_t a1)
{
}

uint64_t std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2>,void ()(unsigned long,unsigned long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2,std::allocator<turi::gl_sarray::cumulative_aggregate(std::shared_ptr<turi::group_aggregate_value>)::$_2>,void ()(unsigned long,unsigned long)>::target_type()
{
}

void _ZNSt3__115allocate_sharedB8ne180100IN4turi12unity_sarrayENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x60uLL);
  _ZNSt3__120__shared_ptr_emplaceIN4turi12unity_sarrayENS_9allocatorIS2_EEEC2B8ne180100IJES4_Li0EEES4_DpOT_(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  std::shared_ptr<turi::visualization::Plot>::__enable_weak_this[abi:ne180100]<cppipc::ipc_object_base,turi::visualization::Plot,void>((uint64_t)a1, v2 + 4, (uint64_t)(v2 + 3));
}

void sub_223EE147C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *_ZNSt3__120__shared_ptr_emplaceIN4turi12unity_sarrayENS_9allocatorIS2_EEEC2B8ne180100IJES4_Li0EEES4_DpOT_(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D759838;
  turi::unity_sarray::unity_sarray((turi::unity_sarray *)(a1 + 3));
  return a1;
}

void sub_223EE14D8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::unity_sarray>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D759838;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::unity_sarray>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D759838;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<turi::unity_sarray>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void turi::sarray_reader<turi::flexible_type>::init(uint64_t a1, uint64_t a2)
{
  assert_msg(*(void *)(a1 + 8) == 0, "Reader already inited");
  turi::sarray_reader<turi::flexible_type>::open_format_reader(a1, a2);
}

{
  assert_msg(*(void *)(a1 + 8) == 0, "Reader already inited");
  turi::sarray_reader<turi::flexible_type>::open_format_reader(a1, a2);
}

void sub_223EE18CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  long long v14 = *(void **)(v12 - 120);
  if (v14)
  {
    *(void *)(v12 - 112) = v14;
    operator delete(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::sarray_reader<turi::flexible_type>::sarray_reader(uint64_t a1)
{
  *(void *)a1 = &unk_26D759888;
  *(void *)(a1 + 8) = 0;
  int v2 = pthread_mutex_init((pthread_mutex_t *)(a1 + 16), 0);
  assert_msg(v2 == 0, "Mutex create error %d", v2);
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
  *(void *)(a1 + 88) = a1 + 96;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 16std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(void *)(a1 + 176) = 0;
  return a1;
}

void turi::sarray_reader<turi::flexible_type>::~sarray_reader(uint64_t a1)
{
  turi::sarray_reader<turi::flexible_type>::~sarray_reader(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t turi::sarray_reader<turi::flexible_type>::num_segments(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    turi::sarray_reader<turi::flexible_type>::num_segments(void)const::{lambda(void)#1}::operator()();
  }
  return *(void *)(a1 + 80);
}

uint64_t turi::sarray_reader<turi::flexible_type>::segment_length(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    turi::sarray_reader<turi::flexible_type>::segment_length(unsigned long)const::{lambda(void)#1}::operator()();
  }
  return *(void *)(*(void *)(a1 + 112) + 8 * a2);
}

uint64_t turi::sarray_reader<turi::flexible_type>::begin@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v11 = a2;
  uint64_t v6 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  for (unint64_t i = *(void **)(a1 + 96); i; unint64_t i = (void *)*i)
  {
    unint64_t v8 = i[4];
    if (v8 <= a2)
    {
      if (v8 >= a2) {
        turi::sarray_reader<turi::flexible_type>::begin(unsigned long)const::{lambda(void)#1}::operator()();
      }
      ++i;
    }
  }
  std::__tree<unsigned long>::__emplace_unique_key_args<unsigned long,unsigned long const&>((uint64_t **)(a1 + 88), &v11, (uint64_t *)&v11);
  if (!*(void *)(a1 + 8)) {
    turi::sarray_reader<turi::flexible_type>::begin(unsigned long)const::{lambda(void)#2}::operator()();
  }
  unint64_t v9 = v11;
  if (v9 >= (*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1)) {
    turi::sarray_reader<turi::flexible_type>::begin(unsigned long)const::{lambda(void)#3}::operator()();
  }
  turi::sarray_iterator<turi::flexible_type>::sarray_iterator(a3, (uint64_t *)(*(void *)(a1 + 160) + 96 * v11), v11, 1);
  return pthread_mutex_unlock(v6);
}

void sub_223EE1B60(_Unwind_Exception *a1)
{
  pthread_mutex_unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t turi::sarray_reader<turi::flexible_type>::end@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v9[0] = a1[1];
  if (!v9[0])
  {
    unint64_t v11 = v9;
    turi::sarray_reader<turi::flexible_type>::end(unsigned long)const::{lambda(void)#1}::operator()();
  }
  unint64_t v11 = (void *)a2;
  unint64_t result = (*(uint64_t (**)(void *))(*a1 + 16))(a1);
  unint64_t v10 = result;
  if (result <= a2)
  {
    v9[0] = &v11;
    v9[1] = &v10;
    turi::sarray_reader<turi::flexible_type>::end(unsigned long)const::{lambda(void)#2}::operator()();
  }
  uint64_t v7 = a1[20] + 96 * a2;
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 28) = 0;
  uint64_t v8 = *(void *)(v7 + 72) - *(void *)(v7 + 56);
  *(void *)(a3 + 32) = v8;
  *(void *)(a3 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v8;
  return result;
}

uint64_t turi::sarray_reader<turi::flexible_type>::read_rows(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 56))();
}

uint64_t turi::sarray_reader<turi::flexible_type>::reset_iterators(uint64_t a1)
{
  uint64_t v1 = (void *)a1;
  int v2 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  long long v3 = (void *)v1[12];
  v1 += 12;
  std::__tree<std::__value_type<unsigned long long,double>,std::__map_value_compare<unsigned long long,std::__value_type<unsigned long long,double>,std::less<unsigned long long>,true>,std::allocator<std::__value_type<unsigned long long,double>>>::destroy((uint64_t)(v1 - 1), v3);
  *(v1 - 1) = v1;
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v4 = (uint64_t *)v1[8];
  __n128 v5 = (uint64_t *)v1[9];
  while (v4 != v5)
  {
    turi::sarray_reader_buffer<turi::flexible_type>::clear(v4);
    v4 += 12;
  }
  return pthread_mutex_unlock(v2);
}

uint64_t turi::sarray_reader<turi::flexible_type>::~sarray_reader(uint64_t a1)
{
  *(void *)a1 = &unk_26D759888;
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  __n128 v5 = (void **)(a1 + 160);
  std::vector<turi::sarray_reader_buffer<turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v5);
  __n128 v5 = (void **)(a1 + 136);
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100](&v5);
  long long v3 = *(void **)(a1 + 112);
  if (v3)
  {
    *(void *)(a1 + 12std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v3;
    operator delete(v3);
  }
  std::__tree<std::__value_type<unsigned long long,double>,std::__map_value_compare<unsigned long long,std::__value_type<unsigned long long,double>,std::less<unsigned long long>,true>,std::allocator<std::__value_type<unsigned long long,double>>>::destroy(a1 + 88, *(void **)(a1 + 96));
  turi::mutex::~mutex((pthread_mutex_t *)(a1 + 16));
  return a1;
}

void std::vector<turi::sarray_reader_buffer<turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    __n128 v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 96;
        std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      __n128 v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  long long v3 = *(std::__shared_weak_count **)(a2 + 32);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  uint64_t v4 = (void **)a2;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v4);
}

void turi::sarray_reader<turi::flexible_type>::num_segments(void)const::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", 108);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  long long v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"reader", 6);
  __n128 v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"!=", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"__null", 6);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  unint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"!=", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  unint64_t v10 = (void *)std::ostream::operator<<();
  unint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", "operator()", 300, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  char v13 = v16;
  turi::sarray_reader<turi::flexible_type>::num_segments(void)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EE2008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::sarray_reader<turi::flexible_type>::segment_length(unsigned long)const::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", 108);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  long long v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"reader", 6);
  __n128 v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"!=", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"__null", 6);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  unint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"!=", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  unint64_t v10 = (void *)std::ostream::operator<<();
  unint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", "operator()", 310, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  char v13 = v16;
  turi::sarray_reader<turi::flexible_type>::segment_length(unsigned long)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EE2298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<unsigned long>::__emplace_unique_key_args<unsigned long,unsigned long const&>(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1 + 1;
  __n128 v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        __n128 v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      __n128 v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    unint64_t v10 = (uint64_t *)operator new(0x28uLL);
    void v10[4] = *a3;
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

uint64_t turi::sarray_iterator<turi::flexible_type>::sarray_iterator(uint64_t a1, uint64_t *a2, uint64_t a3, int a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0;
  __n128 v5 = (void **)(a1 + 16);
  *(_DWORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 28) = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v6 = a2[9] - a2[7];
  *(void *)(a1 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v6;
  if (a4 && v6)
  {
    uint64_t v7 = turi::sarray_reader_buffer<turi::flexible_type>::next(a2);
    if ((void **)v7 == v5)
    {
      uint64_t v6 = 0;
    }
    else
    {
      switch(*(unsigned char *)(a1 + 28))
      {
        case 2:
          if (atomic_fetch_add(*v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v8 = *v5;
            if (!*v5) {
              goto LABEL_30;
            }
            if (*((char *)v8 + 31) < 0) {
              operator delete((void *)v8[1]);
            }
            unint64_t v9 = v8;
            uint64_t v10 = 0x1012C404EF22A49;
            goto LABEL_29;
          }
          break;
        case 3:
          if (atomic_fetch_add(*v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v11 = *v5;
            if (!*v5) {
              goto LABEL_30;
            }
            uint64_t v12 = (void *)v11[1];
            if (v12)
            {
              v11[2] = (atomic_ullong)v12;
              operator delete(v12);
            }
            unint64_t v9 = v11;
            uint64_t v10 = 0x1080C409938AC02;
            goto LABEL_29;
          }
          break;
        case 4:
          if (atomic_fetch_add(*v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v13 = *v5;
            if (!*v5) {
              goto LABEL_30;
            }
            uint64_t v18 = (void **)(v13 + 1);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v18);
            goto LABEL_21;
          }
          break;
        case 5:
          if (atomic_fetch_add(*v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v13 = *v5;
            if (!*v5) {
              goto LABEL_30;
            }
            uint64_t v18 = (void **)(v13 + 1);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v18);
LABEL_21:
            unint64_t v9 = v13;
            uint64_t v10 = 0x1020C405E66F15BLL;
            goto LABEL_29;
          }
          break;
        case 8:
          if (atomic_fetch_add(*v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            atomic_ullong *volatile v14 = *v5;
            if (!*v5) {
              goto LABEL_30;
            }
            boost::detail::shared_count::~shared_count((atomic_uint **)v14 + 2);
            unint64_t v9 = v14;
            unsigned int v15 = -235920773;
            goto LABEL_28;
          }
          break;
        case 9:
          if (atomic_fetch_add(*v5, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            if (*v5)
            {
              unint64_t v9 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*v5);
              unsigned int v15 = 2071181815;
LABEL_28:
              uint64_t v10 = v15 | 0x1030C4000000000;
LABEL_29:
              MEMORY[0x22A614FA0](v9, v10);
            }
LABEL_30:
            *__n128 v5 = 0;
          }
          break;
        default:
          break;
      }
      uint64_t v6 = 0;
      uint64_t v16 = *(void **)v7;
      *(void **)((char *)v5 + 5) = *(void **)(v7 + 5);
      *__n128 v5 = v16;
      *(unsigned char *)(a1 + 28) = *(unsigned char *)(v7 + 12);
      *(unsigned char *)(v7 + 12) = 0;
    }
  }
  *(void *)(a1 + 32) = v6;
  return a1;
}

void sub_223EE2694(_Unwind_Exception *exception_object)
{
  switch(*(unsigned char *)(v1 + 28))
  {
    case 2:
      if (turi::sarray_iterator<turi::flexible_type>::sarray_iterator(v2)) {
        break;
      }
      goto LABEL_11;
    case 3:
      if (turi::sarray_iterator<turi::flexible_type>::sarray_iterator(v2)) {
        break;
      }
      goto LABEL_11;
    case 4:
      if (turi::flexible_type_converter<std::map<std::string,std::vector<std::string>>>::set(v2)) {
        break;
      }
      goto LABEL_11;
    case 5:
      if (turi::flexible_type_converter<std::map<std::string,std::vector<std::string>>>::set(v2)) {
        break;
      }
      goto LABEL_11;
    case 8:
      if ((turi::sarray_iterator<turi::flexible_type>::sarray_iterator(v2) & 1) == 0) {
        goto LABEL_11;
      }
      break;
    case 9:
      if (turi::flexible_type_converter<std::map<std::string,std::vector<std::string>>>::set(v2)) {
        break;
      }
LABEL_11:
      *uint64_t v2 = 0;
      break;
    default:
      break;
  }
  *(void *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 28) = 0;
  _Unwind_Resume(exception_object);
}

void turi::sarray_reader<turi::flexible_type>::end(unsigned long)const::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", 108);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  long long v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"reader", 6);
  __n128 v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"!=", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"__null", 6);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  atomic_ullong *volatile v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  unint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"!=", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  atomic_ullong *volatile v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", "operator()", 430, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  atomic_ullong *volatile v13 = v16;
  turi::sarray_reader<turi::flexible_type>::end(unsigned long)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EE2908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::sarray_reader<turi::flexible_type>::end(unsigned long)const::{lambda(void)#2}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", 108);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  long long v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"segmentid", 9);
  __n128 v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"<", 1);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"num_segments()", 14);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  atomic_ullong *volatile v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  unint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"<", 1);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  atomic_ullong *volatile v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", "operator()", 431, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  atomic_ullong *volatile v13 = v16;
  turi::sarray_reader<turi::flexible_type>::end(unsigned long)::{lambda(void)#2}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EE2B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::sarray_reader_buffer<turi::flexible_type>::clear(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    do
    {
      v2 -= 16;
      std::allocator<turi::flexible_type>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v2);
    }
    while (v2 != v3);
  }
  a1[1] = v3;
  uint64_t v4 = a1[7];
  a1[8] = v4;
  a1[11] = v4;
  a1[6] = 0;
}

void turi::sarray_reader<turi::flexible_type>::open_format_reader(uint64_t a1, uint64_t a2)
{
  turi::index_file_information::index_file_information(&v4, (const turi::index_file_information *)(a2 + 8));
  uint64_t v3 = v5;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v11, v11[1]);
  uint64_t v12 = (void **)&v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v12);
  if (__p)
  {
    unint64_t v9 = __p;
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  if (v3 == 2) {
    operator new();
  }
  if (v3 != 1)
  {
    if (!v3) {
      turi::sarray_reader<turi::flexible_type>::open_format_reader(turi::sarray<turi::flexible_type> const&)::{lambda(void)#1}::operator()();
    }
    *(void *)(a1 + 8) = 0;
    turi::sarray_reader<turi::flexible_type>::open_format_reader(turi::sarray<turi::flexible_type> const&)::{lambda(void)#3}::operator()();
  }
  turi::sarray_reader<turi::flexible_type>::open_format_reader(turi::sarray<turi::flexible_type> const&)::{lambda(void)#2}::operator()();
}

void sub_223EE2E7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  turi::index_file_information::~index_file_information((turi::index_file_information *)va);
  _Unwind_Resume(a1);
}

void turi::index_file_information::~index_file_information(turi::index_file_information *this)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)this + 120, *((void **)this + 16));
  uint64_t v3 = (void **)((char *)this + 96);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v2 = (void *)*((void *)this + 9);
  if (v2)
  {
    *((void *)this + 1std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v2;
    operator delete(v2);
  }
  if (*((char *)this + 71) < 0) {
    operator delete(*((void **)this + 6));
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

void turi::sarray_reader<turi::flexible_type>::init(turi::sarray<turi::flexible_type> const&,unsigned long)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", 108);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  std::string v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"num_segments", 12);
  int v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)">", 1);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"0", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  char v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  atomic_ullong *volatile v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  unint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)">", 1);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  atomic_ullong *volatile v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", "operator()", 247, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  atomic_ullong *volatile v13 = v16;
  turi::sarray_reader<turi::flexible_type>::init(turi::sarray<turi::flexible_type> const&,unsigned long)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EE30B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t turi::sarray_reader<turi::flexible_type>::size(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    turi::sarray_reader<turi::flexible_type>::size(void)const::{lambda(void)#1}::operator()();
  }
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 72))(v1);
  uint64_t v3 = *(uint64_t **)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t result = 0;
  uint64_t v6 = v4 - (void)v3;
  if (v6)
  {
    unint64_t v7 = v6 >> 3;
    if (v7 <= 1) {
      unint64_t v7 = 1;
    }
    do
    {
      uint64_t v8 = *v3++;
      result += v8;
      --v7;
    }
    while (v7);
  }
  return result;
}

void turi::sarray_reader<turi::flexible_type>::create_segment_read_buffers(void *a1, void *a2)
{
  unint64_t v4 = (uint64_t)(a2[1] - *a2) >> 4;
  a1[10] = v4;
  std::vector<unsigned long>::resize((uint64_t)(a1 + 14), v4);
  std::vector<turi::sarray_reader_buffer<turi::flexible_type>>::resize(a1 + 20, a1[10]);
  uint64_t v5 = a1[14];
  if (a1[15] != v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    do
    {
      uint64_t v9 = *a2 + v7;
      *(void *)(v5 + 8 * v8) = *(void *)(v9 + 8) - *(void *)v9;
      turi::sarray_reader_buffer<turi::flexible_type>::init((uint64_t *)(a1[20] + v6), (uint64_t)a1, *(void *)v9, *(void *)(v9 + 8), 1024);
      ++v8;
      uint64_t v5 = a1[14];
      v7 += 16;
      v6 += 96;
    }
    while (v8 < (a1[15] - v5) >> 3);
  }
}

uint64_t turi::sarray_format_reader_v2<turi::flexible_type>::sarray_format_reader_v2(uint64_t a1)
{
  *(void *)a1 = &unk_26D759900;
  uint64_t instance = turi::v2_block_impl::block_manager::get_instance((turi::v2_block_impl::block_manager *)a1);
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 8) = instance;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = -1;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a1 + 144;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 20std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(void *)(a1 + 232) = 0;
  int v3 = pthread_mutex_init((pthread_mutex_t *)(a1 + 240), 0);
  assert_msg(v3 == 0, "Mutex create error %d", v3);
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 32std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 336) = 0;
  return a1;
}

void sub_223EE33F8(_Unwind_Exception *a1)
{
  uint64_t v6 = *(void **)(v1 + 216);
  if (v6)
  {
    *(void *)(v1 + 224) = v6;
    operator delete(v6);
  }
  turi::sarray_format_reader_v2<turi::flexible_type>::sarray_format_reader_v2(v4, v3, v1);
  turi::index_file_information::~index_file_information(v2);
  _Unwind_Resume(a1);
}

void turi::sarray_format_reader_v2<turi::flexible_type>::~sarray_format_reader_v2(uint64_t a1)
{
  turi::sarray_format_reader_v2<turi::flexible_type>::~sarray_format_reader_v2(a1);
  JUMPOUT(0x22A614FA0);
}

void turi::sarray_format_reader_v2<turi::flexible_type>::open(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  std::string::operator=((std::string *)(a1 + 16), (const std::string *)a2);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 56) = v4;
  std::string::operator=((std::string *)(a1 + 64), (const std::string *)(a2 + 48));
  if (a1 + 16 != a2)
  {
    std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>((char *)(a1 + 88), *(char **)(a2 + 72), *(void *)(a2 + 80), (uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3);
    std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>((std::vector<std::string> *)(a1 + 112), *(std::string **)(a2 + 96), *(long long **)(a2 + 104), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 3));
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__assign_multi<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>((uint64_t **)(a1 + 136), *(long long **)(a2 + 120), (long long *)(a2 + 128));
  }
  *(void *)(a1 + 176) = *(void *)(a1 + 168);
  double v86 = (void **)(a1 + 192);
  uint64_t v87 = (char **)(a1 + 168);
  uint64_t v5 = *(void *)(a1 + 216);
  atomic_ullong v83 = (char **)(a1 + 216);
  *(void *)(a1 + 20std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = *(void *)(a1 + 192);
  *(void *)(a1 + 224) = v5;
  *(void *)(a1 + 16std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
  uint64_t v6 = *(void *)(a2 + 96);
  if (*(void *)(a2 + 104) == v6)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v84 = a2;
    do
    {
      uint64_t v9 = *(void *)(a1 + 8);
      uint64_t v10 = (long long *)(v6 + 24 * v7);
      if (*((char *)v10 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v88, *(const std::string::value_type **)v10, *((void *)v10 + 1));
      }
      else
      {
        long long v11 = *v10;
        v88.__r_.__value_.__r.__words[2] = *((void *)v10 + 2);
        *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v11;
      }
      unint64_t v12 = turi::v2_block_impl::block_manager::open_column(v9, (uint64_t)&v88);
      unint64_t v14 = v13;
      if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v88.__r_.__value_.__l.__data_);
      }
      uint64_t v16 = *(unint64_t **)(a1 + 224);
      unint64_t v15 = *(void *)(a1 + 232);
      uint64_t v85 = v7;
      if ((unint64_t)v16 >= v15)
      {
        uint64_t v18 = ((char *)v16 - *v83) >> 4;
        unint64_t v19 = v18 + 1;
        if ((unint64_t)(v18 + 1) >> 60) {
          std::vector<float>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v20 = v15 - (void)*v83;
        if (v20 >> 3 > v19) {
          unint64_t v19 = v20 >> 3;
        }
        if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v21 = v19;
        }
        if (v21) {
          uint64_t v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>(a1 + 232, v21);
        }
        else {
          uint64_t v22 = 0;
        }
        unint64_t v23 = (unint64_t *)&v22[16 * v18];
        unint64_t *v23 = v12;
        v23[1] = v14;
        uint64_t v25 = *(char **)(a1 + 216);
        unint64_t v24 = *(char **)(a1 + 224);
        uint64_t v26 = v23;
        if (v24 != v25)
        {
          do
          {
            *((_OWORD *)v26 - 1) = *((_OWORD *)v24 - 1);
            v26 -= 2;
            v24 -= 16;
          }
          while (v24 != v25);
          unint64_t v24 = *v83;
        }
        uint64_t v17 = v23 + 2;
        *(void *)(a1 + 216) = v26;
        *(void *)(a1 + 224) = v23 + 2;
        *(void *)(a1 + 232) = &v22[16 * v21];
        if (v24) {
          operator delete(v24);
        }
      }
      else
      {
        *uint64_t v16 = v12;
        v16[1] = v14;
        uint64_t v17 = v16 + 2;
      }
      *(void *)(a1 + 224) = v17;
      unint64_t v27 = turi::v2_block_impl::block_manager::num_blocks_in_column(*(turi::v2_block_impl::block_manager **)(a1 + 8), v12, v14);
      uint64_t all_block_info = turi::v2_block_impl::block_manager::get_all_block_info(*(turi::v2_block_impl::block_manager **)(a1 + 8), v12);
      if (v27)
      {
        uint64_t v29 = (void *)all_block_info;
        for (unint64_t i = 0; i != v27; ++i)
        {
          uint64_t v32 = *(char **)(a1 + 200);
          unint64_t v31 = *(void *)(a1 + 208);
          if ((unint64_t)v32 >= v31)
          {
            uint64_t v34 = (char *)*v86;
            uint64_t v35 = (v32 - (unsigned char *)*v86) >> 3;
            unint64_t v36 = v35 + 1;
            if ((unint64_t)(v35 + 1) >> 61) {
              std::vector<float>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v37 = v31 - (void)v34;
            if (v37 >> 2 > v36) {
              unint64_t v36 = v37 >> 2;
            }
            if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v38 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v38 = v36;
            }
            if (v38)
            {
              uint64_t v39 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(a1 + 208, v38);
              uint64_t v34 = *(char **)(a1 + 192);
              uint64_t v32 = *(char **)(a1 + 200);
            }
            else
            {
              uint64_t v39 = 0;
            }
            uint64_t v40 = &v39[8 * v35];
            *(void *)uint64_t v40 = v8;
            uint64_t v33 = v40 + 8;
            while (v32 != v34)
            {
              uint64_t v41 = *((void *)v32 - 1);
              v32 -= 8;
              *((void *)v40 - 1) = v41;
              v40 -= 8;
            }
            *(void *)(a1 + 192) = v40;
            *(void *)(a1 + 20std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v33;
            *(void *)(a1 + 208) = &v39[8 * v38];
            if (v34) {
              operator delete(v34);
            }
          }
          else
          {
            *(void *)uint64_t v32 = v8;
            uint64_t v33 = v32 + 8;
          }
          *(void *)(a1 + 20std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v33;
          uint64_t v42 = *(void *)(*(void *)(*v29 + 24 * v14) + 48 * i + 24);
          unint64_t v44 = *(unint64_t **)(a1 + 176);
          unint64_t v43 = *(void *)(a1 + 184);
          if ((unint64_t)v44 >= v43)
          {
            unint64_t v46 = 0xAAAAAAAAAAAAAAABLL * (((char *)v44 - *v87) >> 3);
            unint64_t v47 = v46 + 1;
            if (v46 + 1 > 0xAAAAAAAAAAAAAAALL) {
              std::vector<float>::__throw_length_error[abi:ne180100]();
            }
            unint64_t v48 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v43 - (void)*v87) >> 3);
            if (2 * v48 > v47) {
              unint64_t v47 = 2 * v48;
            }
            if (v48 >= 0x555555555555555) {
              unint64_t v49 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v49 = v47;
            }
            if (v49) {
              size_t v50 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>(a1 + 184, v49);
            }
            else {
              size_t v50 = 0;
            }
            unsigned int v51 = (unint64_t *)&v50[24 * v46];
            *unsigned int v51 = v12;
            v51[1] = v14;
            v51[2] = i;
            size_t v53 = *(char **)(a1 + 168);
            double v52 = *(char **)(a1 + 176);
            unint64_t v54 = v51;
            if (v52 != v53)
            {
              do
              {
                long long v55 = *(_OWORD *)(v52 - 24);
                *(v54 - 1) = *((void *)v52 - 1);
                *(_OWORD *)(v54 - 3) = v55;
                v54 -= 3;
                v52 -= 24;
              }
              while (v52 != v53);
              double v52 = *v87;
            }
            unint64_t v45 = v51 + 3;
            *(void *)(a1 + 168) = v54;
            *(void *)(a1 + 176) = v51 + 3;
            *(void *)(a1 + 184) = &v50[24 * v49];
            if (v52) {
              operator delete(v52);
            }
          }
          else
          {
            unint64_t *v44 = v12;
            v44[1] = v14;
            unint64_t v45 = v44 + 3;
            v44[2] = i;
          }
          v8 += v42;
          *(void *)(a1 + 176) = v45;
        }
      }
      uint64_t v7 = v85 + 1;
      uint64_t v6 = *(void *)(v84 + 96);
    }
    while (v85 + 1 < 0xAAAAAAAAAAAAAAABLL * ((*(void *)(v84 + 104) - v6) >> 3));
  }
  uint64_t v56 = *(uint64_t **)(a1 + 88);
  unint64_t v57 = *(uint64_t **)(a1 + 96);
  if (v56 != v57)
  {
    uint64_t v58 = *(void *)(a1 + 160);
    do
    {
      uint64_t v59 = *v56++;
      v58 += v59;
      *(void *)(a1 + 16std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v58;
    }
    while (v56 != v57);
  }
  uint64_t v60 = *(void **)(a1 + 336);
  for (uint64_t j = *(void **)(a1 + 344);
        j != v60;
        std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>::destroy[abi:ne180100](a1 + 352, j))
  {
    j -= 23;
  }
  *(void *)(a1 + 344) = v60;
  std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::resize((uint64_t *)(a1 + 336), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 176) - *(void *)(a1 + 168)) >> 3));
  unint64_t v62 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 176) - *(void *)(a1 + 168)) >> 3);
  unint64_t v63 = *(void *)(a1 + 320);
  unint64_t v64 = v62 >> 6;
  if ((v62 & 0x3F) != 0) {
    ++v64;
  }
  *(void *)(a1 + 312) = v62;
  *(void *)(a1 + 32std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v64;
  unsigned int v65 = (char *)malloc_type_realloc(*(void **)(a1 + 304), 8 * v64, 0x100004000313F17uLL);
  unsigned int v66 = v65;
  *(void *)(a1 + 304) = v65;
  uint64_t v67 = *(void *)(a1 + 312) & 0x3FLL;
  if (v67) {
    *(void *)&v65[8 * *(void *)(a1 + 320) - 8] &= ~(-1 << v67);
  }
  uint64_t v68 = *(void *)(a1 + 320);
  if (v68 > v63)
  {
    uint64_t v69 = &v65[8 * v63];
    uint64_t v70 = 8 * v68 - 8 * v63;
    if (v70 >= 1)
    {
      bzero(v69, 8 * (((unint64_t)v70 >> 3) - ((unint64_t)v70 > 7)) + 8);
      uint64_t v68 = *(void *)(a1 + 320);
    }
  }
  if (v68 >= 1) {
    bzero(v66, 8 * (v68 - ((v68 & 0x1FFFFFFFFFFFFFFFLL) != 0)) + 8);
  }
  unint64_t v71 = *(void *)(a1 + 208);
  uint64_t v72 = *(char **)(a1 + 200);
  if ((unint64_t)v72 >= v71)
  {
    char v74 = (char *)*v86;
    uint64_t v75 = (v72 - (unsigned char *)*v86) >> 3;
    unint64_t v76 = v75 + 1;
    if ((unint64_t)(v75 + 1) >> 61) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v77 = v71 - (void)v74;
    if (v77 >> 2 > v76) {
      unint64_t v76 = v77 >> 2;
    }
    if ((unint64_t)v77 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v78 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v78 = v76;
    }
    if (v78)
    {
      uint64_t v79 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(a1 + 208, v78);
      char v74 = *(char **)(a1 + 192);
      uint64_t v72 = *(char **)(a1 + 200);
    }
    else
    {
      uint64_t v79 = 0;
    }
    uint64_t v80 = &v79[8 * v75];
    uint64_t v81 = &v79[8 * v78];
    *(void *)uint64_t v80 = *(void *)(a1 + 160);
    unsigned int v73 = v80 + 8;
    while (v72 != v74)
    {
      uint64_t v82 = *((void *)v72 - 1);
      v72 -= 8;
      *((void *)v80 - 1) = v82;
      v80 -= 8;
    }
    *(void *)(a1 + 192) = v80;
    *(void *)(a1 + 20std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v73;
    *(void *)(a1 + 208) = v81;
    if (v74) {
      operator delete(v74);
    }
  }
  else
  {
    *(void *)uint64_t v72 = *(void *)(a1 + 160);
    unsigned int v73 = v72 + 8;
  }
  *(void *)(a1 + 20std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v73;
  if (*(void *)(a1 + 160) != v8) {
    turi::sarray_format_reader_v2<turi::flexible_type>::open(turi::index_file_information)::{lambda(void)#1}::operator()();
  }
}

{
  std::string v2;

  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v2, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    uint64_t v2 = *(std::string *)a2;
  }
  turi::read_index_file((uint64_t)&v2);
}

void sub_223EE3B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_223EE3C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void turi::sarray_format_reader_v2<turi::flexible_type>::close(uint64_t *a1)
{
  uint64_t v2 = (unint64_t *)a1[27];
  int v3 = (unint64_t *)a1[28];
  if (v2 != v3)
  {
    do
    {
      unint64_t v4 = *v2;
      v2 += 2;
      turi::v2_block_impl::block_manager::close_column(a1[1], v4);
    }
    while (v2 != v3);
    uint64_t v2 = (unint64_t *)a1[27];
  }
  a1[28] = (uint64_t)v2;
  uint64_t v6 = (void *)a1[42];
  for (unint64_t i = (void *)a1[43];
        i != v6;
        std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>::destroy[abi:ne180100]((uint64_t)(a1 + 44), i))
  {
    i -= 23;
  }
  a1[43] = (uint64_t)v6;
}

uint64_t turi::sarray_format_reader_v2<turi::flexible_type>::segment_size(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a1 + 88) + 8 * a2);
}

uint64_t turi::sarray_format_reader_v2<turi::flexible_type>::read_rows(void *a1, unint64_t a2, unint64_t a3, uint64_t *a4)
{
  if (a1[20] >= a3) {
    unint64_t v6 = a3;
  }
  else {
    unint64_t v6 = a1[20];
  }
  BOOL v7 = v6 >= a2;
  unint64_t v8 = v6 - a2;
  if (v8 != 0 && v7)
  {
    std::vector<turi::flexible_type>::resize(a4, v8);
    turi::sarray_format_reader_v2<turi::flexible_type>::fetch_rows_from_cache(a1, a2, v6, a4);
    if (cppipc::must_cancel(v10))
    {
      exception = __cxa_allocate_exception(0x18uLL);
      std::string::basic_string[abi:ne180100]<0>(exception, "Cancelled by user.");
    }
    return (a4[1] - *a4) >> 4;
  }
  else
  {
    uint64_t v13 = *a4;
    uint64_t v12 = a4[1];
    if (v12 != *a4)
    {
      do
      {
        v12 -= 16;
        std::allocator<turi::flexible_type>::destroy[abi:ne180100]((uint64_t)(a4 + 2), v12);
      }
      while (v12 != v13);
    }
    uint64_t result = 0;
    a4[1] = v13;
  }
  return result;
}

void sub_223EE3DCC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void turi::sarray_format_reader_v2<turi::flexible_type>::get_index_file(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if (*(char *)(a1 + 39) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)(a1 + 16), *(void *)(a1 + 24));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)(a1 + 16);
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 32);
  }
}

uint64_t turi::sarray_format_reader_v2<turi::flexible_type>::get_index_info(uint64_t a1)
{
  return a1 + 16;
}

uint64_t turi::sarray_format_reader<turi::flexible_type>::read_rows(uint64_t a1, uint64_t a2, uint64_t a3, turi::sframe_rows *a4)
{
  turi::sframe_rows::resize(a4, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
  if (!*((unsigned char *)a4 + 24)) {
    turi::sframe_rows::ensure_unique(a4);
  }
  uint64_t v8 = **(void **)a4;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 56);
  return v9(a1, a2, a3, v8);
}

uint64_t turi::sarray_format_reader_v2<turi::flexible_type>::~sarray_format_reader_v2(uint64_t a1)
{
  *(void *)a1 = &unk_26D759900;
  turi::sarray_format_reader_v2<turi::flexible_type>::close((uint64_t *)a1);
  BOOL v7 = (void **)(a1 + 336);
  std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::__destroy_vector::operator()[abi:ne180100](&v7);
  free(*(void **)(a1 + 304));
  turi::mutex::~mutex((pthread_mutex_t *)(a1 + 240));
  uint64_t v2 = *(void **)(a1 + 216);
  if (v2)
  {
    *(void *)(a1 + 224) = v2;
    operator delete(v2);
  }
  int v3 = *(void **)(a1 + 192);
  if (v3)
  {
    *(void *)(a1 + 20std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v3;
    operator delete(v3);
  }
  unint64_t v4 = *(void **)(a1 + 168);
  if (v4)
  {
    *(void *)(a1 + 176) = v4;
    operator delete(v4);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1 + 136, *(void **)(a1 + 144));
  BOOL v7 = (void **)(a1 + 112);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v7);
  uint64_t v5 = *(void **)(a1 + 88);
  if (v5)
  {
    *(void *)(a1 + 96) = v5;
    operator delete(v5);
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    unint64_t v4 = v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 23;
        std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>::destroy[abi:ne180100](uint64_t a1, void *a2)
{
  turi::v2_block_impl::encoded_block_range::~encoded_block_range((turi::v2_block_impl::encoded_block_range *)(a2 + 14));
  int v3 = (std::__shared_weak_count *)a2[12];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  unint64_t v4 = (std::__shared_weak_count *)a2[4];
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  turi::simple_spinlock::~simple_spinlock((turi::simple_spinlock *)a2);
}

void turi::simple_spinlock::~simple_spinlock(turi::simple_spinlock *this)
{
  if (*(unsigned char *)this) {
    turi::simple_spinlock::~simple_spinlock()::{lambda()#1}::operator()();
  }
}

void turi::simple_spinlock::~simple_spinlock()::{lambda()#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.hpp", 97);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  int v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"spinner == 0", 12);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.hpp", "operator()", 143, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::simple_spinlock::~simple_spinlock()::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EE41B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::resize(uint64_t *a1, unint64_t a2)
{
  int v3 = (void *)a1[1];
  unint64_t v4 = 0xD37A6F4DE9BD37A7 * (((uint64_t)v3 - *a1) >> 3);
  BOOL v5 = a2 >= v4;
  unint64_t v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::__append(a1, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = *a1 + 184 * a2;
    while (v3 != (void *)v7)
    {
      v3 -= 23;
      std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v3);
    }
    a1[1] = v7;
  }
}

void turi::sarray_format_reader_v2<turi::flexible_type>::open(turi::index_file_information)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", 116);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  int v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"m_num_rows", 10);
  BOOL v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  unint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"row_count", 9);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  long long v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", "operator()", 106, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::sarray_format_reader_v2<turi::flexible_type>::open(turi::index_file_information)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EE44F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t **std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__assign_multi<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>(uint64_t **result, long long *a2, long long *a3)
{
  BOOL v5 = result;
  if (result[2])
  {
    unint64_t v6 = *result;
    uint64_t v7 = result[1];
    char *result = (uint64_t *)(result + 1);
    void v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      uint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      uint64_t v8 = v6;
    }
    char v15 = result;
    uint64_t v16 = v8;
    uint64_t v17 = (const void **)v8;
    if (v8)
    {
      uint64_t v16 = std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::_DetachedTreeCache::__detach_next((uint64_t)v8);
      if (a2 != a3)
      {
        uint64_t v9 = a2;
        do
        {
          std::string::operator=((std::string *)(v8 + 4), (const std::string *)(v9 + 2));
          std::string::operator=((std::string *)(v8 + 7), (const std::string *)((char *)v9 + 56));
          leaf_high = (uint64_t **)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__find_leaf_high((uint64_t)v5, &v18, v17 + 4);
          std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(v5, v18, leaf_high, (uint64_t *)v17);
          uint64_t v17 = (const void **)v16;
          if (v16) {
            uint64_t v16 = std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::_DetachedTreeCache::__detach_next((uint64_t)v16);
          }
          long long v11 = (long long *)*((void *)v9 + 1);
          if (v11)
          {
            do
            {
              a2 = v11;
              long long v11 = *(long long **)v11;
            }
            while (v11);
          }
          else
          {
            do
            {
              a2 = (long long *)*((void *)v9 + 2);
              BOOL v12 = *(void *)a2 == (void)v9;
              uint64_t v9 = a2;
            }
            while (!v12);
          }
          uint64_t v8 = (uint64_t *)v17;
          if (v17) {
            BOOL v12 = a2 == a3;
          }
          else {
            BOOL v12 = 1;
          }
          uint64_t v9 = a2;
        }
        while (!v12);
      }
    }
    uint64_t result = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)&v15);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_multi<std::pair<std::string const,std::string> const&>(v5, a2 + 2);
      uint64_t v13 = (long long *)*((void *)a2 + 1);
      if (v13)
      {
        do
        {
          unint64_t v14 = v13;
          uint64_t v13 = *(long long **)v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          unint64_t v14 = (long long *)*((void *)a2 + 2);
          BOOL v12 = *(void *)v14 == (void)a2;
          a2 = v14;
        }
        while (!v12);
      }
      a2 = v14;
    }
    while (v14 != a3);
  }
  return result;
}

void sub_223EE4778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100](uint64_t a1)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void *)a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    int v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        int v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void *)a1, v2);
  }
  return a1;
}

uint64_t *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_multi<std::pair<std::string const,std::string> const&>(uint64_t **a1, long long *a2)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__construct_node<std::pair<std::string const,std::string> const&>((uint64_t)a1, a2, (uint64_t)v7);
  leaf_high = (uint64_t **)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__find_leaf_high((uint64_t)a1, &v6, (const void **)v7[0] + 4);
  std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, v6, leaf_high, v7[0]);
  unint64_t v4 = v7[0];
  v7[0] = 0;
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v7, 0);
  return v4;
}

void sub_223EE4850(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void **std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xD37A6F4DE9BD37A7 * ((v6 - v7) >> 3) >= a2)
  {
    return (void **)std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::__construct_at_end((uint64_t)a1, a2);
  }
  else
  {
    unint64_t v8 = 0xD37A6F4DE9BD37A7 * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x1642C8590B21642) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xD37A6F4DE9BD37A7 * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0xB21642C8590B21) {
      unint64_t v11 = 0x1642C8590B21642;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v20 = v4;
    if (v11) {
      BOOL v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>(v4, v11);
    }
    else {
      BOOL v12 = 0;
    }
    unint64_t v14 = &v12[184 * v8];
    v17[0] = v12;
    v17[1] = v14;
    uint64_t v18 = v14;
    unint64_t v19 = &v12[184 * v11];
    uint64_t v15 = 184 * a2;
    uint64_t v16 = &v14[184 * a2];
    do
    {
      *((void *)v14 + 22) = 0;
      *((_OWORD *)v14 + 9) = 0u;
      *((_OWORD *)v14 + 1std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
      *((_OWORD *)v14 + 7) = 0u;
      *((_OWORD *)v14 + 8) = 0u;
      *((_OWORD *)v14 + 5) = 0u;
      *((_OWORD *)v14 + 6) = 0u;
      *((_OWORD *)v14 + 3) = 0u;
      *((_OWORD *)v14 + 4) = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      *((_OWORD *)v14 + 2) = 0u;
      *(_OWORD *)unint64_t v14 = 0u;
      turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry::cache_entry((uint64_t)v14);
      v14 += 184;
      v15 -= 184;
    }
    while (v15);
    uint64_t v18 = v16;
    std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::__swap_out_circular_buffer(a1, v17);
    return std::__split_buffer<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry> &>::~__split_buffer(v17);
  }
}

void sub_223EE49D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry> &>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::__construct_at_end(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 8);
  if (a2)
  {
    uint64_t v4 = v3 + 184 * a2;
    uint64_t v5 = 184 * a2;
    do
    {
      *(void *)(v3 + 176) = 0;
      *(_OWORD *)(v3 + 144) = 0u;
      *(_OWORD *)(v3 + 16std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
      *(_OWORD *)(v3 + 112) = 0u;
      *(_OWORD *)(v3 + 128) = 0u;
      *(_OWORD *)(v3 + 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
      *(_OWORD *)(v3 + 96) = 0u;
      *(_OWORD *)(v3 + 48) = 0u;
      *(_OWORD *)(v3 + 64) = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
      *(_OWORD *)(v3 + 32) = 0u;
      *(_OWORD *)uint64_t v3 = 0u;
      uint64_t result = turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry::cache_entry(v3);
      v3 += 184;
      v5 -= 184;
    }
    while (v5);
    uint64_t v3 = v4;
  }
  *(void *)(v2 + 8) = v3;
  return result;
}

void sub_223EE4A70(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry::cache_entry(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  turi::v2_block_impl::encoded_block::encoded_block((turi::v2_block_impl::encoded_block *)(a1 + 40));
  *(void *)(a1 + 112) = -1;
  *(_OWORD *)(a1 + 12std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_WORD *)(a1 + 152) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 16std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
  return a1;
}

void sub_223EE4B4C(_Unwind_Exception *a1)
{
  uint64_t v3 = (std::__shared_weak_count *)*((void *)v1 + 4);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  turi::simple_spinlock::~simple_spinlock(v1);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1642C8590B21643) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(184 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  char v13 = 0;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 184;
      turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry::cache_entry(v7 - 184, v9);
      uint64_t v7 = *((void *)&v15 + 1) - 184;
      *((void *)&v15 + 1) -= 184;
    }
    while (v9 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

void sub_223EE4C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry::cache_entry(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 40;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  turi::v2_block_impl::encoded_block::encoded_block((turi::v2_block_impl::encoded_block *)(a1 + 40));
  *(void *)(a1 + 112) = -1;
  *(_OWORD *)(a1 + 12std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_WORD *)(a1 + 152) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 16std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = v5;
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  turi::v2_block_impl::encoded_block::operator=(v4, (long long *)(a2 + 40));
  turi::v2_block_impl::encoded_block_range::operator=(a1 + 112, (long long *)(a2 + 112));
  return a1;
}

void sub_223EE4D24(_Unwind_Exception *a1)
{
  uint64_t v3 = (std::__shared_weak_count *)*((void *)v1 + 4);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  turi::simple_spinlock::~simple_spinlock(v1);
  _Unwind_Resume(a1);
}

uint64_t turi::v2_block_impl::encoded_block::operator=(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(_OWORD *)(a1 + 26) = *(long long *)((char *)a2 + 26);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = a2[3];
  *((void *)a2 + 6) = 0;
  *((void *)a2 + 7) = 0;
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = v6;
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  return a1;
}

uint64_t turi::v2_block_impl::encoded_block_range::operator=(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(_OWORD *)(a1 + 26) = *(long long *)((char *)a2 + 26);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = a2[3];
  *((void *)a2 + 6) = 0;
  *((void *)a2 + 7) = 0;
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = v6;
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  uint64_t v8 = (turi::v2_block_impl::typed_decode_stream *)*((void *)a2 + 8);
  *((void *)a2 + 8) = 0;
  std::unique_ptr<turi::v2_block_impl::typed_decode_stream>::reset[abi:ne180100]((turi::v2_block_impl::typed_decode_stream **)(a1 + 64), v8);
  return a1;
}

turi::v2_block_impl::typed_decode_stream *std::unique_ptr<turi::v2_block_impl::typed_decode_stream>::reset[abi:ne180100](turi::v2_block_impl::typed_decode_stream **a1, turi::v2_block_impl::typed_decode_stream *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    turi::v2_block_impl::typed_decode_stream::~typed_decode_stream(result);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>,std::reverse_iterator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *(void **)(a1[2] + 8);
  uint64_t v2 = *(void **)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>::destroy[abi:ne180100](v3, v1);
      v1 += 23;
    }
    while (v1 != v2);
  }
}

void **std::__split_buffer<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry> &>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry,std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry> &>::clear[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 184;
    std::allocator<turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry>::destroy[abi:ne180100](v4, (void *)(i - 184));
  }
}

void turi::sarray_format_reader_v2<turi::flexible_type>::fetch_rows_from_cache(void *a1, unint64_t a2, unint64_t a3, void *a4)
{
  long long v5 = a1;
  unint64_t v6 = turi::sarray_format_reader_v2<turi::flexible_type>::block_offset_containing_row(a1, a2);
  unint64_t v79 = a3;
  unint64_t v77 = turi::sarray_format_reader_v2<turi::flexible_type>::block_offset_containing_row(v5, a3 - 1);
  if (v6 < v77 + 1)
  {
    unint64_t v7 = 0;
    unint64_t v76 = v5;
    do
    {
      uint64_t v8 = v6;
      uint64_t v9 = v5[24];
      unint64_t v10 = *(void *)(v9 + 8 * v6);
      unint64_t v11 = v6 + 1;
      unint64_t v12 = *(void *)(v9 + 8 * v11);
      uint64_t v13 = v5[42];
      long long v14 = (atomic_uchar *)(v13 + 184 * v8);
      do
      {
        while (*v14 == 1)
          ;
      }
      while (atomic_exchange(v14, 1u));
      if (v10 <= a2) {
        unint64_t v15 = a2;
      }
      else {
        unint64_t v15 = v10;
      }
      unint64_t v16 = v79;
      if (v12 < v79) {
        unint64_t v16 = v12;
      }
      unint64_t v81 = v16;
      if (!*(unsigned char *)(v13 + 184 * v8 + 17)) {
        turi::sarray_format_reader_v2<turi::flexible_type>::fetch_cache_from_file(v5, v8, v13 + 184 * v8);
      }
      uint64_t v17 = v8;
      unint64_t v18 = v7;
      unint64_t v80 = v11;
      uint64_t v19 = v13 + 184 * v17;
      unint64_t v22 = *(void *)(v19 + 8);
      uint64_t v21 = v19 + 8;
      unint64_t v20 = v22;
      unint64_t v23 = v15 - v22;
      BOOL v24 = v15 <= v22 || *(unsigned char *)(v21 + 8) == 0;
      unint64_t v82 = v17;
      if (v24)
      {
        if (v15 != v20)
        {
          turi::sarray_format_reader_v2<turi::flexible_type>::ensure_cache_decoded((uint64_t)v5, (uint64_t)v14, v17);
          unint64_t v6 = v80;
          unint64_t v25 = v82;
          uint64_t v26 = v81 - v15;
          if (v81 <= v15)
          {
            long long v5 = v76;
          }
          else
          {
            unint64_t v27 = v7;
            uint64_t v28 = (uint64_t **)(v13 + 184 * v82 + 24);
            uint64_t v29 = 16 * v15 - 16 * *(void *)(v76[24] + 8 * v82);
            uint64_t v30 = 16 * v27;
            unint64_t v74 = v27 + v81 - v15;
            do
            {
              uint64_t v31 = **v28;
              uint64_t v32 = (uint64_t *)(v31 + v29);
              uint64_t v33 = *a4 + v30;
              if (v33 != v31 + v29)
              {
                switch(*(unsigned char *)(v33 + 12))
                {
                  case 2:
                    if (atomic_fetch_add(*(atomic_ullong *volatile *)v33, 0xFFFFFFFFFFFFFFFFLL) == 1)
                    {
                      atomic_ullong *volatile v34 = *(atomic_ullong *volatile *)v33;
                      if (!*(void *)v33) {
                        goto LABEL_54;
                      }
                      if (*((char *)v34 + 31) < 0) {
                        operator delete((void *)v34[1]);
                      }
                      atomic_ullong *volatile v35 = v34;
                      uint64_t v36 = 0x1012C404EF22A49;
                      goto LABEL_53;
                    }
                    break;
                  case 3:
                    if (atomic_fetch_add(*(atomic_ullong *volatile *)v33, 0xFFFFFFFFFFFFFFFFLL) == 1)
                    {
                      atomic_ullong *volatile v37 = *(atomic_ullong *volatile *)v33;
                      if (!*(void *)v33) {
                        goto LABEL_54;
                      }
                      unint64_t v38 = (void *)v37[1];
                      if (v38)
                      {
                        v37[2] = (atomic_ullong)v38;
                        operator delete(v38);
                      }
                      atomic_ullong *volatile v35 = v37;
                      uint64_t v36 = 0x1080C409938AC02;
                      goto LABEL_53;
                    }
                    break;
                  case 4:
                    if (atomic_fetch_add(*(atomic_ullong *volatile *)v33, 0xFFFFFFFFFFFFFFFFLL) == 1)
                    {
                      atomic_ullong *volatile v39 = *(atomic_ullong *volatile *)v33;
                      if (!*(void *)v33) {
                        goto LABEL_54;
                      }
                      uint64_t v84 = (void **)(v39 + 1);
                      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v84);
                      goto LABEL_39;
                    }
                    break;
                  case 5:
                    if (atomic_fetch_add(*(atomic_ullong *volatile *)v33, 0xFFFFFFFFFFFFFFFFLL) == 1)
                    {
                      atomic_ullong *volatile v39 = *(atomic_ullong *volatile *)v33;
                      if (!*(void *)v33) {
                        goto LABEL_54;
                      }
                      uint64_t v84 = (void **)(v39 + 1);
                      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v84);
LABEL_39:
                      atomic_ullong *volatile v35 = v39;
                      uint64_t v36 = 0x1020C405E66F15BLL;
                      goto LABEL_53;
                    }
                    break;
                  case 8:
                    if (atomic_fetch_add(*(atomic_ullong *volatile *)v33, 0xFFFFFFFFFFFFFFFFLL) == 1)
                    {
                      atomic_ullong *volatile v40 = *(atomic_ullong *volatile *)v33;
                      if (!*(void *)v33) {
                        goto LABEL_54;
                      }
                      boost::detail::shared_count::~shared_count((atomic_uint **)v40 + 2);
                      atomic_ullong *volatile v35 = v40;
                      unsigned int v41 = -235920773;
                      goto LABEL_52;
                    }
                    break;
                  case 9:
                    if (atomic_fetch_add(*(atomic_ullong *volatile *)v33, 0xFFFFFFFFFFFFFFFFLL) == 1)
                    {
                      atomic_ullong *volatile v42 = *(atomic_ullong *volatile *)v33;
                      if (*(void *)v33)
                      {
                        unint64_t v43 = (void *)v42[6];
                        if (v43)
                        {
                          v42[7] = (atomic_ullong)v43;
                          operator delete(v43);
                        }
                        unint64_t v44 = (void *)v42[3];
                        if (v44)
                        {
                          v42[4] = (atomic_ullong)v44;
                          operator delete(v44);
                        }
                        unint64_t v45 = (std::__shared_weak_count *)v42[2];
                        if (v45) {
                          std::__shared_weak_count::__release_shared[abi:ne180100](v45);
                        }
                        atomic_ullong *volatile v35 = v42;
                        unsigned int v41 = 2071181815;
LABEL_52:
                        uint64_t v36 = v41 | 0x1030C4000000000;
LABEL_53:
                        MEMORY[0x22A614FA0](v35, v36);
                      }
LABEL_54:
                      *(void *)uint64_t v33 = 0;
                    }
                    break;
                  default:
                    break;
                }
                uint64_t v46 = *v32;
                *(void *)(v33 + 5) = *(uint64_t *)((char *)v32 + 5);
                *(void *)uint64_t v33 = v46;
                LODWORD(v46) = *(unsigned __int8 *)(v31 + v29 + 12);
                *(unsigned char *)(v33 + 12) = v46;
                BOOL v47 = v46 > 9;
                int v48 = (1 << v46) & 0x33C;
                if (!v47 && v48 != 0) {
                  atomic_fetch_add(*(atomic_ullong *volatile *)v33, 1uLL);
                }
              }
              v29 += 16;
              v30 += 16;
              --v26;
            }
            while (v26);
            unint64_t v7 = v74;
            long long v5 = v76;
            unint64_t v6 = v80;
            unint64_t v25 = v82;
          }
          goto LABEL_111;
        }
      }
      else
      {
        turi::v2_block_impl::encoded_block_range::skip(v13 + 184 * v17 + 112, v23);
        *(void *)uint64_t v21 = v15;
      }
      if (*(unsigned char *)(v21 + 8))
      {
        uint64_t v50 = v81 - v15;
        unint64_t v51 = v81;
        turi::v2_block_impl::encoded_block_range::decode_to((turi::v2_block_impl::encoded_block_range *)(v13 + 184 * v82 + 112), (turi::flexible_type *)(*a4 + 16 * v7), v50);
        v7 += v50;
        *(void *)uint64_t v21 = v81;
        unint64_t v25 = v82;
      }
      else
      {
        uint64_t v52 = v81 - v15;
        if (v81 <= v15)
        {
          long long v5 = v76;
          unint64_t v25 = v82;
          unint64_t v51 = v81;
        }
        else
        {
          size_t v53 = (uint64_t **)(v13 + 184 * v82 + 24);
          uint64_t v54 = 16 * v15 - 16 * *(void *)(v76[24] + 8 * v82);
          uint64_t v55 = 16 * v18;
          unint64_t v75 = v18 + v81 - v15;
          do
          {
            uint64_t v56 = **v53;
            unint64_t v57 = (uint64_t *)(v56 + v54);
            uint64_t v58 = *a4 + v55;
            if (v58 != v56 + v54)
            {
              switch(*(unsigned char *)(v58 + 12))
              {
                case 2:
                  if (atomic_fetch_add(*(atomic_ullong *volatile *)v58, 0xFFFFFFFFFFFFFFFFLL) == 1)
                  {
                    atomic_ullong *volatile v59 = *(atomic_ullong *volatile *)v58;
                    if (!*(void *)v58) {
                      goto LABEL_99;
                    }
                    if (*((char *)v59 + 31) < 0) {
                      operator delete((void *)v59[1]);
                    }
                    atomic_ullong *volatile v60 = v59;
                    uint64_t v61 = 0x1012C404EF22A49;
                    goto LABEL_98;
                  }
                  break;
                case 3:
                  if (atomic_fetch_add(*(atomic_ullong *volatile *)v58, 0xFFFFFFFFFFFFFFFFLL) == 1)
                  {
                    atomic_ullong *volatile v62 = *(atomic_ullong *volatile *)v58;
                    if (!*(void *)v58) {
                      goto LABEL_99;
                    }
                    unint64_t v63 = (void *)v62[1];
                    if (v63)
                    {
                      v62[2] = (atomic_ullong)v63;
                      operator delete(v63);
                    }
                    atomic_ullong *volatile v60 = v62;
                    uint64_t v61 = 0x1080C409938AC02;
                    goto LABEL_98;
                  }
                  break;
                case 4:
                  if (atomic_fetch_add(*(atomic_ullong *volatile *)v58, 0xFFFFFFFFFFFFFFFFLL) == 1)
                  {
                    atomic_ullong *volatile v64 = *(atomic_ullong *volatile *)v58;
                    if (!*(void *)v58) {
                      goto LABEL_99;
                    }
                    uint64_t v84 = (void **)(v64 + 1);
                    std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v84);
                    goto LABEL_84;
                  }
                  break;
                case 5:
                  if (atomic_fetch_add(*(atomic_ullong *volatile *)v58, 0xFFFFFFFFFFFFFFFFLL) == 1)
                  {
                    atomic_ullong *volatile v64 = *(atomic_ullong *volatile *)v58;
                    if (!*(void *)v58) {
                      goto LABEL_99;
                    }
                    uint64_t v84 = (void **)(v64 + 1);
                    std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v84);
LABEL_84:
                    atomic_ullong *volatile v60 = v64;
                    uint64_t v61 = 0x1020C405E66F15BLL;
                    goto LABEL_98;
                  }
                  break;
                case 8:
                  if (atomic_fetch_add(*(atomic_ullong *volatile *)v58, 0xFFFFFFFFFFFFFFFFLL) == 1)
                  {
                    atomic_ullong *volatile v65 = *(atomic_ullong *volatile *)v58;
                    if (!*(void *)v58) {
                      goto LABEL_99;
                    }
                    boost::detail::shared_count::~shared_count((atomic_uint **)v65 + 2);
                    atomic_ullong *volatile v60 = v65;
                    unsigned int v66 = -235920773;
                    goto LABEL_97;
                  }
                  break;
                case 9:
                  if (atomic_fetch_add(*(atomic_ullong *volatile *)v58, 0xFFFFFFFFFFFFFFFFLL) == 1)
                  {
                    atomic_ullong *volatile v67 = *(atomic_ullong *volatile *)v58;
                    if (*(void *)v58)
                    {
                      uint64_t v68 = (void *)v67[6];
                      if (v68)
                      {
                        v67[7] = (atomic_ullong)v68;
                        operator delete(v68);
                      }
                      uint64_t v69 = (void *)v67[3];
                      if (v69)
                      {
                        v67[4] = (atomic_ullong)v69;
                        operator delete(v69);
                      }
                      uint64_t v70 = (std::__shared_weak_count *)v67[2];
                      if (v70) {
                        std::__shared_weak_count::__release_shared[abi:ne180100](v70);
                      }
                      atomic_ullong *volatile v60 = v67;
                      unsigned int v66 = 2071181815;
LABEL_97:
                      uint64_t v61 = v66 | 0x1030C4000000000;
LABEL_98:
                      MEMORY[0x22A614FA0](v60, v61);
                    }
LABEL_99:
                    *(void *)uint64_t v58 = 0;
                  }
                  break;
                default:
                  break;
              }
              uint64_t v71 = *v57;
              *(void *)(v58 + 5) = *(uint64_t *)((char *)v57 + 5);
              *(void *)uint64_t v58 = v71;
              LODWORD(v71) = *(unsigned __int8 *)(v56 + v54 + 12);
              *(unsigned char *)(v58 + 12) = v71;
              BOOL v47 = v71 > 9;
              int v72 = (1 << v71) & 0x33C;
              if (!v47 && v72 != 0) {
                atomic_fetch_add(*(atomic_ullong *volatile *)v58, 1uLL);
              }
            }
            v54 += 16;
            v55 += 16;
            --v52;
          }
          while (v52);
          unint64_t v7 = v75;
          long long v5 = v76;
          unint64_t v51 = v81;
          unint64_t v25 = v82;
        }
      }
      unint64_t v6 = v80;
      if (v51 == *(void *)(v5[24] + 8 * v80)) {
        turi::sarray_format_reader_v2<turi::flexible_type>::release_cache(v5, v25);
      }
LABEL_111:
      __dmb(0xBu);
      *long long v14 = 0;
    }
    while (v25 != v77);
  }
}

void sub_223EE5648(_Unwind_Exception *a1)
{
  __dmb(0xBu);
  *uint64_t v1 = 0;
  _Unwind_Resume(a1);
}

unint64_t turi::sarray_format_reader_v2<turi::flexible_type>::block_offset_containing_row(void *a1, unint64_t a2)
{
  uint64_t v2 = (void *)a1[24];
  uint64_t v3 = (void *)a1[25];
  if (v3 != v2)
  {
    unint64_t v4 = v3 - v2;
    uint64_t v3 = (void *)a1[24];
    do
    {
      unint64_t v5 = v4 >> 1;
      unint64_t v6 = &v3[v4 >> 1];
      unint64_t v8 = *v6;
      unint64_t v7 = v6 + 1;
      v4 += ~(v4 >> 1);
      if (v8 < a2) {
        uint64_t v3 = v7;
      }
      else {
        unint64_t v4 = v5;
      }
    }
    while (v4);
  }
  unint64_t v9 = v3 - v2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[22] - a1[21]) >> 3);
  if (v9 >= v10) {
    return v10 - 1;
  }
  else {
    return v9 - (v2[v9] != a2);
  }
}

void turi::sarray_format_reader_v2<turi::flexible_type>::fetch_cache_from_file(void *a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 24))
  {
    turi::buffer_pool<std::vector<turi::flexible_type>>::release_buffer((uint64_t)&turi::sarray_format_reader_v2<turi::flexible_type>::m_buffer_pool, (__n128 *)(a3 + 24));
    unint64_t v6 = *(std::__shared_weak_count **)(a3 + 32);
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
  }
  uint64_t v7 = a1[21] + 24 * a2;
  unint64_t v20 = 0;
  uint64_t v8 = a1[1];
  uint64_t v9 = *(void *)(v7 + 16);
  long long v17 = *(_OWORD *)v7;
  uint64_t v18 = v9;
  turi::v2_block_impl::block_manager::read_block(v8, (unint64_t *)&v17, &v20, &v19);
  unint64_t v10 = v19.n128_u64[0];
  if (v19.n128_u64[0])
  {
    *(void *)(a3 + 8) = *(void *)(a1[24] + 8 * a2);
    long long v11 = v20[2];
    long long v12 = *v20;
    v16[1] = v20[1];
    v16[2] = v11;
    v16[0] = v12;
    unint64_t v14 = v10;
    unint64_t v15 = (std::__shared_weak_count *)v19.n128_u64[1];
    if (v19.n128_u64[1]) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v19.n128_u64[1] + 8), 1uLL, memory_order_relaxed);
    }
    turi::v2_block_impl::encoded_block::init(a3 + 40, v16, (uint64_t *)&v14);
    if (v15) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v15);
    }
    turi::v2_block_impl::encoded_block::get_range((turi::v2_block_impl::encoded_block *)(a3 + 40), (turi::v2_block_impl::encoded_block_range *)v13);
  }
  turi::sarray_format_reader_v2<turi::flexible_type>::fetch_cache_from_file(unsigned long,turi::sarray_format_reader_v2<turi::flexible_type>::cache_entry &)::{lambda(void)#1}::operator()();
}

void sub_223EE58C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unint64_t v22 = *(std::__shared_weak_count **)(v20 - 48);
  if (v22) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v22);
  }
  _Unwind_Resume(exception_object);
}

void turi::sarray_format_reader_v2<turi::flexible_type>::release_cache(void *a1, unint64_t a2)
{
  uint64_t v2 = a1[42];
  if (*(unsigned char *)(v2 + 184 * a2 + 17))
  {
    uint64_t v5 = 184 * a2;
    turi::buffer_pool<std::vector<turi::flexible_type>>::release_buffer((uint64_t)&turi::sarray_format_reader_v2<turi::flexible_type>::m_buffer_pool, (__n128 *)(v2 + 184 * a2 + 24));
    uint64_t v6 = a1[42] + v5;
    uint64_t v7 = *(std::__shared_weak_count **)(v6 + 32);
    *(void *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = 0;
    if (v7) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    }
    turi::v2_block_impl::encoded_block::release((turi::v2_block_impl::encoded_block *)(a1[42] + 184 * a2 + 40));
    turi::v2_block_impl::encoded_block_range::release((turi::v2_block_impl::typed_decode_stream **)(a1[42]
                                                                                                  + 184 * a2
                                                                                                  + 112));
    *(unsigned char *)(a1[42] + 184 * a2 + 17) = 0;
    atomic_fetch_and((atomic_ullong *volatile)(a1[38] + 8 * (a2 >> 6)), ~(1 << a2));
    atomic_fetch_add(a1 + 41, 0xFFFFFFFFFFFFFFFFLL);
  }
}

void turi::sarray_format_reader_v2<turi::flexible_type>::ensure_cache_decoded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 16))
  {
    turi::buffer_pool<std::vector<turi::flexible_type>>::get_new_buffer(&turi::sarray_format_reader_v2<turi::flexible_type>::m_buffer_pool, (uint64_t)v11);
    long long v6 = v11[0];
    v11[0] = 0uLL;
    uint64_t v7 = *(std::__shared_weak_count **)(a2 + 32);
    *(_OWORD *)(a2 + 24) = v6;
    if (v7)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v7);
      if (*((void *)&v11[0] + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v11[0] + 1));
      }
    }
    uint64_t v8 = *(void *)(a2 + 88);
    uint64_t v9 = *(std::__shared_weak_count **)(a2 + 96);
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    long long v10 = *(_OWORD *)(a2 + 56);
    v11[0] = *(_OWORD *)(a2 + 40);
    v11[1] = v10;
    v11[2] = *(_OWORD *)(a2 + 72);
    turi::v2_block_impl::typed_decode((uint64_t)v11, *(unsigned char **)v8, *(void *)(v8 + 8) - *(void *)v8, *(uint64_t **)(a2 + 24));
    turi::v2_block_impl::encoded_block::release((turi::v2_block_impl::encoded_block *)(a2 + 40));
    turi::v2_block_impl::encoded_block_range::release((turi::v2_block_impl::typed_decode_stream **)(a2 + 112));
    *(unsigned char *)(a2 + 16) = 0;
    *(void *)(a2 + 8) = *(void *)(*(void *)(a1 + 192) + 8 * a3);
    if (v9) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v9);
    }
  }
}

void sub_223EE5AA4(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void turi::buffer_pool<std::vector<turi::flexible_type>>::release_buffer(uint64_t a1, __n128 *a2)
{
  uint64_t v2 = (uint64_t *)a2->n128_u64[0];
  if (a2->n128_u64[0])
  {
    uint64_t v6 = *v2;
    uint64_t v5 = v2[1];
    if (v5 == *v2)
    {
      uint64_t v7 = (uint64_t *)a2->n128_u64[0];
    }
    else
    {
      do
      {
        v5 -= 16;
        std::allocator<turi::flexible_type>::destroy[abi:ne180100]((uint64_t)(v2 + 2), v5);
      }
      while (v5 != v6);
      uint64_t v7 = (uint64_t *)a2->n128_u64[0];
      uint64_t v5 = *(void *)a2->n128_u64[0];
    }
    v2[1] = v6;
    if ((unint64_t)(v7[2] - v5) >= 0xFFFFF1) {
      std::vector<turi::flexible_type>::shrink_to_fit(v7);
    }
    if ((unint64_t)(*(void *)(a1 + 136) + ((uint64_t)(*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 4)) < *(void *)(a1 + 64))
    {
      pthread_mutex_lock((pthread_mutex_t *)a1);
      std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::push_back((void *)(a1 + 96), a2);
      pthread_mutex_unlock((pthread_mutex_t *)a1);
    }
    uint64_t v8 = (std::__shared_weak_count *)a2->n128_u64[1];
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    if (v8)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    }
  }
}

void sub_223EE5BC4(_Unwind_Exception *a1)
{
  pthread_mutex_unlock(v1);
  _Unwind_Resume(a1);
}

void turi::sarray_format_reader_v2<turi::flexible_type>::try_evict_something_from_cache(turi::random *a1)
{
  uint64_t v2 = (uint64_t)(*((void *)a1 + 43) - *((void *)a1 + 42)) >> 3;
  unint64_t v3 = 0xD37A6F4DE9BD37A7 * v2 - 1;
  if (0xD37A6F4DE9BD37A7 * v2 != 1)
  {
    source = (char *)turi::random::get_source(a1);
    pthread_mutex_lock((pthread_mutex_t *)(source + 6288));
    unint64_t v3 = boost::random::detail::generate_uniform_int<boost::random::rand48,unsigned long>((uint64_t *)source + 785, 0, v3);
    pthread_mutex_unlock((pthread_mutex_t *)(source + 6288));
  }
  unint64_t v5 = v3 >> 6;
  uint64_t v6 = (void *)*((void *)a1 + 38);
  unint64_t v7 = v6[v3 >> 6];
  if ((v7 >> v3)) {
    goto LABEL_4;
  }
  unint64_t v9 = v7 & ~(0xFFFFFFFFFFFFFFFFLL >> (v3 & 0x3F ^ 0x3F));
  if (v9)
  {
    unint64_t v3 = __clz(__rbit64(v9)) | v3 & 0xFFFFFFFFFFFFFFC0;
LABEL_15:
    if (v3 < *((void *)a1 + 39)) {
      goto LABEL_4;
    }
  }
  else
  {
    unint64_t v10 = v5 << 6;
    unint64_t v11 = v5 + 1;
    while (v11 < *((void *)a1 + 40))
    {
      unint64_t v12 = v6[v11];
      v10 += 64;
      ++v11;
      if (v12)
      {
        unint64_t v3 = __clz(__rbit64(v12)) + v10;
        goto LABEL_15;
      }
    }
  }
  if ((*v6 & 1) == 0)
  {
    unint64_t v13 = *v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v13)
    {
      unint64_t v3 = __clz(__rbit64(v13));
      goto LABEL_4;
    }
    unint64_t v14 = *((void *)a1 + 40);
    if (v14 <= 1) {
      unint64_t v14 = 1;
    }
    unint64_t v15 = v14 - 1;
    unint64_t v16 = v6 + 1;
    while (v15)
    {
      unint64_t v18 = *v16++;
      unint64_t v17 = v18;
      --v15;
      v13 -= 64;
      if (v18)
      {
        unint64_t v3 = __clz(__rbit64(v17)) - v13;
        goto LABEL_4;
      }
    }
  }
  unint64_t v3 = 0;
LABEL_4:
  uint64_t v19 = *((void *)a1 + 42) + 184 * v3;
  char v20 = 0;
  if (std::unique_lock<turi::simple_spinlock>::try_lock((uint64_t)&v19)) {
    turi::sarray_format_reader_v2<turi::flexible_type>::release_cache(a1, v3);
  }
  if (v20)
  {
    uint64_t v8 = (unsigned char *)v19;
    __dmb(0xBu);
    unsigned char *v8 = 0;
  }
}

void sub_223EE5D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9, char a10)
{
  if (a10)
  {
    __dmb(0xBu);
    *a9 = 0;
  }
  _Unwind_Resume(a1);
}

void **std::vector<turi::flexible_type>::shrink_to_fit(uint64_t *a1)
{
  uint64_t v3 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  unint64_t v6 = (v5 - *a1) >> 4;
  if (v6 < (v3 - *a1) >> 4)
  {
    unint64_t v13 = result;
    if (v5 == v4)
    {
      unint64_t v7 = 0;
      uint64_t v8 = 0;
    }
    else
    {
      unint64_t v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>((uint64_t)result, v6);
    }
    unint64_t v9 = v7;
    unint64_t v10 = &v7[16 * v6];
    unint64_t v11 = v10;
    unint64_t v12 = &v7[16 * v8];
    std::vector<turi::flexible_type>::__swap_out_circular_buffer(a1, &v9);
    return std::__split_buffer<turi::flexible_type>::~__split_buffer(&v9);
  }
  return result;
}

void sub_223EE5E24(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

__n128 std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::push_back(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 32 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  __n128 result = *a2;
  *(__n128 *)(*(void *)(v5 + ((v7 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v7) = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  ++a1[5];
  return result;
}

void std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x100;
  unint64_t v4 = v2 - 256;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      atomic_ullong *volatile v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v5, v33);
      atomic_ullong *volatile v35 = &v34[8 * (v33 >> 2)];
      atomic_ullong *volatile v37 = &v34[8 * v36];
      unint64_t v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        unsigned int v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)unsigned int v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      unint64_t v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      std::__split_buffer<char *>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    std::__split_buffer<char *>::push_front((uint64_t)a1, &v54);
    unint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    unint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      atomic_ullong *volatile v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v46);
      atomic_ullong *volatile v35 = &v34[8 * (v46 >> 2)];
      atomic_ullong *volatile v37 = &v34[8 * v47];
      int v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      unint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  size_t v53 = operator new(0x1000uLL);
  std::__split_buffer<char *>::push_back(&v54, &v53);
  unint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<char *>::push_front((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_223EE61A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t std::unique_lock<turi::simple_spinlock>::try_lock(uint64_t a1)
{
  if (*(void *)a1)
  {
    if (!*(unsigned char *)(a1 + 8))
    {
      BOOL v1 = atomic_exchange(*(atomic_uchar *volatile *)a1, 1u) == 0;
      *(unsigned char *)(a1 + 8) = v1;
      return v1;
    }
  }
  else
  {
    std::__throw_system_error(1, "unique_lock::try_lock: references null mutex");
  }
  std::__throw_system_error(11, "unique_lock::try_lock: already locked");
  return turi::buffer_pool<std::vector<turi::flexible_type>>::get_new_buffer(v3);
}

uint64_t turi::buffer_pool<std::vector<turi::flexible_type>>::get_new_buffer@<X0>(pthread_mutex_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = &a1[1].__opaque[24];
  if (!*(void *)a1[2].__opaque)
  {
    pthread_mutex_lock(a1);
    uint64_t v6 = *(void *)a1[1].__opaque;
    uint64_t v5 = *(void *)&a1[1].__opaque[8];
    if (v5 != v6)
    {
      uint64_t v7 = 0;
      unint64_t v8 = 0;
      do
      {
        uint64_t v9 = *(void *)(v6 + v7 + 8);
        if (v9 && !*(void *)(v9 + 8))
        {
          std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::push_back(v4, (long long *)(v6 + v7));
          uint64_t v6 = *(void *)a1[1].__opaque;
          uint64_t v5 = *(void *)&a1[1].__opaque[8];
        }
        ++v8;
        v7 += 16;
      }
      while (v8 < (v5 - v6) >> 4);
    }
    pthread_mutex_unlock(a1);
    if (!*(void *)a1[2].__opaque) {
      goto LABEL_14;
    }
  }
  pthread_mutex_lock(a1);
  uint64_t v10 = *(void *)a1[2].__opaque;
  if (v10)
  {
    long long v11 = *(_OWORD *)(*(void *)(*(void *)&a1[1].__opaque[32]
                                + (((unint64_t)(v10 + a1[2].__sig - 1) >> 5) & 0x7FFFFFFFFFFFFF8))
                    + 16 * (v10 + LOBYTE(a1[2].__sig) - 1));
    *(_OWORD *)a2 = v11;
    if (*((void *)&v11 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v11 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::pop_back(v4);
  }
  uint64_t result = pthread_mutex_unlock(a1);
  if (!v10)
  {
LABEL_14:
    uint64_t v13 = operator new(0x30uLL);
    v13[1] = 0;
    v13[2] = 0;
    v13[3] = 0;
    *uint64_t v13 = &unk_26D7599A8;
    void v13[4] = 0;
    v13[5] = 0;
    *(void *)a2 = v13 + 3;
    *(void *)(a2 + 8) = v13;
    pthread_mutex_lock(a1);
    if (a1[1].__sig > (unint64_t)((uint64_t)(*(void *)&a1[1].__opaque[8] - *(void *)a1[1].__opaque) >> 4)) {
      std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::push_back[abi:ne180100]((uint64_t *)a1[1].__opaque, (long long *)a2);
    }
    return pthread_mutex_unlock(a1);
  }
  return result;
}

void sub_223EE63BC(_Unwind_Exception *a1)
{
  pthread_mutex_unlock(v1);
  if (*(void *)(v2 + 8)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*(std::__shared_weak_count **)(v2 + 8));
  }
  _Unwind_Resume(a1);
}

void **std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::push_back[abi:ne180100](uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  uint64_t v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = ((uint64_t)v7 - *a1) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v5 - *a1;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    void v18[4] = result;
    BOOL v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>((uint64_t)result, v13);
    uint64_t v15 = &v14[16 * v10];
    v18[0] = v14;
    v18[1] = v15;
    v18[3] = &v14[16 * v16];
    long long v17 = *a2;
    *(_OWORD *)uint64_t v15 = *a2;
    if (*((void *)&v17 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v17 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    v18[2] = v15 + 16;
    std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__swap_out_circular_buffer(a1, v18);
    uint64_t v9 = (void *)a1[1];
    uint64_t result = std::__split_buffer<std::shared_ptr<turi::group_aggregate_value>>::~__split_buffer(v18);
  }
  else
  {
    *uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    v7[1] = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v9 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_223EE6534(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::shared_ptr<turi::group_aggregate_value>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

void std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::push_back(void *a1, long long *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = 32 * (v4 - v5) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = v7 + a1[4];
  }
  long long v9 = *a2;
  *(_OWORD *)(*(void *)(v5 + ((v8 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v8) = *a2;
  if (*((void *)&v9 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v9 + 1) + 8), 1uLL, memory_order_relaxed);
    uint64_t v7 = a1[5];
  }
  a1[5] = v7 + 1;
}

uint64_t std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::pop_back(void *a1)
{
  uint64_t v2 = a1[5] - 1;
  BOOL v3 = *(std::__shared_weak_count **)(*(void *)(a1[1] + (((unint64_t)(v2 + a1[4]) >> 5) & 0x7FFFFFFFFFFFFF8))
                                    + 16 * (v2 + *((unsigned char *)a1 + 32))
                                    + 8);
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    uint64_t v2 = a1[5] - 1;
  }
  a1[5] = v2;
  return std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::__maybe_remove_back_spare[abi:ne180100](a1, 1);
}

uint64_t std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::__maybe_remove_back_spare[abi:ne180100](void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 32 * (v2 - v3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x100) {
    a2 = 1;
  }
  if (v5 < 0x200) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

void std::__shared_ptr_emplace<std::vector<turi::flexible_type>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D7599A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<std::vector<turi::flexible_type>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D7599A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<std::vector<turi::flexible_type>>::__on_zero_shared(uint64_t a1)
{
  BOOL v1 = (void **)(a1 + 24);
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v1);
}

uint64_t std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<std::vector<turi::flexible_type>>>,std::reverse_iterator<std::shared_ptr<std::vector<turi::flexible_type>>*>,std::reverse_iterator<std::shared_ptr<std::vector<turi::flexible_type>>*>,std::reverse_iterator<std::shared_ptr<std::vector<turi::flexible_type>>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<std::vector<turi::flexible_type>>>,std::reverse_iterator<std::shared_ptr<std::vector<turi::flexible_type>>*>,std::reverse_iterator<std::shared_ptr<std::vector<turi::flexible_type>>*>,std::reverse_iterator<std::shared_ptr<std::vector<turi::flexible_type>>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      _OWORD *v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<std::vector<turi::flexible_type>>>,std::reverse_iterator<std::shared_ptr<std::vector<turi::flexible_type>>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<std::vector<turi::flexible_type>>>,std::reverse_iterator<std::shared_ptr<std::vector<turi::flexible_type>>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::group_aggregate_value>>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

std::string *turi::index_file_information::index_file_information(std::string *this, const turi::index_file_information *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *(_OWORD *)a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  long long v5 = *(_OWORD *)((char *)a2 + 24);
  this[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
  *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v5;
  if (*((char *)a2 + 71) < 0)
  {
    std::string::__init_copy_ctor_external(this + 2, *((const std::string::value_type **)a2 + 6), *((void *)a2 + 7));
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 3);
    this[2].__r_.__value_.__r.__words[2] = *((void *)a2 + 8);
    *(_OWORD *)&this[2].__r_.__value_.__l.__data_ = v6;
  }
  this[3].__r_.__value_.__r.__words[0] = 0;
  this[3].__r_.__value_.__l.__size_ = 0;
  this[3].__r_.__value_.__r.__words[2] = 0;
  std::vector<unsigned long>::__init_with_size[abi:ne180100]<unsigned long *,unsigned long *>(this[3].__r_.__value_.__r.__words, *((const void **)a2 + 9), *((void *)a2 + 10), (uint64_t)(*((void *)a2 + 10) - *((void *)a2 + 9)) >> 3);
  this[4].__r_.__value_.__r.__words[0] = 0;
  this[4].__r_.__value_.__l.__size_ = 0;
  this[4].__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(this + 4, *((long long **)a2 + 12), *((long long **)a2 + 13), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 13) - *((void *)a2 + 12)) >> 3));
  std::map<std::string,std::string>::map[abi:ne180100]((uint64_t *)&this[5], (const void ***)a2 + 15);
  return this;
}

void sub_223EE69B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::map<std::string,std::string>::map[abi:ne180100](uint64_t *a1, const void ***a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::map<std::string,std::string>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>>(a1, *a2, a2 + 1);
  return a1;
}

void sub_223EE6A50(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::string,std::string>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>>(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    long long v6 = result + 1;
    do
    {
      uint64_t result = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::string> const&>(v5, v6, v4 + 4, (long long *)v4 + 2);
      uint64_t v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = (const void ***)v7;
          uint64_t v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          long long v4 = (const void **)v8;
        }
        while (!v9);
      }
      long long v4 = (const void **)v8;
    }
    while (v8 != a3);
  }
  return result;
}

void turi::sarray_reader<turi::flexible_type>::size(void)const::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", 108);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  long long v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"reader", 6);
  long long v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"!=", 2);
  long long v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"__null", 6);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  BOOL v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"!=", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  unint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_reader.hpp", "operator()", 364, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  char v13 = v16;
  turi::sarray_reader<turi::flexible_type>::size(void)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EE6C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void std::vector<turi::sarray_reader_buffer<turi::flexible_type>>::resize(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a1) >> 5);
  BOOL v5 = a2 >= v4;
  unint64_t v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    std::vector<turi::sarray_reader_buffer<turi::flexible_type>>::__append(a1, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = *a1 + 96 * a2;
    while (v3 != v7)
    {
      v3 -= 96;
      std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v3);
    }
    a1[1] = v7;
  }
}

void turi::sarray_reader_buffer<turi::flexible_type>::init(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  a1[5] = a2;
  a1[6] = 0;
  a1[11] = a3;
  a1[7] = a3;
  a1[8] = a3;
  unint64_t v8 = turi::sarray_reader<turi::flexible_type>::size(a2);
  if (v8 >= a4) {
    unint64_t v9 = a4;
  }
  else {
    unint64_t v9 = v8;
  }
  a1[9] = v9;
  a1[10] = a5;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  if (v10 != *a1)
  {
    do
    {
      v10 -= 16;
      std::allocator<turi::flexible_type>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v10);
    }
    while (v10 != v11);
  }
  a1[1] = v11;
}

void std::vector<turi::sarray_reader_buffer<turi::flexible_type>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 5) >= a2)
  {
    if (a2)
    {
      size_t v13 = 96 * ((96 * a2 - 96) / 0x60) + 96;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 5);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x2AAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 5);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x155555555555555) {
      unint64_t v11 = 0x2AAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v19 = v4;
    if (v11) {
      uint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>>(v4, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    char v15 = v12;
    uint64_t v16 = &v12[96 * v8];
    uint64_t v18 = &v12[96 * v11];
    size_t v14 = 96 * ((96 * a2 - 96) / 0x60) + 96;
    bzero(v16, v14);
    long long v17 = &v16[v14];
    std::vector<turi::sarray_reader_buffer<turi::flexible_type>>::__swap_out_circular_buffer(a1, &v15);
    std::__split_buffer<turi::sarray_reader_buffer<turi::flexible_type>>::~__split_buffer(&v15);
  }
}

void sub_223EE6FF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<turi::sarray_reader_buffer<turi::flexible_type>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<turi::sarray_reader_buffer<turi::flexible_type>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x2AAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(96 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 96) = 0;
      *(void *)(v7 - 88) = 0;
      *(void *)(v7 - 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
      long long v8 = *(_OWORD *)(a3 - 96);
      a3 -= 96;
      *(_OWORD *)(v7 - 96) = v8;
      *(void *)(v7 - 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = *(void *)(a3 + 16);
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(_OWORD *)(v7 - 72) = *(_OWORD *)(a3 + 24);
      *(void *)(a3 + 24) = 0;
      *(void *)(a3 + 32) = 0;
      long long v9 = *(_OWORD *)(a3 + 56);
      long long v10 = *(_OWORD *)(a3 + 72);
      uint64_t v11 = *(void *)(a3 + 88);
      *(_OWORD *)(v7 - 56) = *(_OWORD *)(a3 + 40);
      *(void *)(v7 - 8) = v11;
      *(_OWORD *)(v7 - 24) = v10;
      *(_OWORD *)(v7 - 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v9;
      uint64_t v7 = *((void *)&v17 + 1) - 96;
      *((void *)&v17 + 1) -= 96;
    }
    while (a3 != a5);
    uint64_t v12 = v17;
  }
  char v15 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v14);
  return v12;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,std::reverse_iterator<turi::sarray_reader_buffer<turi::flexible_type>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>::destroy[abi:ne180100](v3, v1);
      v1 += 96;
    }
    while (v1 != v2);
  }
}

void **std::__split_buffer<turi::sarray_reader_buffer<turi::flexible_type>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<turi::sarray_reader_buffer<turi::flexible_type>>::clear[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 96;
    std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>::destroy[abi:ne180100](v4, i - 96);
  }
}

void std::vector<std::shared_ptr<turi::fileio::file_ownership_handle>>::__assign_with_size[abi:ne180100]<std::shared_ptr<turi::fileio::file_ownership_handle>*,std::shared_ptr<turi::fileio::file_ownership_handle>*>(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  long long v9 = *(void **)a1;
  if (a4 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 4)
  {
    std::vector<std::shared_ptr<turi::fileio::file_ownership_handle>>::__vdeallocate((uint64_t *)a1);
    if (a4 >> 60) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = *(void *)(a1 + 16) - *(void *)a1;
    uint64_t v11 = v10 >> 3;
    if (v10 >> 3 <= a4) {
      uint64_t v11 = a4;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    std::vector<turi::flexible_type>::__vallocate[abi:ne180100]((void *)a1, v12);
    size_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::shared_ptr<turi::fileio::file_ownership_handle>*,std::shared_ptr<turi::fileio::file_ownership_handle>*,std::shared_ptr<turi::fileio::file_ownership_handle>*>(v8, a2, a3, *(void **)(a1 + 8));
    goto LABEL_11;
  }
  unint64_t v14 = (uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 4;
  if (v14 < a4)
  {
    char v15 = &a2[2 * v14];
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::shared_ptr<turi::fileio::file_ownership_handle> *,std::shared_ptr<turi::fileio::file_ownership_handle> *,std::shared_ptr<turi::fileio::file_ownership_handle> *>((uint64_t)&v20, a2, v15, v9);
    size_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::shared_ptr<turi::fileio::file_ownership_handle>*,std::shared_ptr<turi::fileio::file_ownership_handle>*,std::shared_ptr<turi::fileio::file_ownership_handle>*>(v8, v15, a3, *(void **)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v13;
    return;
  }
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::shared_ptr<turi::fileio::file_ownership_handle> *,std::shared_ptr<turi::fileio::file_ownership_handle> *,std::shared_ptr<turi::fileio::file_ownership_handle> *>((uint64_t)&v21, a2, a3, v9);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18 != v16)
  {
    do
    {
      uint64_t v19 = *(std::__shared_weak_count **)(v18 - 8);
      if (v19) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v19);
      }
      v18 -= 16;
    }
    while (v18 != v17);
  }
  *(void *)(a1 + 8) = v17;
}

void sub_223EE73E8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_223EE73F0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<std::shared_ptr<turi::fileio::file_ownership_handle>>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__clear[abi:ne180100](a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::shared_ptr<turi::fileio::file_ownership_handle>*,std::shared_ptr<turi::fileio::file_ownership_handle>*,std::shared_ptr<turi::fileio::file_ownership_handle>*>(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  long long v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  void v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *uint64_t v4 = *a2;
      uint64_t v5 = a2[1];
      v4[1] = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
      }
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::shared_ptr<turi::fileio::file_ownership_handle>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v7);
  return v4;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::shared_ptr<turi::fileio::file_ownership_handle>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::shared_ptr<turi::fileio::file_ownership_handle>*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::shared_ptr<turi::fileio::file_ownership_handle>*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(std::__shared_weak_count **)(v1 - 8);
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
    v1 -= 16;
  }
}

uint64_t *std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::shared_ptr<turi::fileio::file_ownership_handle> *,std::shared_ptr<turi::fileio::file_ownership_handle> *,std::shared_ptr<turi::fileio::file_ownership_handle> *>(uint64_t a1, uint64_t *a2, uint64_t *a3, void *a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    uint64_t v8 = *v5;
    uint64_t v7 = v5[1];
    if (v7) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
    }
    long long v9 = (std::__shared_weak_count *)a4[1];
    *a4 = v8;
    a4[1] = v7;
    if (v9) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v9);
    }
    a4 += 2;
    v5 += 2;
  }
  while (v5 != v6);
  return v6;
}

uint64_t std::__shared_ptr_pointer<turi::sarray_reader<turi::flexible_type> *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::sarray_reader<turi::flexible_type> *>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void *std::allocate_shared[abi:ne180100]<turi::sarray_reader_buffer<turi::flexible_type>,std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,std::shared_ptr<turi::sarray_reader<turi::flexible_type>> &,unsigned long &,unsigned long &,void>@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, unint64_t *a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x78uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::sarray_reader_buffer<turi::flexible_type>>::__shared_ptr_emplace[abi:ne180100]<std::shared_ptr<turi::sarray_reader<turi::flexible_type>> &,unsigned long &,unsigned long &,std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,0>(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_223EE7690(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<turi::sarray_reader_buffer<turi::flexible_type>>::__shared_ptr_emplace[abi:ne180100]<std::shared_ptr<turi::sarray_reader<turi::flexible_type>> &,unsigned long &,unsigned long &,std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>,0>(void *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D759A58;
  std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>::construct[abi:ne180100]<turi::sarray_reader_buffer<turi::flexible_type>,std::shared_ptr<turi::sarray_reader<turi::flexible_type>> &,unsigned long &,unsigned long &>((uint64_t)&v6, (uint64_t)(a1 + 3), a2, a3, a4);
  return a1;
}

void sub_223EE7708(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::sarray_reader_buffer<turi::flexible_type>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D759A58;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::sarray_reader_buffer<turi::flexible_type>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D759A58;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::sarray_reader_buffer<turi::flexible_type>>::__on_zero_shared(uint64_t a1)
{
  std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>::destroy[abi:ne180100]((uint64_t)&v1, a1 + 24);
}

void std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>::construct[abi:ne180100]<turi::sarray_reader_buffer<turi::flexible_type>,std::shared_ptr<turi::sarray_reader<turi::flexible_type>> &,unsigned long &,unsigned long &>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t v5 = (std::__shared_weak_count *)a3[1];
  uint64_t v6 = *a3;
  uint64_t v7 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  turi::sarray_reader_buffer<turi::flexible_type>::sarray_reader_buffer(a2, &v6, *a4, *a5, 1024);
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_223EE7824(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::sarray_reader_buffer<turi::flexible_type>::sarray_reader_buffer(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  turi::sarray_reader_buffer<turi::flexible_type>::init((uint64_t *)a1, a2, a3, a4, a5);
  return a1;
}

void sub_223EE787C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  unint64_t v12 = *(std::__shared_weak_count **)(v10 + 32);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  a10 = (void **)v10;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

void turi::sarray_reader_buffer<turi::flexible_type>::init(uint64_t *a1, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  if (v10) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = (std::__shared_weak_count *)a1[4];
  a1[3] = v9;
  a1[4] = v10;
  if (v11)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
    uint64_t v9 = a1[3];
  }
  a1[5] = v9;
  a1[6] = 0;
  a1[11] = a3;
  a1[7] = a3;
  a1[8] = a3;
  unint64_t v12 = turi::sarray_reader<turi::flexible_type>::size(v9);
  if (v12 >= a4) {
    unint64_t v13 = a4;
  }
  else {
    unint64_t v13 = v12;
  }
  a1[9] = v13;
  a1[10] = a5;
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  if (v14 != *a1)
  {
    do
    {
      v14 -= 16;
      std::allocator<turi::flexible_type>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v14);
    }
    while (v14 != v15);
  }
  a1[1] = v15;
}

void std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__base_destruct_at_end[abi:ne180100](v2, (uint64_t)*v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void *std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__base_destruct_at_end[abi:ne180100](void *result, uint64_t a2)
{
  uint64_t v3 = result;
  for (uint64_t i = result[1]; i != a2; i -= 96)
  {
    std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100]((void *)(i - 32));
    std::__function::__value_func<void ()(turi::flexible_type &&)>::~__value_func[abi:ne180100]((void *)(i - 64));
    uint64_t result = std::__function::__value_func<void ()(turi::flexible_type const&)>::~__value_func[abi:ne180100]((void *)(i - 96));
  }
  v3[1] = a2;
  return result;
}

uint64_t _ZNSt3__115allocate_sharedB8ne180100IN4turi6sarrayINS1_13flexible_typeEEENS_9allocatorIS4_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (char *)operator new(0x130uLL);
  uint64_t result = _ZNSt3__120__shared_ptr_emplaceIN4turi6sarrayINS1_13flexible_typeEEENS_9allocatorIS4_EEEC2B8ne180100IJES6_Li0EEES6_DpOT_((uint64_t)v2);
  *a1 = v2 + 24;
  a1[1] = v2;
  return result;
}

void sub_223EE7A38(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t _ZNSt3__120__shared_ptr_emplaceIN4turi6sarrayINS1_13flexible_typeEEENS_9allocatorIS4_EEEC2B8ne180100IJES6_Li0EEES6_DpOT_(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26D759AA8;
  *(_OWORD *)(a1 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 20std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  uint64_t v2 = a1 + 24;
  *(_OWORD *)(v2 + 24std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  turi::sarray<turi::flexible_type>::sarray(v2);
  return a1;
}

void sub_223EE7ADC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::sarray<turi::flexible_type>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D759AA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::sarray<turi::flexible_type>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D759AA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<turi::sarray<turi::flexible_type>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t turi::sarray<turi::flexible_type>::sarray(uint64_t a1)
{
  *(void *)a1 = &unk_26D759AF8;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = -1;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 12std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
  *(void *)(a1 + 128) = a1 + 136;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  int v2 = pthread_mutex_init((pthread_mutex_t *)(a1 + 184), 0);
  assert_msg(v2 == 0, "Mutex create error %d", v2);
  *(_WORD *)(a1 + 248) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 256) = 0;
  return a1;
}

void sub_223EE7C58(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 175) < 0) {
    operator delete(*v3);
  }
  turi::index_file_information::~index_file_information(v2);
  _Unwind_Resume(a1);
}

void turi::sarray<turi::flexible_type>::~sarray(uint64_t a1)
{
  turi::sarray<turi::flexible_type>::~sarray(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t turi::sarray<turi::flexible_type>::set_num_segments(uint64_t a1, uint64_t a2)
{
  assert_msg(*(unsigned __int8 *)(a1 + 248), "Invalid SArray");
  assert_msg(*(unsigned __int8 *)(a1 + 249), "SArray not opened for writing");
  if (a2 && (*(uint64_t (**)(void))(**(void **)(a1 + 176) + 120))(*(void *)(a1 + 176)) != a2)
  {
    uint64_t v5 = *(void *)(a1 + 176);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    operator new();
  }
  return 0;
}

void sub_223EE7F88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::sarray<turi::flexible_type>::num_segments(uint64_t a1)
{
  return *(void *)(a1 + 40);
}

void *turi::sarray<turi::flexible_type>::get_output_iterator@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void v13[4] = *MEMORY[0x263EF8340];
  v13[0] = a1[22];
  if (!v13[0])
  {
    v12[0] = v13;
    turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(void)#1}::operator()();
  }
  v12[0] = a2;
  v11[0] = (*(uint64_t (**)(void *))(*a1 + 24))(a1);
  if (v11[0] <= a2)
  {
    v13[0] = v12;
    v13[1] = v11;
    turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(void)#2}::operator()();
  }
  char type = turi::sarray<turi::flexible_type>::get_type((uint64_t)a1);
  uint64_t v7 = operator new(0x20uLL);
  *(void *)uint64_t v7 = &unk_26D759C20;
  v7[8] = type;
  *((void *)v7 + 2) = a1;
  *((void *)v7 + 3) = a2;
  v13[3] = v7;
  uint64_t v8 = operator new(0x20uLL);
  *(void *)uint64_t v8 = &unk_26D759CF0;
  v8[8] = type;
  *((void *)v8 + 2) = a1;
  *((void *)v8 + 3) = a2;
  void v12[3] = v8;
  uint64_t v9 = operator new(0x20uLL);
  *uint64_t v9 = &unk_26D759D80;
  v9[1] = a1;
  void v9[2] = a2;
  *((unsigned char *)v9 + 24) = type;
  _OWORD v11[3] = v9;
  turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>::sframe_function_output_iterator(a3, (uint64_t)v13, (uint64_t)v12, (uint64_t)v11);
  std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100](v11);
  std::__function::__value_func<void ()(turi::flexible_type &&)>::~__value_func[abi:ne180100](v12);
  return std::__function::__value_func<void ()(turi::flexible_type const&)>::~__value_func[abi:ne180100](v13);
}

void sub_223EE8190(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v8 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100]((uint64_t *)va);
  std::__function::__value_func<void ()(turi::flexible_type &&)>::~__value_func[abi:ne180100]((uint64_t *)va1);
  std::__function::__value_func<void ()(turi::flexible_type const&)>::~__value_func[abi:ne180100]((uint64_t *)va2);
  _Unwind_Resume(a1);
}

void turi::sarray<turi::flexible_type>::close(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 176) + 40))(*(void *)(a1 + 176));
  (*(void (**)(void))(**(void **)(a1 + 176) + 48))(*(void *)(a1 + 176));
  uint64_t v2 = *(void *)((*(uint64_t (**)(void))(**(void **)(a1 + 176) + 32))(*(void *)(a1 + 176)) + 64);
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)v2);
  uint64_t v3 = *(void *)(v2 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v2 + 24);
  *(void *)(a1 + 48) = v3;
  std::string::operator=((std::string *)(a1 + 56), (const std::string *)(v2 + 48));
  if (a1 + 8 != v2)
  {
    std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>((char *)(a1 + 80), *(char **)(v2 + 72), *(void *)(v2 + 80), (uint64_t)(*(void *)(v2 + 80) - *(void *)(v2 + 72)) >> 3);
    std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>((std::vector<std::string> *)(a1 + 104), *(std::string **)(v2 + 96), *(long long **)(v2 + 104), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 104) - *(void *)(v2 + 96)) >> 3));
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__assign_multi<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>((uint64_t **)(a1 + 128), *(long long **)(v2 + 120), (long long *)(v2 + 128));
  }
  uint64_t v4 = *(void *)(a1 + 176);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *(unsigned char *)(a1 + 249) = 0;
  turi::sarray<turi::flexible_type>::keep_array_file_ref((std::__split_buffer<std::string>::pointer)a1);
}

uint64_t turi::sarray<turi::flexible_type>::~sarray(uint64_t a1)
{
  *(void *)a1 = &unk_26D759AF8;
  uint64_t v4 = (void **)(a1 + 256);
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100](&v4);
  turi::mutex::~mutex((pthread_mutex_t *)(a1 + 184));
  if (*(char *)(a1 + 175) < 0) {
    operator delete(*(void **)(a1 + 152));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1 + 128, *(void **)(a1 + 136));
  uint64_t v4 = (void **)(a1 + 104);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v2 = *(void **)(a1 + 80);
  if (v2)
  {
    *(void *)(a1 + 88) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t turi::sarray_group_format_writer_v2<turi::flexible_type>::~sarray_group_format_writer_v2(uint64_t a1)
{
  *(void *)a1 = &unk_26D759B60;
  uint64_t v2 = (void **)(a1 + 24);
  uint64_t v4 = (void **)(a1 + 384);
  std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__destroy_vector::operator()[abi:ne180100](&v4);
  turi::v2_block_impl::block_writer::~block_writer(v2);
  return a1;
}

{
  void **v2;
  void **v4;

  *(void *)a1 = &unk_26D759B60;
  uint64_t v2 = (void **)(a1 + 24);
  uint64_t v4 = (void **)(a1 + 384);
  std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__destroy_vector::operator()[abi:ne180100](&v4);
  turi::v2_block_impl::block_writer::~block_writer(v2);
  return MEMORY[0x22A614FA0](a1, 0x10B3C40E6DD008DLL);
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::open(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  if (a4) {
    unint64_t v6 = a3;
  }
  else {
    unint64_t v6 = 0;
  }
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v7 = a1 + 24;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  turi::v2_block_impl::block_writer::init(v7, &__p, v6, v4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(void *)(a1 + 16) = v6;
  std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::resize((uint64_t *)(a1 + 384), v4);
  if (v4)
  {
    uint64_t v8 = 8;
    do
    {
      std::vector<std::vector<turi::flexible_type>>::resize((uint64_t *)(*(void *)(a1 + 384) + v8), v6);
      v8 += 56;
      --v4;
    }
    while (v4);
  }
  if (*(void *)(a1 + 16)) {
    turi::sarray_group_format_writer_v2<turi::flexible_type>::open_segment(a1, 0);
  }
}

void sub_223EE85C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::sarray_group_format_writer_v2<turi::flexible_type>::set_options(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return turi::v2_block_impl::block_writer::set_options(a1 + 24, a2, a3);
}

uint64_t turi::sarray_group_format_writer_v2<turi::flexible_type>::get_index_info(uint64_t a1)
{
  return turi::v2_block_impl::block_writer::get_index_info((turi::v2_block_impl::block_writer *)(a1 + 24));
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::close(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 8)) {
    turi::sarray_group_format_writer_v2<turi::flexible_type>::close(void)::{lambda(void)#1}::operator()();
  }
  *(unsigned char *)(a1 + 8) = 0;
  if (*(void *)(a1 + 16))
  {
    unint64_t v2 = 0;
    do
    {
      if (*(void *)(a1 + 392) != *(void *)(a1 + 384))
      {
        unint64_t v3 = 0;
        do
          turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_block(a1, v3++, v2);
        while (v3 < 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 392) - *(void *)(a1 + 384)) >> 3));
      }
      turi::v2_block_impl::block_writer::close_segment((turi::v2_block_impl::block_writer *)(a1 + 24), v2++);
    }
    while (v2 < *(void *)(a1 + 16));
  }
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::write_index_file(uint64_t a1)
{
}

uint64_t turi::sarray_group_format_writer_v2<turi::flexible_type>::write_segment(uint64_t result, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  if (a3[1] != *a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)v6 + 72))(v6, v8++, a2, v3 + v7);
      uint64_t v3 = *a3;
      v7 += 16;
    }
    while (v8 < (a3[1] - *a3) >> 4);
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  uint64_t v3 = *a3;
  if (a3[1] != *a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)v6 + 80))(v6, v8++, a2, v3 + v7);
      uint64_t v3 = *a3;
      v7 += 16;
    }
    while (v8 < (a3[1] - *a3) >> 4);
  }
  return result;
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::write_segment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(*(void *)(a1 + 384) + 56 * a2 + 8);
  uint64_t v8 = v7 + 24 * a3;
  unint64_t v9 = *(void *)(v8 + 8);
  unint64_t v10 = *(void *)(v8 + 16);
  uint64_t v11 = (uint64_t *)(v8 + 8);
  if (v9 >= v10)
  {
    uint64_t v14 = std::vector<turi::flexible_type>::__push_back_slow_path<turi::flexible_type const&>((uint64_t *)(v7 + 24 * a3), (atomic_ullong *volatile *)a4);
  }
  else
  {
    *(void *)unint64_t v9 = 0;
    *(_DWORD *)(v9 + 8) = 0;
    *(unsigned char *)(v9 + 12) = 0;
    if (v9 != a4)
    {
      atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)a4;
      *(void *)(v9 + 5) = *(void *)(a4 + 5);
      *(void *)unint64_t v9 = v12;
      unsigned int v13 = *(unsigned __int8 *)(a4 + 12);
      *(unsigned char *)(v9 + 12) = v13;
      if (v13 <= 9 && ((1 << v13) & 0x33C) != 0) {
        atomic_fetch_add(*(atomic_ullong *volatile *)v9, 1uLL);
      }
    }
    uint64_t v14 = v9 + 16;
  }
  *uint64_t v11 = v14;
  if (*(void *)(*(void *)(a1 + 384) + 56 * a2 + 32) <= (unint64_t)((uint64_t)(*(void *)(*(void *)(*(void *)(a1 + 384) + 56 * a2 + 8) + 24 * a3 + 8)
                                                                                       - *(void *)(*(void *)(*(void *)(a1 + 384) + 56 * a2 + 8) + 24 * a3)) >> 4))
  {
    turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_block(a1, a2, a3);
  }
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::write_segment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = 56 * a2;
  uint64_t v8 = 3 * a3;
  std::vector<turi::flexible_type>::push_back[abi:ne180100]((uint64_t *)(*(void *)(*(void *)(a1 + 384) + 56 * a2 + 8) + 24 * a3), a4);
  if (*(void *)(*(void *)(a1 + 384) + v7 + 32) <= (unint64_t)((uint64_t)(*(void *)(*(void *)(*(void *)(a1 + 384) + v7 + 8)
                                                                                              + 8 * v8
                                                                                              + 8)
                                                                                  - *(void *)(*(void *)(*(void *)(a1 + 384) + v7 + 8)
                                                                                              + 8 * v8)) >> 4))
  {
    turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_block(a1, a2, a3);
  }
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::write_segment(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 384);
  if (*(void *)(a1 + 392) != v3)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    do
    {
      std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::__wrap_iter<turi::flexible_type *>,std::__wrap_iter<turi::flexible_type *>,std::back_insert_iterator<std::vector<turi::flexible_type>>,0>(**(void **)(*a3 + v8), *(void *)(*(void *)(*a3 + v8) + 8), (uint64_t *)(*(void *)(v3 + v7 + 8) + 24 * a2));
      uint64_t v3 = *(void *)(a1 + 384);
      if (*(void *)(v3 + v7 + 32) <= (unint64_t)((uint64_t)(*(void *)(*(void *)(v3 + v7 + 8) + 24 * a2 + 8)
                                                                   - *(void *)(*(void *)(v3 + v7 + 8) + 24 * a2)) >> 4))
      {
        turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_block(a1, v9, a2);
        uint64_t v3 = *(void *)(a1 + 384);
      }
      ++v9;
      v8 += 16;
      v7 += 56;
    }
    while (v9 < 0x6DB6DB6DB6DB6DB7 * ((*(void *)(a1 + 392) - v3) >> 3));
  }
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::write_column(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = *a4;
  uint64_t v5 = a4[1];
  if (*a4 != v5)
  {
    uint64_t v9 = *(void *)(a1 + 384) + 56 * a2;
    unint64_t v10 = (void *)(v9 + 32);
    uint64_t v11 = (uint64_t *)(*(void *)(v9 + 8) + 24 * a3);
    atomic_ullong *volatile v12 = v11 + 1;
    do
    {
      uint64_t v13 = *v12;
      if (*v12 >= (unint64_t)v11[2])
      {
        uint64_t v16 = std::vector<turi::flexible_type>::__push_back_slow_path<turi::flexible_type const&>(v11, (atomic_ullong *volatile *)v4);
      }
      else
      {
        *(void *)uint64_t v13 = 0;
        *(_DWORD *)(v13 + 8) = 0;
        *(unsigned char *)(v13 + 12) = 0;
        if (v4 != v13)
        {
          atomic_ullong *volatile v14 = *(atomic_ullong *volatile *)v4;
          *(void *)(v13 + 5) = *(void *)(v4 + 5);
          *(void *)uint64_t v13 = v14;
          unsigned int v15 = *(unsigned __int8 *)(v4 + 12);
          *(unsigned char *)(v13 + 12) = v15;
          if (v15 <= 9 && ((1 << v15) & 0x33C) != 0) {
            atomic_fetch_add(*(atomic_ullong *volatile *)v13, 1uLL);
          }
        }
        uint64_t v16 = v13 + 16;
      }
      *atomic_ullong *volatile v12 = v16;
      if (*v10 <= (unint64_t)((v16 - *v11) >> 4)) {
        turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_block(a1, a2, a3);
      }
      v4 += 16;
    }
    while (v4 != v5);
  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  atomic_ullong *volatile v14;
  unsigned int v15;
  uint64_t v16;

  uint64_t v4 = *a4;
  uint64_t v5 = a4[1];
  if (*a4 != v5)
  {
    uint64_t v9 = *(void *)(a1 + 384);
    unint64_t v10 = (uint64_t *)(*(void *)(v9 + 56 * a2 + 8) + 24 * a3);
    uint64_t v11 = *(void *)(v9 + 56 * a2 + 32);
    atomic_ullong *volatile v12 = v10 + 1;
    do
    {
      uint64_t v13 = *v12;
      if (*v12 >= (unint64_t)v10[2])
      {
        uint64_t v16 = std::vector<turi::flexible_type>::__push_back_slow_path<turi::flexible_type const&>(v10, (atomic_ullong *volatile *)v4);
      }
      else
      {
        *(void *)uint64_t v13 = 0;
        *(_DWORD *)(v13 + 8) = 0;
        *(unsigned char *)(v13 + 12) = 0;
        if (v4 != v13)
        {
          atomic_ullong *volatile v14 = *(atomic_ullong *volatile *)v4;
          *(void *)(v13 + 5) = *(void *)(v4 + 5);
          *(void *)uint64_t v13 = v14;
          unsigned int v15 = *(unsigned __int8 *)(v4 + 12);
          *(unsigned char *)(v13 + 12) = v15;
          if (v15 <= 9 && ((1 << v15) & 0x33C) != 0) {
            atomic_fetch_add(*(atomic_ullong *volatile *)v13, 1uLL);
          }
        }
        uint64_t v16 = v13 + 16;
      }
      *atomic_ullong *volatile v12 = v16;
      if (v11 <= (v16 - *v10) >> 4)
      {
        turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_block(a1, a2, a3);
        uint64_t v11 = *(void *)(*(void *)(a1 + 384) + 56 * a2 + 32);
      }
      v4 += 16;
    }
    while (v4 != v5);
  }
}

void **turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_segment(void **result, uint64_t a2)
{
  if (result[49] != result[48])
  {
    uint64_t v3 = (uint64_t)result;
    unint64_t v4 = 0;
    uint64_t v5 = 8;
    do
    {
      turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_block(v3, v4, a2);
      uint64_t result = std::vector<turi::flexible_type>::shrink_to_fit((uint64_t *)(*(void *)(*(void *)(v3 + 384) + v5)
                                                                         + 24 * a2));
      ++v4;
      v5 += 56;
    }
    while (v4 < 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(v3 + 392) - *(void *)(v3 + 384)) >> 3));
  }
  return result;
}

uint64_t turi::sarray_group_format_writer_v2<turi::flexible_type>::num_segments(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 8)) {
    turi::sarray_group_format_writer_v2<turi::flexible_type>::num_segments(void)const::{lambda(void)#1}::operator()();
  }
  return *(void *)(a1 + 16);
}

uint64_t turi::sarray_group_format_writer_v2<turi::flexible_type>::num_columns(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 8)) {
    turi::sarray_group_format_writer_v2<turi::flexible_type>::num_columns(void)const::{lambda(void)#1}::operator()();
  }
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 392) - *(void *)(a1 + 384)) >> 3);
}

void std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  unint64_t v2 = (turi::simple_spinlock **)*a1;
  if (*v2)
  {
    std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, turi::simple_spinlock *a2)
{
  unint64_t v4 = *(turi::simple_spinlock **)(a1 + 8);
  if (v4 != a2)
  {
    do
    {
      uint64_t v5 = (turi::simple_spinlock *)((char *)v4 - 56);
      uint64_t v6 = (void **)((char *)v4 - 48);
      std::vector<std::vector<turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v6);
      turi::simple_spinlock::~simple_spinlock(v5);
      unint64_t v4 = v5;
    }
    while (v5 != a2);
  }
  *(void *)(a1 + 8) = a2;
}

void std::vector<std::vector<turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (void **)**a1;
  if (v2)
  {
    unint64_t v4 = (void **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        uint64_t v6 = v4;
        std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void turi::v2_block_impl::block_writer::~block_writer(void **this)
{
  uint64_t v3 = this + 41;
  std::vector<std::vector<float>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v3 = this + 38;
  std::vector<std::vector<std::vector<float>>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v3 = this + 35;
  std::vector<turi::index_file_information>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v3 = this + 32;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v3);
  if (*((char *)this + 239) < 0) {
    operator delete(this[27]);
  }
  unint64_t v2 = this[24];
  if (v2)
  {
    this[25] = v2;
    operator delete(v2);
  }
  uint64_t v3 = this + 21;
  std::vector<turi::mutex>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v3 = this + 18;
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100](&v3);
  std::deque<std::shared_ptr<std::vector<turi::flexible_type>>>::~deque[abi:ne180100](this + 12);
  uint64_t v3 = this + 9;
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100](&v3);
  turi::mutex::~mutex((pthread_mutex_t *)this);
}

void std::vector<turi::index_file_information>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 144;
        std::allocator<turi::index_file_information>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<turi::index_file_information>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a2 + 120, *(void **)(a2 + 128));
  uint64_t v4 = (void **)(a2 + 96);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v3 = *(void **)(a2 + 72);
  if (v3)
  {
    *(void *)(a2 + 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v3;
    operator delete(v3);
  }
  if (*(char *)(a2 + 71) < 0) {
    operator delete(*(void **)(a2 + 48));
  }
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

void std::vector<turi::mutex>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (pthread_mutex_t *)**a1;
  if (v2)
  {
    uint64_t v4 = (pthread_mutex_t *)v1[1];
    uint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        turi::mutex::~mutex(v4 - 1);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::resize(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__append(a1, v4);
  }
  else if (!v3)
  {
    std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, (turi::simple_spinlock *)(*a1 + 56 * a2));
  }
}

void std::vector<std::vector<turi::flexible_type>>::resize(uint64_t *a1, unint64_t a2)
{
  BOOL v3 = (void **)a1[1];
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v3 - *a1) >> 3);
  BOOL v5 = a2 >= v4;
  unint64_t v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    std::vector<std::vector<turi::flexible_type>>::__append(a1, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = *a1 + 24 * a2;
    while (v3 != (void **)v7)
    {
      v3 -= 3;
      uint64_t v8 = v3;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v8);
    }
    a1[1] = v7;
  }
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::open_segment(uint64_t a1, std::string::size_type a2)
{
  unint64_t v4 = (int *)global_logger();
  if (v4[169] <= 1)
  {
    if (cppipc::must_cancel((cppipc *)v4)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    BOOL v5 = (file_logger *)global_logger();
    started = file_logger::start_stream(v5, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", "open_segment", 797, 1);
    uint64_t v7 = pthread_getspecific(*((void *)started + 74));
    if (v7 && *((unsigned char *)v7 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7 + 2, (uint64_t)"Function entry", 14);
    }
    uint64_t v8 = pthread_getspecific(*((void *)started + 74));
    if (v8)
    {
      if (*((unsigned char *)v8 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(v8[2] - 24) + 16));
        uint64_t v9 = std::locale::use_facet(&v34, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v9->__vftable[2].~facet_0)(v9, 10);
        std::locale::~locale(&v34);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush(started);
        if (*((_DWORD *)started + 150) == 7)
        {
          __print_back_trace();
          exception = __cxa_allocate_exception(8uLL);
          void *exception = "LOG_FATAL encountered";
          __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
  }
  assert_msg(*(unsigned __int8 *)(a1 + 8), "sarray not open");
  uint64_t index_info = turi::v2_block_impl::block_writer::get_index_info((turi::v2_block_impl::block_writer *)(a1 + 24));
  if (*(char *)(index_info + 23) < 0) {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)index_info, *(void *)(index_info + 8));
  }
  else {
    std::string __str = *(std::string *)index_info;
  }
  *(_DWORD *)((char *)v36 + 3) = 0;
  v36[0] = 0;
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v34);
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  std::string::basic_string(&v33, &__str, 0, size - 5, (std::allocator<char> *)v38);
  if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    atomic_ullong *volatile v12 = &v33;
  }
  else {
    atomic_ullong *volatile v12 = (std::string *)v33.__r_.__value_.__r.__words[0];
  }
  if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = HIBYTE(v33.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v13 = v33.__r_.__value_.__l.__size_;
  }
  atomic_ullong *volatile v14 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v35, (uint64_t)v12, v13);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)".", 1);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v33.__r_.__value_.__l.__data_);
  }
  int locale = v34.__locale_;
  uint64_t v16 = (char *)&v34 + *((void *)v34.__locale_ - 3);
  if (*((_DWORD *)v16 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)&v34 + *((void *)v34.__locale_ - 3)));
    uint64_t v17 = std::locale::use_facet((const std::locale *)&v33, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v17->__vftable[2].~facet_0)(v17, 32);
    std::locale::~locale((std::locale *)&v33);
    int locale = v34.__locale_;
  }
  *((_DWORD *)v16 + 36) = 48;
  *(void **)((char *)&v35[1] + *((void *)locale - 3)) = (void *)4;
  std::ostream::operator<<();
  std::stringbuf::str();
  long long v18 = *(_OWORD *)&v33.__r_.__value_.__l.__data_;
  v36[0] = v33.__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)v36 + 3) = *(_DWORD *)((char *)&v33.__r_.__value_.__r.__words[2] + 3);
  int v19 = SHIBYTE(v33.__r_.__value_.__r.__words[2]);
  char v20 = (int *)global_logger();
  if (v20[169] > 1) {
    goto LABEL_39;
  }
  if (cppipc::must_cancel((cppipc *)v20)) {
    log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
  }
  char v21 = (file_logger *)global_logger();
  unint64_t v22 = file_logger::start_stream(v21, 1, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", "open_segment", 810, 1);
  uint64_t v23 = pthread_getspecific(*((void *)v22 + 74));
  if (v23 && *((unsigned char *)v23 + 280)) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v23 + 2, (uint64_t)"Open segment ", 13);
  }
  uint64_t v24 = file_logger::operator<<<unsigned long>((uint64_t)v22);
  unint64_t v25 = pthread_getspecific(*(void *)(v24 + 592));
  if (v25 && *((unsigned char *)v25 + 280)) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v25 + 2, (uint64_t)" for write on ", 14);
  }
  if (v19 < 0)
  {
    std::string::__init_copy_ctor_external(&v32, (const std::string::value_type *)v18, *((std::string::size_type *)&v18 + 1));
  }
  else
  {
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v18;
    LODWORD(v32.__r_.__value_.__r.__words[2]) = v36[0];
    *(_DWORD *)((char *)&v32.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v36 + 3);
    *((unsigned char *)&v32.__r_.__value_.__s + 23) = v19;
  }
  uint64_t v26 = file_logger::operator<<<std::string>(v24, (uint64_t)&v32);
  unint64_t v27 = pthread_getspecific(*(void *)(v26 + 592));
  if (v27 && *((unsigned char *)v27 + 280))
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v27 + *(void *)(v27[2] - 24) + 16));
    uint64_t v28 = std::locale::use_facet((const std::locale *)&v33, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v28->__vftable[2].~facet_0)(v28, 10);
    std::locale::~locale((std::locale *)&v33);
    std::ostream::put();
    std::ostream::flush();
    file_logger::stream_flush((file_logger *)v26);
    if (*(_DWORD *)(v26 + 600) == 7)
    {
      __print_back_trace();
      long long v30 = __cxa_allocate_exception(8uLL);
      *long long v30 = "LOG_FATAL encountered";
      __cxa_throw(v30, MEMORY[0x263F8C1D8], 0);
    }
  }
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v32.__r_.__value_.__l.__data_);
    if ((v19 & 0x80000000) == 0) {
      goto LABEL_40;
    }
  }
  else
  {
LABEL_39:
    if ((v19 & 0x80000000) == 0)
    {
LABEL_40:
      *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v18;
      LODWORD(v31.__r_.__value_.__r.__words[2]) = v36[0];
      *(_DWORD *)((char *)&v31.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v36 + 3);
      *((unsigned char *)&v31.__r_.__value_.__s + 23) = v19;
      goto LABEL_43;
    }
  }
  std::string::__init_copy_ctor_external(&v31, (const std::string::value_type *)v18, *((std::string::size_type *)&v18 + 1));
LABEL_43:
  turi::v2_block_impl::block_writer::open_segment(a1 + 24, a2);
}

void sub_223EE994C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::locale a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,std::locale a28)
{
  std::locale::~locale(&a22);
  if (a21 < 0) {
    operator delete(__p);
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a28);
  if (v29 < 0) {
    operator delete(v28);
  }
  if (*(char *)(v30 - 105) < 0) {
    operator delete(*(void **)(v30 - 128));
  }
  _Unwind_Resume(a1);
}

uint64_t std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(result - 8);
  if (0x6DB6DB6DB6DB6DB7 * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      uint64_t v13 = v7 + 56 * a2;
      do
      {
        *(_OWORD *)uint64_t v7 = 0uLL;
        *(_OWORD *)(v7 + 16) = 0uLL;
        *(void *)(v7 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
        *(void *)(v7 + 48) = 0;
        *(void *)(v7 + 32) = 16;
        v7 += 56;
      }
      while (v7 != v13);
      uint64_t v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = 0x6DB6DB6DB6DB6DB7 * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x492492492492492) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0x6DB6DB6DB6DB6DB7 * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x249249249249249) {
      unint64_t v11 = 0x492492492492492;
    }
    else {
      unint64_t v11 = v9;
    }
    v16[4] = result;
    if (v11) {
      atomic_ullong *volatile v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::toolkit_class_specification>>(result, v11);
    }
    else {
      atomic_ullong *volatile v12 = 0;
    }
    atomic_ullong *volatile v14 = &v12[56 * v8];
    v16[0] = v12;
    v16[1] = v14;
    long long v16[3] = &v12[56 * v11];
    unsigned int v15 = &v14[56 * a2];
    do
    {
      *(_OWORD *)atomic_ullong *volatile v14 = 0uLL;
      *((_OWORD *)v14 + 1) = 0uLL;
      *((void *)v14 + 5) = 0;
      *((void *)v14 + 6) = 0;
      *((void *)v14 + 4) = 16;
      v14 += 56;
    }
    while (v14 != v15);
    v16[2] = v15;
    std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__swap_out_circular_buffer(a1, v16);
    return std::__split_buffer<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer> &>::~__split_buffer((uint64_t)v16);
  }
  return result;
}

void sub_223EE9B7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer> &>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 56;
      std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>::construct[abi:ne180100]<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer const&>(a1, (__n128 *)(v7 - 56), v9);
      uint64_t v7 = *((void *)&v16 + 1) - 56;
      *((void *)&v16 + 1) -= 56;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

void sub_223EE9CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

__n128 std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>::construct[abi:ne180100]<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer const&>(uint64_t a1, __n128 *a2, uint64_t a3)
{
  a2->n128_u8[0] = 0;
  a2[1].n128_u64[0] = 0;
  a2[1].n128_u64[1] = 0;
  a2->n128_u64[1] = 0;
  std::vector<std::vector<turi::flexible_type>>::__init_with_size[abi:ne180100]<std::vector<turi::flexible_type>*,std::vector<turi::flexible_type>*>(&a2->n128_u64[1], *(uint64_t ***)(a3 + 8), *(uint64_t ***)(a3 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a3 + 16) - *(void *)(a3 + 8)) >> 3));
  __n128 result = *(__n128 *)(a3 + 32);
  a2[3].n128_u64[0] = *(void *)(a3 + 48);
  a2[2] = result;
  return result;
}

void sub_223EE9D34(_Unwind_Exception *a1)
{
  turi::simple_spinlock::~simple_spinlock(v1);
  _Unwind_Resume(a1);
}

void *std::vector<std::vector<turi::flexible_type>>::__init_with_size[abi:ne180100]<std::vector<turi::flexible_type>*,std::vector<turi::flexible_type>*>(void *result, uint64_t **a2, uint64_t **a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<std::string>::__vallocate[abi:ne180100](result, a4);
    __n128 result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<turi::flexible_type>>,std::vector<turi::flexible_type>*,std::vector<turi::flexible_type>*,std::vector<turi::flexible_type>*>((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_223EE9DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::vector<turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<turi::flexible_type>>,std::vector<turi::flexible_type>*,std::vector<turi::flexible_type>*,std::vector<turi::flexible_type>*>(uint64_t a1, uint64_t **a2, uint64_t **a3, void *a4)
{
  unint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  uint64_t v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *unint64_t v4 = 0;
      v4[1] = 0;
      uint64_t v4[2] = 0;
      std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(v4, *v6, v6[1], ((char *)v6[1] - (char *)*v6) >> 4);
      unint64_t v4 = v11 + 3;
      v11 += 3;
      v6 += 3;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<turi::flexible_type>>,std::vector<turi::flexible_type>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_223EE9E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<turi::flexible_type>>,std::vector<turi::flexible_type>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<turi::flexible_type>>,std::vector<turi::flexible_type>*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<turi::flexible_type>>,std::vector<turi::flexible_type>*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void ****)(a1 + 16);
  unint64_t v2 = **(void ****)(a1 + 8);
  while (v1 != v2)
  {
    v1 -= 3;
    BOOL v3 = v1;
    std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v3);
  }
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>,std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v14 = v3;
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  uint64_t v17 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v9 = v7;
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  std::__allocator_destroy[abi:ne180100]<std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>,std::reverse_iterator<std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>,std::reverse_iterator<std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>>(v4, (uint64_t)v13, (uint64_t)v8);
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer>,std::reverse_iterator<std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>,std::reverse_iterator<std::reverse_iterator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer*>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *(void ***)(a2 + 32); i != *(void ***)(a3 + 32); *(void *)(a2 + 32) = i)
  {
    uint64_t v6 = i + 1;
    std::vector<std::vector<turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v6);
    turi::simple_spinlock::~simple_spinlock((turi::simple_spinlock *)i);
    uint64_t i = (void **)(*(void *)(a2 + 32) + 56);
  }
}

uint64_t std::__split_buffer<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer> &>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer,std::allocator<turi::sarray_group_format_writer_v2<turi::flexible_type>::column_buffer> &>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 16); i != a2; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v5 = (turi::simple_spinlock *)(i - 56);
    *(void *)(a1 + 16) = i - 56;
    uint64_t v6 = (void **)(i - 48);
    std::vector<std::vector<turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v6);
    turi::simple_spinlock::~simple_spinlock(v5);
  }
}

void std::vector<std::vector<turi::flexible_type>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      size_t v13 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v19 = v4;
    if (v11) {
      uint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>(v4, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    uint64_t v15 = v12;
    uint64_t v16 = &v12[24 * v8];
    uint64_t v18 = &v12[24 * v11];
    size_t v14 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v16, v14);
    uint64_t v17 = &v16[v14];
    std::vector<std::vector<turi::flexible_type>>::__swap_out_circular_buffer(a1, &v15);
    std::__split_buffer<std::vector<turi::flexible_type>>::~__split_buffer(&v15);
  }
}

void sub_223EEA224(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::vector<turi::flexible_type>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::vector<turi::flexible_type>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<turi::flexible_type>>,std::reverse_iterator<std::vector<turi::flexible_type>*>,std::reverse_iterator<std::vector<turi::flexible_type>*>,std::reverse_iterator<std::vector<turi::flexible_type>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<turi::flexible_type>>,std::reverse_iterator<std::vector<turi::flexible_type>*>,std::reverse_iterator<std::vector<turi::flexible_type>*>,std::reverse_iterator<std::vector<turi::flexible_type>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<turi::flexible_type>>,std::reverse_iterator<std::vector<turi::flexible_type>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v11);
  return v9;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<turi::flexible_type>>,std::reverse_iterator<std::vector<turi::flexible_type>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<turi::flexible_type>>,std::reverse_iterator<std::vector<turi::flexible_type>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<turi::flexible_type>>,std::reverse_iterator<std::vector<turi::flexible_type>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v3);
    v1 += 3;
  }
}

void **std::__split_buffer<std::vector<turi::flexible_type>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<std::vector<turi::flexible_type>>::clear[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
}

uint64_t file_logger::operator<<<unsigned long>(uint64_t a1)
{
  uint64_t v2 = pthread_getspecific(*(void *)(a1 + 592));
  if (v2 && v2[280]) {
    std::ostream::operator<<();
  }
  return a1;
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::close(void)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", 116);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"m_array_open", 12);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"true", 4);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  unint64_t v10 = (void *)std::ostream::operator<<();
  unint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    char v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", "operator()", 721, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  long long v13 = v16;
  turi::sarray_group_format_writer_v2<turi::flexible_type>::close(void)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EEA634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::flush_block(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 384);
  uint64_t v4 = v3 + 56 * a2;
  uint64_t v5 = (uint64_t *)(v4 + 8);
  uint64_t v6 = (uint64_t *)(*(void *)(v4 + 8) + 24 * a3);
  uint64_t v7 = v6[1];
  if (*v6 != v7)
  {
    uint64_t v11 = v7 - *v6;
    uint64_t v25 = -1;
    long long v26 = 0u;
    long long v27 = 0u;
    uint64_t v28 = 0;
    uint64_t v12 = turi::v2_block_impl::block_writer::write_typed_block((pthread_mutex_t *)(a1 + 24), a3, a2, v6, (uint64_t)&v25);
    uint64_t v13 = *v5;
    uint64_t v14 = *v5 + 24 * a3;
    uint64_t v17 = *(void *)(v14 + 8);
    uint64_t v16 = (void *)(v14 + 8);
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v13 + 24 * a3);
    if (v17 != v18)
    {
      uint64_t v19 = v13 + 24 * a3 + 16;
      do
      {
        v15 -= 16;
        std::allocator<turi::flexible_type>::destroy[abi:ne180100](v19, v15);
      }
      while (v15 != v18);
    }
    *uint64_t v16 = v18;
    do
    {
      while (*(unsigned char *)v4 == 1)
        ;
    }
    while (atomic_exchange((atomic_uchar *volatile)v4, 1u));
    char v20 = (void *)(v3 + 56 * a2);
    uint64_t v21 = v20[5] + v12;
    uint64_t v22 = v20[6] + (v11 >> 4);
    v20[5] = v21;
    v20[6] = v22;
    unint64_t v23 = (unint64_t)(float)((float)(unint64_t)turi::SFRAME_DEFAULT_BLOCK_SIZE
                                  / (float)((float)(unint64_t)(v21 + 1) / (float)(unint64_t)(v22 + 1)));
    if (*(void *)"\b" > v23) {
      unint64_t v23 = *(void *)"\b";
    }
    v20[4] = v23;
    unint64_t v24 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 392) - *(void *)(a1 + 384)) >> 3) * *(void *)(a1 + 16);
    if (turi::SFRAME_WRITER_MAX_BUFFERED_CELLS / v24 < v23) {
      unint64_t v23 = turi::SFRAME_WRITER_MAX_BUFFERED_CELLS / v24;
    }
    v20[4] = v23;
    if (turi::SFRAME_WRITER_MAX_BUFFERED_CELLS_PER_BLOCK < v23) {
      unint64_t v23 = turi::SFRAME_WRITER_MAX_BUFFERED_CELLS_PER_BLOCK;
    }
    v20[4] = v23;
    __dmb(0xBu);
    *(unsigned char *)uint64_t v4 = 0;
  }
}

uint64_t std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::__wrap_iter<turi::flexible_type *>,std::__wrap_iter<turi::flexible_type *>,std::back_insert_iterator<std::vector<turi::flexible_type>>,0>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a1;
  uint64_t v6 = a3;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v4 = a2;
  do
  {
    std::back_insert_iterator<std::vector<turi::flexible_type>>::operator=[abi:ne180100](&v6, v3);
    v3 += 16;
  }
  while (v3 != v4);
  return v4;
}

uint64_t **std::back_insert_iterator<std::vector<turi::flexible_type>>::operator=[abi:ne180100](uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = (*a1)[1];
  if (v4 >= (*a1)[2])
  {
    uint64_t v7 = std::vector<turi::flexible_type>::__push_back_slow_path<turi::flexible_type const&>(*a1, (atomic_ullong *volatile *)a2);
  }
  else
  {
    *(void *)unint64_t v4 = 0;
    *(_DWORD *)(v4 + 8) = 0;
    *(unsigned char *)(v4 + 12) = 0;
    if (v4 != a2)
    {
      atomic_ullong *volatile v5 = *(atomic_ullong *volatile *)a2;
      *(void *)(v4 + 5) = *(void *)(a2 + 5);
      *(void *)unint64_t v4 = v5;
      unsigned int v6 = *(unsigned __int8 *)(a2 + 12);
      *(unsigned char *)(v4 + 12) = v6;
      if (v6 <= 9 && ((1 << v6) & 0x33C) != 0) {
        atomic_fetch_add(*(atomic_ullong *volatile *)v4, 1uLL);
      }
    }
    uint64_t v7 = v4 + 16;
  }
  v3[1] = v7;
  return a1;
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::num_segments(void)const::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", 116);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"m_array_open", 12);
  atomic_ullong *volatile v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  unsigned int v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"true", 4);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  unint64_t v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", "operator()", 760, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::sarray_group_format_writer_v2<turi::flexible_type>::num_segments(void)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EEAB98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::sarray_group_format_writer_v2<turi::flexible_type>::num_columns(void)const::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", 116);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"m_array_open", 12);
  atomic_ullong *volatile v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  unsigned int v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"true", 4);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  unint64_t v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray_file_format_v2.hpp", "operator()", 768, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::sarray_group_format_writer_v2<turi::flexible_type>::num_columns(void)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EEAE28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", 101);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"writer", 6);
  atomic_ullong *volatile v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"!=", 2);
  unsigned int v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"__null", 6);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"!=", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  unint64_t v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", "operator()", 782, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EEB0B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(void)#2}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", 101);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"segmentid", 9);
  atomic_ullong *volatile v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"<", 1);
  unsigned int v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"num_segments()", 14);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"<", 1);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  unint64_t v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", "operator()", 783, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(void)#2}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EEB34C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t turi::sarray<turi::flexible_type>::get_type(uint64_t a1)
{
  assert_msg(*(unsigned __int8 *)(a1 + 248), "Invalid SArray");
  uint64_t v2 = a1 + 128;
  std::string::basic_string[abi:ne180100]<0>(__p, "__type__");
  uint64_t v3 = std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>(v2, (const void **)__p);
  uint64_t v4 = v3;
  if ((v9 & 0x80000000) == 0)
  {
    if (v3) {
      goto LABEL_3;
    }
    return 7;
  }
  operator delete(__p[0]);
  if (!v4) {
    return 7;
  }
LABEL_3:
  std::string::basic_string[abi:ne180100]<0>(__p, "__type__");
  atomic_ullong *volatile v5 = (const std::string *)std::map<std::string,turi::neural_net::shared_float_array>::at(v2, (const void **)__p);
  char v6 = std::stoi(v5, 0, 10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v6;
}

void sub_223EEB50C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1}>,void ()(turi::flexible_type const&)>::~__func()
{
}

__n128 std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1}>,void ()(turi::flexible_type const&)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_26D759C20;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1}>,void ()(turi::flexible_type const&)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26D759C20;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

atomic_ullong *std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1}>,void ()(turi::flexible_type const&)>::operator()(uint64_t a1, turi::flexible_type_impl *a2, double a3)
{
  return turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1}::operator()((char *)(a1 + 8), a2, a3);
}

uint64_t std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1}>,void ()(turi::flexible_type const&)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1}>,void ()(turi::flexible_type const&)>::target_type()
{
}

atomic_ullong *turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type const&)#1}::operator()(char *a1, turi::flexible_type_impl *this, double a3)
{
  v127[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  uint64_t v4 = *((void *)a1 + 1);
  int v5 = *((unsigned __int8 *)this + 12);
  uint64_t v6 = *a1;
  int v7 = *a1;
  if (v6 == 7 || v5 == 7 || v5 == v7)
  {
    unint64_t v10 = *(uint64_t (**)(void))(**(void **)(v4 + 176) + 72);
    return (atomic_ullong *)v10();
  }
  else
  {
    if (!turi::flex_type_is_convertible(turi::flex_type_enum,turi::flex_type_enum)::castable[10 * (char)v5 + v6])
    {
      switch((char)v5)
      {
        case 0:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v121);
          std::ostream::operator<<();
          std::stringbuf::str();
          goto LABEL_319;
        case 1:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v121);
          std::ostream::operator<<();
          std::stringbuf::str();
LABEL_319:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)v121);
          break;
        case 2:
          uint64_t v107 = *(void *)this;
          if (*(char *)(*(void *)this + 31) < 0)
          {
            std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)(v107 + 8), *(void *)(v107 + 16));
          }
          else
          {
            long long v108 = *(_OWORD *)(v107 + 8);
            v124.__r_.__value_.__r.__words[2] = *(void *)(v107 + 24);
            *(_OWORD *)&v124.__r_.__value_.__l.__data_ = v108;
          }
          break;
        case 3:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v121, (void *)(*(void *)this + 8));
          break;
        case 4:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v121, (uint64_t *)(*(void *)this + 8));
          break;
        case 5:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v121, (void *)(*(void *)this + 8));
          break;
        case 6:
          turi::flexible_type_impl::get_string_visitor::operator()(this, &v124);
          break;
        case 8:
          turi::flexible_type_impl::get_string_visitor::operator()();
          break;
        case 9:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v121, (void *)(*(void *)this + 8));
          break;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      long long v109 = std::string::insert(&v124, 0, "Cannot convert ");
      long long v110 = *(_OWORD *)&v109->__r_.__value_.__l.__data_;
      v125.__r_.__value_.__r.__words[2] = v109->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v125.__r_.__value_.__l.__data_ = v110;
      v109->__r_.__value_.__l.__size_ = 0;
      v109->__r_.__value_.__r.__words[2] = 0;
      v109->__r_.__value_.__r.__words[0] = 0;
      atomic_ullong v111 = std::string::append(&v125, " to ");
      long long v112 = *(_OWORD *)&v111->__r_.__value_.__l.__data_;
      v126.__r_.__value_.__r.__words[2] = v111->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v126.__r_.__value_.__l.__data_ = v112;
      v111->__r_.__value_.__l.__size_ = 0;
      v111->__r_.__value_.__r.__words[2] = 0;
      v111->__r_.__value_.__r.__words[0] = 0;
      unint64_t v113 = *a1;
      if (v113 > 9) {
        BOOL v114 = "undefined";
      }
      else {
        BOOL v114 = off_2646D6CE0[v113];
      }
      int v115 = std::string::append(&v126, v114);
      long long v116 = *(_OWORD *)&v115->__r_.__value_.__l.__data_;
      *(void *)&v121[16] = *((void *)&v115->__r_.__value_.__l + 2);
      *(_OWORD *)v121 = v116;
      v115->__r_.__value_.__l.__size_ = 0;
      v115->__r_.__value_.__r.__words[2] = 0;
      v115->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v126.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v125.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v124.__r_.__value_.__l.__data_);
      }
      if (*((int *)global_logger() + 169) <= 6)
      {
        uint64_t v117 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", "operator()", 799, 1);
        if ((v121[23] & 0x80000000) != 0) {
          std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v121, *(std::string::size_type *)&v121[8]);
        }
        else {
          std::string __p = *(std::string *)v121;
        }
        uint64_t v118 = file_logger::operator<<<std::string>((uint64_t)v117, (uint64_t)&__p);
        file_logger::operator<<(v118, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      exception = (std::bad_cast *)__cxa_allocate_exception(0x20uLL);
      turi::bad_cast::bad_cast(exception, (long long *)v121);
    }
    uint64_t v12 = 0;
    memset(v127, 0, 13);
    BYTE4(v127[1]) = v7;
    switch(v7)
    {
      case 2:
        operator new();
      case 3:
        operator new();
      case 4:
        operator new();
      case 5:
        operator new();
      case 6:
        uint64_t v12 = 0x1900000000000000;
        v127[0] = (atomic_ullong *)0x1900000000000000;
        LODWORD(v127[1]) = 0;
        break;
      case 8:
        operator new();
      case 9:
        operator new();
      default:
        break;
    }
    if (v127 != (atomic_ullong **)this)
    {
      switch(*((unsigned char *)this + 12))
      {
        case 0:
          switch(BYTE4(v127[1]))
          {
            case 0:
              uint64_t v13 = *(void *)this;
              goto LABEL_52;
            case 1:
              double v45 = (double)*(uint64_t *)this;
              goto LABEL_182;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v42 = v127[0];
              std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v121);
              std::ostream::operator<<();
              std::stringbuf::str();
              unint64_t v43 = (void **)(v42 + 1);
              std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)v121);
              if (*((char *)v42 + 31) < 0) {
                operator delete(*v43);
              }
              long long v44 = *(_OWORD *)&v126.__r_.__value_.__l.__data_;
              v42[3] = v126.__r_.__value_.__r.__words[2];
              *(_OWORD *)unint64_t v43 = v44;
              goto LABEL_233;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 6:
              v127[0] = (atomic_ullong *)(*(void *)this & 0xFFFFFFFFFFFFFFLL | 0x5900000000000000);
              LODWORD(v127[1]) = 0;
              goto LABEL_233;
            case 7:
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 1:
          switch(BYTE4(v127[1]))
          {
            case 0:
              uint64_t v13 = (uint64_t)*(double *)this;
              goto LABEL_52;
            case 1:
              double v45 = *(double *)this;
              goto LABEL_182;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              unint64_t v46 = v127[0];
              std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v121);
              std::ostream::operator<<();
              std::stringbuf::str();
              uint64_t v47 = v46 + 1;
              std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)v121);
              if (*((char *)v46 + 31) < 0) {
                operator delete((void *)*v47);
              }
              long long v48 = *(_OWORD *)&v126.__r_.__value_.__l.__data_;
              atomic_ullong v49 = v126.__r_.__value_.__r.__words[2];
              goto LABEL_280;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 6:
              int v50 = (int)((*(double *)this - (double)(uint64_t)floor(*(double *)this)) * 1000000.0);
              if (v50 >= 999999) {
                int v50 = 999999;
              }
              if (v50 >= 0xF4240) {
                turi::flex_date_time::set_microsecond(int)::{lambda(void)#1}::operator()();
              }
              v127[0] = (atomic_ullong *)(vcvtmd_s64_f64(*(double *)this) & 0xFFFFFFFFFFFFFFLL | 0x5900000000000000);
              LODWORD(v127[1]) = v50;
              goto LABEL_233;
            case 7:
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 2:
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              uint64_t v19 = *(void *)this;
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              if (*(char *)(v19 + 31) < 0)
              {
                std::string::__init_copy_ctor_external((std::string *)v121, *(const std::string::value_type **)(v19 + 8), *(void *)(v19 + 16));
              }
              else
              {
                long long v20 = *(_OWORD *)(v19 + 8);
                *(void *)&v121[16] = *(void *)(v19 + 24);
                *(_OWORD *)v121 = v20;
              }
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 3:
          uint64_t v21 = *(void *)this;
          uint64_t v22 = (char *)(*(void *)this + 8);
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v126, v22);
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              if (v127[0] == (atomic_ullong *)v21) {
                goto LABEL_233;
              }
              uint64_t v25 = (char *)(v127[0] + 1);
              std::string v31 = (uint64_t *)(v21 + 16);
              break;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              std::vector<turi::flexible_type>::__assign_with_size[abi:ne180100]<std::__wrap_iter<double const*>,std::__wrap_iter<double const*>>((char **)v127[0] + 1, *(void **)(v21 + 8), *(void **)(v21 + 16), (uint64_t)(*(void *)(v21 + 16) - *(void *)(v21 + 8)) >> 3);
              goto LABEL_233;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v39 = v127[0];
              memset(&v126, 0, sizeof(v126));
              memset(&v125, 0, sizeof(v125));
              std::allocate_shared[abi:ne180100]<std::vector<double>,std::allocator<std::vector<double>>,std::vector<double> const&,void>((uint64_t)v22, &v124);
              turi::flexible_type_impl::ndarray<double>::ndarray(v121, &v124, (uint64_t)&v126, (uint64_t)&v125, 0);
              if (v124.__r_.__value_.__l.__size_) {
                std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v124.__r_.__value_.__l.__size_);
              }
              if (v125.__r_.__value_.__r.__words[0])
              {
                v125.__r_.__value_.__l.__size_ = v125.__r_.__value_.__r.__words[0];
                operator delete(v125.__r_.__value_.__l.__data_);
              }
              if (v126.__r_.__value_.__r.__words[0])
              {
                v126.__r_.__value_.__l.__size_ = v126.__r_.__value_.__r.__words[0];
                operator delete(v126.__r_.__value_.__l.__data_);
              }
              goto LABEL_171;
            default:
              goto LABEL_329;
          }
LABEL_87:
          std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>(v25, *(char **)v22, *v31, (*v31 - *(void *)v22) >> 3);
          break;
        case 4:
          uint64_t v14 = *(void *)this;
          char v15 = (uint64_t *)(*(void *)this + 8);
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v126, v15);
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              turi::flexible_type_impl::soft_assignment_visitor::operator()((uint64_t)v121, v127[0] + 1, v15);
              goto LABEL_233;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              if (v127[0] != (atomic_ullong *)v14) {
                std::vector<turi::flexible_type>::__assign_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>((uint64_t)(v127[0] + 1), *(uint64_t **)(v14 + 8), *(uint64_t **)(v14 + 16), (uint64_t)(*(void *)(v14 + 16) - *(void *)(v14 + 8)) >> 4);
              }
              goto LABEL_233;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              std::string v32 = v127[0];
              memset(&v126, 0, sizeof(v126));
              std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&v126, *(uint64_t **)(v14 + 8), *(uint64_t **)(v14 + 16), (uint64_t)(*(void *)(v14 + 16) - *(void *)(v14 + 8)) >> 4);
              turi::flexible_type_impl::get_ndvec_visitor::operator()((uint64_t *)&v126, v121);
              long long v33 = *(_OWORD *)v121;
              *(_OWORD *)v121 = 0uLL;
              std::locale v34 = (std::__shared_weak_count *)v32[2];
              *(_OWORD *)(v32 + 1) = v33;
              if (v34) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v34);
              }
              atomic_ullong *volatile v35 = (void *)v32[3];
              if (v35)
              {
                v32[4] = (atomic_ullong)v35;
                operator delete(v35);
                v32[3] = 0;
                v32[4] = 0;
                void v32[5] = 0;
              }
              uint64_t v36 = (void *)v32[6];
              *(_OWORD *)(v32 + 3) = *(_OWORD *)&v121[16];
              void v32[5] = *(void *)v122;
              *(_OWORD *)&v121[16] = 0uLL;
              *(void *)unint64_t v122 = 0;
              if (v36)
              {
                v32[7] = (atomic_ullong)v36;
                operator delete(v36);
                v32[6] = 0;
                v32[7] = 0;
                v32[8] = 0;
              }
              *((_OWORD *)v32 + 3) = *(_OWORD *)&v122[8];
              v32[8] = *(void *)&v122[24];
              memset(&v122[8], 0, 24);
              v32[9] = v123;
              turi::flexible_type_impl::ndarray<double>::~ndarray(v121);
              v125.__r_.__value_.__r.__words[0] = (std::string::size_type)&v126;
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v125);
              goto LABEL_233;
            default:
              goto LABEL_329;
          }
        case 5:
          uint64_t v23 = *(void *)this;
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v126, (void *)(v23 + 8));
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              if (v127[0] != (atomic_ullong *)v23) {
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__assign_with_size[abi:ne180100]<std::pair<turi::flexible_type,turi::flexible_type>*,std::pair<turi::flexible_type,turi::flexible_type>*>((char **)v127[0] + 1, *(uint64_t **)(v23 + 8), *(uint64_t **)(v23 + 16), (uint64_t)(*(void *)(v23 + 16) - *(void *)(v23 + 8)) >> 5);
              }
              goto LABEL_233;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 6:
          switch(BYTE4(v127[1]))
          {
            case 0:
              uint64_t v13 = (uint64_t)(*(void *)this << 8) >> 8;
              goto LABEL_52;
            case 1:
              double v45 = (double)*((int *)this + 2) / 1000000.0 + (double)((uint64_t)(*(void *)this << 8) >> 8);
LABEL_182:
              v127[0] = *(atomic_ullong **)&v45;
              goto LABEL_233;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              int v60 = *((_DWORD *)this + 2);
              v126.__r_.__value_.__r.__words[0] = *(void *)this;
              LODWORD(v126.__r_.__value_.__r.__words[1]) = v60;
              turi::flexible_type_impl::get_string_visitor::operator()((turi::flexible_type_impl *)&v126, (std::string *)v121);
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 6:
              int v61 = *((_DWORD *)this + 2);
              v127[0] = *(atomic_ullong **)this;
              LODWORD(v127[1]) = v61;
              goto LABEL_233;
            case 7:
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 7:
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 6:
              goto LABEL_232;
            case 1:
              uint64_t v13 = 0x7FF8000000000000;
LABEL_52:
              v127[0] = (atomic_ullong *)v13;
              goto LABEL_233;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              unint64_t v38 = v127[0] + 1;
              if (*((char *)v127[0] + 31) < 0) {
                operator delete((void *)*v38);
              }
              *unint64_t v38 = 0;
              v38[1] = 0;
              v38[2] = 0;
              goto LABEL_233;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 7:
              goto LABEL_233;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 8:
          unint64_t v24 = (uint64_t *)(*(void *)this + 8);
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()();
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v40 = v127[0];
              turi::flexible_type_impl::get_vec_visitor::operator()(v24, (double **)v121, *(unint64_t *)&a3);
              unsigned int v41 = (void *)v40[1];
              if (v41)
              {
                v40[2] = (atomic_ullong)v41;
                operator delete(v41);
                v40[1] = 0;
                v40[2] = 0;
                v40[3] = 0;
              }
              *(_OWORD *)(v40 + 1) = *(_OWORD *)v121;
              v40[3] = *(void *)&v121[16];
              goto LABEL_233;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v39 = v127[0];
              turi::flexible_type_impl::get_ndvec_visitor::operator()(v24, v121, *(unint64_t *)&a3);
LABEL_171:
              long long v56 = *(_OWORD *)v121;
              *(_OWORD *)v121 = 0uLL;
              unint64_t v57 = (std::__shared_weak_count *)v39[2];
              *(_OWORD *)(v39 + 1) = v56;
              if (v57) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v57);
              }
              uint64_t v58 = (void *)v39[3];
              if (v58)
              {
                v39[4] = (atomic_ullong)v58;
                operator delete(v58);
                void v39[3] = 0;
                v39[4] = 0;
                v39[5] = 0;
              }
              atomic_ullong *volatile v59 = (void *)v39[6];
              *(_OWORD *)(v39 + 3) = *(_OWORD *)&v121[16];
              v39[5] = *(void *)v122;
              *(_OWORD *)&v121[16] = 0uLL;
              *(void *)unint64_t v122 = 0;
              if (v59)
              {
                v39[7] = (atomic_ullong)v59;
                operator delete(v59);
                v39[6] = 0;
                v39[7] = 0;
                v39[8] = 0;
              }
              *((_OWORD *)v39 + 3) = *(_OWORD *)&v122[8];
              v39[8] = *(void *)&v122[24];
              memset(&v122[8], 0, 24);
              v39[9] = v123;
              goto LABEL_312;
            default:
              goto LABEL_329;
          }
        case 9:
          uint64_t v17 = *(void *)this;
          uint64_t v18 = (uint64_t *)(*(void *)this + 8);
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v126, v18);
LABEL_277:
              uint64_t v47 = v16 + 1;
              if (*((char *)v16 + 31) < 0) {
                operator delete((void *)*v47);
              }
              long long v48 = *(_OWORD *)v121;
              atomic_ullong v49 = *(void *)&v121[16];
LABEL_280:
              v47[2] = v49;
              *(_OWORD *)uint64_t v47 = v48;
              goto LABEL_233;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v25 = (char *)(v127[0] + 1);
              uint64_t v26 = *(void *)(v17 + 72);
              if (v26) {
                goto LABEL_260;
              }
              uint64_t v28 = *(uint64_t **)(v17 + 24);
              long long v27 = *(uint64_t **)(v17 + 32);
              int v29 = *(void **)(v17 + 8);
              if (v27 != v28 && v29)
              {
                uint64_t v26 = 1;
                do
                {
                  uint64_t v30 = *v28++;
                  v26 *= v30;
                }
                while (v28 != v27);
              }
              if (v26 == (uint64_t)(v29[1] - *v29) >> 3
                && turi::flexible_type_impl::ndarray<double>::last_index(v18) == (uint64_t)(*(void *)(*v18 + 8)
                                                                                         - *(void *)*v18) >> 3)
              {
                if (!turi::flexible_type_impl::ndarray<double>::is_full(v18)) {
                  turi::flexible_type_impl::ndarray<double>::elements(void)const::{lambda(void)#1}::operator()();
                }
                uint64_t v22 = (char *)*v18;
                if (v25 != v22)
                {
                  std::string v31 = (uint64_t *)(v22 + 8);
                  goto LABEL_87;
                }
              }
              else
              {
LABEL_260:
                if (!turi::flexible_type_impl::ndarray<double>::is_valid(v18)) {
                  turi::flexible_type_impl::ndarray<double>::compact(void)const::{lambda(void)#1}::operator()();
                }
                if (turi::flexible_type_impl::ndarray<double>::is_full(v18))
                {
                  turi::flexible_type_impl::ndarray<double>::ndarray(v121, (uint64_t)v18);
                }
                else
                {
                  memset(&v126, 0, sizeof(v126));
                  memset(&v125, 0, sizeof(v125));
                  memset(&v124, 0, sizeof(v124));
                  turi::flexible_type_impl::ndarray<double>::ndarray(v121, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124, 0);
                  if (v124.__r_.__value_.__r.__words[0])
                  {
                    v124.__r_.__value_.__l.__size_ = v124.__r_.__value_.__r.__words[0];
                    operator delete(v124.__r_.__value_.__l.__data_);
                  }
                  if (v125.__r_.__value_.__r.__words[0])
                  {
                    v125.__r_.__value_.__l.__size_ = v125.__r_.__value_.__r.__words[0];
                    operator delete(v125.__r_.__value_.__l.__data_);
                  }
                  if (v126.__r_.__value_.__r.__words[0])
                  {
                    v126.__r_.__value_.__l.__size_ = v126.__r_.__value_.__r.__words[0];
                    operator delete(v126.__r_.__value_.__l.__data_);
                  }
                  atomic_ullong v123 = 0;
                  if (v121 != (unsigned char *)(v17 + 8)) {
                    std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>(&v121[16], *(char **)(v17 + 24), *(void *)(v17 + 32), (uint64_t)(*(void *)(v17 + 32) - *(void *)(v17 + 24)) >> 3);
                  }
                  uint64_t v71 = *(uint64_t **)(v17 + 24);
                  uint64_t v70 = *(uint64_t **)(v17 + 32);
                  if (v70 == v71 || !*v18)
                  {
                    unint64_t v72 = 0;
                  }
                  else
                  {
                    unint64_t v72 = 1;
                    do
                    {
                      uint64_t v73 = *v71++;
                      v72 *= v73;
                    }
                    while (v71 != v70);
                  }
                  std::vector<double>::resize(*(uint64_t *)v121, v72);
                  std::vector<unsigned long>::resize((uint64_t)&v122[8], (uint64_t)(*(void *)(v17 + 32) - *(void *)(v17 + 24)) >> 3);
                  if (*(void *)&v121[24] != *(void *)&v121[16]
                    && *(void *)(*(void *)v121 + 8) != **(void **)v121)
                  {
                    std::vector<std::pair<unsigned long,unsigned long>>::vector(&v126, (uint64_t)(*(void *)(v17 + 56) - *(void *)(v17 + 48)) >> 3);
                    uint64_t v74 = *(void *)(v17 + 48);
                    uint64_t v75 = *(void *)(v17 + 56);
                    unint64_t v76 = (unint64_t *)v126.__r_.__value_.__r.__words[0];
                    uint64_t v77 = v75 - v74;
                    if (v75 != v74)
                    {
                      uint64_t v78 = 0;
                      unint64_t v79 = v77 >> 3;
                      if (v79 <= 1) {
                        unint64_t v79 = 1;
                      }
                      unint64_t v80 = (void *)(v126.__r_.__value_.__r.__words[0] + 8);
                      do
                      {
                        *(v80 - 1) = *(void *)(v74 + 8 * v78);
                        *unint64_t v80 = v78++;
                        v80 += 2;
                      }
                      while (v79 != v78);
                    }
                    std::sort[abi:ne180100]<std::reverse_iterator<std::__wrap_iter<std::pair<unsigned long,unsigned long> *>>>(v126.__r_.__value_.__l.__size_, (unint64_t *)v126.__r_.__value_.__l.__size_, (uint64_t)v76, v76);
                    std::string::size_type v81 = v126.__r_.__value_.__r.__words[0];
                    uint64_t v82 = *(void *)&v122[8];
                    *(void *)(*(void *)&v122[8] + 8 * *(void *)(v126.__r_.__value_.__r.__words[0] + 8)) = 1;
                    uint64_t v83 = *(void *)(v17 + 56) - *(void *)(v17 + 48);
                    if ((unint64_t)v83 >= 9)
                    {
                      unint64_t v84 = v83 >> 3;
                      uint64_t v85 = *(void *)&v121[16];
                      if (v84 <= 2) {
                        unint64_t v84 = 2;
                      }
                      double v86 = (uint64_t *)(v81 + 24);
                      unint64_t v87 = v84 - 1;
                      do
                      {
                        uint64_t v88 = *(void *)(v85 + 8 * *(v86 - 2)) * *(void *)(v82 + 8 * *(v86 - 2));
                        uint64_t v89 = *v86;
                        v86 += 2;
                        *(void *)(v82 + 8 * v89) = v88;
                        --v87;
                      }
                      while (v87);
                    }
                    unint64_t v90 = (uint64_t)(*(void *)(v17 + 32) - *(void *)(v17 + 24)) >> 3;
                    v124.__r_.__value_.__r.__words[0] = 0;
                    std::vector<unsigned long>::vector(&v125, v90, &v124);
                    do
                    {
                      v91 = (uint64_t *)v125.__r_.__value_.__r.__words[0];
                      if (v125.__r_.__value_.__l.__size_ == v125.__r_.__value_.__r.__words[0])
                      {
                        uint64_t v100 = 0;
                        uint64_t v101 = *(void *)(**(void **)(v17 + 8) + 8 * *(void *)(v17 + 72));
                        uint64_t v102 = *(void **)v121;
                      }
                      else
                      {
                        uint64_t v92 = 0;
                        unint64_t v93 = (uint64_t)(v125.__r_.__value_.__l.__size_ - v125.__r_.__value_.__r.__words[0]) >> 3;
                        uint64_t v94 = *(uint64_t **)(v17 + 48);
                        if (v93 <= 1) {
                          unint64_t v93 = 1;
                        }
                        uint64_t v95 = (uint64_t *)v125.__r_.__value_.__r.__words[0];
                        unint64_t v96 = v93;
                        do
                        {
                          uint64_t v98 = *v95++;
                          uint64_t v97 = v98;
                          uint64_t v99 = *v94++;
                          v92 += v99 * v97;
                          --v96;
                        }
                        while (v96);
                        uint64_t v100 = 0;
                        uint64_t v101 = *(void *)(**(void **)(v17 + 8) + 8 * (*(void *)(v17 + 72) + v92));
                        uint64_t v102 = *(void **)v121;
                        uint64_t v103 = *(uint64_t **)&v122[8];
                        do
                        {
                          uint64_t v105 = *v91++;
                          uint64_t v104 = v105;
                          uint64_t v106 = *v103++;
                          v100 += v106 * v104;
                          --v93;
                        }
                        while (v93);
                      }
                      *(void *)(*v102 + 8 * v10std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v101;
                    }
                    while (turi::flexible_type_impl::ndarray<double>::increment_index<unsigned long>((uint64_t)v18, (uint64_t *)&v125));
                    if (v125.__r_.__value_.__r.__words[0])
                    {
                      v125.__r_.__value_.__l.__size_ = v125.__r_.__value_.__r.__words[0];
                      operator delete(v125.__r_.__value_.__l.__data_);
                    }
                    if (v126.__r_.__value_.__r.__words[0])
                    {
                      v126.__r_.__value_.__l.__size_ = v126.__r_.__value_.__r.__words[0];
                      operator delete(v126.__r_.__value_.__l.__data_);
                    }
                  }
                }
                turi::flexible_type_impl::ndarray<double>::ensure_unique((uint64_t *)v121);
                if (!turi::flexible_type_impl::ndarray<double>::is_full(v121)) {
                  turi::flexible_type_impl::ndarray<double>::elements(void)::{lambda(void)#1}::operator()();
                }
                if (v25 != *(char **)v121) {
                  std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>(v25, **(char ***)v121, *(void *)(*(void *)v121 + 8), (uint64_t)(*(void *)(*(void *)v121 + 8) - **(void **)v121) >> 3);
                }
LABEL_312:
                turi::flexible_type_impl::ndarray<double>::~ndarray(v121);
              }
              break;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
LABEL_232:
              turi::flexible_type_fail(0);
              goto LABEL_233;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              unint64_t v51 = v127[0];
              turi::flexible_type_impl::get_img_visitor::operator()((uint64_t)v18, (turi::image_type *)v121);
              long long v52 = *(_OWORD *)v121;
              *(_OWORD *)v121 = 0uLL;
              long long v53 = *(_OWORD *)(v51 + 1);
              *(_OWORD *)(v51 + 1) = v52;
              *(_OWORD *)&v126.__r_.__value_.__l.__data_ = v53;
              boost::detail::shared_count::~shared_count((atomic_uint **)&v126.__r_.__value_.__l.__size_);
              long long v54 = *(_OWORD *)&v121[16];
              long long v55 = *(_OWORD *)v122;
              *(_OWORD *)(v51 + 7) = *(_OWORD *)&v122[16];
              *(_OWORD *)(v51 + 5) = v55;
              *(_OWORD *)(v51 + 3) = v54;
              boost::detail::shared_count::~shared_count((atomic_uint **)&v121[8]);
              goto LABEL_233;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              atomic_ullong *volatile v37 = v127[0];
              std::shared_ptr<std::vector<double>>::operator=[abi:ne180100](v127[0] + 1, v18);
              if (v37 != (atomic_ullong *)v17)
              {
                std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>((char *)v37 + 24, *(char **)(v17 + 24), *(void *)(v17 + 32), (uint64_t)(*(void *)(v17 + 32) - *(void *)(v17 + 24)) >> 3);
                std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>((char *)v37 + 48, *(char **)(v17 + 48), *(void *)(v17 + 56), (uint64_t)(*(void *)(v17 + 56) - *(void *)(v17 + 48)) >> 3);
              }
              v37[9] = *(void *)(v17 + 72);
              goto LABEL_233;
            default:
              goto LABEL_329;
          }
          break;
        default:
LABEL_329:
          __n128 result = (atomic_ullong *)turi::flexible_type_fail(0);
          __break(1u);
          return result;
      }
    }
LABEL_233:
    __n128 result = (atomic_ullong *)(*(uint64_t (**)(void, void, void, atomic_ullong **))(**(void **)(v4 + 176)
                                                                                                  + 72))(*(void *)(v4 + 176), 0, *((void *)a1 + 2), v127);
    switch(BYTE4(v127[1]))
    {
      case 2:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v62 = v127[0];
          if (v127[0])
          {
            if (*((char *)v127[0] + 31) < 0) {
              operator delete(*((void **)v127[0] + 1));
            }
            unint64_t v63 = v62;
            uint64_t v64 = 0x1012C404EF22A49;
            goto LABEL_258;
          }
        }
        break;
      case 3:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v67 = v127[0];
          if (v127[0])
          {
            uint64_t v68 = (void *)v127[0][1];
            if (v68)
            {
              v127[0][2] = (atomic_ullong)v68;
              operator delete(v68);
            }
            unint64_t v63 = v67;
            uint64_t v64 = 0x1080C409938AC02;
            goto LABEL_258;
          }
        }
        break;
      case 4:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v65 = v127[0];
          if (v127[0])
          {
            *(void *)v121 = v127[0] + 1;
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)v121);
            goto LABEL_253;
          }
        }
        break;
      case 5:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v65 = v127[0];
          if (v127[0])
          {
            *(void *)v121 = v127[0] + 1;
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)v121);
LABEL_253:
            unint64_t v63 = v65;
            uint64_t v64 = 0x1020C405E66F15BLL;
            goto LABEL_258;
          }
        }
        break;
      case 8:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v69 = v127[0];
          if (v127[0])
          {
            boost::detail::shared_count::~shared_count((atomic_uint **)v127[0] + 2);
            unint64_t v63 = v69;
            unsigned int v66 = -235920773;
            goto LABEL_257;
          }
        }
        break;
      case 9:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          __n128 result = v127[0];
          if (v127[0])
          {
            unint64_t v63 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v127[0]);
            unsigned int v66 = 2071181815;
LABEL_257:
            uint64_t v64 = v66 | 0x1030C4000000000;
LABEL_258:
            __n128 result = (atomic_ullong *)MEMORY[0x22A614FA0](v63, v64);
          }
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_223EEDC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v23 = *(void **)(v21 - 144);
  if (v23)
  {
    *(void *)(v21 - 136) = v23;
    operator delete(v23);
  }
  turi::flexible_type_impl::ndarray<double>::~ndarray(&a16);
  switch(*(unsigned char *)(v21 - 92))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v24 = *(void *)(v21 - 104);
      if (!v24) {
        goto LABEL_29;
      }
      if (*(char *)(v24 + 31) < 0) {
        operator delete(*(void **)(v24 + 8));
      }
      uint64_t v25 = (void *)v24;
      uint64_t v26 = 0x1012C404EF22A49;
      goto LABEL_28;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v30 = *(void **)(v21 - 104);
      if (!v30) {
        goto LABEL_29;
      }
      std::string v31 = (void *)v30[1];
      if (v31)
      {
        v30[2] = v31;
        operator delete(v31);
      }
      uint64_t v25 = v30;
      uint64_t v26 = 0x1080C409938AC02;
      goto LABEL_28;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      long long v27 = *(void **)(v21 - 104);
      if (!v27) {
        goto LABEL_29;
      }
      *(void *)(v21 - 112) = v27 + 1;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 112));
      goto LABEL_23;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      long long v27 = *(void **)(v21 - 104);
      if (!v27) {
        goto LABEL_29;
      }
      *(void *)(v21 - 112) = v27 + 1;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 112));
LABEL_23:
      uint64_t v25 = v27;
      uint64_t v26 = 0x1020C405E66F15BLL;
      goto LABEL_28;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v32 = *(void *)(v21 - 104);
      if (!v32) {
        goto LABEL_29;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(v32 + 16));
      uint64_t v25 = (void *)v32;
      unsigned int v29 = -235920773;
      goto LABEL_27;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v28 = *(void **)(v21 - 104);
      if (!v28) {
        goto LABEL_29;
      }
      uint64_t v25 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v28);
      unsigned int v29 = 2071181815;
LABEL_27:
      uint64_t v26 = v29 | 0x1030C4000000000;
LABEL_28:
      MEMORY[0x22A614FA0](v25, v26);
LABEL_29:
      _Unwind_Resume(a1);
      return;
    default:
      goto LABEL_29;
  }
}

void turi::bad_cast::~bad_cast(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_26D759CB8;
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_26D759CB8;
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }
  std::exception::~exception(this);
  JUMPOUT(0x22A614FA0);
}

std::bad_cast *turi::bad_cast::bad_cast(std::bad_cast *a1, long long *a2)
{
  uint64_t v4 = std::bad_cast::bad_cast(a1);
  v4->__vftable = (std::bad_cast_vtbl *)&unk_26D759CB8;
  int v5 = (std::string *)&v4[1];
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v6 = *a2;
    v5->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_223EEE40C(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

__n128 std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type&&)#1},std::allocator<turi::flexible_type&&>,void ()(turi::flexible_type&)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_26D759CF0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type&&)#1},std::allocator<turi::flexible_type&&>,void ()(turi::flexible_type&)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26D759CF0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

atomic_ullong *std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type&&)#1},std::allocator<turi::flexible_type&&>,void ()(turi::flexible_type&)>::operator()(uint64_t a1, turi::flexible_type_impl *a2, double a3)
{
  return turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type&&)#1}::operator()((char *)(a1 + 8), a2, a3);
}

uint64_t std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type&&)#1},std::allocator<turi::flexible_type&&>,void ()(turi::flexible_type&)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type&&)#1},std::allocator<turi::flexible_type&&>,void ()(turi::flexible_type&)>::target_type()
{
}

atomic_ullong *turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::flexible_type&&)#1}::operator()(char *a1, turi::flexible_type_impl *this, double a3)
{
  v127[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  uint64_t v4 = *((void *)a1 + 1);
  int v5 = *((unsigned __int8 *)this + 12);
  uint64_t v6 = *a1;
  int v7 = *a1;
  if (v6 == 7 || v5 == 7 || v5 == v7)
  {
    unint64_t v10 = *(uint64_t (**)(void))(**(void **)(v4 + 176) + 80);
    return (atomic_ullong *)v10();
  }
  else
  {
    if (!turi::flex_type_is_convertible(turi::flex_type_enum,turi::flex_type_enum)::castable[10 * (char)v5 + v6])
    {
      switch((char)v5)
      {
        case 0:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v121);
          std::ostream::operator<<();
          std::stringbuf::str();
          goto LABEL_319;
        case 1:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v121);
          std::ostream::operator<<();
          std::stringbuf::str();
LABEL_319:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)v121);
          break;
        case 2:
          uint64_t v107 = *(void *)this;
          if (*(char *)(*(void *)this + 31) < 0)
          {
            std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)(v107 + 8), *(void *)(v107 + 16));
          }
          else
          {
            long long v108 = *(_OWORD *)(v107 + 8);
            v124.__r_.__value_.__r.__words[2] = *(void *)(v107 + 24);
            *(_OWORD *)&v124.__r_.__value_.__l.__data_ = v108;
          }
          break;
        case 3:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v121, (void *)(*(void *)this + 8));
          break;
        case 4:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v121, (uint64_t *)(*(void *)this + 8));
          break;
        case 5:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v121, (void *)(*(void *)this + 8));
          break;
        case 6:
          turi::flexible_type_impl::get_string_visitor::operator()(this, &v124);
          break;
        case 8:
          turi::flexible_type_impl::get_string_visitor::operator()();
          break;
        case 9:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v121, (void *)(*(void *)this + 8));
          break;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      long long v109 = std::string::insert(&v124, 0, "Cannot convert ");
      long long v110 = *(_OWORD *)&v109->__r_.__value_.__l.__data_;
      v125.__r_.__value_.__r.__words[2] = v109->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v125.__r_.__value_.__l.__data_ = v110;
      v109->__r_.__value_.__l.__size_ = 0;
      v109->__r_.__value_.__r.__words[2] = 0;
      v109->__r_.__value_.__r.__words[0] = 0;
      atomic_ullong v111 = std::string::append(&v125, " to ");
      long long v112 = *(_OWORD *)&v111->__r_.__value_.__l.__data_;
      v126.__r_.__value_.__r.__words[2] = v111->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v126.__r_.__value_.__l.__data_ = v112;
      v111->__r_.__value_.__l.__size_ = 0;
      v111->__r_.__value_.__r.__words[2] = 0;
      v111->__r_.__value_.__r.__words[0] = 0;
      unint64_t v113 = *a1;
      if (v113 > 9) {
        BOOL v114 = "undefined";
      }
      else {
        BOOL v114 = off_2646D6CE0[v113];
      }
      int v115 = std::string::append(&v126, v114);
      long long v116 = *(_OWORD *)&v115->__r_.__value_.__l.__data_;
      *(void *)&v121[16] = *((void *)&v115->__r_.__value_.__l + 2);
      *(_OWORD *)v121 = v116;
      v115->__r_.__value_.__l.__size_ = 0;
      v115->__r_.__value_.__r.__words[2] = 0;
      v115->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v126.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v125.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v124.__r_.__value_.__l.__data_);
      }
      if (*((int *)global_logger() + 169) <= 6)
      {
        uint64_t v117 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", "operator()", 814, 1);
        if ((v121[23] & 0x80000000) != 0) {
          std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v121, *(std::string::size_type *)&v121[8]);
        }
        else {
          std::string __p = *(std::string *)v121;
        }
        uint64_t v118 = file_logger::operator<<<std::string>((uint64_t)v117, (uint64_t)&__p);
        file_logger::operator<<(v118, (void (*)(unsigned char *))std::endl[abi:ne180100]<char,std::char_traits<char>>);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      exception = (std::bad_cast *)__cxa_allocate_exception(0x20uLL);
      turi::bad_cast::bad_cast(exception, (long long *)v121);
    }
    uint64_t v12 = 0;
    memset(v127, 0, 13);
    BYTE4(v127[1]) = v7;
    switch(v7)
    {
      case 2:
        operator new();
      case 3:
        operator new();
      case 4:
        operator new();
      case 5:
        operator new();
      case 6:
        uint64_t v12 = 0x1900000000000000;
        v127[0] = (atomic_ullong *)0x1900000000000000;
        LODWORD(v127[1]) = 0;
        break;
      case 8:
        operator new();
      case 9:
        operator new();
      default:
        break;
    }
    if (v127 != (atomic_ullong **)this)
    {
      switch(*((unsigned char *)this + 12))
      {
        case 0:
          switch(BYTE4(v127[1]))
          {
            case 0:
              uint64_t v13 = *(void *)this;
              goto LABEL_52;
            case 1:
              double v45 = (double)*(uint64_t *)this;
              goto LABEL_182;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v42 = v127[0];
              std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v121);
              std::ostream::operator<<();
              std::stringbuf::str();
              unint64_t v43 = (void **)(v42 + 1);
              std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)v121);
              if (*((char *)v42 + 31) < 0) {
                operator delete(*v43);
              }
              long long v44 = *(_OWORD *)&v126.__r_.__value_.__l.__data_;
              v42[3] = v126.__r_.__value_.__r.__words[2];
              *(_OWORD *)unint64_t v43 = v44;
              goto LABEL_233;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 6:
              v127[0] = (atomic_ullong *)(*(void *)this & 0xFFFFFFFFFFFFFFLL | 0x5900000000000000);
              LODWORD(v127[1]) = 0;
              goto LABEL_233;
            case 7:
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 1:
          switch(BYTE4(v127[1]))
          {
            case 0:
              uint64_t v13 = (uint64_t)*(double *)this;
              goto LABEL_52;
            case 1:
              double v45 = *(double *)this;
              goto LABEL_182;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              unint64_t v46 = v127[0];
              std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v121);
              std::ostream::operator<<();
              std::stringbuf::str();
              uint64_t v47 = v46 + 1;
              std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)v121);
              if (*((char *)v46 + 31) < 0) {
                operator delete((void *)*v47);
              }
              long long v48 = *(_OWORD *)&v126.__r_.__value_.__l.__data_;
              atomic_ullong v49 = v126.__r_.__value_.__r.__words[2];
              goto LABEL_280;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 6:
              int v50 = (int)((*(double *)this - (double)(uint64_t)floor(*(double *)this)) * 1000000.0);
              if (v50 >= 999999) {
                int v50 = 999999;
              }
              if (v50 >= 0xF4240) {
                turi::flex_date_time::set_microsecond(int)::{lambda(void)#1}::operator()();
              }
              v127[0] = (atomic_ullong *)(vcvtmd_s64_f64(*(double *)this) & 0xFFFFFFFFFFFFFFLL | 0x5900000000000000);
              LODWORD(v127[1]) = v50;
              goto LABEL_233;
            case 7:
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 2:
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              uint64_t v19 = *(void *)this;
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              if (*(char *)(v19 + 31) < 0)
              {
                std::string::__init_copy_ctor_external((std::string *)v121, *(const std::string::value_type **)(v19 + 8), *(void *)(v19 + 16));
              }
              else
              {
                long long v20 = *(_OWORD *)(v19 + 8);
                *(void *)&v121[16] = *(void *)(v19 + 24);
                *(_OWORD *)v121 = v20;
              }
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 3:
          uint64_t v21 = *(void *)this;
          uint64_t v22 = (char *)(*(void *)this + 8);
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v126, v22);
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              if (v127[0] == (atomic_ullong *)v21) {
                goto LABEL_233;
              }
              uint64_t v25 = (char *)(v127[0] + 1);
              std::string v31 = (uint64_t *)(v21 + 16);
              break;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              std::vector<turi::flexible_type>::__assign_with_size[abi:ne180100]<std::__wrap_iter<double const*>,std::__wrap_iter<double const*>>((char **)v127[0] + 1, *(void **)(v21 + 8), *(void **)(v21 + 16), (uint64_t)(*(void *)(v21 + 16) - *(void *)(v21 + 8)) >> 3);
              goto LABEL_233;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v39 = v127[0];
              memset(&v126, 0, sizeof(v126));
              memset(&v125, 0, sizeof(v125));
              std::allocate_shared[abi:ne180100]<std::vector<double>,std::allocator<std::vector<double>>,std::vector<double> const&,void>((uint64_t)v22, &v124);
              turi::flexible_type_impl::ndarray<double>::ndarray(v121, &v124, (uint64_t)&v126, (uint64_t)&v125, 0);
              if (v124.__r_.__value_.__l.__size_) {
                std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v124.__r_.__value_.__l.__size_);
              }
              if (v125.__r_.__value_.__r.__words[0])
              {
                v125.__r_.__value_.__l.__size_ = v125.__r_.__value_.__r.__words[0];
                operator delete(v125.__r_.__value_.__l.__data_);
              }
              if (v126.__r_.__value_.__r.__words[0])
              {
                v126.__r_.__value_.__l.__size_ = v126.__r_.__value_.__r.__words[0];
                operator delete(v126.__r_.__value_.__l.__data_);
              }
              goto LABEL_171;
            default:
              goto LABEL_329;
          }
LABEL_87:
          std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>(v25, *(char **)v22, *v31, (*v31 - *(void *)v22) >> 3);
          break;
        case 4:
          uint64_t v14 = *(void *)this;
          char v15 = (uint64_t *)(*(void *)this + 8);
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v126, v15);
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              turi::flexible_type_impl::soft_assignment_visitor::operator()((uint64_t)v121, v127[0] + 1, v15);
              goto LABEL_233;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              if (v127[0] != (atomic_ullong *)v14) {
                std::vector<turi::flexible_type>::__assign_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>((uint64_t)(v127[0] + 1), *(uint64_t **)(v14 + 8), *(uint64_t **)(v14 + 16), (uint64_t)(*(void *)(v14 + 16) - *(void *)(v14 + 8)) >> 4);
              }
              goto LABEL_233;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v32 = v127[0];
              memset(&v126, 0, sizeof(v126));
              std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&v126, *(uint64_t **)(v14 + 8), *(uint64_t **)(v14 + 16), (uint64_t)(*(void *)(v14 + 16) - *(void *)(v14 + 8)) >> 4);
              turi::flexible_type_impl::get_ndvec_visitor::operator()((uint64_t *)&v126, v121);
              long long v33 = *(_OWORD *)v121;
              *(_OWORD *)v121 = 0uLL;
              std::locale v34 = (std::__shared_weak_count *)v32[2];
              *(_OWORD *)(v32 + 1) = v33;
              if (v34) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v34);
              }
              atomic_ullong *volatile v35 = (void *)v32[3];
              if (v35)
              {
                v32[4] = (atomic_ullong)v35;
                operator delete(v35);
                v32[3] = 0;
                v32[4] = 0;
                void v32[5] = 0;
              }
              uint64_t v36 = (void *)v32[6];
              *(_OWORD *)(v32 + 3) = *(_OWORD *)&v121[16];
              void v32[5] = *(void *)v122;
              *(_OWORD *)&v121[16] = 0uLL;
              *(void *)unint64_t v122 = 0;
              if (v36)
              {
                v32[7] = (atomic_ullong)v36;
                operator delete(v36);
                v32[6] = 0;
                v32[7] = 0;
                v32[8] = 0;
              }
              *((_OWORD *)v32 + 3) = *(_OWORD *)&v122[8];
              v32[8] = *(void *)&v122[24];
              memset(&v122[8], 0, 24);
              v32[9] = v123;
              turi::flexible_type_impl::ndarray<double>::~ndarray(v121);
              v125.__r_.__value_.__r.__words[0] = (std::string::size_type)&v126;
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v125);
              goto LABEL_233;
            default:
              goto LABEL_329;
          }
        case 5:
          uint64_t v23 = *(void *)this;
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v126, (void *)(v23 + 8));
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              if (v127[0] != (atomic_ullong *)v23) {
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__assign_with_size[abi:ne180100]<std::pair<turi::flexible_type,turi::flexible_type>*,std::pair<turi::flexible_type,turi::flexible_type>*>((char **)v127[0] + 1, *(uint64_t **)(v23 + 8), *(uint64_t **)(v23 + 16), (uint64_t)(*(void *)(v23 + 16) - *(void *)(v23 + 8)) >> 5);
              }
              goto LABEL_233;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 6:
          switch(BYTE4(v127[1]))
          {
            case 0:
              uint64_t v13 = (uint64_t)(*(void *)this << 8) >> 8;
              goto LABEL_52;
            case 1:
              double v45 = (double)*((int *)this + 2) / 1000000.0 + (double)((uint64_t)(*(void *)this << 8) >> 8);
LABEL_182:
              v127[0] = *(atomic_ullong **)&v45;
              goto LABEL_233;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              int v60 = *((_DWORD *)this + 2);
              v126.__r_.__value_.__r.__words[0] = *(void *)this;
              LODWORD(v126.__r_.__value_.__r.__words[1]) = v60;
              turi::flexible_type_impl::get_string_visitor::operator()((turi::flexible_type_impl *)&v126, (std::string *)v121);
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 6:
              int v61 = *((_DWORD *)this + 2);
              v127[0] = *(atomic_ullong **)this;
              LODWORD(v127[1]) = v61;
              goto LABEL_233;
            case 7:
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 7:
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 6:
              goto LABEL_232;
            case 1:
              uint64_t v13 = 0x7FF8000000000000;
LABEL_52:
              v127[0] = (atomic_ullong *)v13;
              goto LABEL_233;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              unint64_t v38 = v127[0] + 1;
              if (*((char *)v127[0] + 31) < 0) {
                operator delete((void *)*v38);
              }
              *unint64_t v38 = 0;
              v38[1] = 0;
              v38[2] = 0;
              goto LABEL_233;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 7:
              goto LABEL_233;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            default:
              goto LABEL_329;
          }
        case 8:
          uint64_t v24 = (uint64_t *)(*(void *)this + 8);
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()();
              goto LABEL_277;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v40 = v127[0];
              turi::flexible_type_impl::get_vec_visitor::operator()(v24, (double **)v121, *(unint64_t *)&a3);
              unsigned int v41 = (void *)v40[1];
              if (v41)
              {
                v40[2] = (atomic_ullong)v41;
                operator delete(v41);
                v40[1] = 0;
                v40[2] = 0;
                v40[3] = 0;
              }
              *(_OWORD *)(v40 + 1) = *(_OWORD *)v121;
              v40[3] = *(void *)&v121[16];
              goto LABEL_233;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v39 = v127[0];
              turi::flexible_type_impl::get_ndvec_visitor::operator()(v24, v121, *(unint64_t *)&a3);
LABEL_171:
              long long v56 = *(_OWORD *)v121;
              *(_OWORD *)v121 = 0uLL;
              unint64_t v57 = (std::__shared_weak_count *)v39[2];
              *(_OWORD *)(v39 + 1) = v56;
              if (v57) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v57);
              }
              uint64_t v58 = (void *)v39[3];
              if (v58)
              {
                v39[4] = (atomic_ullong)v58;
                operator delete(v58);
                void v39[3] = 0;
                v39[4] = 0;
                v39[5] = 0;
              }
              atomic_ullong *volatile v59 = (void *)v39[6];
              *(_OWORD *)(v39 + 3) = *(_OWORD *)&v121[16];
              v39[5] = *(void *)v122;
              *(_OWORD *)&v121[16] = 0uLL;
              *(void *)unint64_t v122 = 0;
              if (v59)
              {
                v39[7] = (atomic_ullong)v59;
                operator delete(v59);
                v39[6] = 0;
                v39[7] = 0;
                v39[8] = 0;
              }
              *((_OWORD *)v39 + 3) = *(_OWORD *)&v122[8];
              v39[8] = *(void *)&v122[24];
              memset(&v122[8], 0, 24);
              v39[9] = v123;
              goto LABEL_312;
            default:
              goto LABEL_329;
          }
        case 9:
          uint64_t v17 = *(void *)this;
          uint64_t v18 = (uint64_t *)(*(void *)this + 8);
          switch(BYTE4(v127[1]))
          {
            case 0:
            case 1:
            case 6:
            case 7:
              goto LABEL_232;
            case 2:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v16 = v127[0];
              turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v126, v18);
LABEL_277:
              uint64_t v47 = v16 + 1;
              if (*((char *)v16 + 31) < 0) {
                operator delete((void *)*v47);
              }
              long long v48 = *(_OWORD *)v121;
              atomic_ullong v49 = *(void *)&v121[16];
LABEL_280:
              v47[2] = v49;
              *(_OWORD *)uint64_t v47 = v48;
              goto LABEL_233;
            case 3:
              if (*(void *)v12 != 1) {
                operator new();
              }
              uint64_t v25 = (char *)(v127[0] + 1);
              uint64_t v26 = *(void *)(v17 + 72);
              if (v26) {
                goto LABEL_260;
              }
              uint64_t v28 = *(uint64_t **)(v17 + 24);
              long long v27 = *(uint64_t **)(v17 + 32);
              unsigned int v29 = *(void **)(v17 + 8);
              if (v27 != v28 && v29)
              {
                uint64_t v26 = 1;
                do
                {
                  uint64_t v30 = *v28++;
                  v26 *= v30;
                }
                while (v28 != v27);
              }
              if (v26 == (uint64_t)(v29[1] - *v29) >> 3
                && turi::flexible_type_impl::ndarray<double>::last_index(v18) == (uint64_t)(*(void *)(*v18 + 8)
                                                                                         - *(void *)*v18) >> 3)
              {
                if (!turi::flexible_type_impl::ndarray<double>::is_full(v18)) {
                  turi::flexible_type_impl::ndarray<double>::elements(void)const::{lambda(void)#1}::operator()();
                }
                uint64_t v22 = (char *)*v18;
                if (v25 != v22)
                {
                  std::string v31 = (uint64_t *)(v22 + 8);
                  goto LABEL_87;
                }
              }
              else
              {
LABEL_260:
                if (!turi::flexible_type_impl::ndarray<double>::is_valid(v18)) {
                  turi::flexible_type_impl::ndarray<double>::compact(void)const::{lambda(void)#1}::operator()();
                }
                if (turi::flexible_type_impl::ndarray<double>::is_full(v18))
                {
                  turi::flexible_type_impl::ndarray<double>::ndarray(v121, (uint64_t)v18);
                }
                else
                {
                  memset(&v126, 0, sizeof(v126));
                  memset(&v125, 0, sizeof(v125));
                  memset(&v124, 0, sizeof(v124));
                  turi::flexible_type_impl::ndarray<double>::ndarray(v121, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124, 0);
                  if (v124.__r_.__value_.__r.__words[0])
                  {
                    v124.__r_.__value_.__l.__size_ = v124.__r_.__value_.__r.__words[0];
                    operator delete(v124.__r_.__value_.__l.__data_);
                  }
                  if (v125.__r_.__value_.__r.__words[0])
                  {
                    v125.__r_.__value_.__l.__size_ = v125.__r_.__value_.__r.__words[0];
                    operator delete(v125.__r_.__value_.__l.__data_);
                  }
                  if (v126.__r_.__value_.__r.__words[0])
                  {
                    v126.__r_.__value_.__l.__size_ = v126.__r_.__value_.__r.__words[0];
                    operator delete(v126.__r_.__value_.__l.__data_);
                  }
                  atomic_ullong v123 = 0;
                  if (v121 != (unsigned char *)(v17 + 8)) {
                    std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>(&v121[16], *(char **)(v17 + 24), *(void *)(v17 + 32), (uint64_t)(*(void *)(v17 + 32) - *(void *)(v17 + 24)) >> 3);
                  }
                  uint64_t v71 = *(uint64_t **)(v17 + 24);
                  uint64_t v70 = *(uint64_t **)(v17 + 32);
                  if (v70 == v71 || !*v18)
                  {
                    unint64_t v72 = 0;
                  }
                  else
                  {
                    unint64_t v72 = 1;
                    do
                    {
                      uint64_t v73 = *v71++;
                      v72 *= v73;
                    }
                    while (v71 != v70);
                  }
                  std::vector<double>::resize(*(uint64_t *)v121, v72);
                  std::vector<unsigned long>::resize((uint64_t)&v122[8], (uint64_t)(*(void *)(v17 + 32) - *(void *)(v17 + 24)) >> 3);
                  if (*(void *)&v121[24] != *(void *)&v121[16]
                    && *(void *)(*(void *)v121 + 8) != **(void **)v121)
                  {
                    std::vector<std::pair<unsigned long,unsigned long>>::vector(&v126, (uint64_t)(*(void *)(v17 + 56) - *(void *)(v17 + 48)) >> 3);
                    uint64_t v74 = *(void *)(v17 + 48);
                    uint64_t v75 = *(void *)(v17 + 56);
                    unint64_t v76 = (unint64_t *)v126.__r_.__value_.__r.__words[0];
                    uint64_t v77 = v75 - v74;
                    if (v75 != v74)
                    {
                      uint64_t v78 = 0;
                      unint64_t v79 = v77 >> 3;
                      if (v79 <= 1) {
                        unint64_t v79 = 1;
                      }
                      unint64_t v80 = (void *)(v126.__r_.__value_.__r.__words[0] + 8);
                      do
                      {
                        *(v80 - 1) = *(void *)(v74 + 8 * v78);
                        *unint64_t v80 = v78++;
                        v80 += 2;
                      }
                      while (v79 != v78);
                    }
                    std::sort[abi:ne180100]<std::reverse_iterator<std::__wrap_iter<std::pair<unsigned long,unsigned long> *>>>(v126.__r_.__value_.__l.__size_, (unint64_t *)v126.__r_.__value_.__l.__size_, (uint64_t)v76, v76);
                    std::string::size_type v81 = v126.__r_.__value_.__r.__words[0];
                    uint64_t v82 = *(void *)&v122[8];
                    *(void *)(*(void *)&v122[8] + 8 * *(void *)(v126.__r_.__value_.__r.__words[0] + 8)) = 1;
                    uint64_t v83 = *(void *)(v17 + 56) - *(void *)(v17 + 48);
                    if ((unint64_t)v83 >= 9)
                    {
                      unint64_t v84 = v83 >> 3;
                      uint64_t v85 = *(void *)&v121[16];
                      if (v84 <= 2) {
                        unint64_t v84 = 2;
                      }
                      double v86 = (uint64_t *)(v81 + 24);
                      unint64_t v87 = v84 - 1;
                      do
                      {
                        uint64_t v88 = *(void *)(v85 + 8 * *(v86 - 2)) * *(void *)(v82 + 8 * *(v86 - 2));
                        uint64_t v89 = *v86;
                        v86 += 2;
                        *(void *)(v82 + 8 * v89) = v88;
                        --v87;
                      }
                      while (v87);
                    }
                    unint64_t v90 = (uint64_t)(*(void *)(v17 + 32) - *(void *)(v17 + 24)) >> 3;
                    v124.__r_.__value_.__r.__words[0] = 0;
                    std::vector<unsigned long>::vector(&v125, v90, &v124);
                    do
                    {
                      v91 = (uint64_t *)v125.__r_.__value_.__r.__words[0];
                      if (v125.__r_.__value_.__l.__size_ == v125.__r_.__value_.__r.__words[0])
                      {
                        uint64_t v100 = 0;
                        uint64_t v101 = *(void *)(**(void **)(v17 + 8) + 8 * *(void *)(v17 + 72));
                        uint64_t v102 = *(void **)v121;
                      }
                      else
                      {
                        uint64_t v92 = 0;
                        unint64_t v93 = (uint64_t)(v125.__r_.__value_.__l.__size_ - v125.__r_.__value_.__r.__words[0]) >> 3;
                        uint64_t v94 = *(uint64_t **)(v17 + 48);
                        if (v93 <= 1) {
                          unint64_t v93 = 1;
                        }
                        uint64_t v95 = (uint64_t *)v125.__r_.__value_.__r.__words[0];
                        unint64_t v96 = v93;
                        do
                        {
                          uint64_t v98 = *v95++;
                          uint64_t v97 = v98;
                          uint64_t v99 = *v94++;
                          v92 += v99 * v97;
                          --v96;
                        }
                        while (v96);
                        uint64_t v100 = 0;
                        uint64_t v101 = *(void *)(**(void **)(v17 + 8) + 8 * (*(void *)(v17 + 72) + v92));
                        uint64_t v102 = *(void **)v121;
                        uint64_t v103 = *(uint64_t **)&v122[8];
                        do
                        {
                          uint64_t v105 = *v91++;
                          uint64_t v104 = v105;
                          uint64_t v106 = *v103++;
                          v100 += v106 * v104;
                          --v93;
                        }
                        while (v93);
                      }
                      *(void *)(*v102 + 8 * v10std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v101;
                    }
                    while (turi::flexible_type_impl::ndarray<double>::increment_index<unsigned long>((uint64_t)v18, (uint64_t *)&v125));
                    if (v125.__r_.__value_.__r.__words[0])
                    {
                      v125.__r_.__value_.__l.__size_ = v125.__r_.__value_.__r.__words[0];
                      operator delete(v125.__r_.__value_.__l.__data_);
                    }
                    if (v126.__r_.__value_.__r.__words[0])
                    {
                      v126.__r_.__value_.__l.__size_ = v126.__r_.__value_.__r.__words[0];
                      operator delete(v126.__r_.__value_.__l.__data_);
                    }
                  }
                }
                turi::flexible_type_impl::ndarray<double>::ensure_unique((uint64_t *)v121);
                if (!turi::flexible_type_impl::ndarray<double>::is_full(v121)) {
                  turi::flexible_type_impl::ndarray<double>::elements(void)::{lambda(void)#1}::operator()();
                }
                if (v25 != *(char **)v121) {
                  std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>(v25, **(char ***)v121, *(void *)(*(void *)v121 + 8), (uint64_t)(*(void *)(*(void *)v121 + 8) - **(void **)v121) >> 3);
                }
LABEL_312:
                turi::flexible_type_impl::ndarray<double>::~ndarray(v121);
              }
              break;
            case 4:
              if (*(void *)v12 != 1) {
                operator new();
              }
              goto LABEL_232;
            case 5:
              if (*(void *)v12 != 1) {
                operator new();
              }
LABEL_232:
              turi::flexible_type_fail(0);
              goto LABEL_233;
            case 8:
              if (*(void *)v12 != 1) {
                operator new();
              }
              unint64_t v51 = v127[0];
              turi::flexible_type_impl::get_img_visitor::operator()((uint64_t)v18, (turi::image_type *)v121);
              long long v52 = *(_OWORD *)v121;
              *(_OWORD *)v121 = 0uLL;
              long long v53 = *(_OWORD *)(v51 + 1);
              *(_OWORD *)(v51 + 1) = v52;
              *(_OWORD *)&v126.__r_.__value_.__l.__data_ = v53;
              boost::detail::shared_count::~shared_count((atomic_uint **)&v126.__r_.__value_.__l.__size_);
              long long v54 = *(_OWORD *)&v121[16];
              long long v55 = *(_OWORD *)v122;
              *(_OWORD *)(v51 + 7) = *(_OWORD *)&v122[16];
              *(_OWORD *)(v51 + 5) = v55;
              *(_OWORD *)(v51 + 3) = v54;
              boost::detail::shared_count::~shared_count((atomic_uint **)&v121[8]);
              goto LABEL_233;
            case 9:
              if (*(void *)v12 != 1) {
                operator new();
              }
              atomic_ullong *volatile v37 = v127[0];
              std::shared_ptr<std::vector<double>>::operator=[abi:ne180100](v127[0] + 1, v18);
              if (v37 != (atomic_ullong *)v17)
              {
                std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>((char *)v37 + 24, *(char **)(v17 + 24), *(void *)(v17 + 32), (uint64_t)(*(void *)(v17 + 32) - *(void *)(v17 + 24)) >> 3);
                std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>((char *)v37 + 48, *(char **)(v17 + 48), *(void *)(v17 + 56), (uint64_t)(*(void *)(v17 + 56) - *(void *)(v17 + 48)) >> 3);
              }
              v37[9] = *(void *)(v17 + 72);
              goto LABEL_233;
            default:
              goto LABEL_329;
          }
          break;
        default:
LABEL_329:
          __n128 result = (atomic_ullong *)turi::flexible_type_fail(0);
          __break(1u);
          return result;
      }
    }
LABEL_233:
    __n128 result = (atomic_ullong *)(*(uint64_t (**)(void, void, void, atomic_ullong **))(**(void **)(v4 + 176)
                                                                                                  + 80))(*(void *)(v4 + 176), 0, *((void *)a1 + 2), v127);
    switch(BYTE4(v127[1]))
    {
      case 2:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v62 = v127[0];
          if (v127[0])
          {
            if (*((char *)v127[0] + 31) < 0) {
              operator delete(*((void **)v127[0] + 1));
            }
            unint64_t v63 = v62;
            uint64_t v64 = 0x1012C404EF22A49;
            goto LABEL_258;
          }
        }
        break;
      case 3:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v67 = v127[0];
          if (v127[0])
          {
            uint64_t v68 = (void *)v127[0][1];
            if (v68)
            {
              v127[0][2] = (atomic_ullong)v68;
              operator delete(v68);
            }
            unint64_t v63 = v67;
            uint64_t v64 = 0x1080C409938AC02;
            goto LABEL_258;
          }
        }
        break;
      case 4:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v65 = v127[0];
          if (v127[0])
          {
            *(void *)v121 = v127[0] + 1;
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)v121);
            goto LABEL_253;
          }
        }
        break;
      case 5:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v65 = v127[0];
          if (v127[0])
          {
            *(void *)v121 = v127[0] + 1;
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)v121);
LABEL_253:
            unint64_t v63 = v65;
            uint64_t v64 = 0x1020C405E66F15BLL;
            goto LABEL_258;
          }
        }
        break;
      case 8:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v69 = v127[0];
          if (v127[0])
          {
            boost::detail::shared_count::~shared_count((atomic_uint **)v127[0] + 2);
            unint64_t v63 = v69;
            unsigned int v66 = -235920773;
            goto LABEL_257;
          }
        }
        break;
      case 9:
        if (atomic_fetch_add(v127[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          __n128 result = v127[0];
          if (v127[0])
          {
            unint64_t v63 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v127[0]);
            unsigned int v66 = 2071181815;
LABEL_257:
            uint64_t v64 = v66 | 0x1030C4000000000;
LABEL_258:
            __n128 result = (atomic_ullong *)MEMORY[0x22A614FA0](v63, v64);
          }
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_223EF0BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v23 = *(void **)(v21 - 144);
  if (v23)
  {
    *(void *)(v21 - 136) = v23;
    operator delete(v23);
  }
  turi::flexible_type_impl::ndarray<double>::~ndarray(&a16);
  switch(*(unsigned char *)(v21 - 92))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v24 = *(void *)(v21 - 104);
      if (!v24) {
        goto LABEL_29;
      }
      if (*(char *)(v24 + 31) < 0) {
        operator delete(*(void **)(v24 + 8));
      }
      uint64_t v25 = (void *)v24;
      uint64_t v26 = 0x1012C404EF22A49;
      goto LABEL_28;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v30 = *(void **)(v21 - 104);
      if (!v30) {
        goto LABEL_29;
      }
      std::string v31 = (void *)v30[1];
      if (v31)
      {
        v30[2] = v31;
        operator delete(v31);
      }
      uint64_t v25 = v30;
      uint64_t v26 = 0x1080C409938AC02;
      goto LABEL_28;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      long long v27 = *(void **)(v21 - 104);
      if (!v27) {
        goto LABEL_29;
      }
      *(void *)(v21 - 112) = v27 + 1;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 112));
      goto LABEL_23;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      long long v27 = *(void **)(v21 - 104);
      if (!v27) {
        goto LABEL_29;
      }
      *(void *)(v21 - 112) = v27 + 1;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 112));
LABEL_23:
      uint64_t v25 = v27;
      uint64_t v26 = 0x1020C405E66F15BLL;
      goto LABEL_28;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v32 = *(void *)(v21 - 104);
      if (!v32) {
        goto LABEL_29;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(v32 + 16));
      uint64_t v25 = (void *)v32;
      unsigned int v29 = -235920773;
      goto LABEL_27;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v21 - 104), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_29;
      }
      uint64_t v28 = *(void **)(v21 - 104);
      if (!v28) {
        goto LABEL_29;
      }
      uint64_t v25 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v28);
      unsigned int v29 = 2071181815;
LABEL_27:
      uint64_t v26 = v29 | 0x1030C4000000000;
LABEL_28:
      MEMORY[0x22A614FA0](v25, v26);
LABEL_29:
      _Unwind_Resume(a1);
      return;
    default:
      goto LABEL_29;
  }
}

void std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}>,void ()(turi::sframe_rows const&)>::~__func()
{
}

__n128 std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}>,void ()(turi::sframe_rows const&)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_26D759D80;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}>,void ()(turi::sframe_rows const&)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26D759D80;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}>,void ()(turi::sframe_rows const&)>::operator()(uint64_t a1, turi::sframe_rows *a2)
{
}

uint64_t std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}>,void ()(turi::sframe_rows const&)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1},std::allocator<turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}>,void ()(turi::sframe_rows const&)>::target_type()
{
}

void turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}::operator()(uint64_t a1, turi::sframe_rows *a2)
{
  if (*((void *)a2 + 1) - *(void *)a2 != 16) {
    turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}::operator() const(turi::sframe_rows const&)::{lambda(void)#1}::operator()();
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(*(void *)a1 + 176);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = operator new(1uLL);
  std::string __p = v6;
  unsigned char *v6 = v5;
  long long v8 = v6 + 1;
  char v9 = v6 + 1;
  turi::sframe_rows::type_check(a2, &__p, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t **))(*(void *)v4 + 88))(v4, v3, v10);
  uint64_t v11 = (void **)v10;
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100](&v11);
  if (__p)
  {
    long long v8 = __p;
    operator delete(__p);
  }
}

void sub_223EF1458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  *(void *)(v11 - 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v10;
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v11 - 40));
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}::operator() const(turi::sframe_rows const&)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", 101);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"sfr.num_columns() == 1", 22);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    char v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", "operator()", 819, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::sarray<turi::flexible_type>::get_output_iterator(unsigned long)::{lambda(turi::sframe_rows const&)#1}::operator() const(turi::sframe_rows const&)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EF1584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>::sframe_function_output_iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = std::__function::__value_func<void ()(turi::flexible_type const&)>::__value_func[abi:ne180100](a1, a2);
  std::__function::__value_func<void ()(turi::flexible_type &&)>::__value_func[abi:ne180100](v7 + 32, a3);
  std::__function::__value_func<void ()(turi::sframe_rows const&)>::__value_func[abi:ne180100](a1 + 64, a4);
  return a1;
}

void sub_223EF16DC(_Unwind_Exception *a1)
{
  std::__function::__value_func<void ()(turi::flexible_type &&)>::~__value_func[abi:ne180100](v2);
  std::__function::__value_func<void ()(turi::flexible_type const&)>::~__value_func[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__value_func<void ()(turi::flexible_type const&)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

{
  void *v3;
  uint64_t v4;

  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t std::__function::__value_func<void ()(turi::flexible_type &&)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

{
  void *v3;
  uint64_t v4;

  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t std::__function::__value_func<void ()(turi::sframe_rows const&)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

{
  void *v3;
  uint64_t v4;

  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

void turi::sarray<turi::flexible_type>::keep_array_file_ref(std::__split_buffer<std::string>::pointer a1)
{
  std::__split_buffer<std::string>::pointer v1 = a1;
  memset(&v46, 0, sizeof(v46));
  std::string::size_type size = a1[4].__r_.__value_.__l.__size_;
  for (std::string::size_type i = a1[4].__r_.__value_.__r.__words[2]; size != i; size += 24)
  {
    if (*(char *)(size + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v44, *(const std::string::value_type **)size, *(void *)(size + 8));
    }
    else
    {
      long long v4 = *(_OWORD *)size;
      v44.__r_.__value_.__r.__words[2] = *(void *)(size + 16);
      *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v4;
    }
    turi::parse_v2_segment_filename((uint64_t)&v44, &__p);
    std::vector<std::string>::pointer end = v46.__end_;
    if (v46.__end_ >= v46.__end_cap_.__value_)
    {
      unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * (((char *)v46.__end_ - (char *)v46.__begin_) >> 3);
      unint64_t v8 = v7 + 1;
      if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
        std::vector<float>::__throw_length_error[abi:ne180100]();
      }
      if (0x5555555555555556 * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3) > v8) {
        unint64_t v8 = 0x5555555555555556 * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3);
      }
      if (0xAAAAAAAAAAAAAAABLL * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3) >= 0x555555555555555) {
        unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v9 = v8;
      }
      __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v46.__end_cap_;
      if (v9) {
        uint64_t v10 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)&v46.__end_cap_, v9);
      }
      else {
        uint64_t v10 = 0;
      }
      uint64_t v11 = v10 + v7;
      __v.__first_ = v10;
      __v.__begin_ = v11;
      __v.__end_cap_.__value_ = &v10[v9];
      long long v12 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      v11->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v12;
      memset(&__p, 0, sizeof(__p));
      __v.__end_ = v11 + 1;
      std::vector<std::string>::__swap_out_circular_buffer(&v46, &__v);
      uint64_t v13 = v46.__end_;
      std::__split_buffer<std::string>::~__split_buffer(&__v);
      v46.__end_ = v13;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      long long v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      v46.__end_->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
      *(_OWORD *)&end->__r_.__value_.__l.__data_ = v6;
      memset(&__p, 0, sizeof(__p));
      v46.__end_ = end + 1;
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
  }
  p_std::string::size_type size = (const std::string::value_type **)&v1->__r_.__value_.__l.__size_;
  if (v1[1].__r_.__value_.__s.__data_[7] < 0)
  {
    std::string::size_type v15 = v1->__r_.__value_.__r.__words[2];
    if (!v15) {
      goto LABEL_41;
    }
    std::string::__init_copy_ctor_external(&v43, *p_size, v15);
  }
  else
  {
    if (!v1[1].__r_.__value_.__s.__data_[7]) {
      goto LABEL_41;
    }
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = *(_OWORD *)p_size;
    v43.__r_.__value_.__r.__words[2] = v1[1].__r_.__value_.__r.__words[0];
  }
  turi::parse_v2_segment_filename((uint64_t)&v43, &__p);
  std::vector<std::string>::pointer v16 = v46.__end_;
  if (v46.__end_ >= v46.__end_cap_.__value_)
  {
    unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * (((char *)v46.__end_ - (char *)v46.__begin_) >> 3);
    unint64_t v19 = v18 + 1;
    if (v18 + 1 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    if (0x5555555555555556 * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3) > v19) {
      unint64_t v19 = 0x5555555555555556 * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3);
    }
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3) >= 0x555555555555555) {
      unint64_t v20 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v20 = v19;
    }
    __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v46.__end_cap_;
    if (v20) {
      uint64_t v21 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)&v46.__end_cap_, v20);
    }
    else {
      uint64_t v21 = 0;
    }
    uint64_t v22 = v21 + v18;
    __v.__first_ = v21;
    __v.__begin_ = v22;
    __v.__end_cap_.__value_ = &v21[v20];
    long long v23 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    v22->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&v22->__r_.__value_.__l.__data_ = v23;
    memset(&__p, 0, sizeof(__p));
    __v.__end_ = v22 + 1;
    std::vector<std::string>::__swap_out_circular_buffer(&v46, &__v);
    uint64_t v24 = v46.__end_;
    std::__split_buffer<std::string>::~__split_buffer(&__v);
    v46.__end_ = v24;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v17 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    v46.__end_->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
    memset(&__p, 0, sizeof(__p));
    v46.__end_ = v16 + 1;
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
LABEL_41:
  uint64_t v25 = (const std::string::value_type **)&v1[6].__r_.__value_.__l.__size_;
  if (v1[7].__r_.__value_.__s.__data_[7] < 0)
  {
    std::string::size_type v26 = v1[6].__r_.__value_.__r.__words[2];
    if (!v26) {
      goto LABEL_61;
    }
    std::string::__init_copy_ctor_external(&v42, *v25, v26);
  }
  else
  {
    if (!v1[7].__r_.__value_.__s.__data_[7]) {
      goto LABEL_61;
    }
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = *(_OWORD *)v25;
    v42.__r_.__value_.__r.__words[2] = v1[7].__r_.__value_.__r.__words[0];
  }
  turi::parse_v2_segment_filename((uint64_t)&v42, &__p);
  std::vector<std::string>::pointer v27 = v46.__end_;
  if (v46.__end_ >= v46.__end_cap_.__value_)
  {
    unint64_t v29 = 0xAAAAAAAAAAAAAAABLL * (((char *)v46.__end_ - (char *)v46.__begin_) >> 3);
    unint64_t v30 = v29 + 1;
    if (v29 + 1 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    if (0x5555555555555556 * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3) > v30) {
      unint64_t v30 = 0x5555555555555556 * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3);
    }
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v46.__end_cap_.__value_ - (char *)v46.__begin_) >> 3) >= 0x555555555555555) {
      unint64_t v31 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v31 = v30;
    }
    __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v46.__end_cap_;
    if (v31) {
      uint64_t v32 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>((uint64_t)&v46.__end_cap_, v31);
    }
    else {
      uint64_t v32 = 0;
    }
    long long v33 = v32 + v29;
    __v.__first_ = v32;
    __v.__begin_ = v33;
    __v.__end_cap_.__value_ = &v32[v31];
    long long v34 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    v33->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33->__r_.__value_.__l.__data_ = v34;
    memset(&__p, 0, sizeof(__p));
    __v.__end_ = v33 + 1;
    std::vector<std::string>::__swap_out_circular_buffer(&v46, &__v);
    atomic_ullong *volatile v35 = v46.__end_;
    std::__split_buffer<std::string>::~__split_buffer(&__v);
    v46.__end_ = v35;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v28 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    v46.__end_->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&v27->__r_.__value_.__l.__data_ = v28;
    memset(&__p, 0, sizeof(__p));
    v46.__end_ = v27 + 1;
  }
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
LABEL_61:
  std::vector<std::string>::pointer begin = v46.__begin_;
  std::vector<std::string>::pointer v37 = v46.__end_;
  if (v46.__begin_ != v46.__end_)
  {
    unint64_t v38 = (uint64_t *)&v1[10].__r_.__value_.__r.__words[2];
    do
    {
      __v.__first_ = 0;
      __v.__begin_ = 0;
      uint64_t instance = turi::fileio::file_handle_pool::get_instance((turi::fileio::file_handle_pool *)a1);
      turi::fileio::file_handle_pool::register_file((uint64_t)instance, begin, (uint64_t *)&__p);
      long long v40 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
      unsigned int v41 = (std::__shared_weak_count *)__v.__begin_;
      *(_OWORD *)&__v.__first_ = v40;
      if (v41)
      {
        std::__shared_weak_count::__release_shared[abi:ne180100](v41);
        if (__p.__r_.__value_.__l.__size_) {
          std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
        }
      }
      std::vector<std::shared_ptr<turi::fileio::file_ownership_handle>>::push_back[abi:ne180100](v38, (long long *)&__v);
      a1 = __v.__begin_;
      if (__v.__begin_) {
        std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__v.__begin_);
      }
      ++begin;
    }
    while (begin != v37);
  }
  __v.__first_ = (std::__split_buffer<std::string>::pointer)&v46;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__v);
}

void sub_223EF1D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,char a38)
{
  std::string __p = &a38;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void **std::vector<std::shared_ptr<turi::fileio::file_ownership_handle>>::push_back[abi:ne180100](uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  __n128 result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = ((uint64_t)v7 - *a1) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v5 - *a1;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    void v18[4] = result;
    uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>((uint64_t)result, v13);
    std::string::size_type v15 = &v14[16 * v10];
    v18[0] = v14;
    v18[1] = v15;
    v18[3] = &v14[16 * v16];
    long long v17 = *a2;
    *(_OWORD *)std::string::size_type v15 = *a2;
    if (*((void *)&v17 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v17 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    v18[2] = v15 + 16;
    std::vector<std::shared_ptr<turi::fileio::file_ownership_handle>>::__swap_out_circular_buffer(a1, v18);
    unint64_t v9 = (void *)a1[1];
    __n128 result = std::__split_buffer<std::shared_ptr<turi::group_aggregate_value>>::~__split_buffer(v18);
  }
  else
  {
    *unint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    v7[1] = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    unint64_t v9 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_223EF1F98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::shared_ptr<turi::group_aggregate_value>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::shared_ptr<turi::fileio::file_ownership_handle>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::reverse_iterator<std::shared_ptr<turi::fileio::file_ownership_handle>*>,std::reverse_iterator<std::shared_ptr<turi::fileio::file_ownership_handle>*>,std::reverse_iterator<std::shared_ptr<turi::fileio::file_ownership_handle>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::reverse_iterator<std::shared_ptr<turi::fileio::file_ownership_handle>*>,std::reverse_iterator<std::shared_ptr<turi::fileio::file_ownership_handle>*>,std::reverse_iterator<std::shared_ptr<turi::fileio::file_ownership_handle>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      _OWORD *v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::reverse_iterator<std::shared_ptr<turi::fileio::file_ownership_handle>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::fileio::file_ownership_handle>>,std::reverse_iterator<std::shared_ptr<turi::fileio::file_ownership_handle>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<turi::group_aggregate_value>>,std::reverse_iterator<std::shared_ptr<turi::group_aggregate_value>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

uint64_t turi::sarray<turi::flexible_type>::set_metadata(uint64_t a1, long long *a2, const std::string *a3)
{
  assert_msg(*(unsigned __int8 *)(a1 + 248), "Invalid SArray");
  assert_msg(*(unsigned __int8 *)(a1 + 249), "SArray not opened for writing");
  uint64_t v6 = *(long long **)(a1 + 176);
  uint64_t v12 = v6;
  if (!v6) {
    turi::sarray<turi::flexible_type>::set_metadata(std::string,std::string)::{lambda(void)#1}::operator()();
  }
  uint64_t v7 = (uint64_t **)(*(void *)((*(uint64_t (**)(long long *))(*(void *)v6 + 32))(v6) + 64) + 120);
  uint64_t v12 = a2;
  uint64_t v8 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v7, (const void **)a2, (uint64_t)&std::piecewise_construct, &v12);
  std::string::operator=((std::string *)(v8 + 7), a3);
  uint64_t v9 = *(void *)((*(uint64_t (**)(void))(**(void **)(a1 + 176) + 32))(*(void *)(a1 + 176)) + 64);
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)v9);
  uint64_t v10 = *(void *)(v9 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v9 + 24);
  *(void *)(a1 + 48) = v10;
  std::string::operator=((std::string *)(a1 + 56), (const std::string *)(v9 + 48));
  if (a1 + 8 != v9)
  {
    std::vector<unsigned long>::__assign_with_size[abi:ne180100]<unsigned long const*,unsigned long const*>((char *)(a1 + 80), *(char **)(v9 + 72), *(void *)(v9 + 80), (uint64_t)(*(void *)(v9 + 80) - *(void *)(v9 + 72)) >> 3);
    std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>((std::vector<std::string> *)(a1 + 104), *(std::string **)(v9 + 96), *(long long **)(v9 + 104), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v9 + 104) - *(void *)(v9 + 96)) >> 3));
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__assign_multi<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>((uint64_t **)(a1 + 128), *(long long **)(v9 + 120), (long long *)(v9 + 128));
  }
  return 1;
}

void turi::sarray<turi::flexible_type>::set_metadata(std::string,std::string)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::ios_base::failure v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  std::__split_buffer<std::string>::pointer v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", 101);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  long long v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"writer", 6);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"!=", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"__null", 6);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"!=", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  unint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/storage/sframe_data/sarray.hpp", "operator()", 622, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  char v13 = v16;
  turi::sarray<turi::flexible_type>::set_metadata(std::string,std::string)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EF23F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__find_equal<std::string>((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

void std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v7 = (std::string *)(v6 + 4);
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_223EF2620(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

void **std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = (uint64_t)*(result - 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 5) >= a2)
  {
    if (a2)
    {
      uint64_t v13 = v7 + 96 * a2;
      uint64_t v14 = 96 * a2;
      char v15 = (void *)(v7 + 88);
      do
      {
        *(v15 - 8) = 0;
        *(v15 - 4) = 0;
        void *v15 = 0;
        v15 += 12;
        v14 -= 96;
      }
      while (v14);
    }
    else
    {
      uint64_t v13 = (uint64_t)*(result - 1);
    }
    a1[1] = v13;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 5);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x2AAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 5);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x155555555555555) {
      unint64_t v11 = 0x2AAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    long long v23 = result;
    if (v11) {
      uint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>>((uint64_t)result, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    unint64_t v19 = v12;
    unint64_t v20 = &v12[96 * v8];
    uint64_t v22 = &v12[96 * v11];
    uint64_t v16 = &v20[96 * a2];
    uint64_t v17 = 96 * a2;
    unint64_t v18 = v20 + 88;
    do
    {
      *(v18 - 8) = 0;
      *(v18 - 4) = 0;
      *unint64_t v18 = 0;
      v18 += 12;
      v17 -= 96;
    }
    while (v17);
    uint64_t v21 = v16;
    std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__swap_out_circular_buffer(a1, &v19);
    return std::__split_buffer<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::~__split_buffer(&v19);
  }
  return result;
}

void sub_223EF2784(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>,std::function<void ()(turi::sframe_rows const&)>*,std::function<void ()(turi::sframe_rows const&)>*>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>,std::function<void ()(turi::sframe_rows const&)>*,std::function<void ()(turi::sframe_rows const&)>*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 96;
      std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::construct[abi:ne180100]<std::function<void ()(turi::sframe_rows const&)>,std::function<void ()(turi::sframe_rows const&)>>(a1, v7 - 96, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 96;
      *((void *)&v16 + 1) -= 96;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::construct[abi:ne180100]<std::function<void ()(turi::sframe_rows const&)>,std::function<void ()(turi::sframe_rows const&)>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__function::__value_func<void ()(turi::flexible_type const&)>::__value_func[abi:ne180100](a2, a3);
  std::__function::__value_func<void ()(turi::flexible_type &&)>::__value_func[abi:ne180100](a2 + 32, a3 + 32);
  return std::__function::__value_func<void ()(turi::sframe_rows const&)>::__value_func[abi:ne180100](a2 + 64, a3 + 64);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void *std::_AllocatorDestroyRangeReverse<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v15 = v3;
  uint64_t v16 = v2;
  uint64_t v17 = v3;
  uint64_t v18 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  uint64_t v13 = v6;
  return std::__allocator_destroy[abi:ne180100]<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>><std::function<void ()(turi::sframe_rows const&)>*>>,std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>><std::function<void ()(turi::sframe_rows const&)>*>>(v4, (uint64_t)v14, (uint64_t)v9);
}

void *std::__allocator_destroy[abi:ne180100]<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>><std::function<void ()(turi::sframe_rows const&)>*>>,std::allocator<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>><std::function<void ()(turi::sframe_rows const&)>*>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (std::string::size_type i = *(void **)(a2 + 32); i != *(void **)(a3 + 32); *(void *)(a2 + 32) = i)
  {
    std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100](i + 8);
    std::__function::__value_func<void ()(turi::flexible_type &&)>::~__value_func[abi:ne180100](i + 4);
    uint64_t result = std::__function::__value_func<void ()(turi::flexible_type const&)>::~__value_func[abi:ne180100](i);
    std::string::size_type i = (void *)(*(void *)(a2 + 32) + 96);
  }
  return result;
}

void **std::__split_buffer<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void *std::__split_buffer<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__destruct_at_end[abi:ne180100](void *result, uint64_t a2)
{
  uint64_t v2 = result[2];
  if (v2 != a2)
  {
    uint64_t v4 = result;
    do
    {
      uint64_t v4[2] = v2 - 96;
      std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100]((void *)(v2 - 32));
      std::__function::__value_func<void ()(turi::flexible_type &&)>::~__value_func[abi:ne180100]((void *)(v2 - 64));
      uint64_t result = std::__function::__value_func<void ()(turi::flexible_type const&)>::~__value_func[abi:ne180100]((void *)(v2 - 96));
      uint64_t v2 = v4[2];
    }
    while (v2 != a2);
  }
  return result;
}

void std::default_delete<turi::gl_sarray_writer_impl>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v4 = (void **)(a2 + 16);
    std::vector<turi::sframe_function_output_iterator<turi::flexible_type,std::function<void ()(turi::flexible_type const&)>,std::function<void ()(turi::flexible_type&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__destroy_vector::operator()[abi:ne180100](&v4);
    uint64_t v3 = *(std::__shared_weak_count **)(a2 + 8);
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
    MEMORY[0x22A614FA0](a2, 0x20C40769AC3DALL);
  }
}

void OUTLINED_FUNCTION_3_1()
{
  JUMPOUT(0x22A614FA0);
}

uint64_t OUTLINED_FUNCTION_9_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return file_logger::operator<<<std::string>(v9, (uint64_t)&a9);
}

void OUTLINED_FUNCTION_10_1()
{
  __cxa_free_exception(v0);
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  return std::stringbuf::str();
}

uint64_t turi::gl_sframe::get_proxy@<X0>(uint64_t this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(this + 16);
  *a2 = *(void *)(this + 8);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

void turi::aggregate::SUM(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__sum__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF2E68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::ARGMAX(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  *((void *)&v15 + 1) = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__argmax__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v13, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v13 = *(std::string *)a1;
  }
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v14 = *(std::string *)a2;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  long long v11 = &v7;
  char v12 = 0;
  uint64_t v7 = (std::string *)operator new(0x30uLL);
  uint64_t v8 = v7;
  char v9 = (long long *)&v7[2];
  uint64_t v8 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v9, (long long *)&v13, &v15, v7);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a3, &__p, (long long **)&v7);
  long long v11 = &v7;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v11);
  for (uint64_t i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v14.__r_.__value_.__r.__words[i + 2]) < 0) {
      operator delete(*(void **)((char *)&v13 + i * 8 + 24));
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF302C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::ARGMIN(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  *((void *)&v15 + 1) = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__argmin__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v13, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v13 = *(std::string *)a1;
  }
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v14 = *(std::string *)a2;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  long long v11 = &v7;
  char v12 = 0;
  uint64_t v7 = (std::string *)operator new(0x30uLL);
  uint64_t v8 = v7;
  char v9 = (long long *)&v7[2];
  uint64_t v8 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v9, (long long *)&v13, &v15, v7);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a3, &__p, (long long **)&v7);
  long long v11 = &v7;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v11);
  for (uint64_t i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v14.__r_.__value_.__r.__words[i + 2]) < 0) {
      operator delete(*(void **)((char *)&v13 + i * 8 + 24));
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF3220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::MAX(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__max__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF33CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::MIN(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__min__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF3548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::COUNT(std::string *a1@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__count__");
  memset(v3, 0, sizeof(v3));
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a1, &__p, v3);
  uint64_t v5 = v3;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF3614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  *(void *)(v19 - 24) = v18;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v19 - 24));
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void turi::aggregate::AVG(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__avg__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF375C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::VAR(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__var__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF38D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::STD(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__stdv__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF3A54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::STDV(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__stdv__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF3BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::SELECT_ONE(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__select_one__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF3D4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::CONCAT(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__concat__list__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF3EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::CONCAT(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  *((void *)&v15 + 1) = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__concat__dict__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v13, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v13 = *(std::string *)a1;
  }
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v14 = *(std::string *)a2;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  long long v11 = &v7;
  char v12 = 0;
  uint64_t v7 = (std::string *)operator new(0x30uLL);
  uint64_t v8 = v7;
  char v9 = (long long *)&v7[2];
  uint64_t v8 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v9, (long long *)&v13, &v15, v7);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a3, &__p, (long long **)&v7);
  long long v11 = &v7;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v11);
  for (uint64_t i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v14.__r_.__value_.__r.__words[i + 2]) < 0) {
      operator delete(*(void **)((char *)&v13 + i * 8 + 24));
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF408C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::COUNT_DISTINCT(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(void *)&long long v11 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__count__distinct__");
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v10 = *(std::string *)a1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = &v4;
  char v9 = 0;
  uint64_t v4 = (std::string *)operator new(0x18uLL);
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 1;
  uint64_t v5 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v6, (long long *)&v10, &v11, v4);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a2, &__p, (long long **)&v4);
  uint64_t v8 = &v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF4238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::aggregate::QUANTILE(uint64_t a1@<X0>, std::string *a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = (double *)operator new(8uLL);
  double *v6 = a3;
  v7[1] = (uint64_t)(v6 + 1);
  void v7[2] = (uint64_t)(v6 + 1);
  v7[0] = (uint64_t)v6;
  turi::aggregate::QUANTILE(a1, v7, a2);
  operator delete(v6);
}

void sub_223EF4314(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void turi::aggregate::QUANTILE(uint64_t a1@<X0>, uint64_t *a2@<X1>, std::string *a3@<X8>)
{
  *(void *)&long long v25 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(&__p, "__builtin__quantile__[");
  uint64_t v6 = *a2;
  if (a2[1] != *a2)
  {
    unint64_t v7 = 0;
    do
    {
      std::to_string(&v20, *(double *)(v6 + 8 * v7));
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string v10 = std::string::insert(&v20, 0, (const std::string::value_type *)p_p, size);
      std::string::size_type v11 = v10->__r_.__value_.__r.__words[0];
      v24.__r_.__value_.__r.__words[0] = v10->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v24.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v10->__r_.__value_.__r.__words[1] + 7);
      char v12 = HIBYTE(v10->__r_.__value_.__r.__words[2]);
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      __p.__r_.__value_.__r.__words[0] = v11;
      __p.__r_.__value_.__l.__size_ = v24.__r_.__value_.__r.__words[0];
      *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v24.__r_.__value_.__r.__words + 7);
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = v12;
      if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v20.__r_.__value_.__l.__data_);
      }
      uint64_t v6 = *a2;
      unint64_t v13 = (a2[1] - *a2) >> 3;
      if (v7 < v13 - 1)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t v14 = __p.__r_.__value_.__l.__size_;
        }
        std::string::basic_string[abi:ne180100]((uint64_t)&v20, v14 + 1);
        if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          long long v15 = &v20;
        }
        else {
          long long v15 = (std::string *)v20.__r_.__value_.__r.__words[0];
        }
        if (v14)
        {
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v16 = &__p;
          }
          else {
            uint64_t v16 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          memmove(v15, v16, v14);
        }
        *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 44;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        std::string __p = v20;
        uint64_t v6 = *a2;
        unint64_t v13 = (a2[1] - *a2) >> 3;
      }
      ++v7;
    }
    while (v7 < v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v18 = &v20;
  std::string::basic_string[abi:ne180100]((uint64_t)&v20, v17 + 1);
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v18 = (std::string *)v20.__r_.__value_.__r.__words[0];
  }
  if (v17)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v19 = &__p;
    }
    else {
      uint64_t v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(v18, v19, v17);
  }
  *(_WORD *)((char *)&v18->__r_.__value_.__l.__data_ + v17) = 93;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string __p = v20;
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v24, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v24 = *(std::string *)a1;
  }
  memset(&v20, 0, sizeof(v20));
  uint64_t v22 = &v20;
  char v23 = 0;
  v20.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x18uLL);
  v20.__r_.__value_.__l.__size_ = v20.__r_.__value_.__r.__words[0];
  v20.__r_.__value_.__r.__words[2] = v20.__r_.__value_.__r.__words[0] + 24;
  v20.__r_.__value_.__l.__size_ = (std::string::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v20.__r_.__value_.__r.__words[2], (long long *)&v24, &v25, (std::string *)v20.__r_.__value_.__l.__data_);
  turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(a3, &__p, (long long **)&v20);
  uint64_t v22 = &v20;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v22);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF4634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *turi::aggregate::groupby_descriptor_type::groupby_descriptor_type(std::string *a1, std::string *a2, long long **a3)
{
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(a1, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  turi::get_builtin_group_aggregator(a2, a1[1].__r_.__value_.__r.__words);
  return a1;
}

void sub_223EF4710(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

turi::gl_sframe *turi::gl_sframe::gl_sframe(turi::gl_sframe *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D759E10;
  turi::gl_sframe::instantiate_new(this);
  return this;
}

void sub_223EF4770(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::instantiate_new(turi::gl_sframe *this)
{
  _ZNSt3__115allocate_sharedB8ne180100IN4turi12unity_sframeENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(&v4);
  long long v2 = v4;
  long long v4 = 0uLL;
  uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 2);
  *(_OWORD *)((char *)this + 8) = v2;
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    if (*((void *)&v4 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v4 + 1));
    }
  }
}

turi::gl_sframe *turi::gl_sframe::gl_sframe(turi::gl_sframe *this, const turi::gl_sframe *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D759E10;
  (*(void (**)(uint64_t *__return_ptr, const turi::gl_sframe *))(*(void *)a2 + 88))(&v12, a2);
  uint64_t v4 = v12;
  (*(void (**)(uint64_t *__return_ptr, const turi::gl_sframe *))(*(void *)a2 + 88))(&v9, a2);
  (*(void (**)(void *__return_ptr))(*(void *)v9 + 128))(v11);
  (*(void (**)(void **__return_ptr, uint64_t, void *))(*(void *)v4 + 184))(&lpsrc, v4, v11);
  uint64_t v5 = lpsrc;
  if (lpsrc
  {
    uint64_t v6 = v15;
    if (v15) {
      atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  unint64_t v7 = (std::__shared_weak_count *)*((void *)this + 2);
  *((void *)this + 1) = v5;
  *((void *)this + 2) = v6;
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  uint64_t v16 = (void **)v11;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v16);
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  return this;
}

void sub_223EF49A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  *(void *)(v17 - 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v16;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v17 - 40));
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a15);
  }
  uint64_t v19 = *(std::__shared_weak_count **)(v15 + 16);
  if (v19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v19);
  }
  _Unwind_Resume(a1);
}

void *turi::gl_sframe::gl_sframe(void *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D759E10;
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 88))(&v6, a2);
  long long v3 = v6;
  long long v6 = 0uLL;
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  *(_OWORD *)(a1 + 1) = v3;
  if (v4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    if (*((void *)&v6 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  return a1;
}

{
  void *v3;
  uint64_t v5;
  std::__shared_weak_count *v6;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D759E10;
  long long v3 = *(void **)a2;
  if (*(void *)a2
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    long long v6 = (std::__shared_weak_count *)a1[2];
    a1[1] = v3;
    a1[2] = v5;
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
  }
  else
  {
    a1[1] = v3;
    a1[2] = 0;
  }
  return a1;
}

void sub_223EF4A9C(_Unwind_Exception *exception_object)
{
  long long v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *turi::gl_sframe::gl_sframe(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)&unk_26D759E10;
  a1[1] = 0;
  uint64_t v4 = a1 + 1;
  a1[2] = 0;
  turi::gl_sframe::instantiate_new((turi::gl_sframe *)a1);
  uint64_t v5 = *v4;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  (*(void (**)(uint64_t, std::string *))(*(void *)v5 + 40))(v5, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223EF4B84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  uint64_t v16 = *(std::__shared_weak_count **)(v14 + 16);
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::construct_from_csvs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v47[4] = *(void **)MEMORY[0x263EF8340];
  if (!*(void *)(a4 + 16))
  {
    turi::gl_sframe::gl_sframe((turi::gl_sframe *)v40);
    std::map<std::string,turi::flexible_type>::map[abi:ne180100]((uint64_t *)v39, a3);
    std::string::basic_string[abi:ne180100]<0>(v42, "row_limit");
    v47[0] = v42;
    unint64_t v7 = std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v39, (const void **)v42, (uint64_t)&std::piecewise_construct, (_OWORD **)v47);
    uint64_t v8 = v7;
    switch(*((unsigned char *)v7 + 68))
    {
      case 2:
        if (atomic_fetch_add(*((atomic_ullong *volatile *)v7 + 7), 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v9 = *((void *)v7 + 7);
          if (!v9) {
            goto LABEL_28;
          }
          if (*(char *)(v9 + 31) < 0) {
            operator delete(*(void **)(v9 + 8));
          }
          std::string v10 = (void *)v9;
          uint64_t v11 = 0x1012C404EF22A49;
          goto LABEL_27;
        }
        break;
      case 3:
        if (atomic_fetch_add(*((atomic_ullong *volatile *)v7 + 7), 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v12 = (void *)*((void *)v7 + 7);
          if (!v12) {
            goto LABEL_28;
          }
          unint64_t v13 = (void *)v12[1];
          if (v13)
          {
            v12[2] = v13;
            operator delete(v13);
          }
          std::string v10 = v12;
          uint64_t v11 = 0x1080C409938AC02;
          goto LABEL_27;
        }
        break;
      case 4:
        if (atomic_fetch_add(*((atomic_ullong *volatile *)v7 + 7), 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v14 = (void *)*((void *)v7 + 7);
          if (!v14) {
            goto LABEL_28;
          }
          v47[0] = v14 + 1;
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)v47);
          goto LABEL_19;
        }
        break;
      case 5:
        if (atomic_fetch_add(*((atomic_ullong *volatile *)v7 + 7), 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v14 = (void *)*((void *)v7 + 7);
          if (!v14) {
            goto LABEL_28;
          }
          v47[0] = v14 + 1;
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)v47);
LABEL_19:
          std::string v10 = v14;
          uint64_t v11 = 0x1020C405E66F15BLL;
          goto LABEL_27;
        }
        break;
      case 8:
        if (atomic_fetch_add(*((atomic_ullong *volatile *)v7 + 7), 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v15 = *((void *)v7 + 7);
          if (!v15) {
            goto LABEL_28;
          }
          boost::detail::shared_count::~shared_count((atomic_uint **)(v15 + 16));
          std::string v10 = (void *)v15;
          unsigned int v16 = -235920773;
          goto LABEL_26;
        }
        break;
      case 9:
        if (atomic_fetch_add(*((atomic_ullong *volatile *)v7 + 7), 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v17 = (void *)*((void *)v7 + 7);
          if (v17)
          {
            std::string v10 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v17);
            unsigned int v16 = 2071181815;
LABEL_26:
            uint64_t v11 = v16 | 0x1030C4000000000;
LABEL_27:
            MEMORY[0x22A614FA0](v10, v11);
          }
LABEL_28:
          *((void *)v8 + 7) = 0;
        }
        break;
      default:
        break;
    }
    *((_DWORD *)v8 + 16) = 0;
    *((unsigned char *)v8 + 68) = 0;
    *((void *)v8 + 7) = 100;
    if (v43 < 0) {
      operator delete(v42[0]);
    }
    std::string::basic_string[abi:ne180100]<0>(v42, "__all_columns__");
    char v44 = 7;
    std::map<std::string,turi::flex_type_enum>::map[abi:ne180100]((uint64_t)v38, (const void **)v42, 1);
    if (v43 < 0) {
      operator delete(v42[0]);
    }
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v37, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string v37 = *(std::string *)a2;
    }
    std::map<std::string,turi::flexible_type>::map[abi:ne180100](v36, (uint64_t)v39);
    std::map<std::string,turi::flex_type_enum>::map[abi:ne180100](v35, v38);
    turi::gl_sframe::construct_from_csvs(v40, &v37, v36, v35);
    std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)v35, (char *)v35[1]);
    std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)v36, (void *)v36[1]);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    turi::gl_sframe::column_names((turi::gl_sframe *)v40);
    uint64_t v18 = v33;
    for (i = v34; v18 != i; uint64_t v18 = (long long *)((char *)v18 + 24))
    {
      turi::gl_sframe::operator[]((uint64_t)v40, (uint64_t)v18, (turi::gl_sarray *)v42);
      turi::gl_sarray::range_iterator((turi::gl_sarray *)v42, 0, 0xFFFFFFFFFFFFFFFFLL, v47);
      v42[0] = (long long *)&unk_26D759E80;
      if (v46 < 0) {
        operator delete(v45);
      }
      turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v42);
      uint64_t v30 = 0;
      unint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v20 = turi::gl_sarray_range::begin((turi::gl_sarray_range *)v47);
      uint64_t v22 = v21;
      uint64_t v23 = turi::gl_sarray_range::end((turi::gl_sarray_range *)v47);
      std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<turi::gl_sarray_range::iterator,turi::gl_sarray_range::iterator,std::insert_iterator<std::vector<turi::flexible_type>>>(v20, v22, v23, &v30, v31, (uint64_t)v42);
      LOBYTE(v2std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = turi::infer_type_of_list(&v30);
      v42[0] = v18;
      *((unsigned char *)std::__tree<std::__value_type<std::string,turi::flex_type_enum>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flex_type_enum>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flex_type_enum>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)a4, (const void **)v18, (uint64_t)&std::piecewise_construct, v42)+ 56) = v20;
      v42[0] = (long long *)&v30;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)v42);
      turi::gl_sarray_range::~gl_sarray_range((turi::gl_sarray_range *)v47);
    }
    v42[0] = (long long *)&v33;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v42);
    std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)v38, (char *)v38[1]);
    std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)v39, v39[1]);
    v40[0] = &unk_26D759E10;
    if (v41) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v41);
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v28, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v28 = *(std::string *)a2;
  }
  std::map<std::string,turi::flexible_type>::map[abi:ne180100](v27, a3);
  std::map<std::string,turi::flex_type_enum>::map[abi:ne180100](v26, (const void ***)a4);
  (*(void (**)(void *__return_ptr, uint64_t, std::string *, uint64_t *, uint64_t *))(*(void *)v24 + 48))(v29, v24, &v28, v27, v26);
  std::__tree<std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>>>::destroy((uint64_t)v29, (void *)v29[1]);
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)v26, (char *)v26[1]);
  std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)v27, (void *)v27[1]);
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
}

void sub_223EF510C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44,char a45,char *a46,uint64_t a47,char a48,void *a49)
{
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)&a45, a46);
  std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)&a48, a49);
  *(void *)(v49 - 24std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = &unk_26D759E10;
  unint64_t v51 = *(std::__shared_weak_count **)(v49 - 224);
  if (v51) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v51);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sframe::column_names(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 128))(v1);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223EF5308(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::operator[](uint64_t a1@<X0>, uint64_t a2@<X1>, turi::gl_sarray *a3@<X8>)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  turi::gl_sarray_reference::gl_sarray_reference(a3, a1, (long long *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

{
  std::string __p;

  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  turi::const_gl_sarray_reference::const_gl_sarray_reference(a3, a1, (long long *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_223EF5398(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::dataframe_t::~dataframe_t(turi::dataframe_t *this)
{
  std::__tree<std::__value_type<std::string,std::vector<turi::flexible_type>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<turi::flexible_type>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<turi::flexible_type>>>>::destroy((uint64_t)this + 48, *((void **)this + 7));
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)this + 24, *((char **)this + 4));
  long long v2 = (void **)this;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
}

uint64_t turi::gl_sframe::operator=(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a2 + 88))(&v12, a2);
  uint64_t v4 = v12;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a2 + 88))(&v9, a2);
  (*(void (**)(void *__return_ptr))(*(void *)v9 + 128))(v11);
  (*(void (**)(void **__return_ptr, uint64_t, void *))(*(void *)v4 + 184))(&lpsrc, v4, v11);
  uint64_t v5 = lpsrc;
  if (lpsrc
  {
    long long v6 = v15;
    if (v15) {
      atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  else
  {
    long long v6 = 0;
  }
  unint64_t v7 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  unsigned int v16 = (void **)v11;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v16);
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  return a1;
}

{
  long long v3;
  std::__shared_weak_count *v4;
  long long v6;

  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 88))(&v6, a2);
  long long v3 = v6;
  long long v6 = 0uLL;
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = v3;
  if (v4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    if (*((void *)&v6 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  return a1;
}

void sub_223EF55A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  *(void *)(v16 - 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v16 - 40));
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a15);
  }
  _Unwind_Resume(a1);
}

turi::gl_sframe *turi::gl_sframe::gl_sframe(turi::gl_sframe *this, long long *a2, uint64_t a3)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D759E10;
  v29[0] = 0;
  v29[1] = 0;
  std::string v28 = (uint64_t *)v29;
  if (a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = &a2[4 * a3];
    do
    {
      v26[0] = v4;
      long long v6 = std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(&v28, (const void **)v4, (uint64_t)&std::piecewise_construct, v26);
      uint64_t v7 = (uint64_t)v4 + 24;
      turi::gl_sarray::operator=((uint64_t)(v6 + 7), v7);
      uint64_t v4 = (long long *)(v7 + 40);
    }
    while (v4 != v5);
  }
  turi::gl_sframe::instantiate_new(this);
  v26[0] = (long long *)v26;
  v26[1] = (long long *)v26;
  uint64_t v27 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  unint64_t v25 = 0;
  uint64_t v8 = v28;
  if (v28 != (uint64_t *)v29)
  {
    do
    {
      uint64_t v9 = (long long *)(v8 + 4);
      std::string v10 = v24;
      if ((unint64_t)v24 >= v25)
      {
        uint64_t v12 = (long long *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v23, v9);
      }
      else
      {
        if (*((char *)v8 + 55) < 0)
        {
          std::string::__init_copy_ctor_external(v24, (const std::string::value_type *)v8[4], v8[5]);
        }
        else
        {
          long long v11 = *v9;
          v24->__r_.__value_.__r.__words[2] = v8[6];
          *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v11;
        }
        uint64_t v12 = (long long *)&v10[1];
      }
      uint64_t v24 = (std::string *)v12;
      turi::gl_sarray::operator std::shared_ptr<turi::unity_sarray_base>((uint64_t)(v8 + 7), &v22);
      unint64_t v13 = operator new(0x20uLL);
      v13[1] = v22;
      uint64_t v14 = v26[0];
      *(long long **)unint64_t v13 = v26[0];
      *((void *)v13 + 1) = v26;
      *((void *)v14 + 1) = v13;
      v26[0] = v13;
      ++v27;
      uint64_t v15 = (uint64_t *)v8[1];
      if (v15)
      {
        do
        {
          uint64_t v16 = v15;
          uint64_t v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          uint64_t v16 = (uint64_t *)v8[2];
          BOOL v17 = *v16 == (void)v8;
          uint64_t v8 = v16;
        }
        while (!v17);
      }
      uint64_t v8 = v16;
    }
    while (v16 != (uint64_t *)v29);
  }
  (*(void (**)(long long *__return_ptr, turi::gl_sframe *))(*(void *)this + 88))(&v22, this);
  uint64_t v18 = v22;
  std::list<std::shared_ptr<turi::unity_sarray_base>>::list(v21, (uint64_t)v26);
  memset(&v20, 0, sizeof(v20));
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(&v20, v23, (long long *)v24, 0xAAAAAAAAAAAAAAABLL * (((char *)v24 - (char *)v23) >> 3));
  (*(void (**)(uint64_t, uint64_t *, std::string *))(*(void *)v18 + 208))(v18, v21, &v20);
  uint64_t v30 = &v20;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v30);
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear(v21);
  if (*((void *)&v22 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v22 + 1));
  }
  *(void *)&long long v22 = &v23;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v22);
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear((uint64_t *)v26);
  std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::destroy((uint64_t)&v28, v29[0]);
  return this;
}

void sub_223EF58DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va3, a4);
  va_start(va2, a4);
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  va_copy(va2, va1);
  unint64_t v13 = va_arg(va2, void **);
  uint64_t v15 = va_arg(va2, std::__shared_weak_count *);
  va_copy(va3, va2);
  uint64_t v16 = va_arg(va3, void);
  uint64_t v18 = va_arg(va3, void);
  uint64_t v19 = va_arg(va3, void);
  *(void *)(v6 - 56) = v5;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v6 - 56));
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear((uint64_t *)va);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  va_copy((va_list)v13, va2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va1);
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear((uint64_t *)va3);
  std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::destroy(v6 - 80, *(void **)(v6 - 72));
  uint64_t v8 = *(std::__shared_weak_count **)(v4 + 16);
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  _Unwind_Resume(a1);
}

void *turi::gl_sframe::gl_sframe(void *a1, uint64_t *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D759E10;
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (v3)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
    uint64_t v5 = (std::__shared_weak_count *)a1[2];
    a1[1] = v4;
    a1[2] = v3;
    if (v5) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v5);
    }
  }
  else
  {
    a1[1] = v4;
    a1[2] = 0;
  }
  return a1;
}

void turi::gl_sframe::gl_sframe(turi::gl_sframe *this, const turi::sframe *a2)
{
  *(void *)this = &unk_26D759E10;
  operator new();
}

void sub_223EF5B38(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sframe::operator std::shared_ptr<turi::unity_sframe>(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 88))();
}

double turi::gl_sframe::operator std::shared_ptr<turi::unity_sframe_base>@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  (*(void (**)(long long *__return_ptr))(*(void *)a1 + 88))(&v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

void turi::gl_sframe::materialize_to_sframe(turi::gl_sframe *this@<X0>, turi::sframe *a2@<X8>)
{
  (*(void (**)(turi::unity_sframe **__return_ptr))(*(void *)this + 88))(&v3);
  turi::unity_sframe::get_underlying_sframe(v3, &v5);
  turi::sframe::sframe(a2, v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223EF5C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::get_sframe_reader(turi::gl_sframe *this)
{
  (*(void (**)(turi::unity_sframe **__return_ptr))(*(void *)this + 88))(&v1);
  turi::unity_sframe::get_underlying_sframe(v1, &v2);
  turi::sframe::get_reader(v2);
}

void sub_223EF5D68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, std::__shared_weak_count *a13)
{
  uint64_t v15 = *(void *)(v13 - 24);
  *(void *)(v13 - 24) = 0;
  if (v15) {
    turi::gl_sframe::get_sframe_reader(v15);
  }
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::operator[](turi::gl_sframe *a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0 && (**(uint64_t (***)(turi::gl_sframe *))a1)(a1) > a2)
  {
    std::vector<std::vector<turi::flexible_type>>::vector(&v4, 1uLL);
    turi::gl_sframe::get_sframe_reader(a1);
  }
  exception = __cxa_allocate_exception(0x18uLL);
  std::string::basic_string[abi:ne180100]<0>(exception, "Index out of range");
}

void sub_223EF5F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  a10 = (void **)&a12;
  std::vector<std::vector<turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::operator[](long long)const::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", 96);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  long long v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"rows.size() > 0", 15);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", "operator()", 281, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::gl_sframe::operator[](long long)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EF6050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::operator[](long long)const::$_1::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", 96);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  long long v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"rows_read", 9);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"1", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  char v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  std::string v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", "operator()", 282, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::gl_sframe::operator[](long long)::$_1::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EF62E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::operator[](uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(const void **)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  std::string __dst = 0;
  uint64_t v20 = 0;
  std::string __p = 0;
  if (v5)
  {
    std::vector<unsigned long>::__vallocate[abi:ne180100](&__p, v5);
    char v7 = (char *)__dst;
    memmove(__dst, v6, 8 * v5);
    uint64_t v8 = &v7[8 * v5];
    std::string __dst = v8;
    uint64_t v9 = (char *)__p;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v10 = (v8 - v9) >> 3;
  if (v10 == 2)
  {
    uint64_t v11 = 1;
  }
  else
  {
    if (v10 != 3)
    {
      exception = __cxa_allocate_exception(0x18uLL);
      std::string::basic_string[abi:ne180100]<0>(exception, "Invalid slice. Slice must be of the form {start, end} or {start, step, end}");
    }
    uint64_t v11 = 2;
  }
  uint64_t v12 = *(void *)&v9[8 * v11];
  if ((*(void *)v9 & 0x8000000000000000) == 0)
  {
    if ((v12 & 0x8000000000000000) == 0) {
      goto LABEL_13;
    }
LABEL_12:
    (**(uint64_t (***)(uint64_t))a1)(a1);
    goto LABEL_13;
  }
  (**(uint64_t (***)(uint64_t))a1)(a1);
  if (v12 < 0) {
    goto LABEL_12;
  }
LABEL_13:
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 88))(&v14, a1);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v14 + 368))(&v16);
  turi::gl_sframe::gl_sframe(a3, (uint64_t)&v16);
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (__p)
  {
    std::string __dst = __p;
    operator delete(__p);
  }
}

{
  uint64_t v5;
  double v6;
  long long v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v8);
  unint64_t v5 = v8;
  uint64_t v6 = turi::gl_sarray::operator std::shared_ptr<turi::unity_sarray_base>(a2, &v7);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, long long *, double))(*(void *)v5 + 176))(&v10, v5, &v7, v6);
  turi::gl_sframe::gl_sframe(a3, (uint64_t)&v10);
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  if (*((void *)&v7 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v7 + 1));
  }
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
}

void sub_223EF65E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  __cxa_free_exception(v15);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_223EF66A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::select_columns(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 184))(&v5);
  turi::gl_sframe::gl_sframe(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223EF676C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_223EF6850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::materialize_to_callback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v16[4] = *MEMORY[0x263EF8340];
  if (a3 == -1) {
    uint64_t v4 = turi::SFRAME_DEFAULT_NUM_SEGMENTS;
  }
  else {
    uint64_t v4 = a3;
  }
  (*(void (**)(turi::unity_sarray **__return_ptr))(*(void *)a1 + 88))(&v5);
  turi::unity_sarray::get_planner_node((uint64_t)v5, &v7);
  std::__function::__value_func<BOOL ()(unsigned long,std::shared_ptr<turi::sframe_rows> const&)>::__value_func[abi:ne180100]((uint64_t)v16, a2);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  *(_OWORD *)std::string __p = 0u;
  memset(v11, 0, sizeof(v11));
  BYTE11(v12) = 1;
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  *((void *)&v14 + 1) = 0;
  long long v15 = 0uLL;
  turi::query_eval::planner::materialize((uint64_t)&v9, &v7, (uint64_t)v16, v4, (uint64_t *)v11);
  uint64_t v10 = (void **)&v14 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v10);
  if (SBYTE7(v14) < 0) {
    operator delete(__p[0]);
  }
  std::__function::__value_func<BOOL ()(unsigned long,std::shared_ptr<turi::sframe_rows> const&)>::~__value_func[abi:ne180100]((void *)v11 + 1);
  std::__function::__value_func<BOOL ()(unsigned long,std::shared_ptr<turi::sframe_rows> const&)>::~__value_func[abi:ne180100](v16);
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
}

void sub_223EF69BC(_Unwind_Exception *a1, uint64_t a2, std::__shared_weak_count *a3, uint64_t a4, std::__shared_weak_count *a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  turi::query_eval::materialize_options::~materialize_options((void **)va);
  std::__function::__value_func<BOOL ()(unsigned long,std::shared_ptr<turi::sframe_rows> const&)>::~__value_func[abi:ne180100]((void *)(v7 - 56));
  if (a5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a5);
  }
  if (a3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a3);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sframe::range_iterator(turi::gl_sframe *this, unint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3;
  if (a3 == -1)
  {
    (*(void (**)(uint64_t *__return_ptr, turi::gl_sframe *))(*(void *)this + 88))(&v10, this);
    unint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 64))(v10);
    if (v11) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v11);
    }
  }
  if (v3 < a2)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "start must be less than end");
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, turi::gl_sframe *))(*(void *)this + 88))(&v10, this);
    if ((*(uint64_t (**)(uint64_t))(*(void *)v10 + 64))(v10) <= a2)
    {
      BOOL v6 = (v3 | a2) != 0;
    }
    else
    {
      (*(void (**)(uint64_t *__return_ptr, turi::gl_sframe *))(*(void *)this + 88))(&v8, this);
      BOOL v6 = v3 > (*(uint64_t (**)(uint64_t))(*(void *)v8 + 64))(v8);
      if (v9) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
    }
    if (v11) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v11);
    }
    if (!v6) {
      turi::gl_sframe::get_sframe_reader(this);
    }
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Index out of range");
  }
}

void sub_223EF6C34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sframe::size(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 64))(v3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223EF6D14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL turi::gl_sframe::empty(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 64))(v3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1 == 0;
}

void sub_223EF6DB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sframe::is_materialized(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 304))();
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223EF6E6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sframe::has_size(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 312))();
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223EF6F20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::materialize(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v1);
  (*(void (**)(void))(*(void *)v1 + 296))();
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223EF6FCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::save(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v50, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v50 = *(std::string *)a2;
  }
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v49, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string v49 = *(std::string *)a3;
  }
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v49.__r_.__value_.__l.__size_) {
      goto LABEL_29;
    }
  }
  else
  {
    int v5 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    if (*((unsigned char *)&v49.__r_.__value_.__s + 23)) {
      goto LABEL_30;
    }
  }
  uint64_t v6 = 0;
  uint64_t v7 = &v50;
  if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v7 = (std::string *)v50.__r_.__value_.__r.__words[0];
  }
  std::string::size_type size = HIBYTE(v50.__r_.__value_.__r.__words[2]);
  if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v50.__r_.__value_.__l.__size_;
  }
  while (-(uint64_t)size != v6 && v6 != -4)
  {
    int v9 = v7->__r_.__value_.__s.__data_[size - 1 + v6];
    int v10 = aCsv[v6-- + 3];
    if (v9 != v10) {
      goto LABEL_20;
    }
  }
  if (v6 == -4) {
    goto LABEL_27;
  }
LABEL_20:
  uint64_t v11 = 0;
  uint64_t v12 = (uint64_t)v7 + size - 1;
  uint64_t v13 = -(uint64_t)size;
  long long v14 = "binary";
  while (v13 != v11 && v11 != -7)
  {
    int v15 = *(unsigned __int8 *)(v12 + v11);
    int v16 = aCsvGz[v11-- + 6];
    if (v15 != v16) {
      goto LABEL_28;
    }
  }
  if (v11 != -7)
  {
    long long v14 = "binary";
    goto LABEL_28;
  }
LABEL_27:
  long long v14 = "csv";
LABEL_28:
  MEMORY[0x22A614700](&v49, v14);
LABEL_29:
  int v5 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type v19 = v49.__r_.__value_.__l.__size_;
    if (v49.__r_.__value_.__l.__size_ != 3)
    {
LABEL_42:
      if (v19 != 6) {
        goto LABEL_107;
      }
      BOOL v17 = (std::string *)v49.__r_.__value_.__r.__words[0];
      goto LABEL_44;
    }
    int v18 = 1;
    BOOL v17 = (std::string *)v49.__r_.__value_.__r.__words[0];
LABEL_36:
    int data_low = LOWORD(v17->__r_.__value_.__l.__data_);
    int v21 = v17->__r_.__value_.__s.__data_[2];
    if (data_low == 29539 && v21 == 118)
    {
      uint64_t v33 = 0;
      long long v34 = &v50;
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        size_t v35 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
      }
      else
      {
        size_t v35 = v50.__r_.__value_.__l.__size_;
        long long v34 = (std::string *)v50.__r_.__value_.__r.__words[0];
      }
      while (v35 + v33 && v33 != -4)
      {
        int v36 = v34->__r_.__value_.__s.__data_[v35 - 1 + v33];
        int v37 = aCsv[v33-- + 3];
        if (v36 != v37) {
          goto LABEL_81;
        }
      }
      if (v33 == -4) {
        goto LABEL_49;
      }
LABEL_81:
      uint64_t v38 = 0;
      uint64_t v39 = (uint64_t)v34 + v35 - 1;
      while (v35 + v38 && v38 != -7)
      {
        int v40 = *(unsigned __int8 *)(v39 + v38);
        int v41 = aCsvGz[v38-- + 6];
        if (v40 != v41) {
          goto LABEL_87;
        }
      }
      if (v38 == -7) {
        goto LABEL_49;
      }
LABEL_87:
      std::string v42 = &v48;
      std::string::basic_string[abi:ne180100]((uint64_t)&v48, v35 + 4);
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string v42 = (std::string *)v48.__r_.__value_.__r.__words[0];
      }
      if (v35)
      {
        if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          char v43 = &v50;
        }
        else {
          char v43 = (std::string *)v50.__r_.__value_.__r.__words[0];
        }
        memmove(v42, v43, v35);
      }
      strcpy((char *)v42 + v35, ".csv");
      if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v50.__r_.__value_.__l.__data_);
      }
      std::string v50 = v48;
      int v5 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
      goto LABEL_49;
    }
    if (!v18) {
      goto LABEL_107;
    }
    std::string::size_type v19 = v49.__r_.__value_.__l.__size_;
    goto LABEL_42;
  }
LABEL_30:
  BOOL v17 = &v49;
  if (v5 == 3)
  {
    int v18 = 0;
    goto LABEL_36;
  }
  if (v5 != 6) {
    goto LABEL_107;
  }
LABEL_44:
  int data = (int)v17->__r_.__value_.__l.__data_;
  int v24 = WORD2(v17->__r_.__value_.__r.__words[0]);
  if (data != 1634625890 || v24 != 31090)
  {
LABEL_107:
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Invalid format. Supported formats are 'csv' and 'binary'");
  }
LABEL_49:
  if ((v5 & 0x80) != 0)
  {
    if (v49.__r_.__value_.__l.__size_ != 3
      || (*(_WORD *)v49.__r_.__value_.__l.__data_ == 29539
        ? (BOOL v27 = *(unsigned char *)(v49.__r_.__value_.__r.__words[0] + 2) == 118)
        : (BOOL v27 = 0),
          !v27))
    {
      if (v49.__r_.__value_.__l.__size_ != 6) {
        goto LABEL_102;
      }
      std::string::size_type v26 = (std::string *)v49.__r_.__value_.__r.__words[0];
      goto LABEL_60;
    }
  }
  else
  {
    if (v5 != 3)
    {
      if (v5 != 6) {
        goto LABEL_102;
      }
      std::string::size_type v26 = &v49;
LABEL_60:
      int v28 = (int)v26->__r_.__value_.__l.__data_;
      int v29 = WORD2(v26->__r_.__value_.__r.__words[0]);
      if (v28 != 1634625890 || v29 != 31090) {
        goto LABEL_102;
      }
      (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 88))(&v48, a1);
      std::string::size_type v31 = v48.__r_.__value_.__r.__words[0];
      if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&__p, v50.__r_.__value_.__l.__data_, v50.__r_.__value_.__l.__size_);
      }
      else {
        std::string __p = v50;
      }
      (*(void (**)(std::string::size_type, std::string *))(*(void *)v31 + 96))(v31, &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      goto LABEL_100;
    }
    if (LOWORD(v49.__r_.__value_.__l.__data_) != 29539 || v49.__r_.__value_.__s.__data_[2] != 118) {
      goto LABEL_102;
    }
  }
  (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 88))(&v48, a1);
  v47[0] = 0;
  v47[1] = 0;
  char v46 = v47;
  (*(void (**)(std::string::size_type, std::string *, void ***))(*(void *)v48.__r_.__value_.__l.__data_
                                                                            + 256))(v48.__r_.__value_.__r.__words[0], &v50, &v46);
  std::__tree<std::__value_type<std::string,turi::flexible_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::flexible_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::flexible_type>>>::destroy((uint64_t)&v46, v47[0]);
LABEL_100:
  if (v48.__r_.__value_.__l.__size_) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v48.__r_.__value_.__l.__size_);
  }
LABEL_102:
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50.__r_.__value_.__l.__data_);
  }
}

void sub_223EF7528(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a20) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a20);
  }
  if (a27 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v27 - 41) < 0) {
    operator delete(*(void **)(v27 - 64));
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::column_types(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 120))(v1);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223EF7640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sframe::num_columns(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 112))(v3);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  return v1;
}

void sub_223EF76E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::head(turi::gl_sframe *this@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 144))(&v5);
  turi::gl_sframe::gl_sframe(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223EF77A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::tail(turi::gl_sframe *this@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 152))(&v5);
  turi::gl_sframe::gl_sframe(a2, (uint64_t)&v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223EF7860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::apply(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v8);
  uint64_t v5 = v8;
  uint64_t v6 = (turi::random *)std::__function::__value_func<turi::flexible_type ()(turi::sframe_rows::row const&)>::__value_func[abi:ne180100]((uint64_t)v9, a2);
  uint64_t v7 = turi::random::pure_random_seed(v6);
  turi::unity_sframe::transform_lambda(v5, (uint64_t)v9, a3, v7);
}

void sub_223EF795C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::__shared_weak_count *a4, uint64_t a5, std::__shared_weak_count *a6, ...)
{
  va_start(va, a6);
  if (a6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a6);
  }
  std::__function::__value_func<turi::flexible_type ()(turi::sframe_rows::row const&)>::~__value_func[abi:ne180100]((uint64_t *)va);
  if (a4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a4);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sframe::sample(turi::gl_sframe *this@<X0>, double a2@<D0>, void *a3@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v6);
  v5.n128_f32[0] = a2;
  (*(void (**)(uint64_t *__return_ptr, __n128))(*(void *)v6 + 264))(&v8, v5);
  turi::gl_sframe::gl_sframe(a3, (uint64_t)&v8);
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_223EF7A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::random_split(turi::gl_sframe *this@<X0>, double a2@<D0>, turi::gl_sframe *a3@<X8>)
{
  turi::random::pure_random_seed(this);
  turi::gl_sframe::random_split(this, a2, a3);
}

{
  __n128 v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  void v10[2];
  void v11[2];
  void *v12;
  std::__shared_weak_count *v13;
  std::__shared_weak_count *v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  (*(void (**)(void **__return_ptr))(*(void *)this + 88))(&v12);
  v5.n128_f32[0] = a2;
  (*(void (**)(uint64_t *__return_ptr, __n128))(*(void *)v12 + 272))(&v16, v5);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  std::pair<turi::gl_sframe,turi::gl_sframe>::pair[abi:ne180100]<true,0>(a3);
  uint64_t v12 = v18;
  if (v18 != (void *)2)
  {
    int v15 = &v12;
    turi::gl_sframe::random_split(double,unsigned long,BOOL)const::$_0::operator()();
  }
  uint64_t v6 = v17;
  uint64_t v7 = *(std::__shared_weak_count **)(v17 + 24);
  v11[0] = *(void *)(v17 + 16);
  v11[1] = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  turi::gl_sframe::gl_sframe(&v12, (uint64_t)v11);
  turi::gl_sframe::operator=((uint64_t)a3, (uint64_t)&v12);
  uint64_t v12 = &unk_26D759E10;
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  uint64_t v8 = *(void *)(v6 + 8);
  int v9 = *(std::__shared_weak_count **)(v8 + 24);
  v10[0] = *(void *)(v8 + 16);
  v10[1] = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  turi::gl_sframe::gl_sframe(&v12, (uint64_t)v10);
  turi::gl_sframe::operator=((uint64_t)a3 + 24, (uint64_t)&v12);
  uint64_t v12 = &unk_26D759E10;
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear(&v16);
}

void sub_223EF7CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::__shared_weak_count *a9, uint64_t a10, ...)
{
  va_start(va, a10);
  if (a9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a9);
  }
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  std::pair<turi::gl_sframe,turi::gl_sframe>::~pair(v10);
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear((uint64_t *)va);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::random_split(double,unsigned long,BOOL)const::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", 96);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  long long v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"list.size()", 11);
  __n128 v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"2", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  int v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", "operator()", 475, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::gl_sframe::random_split(double,unsigned long,BOOL)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EF7EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::topk(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, void *a4@<X8>)
{
  turi::gl_sframe::operator[](a1, a2, (turi::gl_sarray *)v8);
  turi::gl_sarray::topk_index((turi::gl_sarray *)v8, (uint64_t)v10);
  turi::gl_sframe::operator[](a1, (uint64_t)v10, v11);
  turi::gl_sframe::sort((uint64_t)v11, a2, a3, a4);
  v11[0] = &unk_26D759E10;
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v10);
  v8[0] = &unk_26D759EA8;
  if (v9 < 0) {
    operator delete((void *)v8[6]);
  }
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v8);
}

void sub_223EF80D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  __n128 v5 = va_arg(va1, void *);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  *(void *)(v2 - 72) = &unk_26D759E10;
  uint64_t v4 = *(std::__shared_weak_count **)(v2 - 56);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)va1);
  turi::const_gl_sarray_reference::~const_gl_sarray_reference((void **)va);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::sort(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  *(void *)&long long v20 = *MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v15);
  uint64_t v7 = v15;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v19, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v19 = *(std::string *)a2;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v12 = (std::string *)operator new(0x18uLL);
  uint64_t v13 = v12;
  uint64_t v14 = v12 + 1;
  uint64_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v14, (long long *)&v19, &v20, v12);
  uint64_t v8 = operator new(4uLL);
  std::string __p = v8;
  _DWORD *v8 = a3;
  uint64_t v10 = v8 + 1;
  uint64_t v11 = v8 + 1;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, std::string **, void **))(*(void *)v7 + 344))(&v17, v7, &v12, &__p);
  turi::gl_sframe::gl_sframe(a4, (uint64_t)&v17);
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  if (__p)
  {
    uint64_t v10 = __p;
    operator delete(__p);
  }
  std::string __p = &v12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
}

void sub_223EF82D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sframe::column_index(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v5);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 136))(v5, a2);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  return v3;
}

void sub_223EF83DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::gl_sframe::column_name(turi::gl_sframe *this, unint64_t a2)
{
  (*(void (**)(turi::unity_sframe **__return_ptr))(*(void *)this + 88))(&v5);
  uint64_t v3 = turi::unity_sframe::column_name(v5, a2);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  return v3;
}

void sub_223EF8464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL turi::gl_sframe::contains_column(uint64_t a1, unsigned __int8 **a2)
{
  (*(void (**)(turi::unity_sframe **__return_ptr))(*(void *)a1 + 88))(&v5);
  BOOL v3 = turi::unity_sframe::contains_column(v5, a2);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  return v3;
}

void sub_223EF84EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::select_column(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v3);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 192))(&v5);
  turi::gl_sarray::gl_sarray(a2, &v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_223EF85AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::add_column(uint64_t a1, turi::gl_sarray *a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v11);
  uint64_t v6 = v11;
  uint64_t v7 = (const turi::flexible_type *)(**(uint64_t (***)(uint64_t))a1)(a1);
  turi::gl_sarray::from_const(a2, v7, (turi::gl_sarray *)v9);
  double v8 = turi::gl_sarray::operator std::shared_ptr<turi::unity_sarray_base>((uint64_t)v9, &v10);
  (*(void (**)(uint64_t, long long *, uint64_t, double))(*(void *)v6 + 200))(v6, &v10, a3, v8);
  if (*((void *)&v10 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v10 + 1));
  }
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v9);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
}

void sub_223EF86E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&a10);
  int v18 = *(std::__shared_weak_count **)(v16 - 40);
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sframe::add_column(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v8);
  uint64_t v5 = v8;
  double v6 = turi::gl_sarray::operator std::shared_ptr<turi::unity_sarray_base>(a2, &v7);
  (*(void (**)(uint64_t, long long *, uint64_t, double))(*(void *)v5 + 200))(v5, &v7, a3, v6);
  if (*((void *)&v7 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v7 + 1));
  }
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
}

void sub_223EF87D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::replace_add_column(uint64_t a1, uint64_t a2, const void **a3)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1))
  {
    (*(void (**)(const void ***__return_ptr, uint64_t))(*(void *)a1 + 24))(v14, a1);
    std::set<std::string>::set[abi:ne180100]<std::__wrap_iter<std::string*>>((uint64_t)v12, v14[0], v14[1]);
    uint64_t v6 = std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)v12, a3);
    uint64_t v7 = *(void *)a1;
    if (v6)
    {
      if ((*(uint64_t (**)(uint64_t))(v7 + 16))(a1) == 1)
      {
        turi::gl_sframe::operator[](a1, (uint64_t)a3, (turi::gl_sarray *)&v15);
        (*(void (**)(uint64_t, const void **))(*(void *)a1 + 64))(a1, a3);
        (*(void (**)(uint64_t, uint64_t, const void **))(*(void *)a1 + 48))(a1, a2, a3);
        v15.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D759E80;
        if (v19 < 0) {
          operator delete(v18);
        }
        turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v15);
      }
      else
      {
        std::operator+<char>();
        for (;
              std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)v12, (const void **)&__p.__r_.__value_.__l.__data_);
              std::string __p = v15)
        {
          std::operator+<char>();
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)a1 + 48))(a1, a2, &__p);
        (*(void (**)(uint64_t, std::string *, const void **))(*(void *)a1 + 72))(a1, &__p, a3);
        (*(void (**)(uint64_t, const void **))(*(void *)a1 + 64))(a1, a3);
        std::pair<std::string,std::string>::pair[abi:ne180100]<std::string&,std::string&,0>(&v15, (long long *)&__p, (long long *)a3);
        std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v9, (const void **)&v15.__r_.__value_.__l.__data_, 1);
        (*(void (**)(uint64_t, unsigned char *))(*(void *)a1 + 80))(a1, v9);
        std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v9, v10);
        if (v17 < 0) {
          operator delete(v16);
        }
        if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v15.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, const void **))(v7 + 48))(a1, a2, a3);
    }
    std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)v12, v13);
    v15.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v15);
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, const void **))(*(void *)a1 + 48);
    v8(a1, a2, a3);
  }
}

void sub_223EF8BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20,char *a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char *a26)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)&a20, a21);
  a26 = &a23;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a26);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::add_columns(turi::gl_sframe *this, const turi::gl_sframe *a2)
{
  v22[0] = (uint64_t)v22;
  v22[1] = (uint64_t)v22;
  uint64_t v23 = 0;
  char v19 = 0;
  uint64_t v20 = 0;
  unint64_t v21 = 0;
  (*(void (**)(std::string **__return_ptr, const turi::gl_sframe *))(*(void *)a2 + 24))(&v17, a2);
  p_int data = (void **)&v17->__r_.__value_.__l.__data_;
  uint64_t v5 = (void **)&v18->__r_.__value_.__l.__data_;
  if (v17 != v18)
  {
    do
    {
      uint64_t v6 = v20;
      if ((unint64_t)v20 >= v21)
      {
        uint64_t v8 = (long long *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v19, (long long *)p_data);
      }
      else
      {
        if (*((char *)p_data + 23) < 0)
        {
          std::string::__init_copy_ctor_external(v20, (const std::string::value_type *)*p_data, (std::string::size_type)p_data[1]);
        }
        else
        {
          long long v7 = *(_OWORD *)p_data;
          v20->__r_.__value_.__r.__words[2] = (std::string::size_type)p_data[2];
          *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
        }
        uint64_t v8 = (long long *)&v6[1];
      }
      uint64_t v20 = (std::string *)v8;
      turi::gl_sframe::select_column((uint64_t)a2, (uint64_t)&v14);
      turi::gl_sarray::operator std::shared_ptr<turi::unity_sarray_base>((uint64_t)&v14, &v16);
      uint64_t v9 = operator new(0x20uLL);
      v9[1] = v16;
      long long v16 = 0uLL;
      uint64_t v10 = v22[0];
      *(void *)uint64_t v9 = v22[0];
      *((void *)v9 + 1) = v22;
      *(void *)(v10 + 8) = v9;
      v22[0] = (uint64_t)v9;
      ++v23;
      turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v14);
      p_data += 3;
    }
    while (p_data != v5);
  }
  uint64_t v14 = (long long **)&v17;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v14);
  (*(void (**)(long long ***__return_ptr, turi::gl_sframe *))(*(void *)this + 88))(&v14, this);
  uint64_t v11 = (void **)v14;
  std::list<std::shared_ptr<turi::unity_sarray_base>>::list(v13, (uint64_t)v22);
  memset(&v12, 0, sizeof(v12));
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(&v12, v19, (long long *)v20, 0xAAAAAAAAAAAAAAABLL * (((char *)v20 - (char *)v19) >> 3));
  (*((void (**)(void **, uint64_t *, std::string *))*v11 + 26))(v11, v13, &v12);
  char v17 = &v12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v17);
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear(v13);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  uint64_t v14 = &v19;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v14);
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear(v22);
}

void sub_223EF8F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va2, a5);
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v11 = va_arg(va2, void **);
  uint64_t v13 = va_arg(va2, std::__shared_weak_count *);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  uint64_t v16 = va_arg(va2, void);
  uint64_t v17 = va_arg(va2, void);
  uint64_t v18 = va_arg(va2, void);
  uint64_t v19 = va_arg(va2, void);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va2);
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear((uint64_t *)va);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  uint64_t v11 = (void **)(v5 - 112);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va1);
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear((uint64_t *)(v5 - 88));
  _Unwind_Resume(a1);
}

void turi::gl_sframe::remove_column(uint64_t a1, unsigned __int8 **a2)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 24))(&v9);
  uint64_t v4 = std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>(v9, v10, a2);
  if (v4 == v10)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "No such column name");
  }
  uint64_t v5 = v4;
  (*(void (**)(void ***__return_ptr, uint64_t))(*(void *)a1 + 88))((void ***)&v7, a1);
  (*v7)[28]((void **)v7, 0xAAAAAAAAAAAAAAABLL * ((v5 - v9) >> 3));
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  uint64_t v7 = (void (***)(void **, unint64_t))&v9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v7);
}

void sub_223EF90F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  a10 = (void **)&a12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::swap_columns(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 24))(&v14);
  uint64_t v6 = std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>(v14, v15, a2);
  if (v6 == v15)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "No such column name");
  }
  uint64_t v7 = v6;
  uint64_t v8 = std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>(v14, v15, a3);
  if (v8 == v15)
  {
    uint64_t v11 = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(v11, "No such column name");
  }
  uint64_t v9 = v8;
  (*(void (**)(void (****__return_ptr)(void **, unint64_t, unint64_t), uint64_t))(*(void *)a1 + 88))(&v12, a1);
  (*v12)[29]((void **)v12, 0xAAAAAAAAAAAAAAABLL * ((v7 - v14) >> 3), 0xAAAAAAAAAAAAAAABLL * ((v9 - v14) >> 3));
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  std::string v12 = (void (***)(void **, unint64_t, unint64_t))&v14;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v12);
}

void sub_223EF92E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  a10 = (void **)&a12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::rename(uint64_t a1, void *a2)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 24))(&v18);
  uint64_t v6 = (unsigned __int8 **)*a2;
  uint64_t v4 = (unsigned __int8 **)(a2 + 1);
  uint64_t v5 = v6;
  if (v6 != v4)
  {
    do
    {
      uint64_t v7 = std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>(v18, v19, v5 + 4);
      if (v7 == v19)
      {
        exception = __cxa_allocate_exception(0x18uLL);
        std::string::basic_string[abi:ne180100]<0>(exception, "No such column name");
      }
      uint64_t v8 = v7;
      (*(void (**)(void ***__return_ptr, uint64_t))(*(void *)a1 + 88))(&v16, a1);
      uint64_t v9 = v16;
      uint64_t v10 = v18;
      if (*((char *)v5 + 79) < 0) {
        std::string::__init_copy_ctor_external(&__p, (const std::string::value_type *)v5[7], (std::string::size_type)v5[8]);
      }
      else {
        std::string __p = *(std::string *)(v5 + 7);
      }
      (*((void (**)(void **, unint64_t, std::string *))*v9 + 27))(v9, 0xAAAAAAAAAAAAAAABLL * ((v8 - v10) >> 3), &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v17) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v17);
      }
      uint64_t v11 = v5[1];
      if (v11)
      {
        do
        {
          std::string v12 = (unsigned __int8 **)v11;
          uint64_t v11 = *(unsigned __int8 **)v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          std::string v12 = (unsigned __int8 **)v5[2];
          BOOL v13 = *v12 == (unsigned __int8 *)v5;
          uint64_t v5 = v12;
        }
        while (!v13);
      }
      uint64_t v5 = v12;
    }
    while (v12 != v4);
  }
  uint64_t v16 = (void **)&v18;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v16);
}

void sub_223EF950C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char *a15, std::__shared_weak_count *a16, char a17)
{
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  a15 = &a17;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::append(turi::gl_sframe *this@<X0>, const turi::gl_sframe *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(turi::gl_sframe *))(*(void *)this + 16))(this);
  if (v6 != (*(uint64_t (**)(const turi::gl_sframe *))(*(void *)a2 + 16))(a2))
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Two SFrames have to have the same number of columns");
  }
  (*(void (**)(uint64_t *__return_ptr, turi::gl_sframe *))(*(void *)this + 88))(&v13, this);
  uint64_t v7 = v13;
  (*(void (**)(void *__return_ptr, turi::gl_sframe *))(*(void *)this + 24))(v9, this);
  turi::gl_sframe::select_columns((uint64_t)a2, v10);
  (*(void (**)(_OWORD *__return_ptr, void *))(v10[0] + 88))(v17, v10);
  long long v12 = v17[0];
  (*(void (**)(uint64_t *__return_ptr, uint64_t, long long *))(*(void *)v7 + 288))(&v15, v7, &v12);
  turi::gl_sframe::gl_sframe(a3, (uint64_t)&v15);
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  if (*((void *)&v12 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v12 + 1));
  }
  v10[0] = &unk_26D759E10;
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  *(void *)&v17[0] = v9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v17);
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
}

void sub_223EF9778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  __cxa_free_exception(v18);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::groupby(uint64_t a1, const void ***a2, void *a3)
{
  int v37 = 0;
  uint64_t v38 = 0;
  unint64_t v39 = 0;
  long long v34 = 0;
  size_t v35 = 0;
  unint64_t v36 = 0;
  memset(v33, 0, sizeof(v33));
  uint64_t v5 = a3 + 1;
  uint64_t v4 = (void *)*a3;
  if ((void *)*a3 == a3 + 1)
  {
LABEL_68:
    (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 88))(v27, a1);
    turi::unity_sframe::groupby_aggregate(v27[0].__r_.__value_.__l.__data_, a2, &v37, &v34, v33);
  }
  while (1)
  {
    long long v32 = 0uLL;
    (*(void (**)(void **__return_ptr))(*(void *)v4[10] + 64))(v30);
    uint64_t v6 = v4 + 7;
    if (v31 < 0)
    {
      if (v30[1] != (void *)3 || (*(_WORD *)v30[0] == 30035 ? (BOOL v8 = *((unsigned char *)v30[0] + 2) == 109) : (BOOL v8 = 0), !v8))
      {
        operator delete(v30[0]);
        goto LABEL_22;
      }
    }
    else
    {
      if (v31 != 3) {
        goto LABEL_22;
      }
      BOOL v7 = LOWORD(v30[0]) == 30035 && BYTE2(v30[0]) == 109;
      if (!v7) {
        goto LABEL_22;
      }
    }
    turi::gl_sframe::operator[](a1, *v6, (turi::gl_sarray *)v27);
    int v9 = turi::gl_sarray::dtype((turi::gl_sarray *)v27);
    v27[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D759EA8;
    if (v29 < 0) {
      operator delete(__p);
    }
    turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v27);
    if (v31 < 0) {
      operator delete(v30[0]);
    }
    if (v9 == 3)
    {
      std::string::basic_string[abi:ne180100]<0>(v27, "__builtin__vector__sum__");
      turi::get_builtin_group_aggregator(v27, v30);
      goto LABEL_42;
    }
LABEL_22:
    (*(void (**)(void **__return_ptr))(*(void *)v4[10] + 64))(v30);
    if (v31 < 0)
    {
      if (v30[1] != (void *)3 || (*(_WORD *)v30[0] == 30273 ? (BOOL v11 = *((unsigned char *)v30[0] + 2) == 103) : (BOOL v11 = 0), !v11))
      {
        operator delete(v30[0]);
        goto LABEL_47;
      }
    }
    else
    {
      if (v31 != 3) {
        goto LABEL_47;
      }
      if (LOWORD(v30[0]) != 30273 || BYTE2(v30[0]) != 103) {
        goto LABEL_47;
      }
    }
    turi::gl_sframe::operator[](a1, *v6, (turi::gl_sarray *)v27);
    int v12 = turi::gl_sarray::dtype((turi::gl_sarray *)v27);
    v27[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D759EA8;
    if (v29 < 0) {
      operator delete(__p);
    }
    turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v27);
    if (v31 < 0) {
      operator delete(v30[0]);
    }
    if (v12 == 3)
    {
      std::string::basic_string[abi:ne180100]<0>(v27, "__builtin__vector__avg__");
      turi::get_builtin_group_aggregator(v27, v30);
LABEL_42:
      long long v13 = *(_OWORD *)v30;
      v30[0] = 0;
      v30[1] = 0;
      uint64_t v14 = (std::__shared_weak_count *)*((void *)&v32 + 1);
      long long v32 = v13;
      if (v14)
      {
        std::__shared_weak_count::__release_shared[abi:ne180100](v14);
        if (v30[1]) {
          std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v30[1]);
        }
      }
      if (SHIBYTE(v27[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v27[0].__r_.__value_.__l.__data_);
      }
      goto LABEL_51;
    }
LABEL_47:
    uint64_t v16 = v4[10];
    uint64_t v15 = v4[11];
    if (v15) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v17 = (std::__shared_weak_count *)*((void *)&v32 + 1);
    *(void *)&long long v32 = v16;
    *((void *)&v32 + 1) = v15;
    if (v17) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v17);
    }
LABEL_51:
    uint64_t v18 = (long long *)(v4 + 4);
    uint64_t v19 = v35;
    if ((unint64_t)v35 >= v36)
    {
      unint64_t v21 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v34, v18);
    }
    else
    {
      if (*((char *)v4 + 55) < 0)
      {
        std::string::__init_copy_ctor_external(v35, (const std::string::value_type *)v4[4], v4[5]);
      }
      else
      {
        long long v20 = *v18;
        v35->__r_.__value_.__r.__words[2] = v4[6];
        *(_OWORD *)&v19->__r_.__value_.__l.__data_ = v20;
      }
      unint64_t v21 = v19 + 1;
    }
    size_t v35 = v21;
    long long v22 = v38;
    if ((unint64_t)v38 >= v39)
    {
      uint64_t v23 = std::vector<std::vector<std::string>>::__push_back_slow_path<std::vector<std::string> const&>((uint64_t *)&v37, (long long **)v4 + 7);
    }
    else
    {
      v38->__r_.__value_.__r.__words[0] = 0;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(v22, (long long *)v4[7], (long long *)v4[8], 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4[8] - v4[7]) >> 3));
      uint64_t v23 = (uint64_t)&v22[1];
    }
    uint64_t v38 = (std::string *)v23;
    std::vector<std::shared_ptr<turi::group_aggregate_value>>::push_back[abi:ne180100]((uint64_t *)v33, &v32);
    if (*((void *)&v32 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v32 + 1));
    }
    int v24 = (void *)v4[1];
    if (v24)
    {
      do
      {
        unint64_t v25 = v24;
        int v24 = (void *)*v24;
      }
      while (v24);
    }
    else
    {
      do
      {
        unint64_t v25 = (void *)v4[2];
        BOOL v7 = *v25 == (void)v4;
        uint64_t v4 = v25;
      }
      while (!v7);
    }
    uint64_t v4 = v25;
    if (v25 == v5) {
      goto LABEL_68;
    }
  }
}

void sub_223EF9C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *__p, std::__shared_weak_count *a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a15);
  }
  std::string __p = &a35;
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  std::string __p = (char *)(v35 - 136);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  std::string __p = (char *)(v35 - 112);
  std::vector<std::vector<std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void **std::vector<std::shared_ptr<turi::group_aggregate_value>>::push_back[abi:ne180100](uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  double result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  BOOL v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = ((uint64_t)v7 - *a1) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v5 - *a1;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    void v18[4] = result;
    uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>((uint64_t)result, v13);
    uint64_t v15 = &v14[16 * v10];
    v18[0] = v14;
    v18[1] = v15;
    v18[3] = &v14[16 * v16];
    long long v17 = *a2;
    *(_OWORD *)uint64_t v15 = *a2;
    if (*((void *)&v17 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v17 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    v18[2] = v15 + 16;
    std::vector<std::shared_ptr<turi::group_aggregate_value>>::__swap_out_circular_buffer(a1, v18);
    int v9 = (void *)a1[1];
    double result = std::__split_buffer<std::shared_ptr<turi::group_aggregate_value>>::~__split_buffer(v18);
  }
  else
  {
    *BOOL v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    v7[1] = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    int v9 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_223EF9E54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::shared_ptr<turi::group_aggregate_value>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::join(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string **a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  v20[0] = 0;
  v20[1] = 0;
  uint64_t v19 = (uint64_t *)v20;
  int v9 = *a3;
  uint64_t v10 = a3[1];
  if (*a3 != v10)
  {
    do
    {
      *(void *)&long long v21 = v9;
      unint64_t v11 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(&v19, (const void **)&v9->__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (long long **)&v21);
      std::string::operator=((std::string *)(v11 + 7), v9++);
    }
    while (v9 != v10);
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 88))(&v15, a1);
  uint64_t v12 = v15;
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 88))(&v21, a2);
  long long v14 = v21;
  if (*(char *)(a4 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a4, *(void *)(a4 + 8));
  }
  else {
    std::string __p = *(std::string *)a4;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, long long *, std::string *, uint64_t **))(*(void *)v12 + 328))(&v17, v12, &v14, &__p, &v19);
  turi::gl_sframe::gl_sframe(a5, (uint64_t)&v17);
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (*((void *)&v14 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v14 + 1));
  }
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v19, v20[0]);
}

void sub_223EFA024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,char a23,void *a24)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (a20) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a20);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a23, a24);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::filter_by(uint64_t a1, turi::gl_sarray *a2, uint64_t a3)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  (*(void (**)(const void ***__return_ptr))(*(void *)a1 + 24))(v27);
  std::set<std::string>::set[abi:ne180100]<std::__wrap_iter<std::string*>>((uint64_t)v26, v27[0], v27[1]);
  if (std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)v26, (const void **)a3))
  {
    turi::gl_sframe::operator[](a1, a3, (turi::gl_sarray *)&v29);
    int v6 = turi::gl_sarray::dtype((turi::gl_sarray *)&v29);
    int v7 = turi::gl_sarray::dtype(a2);
    v29.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D759EA8;
    if (v31 < 0) {
      operator delete(v30[3]);
    }
    turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v29);
    if (v6 == v7)
    {
      std::pair<std::string,turi::gl_sarray>::pair[abi:ne180100]<true,0>(v8, (long long *)a3, a2);
      turi::gl_sframe::gl_sframe((turi::gl_sframe *)v25, (long long *)&v29, 1);
      turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v30);
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v29.__r_.__value_.__l.__data_);
      }
      turi::gl_sframe::unique((turi::gl_sframe *)v25);
    }
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(&v28, "Type of given values does not match type of column ");
    int v18 = *(char *)(a3 + 23);
    if (v18 >= 0) {
      uint64_t v19 = (const std::string::value_type *)a3;
    }
    else {
      uint64_t v19 = *(const std::string::value_type **)a3;
    }
    if (v18 >= 0) {
      std::string::size_type v20 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      std::string::size_type v20 = *(void *)(a3 + 8);
    }
    long long v21 = std::string::append(&v28, v19, v20);
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    uint64_t v23 = std::string::append(&v29, " in SFrame");
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    exception[2] = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)exception = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
  }
  int v9 = __cxa_allocate_exception(0x18uLL);
  std::string::basic_string[abi:ne180100]<0>(&v28, "Column ");
  int v10 = *(char *)(a3 + 23);
  if (v10 >= 0) {
    unint64_t v11 = (const std::string::value_type *)a3;
  }
  else {
    unint64_t v11 = *(const std::string::value_type **)a3;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    std::string::size_type v12 = *(void *)(a3 + 8);
  }
  unint64_t v13 = std::string::append(&v28, v11, v12);
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v29.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v29, " not in SFrame");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  void v9[2] = *((void *)&v15->__r_.__value_.__l + 2);
  *(_OWORD *)int v9 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
}

void sub_223EFA84C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,std::__shared_weak_count *a21,char a22,char *a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,void *a28,int a29,char a30,int a31,__int16 a32,char a33,char a34)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a21);
  }
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)&a22, a23);
  *(void *)(v34 - 16std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = &a25;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v34 - 160));
  _Unwind_Resume(a1);
}

void turi::gl_sframe::unique(turi::gl_sframe *this)
{
  (*(void (**)(const void ***__return_ptr))(*(void *)this + 24))(v4);
  v3[0] = 0;
  v3[1] = 0;
  uint64_t v2 = v3;
  turi::gl_sframe::groupby((uint64_t)this, v4, &v2);
}

void sub_223EFAD48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, void *a10)
{
}

uint64_t turi::gl_sarray_reference::operator=(uint64_t a1, turi::gl_sarray *a2)
{
  uint64_t v4 = (***(uint64_t (****)(void))(a1 + 40))(*(void *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 40);
  if (v4)
  {
    int v6 = (const turi::flexible_type *)(**(uint64_t (***)(void))v5)(*(void *)(a1 + 40));
    turi::gl_sarray::from_const(a2, v6, (turi::gl_sarray *)v8);
  }
  else
  {
    turi::gl_sarray::from_const(a2, (const turi::flexible_type *)1, (turi::gl_sarray *)v8);
  }
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)v5 + 32))(v5, v8, a1 + 48);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v8);
  return a1;
}

void sub_223EFAE88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)va);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::pack_columns(uint64_t a1@<X0>, long long **a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  if (a2[1] == *a2)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Please provide at least two columns to pack");
  }
  (*(void (**)(const void ***__return_ptr))(*(void *)a1 + 24))(v31);
  std::set<std::string>::set[abi:ne180100]<std::__wrap_iter<std::string*>>((uint64_t)v29, v31[0], v31[1]);
  int v10 = *a2;
  unint64_t v11 = a2[1];
  while (v10 != v11)
  {
    if (*((char *)v10 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v23, *(const std::string::value_type **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v12 = *v10;
      v23.__r_.__value_.__r.__words[2] = *((void *)v10 + 2);
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v12;
    }
    if (!std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)v29, (const void **)&v23.__r_.__value_.__l.__data_))
    {
      uint64_t v19 = __cxa_allocate_exception(0x18uLL);
      std::operator+<char>();
    }
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v23.__r_.__value_.__l.__data_);
    }
    int v10 = (long long *)((char *)v10 + 24);
  }
  if ((a4 - 6) < 0xFDu)
  {
    long long v21 = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(v21, "Resulting dtype has to be one of dict/vector/list type");
    goto LABEL_42;
  }
  if (a4 == 3)
  {
    long long v21 = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(v21, "fill_na value for array needs to be numeric type");
LABEL_42:
  }
  memset(&v28, 0, sizeof(v28));
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(&v28, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  uint64_t v25 = 0;
  std::string::size_type v26 = 0;
  unint64_t v27 = 0;
  (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 24))(&v23, a1);
  std::string::size_type size = v23.__r_.__value_.__l.__size_;
  for (std::string::size_type i = v23.__r_.__value_.__r.__words[0]; i != size; i += 24)
  {
    if (*(char *)(i + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v24, *(const std::string::value_type **)i, *(void *)(i + 8));
    }
    else
    {
      long long v15 = *(_OWORD *)i;
      v24.__r_.__value_.__r.__words[2] = *(void *)(i + 16);
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v15;
    }
    if ((long long *)std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>((uint64_t)*a2, (uint64_t)a2[1], (unsigned __int8 **)&v24) == a2[1])
    {
      long long v16 = v26;
      if ((unint64_t)v26 >= v27)
      {
        int v18 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>(&v25, (long long *)&v24);
      }
      else
      {
        if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::__init_copy_ctor_external(v26, v24.__r_.__value_.__l.__data_, v24.__r_.__value_.__l.__size_);
        }
        else
        {
          long long v17 = *(_OWORD *)&v24.__r_.__value_.__l.__data_;
          v26->__r_.__value_.__r.__words[2] = v24.__r_.__value_.__r.__words[2];
          *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
        }
        int v18 = v16 + 1;
      }
      std::string::size_type v26 = v18;
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
  v24.__r_.__value_.__r.__words[0] = (std::string::size_type)&v23;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
  (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 88))(&v23, a1);
  (*(void (**)(std::string *__return_ptr))(*(void *)v23.__r_.__value_.__l.__data_ + 352))(&v24);
  if (v23.__r_.__value_.__l.__size_) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v23.__r_.__value_.__l.__size_);
  }
  turi::gl_sframe::select_columns(a1, a5);
  long long v22 = *(_OWORD *)&v24.__r_.__value_.__l.__data_;
  if (v24.__r_.__value_.__l.__size_) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v24.__r_.__value_.__l.__size_ + 8), 1uLL, memory_order_relaxed);
  }
  turi::gl_sarray::gl_sarray(&v23, &v22);
  turi::gl_sframe::add_column((uint64_t)a5, (uint64_t)&v23, a3);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v23);
  if (*((void *)&v22 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v22 + 1));
  }
  if (v24.__r_.__value_.__l.__size_) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v24.__r_.__value_.__l.__size_);
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v23);
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v28;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v23);
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)v29, v30);
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)v31;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v23);
}

void sub_223EFB2C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char *a33)
{
  __cxa_free_exception(v33);
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)&a32, a33);
  a32 = v34 - 112;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a32);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::pack_columns(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  v53[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  std::string v50 = 0;
  unint64_t v51 = 0;
  unint64_t v52 = 0;
  (*(void (**)(std::string *__return_ptr))(*(void *)a1 + 24))(&v49);
  std::string::size_type size = v49.__r_.__value_.__l.__size_;
  for (std::string::size_type i = v49.__r_.__value_.__r.__words[0]; i != size; i += 24)
  {
    if (*(char *)(i + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)i, *(void *)(i + 8));
    }
    else
    {
      long long v14 = *(_OWORD *)i;
      __p.__r_.__value_.__r.__words[2] = *(void *)(i + 16);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v14;
    }
    char v15 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v17 = __p.__r_.__value_.__l.__size_;
    }
    int v18 = (char)a2[23];
    BOOL v19 = v18 < 0;
    std::string::size_type v20 = *(unsigned __int8 **)a2;
    if (v18 >= 0) {
      std::string::size_type v20 = a2;
    }
    uint64_t v21 = a2[23];
    if (v19) {
      uint64_t v21 = *((void *)a2 + 1);
    }
    if (v17) {
      BOOL v22 = v21 == 0;
    }
    else {
      BOOL v22 = 1;
    }
    if (v22)
    {
      unint64_t v27 = v20;
LABEL_21:
      if (v27 == &v20[v21])
      {
        std::string v23 = v51;
        if ((unint64_t)v51 >= v52)
        {
          std::string v29 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v50, (long long *)&__p);
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
            std::string::__init_copy_ctor_external(v51, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
          }
          else
          {
            long long v24 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
            v51->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
            *(_OWORD *)&v23->__r_.__value_.__l.__data_ = v24;
          }
          std::string v29 = v23 + 1;
        }
        unint64_t v51 = v29;
        char v15 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
    }
    else
    {
      uint64_t v25 = v21 - 1;
      std::string::size_type v26 = v17 - 1;
      unint64_t v27 = v20;
      while (p_p->__r_.__value_.__s.__data_[0] == *v27)
      {
        ++v27;
        if (v26)
        {
          p_p = (std::string *)((char *)p_p + 1);
          uint64_t v28 = v25--;
          --v26;
          if (v28) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
    if (v15 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v49;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (v51 == v50)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(&v49, "There are no columns beginning with prefix ");
    int v43 = (char)a2[23];
    if (v43 >= 0) {
      char v44 = (const std::string::value_type *)a2;
    }
    else {
      char v44 = *(const std::string::value_type **)a2;
    }
    if (v43 >= 0) {
      std::string::size_type v45 = a2[23];
    }
    else {
      std::string::size_type v45 = *((void *)a2 + 1);
    }
    char v46 = std::string::append(&v49, v44, v45);
    long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
    exception[2] = *((void *)&v46->__r_.__value_.__l + 2);
    *(_OWORD *)exception = v47;
    v46->__r_.__value_.__l.__size_ = 0;
    v46->__r_.__value_.__r.__words[2] = 0;
    v46->__r_.__value_.__r.__words[0] = 0;
  }
  memset(v53, 0, 13);
  if (v53 != (atomic_ullong **)a5)
  {
    *(atomic_ullong **)((char *)v53 + 5) = *(atomic_ullong **)(a5 + 5);
    v53[0] = *(atomic_ullong **)a5;
    BYTE4(v53[1]) = *(unsigned char *)(a5 + 12);
    if (BYTE4(v53[1]) <= 9u && ((1 << SBYTE4(v53[1])) & 0x33C) != 0) {
      atomic_fetch_add(v53[0], 1uLL);
    }
  }
  turi::gl_sframe::pack_columns(a1, (long long **)&v50, a3, a4, a6);
  switch(BYTE4(v53[1]))
  {
    case 2:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v30 = v53[0];
        if (v53[0])
        {
          if (*((char *)v53[0] + 31) < 0) {
            operator delete(*((void **)v53[0] + 1));
          }
          char v31 = v30;
          uint64_t v32 = 0x1012C404EF22A49;
          goto LABEL_72;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        unint64_t v39 = v53[0];
        if (v53[0])
        {
          int v40 = (void *)v53[0][1];
          if (v40)
          {
            v53[0][2] = (atomic_ullong)v40;
            operator delete(v40);
          }
          char v31 = v39;
          uint64_t v32 = 0x1080C409938AC02;
          goto LABEL_72;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v33 = v53[0];
        if (v53[0])
        {
          v49.__r_.__value_.__r.__words[0] = (std::string::size_type)(v53[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v49);
          goto LABEL_67;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v33 = v53[0];
        if (v53[0])
        {
          v49.__r_.__value_.__r.__words[0] = (std::string::size_type)(v53[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v49);
LABEL_67:
          char v31 = v33;
          uint64_t v32 = 0x1020C405E66F15BLL;
          goto LABEL_72;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        int v41 = v53[0];
        if (v53[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v53[0] + 2);
          char v31 = v41;
          unsigned int v38 = -235920773;
          goto LABEL_71;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v53[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v34 = v53[0];
        if (v53[0])
        {
          uint64_t v35 = (void *)v53[0][6];
          if (v35)
          {
            v53[0][7] = (atomic_ullong)v35;
            operator delete(v35);
          }
          unint64_t v36 = (void *)v34[3];
          if (v36)
          {
            v34[4] = (atomic_ullong)v36;
            operator delete(v36);
          }
          int v37 = (std::__shared_weak_count *)v34[2];
          if (v37) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v37);
          }
          char v31 = v34;
          unsigned int v38 = 2071181815;
LABEL_71:
          uint64_t v32 = v38 | 0x1030C4000000000;
LABEL_72:
          MEMORY[0x22A614FA0](v31, v32);
        }
      }
      break;
    default:
      break;
  }
  memset(v53, 0, 13);
  v49.__r_.__value_.__r.__words[0] = (std::string::size_type)&v50;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v49);
}

void sub_223EFB8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26)
{
  if (a20 < 0)
  {
    operator delete(__p);
    if ((v27 & 1) == 0)
    {
LABEL_6:
      a9 = &a21;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v27)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v26);
  goto LABEL_6;
}

void turi::gl_sframe::split_datetime(uint64_t a1@<X0>, std::string *a2@<X1>, uint64_t a3@<X2>, long long **a4@<X3>, int a5@<W4>, turi::gl_sframe *a6@<X8>)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v43, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string v43 = *(std::string *)a3;
  }
  (*(void (**)(const void ***__return_ptr, uint64_t))(*(void *)a1 + 24))(v42, a1);
  std::set<std::string>::set[abi:ne180100]<std::__wrap_iter<std::string*>>((uint64_t)v40, v42[0], v42[1]);
  if (!std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)v40, (const void **)&a2->__r_.__value_.__l.__data_))
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::operator+<char>();
    uint64_t v28 = std::string::append(&v44, "' does not exist in current SFrame");
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    exception[2] = *((void *)&v28->__r_.__value_.__l + 2);
    *(_OWORD *)exception = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v43.__r_.__value_.__l.__size_) {
      goto LABEL_10;
    }
  }
  else if (*((unsigned char *)&v43.__r_.__value_.__s + 23))
  {
    goto LABEL_10;
  }
  std::string::operator=(&v43, a2);
LABEL_10:
  turi::gl_sframe::select_column(a1, (uint64_t)&v44);
  turi::gl_sarray::split_datetime((uint64_t)&v44, a4, a5, (uint64_t)v38);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v44);
  uint64_t v35 = 0;
  unint64_t v36 = 0;
  unint64_t v37 = 0;
  turi::gl_sframe::column_names((turi::gl_sframe *)v38);
  unint64_t v11 = v33;
  for (i = v34; v11 != i; unint64_t v11 = (long long *)((char *)v11 + 24))
  {
    uint64_t v13 = *((unsigned __int8 *)v11 + 23);
    std::string::size_type v14 = *((void *)v11 + 1);
    if ((v13 & 0x80u) == 0) {
      uint64_t v15 = *((unsigned __int8 *)v11 + 23);
    }
    else {
      uint64_t v15 = *((void *)v11 + 1);
    }
    std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    int v17 = (char)size;
    if ((size & 0x80u) != 0) {
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    if (v15 != size) {
      goto LABEL_26;
    }
    if (v17 >= 0) {
      int v18 = a2;
    }
    else {
      int v18 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if ((v13 & 0x80) != 0)
    {
      if (memcmp(*(const void **)v11, v18, *((void *)v11 + 1)))
      {
        std::string::size_type v20 = v36;
        if ((unint64_t)v36 < v37)
        {
LABEL_31:
          std::string::__init_copy_ctor_external(v20, *(const std::string::value_type **)v11, v14);
          goto LABEL_32;
        }
LABEL_33:
        uint64_t v22 = std::vector<std::string>::__push_back_slow_path<std::string const&>(&v35, v11);
LABEL_34:
        unint64_t v36 = (std::string *)v22;
        if (std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)v40, (const void **)v11))
        {
          if (*((char *)v11 + 23) >= 0) {
            size_t v23 = *((unsigned __int8 *)v11 + 23);
          }
          else {
            size_t v23 = *((void *)v11 + 1);
          }
          std::string::basic_string[abi:ne180100]((uint64_t)__p, v23 + 2);
          if (v31 >= 0) {
            long long v24 = __p;
          }
          else {
            long long v24 = (void **)__p[0];
          }
          if (v23)
          {
            if (*((char *)v11 + 23) >= 0) {
              uint64_t v25 = (const std::string::value_type *)v11;
            }
            else {
              uint64_t v25 = *(const std::string::value_type **)v11;
            }
            memmove(v24, v25, v23);
          }
          strcpy((char *)v24 + v23, ".1");
          if (*((char *)v11 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v44, *(const std::string::value_type **)v11, *((void *)v11 + 1));
          }
          else
          {
            long long v26 = *v11;
            v44.__r_.__value_.__r.__words[2] = *((void *)v11 + 2);
            *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v26;
          }
          long long v45 = *(_OWORD *)__p;
          uint64_t v46 = v31;
          __p[1] = 0;
          uint64_t v31 = 0;
          __p[0] = 0;
          std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v32, (const void **)&v44.__r_.__value_.__l.__data_, 1);
          turi::gl_sframe::rename((uint64_t)v38, v32);
          std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v32, (void *)v32[1]);
          if (SHIBYTE(v46) < 0) {
            operator delete((void *)v45);
          }
          if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v44.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v31) < 0) {
            operator delete(__p[0]);
          }
        }
      }
    }
    else if (*((unsigned char *)v11 + 23))
    {
      uint64_t v19 = 0;
      while (*((unsigned __int8 *)v11 + v19) == v18->__r_.__value_.__s.__data_[v19])
      {
        if (v13 == ++v19) {
          goto LABEL_55;
        }
      }
LABEL_26:
      std::string::size_type v20 = v36;
      if ((unint64_t)v36 >= v37) {
        goto LABEL_33;
      }
      if ((v13 & 0x80) != 0) {
        goto LABEL_31;
      }
      long long v21 = *v11;
      v36->__r_.__value_.__r.__words[2] = *((void *)v11 + 2);
      *(_OWORD *)&v20->__r_.__value_.__l.__data_ = v21;
LABEL_32:
      uint64_t v22 = (uint64_t)&v20[1];
      goto LABEL_34;
    }
LABEL_55:
    ;
  }
  v44.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v44);
  turi::gl_sframe::select_columns(a1, a6);
  turi::gl_sframe::add_columns(a6, (const turi::gl_sframe *)v38);
  v44.__r_.__value_.__r.__words[0] = (std::string::size_type)&v35;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v44);
  v38[0] = &unk_26D759E10;
  if (v39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v39);
  }
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)v40, v41);
  v44.__r_.__value_.__r.__words[0] = (std::string::size_type)v42;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v44);
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
}

void sub_223EFBEB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,char *a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)&a28, a29);
  *(void *)(v39 - 16std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = &a31;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v39 - 160));
  if (a39 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sframe::unpack(uint64_t a1@<X0>, const void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X5>, turi::gl_sframe *a6@<X8>)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v52, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string v52 = *(std::string *)a3;
  }
  (*(void (**)(const void ***__return_ptr, uint64_t))(*(void *)a1 + 24))(v51, a1);
  std::set<std::string>::set[abi:ne180100]<std::__wrap_iter<std::string*>>((uint64_t)v49, v51[0], v51[1]);
  if (!std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)v49, a2))
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::operator+<char>();
    unint64_t v36 = std::string::append(&v53, "' does not exist in current SFrame");
    long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    exception[2] = *((void *)&v36->__r_.__value_.__l + 2);
    *(_OWORD *)exception = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
  }
  turi::gl_sframe::select_column(a1, (uint64_t)&v53);
  turi::gl_sarray::unpack((turi::gl_sarray *)&v53, a4, a5, (uint64_t)v47);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v53);
  uint64_t v44 = 0;
  long long v45 = 0;
  unint64_t v46 = 0;
  (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 24))(&v53, a1);
  std::string::size_type size = v53.__r_.__value_.__l.__size_;
  for (std::string::size_type i = v53.__r_.__value_.__r.__words[0]; i != size; i += 24)
  {
    uint64_t v13 = *(unsigned __int8 *)(i + 23);
    std::string::size_type v14 = *(void *)(i + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v15 = (const void *)*(unsigned __int8 *)(i + 23);
    }
    else {
      uint64_t v15 = *(const void **)(i + 8);
    }
    long long v16 = (const void *)*((unsigned __int8 *)a2 + 23);
    int v17 = (char)v16;
    if ((char)v16 < 0) {
      long long v16 = a2[1];
    }
    if (v15 == v16)
    {
      if (v17 >= 0) {
        int v18 = (unsigned __int8 *)a2;
      }
      else {
        int v18 = (unsigned __int8 *)*a2;
      }
      if ((v13 & 0x80) != 0)
      {
        if (!memcmp(*(const void **)i, v18, *(void *)(i + 8))) {
          continue;
        }
        std::string::size_type v20 = v45;
        if ((unint64_t)v45 >= v46)
        {
LABEL_29:
          uint64_t v22 = std::vector<std::string>::__push_back_slow_path<std::string const&>(&v44, (long long *)i);
          goto LABEL_30;
        }
LABEL_27:
        std::string::__init_copy_ctor_external(v20, *(const std::string::value_type **)i, v14);
        goto LABEL_28;
      }
      if (!*(unsigned char *)(i + 23)) {
        continue;
      }
      uint64_t v19 = 0;
      while (*(unsigned __int8 *)(i + v19) == v18[v19])
      {
        if (v13 == ++v19) {
          goto LABEL_31;
        }
      }
    }
    std::string::size_type v20 = v45;
    if ((unint64_t)v45 >= v46) {
      goto LABEL_29;
    }
    if ((v13 & 0x80) != 0) {
      goto LABEL_27;
    }
    long long v21 = *(_OWORD *)i;
    v45->__r_.__value_.__r.__words[2] = *(void *)(i + 16);
    *(_OWORD *)&v20->__r_.__value_.__l.__data_ = v21;
LABEL_28:
    uint64_t v22 = (uint64_t)&v20[1];
LABEL_30:
    long long v45 = (std::string *)v22;
LABEL_31:
    ;
  }
  unsigned int v38 = a6;
  std::string v42 = &v53;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v42);
  turi::gl_sframe::column_names((turi::gl_sframe *)v47);
  size_t v23 = v42;
  long long v24 = v43;
  while (v23 != v24)
  {
    uint64_t v25 = HIBYTE(v23->__r_.__value_.__r.__words[2]);
    if ((v25 & 0x80u) == 0) {
      std::string::size_type v26 = HIBYTE(v23->__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v26 = v23->__r_.__value_.__l.__size_;
    }
    int v27 = (const void *)*((unsigned __int8 *)a2 + 23);
    int v28 = (char)v27;
    if ((char)v27 < 0) {
      int v27 = a2[1];
    }
    if ((const void *)v26 != v27) {
      goto LABEL_49;
    }
    if (v28 >= 0) {
      long long v29 = (unsigned __int8 *)a2;
    }
    else {
      long long v29 = (unsigned __int8 *)*a2;
    }
    if ((v25 & 0x80) != 0)
    {
      if (memcmp(v23->__r_.__value_.__l.__data_, v29, v23->__r_.__value_.__l.__size_)) {
        goto LABEL_49;
      }
    }
    else if (*((unsigned char *)&v23->__r_.__value_.__s + 23))
    {
      uint64_t v30 = 0;
      while (v23->__r_.__value_.__s.__data_[v30] == v29[v30])
      {
        if (v25 == ++v30) {
          goto LABEL_70;
        }
      }
LABEL_49:
      if (std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)v49, (const void **)&v23->__r_.__value_.__l.__data_))
      {
        if ((v23->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t v31 = HIBYTE(v23->__r_.__value_.__r.__words[2]);
        }
        else {
          size_t v31 = v23->__r_.__value_.__l.__size_;
        }
        std::string::basic_string[abi:ne180100]((uint64_t)__p, v31 + 2);
        if (v40 >= 0) {
          uint64_t v32 = __p;
        }
        else {
          uint64_t v32 = (void **)__p[0];
        }
        if (v31)
        {
          if ((v23->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v33 = v23;
          }
          else {
            uint64_t v33 = (std::string *)v23->__r_.__value_.__r.__words[0];
          }
          memmove(v32, v33, v31);
        }
        strcpy((char *)v32 + v31, ".1");
        if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::__init_copy_ctor_external(&v53, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
        }
        else
        {
          long long v34 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
          v53.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v34;
        }
        long long v54 = *(_OWORD *)__p;
        uint64_t v55 = v40;
        __p[1] = 0;
        uint64_t v40 = 0;
        __p[0] = 0;
        std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v41, (const void **)&v53.__r_.__value_.__l.__data_, 1);
        turi::gl_sframe::rename((uint64_t)v47, v41);
        std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v41, (void *)v41[1]);
        if (SHIBYTE(v55) < 0) {
          operator delete((void *)v54);
        }
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v53.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v40) < 0) {
          operator delete(__p[0]);
        }
      }
    }
LABEL_70:
    ++v23;
  }
  v53.__r_.__value_.__r.__words[0] = (std::string::size_type)&v42;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v53);
  turi::gl_sframe::select_columns(a1, v38);
  turi::gl_sframe::add_columns(v38, (const turi::gl_sframe *)v47);
  v53.__r_.__value_.__r.__words[0] = (std::string::size_type)&v44;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v53);
  v47[0] = &unk_26D759E10;
  if (v48) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v48);
  }
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy((uint64_t)v49, v50);
  v53.__r_.__value_.__r.__words[0] = (std::string::size_type)v51;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v53);
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v52.__r_.__value_.__l.__data_);
  }
}

void sub_223EFC550(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
}

void turi::gl_sframe::stack(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *(void *)&long long v13 = *MEMORY[0x263EF8340];
  if ((*(char *)(a3 + 23) & 0x80000000) == 0)
  {
    if (*(unsigned char *)(a3 + 23))
    {
      std::string v12 = *(std::string *)a3;
      goto LABEL_6;
    }
LABEL_8:
    int v7 = 0;
    uint64_t v8 = 0;
    int v9 = 0;
    turi::gl_sframe::stack(a1, a2, (long long **)&v7, a4);
    v12.__r_.__value_.__r.__words[0] = (std::string::size_type)&v7;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v12);
    return;
  }
  if (!*(void *)(a3 + 8)) {
    goto LABEL_8;
  }
  std::string::__init_copy_ctor_external(&v12, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
LABEL_6:
  int v7 = 0;
  uint64_t v8 = 0;
  int v9 = 0;
  int v10 = &v7;
  char v11 = 0;
  int v7 = (std::string *)operator new(0x18uLL);
  uint64_t v8 = v7;
  int v9 = v7 + 1;
  uint64_t v8 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v9, (long long *)&v12, &v13, v7);
  turi::gl_sframe::stack(a1, a2, (long long **)&v7, a4);
  int v10 = &v7;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v10);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
}

void sub_223EFC82C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

void turi::gl_sframe::stack(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, long long **a3@<X2>, void *a4@<X8>)
{
  uint64_t v109 = *MEMORY[0x263EF8340];
  turi::gl_sframe::select_column(a1, (uint64_t)&__src);
  int v8 = turi::gl_sarray::dtype((turi::gl_sarray *)&__src);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&__src);
  memset(&v97, 0, sizeof(v97));
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)&v97, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  std::string __p = 0;
  uint64_t v95 = 0;
  uint64_t v96 = 0;
  if ((v8 - 6) <= 0xFCu)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Stack is only supported for column of dict/list/array type.");
LABEL_162:
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v97.__end_ - (char *)v97.__begin_) >> 3);
  if (v9 == 1)
  {
    if (v8 == 5)
    {
      exception = __cxa_allocate_exception(0x18uLL);
      std::string::basic_string[abi:ne180100]<0>(exception, "new_column_name must contain 2 values to stack a dictionary.");
      goto LABEL_162;
    }
  }
  else
  {
    if (!v9)
    {
      if ((v8 - 3) > 1u)
      {
        std::string::basic_string[abi:ne180100]<0>(&__src, "");
        std::string::basic_string[abi:ne180100]<0>(&v106, "");
        std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string const*,std::string const*>(&v97, &__src, &v108, 2uLL);
        for (uint64_t i = 0; i != -48; i -= 24)
        {
          if (*((char *)&v107 + i + 7) < 0) {
            operator delete(*(void **)((char *)&__src + i + 24));
          }
        }
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(&__src, "");
        std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string const*,std::string const*>(&v97, &__src, &v106, 1uLL);
        if (SHIBYTE(__src.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__src.__r_.__value_.__l.__data_);
        }
      }
      goto LABEL_16;
    }
    if ((std::vector<std::string>::pointer)((char *)v97.__end_ - (char *)v97.__begin_) == (std::vector<std::string>::pointer)48
      && (v8 - 3) <= 1u)
    {
      exception = __cxa_allocate_exception(0x18uLL);
      std::string::basic_string[abi:ne180100]<0>(exception, "new_column_name must contain 1 value to stack an list or array");
      goto LABEL_162;
    }
  }
LABEL_16:
  uint64_t v78 = a4;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 24))(&v92, a1);
  std::vector<std::string>::pointer begin = v97.__begin_;
  std::vector<std::string>::pointer end = v97.__end_;
  while (begin != end)
  {
    if (SHIBYTE(begin->__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(&__src, begin->__r_.__value_.__l.__data_, begin->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v14 = *(_OWORD *)&begin->__r_.__value_.__l.__data_;
      __src.__r_.__value_.__r.__words[2] = begin->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__src.__r_.__value_.__l.__data_ = v14;
    }
    uint64_t v15 = std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>(v92, v93, (unsigned __int8 **)&__src);
    if (v15 == v93)
    {
LABEL_36:
      if ((*((unsigned char *)&__src.__r_.__value_.__s + 23) & 0x80) == 0) {
        goto LABEL_40;
      }
      goto LABEL_39;
    }
    if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__src.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __src.__r_.__value_.__l.__size_;
    }
    uint64_t v17 = a2[23];
    int v18 = (char)v17;
    if ((v17 & 0x80u) != 0) {
      uint64_t v17 = *((void *)a2 + 1);
    }
    if (size != v17) {
      goto LABEL_154;
    }
    if (v18 >= 0) {
      uint64_t v19 = a2;
    }
    else {
      uint64_t v19 = *(unsigned __int8 **)a2;
    }
    if ((*((unsigned char *)&__src.__r_.__value_.__s + 23) & 0x80) != 0)
    {
      if (memcmp(__src.__r_.__value_.__l.__data_, v19, __src.__r_.__value_.__l.__size_)) {
        goto LABEL_154;
      }
LABEL_39:
      operator delete(__src.__r_.__value_.__l.__data_);
      goto LABEL_40;
    }
    if (*((unsigned char *)&__src.__r_.__value_.__s + 23))
    {
      p_src = &__src;
      uint64_t v21 = HIBYTE(__src.__r_.__value_.__r.__words[2]);
      while (p_src->__r_.__value_.__s.__data_[0] == *v19)
      {
        p_src = (std::string *)((char *)p_src + 1);
        ++v19;
        if (!--v21) {
          goto LABEL_36;
        }
      }
LABEL_154:
      uint64_t v71 = __cxa_allocate_exception(0x18uLL);
      std::string::basic_string[abi:ne180100]<0>(&v91, "Column name with ");
      if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v72 = &__src;
      }
      else {
        unint64_t v72 = (std::string *)__src.__r_.__value_.__r.__words[0];
      }
      if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v73 = HIBYTE(__src.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v73 = __src.__r_.__value_.__l.__size_;
      }
      uint64_t v74 = std::string::append(&v91, (const std::string::value_type *)v72, v73);
      long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
      *(void *)&v98[16] = *((void *)&v74->__r_.__value_.__l + 2);
      *(_OWORD *)uint64_t v98 = v75;
      v74->__r_.__value_.__l.__size_ = 0;
      v74->__r_.__value_.__r.__words[2] = 0;
      v74->__r_.__value_.__r.__words[0] = 0;
      unint64_t v76 = std::string::append((std::string *)v98, " already exists");
      long long v77 = *(_OWORD *)&v76->__r_.__value_.__l.__data_;
      v71[2] = *((void *)&v76->__r_.__value_.__l + 2);
      *(_OWORD *)uint64_t v71 = v77;
      v76->__r_.__value_.__l.__size_ = 0;
      v76->__r_.__value_.__r.__words[2] = 0;
      v76->__r_.__value_.__r.__words[0] = 0;
    }
LABEL_40:
    ++begin;
  }
  turi::gl_sframe::select_column(a1, (uint64_t)v98);
  turi::gl_sarray::head((turi::gl_sarray *)v98, (uint64_t)&__src);
  turi::gl_sarray::dropna((turi::gl_sarray *)&__src, (uint64_t)&v91);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&__src);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v98);
  if (turi::gl_sarray::dtype((turi::gl_sarray *)&v91) != 3)
  {
    if (turi::gl_sarray::dtype((turi::gl_sarray *)&v91) == 4)
    {
      memset(v98, 0, 24);
      turi::gl_sarray::range_iterator((turi::gl_sarray *)&v91, 0, 0xFFFFFFFFFFFFFFFFLL, &__src);
      uint64_t v88 = turi::gl_sarray_range::begin((turi::gl_sarray_range *)&__src);
      uint64_t v89 = v22;
      uint64_t v23 = turi::gl_sarray_range::end((turi::gl_sarray_range *)&__src);
      while (v88 != v23)
      {
        uint64_t v24 = turi::gl_sarray_range::iterator::dereference((turi::gl_sarray_range::iterator *)&v88);
        int v25 = *(unsigned __int8 *)(v24 + 12) - 2;
        uint64_t v26 = *(void *)v24;
        switch(*(unsigned char *)(v24 + 12))
        {
          case 2:
            atomic_fetch_add((atomic_ullong *volatile)v26, 1uLL);
LABEL_48:
            if (atomic_fetch_add((atomic_ullong *volatile)v26, 0xFFFFFFFFFFFFFFFFLL) == 1 && v26 != 0)
            {
              if (*(char *)(v26 + 31) < 0) {
                operator delete(*(void **)(v26 + 8));
              }
              uint64_t v28 = v26;
              uint64_t v29 = 0x1012C404EF22A49;
              goto LABEL_98;
            }
            goto LABEL_99;
          case 3:
            atomic_fetch_add((atomic_ullong *volatile)v26, 1uLL);
LABEL_77:
            if (atomic_fetch_add((atomic_ullong *volatile)v26, 0xFFFFFFFFFFFFFFFFLL) == 1 && v26 != 0)
            {
              std::string v42 = *(void **)(v26 + 8);
              if (v42)
              {
                *(void *)(v26 + 16) = v42;
                operator delete(v42);
              }
              uint64_t v28 = v26;
              uint64_t v29 = 0x1080C409938AC02;
              goto LABEL_98;
            }
            goto LABEL_99;
          case 4:
            atomic_fetch_add((atomic_ullong *volatile)v26, 1uLL);
            uint64_t v103 = 0;
            uint64_t v104 = 0;
            uint64_t v30 = *(uint64_t **)(v26 + 8);
            size_t v31 = *(uint64_t **)(v26 + 16);
            uint64_t v102 = 0;
            std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&v102, v30, v31, ((char *)v31 - (char *)v30) >> 4);
            uint64_t v32 = v102;
            uint64_t v33 = v103;
            if (v102 != v103)
            {
              long long v34 = *(void ***)&v98[8];
              do
              {
                long long v34 = std::vector<turi::flexible_type>::insert((uint64_t *)v98, (uint64_t)v34, (unint64_t)v32) + 2;
                v32 += 2;
              }
              while (v32 != v33);
            }
            uint64_t v85 = (void **)&v102;
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v85);
            switch(v25)
            {
              case 0:
                goto LABEL_48;
              case 1:
                goto LABEL_77;
              case 2:
                if (atomic_fetch_add((atomic_ullong *volatile)v26, 0xFFFFFFFFFFFFFFFFLL) != 1 || v26 == 0) {
                  goto LABEL_99;
                }
                uint64_t v102 = (void *)(v26 + 8);
                std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v102);
                break;
              case 3:
                goto LABEL_85;
              case 6:
                goto LABEL_92;
              case 7:
                goto LABEL_65;
              default:
                goto LABEL_99;
            }
            goto LABEL_90;
          case 5:
            atomic_fetch_add((atomic_ullong *volatile)v26, 1uLL);
LABEL_85:
            if (atomic_fetch_add((atomic_ullong *volatile)v26, 0xFFFFFFFFFFFFFFFFLL) != 1 || v26 == 0) {
              goto LABEL_99;
            }
            uint64_t v102 = (void *)(v26 + 8);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v102);
LABEL_90:
            uint64_t v28 = v26;
            uint64_t v29 = 0x1020C405E66F15BLL;
            goto LABEL_98;
          case 8:
            atomic_fetch_add((atomic_ullong *volatile)v26, 1uLL);
LABEL_92:
            if (atomic_fetch_add((atomic_ullong *volatile)v26, 0xFFFFFFFFFFFFFFFFLL) != 1 || v26 == 0) {
              goto LABEL_99;
            }
            boost::detail::shared_count::~shared_count((atomic_uint **)(v26 + 16));
            uint64_t v28 = v26;
            unsigned int v40 = -235920773;
            goto LABEL_97;
          case 9:
            atomic_fetch_add((atomic_ullong *volatile)v26, 1uLL);
LABEL_65:
            if (atomic_fetch_add((atomic_ullong *volatile)v26, 0xFFFFFFFFFFFFFFFFLL) != 1 || v26 == 0) {
              goto LABEL_99;
            }
            long long v37 = *(void **)(v26 + 48);
            if (v37)
            {
              *(void *)(v26 + 56) = v37;
              operator delete(v37);
            }
            unsigned int v38 = *(void **)(v26 + 24);
            if (v38)
            {
              *(void *)(v26 + 32) = v38;
              operator delete(v38);
            }
            uint64_t v39 = *(std::__shared_weak_count **)(v26 + 16);
            if (v39) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v39);
            }
            uint64_t v28 = v26;
            unsigned int v40 = 2071181815;
LABEL_97:
            uint64_t v29 = v40 | 0x1030C4000000000;
LABEL_98:
            MEMORY[0x22A614FA0](v28, v29);
LABEL_99:
            turi::gl_sarray_range::iterator::increment((turi::gl_sarray_range::iterator *)&v88);
            break;
          default:
            goto LABEL_99;
        }
      }
      LOBYTE(v102) = turi::infer_type_of_list((uint64_t *)v98);
      std::vector<turi::flex_type_enum>::__assign_with_size[abi:ne180100]<turi::flex_type_enum const*,turi::flex_type_enum const*>(&__p, (char *)&v102, (char *)&v102 + 1, 1uLL);
      turi::gl_sarray_range::~gl_sarray_range((turi::gl_sarray_range *)&__src);
      __src.__r_.__value_.__r.__words[0] = (std::string::size_type)v98;
    }
    else
    {
      if (turi::gl_sarray::dtype((turi::gl_sarray *)&v91) != 5) {
        goto LABEL_147;
      }
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      unint64_t v90 = 0;
      uint64_t v85 = 0;
      double v86 = 0;
      unint64_t v87 = 0;
      turi::gl_sarray::range_iterator((turi::gl_sarray *)&v91, 0, 0xFFFFFFFFFFFFFFFFLL, &v102);
      v84[0] = turi::gl_sarray_range::begin((turi::gl_sarray_range *)&v102);
      v84[1] = v45;
      uint64_t v46 = turi::gl_sarray_range::end((turi::gl_sarray_range *)&v102);
      while (v84[0] != v46)
      {
        uint64_t v47 = (unsigned char *)turi::gl_sarray_range::iterator::dereference((turi::gl_sarray_range::iterator *)v84);
        if (v47[12] != 7)
        {
          switch(v47[12])
          {
            case 0:
            case 1:
            case 6:
              turi::flexible_type_fail(0);
              uint64_t v81 = 0;
              uint64_t v82 = 0;
              uint64_t v83 = 0;
              goto LABEL_125;
            case 2:
              uint64_t v50 = *(void *)v47;
              if (*(char *)(*(void *)v47 + 31) < 0)
              {
                std::string::__init_copy_ctor_external(&__src, *(const std::string::value_type **)(v50 + 8), *(void *)(v50 + 16));
              }
              else
              {
                long long v51 = *(_OWORD *)(v50 + 8);
                __src.__r_.__value_.__r.__words[2] = *(void *)(v50 + 24);
                *(_OWORD *)&__src.__r_.__value_.__l.__data_ = v51;
              }
              turi::flexible_type_fail(0);
              uint64_t v81 = 0;
              uint64_t v82 = 0;
              uint64_t v83 = 0;
              if ((SHIBYTE(__src.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_125;
              }
              unint64_t v57 = (void *)__src.__r_.__value_.__r.__words[0];
              break;
            case 3:
              uint64_t v56 = *(void *)v47;
              memset(&__src, 0, sizeof(__src));
              std::vector<unsigned long>::__init_with_size[abi:ne180100]<unsigned long *,unsigned long *>(&__src, *(const void **)(v56 + 8), *(void *)(v56 + 16), (uint64_t)(*(void *)(v56 + 16) - *(void *)(v56 + 8)) >> 3);
              turi::flexible_type_fail(0);
              uint64_t v81 = 0;
              uint64_t v82 = 0;
              uint64_t v83 = 0;
              unint64_t v57 = (void *)__src.__r_.__value_.__r.__words[0];
              if (!__src.__r_.__value_.__r.__words[0]) {
                goto LABEL_125;
              }
              __src.__r_.__value_.__l.__size_ = __src.__r_.__value_.__r.__words[0];
              break;
            case 4:
              uint64_t v48 = *(void *)v47;
              memset(&__src, 0, sizeof(__src));
              std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&__src, *(uint64_t **)(v48 + 8), *(uint64_t **)(v48 + 16), (uint64_t)(*(void *)(v48 + 16) - *(void *)(v48 + 8)) >> 4);
              turi::flexible_type_fail(0);
              uint64_t v81 = 0;
              uint64_t v82 = 0;
              uint64_t v83 = 0;
              uint64_t v101 = &__src;
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v101);
              goto LABEL_125;
            case 5:
              uint64_t v49 = *(void *)v47;
              uint64_t v82 = 0;
              uint64_t v83 = 0;
              uint64_t v81 = 0;
              std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__init_with_size[abi:ne180100]<std::pair<turi::flexible_type,turi::flexible_type>*,std::pair<turi::flexible_type,turi::flexible_type>*>(&v81, *(uint64_t **)(v49 + 8), *(uint64_t **)(v49 + 16), (uint64_t)(*(void *)(v49 + 16) - *(void *)(v49 + 8)) >> 5);
              goto LABEL_125;
            case 8:
              uint64_t v52 = *(void *)v47;
              uint64_t v53 = *(void *)(*(void *)v47 + 16);
              *(void *)uint64_t v98 = *(void *)(*(void *)v47 + 8);
              *(void *)&v98[8] = v53;
              if (v53) {
                atomic_fetch_add_explicit((atomic_uint *volatile)(v53 + 8), 1u, memory_order_relaxed);
              }
              long long v54 = *(_OWORD *)(v52 + 24);
              long long v55 = *(_OWORD *)(v52 + 56);
              long long v99 = *(_OWORD *)(v52 + 40);
              long long v100 = v55;
              *(_OWORD *)&v98[16] = v54;
              turi::flexible_type_fail(0);
              uint64_t v81 = 0;
              uint64_t v82 = 0;
              uint64_t v83 = 0;
              boost::detail::shared_count::~shared_count((atomic_uint **)&v98[8]);
              goto LABEL_125;
            case 9:
              turi::flexible_type_impl::ndarray<double>::ndarray(&__src, *(void *)v47 + 8);
              turi::flexible_type_fail(0);
              uint64_t v81 = 0;
              uint64_t v82 = 0;
              uint64_t v83 = 0;
              if (v107)
              {
                *(void *)&long long v108 = v107;
                operator delete(v107);
              }
              if (__src.__r_.__value_.__r.__words[2])
              {
                *(void *)&long long v106 = *((void *)&__src.__r_.__value_.__l + 2);
                operator delete((void *)__src.__r_.__value_.__r.__words[2]);
              }
              if (__src.__r_.__value_.__l.__size_) {
                std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__src.__r_.__value_.__l.__size_);
              }
              goto LABEL_125;
            default:
              turi::flexible_type_fail(0);
              __break(1u);
              return;
          }
          operator delete(v57);
LABEL_125:
          uint64_t v58 = v82;
          if (v81 != v82)
          {
            uint64_t v59 = v81 + 16;
            do
            {
              int v60 = (atomic_ullong *volatile *)(v59 - 16);
              int v61 = v89;
              if ((unint64_t)v89 >= v90)
              {
                uint64_t v64 = std::vector<turi::flexible_type>::__push_back_slow_path<turi::flexible_type const&>(&v88, v60);
              }
              else
              {
                *uint64_t v89 = 0;
                *((_DWORD *)v61 + 2) = 0;
                *((unsigned char *)v61 + 12) = 0;
                if (v60 != v61)
                {
                  atomic_ullong *volatile v62 = *v60;
                  *(atomic_ullong *volatile *)((char *)v61 + 5) = *(atomic_ullong *volatile *)(v59 - 11);
                  *int v61 = v62;
                  unsigned int v63 = *(unsigned __int8 *)(v59 - 4);
                  *((unsigned char *)v61 + 12) = v63;
                  if (v63 <= 9 && ((1 << v63) & 0x33C) != 0) {
                    atomic_fetch_add(*v61, 1uLL);
                  }
                }
                uint64_t v64 = (uint64_t)(v61 + 2);
              }
              uint64_t v89 = (atomic_ullong *volatile *)v64;
              atomic_ullong *volatile v65 = v86;
              if ((unint64_t)v86 >= v87)
              {
                uint64_t v68 = std::vector<turi::flexible_type>::__push_back_slow_path<turi::flexible_type const&>((uint64_t *)&v85, (atomic_ullong *volatile *)v59);
              }
              else
              {
                *double v86 = 0;
                *((_DWORD *)v65 + 2) = 0;
                *((unsigned char *)v65 + 12) = 0;
                if ((atomic_ullong *volatile *)v59 != v65)
                {
                  atomic_ullong *volatile v66 = *(atomic_ullong *volatile *)v59;
                  *(atomic_ullong *volatile *)((char *)v65 + 5) = *(atomic_ullong *volatile *)(v59 + 5);
                  *atomic_ullong *volatile v65 = v66;
                  unsigned int v67 = *(unsigned __int8 *)(v59 + 12);
                  *((unsigned char *)v65 + 12) = v67;
                  if (v67 <= 9 && ((1 << v67) & 0x33C) != 0) {
                    atomic_fetch_add(*v65, 1uLL);
                  }
                }
                uint64_t v68 = (uint64_t)(v65 + 2);
              }
              double v86 = (atomic_ullong *volatile *)v68;
              uint64_t v69 = v59 + 16;
              v59 += 32;
            }
            while (v69 != v58);
          }
          __src.__r_.__value_.__r.__words[0] = (std::string::size_type)&v81;
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__src);
        }
        turi::gl_sarray_range::iterator::increment((turi::gl_sarray_range::iterator *)v84);
      }
      turi::gl_sarray_range::~gl_sarray_range((turi::gl_sarray_range *)&v102);
      __src.__r_.__value_.__s.__data_[0] = turi::infer_type_of_list(&v88);
      __src.__r_.__value_.__s.__data_[1] = turi::infer_type_of_list((uint64_t *)&v85);
      std::vector<turi::flex_type_enum>::__assign_with_size[abi:ne180100]<turi::flex_type_enum const*,turi::flex_type_enum const*>(&__p, (char *)&__src, &__src.__r_.__value_.__s.__data_[2], 2uLL);
      __src.__r_.__value_.__r.__words[0] = (std::string::size_type)&v85;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&__src);
      __src.__r_.__value_.__r.__words[0] = (std::string::size_type)&v88;
      uint64_t v70 = (void ***)&__src;
    }
    std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](v70);
    goto LABEL_147;
  }
  __src.__r_.__value_.__s.__data_[0] = 1;
  std::vector<turi::flex_type_enum>::__assign_with_size[abi:ne180100]<turi::flex_type_enum const*,turi::flex_type_enum const*>(&__p, (char *)&__src, &__src.__r_.__value_.__s.__data_[1], 1uLL);
LABEL_147:
  (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 88))(&__src, a1);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)__src.__r_.__value_.__l.__data_ + 360))(&v79);
  turi::gl_sframe::gl_sframe(v78, (uint64_t)&v79);
  if (v80) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v80);
  }
  if (__src.__r_.__value_.__l.__size_) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__src.__r_.__value_.__l.__size_);
  }
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&v91);
  __src.__r_.__value_.__r.__words[0] = (std::string::size_type)&v92;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__src);
  if (__p)
  {
    uint64_t v95 = __p;
    operator delete(__p);
  }
  __src.__r_.__value_.__r.__words[0] = (std::string::size_type)&v97;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__src);
}

void sub_223EFD464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, boost::detail::shared_count *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char **a17, uint64_t a18, char *a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  turi::gl_sarray_range::~gl_sarray_range((turi::gl_sarray_range *)(v47 - 208));
  a17 = &a19;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a17);
  a19 = &a22;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a19);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&a25);
  a25 = &a33;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a25);
  if (__p)
  {
    a37 = (uint64_t)__p;
    operator delete(__p);
  }
  a25 = &a39;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a25);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::unstack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  (*(void (**)(const void ***__return_ptr))(*(void *)a1 + 24))(&v21);
  int v6 = (long long *)std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>((uint64_t)v21, (uint64_t)v22, (unsigned __int8 **)a2);
  if (v6 == v22)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(&v18, "column name ");
    int v11 = *(char *)(a2 + 23);
    if (v11 >= 0) {
      std::string v12 = (unsigned __int8 *)a2;
    }
    else {
      std::string v12 = *(unsigned __int8 **)a2;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v13 = *(void *)(a2 + 8);
    }
    long long v14 = std::string::append(&v18, (const std::string::value_type *)v12, v13);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    long long v16 = std::string::append(__p, " not found");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    exception[2] = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)exception = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
  }
  std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::string *,std::string *,std::string *>((uint64_t)&v18, (long long *)((char *)v6 + 24), v22, (uint64_t)v6);
  int v8 = v7;
  for (uint64_t i = v22; i != v8; uint64_t i = (long long *)((char *)i - 24))
  {
    if (*((char *)i - 1) < 0) {
      operator delete(*((void **)i - 3));
    }
  }
  uint64_t v22 = v8;
  if (*(char *)(a3 + 23) < 0)
  {
    if (*(void *)(a3 + 8))
    {
LABEL_9:
      turi::aggregate::CONCAT(a2, &v18);
      std::pair<std::string const,turi::aggregate::groupby_descriptor_type>::pair[abi:ne180100]<std::string const&,turi::aggregate::groupby_descriptor_type,0>(__p, (long long *)a3, (uint64_t)&v18);
      std::map<std::string,turi::aggregate::groupby_descriptor_type>::map[abi:ne180100]((uint64_t)&v20, (const void **)&__p[0].__r_.__value_.__l.__data_, 1);
      turi::gl_sframe::groupby(a1, &v21, &v20);
    }
  }
  else if (*(unsigned char *)(a3 + 23))
  {
    goto LABEL_9;
  }
  turi::aggregate::CONCAT(a2, &v18);
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  __p[1] = v18;
  memset(&v18, 0, sizeof(v18));
  long long v24 = v19;
  long long v19 = 0uLL;
  std::map<std::string,turi::aggregate::groupby_descriptor_type>::map[abi:ne180100]((uint64_t)&v20, (const void **)&__p[0].__r_.__value_.__l.__data_, 1);
  turi::gl_sframe::groupby(a1, &v21, &v20);
}

void sub_223EFDA7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v30 & 1) == 0)
    {
LABEL_8:
      std::string __p = &a20;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
      _Unwind_Resume(a1);
    }
  }
  else if (!v30)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v29);
  goto LABEL_8;
}

void sub_223EFDB3C()
{
}

void turi::gl_sframe::unstack(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (a2[1] - *a2 != 48)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "columns must be a vector of two strings");
  }
  (*(void (**)(const void ***__return_ptr))(*(void *)a1 + 24))(&v24);
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  if (*a2 != v7)
  {
    int v8 = v25;
    do
    {
      unint64_t v9 = (long long *)std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>((uint64_t)v24, (uint64_t)v8, (unsigned __int8 **)v6);
      if (v9 == v25)
      {
        std::string v12 = __cxa_allocate_exception(0x18uLL);
        std::string::basic_string[abi:ne180100]<0>(&v21, "column name ");
        int v13 = *(char *)(v6 + 23);
        if (v13 >= 0) {
          long long v14 = (unsigned __int8 *)v6;
        }
        else {
          long long v14 = *(unsigned __int8 **)v6;
        }
        if (v13 >= 0) {
          std::string::size_type v15 = *(unsigned __int8 *)(v6 + 23);
        }
        else {
          std::string::size_type v15 = *(void *)(v6 + 8);
        }
        long long v16 = std::string::append(&v21, (const std::string::value_type *)v14, v15);
        long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
        __p[0].__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v17;
        v16->__r_.__value_.__l.__size_ = 0;
        v16->__r_.__value_.__r.__words[2] = 0;
        v16->__r_.__value_.__r.__words[0] = 0;
        std::string v18 = std::string::append(__p, " not found");
        long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
        v12[2] = *((void *)&v18->__r_.__value_.__l + 2);
        *(_OWORD *)std::string v12 = v19;
        v18->__r_.__value_.__l.__size_ = 0;
        v18->__r_.__value_.__r.__words[2] = 0;
        v18->__r_.__value_.__r.__words[0] = 0;
      }
      std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::string *,std::string *,std::string *>((uint64_t)&v21, (long long *)((char *)v9 + 24), v25, (uint64_t)v9);
      int v8 = v10;
      for (uint64_t i = v25; i != v8; uint64_t i = (long long *)((char *)i - 24))
      {
        if (*((char *)i - 1) < 0) {
          operator delete(*((void **)i - 3));
        }
      }
      uint64_t v25 = v8;
      v6 += 24;
    }
    while (v6 != v7);
  }
  if (*(char *)(a3 + 23) < 0)
  {
    if (*(void *)(a3 + 8))
    {
LABEL_13:
      turi::aggregate::CONCAT(*a2, *a2 + 24, &v21);
      std::pair<std::string const,turi::aggregate::groupby_descriptor_type>::pair[abi:ne180100]<std::string const&,turi::aggregate::groupby_descriptor_type,0>(__p, (long long *)a3, (uint64_t)&v21);
      std::map<std::string,turi::aggregate::groupby_descriptor_type>::map[abi:ne180100]((uint64_t)&v23, (const void **)&__p[0].__r_.__value_.__l.__data_, 1);
      turi::gl_sframe::groupby(a1, &v24, &v23);
    }
  }
  else if (*(unsigned char *)(a3 + 23))
  {
    goto LABEL_13;
  }
  turi::aggregate::CONCAT(*a2, *a2 + 24, &v21);
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  __p[1] = v21;
  memset(&v21, 0, sizeof(v21));
  long long v27 = v22;
  long long v22 = 0uLL;
  std::map<std::string,turi::aggregate::groupby_descriptor_type>::map[abi:ne180100]((uint64_t)&v23, (const void **)&__p[0].__r_.__value_.__l.__data_, 1);
  turi::gl_sframe::groupby(a1, &v24, &v23);
}

void sub_223EFDE9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, char a17, void *a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  std::string __p = &a20;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::sort(uint64_t a1@<X0>, void *a2@<X1>, std::vector<int>::value_type a3@<W2>, void *a4@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v11);
  uint64_t v7 = v11;
  std::vector<int>::size_type v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 3);
  std::vector<int>::value_type __x = a3;
  std::vector<int>::vector(&v10, v8, &__x);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, void *, std::vector<int> *))(*(void *)v7 + 344))(&v13, v7, a2, &v10);
  turi::gl_sframe::gl_sframe(a4, (uint64_t)&v13);
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  if (v10.__begin_)
  {
    v10.__end_ = v10.__begin_;
    operator delete(v10.__begin_);
  }
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
}

void sub_223EFE070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (__p) {
    operator delete(__p);
  }
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::sort(uint64_t a1@<X0>, uint64_t a2@<X1>, std::vector<int>::value_type a3@<W2>, void *a4@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v16);
  uint64_t v7 = v16;
  std::vector<int>::size_type v8 = *(long long **)a2;
  unint64_t v9 = *(void *)(a2 + 8);
  long long v14 = 0;
  uint64_t v15 = 0;
  uint64_t v13 = 0;
  v12.__begin_ = (std::vector<int>::pointer)&v13;
  LOBYTE(v12.__end_) = 0;
  if (v9)
  {
    std::vector<std::string>::__vallocate[abi:ne180100](&v13, v9);
    long long v14 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v15, v8, (long long *)((char *)v8 + 24 * v9), v14);
    std::vector<int>::size_type v10 = *(void *)(a2 + 8);
  }
  else
  {
    std::vector<int>::size_type v10 = 0;
  }
  std::vector<int>::value_type __x = a3;
  std::vector<int>::vector(&v12, v10, &__x);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *, std::vector<int> *))(*(void *)v7 + 344))(&v18, v7, &v13, &v12);
  turi::gl_sframe::gl_sframe(a4, (uint64_t)&v18);
  if (v19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v19);
  }
  if (v12.__begin_)
  {
    v12.__end_ = v12.__begin_;
    operator delete(v12.__begin_);
  }
  v12.__begin_ = (std::vector<int>::pointer)&v13;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v12);
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
}

void sub_223EFE1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sframe::dropna(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 88))(&v5);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v5 + 376))(&v7);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  uint64_t v5 = v9;
  if (v9 != 2)
  {
    uint64_t v4[2] = &v5;
    turi::gl_sframe::dropna(std::vector<std::string> const&,std::string,BOOL)const::$_0::operator()();
  }
  uint64_t v3 = *(std::__shared_weak_count **)(v8 + 24);
  v4[0] = *(void *)(v8 + 16);
  v4[1] = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    turi::gl_sframe::gl_sframe(a2, (uint64_t)v4);
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  else
  {
    turi::gl_sframe::gl_sframe(a2, (uint64_t)v4);
  }
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear(&v7);
}

void sub_223EFE3B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, char a14)
{
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::dropna(std::vector<std::string> const&,std::string,BOOL)const::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", 96);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"ret.size()", 10);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"2", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  std::vector<int>::size_type v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    std::vector<int> v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", "operator()", 927, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  uint64_t v13 = v16;
  turi::gl_sframe::dropna(std::vector<std::string> const&,std::string,BOOL)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223EFE564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::gl_sframe::fillna(turi::gl_sframe *a1@<X0>, const void **a2@<X1>, uint64_t a3@<X2>, turi::gl_sframe *a4@<X8>)
{
  int v24[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  turi::gl_sframe::gl_sframe(a4, a1);
  turi::gl_sframe::select_column((uint64_t)a1, (uint64_t)v21);
  memset(v24, 0, 13);
  if (v24 != (atomic_ullong **)a3)
  {
    *(atomic_ullong **)((char *)v24 + 5) = *(atomic_ullong **)(a3 + 5);
    v24[0] = *(atomic_ullong **)a3;
    BYTE4(v24[1]) = *(unsigned char *)(a3 + 12);
    if (BYTE4(v24[1]) <= 9u && ((1 << SBYTE4(v24[1])) & 0x33C) != 0) {
      atomic_fetch_add(v24[0], 1uLL);
    }
  }
  turi::gl_sarray::fillna((uint64_t)v21, (uint64_t)v24, (uint64_t)v22);
  turi::gl_sframe::replace_add_column((uint64_t)a4, (uint64_t)v22, a2);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v22);
  switch(BYTE4(v24[1]))
  {
    case 2:
      if (atomic_fetch_add(v24[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v9 = v24[0];
        if (v24[0])
        {
          if (*((char *)v24[0] + 31) < 0) {
            operator delete(*((void **)v24[0] + 1));
          }
          std::vector<int>::size_type v10 = v9;
          uint64_t v11 = 0x1012C404EF22A49;
          goto LABEL_38;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(v24[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v18 = v24[0];
        if (v24[0])
        {
          long long v19 = (void *)v24[0][1];
          if (v19)
          {
            v24[0][2] = (atomic_ullong)v19;
            operator delete(v19);
          }
          std::vector<int>::size_type v10 = v18;
          uint64_t v11 = 0x1080C409938AC02;
          goto LABEL_38;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(v24[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        std::vector<int> v12 = v24[0];
        if (v24[0])
        {
          uint64_t v23 = (void **)(v24[0] + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v23);
          goto LABEL_33;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(v24[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        std::vector<int> v12 = v24[0];
        if (v24[0])
        {
          uint64_t v23 = (void **)(v24[0] + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v23);
LABEL_33:
          std::vector<int>::size_type v10 = v12;
          uint64_t v11 = 0x1020C405E66F15BLL;
          goto LABEL_38;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(v24[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v20 = v24[0];
        if (v24[0])
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v24[0] + 2);
          std::vector<int>::size_type v10 = v20;
          unsigned int v17 = -235920773;
          goto LABEL_37;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(v24[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v13 = v24[0];
        if (v24[0])
        {
          long long v14 = (void *)v24[0][6];
          if (v14)
          {
            v24[0][7] = (atomic_ullong)v14;
            operator delete(v14);
          }
          char v15 = (void *)v13[3];
          if (v15)
          {
            void v13[4] = (atomic_ullong)v15;
            operator delete(v15);
          }
          uint64_t v16 = (std::__shared_weak_count *)v13[2];
          if (v16) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v16);
          }
          std::vector<int>::size_type v10 = v13;
          unsigned int v17 = 2071181815;
LABEL_37:
          uint64_t v11 = v17 | 0x1030C4000000000;
LABEL_38:
          MEMORY[0x22A614FA0](v10, v11);
        }
      }
      break;
    default:
      break;
  }
  memset(v24, 0, 13);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v21);
}

void sub_223EFE940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&a14);
  switch(*(unsigned char *)(v15 - 44))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v15 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v17 = *(void *)(v15 - 56);
      if (!v17) {
        goto LABEL_27;
      }
      if (*(char *)(v17 + 31) < 0) {
        operator delete(*(void **)(v17 + 8));
      }
      uint64_t v18 = (void *)v17;
      uint64_t v19 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v15 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v23 = *(void **)(v15 - 56);
      if (!v23) {
        goto LABEL_27;
      }
      long long v24 = (void *)v23[1];
      if (v24)
      {
        v23[2] = v24;
        operator delete(v24);
      }
      uint64_t v18 = v23;
      uint64_t v19 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v15 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v20 = *(void **)(v15 - 56);
      if (!v20) {
        goto LABEL_27;
      }
      *(void *)(v15 - 64) = v20 + 1;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)(v15 - 64));
      goto LABEL_21;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v15 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v20 = *(void **)(v15 - 56);
      if (!v20) {
        goto LABEL_27;
      }
      *(void *)(v15 - 64) = v20 + 1;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v15 - 64));
LABEL_21:
      uint64_t v18 = v20;
      uint64_t v19 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v15 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v25 = *(void *)(v15 - 56);
      if (!v25) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(v25 + 16));
      uint64_t v18 = (void *)v25;
      unsigned int v22 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v15 - 56), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      std::string v21 = *(void **)(v15 - 56);
      if (!v21) {
        goto LABEL_27;
      }
      uint64_t v18 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v21);
      unsigned int v22 = 2071181815;
LABEL_25:
      uint64_t v19 = v22 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v18, v19);
LABEL_27:
      *(void *)(v15 - 56) = 0;
      *(_DWORD *)(v15 - 48) = 0;
      *(unsigned char *)(v15 - 44) = 0;
      turi::gl_sarray::~gl_sarray((turi::gl_sarray *)&a9);
      *long long v14 = &unk_26D759E10;
      uint64_t v26 = (std::__shared_weak_count *)v14[2];
      if (v26) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v26);
      }
      _Unwind_Resume(a1);
      return;
    default:
      goto LABEL_27;
  }
}

void *turi::operator<<(void *a1, turi::gl_sframe *this)
{
  uint64_t v2 = this;
  v62[94] = *(void ***)MEMORY[0x263EF8340];
  turi::gl_sframe::head(this, v60);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"\n", 1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"Columns:\n", 9);
  (*(void (**)(uint64_t *__return_ptr, turi::gl_sframe *))(*(void *)v2 + 24))(&v58, v2);
  (*(void (**)(void **__return_ptr, turi::gl_sframe *))(*(void *)v2 + 8))(__p, v2);
  if (v59 != v58)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    do
    {
      uint64_t v6 = v2;
      uint64_t v7 = a1;
      uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"    ", 4);
      int v9 = *(char *)(v58 + v4 + 23);
      if (v9 >= 0) {
        uint64_t v10 = v58 + v4;
      }
      else {
        uint64_t v10 = *(void *)(v58 + v4);
      }
      if (v9 >= 0) {
        uint64_t v11 = *(unsigned __int8 *)(v58 + v4 + 23);
      }
      else {
        uint64_t v11 = *(void *)(v58 + v4 + 8);
      }
      std::vector<int> v12 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, v10, v11);
      uint64_t v13 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)"\t", 1);
      unint64_t v14 = *((char *)__p[0] + v5);
      uint64_t v15 = "undefined";
      if (v14 <= 9) {
        uint64_t v15 = off_2646D6D30[v14];
      }
      size_t v16 = strlen(v15);
      uint64_t v17 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13, (uint64_t)v15, v16);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)"\n", 1);
      ++v5;
      v4 += 24;
      a1 = v7;
      uint64_t v2 = v6;
    }
    while (v5 < 0xAAAAAAAAAAAAAAABLL * ((v59 - v58) >> 3));
  }
  if (turi::gl_sframe::has_size(v2))
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"Rows: ", 6);
    (**(void (***)(turi::gl_sframe *))v2)(v2);
    uint64_t v18 = (void *)std::ostream::operator<<();
    uint64_t v19 = "\n";
    uint64_t v20 = 1;
  }
  else
  {
    uint64_t v19 = "Rows: ?\n";
    uint64_t v20 = 8;
    uint64_t v18 = a1;
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)v19, v20);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"Data:\n", 6);
  uint64_t v44 = (void **)a1;
  std::deque<std::string>::deque<std::__wrap_iter<std::string*>,0>((uint64_t)&v53, v58, v59);
  if (v56)
  {
    unint64_t v21 = 0;
    uint64_t v50 = 0;
    long long v51 = 0;
    unint64_t v52 = 0;
    uint64_t v47 = 0;
    unint64_t v48 = 0;
    unint64_t v49 = 0;
    while (1)
    {
      unint64_t v22 = *(void *)(v54 + 8 * (v55 / 0xAA)) + 24 * (v55 % 0xAA);
      uint64_t v23 = v51;
      if ((unint64_t)v51 >= v52)
      {
        uint64_t v25 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>(&v50, (long long *)v22);
      }
      else
      {
        if (*(char *)(v22 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(v51, *(const std::string::value_type **)v22, *(void *)(v22 + 8));
        }
        else
        {
          long long v24 = *(_OWORD *)v22;
          v51->__r_.__value_.__r.__words[2] = *(void *)(v22 + 16);
          *(_OWORD *)&v23->__r_.__value_.__l.__data_ = v24;
        }
        uint64_t v25 = v23 + 1;
      }
      long long v51 = v25;
      unint64_t v26 = *(void *)(v54 + 8 * (v55 / 0xAA)) + 24 * (v55 % 0xAA);
      if (*(char *)(v26 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v45, *(const std::string::value_type **)v26, *(void *)(v26 + 8));
      }
      else
      {
        long long v27 = *(_OWORD *)v26;
        v45.__r_.__value_.__r.__words[2] = *(void *)(v26 + 16);
        *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v27;
      }
      uint64_t v46 = 14;
      unint64_t v28 = v48;
      if (v48 >= v49)
      {
        uint64_t v30 = (uint64_t)(v48 - v47) >> 5;
        unint64_t v31 = v30 + 1;
        if ((unint64_t)(v30 + 1) >> 59) {
          std::vector<float>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v32 = v49 - v47;
        if ((uint64_t)(v49 - v47) >> 4 > v31) {
          unint64_t v31 = v32 >> 4;
        }
        if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v33 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v33 = v31;
        }
        void v62[4] = (void **)&v49;
        long long v34 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<turi::flexible_type,turi::flexible_type>>>((uint64_t)&v49, v33);
        uint64_t v35 = &v34[4 * v30];
        v62[0] = v34;
        v62[1] = v35;
        v62[3] = &v34[4 * v36];
        long long v37 = *(_OWORD *)&v45.__r_.__value_.__l.__data_;
        v35[2] = (void *)v45.__r_.__value_.__r.__words[2];
        *(_OWORD *)uint64_t v35 = v37;
        memset(&v45, 0, sizeof(v45));
        uint64_t v35[3] = (void *)v46;
        v62[2] = v35 + 4;
        std::vector<std::pair<std::string,unsigned long>>::__swap_out_circular_buffer(&v47, v62);
        unint64_t v38 = v48;
        std::__split_buffer<std::pair<std::string,unsigned long>>::~__split_buffer((uint64_t)v62);
        unint64_t v48 = v38;
        if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v45.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        long long v29 = *(_OWORD *)&v45.__r_.__value_.__l.__data_;
        *(void *)(v48 + 16) = *((void *)&v45.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v28 = v29;
        memset(&v45, 0, sizeof(v45));
        *(void *)(v28 + 24) = v46;
        unint64_t v48 = v28 + 32;
      }
      std::deque<std::string>::pop_front(&v53);
      if (v21 <= 3)
      {
        ++v21;
        if (v56) {
          continue;
        }
      }
      turi::table_printer::table_printer(v62, &v47, 1);
      v62[6] = v44;
      turi::table_printer::print_header((turi::table_printer *)v62);
      turi::gl_sframe::select_columns((uint64_t)v60, &v45);
      turi::gl_sframe::range_iterator((turi::gl_sframe *)&v45, 0, 0xFFFFFFFFFFFFFFFFLL);
    }
  }
  if (turi::gl_sframe::has_size(v2))
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"[", 1);
    (**(void (***)(turi::gl_sframe *))v2)(v2);
    uint64_t v39 = (void *)std::ostream::operator<<();
    unsigned int v40 = " rows x ";
    uint64_t v41 = 8;
  }
  else
  {
    unsigned int v40 = "? rows x ";
    uint64_t v41 = 9;
    uint64_t v39 = a1;
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v39, (uint64_t)v40, v41);
  std::string v42 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v42, (uint64_t)" columns]\n", 10);
  std::deque<std::string>::~deque[abi:ne180100](&v53);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v62[0] = (void **)&v58;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](v62);
  v60[0] = &unk_26D759E10;
  if (v61) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v61);
  }
  return a1;
}

void sub_223EFF24C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,char *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,std::__shared_weak_count *a43,uint64_t a44,char a45)
{
  if (__p)
  {
    a36 = (uint64_t)__p;
    operator delete(__p);
  }
  a29 = &a38;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a29);
  a41 = &unk_26D759E10;
  if (a43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a43);
  }
  _Unwind_Resume(a1);
}

uint64_t std::deque<std::string>::pop_front(void *a1)
{
  unint64_t v2 = a1[4];
  unint64_t v3 = *(void *)(a1[1] + 8 * (v2 / 0xAA)) + 24 * (v2 % 0xAA);
  if (*(char *)(v3 + 23) < 0)
  {
    operator delete(*(void **)v3);
    unint64_t v2 = a1[4];
  }
  uint64_t v4 = a1[5] - 1;
  a1[4] = v2 + 1;
  a1[5] = v4;
  return std::deque<std::string>::__maybe_remove_front_spare[abi:ne180100]((uint64_t)a1, 1);
}

uint64_t turi::gl_sframe_range::end(turi::gl_sframe_range *this)
{
  return *(void *)(*(void *)this + 88) - *(void *)(*(void *)this + 72);
}

uint64_t turi::table_printer::print_row<turi::flexible_type>(void *a1, uint64_t *a2)
{
  int v24[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  uint64_t v2 = (a2[1] - *a2) >> 4;
  uint64_t v22 = (uint64_t)(a1[1] - *a1) >> 5;
  uint64_t v23 = (void *)v2;
  if (v2 != v22)
  {
    uint64_t v17 = &v23;
    uint64_t v18 = &v22;
    turi::table_printer::print_row<turi::flexible_type>(std::vector<turi::flexible_type> const&)const::{lambda(void)#1}::operator()();
  }
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v17);
  LOBYTE(v23) = 124;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v17, (uint64_t)&v23, 1);
  uint64_t v6 = *a2;
  if (a2[1] != *a2)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    uint64_t v9 = 24;
    do
    {
      turi::table_printer::os_log_value((turi::table_printer *)v8, (char *)(v6 + v7), v5);
      uint64_t v10 = *a2 + v7;
      uint64_t v23 = &unk_26D75A050;
      memset(v24, 0, 13);
      if ((atomic_ullong **)v10 != v24)
      {
        uint64_t v11 = *(atomic_ullong **)v10;
        *(atomic_ullong **)((char *)v24 + 5) = *(atomic_ullong **)(v10 + 5);
        v24[0] = v11;
        unsigned int v12 = *(unsigned __int8 *)(v10 + 12);
        BYTE4(v24[1]) = v12;
        BOOL v13 = v12 > 9;
        int v14 = (1 << v12) & 0x33C;
        if (!v13 && v14 != 0) {
          atomic_fetch_add(v24[0], 1uLL);
        }
      }
      turi::table_internal::_print_flexible_type(&v17, *(void *)(*a1 + v9), (turi::flexible_type_impl *)v24);
      turi::table_internal::table_printer_element<turi::flexible_type,void>::~table_printer_element((uint64_t)&v23);
      ++v8;
      uint64_t v6 = *a2;
      v7 += 16;
      v9 += 32;
    }
    while (v8 < (a2[1] - *a2) >> 4);
  }
  turi::table_printer::_p((uint64_t)a1);
  uint64_t v17 = (void **)*MEMORY[0x263F8C2C8];
  *(void ***)((char *)&v17 + (void)*(v17 - 3)) = *(void ***)(MEMORY[0x263F8C2C8] + 24);
  uint64_t v18 = (uint64_t *)(MEMORY[0x263F8C318] + 16);
  if (v20 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x22A614E30](&v21);
}

void sub_223EFF6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

turi::sframe_rows **turi::gl_sframe_range::gl_sframe_range(turi::sframe_rows **a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v16 = a4;
  uint64_t v17 = a3;
  *a1 = 0;
  a1[1] = 0;
  std::allocate_shared[abi:ne180100]<turi::sframe_reader_buffer,std::allocator<turi::sframe_reader_buffer>,std::shared_ptr<turi::sframe_reader> &,unsigned long &,unsigned long &,void>(a2, &v17, &v16, &v15);
  long long v5 = v15;
  long long v15 = 0uLL;
  uint64_t v6 = (std::__shared_weak_count *)a1[1];
  *(_OWORD *)a1 = v5;
  if (v6)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    if (*((void *)&v15 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v15 + 1));
    }
  }
  uint64_t v7 = *a1;
  unint64_t v8 = *((void *)*a1 + 13);
  unint64_t v9 = *((void *)*a1 + 11);
  if (v8 < v9)
  {
    uint64_t v10 = *((void *)v7 + 8);
    if (*(void *)v7 == *((void *)v7 + 1))
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = **(void **)v7;
      if (v11) {
        uint64_t v11 = (uint64_t)(*(void *)(v11 + 8) - *(void *)v11) >> 4;
      }
    }
    if (v10 == v11)
    {
      uint64_t v12 = *((void *)v7 + 10);
      if (*((void *)v7 + 12) >= v9 - v12) {
        unint64_t v13 = v9 - v12;
      }
      else {
        unint64_t v13 = *((void *)v7 + 12);
      }
      turi::sframe_reader::read_rows(*((turi::sframe_reader **)v7 + 6), v12, v13 + v12, *a1);
      uint64_t v10 = 0;
      *((void *)v7 + 10) += v13;
      unint64_t v8 = *((void *)v7 + 13);
    }
    *((void *)v7 + 13) = v8 + 1;
    *((void *)v7 + 8) = v10 + 1;
    if (!*((unsigned char *)v7 + 24)) {
      turi::sframe_rows::ensure_unique(v7);
    }
    *((void *)v7 + 4) = v7;
    *((void *)v7 + 5) = v10;
  }
  return a1;
}

void sub_223EFF83C(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe_range::iterator::increment(turi::gl_sframe_range::iterator *this)
{
  uint64_t v1 = (uint64_t *)*((void *)this + 1);
  ++*(void *)this;
  uint64_t v2 = *v1;
  unint64_t v3 = *(void *)(*v1 + 104);
  unint64_t v4 = *(void *)(*v1 + 88);
  if (v3 < v4)
  {
    uint64_t v5 = *(void *)(v2 + 64);
    if (*(void *)v2 == *(void *)(v2 + 8))
    {
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v6 = **(void **)v2;
      if (v6) {
        uint64_t v6 = (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 4;
      }
    }
    if (v5 == v6)
    {
      uint64_t v7 = *(void *)(v2 + 80);
      if (*(void *)(v2 + 96) >= v4 - v7) {
        unint64_t v8 = v4 - v7;
      }
      else {
        unint64_t v8 = *(void *)(v2 + 96);
      }
      turi::sframe_reader::read_rows(*(turi::sframe_reader **)(v2 + 48), v7, v8 + v7, (turi::sframe_rows *)v2);
      uint64_t v5 = 0;
      *(void *)(v2 + 80) += v8;
      unint64_t v3 = *(void *)(v2 + 104);
    }
    *(void *)(v2 + 104) = v3 + 1;
    *(void *)(v2 + 64) = v5 + 1;
    if (!*(unsigned char *)(v2 + 24)) {
      turi::sframe_rows::ensure_unique((turi::sframe_rows *)v2);
    }
    *(void *)(v2 + 32) = v2;
    *(void *)(v2 + 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v5;
  }
}

uint64_t turi::gl_sframe_range::iterator::dereference(turi::gl_sframe_range::iterator *this)
{
  return **((void **)this + 1) + 32;
}

uint64_t turi::gl_sarray_reference::operator=(uint64_t a1, const turi::gl_sarray *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  turi::gl_sarray::gl_sarray((turi::gl_sarray *)v5, a2);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)v3 + 32))(v3, v5, a1 + 48);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v5);
  return a1;
}

void sub_223EFF9B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)va);
  _Unwind_Resume(a1);
}

turi::gl_sarray *turi::gl_sarray_reference::gl_sarray_reference(turi::gl_sarray *a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = turi::gl_sarray::gl_sarray(a1);
  *(void *)uint64_t v6 = &unk_26D759E80;
  *((void *)v6 + 5) = a2;
  uint64_t v7 = (std::string *)((char *)v6 + 48);
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    v7->__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  return a1;
}

void sub_223EFFA44(_Unwind_Exception *a1)
{
  turi::gl_sarray::~gl_sarray(v1);
  _Unwind_Resume(a1);
}

uint64_t turi::gl_sarray_reference::operator=(uint64_t a1, uint64_t a2)
{
  return a1;
}

void turi::gl_sarray_reference::get_proxy(turi::gl_sarray_reference *this@<X0>, void *a2@<X8>)
{
  turi::gl_sframe::select_column(*((void *)this + 5), (uint64_t)v3);
  turi::gl_sarray::get_proxy((uint64_t)v3, a2);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v3);
}

void sub_223EFFAF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)va);
  _Unwind_Resume(a1);
}

turi::gl_sarray *turi::const_gl_sarray_reference::const_gl_sarray_reference(turi::gl_sarray *a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = turi::gl_sarray::gl_sarray(a1);
  *(void *)uint64_t v6 = &unk_26D759EA8;
  *((void *)v6 + 5) = a2;
  uint64_t v7 = (std::string *)((char *)v6 + 48);
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    v7->__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  return a1;
}

void sub_223EFFB8C(_Unwind_Exception *a1)
{
  turi::gl_sarray::~gl_sarray(v1);
  _Unwind_Resume(a1);
}

void turi::const_gl_sarray_reference::get_proxy(turi::const_gl_sarray_reference *this@<X0>, void *a2@<X8>)
{
  turi::gl_sframe::select_column(*((void *)this + 5), (uint64_t)v3);
  turi::gl_sarray::get_proxy((uint64_t)v3, a2);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)v3);
}

void sub_223EFFBF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)va);
  _Unwind_Resume(a1);
}

void turi::gl_sframe_writer_impl::gl_sframe_writer_impl(turi::sframe *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  long long v8 = turi::sframe::sframe(a1);
  *((void *)v8 + 37) = 0;
  *((void *)v8 + 38) = 0;
  *((void *)v8 + 39) = 0;
  uint64_t v9 = turi::SFRAME_DEFAULT_NUM_SEGMENTS;
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  if (a4 == -1) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = a4;
  }
  turi::sframe::open_for_write((uint64_t)a1, a2, a3, __p, v10, 1);
}

void sub_223EFFEB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  turi::sframe::~sframe(v15);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::resize(uint64_t *result, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((result[1] - *result) >> 5);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3) {
    return (uint64_t *)std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__append(result, v4);
  }
  if (!v3) {
    return std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__base_destruct_at_end[abi:ne180100](result, *result + 96 * a2);
  }
  return result;
}

void turi::gl_sframe_writer_impl::write(turi::gl_sframe_writer_impl *this, void ***a2, unint64_t a3)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v47 = (char *)a3;
  *(void *)&double v55 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)this + 38) - *((void *)this + 37)) >> 5);
  if (*(void *)&v55 <= a3)
  {
    uint64_t v50 = &v47;
    long long v51 = (std::__shared_weak_count *)&v55;
    turi::gl_sframe_writer_impl::write(turi::flexible_type const&,unsigned long)::$_0::operator()();
  }
  switch(*((unsigned char *)a2 + 12))
  {
    case 0:
      uint64_t v5 = *a2;
      char v57 = 0;
      int v56 = 0;
      double v55 = *(double *)&v5;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      uint64_t v47 = 0;
      uint64_t v50 = &v47;
      LOBYTE(v51) = 0;
      uint64_t v47 = (char *)operator new(0x10uLL);
      uint64_t v48 = (uint64_t)v47;
      unint64_t v49 = v47 + 16;
      uint64_t v48 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<turi::flexible_type>,turi::flexible_type*,turi::flexible_type*,turi::flexible_type*>((uint64_t)&v49, (uint64_t *)&v55, &v58, (uint64_t)v47);
      switch(v57)
      {
        case 2:
          goto LABEL_53;
        case 3:
          goto LABEL_73;
        case 4:
          goto LABEL_61;
        case 5:
          goto LABEL_78;
        case 8:
          goto LABEL_82;
        case 9:
          goto LABEL_64;
        default:
          goto LABEL_87;
      }
    case 1:
      unint64_t v26 = *a2;
      int v56 = 0;
      char v57 = 1;
      double v55 = *(double *)&v26;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      uint64_t v47 = 0;
      uint64_t v50 = &v47;
      LOBYTE(v51) = 0;
      uint64_t v47 = (char *)operator new(0x10uLL);
      uint64_t v48 = (uint64_t)v47;
      unint64_t v49 = v47 + 16;
      uint64_t v48 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<turi::flexible_type>,turi::flexible_type*,turi::flexible_type*,turi::flexible_type*>((uint64_t)&v49, (uint64_t *)&v55, &v58, (uint64_t)v47);
      switch(v57)
      {
        case 2:
          goto LABEL_53;
        case 3:
          goto LABEL_73;
        case 4:
          goto LABEL_61;
        case 5:
          goto LABEL_78;
        case 8:
          goto LABEL_82;
        case 9:
          goto LABEL_64;
        default:
          goto LABEL_87;
      }
    case 2:
      double v55 = 0.0;
      int v56 = 0;
      char v57 = 0;
      turi::flexible_type::operator=<std::string>((uint64_t)&v55);
    case 3:
      uint64_t v7 = *a2;
      long long v8 = *a2 + 1;
      uint64_t v9 = *a2 + 2;
      std::vector<turi::flexible_type>::vector(&v47, (uint64_t)(*v9 - *v8) >> 3);
      uint64_t v10 = (void *)*v8;
      if (*v9 != *v8)
      {
        uint64_t v11 = 0;
        unint64_t v12 = 0;
        do
        {
          unint64_t v13 = &v47[v11];
          switch(v47[v11 + 12])
          {
            case 2:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)v13, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v14 = *(atomic_ullong *volatile *)v13;
                if (!*(void *)v13) {
                  goto LABEL_46;
                }
                if (*((char *)v14 + 31) < 0) {
                  operator delete((void *)v14[1]);
                }
                atomic_ullong *volatile v15 = v14;
                uint64_t v16 = 0x1012C404EF22A49;
                goto LABEL_45;
              }
              break;
            case 3:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)v13, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v23 = *(atomic_ullong *volatile *)v13;
                if (!*(void *)v13) {
                  goto LABEL_46;
                }
                long long v24 = (void *)v23[1];
                if (v24)
                {
                  v23[2] = (atomic_ullong)v24;
                  operator delete(v24);
                }
                atomic_ullong *volatile v15 = v23;
                uint64_t v16 = 0x1080C409938AC02;
                goto LABEL_45;
              }
              break;
            case 4:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)v13, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v17 = *(atomic_ullong *volatile *)v13;
                if (!*(void *)v13) {
                  goto LABEL_46;
                }
                uint64_t v50 = (char **)(v17 + 1);
                std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
                goto LABEL_40;
              }
              break;
            case 5:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)v13, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v17 = *(atomic_ullong *volatile *)v13;
                if (!*(void *)v13) {
                  goto LABEL_46;
                }
                uint64_t v50 = (char **)(v17 + 1);
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
LABEL_40:
                atomic_ullong *volatile v15 = v17;
                uint64_t v16 = 0x1020C405E66F15BLL;
                goto LABEL_45;
              }
              break;
            case 8:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)v13, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v25 = *(atomic_ullong *volatile *)v13;
                if (!*(void *)v13) {
                  goto LABEL_46;
                }
                boost::detail::shared_count::~shared_count((atomic_uint **)v25 + 2);
                atomic_ullong *volatile v15 = v25;
                unsigned int v22 = -235920773;
                goto LABEL_44;
              }
              break;
            case 9:
              if (atomic_fetch_add(*(atomic_ullong *volatile *)v13, 0xFFFFFFFFFFFFFFFFLL) == 1)
              {
                atomic_ullong *volatile v18 = *(atomic_ullong *volatile *)v13;
                if (*(void *)v13)
                {
                  uint64_t v19 = (void *)v18[6];
                  if (v19)
                  {
                    v18[7] = (atomic_ullong)v19;
                    operator delete(v19);
                  }
                  char v20 = (void *)v18[3];
                  if (v20)
                  {
                    void v18[4] = (atomic_ullong)v20;
                    operator delete(v20);
                  }
                  uint64_t v21 = (std::__shared_weak_count *)v18[2];
                  if (v21) {
                    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
                  }
                  atomic_ullong *volatile v15 = v18;
                  unsigned int v22 = 2071181815;
LABEL_44:
                  uint64_t v16 = v22 | 0x1030C4000000000;
LABEL_45:
                  MEMORY[0x22A614FA0](v15, v16);
                }
LABEL_46:
                *(void *)unint64_t v13 = 0;
              }
              break;
            default:
              break;
          }
          *(void *)unint64_t v13 = 0;
          *((_DWORD *)v13 + 2) = 0;
          v13[12] = 1;
          *(void *)unint64_t v13 = v10[v12++];
          uint64_t v10 = v7[1];
          v11 += 16;
        }
        while (v12 < ((unsigned char *)v7[2] - (unsigned char *)v10) >> 3);
      }
      break;
    case 4:
      uint64_t v6 = *a2;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      uint64_t v47 = 0;
      std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&v47, (uint64_t *)v6[1], (uint64_t *)v6[2], ((unsigned char *)v6[2] - (unsigned char *)v6[1]) >> 4);
      break;
    case 5:
      long long v27 = *a2;
      long long v51 = 0;
      v52[0] = 0;
      uint64_t v50 = 0;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__init_with_size[abi:ne180100]<std::pair<turi::flexible_type,turi::flexible_type>*,std::pair<turi::flexible_type,turi::flexible_type>*>(&v50, (uint64_t *)v27[1], (uint64_t *)v27[2], ((unsigned char *)v27[2] - (unsigned char *)v27[1]) >> 5);
      turi::flexible_type_fail(0);
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      double v55 = COERCE_DOUBLE(&v50);
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v55);
      break;
    case 6:
      double v28 = (double)((uint64_t)((void)*a2 << 8) >> 8);
      double v29 = (double)*((int *)a2 + 2) / 1000000.0;
      int v56 = 0;
      char v57 = 1;
      double v55 = v29 + v28;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      uint64_t v47 = 0;
      uint64_t v50 = &v47;
      LOBYTE(v51) = 0;
      uint64_t v47 = (char *)operator new(0x10uLL);
      uint64_t v48 = (uint64_t)v47;
      unint64_t v49 = v47 + 16;
      uint64_t v48 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<turi::flexible_type>,turi::flexible_type*,turi::flexible_type*,turi::flexible_type*>((uint64_t)&v49, (uint64_t *)&v55, &v58, (uint64_t)v47);
      switch(v57)
      {
        case 2:
LABEL_53:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)&v55, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            double v30 = v55;
            if (v55 != 0.0)
            {
              if (*(char *)(*(void *)&v55 + 31) < 0) {
                operator delete(*(void **)(*(void *)&v55 + 8));
              }
              double v31 = v30;
              uint64_t v32 = 0x1012C404EF22A49;
              goto LABEL_86;
            }
          }
          break;
        case 3:
LABEL_73:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)&v55, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            double v43 = v55;
            if (v55 != 0.0)
            {
              uint64_t v44 = *(void **)(*(void *)&v55 + 8);
              if (v44)
              {
                *(void *)(*(void *)&v55 + 16) = v44;
                operator delete(v44);
              }
              double v31 = v43;
              uint64_t v32 = 0x1080C409938AC02;
              goto LABEL_86;
            }
          }
          break;
        case 4:
LABEL_61:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)&v55, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            double v37 = v55;
            if (v55 != 0.0)
            {
              uint64_t v50 = (char **)(*(void *)&v55 + 8);
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
              goto LABEL_81;
            }
          }
          break;
        case 5:
LABEL_78:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)&v55, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            double v37 = v55;
            if (v55 != 0.0)
            {
              uint64_t v50 = (char **)(*(void *)&v55 + 8);
              std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
LABEL_81:
              double v31 = v37;
              uint64_t v32 = 0x1020C405E66F15BLL;
              goto LABEL_86;
            }
          }
          break;
        case 8:
LABEL_82:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)&v55, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            double v45 = v55;
            if (v55 != 0.0)
            {
              boost::detail::shared_count::~shared_count((atomic_uint **)(*(void *)&v55 + 16));
              double v31 = v45;
              unsigned int v42 = -235920773;
              goto LABEL_85;
            }
          }
          break;
        case 9:
LABEL_64:
          if (atomic_fetch_add(*(atomic_ullong *volatile *)&v55, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            double v38 = v55;
            if (v55 != 0.0)
            {
              uint64_t v39 = *(void **)(*(void *)&v55 + 48);
              if (v39)
              {
                *(void *)(*(void *)&v55 + 56) = v39;
                operator delete(v39);
              }
              unsigned int v40 = *(void **)(*(void *)&v38 + 24);
              if (v40)
              {
                *(void *)(*(void *)&v38 + 32) = v40;
                operator delete(v40);
              }
              uint64_t v41 = *(std::__shared_weak_count **)(*(void *)&v38 + 16);
              if (v41) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v41);
              }
              double v31 = v38;
              unsigned int v42 = 2071181815;
LABEL_85:
              uint64_t v32 = v42 | 0x1030C4000000000;
LABEL_86:
              MEMORY[0x22A614FA0](*(void *)&v31, v32);
            }
          }
          break;
        default:
          goto LABEL_87;
      }
      break;
    case 7:
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      break;
    case 8:
      unint64_t v33 = *a2;
      long long v34 = (atomic_uint *)(*a2)[2];
      uint64_t v50 = (char **)(*a2)[1];
      long long v51 = (std::__shared_weak_count *)v34;
      if (v34) {
        atomic_fetch_add_explicit(v34 + 2, 1u, memory_order_relaxed);
      }
      long long v35 = *(_OWORD *)(v33 + 3);
      long long v36 = *(_OWORD *)(v33 + 7);
      long long v53 = *(_OWORD *)(v33 + 5);
      long long v54 = v36;
      *(_OWORD *)unint64_t v52 = v35;
      turi::flexible_type_fail(0);
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      boost::detail::shared_count::~shared_count((atomic_uint **)&v51);
      break;
    case 9:
      turi::flexible_type_impl::ndarray<double>::ndarray(&v50, (uint64_t)(*a2 + 1));
      turi::flexible_type_fail(0);
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      if (*((void *)&v53 + 1))
      {
        *(void *)&long long v54 = *((void *)&v53 + 1);
        operator delete(*((void **)&v53 + 1));
      }
      if (v52[0])
      {
        v52[1] = v52[0];
        operator delete(v52[0]);
      }
      if (v51) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v51);
      }
      break;
    default:
      turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
  }
LABEL_87:
  uint64_t v46 = *(void *)(*((void *)this + 37) + 96 * a3 + 56);
  if (!v46) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  (*(void (**)(uint64_t, char **))(*(void *)v46 + 48))(v46, &v47);
  uint64_t v50 = &v47;
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
}

void sub_223F007A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,int a23,char a24)
{
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a13);
  switch(a24)
  {
    case 2:
      if (atomic_fetch_add(a22, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      atomic_ullong *volatile v25 = a22;
      if (!a22) {
        goto LABEL_27;
      }
      if (*((char *)a22 + 31) < 0) {
        operator delete((void *)a22[1]);
      }
      unint64_t v26 = v25;
      uint64_t v27 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add(a22, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      double v29 = a22;
      if (!a22) {
        goto LABEL_27;
      }
      double v30 = (void *)a22[1];
      if (v30)
      {
        a22[2] = v30;
        operator delete(v30);
      }
      unint64_t v26 = v29;
      uint64_t v27 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add(a22, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      double v28 = a22;
      if (!a22) {
        goto LABEL_27;
      }
      a13 = (void **)(a22 + 1);
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a13);
      goto LABEL_13;
    case 5:
      if (atomic_fetch_add(a22, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      double v28 = a22;
      if (!a22) {
        goto LABEL_27;
      }
      a13 = (void **)(a22 + 1);
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&a13);
LABEL_13:
      unint64_t v26 = v28;
      uint64_t v27 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add(a22, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      double v31 = a22;
      if (!a22) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)a22 + 2);
      unint64_t v26 = v31;
      unsigned int v32 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add(a22, 0xFFFFFFFFFFFFFFFFLL) != 1 || !a22) {
        goto LABEL_27;
      }
      unint64_t v26 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(a22);
      unsigned int v32 = 2071181815;
LABEL_25:
      uint64_t v27 = v32 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v26, v27);
LABEL_27:
      _Unwind_Resume(a1);
      return;
    default:
      goto LABEL_27;
  }
}

void turi::gl_sframe_writer_impl::write(turi::flexible_type const&,unsigned long)::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", 96);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  unint64_t v2 = (void *)std::ostream::operator<<();
  BOOL v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  unint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"segmentid", 9);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"<", 1);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"m_output_iterators.size()", 25);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"<", 1);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    unint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/data/sframe/gl_sframe.cpp", "operator()", 1144, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  unint64_t v13 = v16;
  turi::gl_sframe_writer_impl::write(turi::flexible_type const&,unsigned long)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F00E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::gl_sframe_writer_impl::close(turi::gl_sframe_writer_impl *this)
{
}

void sub_223F00F9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13)
{
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe::plot(turi::gl_sframe *this)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)this + 88))(&v1);
  (*(void (**)(void))(*(void *)v1 + 416))();
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_223F01050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void turi::gl_sframe_writer::gl_sframe_writer(void *a1)
{
  *a1 = 0;
  operator new();
}

void sub_223F010EC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v2, 0x10B2C40BFC2DDF7);
  unint64_t v4 = *v1;
  *uint64_t v1 = 0;
  if (v4) {
    std::default_delete<turi::gl_sframe_writer_impl>::operator()[abi:ne180100]((uint64_t)v1, v4);
  }
  _Unwind_Resume(a1);
}

void turi::gl_sframe_writer::write()
{
  v0[2] = *MEMORY[0x263EF8340];
  *(void *)((char *)v0 + 5) = 0x400000000000000;
  v0[0] = 0;
  operator new();
}

void sub_223F01454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12)
{
  MEMORY[0x22A614FA0](v13, 0x1020C405E66F15BLL);
  if (atomic_fetch_add(v12, 0xFFFFFFFFFFFFFFFFLL) == 1)
  {
    uint64_t v15 = a12;
    if (a12)
    {
      a10 = (void **)(a12 + 8);
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a10);
      MEMORY[0x22A614FA0](v15, 0x1020C405E66F15BLL);
    }
  }
  _Unwind_Resume(a1);
}

void turi::gl_sframe_writer::close(turi::gl_sframe_writer_impl **this)
{
}

void turi::gl_sframe_writer::~gl_sframe_writer(void ***this)
{
  uint64_t v1 = *this;
  *this = 0;
  if (v1) {
    std::default_delete<turi::gl_sframe_writer_impl>::operator()[abi:ne180100]((uint64_t)this, v1);
  }
}

void std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v2 = *a1;
    BOOL v3 = (uint64_t *)a1[1];
    uint64_t v4 = *v3;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v2 + 8) = v4;
    a1[2] = 0;
    if (v3 != a1)
    {
      do
      {
        uint64_t v5 = (uint64_t *)v3[1];
        uint64_t v6 = (std::__shared_weak_count *)v3[3];
        if (v6) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v6);
        }
        operator delete(v3);
        BOOL v3 = v5;
      }
      while (v5 != a1);
    }
  }
}

turi::gl_sframe *std::pair<turi::gl_sframe,turi::gl_sframe>::pair[abi:ne180100]<true,0>(turi::gl_sframe *a1)
{
  uint64_t v2 = turi::gl_sframe::gl_sframe(a1);
  turi::gl_sframe::gl_sframe((turi::gl_sframe *)((char *)v2 + 24));
  return a1;
}

void sub_223F01884(_Unwind_Exception *exception_object)
{
  *uint64_t v1 = &unk_26D759E10;
  BOOL v3 = (std::__shared_weak_count *)v1[2];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  _Unwind_Resume(exception_object);
}

void std::__tree<std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<turi::unity_sarray_base>>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<turi::unity_sarray_base>>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<turi::unity_sarray_base>>,0>(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    BOOL v3 = *(void **)a1;
    operator delete(v3);
  }
}

uint64_t std::__find_impl[abi:ne180100]<std::string const*,std::string const*,std::string,std::__identity>(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    char v5 = *((unsigned char *)a3 + 23);
    if (v5 >= 0) {
      uint64_t v6 = (unsigned __int8 *)*((unsigned __int8 *)a3 + 23);
    }
    else {
      uint64_t v6 = a3[1];
    }
    if (v5 >= 0) {
      uint64_t v7 = (unsigned __int8 *)a3;
    }
    else {
      uint64_t v7 = *a3;
    }
    do
    {
      uint64_t v8 = *(unsigned __int8 *)(v3 + 23);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 23);
      }
      else {
        uint64_t v9 = *(unsigned __int8 **)(v3 + 8);
      }
      if (v9 == v6)
      {
        if ((v8 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v3, v7, *(void *)(v3 + 8))) {
            return v3;
          }
        }
        else
        {
          if (!*(unsigned char *)(v3 + 23)) {
            return v3;
          }
          uint64_t v10 = 0;
          while (*(unsigned __int8 *)(v3 + v10) == v7[v10])
          {
            if (v8 == ++v10) {
              return v3;
            }
          }
        }
      }
      v3 += 24;
    }
    while (v3 != a2);
    return a2;
  }
  return v3;
}

double std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<turi::gl_sarray_range::iterator,turi::gl_sarray_range::iterator,std::insert_iterator<std::vector<turi::flexible_type>>>@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X5>, void **a5@<X6>, uint64_t a6@<X8>)
{
  *(void *)&long long v12 = a1;
  *((void *)&v12 + 1) = a2;
  if (a1 != a3)
  {
    do
    {
      unint64_t v10 = turi::gl_sarray_range::iterator::dereference((turi::gl_sarray_range::iterator *)&v12);
      a5 = std::vector<turi::flexible_type>::insert(a4, (uint64_t)a5, v10) + 2;
      turi::gl_sarray_range::iterator::increment((turi::gl_sarray_range::iterator *)&v12);
    }
    while ((void)v12 != a3);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a6 = v12;
  *(void *)(a6 + 16) = a4;
  *(void *)(a6 + 24) = a5;
  return result;
}

void **std::vector<turi::flexible_type>::insert(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = (void **)a2;
  unint64_t v6 = a1[1];
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if (v6 >= v9)
  {
    uint64_t v13 = *a1;
    unint64_t v14 = ((uint64_t)(v6 - *a1) >> 4) + 1;
    if (v14 >> 60) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v15 = (a2 - v13) >> 4;
    uint64_t v16 = v8 - v13;
    uint64_t v17 = v16 >> 3;
    if (v16 >> 3 <= v14) {
      uint64_t v17 = ((uint64_t)(v6 - *a1) >> 4) + 1;
    }
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v18 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v17;
    }
    uint64_t v33 = v7;
    if (v18) {
      uint64_t v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>(v7, v18);
    }
    else {
      uint64_t v19 = 0;
    }
    double v29 = v19;
    double v30 = &v19[16 * v15];
    double v31 = v30;
    unsigned int v32 = &v19[16 * v18];
    std::__split_buffer<turi::flexible_type>::push_back[abi:ne180100](&v29, (uint64_t *)a3);
    uint64_t v4 = (void **)std::vector<turi::flexible_type>::__swap_out_circular_buffer((uint64_t)a1, &v29, (uint64_t *)v4);
    std::__split_buffer<turi::flexible_type>::~__split_buffer(&v29);
  }
  else if (a2 == v6)
  {
    *(void *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 12) = 0;
    if (a2 != a3)
    {
      uint64_t v20 = *(void *)a3;
      *(void *)(a2 + 5) = *(void *)(a3 + 5);
      *(void *)a2 = v20;
      unsigned int v21 = *(unsigned __int8 *)(a3 + 12);
      *(unsigned char *)(a2 + 12) = v21;
      if (v21 <= 9 && ((1 << v21) & 0x33C) != 0) {
        atomic_fetch_add(*(atomic_ullong *volatile *)a2, 1uLL);
      }
    }
    a1[1] = a2 + 16;
  }
  else
  {
    std::vector<turi::flexible_type>::__move_range((uint64_t)a1, (atomic_ullong **)a2, v6, a2 + 16);
    if ((unint64_t)v4 <= a3) {
      a3 += 16 * (a1[1] > a3);
    }
    if ((void **)a3 != v4)
    {
      switch(*((unsigned char *)v4 + 12))
      {
        case 2:
          if (atomic_fetch_add(*v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v10 = (uint64_t)*v4;
            if (!*v4) {
              goto LABEL_47;
            }
            if (*(char *)(v10 + 31) < 0) {
              operator delete(*(void **)(v10 + 8));
            }
            uint64_t v11 = (void *)v10;
            uint64_t v12 = 0x1012C404EF22A49;
            goto LABEL_46;
          }
          break;
        case 3:
          if (atomic_fetch_add(*v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v22 = (uint64_t)*v4;
            if (!*v4) {
              goto LABEL_47;
            }
            atomic_ullong *volatile v23 = *(void **)(v22 + 8);
            if (v23)
            {
              *(void *)(v22 + 16) = v23;
              operator delete(v23);
            }
            uint64_t v11 = (void *)v22;
            uint64_t v12 = 0x1080C409938AC02;
            goto LABEL_46;
          }
          break;
        case 4:
          if (atomic_fetch_add(*v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v24 = (uint64_t)*v4;
            if (!*v4) {
              goto LABEL_47;
            }
            double v29 = (void *)(v24 + 8);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
            goto LABEL_38;
          }
          break;
        case 5:
          if (atomic_fetch_add(*v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v24 = (uint64_t)*v4;
            if (!*v4) {
              goto LABEL_47;
            }
            double v29 = (void *)(v24 + 8);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
LABEL_38:
            uint64_t v11 = (void *)v24;
            uint64_t v12 = 0x1020C405E66F15BLL;
            goto LABEL_46;
          }
          break;
        case 8:
          if (atomic_fetch_add(*v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v25 = (uint64_t)*v4;
            if (!*v4) {
              goto LABEL_47;
            }
            boost::detail::shared_count::~shared_count((atomic_uint **)(v25 + 16));
            uint64_t v11 = (void *)v25;
            unsigned int v26 = -235920773;
            goto LABEL_45;
          }
          break;
        case 9:
          if (atomic_fetch_add(*v4, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            if (*v4)
            {
              uint64_t v11 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(*v4);
              unsigned int v26 = 2071181815;
LABEL_45:
              uint64_t v12 = v26 | 0x1030C4000000000;
LABEL_46:
              MEMORY[0x22A614FA0](v11, v12);
            }
LABEL_47:
            *uint64_t v4 = 0;
          }
          break;
        default:
          break;
      }
      uint64_t v27 = *(void *)a3;
      *(void **)((char *)v4 + 5) = *(void **)(a3 + 5);
      *uint64_t v4 = (void *)v27;
      LODWORD(v27) = *(unsigned __int8 *)(a3 + 12);
      *((unsigned char *)v4 + 12) = v27;
      switch((int)v27)
      {
        case 2:
        case 3:
        case 4:
        case 5:
        case 8:
        case 9:
          atomic_fetch_add(*v4, 1uLL);
          break;
        default:
          return v4;
      }
    }
  }
  return v4;
}

void sub_223F01E08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<turi::flexible_type>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

atomic_ullong **std::vector<turi::flexible_type>::__move_range(uint64_t a1, atomic_ullong **a2, unint64_t a3, uint64_t a4)
{
  unint64_t v6 = *(atomic_ullong ***)(a1 + 8);
  uint64_t v7 = (atomic_ullong **)((char *)v6 + (void)a2 - a4);
  unint64_t v8 = v6;
  if ((unint64_t)v7 < a3)
  {
    unint64_t v9 = v7;
    unint64_t v8 = *(atomic_ullong ***)(a1 + 8);
    do
    {
      void *v8 = 0;
      *((_DWORD *)v8 + 2) = 0;
      *((unsigned char *)v8 + 12) = 0;
      uint64_t v10 = *v9;
      *(atomic_ullong **)((char *)v8 + 5) = *(atomic_ullong **)((char *)v9 + 5);
      void *v8 = v10;
      *((unsigned char *)v8 + 12) = *((unsigned char *)v9 + 12);
      *((unsigned char *)v9 + 12) = 0;
      v8 += 2;
      v9 += 2;
    }
    while ((unint64_t)v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return std::__move_backward_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<turi::flexible_type *,turi::flexible_type *,turi::flexible_type *>((uint64_t)&v12, a2, v7, v6);
}

void *std::__split_buffer<turi::flexible_type>::push_back[abi:ne180100](void *result, uint64_t *a2)
{
  uint64_t v3 = result;
  uint64_t v4 = result[2];
  if (v4 == result[3])
  {
    char v5 = (uint64_t *)result[1];
    uint64_t v6 = (uint64_t)v5 - *result;
    if ((unint64_t)v5 <= *result)
    {
      if (v4 == *result) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = (v4 - *result) >> 3;
      }
      uint64_t v14 = result[4];
      uint64_t v30 = v3[4];
      uint64_t v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::flexible_type>>(v14, v13);
      uint64_t v17 = &v15[16 * (v13 >> 2)];
      unint64_t v18 = v3[1];
      unint64_t v19 = v3[2] - v18;
      if (v19)
      {
        uint64_t v20 = &v17[v19];
        unsigned int v21 = &v15[16 * (v13 >> 2)];
        do
        {
          *(void *)unsigned int v21 = 0;
          *((_DWORD *)v21 + 2) = 0;
          v21[12] = 0;
          uint64_t v22 = *(void *)v18;
          *(void *)(v21 + 5) = *(void *)(v18 + 5);
          *(void *)unsigned int v21 = v22;
          v21[12] = *(unsigned char *)(v18 + 12);
          *(unsigned char *)(v18 + 12) = 0;
          v21 += 16;
          v18 += 16;
        }
        while (v21 != v20);
        int64x2_t v23 = *(int64x2_t *)(v3 + 1);
      }
      else
      {
        int64x2_t v23 = vdupq_n_s64(v18);
        uint64_t v20 = &v15[16 * (v13 >> 2)];
      }
      uint64_t v27 = (void *)*v3;
      *uint64_t v3 = v15;
      v3[1] = v17;
      int64x2_t v28 = v23;
      uint64_t v24 = v3[3];
      void v3[2] = v20;
      v3[3] = &v15[16 * v16];
      uint64_t v29 = v24;
      double result = std::__split_buffer<turi::flexible_type>::~__split_buffer(&v27);
      uint64_t v4 = v3[2];
    }
    else
    {
      uint64_t v7 = v6 >> 4;
      BOOL v8 = v6 >> 4 < -1;
      uint64_t v9 = (v6 >> 4) + 2;
      if (v8) {
        unint64_t v10 = v9;
      }
      else {
        unint64_t v10 = v7 + 1;
      }
      unint64_t v11 = v10 >> 1;
      double result = std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<turi::flexible_type *,turi::flexible_type *,turi::flexible_type *>((uint64_t)&v27, v5, (uint64_t *)v4, (uint64_t)&v5[-2 * (v10 >> 1)]);
      uint64_t v4 = v12;
      v3[1] -= 16 * v11;
      void v3[2] = v12;
    }
  }
  *(void *)uint64_t v4 = 0;
  *(_DWORD *)(v4 + 8) = 0;
  *(unsigned char *)(v4 + 12) = 0;
  if ((uint64_t *)v4 != a2)
  {
    uint64_t v25 = *a2;
    *(void *)(v4 + 5) = *(uint64_t *)((char *)a2 + 5);
    *(void *)uint64_t v4 = v25;
    unsigned int v26 = *((unsigned __int8 *)a2 + 12);
    *(unsigned char *)(v4 + 12) = v26;
    if (v26 <= 9 && ((1 << v26) & 0x33C) != 0) {
      atomic_fetch_add(*(atomic_ullong *volatile *)v4, 1uLL);
    }
  }
  v3[2] += 16;
  return result;
}

uint64_t std::vector<turi::flexible_type>::__swap_out_circular_buffer(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::flexible_type>,std::reverse_iterator<turi::flexible_type*>,std::reverse_iterator<turi::flexible_type*>,std::reverse_iterator<turi::flexible_type*>>(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::flexible_type>,turi::flexible_type*,turi::flexible_type*,turi::flexible_type*>(v7, a3, *(uint64_t **)(a1 + 8), a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

atomic_ullong **std::__move_backward_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<turi::flexible_type *,turi::flexible_type *,turi::flexible_type *>(uint64_t a1, atomic_ullong **a2, atomic_ullong **a3, atomic_ullong **a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    do
    {
      uint64_t v8 = v7 - 2;
      uint64_t v9 = a4 - 2;
      if (v7 != a4)
      {
        switch(*((unsigned char *)a4 - 4))
        {
          case 2:
            if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v10 = *v9;
              if (!*v9) {
                goto LABEL_36;
              }
              if (*((char *)v10 + 31) < 0) {
                operator delete((void *)v10[1]);
              }
              atomic_ullong *volatile v11 = v10;
              uint64_t v12 = 0x1012C404EF22A49;
              goto LABEL_35;
            }
            break;
          case 3:
            if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v13 = *v9;
              if (!*v9) {
                goto LABEL_36;
              }
              uint64_t v14 = (void *)v13[1];
              if (v14)
              {
                v13[2] = (atomic_ullong)v14;
                operator delete(v14);
              }
              atomic_ullong *volatile v11 = v13;
              uint64_t v12 = 0x1080C409938AC02;
              goto LABEL_35;
            }
            break;
          case 4:
            if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v15 = *v9;
              if (!*v9) {
                goto LABEL_36;
              }
              uint64_t v24 = (void **)(v15 + 1);
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v24);
              goto LABEL_21;
            }
            break;
          case 5:
            if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v15 = *v9;
              if (!*v9) {
                goto LABEL_36;
              }
              uint64_t v24 = (void **)(v15 + 1);
              std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v24);
LABEL_21:
              atomic_ullong *volatile v11 = v15;
              uint64_t v12 = 0x1020C405E66F15BLL;
              goto LABEL_35;
            }
            break;
          case 8:
            if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v16 = *v9;
              if (!*v9) {
                goto LABEL_36;
              }
              boost::detail::shared_count::~shared_count((atomic_uint **)v16 + 2);
              atomic_ullong *volatile v11 = v16;
              unsigned int v17 = -235920773;
              goto LABEL_34;
            }
            break;
          case 9:
            if (atomic_fetch_add(*v9, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v18 = *v9;
              if (*v9)
              {
                unint64_t v19 = (void *)v18[6];
                if (v19)
                {
                  v18[7] = (atomic_ullong)v19;
                  operator delete(v19);
                }
                uint64_t v20 = (void *)v18[3];
                if (v20)
                {
                  void v18[4] = (atomic_ullong)v20;
                  operator delete(v20);
                }
                unsigned int v21 = (std::__shared_weak_count *)v18[2];
                if (v21) {
                  std::__shared_weak_count::__release_shared[abi:ne180100](v21);
                }
                atomic_ullong *volatile v11 = v18;
                unsigned int v17 = 2071181815;
LABEL_34:
                uint64_t v12 = v17 | 0x1030C4000000000;
LABEL_35:
                MEMORY[0x22A614FA0](v11, v12);
              }
LABEL_36:
              *uint64_t v9 = 0;
            }
            break;
          default:
            break;
        }
        uint64_t v22 = *v8;
        *(atomic_ullong **)((char *)a4 - 11) = *(atomic_ullong **)((char *)v7 - 11);
        *uint64_t v9 = v22;
        *((unsigned char *)a4 - 4) = *((unsigned char *)v7 - 4);
        *((unsigned char *)v7 - 4) = 0;
      }
      a4 -= 2;
      v7 -= 2;
    }
    while (v8 != a2);
  }
  return a3;
}

uint64_t *std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<turi::flexible_type *,turi::flexible_type *,turi::flexible_type *>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  char v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (v5 != (uint64_t *)a4)
      {
        switch(*(unsigned char *)(a4 + 12))
        {
          case 2:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)a4, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v7 = *(atomic_ullong *volatile *)a4;
              if (!*(void *)a4) {
                goto LABEL_35;
              }
              if (*((char *)v7 + 31) < 0) {
                operator delete((void *)v7[1]);
              }
              atomic_ullong *volatile v8 = v7;
              uint64_t v9 = 0x1012C404EF22A49;
              goto LABEL_34;
            }
            break;
          case 3:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)a4, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v10 = *(atomic_ullong *volatile *)a4;
              if (!*(void *)a4) {
                goto LABEL_35;
              }
              atomic_ullong *volatile v11 = (void *)v10[1];
              if (v11)
              {
                void v10[2] = (atomic_ullong)v11;
                operator delete(v11);
              }
              atomic_ullong *volatile v8 = v10;
              uint64_t v9 = 0x1080C409938AC02;
              goto LABEL_34;
            }
            break;
          case 4:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)a4, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)a4;
              if (!*(void *)a4) {
                goto LABEL_35;
              }
              unsigned int v21 = (void **)(v12 + 1);
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v21);
              goto LABEL_20;
            }
            break;
          case 5:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)a4, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v12 = *(atomic_ullong *volatile *)a4;
              if (!*(void *)a4) {
                goto LABEL_35;
              }
              unsigned int v21 = (void **)(v12 + 1);
              std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v21);
LABEL_20:
              atomic_ullong *volatile v8 = v12;
              uint64_t v9 = 0x1020C405E66F15BLL;
              goto LABEL_34;
            }
            break;
          case 8:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)a4, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v13 = *(atomic_ullong *volatile *)a4;
              if (!*(void *)a4) {
                goto LABEL_35;
              }
              boost::detail::shared_count::~shared_count((atomic_uint **)v13 + 2);
              atomic_ullong *volatile v8 = v13;
              unsigned int v14 = -235920773;
              goto LABEL_33;
            }
            break;
          case 9:
            if (atomic_fetch_add(*(atomic_ullong *volatile *)a4, 0xFFFFFFFFFFFFFFFFLL) == 1)
            {
              atomic_ullong *volatile v15 = *(atomic_ullong *volatile *)a4;
              if (*(void *)a4)
              {
                atomic_ullong *volatile v16 = (void *)v15[6];
                if (v16)
                {
                  v15[7] = (atomic_ullong)v16;
                  operator delete(v16);
                }
                unsigned int v17 = (void *)v15[3];
                if (v17)
                {
                  v15[4] = (atomic_ullong)v17;
                  operator delete(v17);
                }
                atomic_ullong *volatile v18 = (std::__shared_weak_count *)v15[2];
                if (v18) {
                  std::__shared_weak_count::__release_shared[abi:ne180100](v18);
                }
                atomic_ullong *volatile v8 = v15;
                unsigned int v14 = 2071181815;
LABEL_33:
                uint64_t v9 = v14 | 0x1030C4000000000;
LABEL_34:
                MEMORY[0x22A614FA0](v8, v9);
              }
LABEL_35:
              *(void *)a4 = 0;
            }
            break;
          default:
            break;
        }
        uint64_t v19 = *v5;
        *(void *)(a4 + 5) = *(uint64_t *)((char *)v5 + 5);
        *(void *)a4 = v19;
        *(unsigned char *)(a4 + 12) = *((unsigned char *)v5 + 12);
        *((unsigned char *)v5 + 12) = 0;
      }
      v5 += 2;
      a4 += 16;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::flexible_type>,turi::flexible_type*,turi::flexible_type*,turi::flexible_type*>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  void v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *(void *)uint64_t v4 = 0;
      *(_DWORD *)(v4 + 8) = 0;
      *(unsigned char *)(v4 + 12) = 0;
      uint64_t v5 = *a2;
      *(void *)(v4 + 5) = *(uint64_t *)((char *)a2 + 5);
      *(void *)uint64_t v4 = v5;
      *(unsigned char *)(v4 + 12) = *((unsigned char *)a2 + 12);
      *((unsigned char *)a2 + 12) = 0;
      v4 += 16;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::flexible_type>,turi::flexible_type*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v7);
  return v4;
}

uint64_t *std::list<std::shared_ptr<turi::unity_sarray_base>>::list(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)a1;
  a1[1] = (uint64_t)a1;
  a1[2] = 0;
  for (uint64_t i = a2; ; std::list<std::shared_ptr<turi::unity_sarray_base>>::push_back(a1, (void *)(i + 16)))
  {
    uint64_t i = *(void *)(i + 8);
    if (i == a2) {
      break;
    }
  }
  return a1;
}

void sub_223F026DC(_Unwind_Exception *a1)
{
  std::__list_imp<std::shared_ptr<turi::unity_sarray_base>>::clear(v1);
  _Unwind_Resume(a1);
}

void *std::list<std::shared_ptr<turi::unity_sarray_base>>::push_back(uint64_t *a1, void *a2)
{
  double result = operator new(0x20uLL);
  uint64_t v5 = a2[1];
  result[2] = *a2;
  result[3] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = *a1;
  void *result = *a1;
  result[1] = a1;
  *(void *)(v6 + 8) = result;
  *a1 = (uint64_t)result;
  ++a1[2];
  return result;
}

void std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,turi::gl_sarray>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,turi::gl_sarray>,0>(uint64_t a1)
{
  turi::gl_sarray::~gl_sarray((turi::gl_sarray *)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t *std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__find_equal<std::string>((uint64_t)a1, &v11, a2);
  atomic_ullong *volatile v7 = *v6;
  if (!*v6)
  {
    char v8 = v6;
    std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, v11, v8, v10[0]);
    atomic_ullong *volatile v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,turi::gl_sarray>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,turi::gl_sarray>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

std::string *std::__tree<std::__value_type<std::string,turi::gl_sarray>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::gl_sarray>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::gl_sarray>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x60uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double result = std::pair<std::string const,turi::gl_sarray>::pair[abi:ne180100]<std::string const&>((std::string *)(v6 + 32), *a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_223F028FC(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,turi::gl_sarray>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,turi::gl_sarray>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::string const,turi::gl_sarray>::pair[abi:ne180100]<std::string const&>(std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
  turi::gl_sarray::gl_sarray((turi::gl_sarray *)&this[1]);
  return this;
}

void sub_223F0296C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,turi::gl_sarray>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,turi::gl_sarray>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,turi::gl_sarray>,0>((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void std::shared_ptr<turi::unity_sframe>::shared_ptr[abi:ne180100]<turi::unity_sframe,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223F02A60(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::shared_ptr<turi::unity_sarray>::shared_ptr[abi:ne180100]<turi::unity_sarray,void>(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__shared_ptr_pointer<turi::unity_sframe *,std::shared_ptr<turi::unity_sframe>::__shared_ptr_default_delete<turi::unity_sframe,turi::unity_sframe>,std::allocator<turi::unity_sframe>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::unity_sframe *,std::shared_ptr<turi::unity_sframe>::__shared_ptr_default_delete<turi::unity_sframe,turi::unity_sframe>,std::allocator<turi::unity_sframe>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void *std::vector<std::vector<turi::flexible_type>>::vector(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<std::string>::__vallocate[abi:ne180100](a1, a2);
    uint64_t v4 = (char *)a1[1];
    size_t v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_223F02B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void _ZNSt3__115allocate_sharedB8ne180100IN4turi12unity_sframeENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x88uLL);
  _ZNSt3__120__shared_ptr_emplaceIN4turi12unity_sframeENS_9allocatorIS2_EEEC2B8ne180100IJES4_Li0EEES4_DpOT_(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  std::shared_ptr<turi::visualization::Plot>::__enable_weak_this[abi:ne180100]<cppipc::ipc_object_base,turi::visualization::Plot,void>((uint64_t)a1, v2 + 4, (uint64_t)(v2 + 3));
}

void sub_223F02BE0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *_ZNSt3__120__shared_ptr_emplaceIN4turi12unity_sframeENS_9allocatorIS2_EEEC2B8ne180100IJES4_Li0EEES4_DpOT_(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D759FA0;
  turi::unity_sframe::unity_sframe((turi::unity_sframe *)(a1 + 3));
  return a1;
}

void sub_223F02C3C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::unity_sframe>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D759FA0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::unity_sframe>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D759FA0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<turi::unity_sframe>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t std::__shared_ptr_pointer<turi::sframe_reader  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::sframe_reader  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

uint64_t std::__function::__value_func<turi::flexible_type ()(turi::sframe_rows::row const&)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t std::set<std::string>::set[abi:ne180100]<std::__wrap_iter<std::string*>>(uint64_t a1, const void **a2, const void **a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>((uint64_t **)a1, v4, v6, (uint64_t)v6);
      v6 += 3;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_223F02E64(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,MPSRNNMatrixId>,std::__map_value_compare<std::string,std::__value_type<std::string,MPSRNNMatrixId>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MPSRNNMatrixId>>>::destroy(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

void std::vector<std::vector<std::string>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    size_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        uint64_t v6 = v4;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      size_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::vector<std::vector<std::string>>::__push_back_slow_path<std::vector<std::string> const&>(uint64_t *a1, long long **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<float>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  unsigned int v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::vector<float>>>>(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = (std::string *)&v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  atomic_ullong *volatile v15 = v11;
  atomic_ullong *volatile v16 = &v10[24 * v9];
  v11->__r_.__value_.__r.__words[0] = 0;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(v11, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  ++v15;
  std::vector<std::vector<std::string>>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<std::vector<std::string>>::~__split_buffer(v14);
  return v12;
}

void sub_223F03000(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::vector<std::string>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::vector<std::string>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<std::string>>,std::reverse_iterator<std::vector<std::string>*>,std::reverse_iterator<std::vector<std::string>*>,std::reverse_iterator<std::vector<std::string>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<std::string>>,std::reverse_iterator<std::vector<std::string>*>,std::reverse_iterator<std::vector<std::string>*>,std::reverse_iterator<std::vector<std::string>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::string>>,std::reverse_iterator<std::vector<std::string>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v11);
  return v9;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::string>>,std::reverse_iterator<std::vector<std::string>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::string>>,std::reverse_iterator<std::vector<std::string>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::string>>,std::reverse_iterator<std::vector<std::string>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v3);
    v1 += 3;
  }
}

void **std::__split_buffer<std::vector<std::string>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<std::vector<std::string>>::clear[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
}

std::string *std::pair<std::string,turi::gl_sarray>::pair[abi:ne180100]<true,0>(std::string *this, long long *a2, turi::gl_sarray *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  turi::gl_sarray::gl_sarray((turi::gl_sarray *)&this[1], a3);
  return this;
}

void sub_223F0329C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string const*,std::string const*>(std::vector<std::string> *this, std::string *__str, long long *a3, unint64_t a4)
{
  p_end_cap = &this->__end_cap_;
  std::vector<std::string>::pointer begin = this->__begin_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 3) < a4)
  {
    std::vector<std::string>::__vdeallocate(this);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0x5555555555555556 * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    std::vector<std::string>::__vallocate[abi:ne180100](this, v11);
    char v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)p_end_cap, (long long *)__str, a3, this->__end_);
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_ - (char *)begin) >> 3) < a4)
  {
    long long v13 = (std::string *)((char *)__str + 8 * (((char *)this->__end_ - (char *)begin) >> 3));
    std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::string *,std::string *,std::string *,0>(__str, v13, begin);
    char v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)p_end_cap, (long long *)v13, a3, this->__end_);
LABEL_11:
    this->__end_ = v12;
    return;
  }
  std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::string *,std::string *,std::string *,0>(__str, (std::string *)a3, begin);
  atomic_ullong *volatile v15 = v14;
  std::vector<std::string>::pointer end = this->__end_;
  if (end != v14)
  {
    do
    {
      if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(end[-1].__r_.__value_.__l.__data_);
      }
      --end;
    }
    while (end != v15);
  }
  this->__end_ = v15;
}

void sub_223F03420(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_223F03428(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void *std::vector<turi::flex_type_enum>::__assign_with_size[abi:ne180100]<turi::flex_type_enum const*,turi::flex_type_enum const*>(void *result, char *__src, char *a3, unint64_t a4)
{
  uint64_t v7 = result;
  unint64_t v8 = result[2];
  uint64_t v9 = (char *)*result;
  if (v8 - *result < a4)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      unint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      void v7[2] = 0;
    }
    if ((a4 & 0x8000000000000000) != 0) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = 2 * v8;
    if (2 * v8 <= a4) {
      uint64_t v10 = a4;
    }
    if (v8 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v11 = v10;
    }
    uint64_t result = std::vector<turi::flex_type_enum>::__vallocate[abi:ne180100](v7, v11);
    uint64_t v9 = (char *)v7[1];
    goto LABEL_17;
  }
  char v12 = (unsigned char *)result[1];
  size_t v13 = v12 - v9;
  if (v12 - v9 >= a4)
  {
LABEL_17:
    size_t v16 = a3 - __src;
    if (v16) {
      uint64_t result = memmove(v9, __src, v16);
    }
    atomic_ullong *volatile v15 = &v9[v16];
    goto LABEL_20;
  }
  long long v14 = &__src[v13];
  if (v12 != v9)
  {
    uint64_t result = memmove((void *)*result, __src, v13);
    uint64_t v9 = (char *)v7[1];
  }
  if (a3 != v14) {
    uint64_t result = memmove(v9, v14, a3 - v14);
  }
  atomic_ullong *volatile v15 = &v9[a3 - v14];
LABEL_20:
  v7[1] = v15;
  return result;
}

std::string *std::pair<std::string const,turi::aggregate::groupby_descriptor_type>::pair[abi:ne180100]<std::string const&,turi::aggregate::groupby_descriptor_type,0>(std::string *this, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  this[1].__r_.__value_.__r.__words[0] = 0;
  this[1].__r_.__value_.__l.__size_ = 0;
  this[1].__r_.__value_.__r.__words[2] = 0;
  *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = *(_OWORD *)a3;
  this[1].__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_OWORD *)&this[2].__r_.__value_.__l.__data_ = *(_OWORD *)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return this;
}

uint64_t std::map<std::string,turi::aggregate::groupby_descriptor_type>::map[abi:ne180100](uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = a3 << 6;
    do
    {
      std::__tree<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,turi::aggregate::groupby_descriptor_type> const&>((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 8;
      v6 -= 64;
    }
    while (v6);
  }
  return a1;
}

void sub_223F03628(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,turi::aggregate::groupby_descriptor_type> const&>(uint64_t **a1, uint64_t *a2, const void **a3, long long *a4)
{
  uint64_t v6 = std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__find_equal<std::string>(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    unint64_t v8 = (uint64_t **)v6;
    std::__tree<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>>>::__construct_node<std::pair<std::string const,turi::aggregate::groupby_descriptor_type> const&>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__insert_node_at(a1, (uint64_t)v12, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

std::string *std::__tree<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>>>::__construct_node<std::pair<std::string const,turi::aggregate::groupby_descriptor_type> const&>@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x60uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = std::pair<std::string const,turi::aggregate::groupby_descriptor_type>::pair[abi:ne180100]((std::string *)(v6 + 32), a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_223F0372C(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,turi::aggregate::groupby_descriptor_type>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

void sub_223F037D4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::vector<int> *__cdecl std::vector<int>::vector(std::vector<int> *this, std::vector<int>::size_type __n, const std::vector<int>::value_type *__x)
{
  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  if (__n)
  {
    std::vector<float>::__vallocate[abi:ne180100](this, __n);
    std::vector<int>::pointer end = this->__end_;
    uint64_t v7 = &end[__n];
    std::vector<int>::size_type v8 = 4 * __n;
    do
    {
      *end++ = *__x;
      v8 -= 4;
    }
    while (v8);
    this->__end_ = v7;
  }
  return this;
}

void sub_223F03858(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::deque<std::string>::deque<std::__wrap_iter<std::string*>,0>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  std::deque<std::string>::__append_with_size[abi:ne180100]<std::__wrap_iter<std::string*>>((void *)a1, a2, 0xAAAAAAAAAAAAAAABLL * ((a3 - a2) >> 3));
  return a1;
}

void sub_223F038BC(_Unwind_Exception *a1)
{
  std::__split_buffer<std::shared_ptr<std::vector<turi::flexible_type>> *,std::allocator<std::shared_ptr<std::vector<turi::flexible_type>> *>>::~__split_buffer(v1);
  _Unwind_Resume(a1);
}

void std::deque<std::string>::__append_with_size[abi:ne180100]<std::__wrap_iter<std::string*>>(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  if (v7 == v6) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = 170 * ((v7 - v6) >> 3) - 1;
  }
  unint64_t v9 = a1[5] + a1[4];
  unint64_t v10 = v8 - v9;
  if (a3 > v10)
  {
    std::deque<std::string>::__add_back_capacity(a1, a3 - v10);
    uint64_t v6 = a1[1];
    uint64_t v7 = a1[2];
    unint64_t v9 = a1[4] + a1[5];
  }
  uint64_t v11 = (void *)(v6 + 8 * (v9 / 0xAA));
  if (v7 == v6) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v11 + 24 * (v9 % 0xAA);
  }
  unsigned int v21 = (void *)(v6 + 8 * (v9 / 0xAA));
  unint64_t v22 = v12;
  std::__deque_iterator<std::string,std::string*,std::string&,std::string**,long,170l>::operator+=[abi:ne180100](&v21, a3);
  uint64_t v13 = v22;
  if (v12 != v22)
  {
    long long v14 = v21;
    do
    {
      if (v11 == v14) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = *v11 + 4080;
      }
      if (v12 == v15)
      {
        uint64_t v15 = v12;
      }
      else
      {
        uint64_t v16 = 0;
        do
        {
          unsigned int v17 = (std::string *)(v12 + v16);
          atomic_ullong *volatile v18 = (long long *)(a2 + v16);
          if (*(char *)(a2 + v16 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(v17, *(const std::string::value_type **)v18, *((void *)v18 + 1));
          }
          else
          {
            long long v19 = *v18;
            v17->__r_.__value_.__r.__words[2] = *((void *)v18 + 2);
            *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v19;
          }
          v16 += 24;
        }
        while (v12 + v16 != v15);
        a2 += v16;
      }
      a1[5] -= 0x5555555555555555 * ((uint64_t)(v15 - v12) >> 3);
      if (v11 == v14) {
        break;
      }
      unint64_t v20 = v11[1];
      ++v11;
      unint64_t v12 = v20;
    }
    while (v20 != v13);
  }
}

void sub_223F03A5C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 40) -= 0x5555555555555555 * (v2 >> 3);
  _Unwind_Resume(a1);
}

void std::deque<std::string>::__add_back_capacity(void *a1, unint64_t a2)
{
  uint64_t v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if (v5 % 0xAA) {
    unint64_t v6 = v5 / 0xAA + 1;
  }
  else {
    unint64_t v6 = v5 / 0xAA;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 / 0xAA) {
    unint64_t v8 = v7 / 0xAA;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 / 0xAA)
  {
    for (a1[4] = v7 - 170 * v8; v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      unsigned int v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          if (v3 == (char *)*a1) {
            unint64_t v28 = 1;
          }
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          uint64_t v29 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v28);
          double v31 = &v29[8 * (v28 >> 2)];
          unsigned int v32 = (uint64_t *)a1[1];
          uint64_t v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            uint64_t v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8];
            uint64_t v34 = 8 * (v33 >> 3);
            long long v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)long long v35 = v36;
              v35 += 8;
              v34 -= 8;
            }
            while (v34);
          }
          double v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            uint64_t v3 = (char *)a1[2];
          }
        }
        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          uint64_t v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            uint64_t v3 = (char *)a1[1];
          }
          uint64_t v27 = &v3[-8 * (v24 >> 1)];
          uint64_t v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }
      *(void *)uint64_t v3 = v18;
      uint64_t v3 = (char *)(a1[2] + 8);
      a1[2] = v3;
    }
  }
  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0xFF0uLL);
          std::__split_buffer<char *>::push_back(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }
        for (uint64_t i = 0; i != v9; ++i)
        {
          __p[0] = operator new(0xFF0uLL);
          std::__split_buffer<char *>::push_front((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8) {
            uint64_t v64 = 169;
          }
          else {
            uint64_t v64 = 170;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }
        unint64_t v8 = v6;
      }
      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }
      a1[4] = v65 - 170 * v8;
      if (v8)
      {
        atomic_ullong *volatile v66 = (char *)a1[2];
        do
        {
          unsigned int v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          uint64_t v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              if (v66 == (char *)*a1) {
                unint64_t v78 = 1;
              }
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              uint64_t v79 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v78);
              uint64_t v81 = &v79[8 * (v78 >> 2)];
              uint64_t v82 = (uint64_t *)a1[1];
              atomic_ullong *volatile v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                atomic_ullong *volatile v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8];
                uint64_t v84 = 8 * (v83 >> 3);
                uint64_t v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)uint64_t v85 = v86;
                  v85 += 8;
                  v84 -= 8;
                }
                while (v84);
              }
              unint64_t v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                atomic_ullong *volatile v66 = (char *)a1[2];
              }
            }
            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              long long v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                atomic_ullong *volatile v66 = (char *)a1[1];
              }
              long long v77 = &v66[-8 * (v74 >> 1)];
              atomic_ullong *volatile v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }
          *(void *)atomic_ullong *volatile v66 = v69;
          atomic_ullong *volatile v66 = (char *)(a1[2] + 8);
          a1[2] = v66;
          --v8;
        }
        while (v8);
      }
    }
    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      std::string v91 = a1 + 3;
      if (v13) {
        uint64_t v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v13);
      }
      else {
        uint64_t v15 = 0;
      }
      uint64_t v38 = -170 * v8;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&long long v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        uint64_t v88 = operator new(0xFF0uLL);
        std::__split_buffer<char *>::push_back(__p, &v88);
        --v9;
      }
      while (v9);
      if (v8)
      {
        uint64_t v39 = (void *)a1[1];
        unsigned int v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              unint64_t v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)v91, v48);
              long long v51 = (uint64_t *)__p[1];
              unsigned int v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                unsigned int v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v53 = 8 * (v52 >> 3);
                long long v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)long long v54 = v55;
                  v54 += 8;
                  v53 -= 8;
                }
                while (v53);
              }
              int v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&long long v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                unsigned int v40 = (char *)v90;
              }
            }
            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              double v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                unsigned int v40 = (char *)__p[1];
              }
              uint64_t v47 = &v40[-8 * (v44 >> 1)];
              unsigned int v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&long long v90 = &v45[v46];
            }
          }
          *(void *)unsigned int v40 = *v39;
          unsigned int v40 = (char *)(v90 + 8);
          *(void *)&long long v90 = v90 + 8;
          uint64_t v39 = (void *)(a1[1] + 8);
          a1[1] = v39;
          --v8;
        }
        while (v8);
      }
      char v57 = (void *)a1[2];
      uint64_t v58 = -7 - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8;
        std::__split_buffer<char *>::push_front((uint64_t)__p, v57);
      }
      uint64_t v59 = (char *)*a1;
      long long v60 = *(_OWORD *)__p;
      long long v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      long long v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      long long v90 = v62;
      a1[4] += v38;
      if (v57 != (void *)v62) {
        *(void *)&long long v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }
}

void sub_223F03FB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::__deque_iterator<std::string,std::string*,std::string&,std::string**,long,170l>::operator+=[abi:ne180100](void *result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)*result;
    unint64_t v3 = a2 - 0x5555555555555555 * ((uint64_t)(result[1] - *(void *)*result) >> 3);
    if ((uint64_t)v3 < 1)
    {
      unint64_t v5 = 169 - v3;
      unint64_t v6 = &v2[-(v5 / 0xAA)];
      std::string *result = v6;
      unint64_t v4 = *v6 + 24 * (170 * (v5 / 0xAA) - v5) + 4056;
    }
    else
    {
      std::string *result = &v2[v3 / 0xAA];
      unint64_t v4 = v2[v3 / 0xAA] + 24 * (v3 % 0xAA);
    }
    result[1] = v4;
  }
  return result;
}

uint64_t std::deque<std::string>::~deque[abi:ne180100](void *a1)
{
  uint64_t v2 = (void **)a1[1];
  unint64_t v3 = (void **)a1[2];
  if (v3 == v2)
  {
    unint64_t v4 = a1 + 5;
    unint64_t v3 = (void **)a1[1];
  }
  else
  {
    unint64_t v4 = a1 + 5;
    unint64_t v5 = a1[4];
    unint64_t v6 = &v2[v5 / 0xAA];
    unint64_t v7 = (unint64_t)*v6;
    unint64_t v8 = (unint64_t)*v6 + 24 * (v5 % 0xAA);
    unint64_t v9 = (unint64_t)v2[(a1[5] + v5) / 0xAA] + 24 * ((a1[5] + v5) % 0xAA);
    if (v8 != v9)
    {
      do
      {
        if (*(char *)(v8 + 23) < 0)
        {
          operator delete(*(void **)v8);
          unint64_t v7 = (unint64_t)*v6;
        }
        v8 += 24;
        if (v8 - v7 == 4080)
        {
          unint64_t v10 = (unint64_t)v6[1];
          ++v6;
          unint64_t v7 = v10;
          unint64_t v8 = v10;
        }
      }
      while (v8 != v9);
      uint64_t v2 = (void **)a1[1];
      unint64_t v3 = (void **)a1[2];
    }
  }
  *unint64_t v4 = 0;
  unint64_t v11 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      unint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v11 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v12 = v11 >> 3;
  if (v12 == 1)
  {
    uint64_t v13 = 85;
  }
  else
  {
    if (v12 != 2) {
      goto LABEL_18;
    }
    uint64_t v13 = 170;
  }
  a1[4] = v13;
LABEL_18:
  while (v2 != v3)
  {
    unint64_t v14 = *v2++;
    operator delete(v14);
  }
  return std::__split_buffer<std::shared_ptr<std::vector<turi::flexible_type>> *,std::allocator<std::shared_ptr<std::vector<turi::flexible_type>> *>>::~__split_buffer((uint64_t)a1);
}

uint64_t std::vector<std::pair<std::string,unsigned long>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<std::string,unsigned long>>,std::reverse_iterator<std::pair<std::string,unsigned long>*>,std::reverse_iterator<std::pair<std::string,unsigned long>*>,std::reverse_iterator<std::pair<std::string,unsigned long>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<std::string,unsigned long>>,std::reverse_iterator<std::pair<std::string,unsigned long>*>,std::reverse_iterator<std::pair<std::string,unsigned long>*>,std::reverse_iterator<std::pair<std::string,unsigned long>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      long long v9 = *(_OWORD *)(a3 - 32);
      *(void *)(v8 - 16) = *(void *)(a3 - 16);
      *(_OWORD *)(v8 - 32) = v9;
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 32) = 0;
      *(void *)(v8 - 8) = *(void *)(a3 - 8);
      v8 -= 32;
      v7 -= 32;
      a3 -= 32;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v8;
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::reverse_iterator<std::pair<std::string,unsigned long>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::reverse_iterator<std::pair<std::string,unsigned long>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::reverse_iterator<std::pair<std::string,unsigned long>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::reverse_iterator<std::pair<std::string,unsigned long>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 32;
  }
}

uint64_t std::__split_buffer<std::pair<std::string,unsigned long>>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<std::pair<std::string,unsigned long>>::__destruct_at_end[abi:ne180100](uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 4;
      *(void *)(a1 + 16) = v2 - 4;
      if (*((char *)v2 - 9) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t std::deque<std::string>::__maybe_remove_front_spare[abi:ne180100](uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0xAA) {
    a2 = 1;
  }
  if (v2 < 0x154) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 170;
  }
  return v4 ^ 1u;
}

void turi::table_printer::print_row<turi::flexible_type>(std::vector<turi::flexible_type> const&)const::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/logging/table_printer/table_printer.hpp", 110);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  unint64_t v2 = (void *)std::ostream::operator<<();
  unint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  int v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"row_string.size()", 17);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"format.size()", 13);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  long long v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  unint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    unint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/logging/table_printer/table_printer.hpp", "operator()", 288, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  char v13 = v16;
  void turi::table_printer::print_row<turi::flexible_type>(std::vector<turi::flexible_type> const&)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F04644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::table_internal::table_printer_element<turi::flexible_type,void>::print(uint64_t a1, void *a2, unint64_t a3)
{
}

uint64_t turi::table_internal::table_printer_element<turi::flexible_type,void>::get_value@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(_DWORD *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 12) = 0;
  if (result + 8 != a2)
  {
    *(void *)(a2 + 5) = *(void *)(result + 13);
    *(void *)a2 = *(void *)(result + 8);
    unsigned int v2 = *(unsigned __int8 *)(result + 20);
    *(unsigned char *)(a2 + 12) = v2;
    BOOL v3 = v2 > 9;
    int v4 = (1 << v2) & 0x33C;
    if (!v3 && v4 != 0) {
      atomic_fetch_add(*(atomic_ullong *volatile *)a2, 1uLL);
    }
  }
  return result;
}

uint64_t turi::table_internal::table_printer_element<turi::flexible_type,void>::~table_printer_element(uint64_t a1)
{
  *(void *)a1 = &unk_26D75A050;
  switch(*(unsigned char *)(a1 + 20))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(a1 + 8), 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v2 = *(void *)(a1 + 8);
        if (v2)
        {
          if (*(char *)(v2 + 31) < 0) {
            operator delete(*(void **)(v2 + 8));
          }
          BOOL v3 = (void *)v2;
          uint64_t v4 = 0x1012C404EF22A49;
          goto LABEL_32;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(a1 + 8), 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v5 = *(void **)(a1 + 8);
        if (v5)
        {
          uint64_t v6 = (void *)v5[1];
          if (v6)
          {
            v5[2] = v6;
            operator delete(v6);
          }
          BOOL v3 = v5;
          uint64_t v4 = 0x1080C409938AC02;
          goto LABEL_32;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(a1 + 8), 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        if (v7)
        {
          char v15 = (void **)(v7 + 8);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v15);
          goto LABEL_18;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(a1 + 8), 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        if (v7)
        {
          char v15 = (void **)(v7 + 8);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v15);
LABEL_18:
          BOOL v3 = (void *)v7;
          uint64_t v4 = 0x1020C405E66F15BLL;
          goto LABEL_32;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(a1 + 8), 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v8 = *(void *)(a1 + 8);
        if (v8)
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)(v8 + 16));
          BOOL v3 = (void *)v8;
          unsigned int v9 = -235920773;
          goto LABEL_31;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(a1 + 8), 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v10 = *(void **)(a1 + 8);
        if (v10)
        {
          unint64_t v11 = (void *)v10[6];
          if (v11)
          {
            v10[7] = v11;
            operator delete(v11);
          }
          unint64_t v12 = (void *)v10[3];
          if (v12)
          {
            void v10[4] = v12;
            operator delete(v12);
          }
          char v13 = (std::__shared_weak_count *)v10[2];
          if (v13) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v13);
          }
          BOOL v3 = v10;
          unsigned int v9 = 2071181815;
LABEL_31:
          uint64_t v4 = v9 | 0x1030C4000000000;
LABEL_32:
          MEMORY[0x22A614FA0](v3, v4);
        }
      }
      break;
    default:
      break;
  }
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 2std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
  return a1;
}

void *std::allocate_shared[abi:ne180100]<turi::sframe_reader_buffer,std::allocator<turi::sframe_reader_buffer>,std::shared_ptr<turi::sframe_reader> &,unsigned long &,unsigned long &,void>@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, unint64_t *a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x88uLL);
  uint64_t result = std::__shared_ptr_emplace<turi::sframe_reader_buffer>::__shared_ptr_emplace[abi:ne180100]<std::shared_ptr<turi::sframe_reader> &,unsigned long &,unsigned long &,std::allocator<turi::sframe_reader_buffer>,0>(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_223F04A4C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<turi::sframe_reader_buffer>::__shared_ptr_emplace[abi:ne180100]<std::shared_ptr<turi::sframe_reader> &,unsigned long &,unsigned long &,std::allocator<turi::sframe_reader_buffer>,0>(void *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75A088;
  std::allocator<turi::sframe_reader_buffer>::construct[abi:ne180100]<turi::sframe_reader_buffer,std::shared_ptr<turi::sframe_reader> &,unsigned long &,unsigned long &>((uint64_t)&v6, (uint64_t)(a1 + 3), a2, a3, a4);
  return a1;
}

void sub_223F04AC4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::sframe_reader_buffer>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75A088;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::sframe_reader_buffer>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75A088;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::sframe_reader_buffer>::__on_zero_shared(uint64_t a1)
{
  std::allocator<turi::sframe_reader_buffer>::destroy[abi:ne180100]((uint64_t)&v1, a1 + 24);
}

void std::allocator<turi::sframe_reader_buffer>::construct[abi:ne180100]<turi::sframe_reader_buffer,std::shared_ptr<turi::sframe_reader> &,unsigned long &,unsigned long &>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t v5 = (std::__shared_weak_count *)a3[1];
  uint64_t v6 = *a3;
  uint64_t v7 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  turi::sframe_reader_buffer::sframe_reader_buffer(a2, &v6, *a4, *a5, 1024);
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_223F04BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::sframe_reader_buffer::sframe_reader_buffer(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  turi::sframe_reader_buffer::init((turi::sframe_rows *)a1, a2, a3, a4, a5);
  return a1;
}

void sub_223F04C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  unint64_t v12 = *(std::__shared_weak_count **)(v10 + 56);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  a10 = (void **)v10;
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

uint64_t turi::sframe_reader_buffer::init(turi::sframe_rows *this, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  if (v10) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
  }
  unint64_t v11 = (std::__shared_weak_count *)*((void *)this + 7);
  *((void *)this + 6) = v9;
  *((void *)this + 7) = v10;
  if (v11)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
    uint64_t v9 = *((void *)this + 6);
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = a3;
  unint64_t v12 = *(void *)(v9 + 40);
  if (v12 >= a4) {
    unint64_t v12 = a4;
  }
  *((void *)this + 1std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = a3;
  *((void *)this + 11) = v12;
  *((void *)this + 12) = a5;
  *((void *)this + 13) = a3;
  return turi::sframe_rows::clear(this);
}

void std::allocator<turi::sframe_reader_buffer>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(std::__shared_weak_count **)(a2 + 56);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  uint64_t v4 = (void **)a2;
  std::vector<std::shared_ptr<std::vector<turi::flexible_type>>>::__destroy_vector::operator()[abi:ne180100](&v4);
}

void std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__base_destruct_at_end[abi:ne180100](v2, (uint64_t)*v2);
    BOOL v3 = **a1;
    operator delete(v3);
  }
}

void *std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__base_destruct_at_end[abi:ne180100](void *result, uint64_t a2)
{
  BOOL v3 = result;
  for (uint64_t i = result[1]; i != a2; i -= 96)
  {
    std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100]((void *)(i - 32));
    std::__function::__value_func<void ()(std::vector<turi::flexible_type> &&)>::~__value_func[abi:ne180100]((void *)(i - 64));
    uint64_t result = std::__function::__value_func<void ()(std::vector<turi::flexible_type> const&)>::~__value_func[abi:ne180100]((void *)(i - 96));
  }
  v3[1] = a2;
  return result;
}

void **std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = (uint64_t)*(result - 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 5) >= a2)
  {
    if (a2)
    {
      uint64_t v13 = v7 + 96 * a2;
      uint64_t v14 = 96 * a2;
      char v15 = (void *)(v7 + 88);
      do
      {
        *(v15 - 8) = 0;
        *(v15 - 4) = 0;
        void *v15 = 0;
        v15 += 12;
        v14 -= 96;
      }
      while (v14);
    }
    else
    {
      uint64_t v13 = (uint64_t)*(result - 1);
    }
    a1[1] = v13;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 5);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x2AAAAAAAAAAAAAALL) {
      std::vector<float>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 5);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x155555555555555) {
      unint64_t v11 = 0x2AAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v23 = result;
    if (v11) {
      unint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<turi::sarray_reader_buffer<turi::flexible_type>>>((uint64_t)result, v11);
    }
    else {
      unint64_t v12 = 0;
    }
    uint64_t v19 = v12;
    uint64_t v20 = &v12[96 * v8];
    BOOL v22 = &v12[96 * v11];
    uint64_t v16 = &v20[96 * a2];
    uint64_t v17 = 96 * a2;
    uint64_t v18 = v20 + 88;
    do
    {
      *(v18 - 8) = 0;
      *(v18 - 4) = 0;
      *uint64_t v18 = 0;
      v18 += 12;
      v17 -= 96;
    }
    while (v17);
    uint64_t v21 = v16;
    std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__swap_out_circular_buffer(a1, &v19);
    return std::__split_buffer<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::~__split_buffer(&v19);
  }
  return result;
}

void sub_223F04F38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>,std::function<void ()(turi::sframe_rows const&)>*,std::function<void ()(turi::sframe_rows const&)>*>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>,std::function<void ()(turi::sframe_rows const&)>*,std::function<void ()(turi::sframe_rows const&)>*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 96;
      std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::construct[abi:ne180100]<std::function<void ()(turi::sframe_rows const&)>,std::function<void ()(turi::sframe_rows const&)>>(a1, v7 - 96, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 96;
      *((void *)&v16 + 1) -= 96;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::construct[abi:ne180100]<std::function<void ()(turi::sframe_rows const&)>,std::function<void ()(turi::sframe_rows const&)>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__function::__value_func<void ()(std::vector<turi::flexible_type> const&)>::__value_func[abi:ne180100](a2, a3);
  std::__function::__value_func<void ()(std::vector<turi::flexible_type> &&)>::__value_func[abi:ne180100](a2 + 32, a3 + 32);
  return std::__function::__value_func<void ()(turi::sframe_rows const&)>::__value_func[abi:ne180100](a2 + 64, a3 + 64);
}

uint64_t std::__function::__value_func<void ()(std::vector<turi::flexible_type> const&)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  BOOL v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    BOOL v3 = (void *)(a1 + 24);
  }
  *BOOL v3 = 0;
  return a1;
}

{
  uint64_t v3;

  BOOL v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t std::__function::__value_func<void ()(std::vector<turi::flexible_type> &&)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  BOOL v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    BOOL v3 = (void *)(a1 + 24);
  }
  *BOOL v3 = 0;
  return a1;
}

{
  uint64_t v3;

  BOOL v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void *std::_AllocatorDestroyRangeReverse<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::function<void ()(turi::sframe_rows const&)>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  char v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v15 = v3;
  uint64_t v16 = v2;
  uint64_t v17 = v3;
  uint64_t v18 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  uint64_t v13 = v6;
  return std::__allocator_destroy[abi:ne180100]<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>><std::function<void ()(turi::sframe_rows const&)>*>>,std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>><std::function<void ()(turi::sframe_rows const&)>*>>(v4, (uint64_t)v14, (uint64_t)v9);
}

void *std::__allocator_destroy[abi:ne180100]<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>,std::reverse_iterator<std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>><std::function<void ()(turi::sframe_rows const&)>*>>,std::allocator<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>><std::function<void ()(turi::sframe_rows const&)>*>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *(void **)(a2 + 32); i != *(void **)(a3 + 32); *(void *)(a2 + 32) = i)
  {
    std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100](i + 8);
    std::__function::__value_func<void ()(std::vector<turi::flexible_type> &&)>::~__value_func[abi:ne180100](i + 4);
    uint64_t result = std::__function::__value_func<void ()(std::vector<turi::flexible_type> const&)>::~__value_func[abi:ne180100](i);
    uint64_t i = (void *)(*(void *)(a2 + 32) + 96);
  }
  return result;
}

void **std::__split_buffer<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void *std::__split_buffer<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__destruct_at_end[abi:ne180100](void *result, uint64_t a2)
{
  uint64_t v2 = result[2];
  if (v2 != a2)
  {
    uint64_t v4 = result;
    do
    {
      uint64_t v4[2] = v2 - 96;
      std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100]((void *)(v2 - 32));
      std::__function::__value_func<void ()(std::vector<turi::flexible_type> &&)>::~__value_func[abi:ne180100]((void *)(v2 - 64));
      uint64_t result = std::__function::__value_func<void ()(std::vector<turi::flexible_type> const&)>::~__value_func[abi:ne180100]((void *)(v2 - 96));
      uint64_t v2 = v4[2];
    }
    while (v2 != a2);
  }
  return result;
}

uint64_t std::default_delete<turi::gl_sframe_writer_impl>::operator()[abi:ne180100](uint64_t a1, void **a2)
{
  if (a2)
  {
    uint64_t v4 = a2 + 37;
    std::vector<turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>>::__destroy_vector::operator()[abi:ne180100](&v4);
    turi::sframe::~sframe((turi::sframe *)a2);
    return MEMORY[0x22A614FA0]();
  }
  return result;
}

atomic_ullong *OUTLINED_FUNCTION_2_1(atomic_ullong *result)
{
  return result;
}

void std::__shared_ptr_emplace<turi::unity_sgraph>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75A0D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::unity_sgraph>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75A0D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::__shared_ptr_emplace<turi::unity_sgraph>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void **std::vector<turi::globals::global_value>::~vector[abi:ne180100](void **a1)
{
  uint64_t v3 = a1;
  std::vector<turi::globals::global_value>::__destroy_vector::operator()[abi:ne180100](&v3);
  return a1;
}

uint64_t std::map<std::string,unsigned long>::~map[abi:ne180100](uint64_t a1)
{
  return a1;
}

void turi::globals::global_value::~global_value(turi::globals::global_value *this)
{
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

uint64_t file_logger::operator<<<double>(uint64_t a1)
{
  uint64_t v2 = pthread_getspecific(*(void *)(a1 + 592));
  if (v2 && v2[280]) {
    std::ostream::operator<<();
  }
  return a1;
}

uint64_t file_logger::operator<<<long long>(uint64_t a1)
{
  uint64_t v2 = pthread_getspecific(*(void *)(a1 + 592));
  if (v2 && v2[280]) {
    std::ostream::operator<<();
  }
  return a1;
}

uint64_t turi::globals::list_globals@<X0>(turi::globals *this@<X0>, uint64_t a2@<X8>)
{
  int v2 = (int)this;
  uint64_t v39 = *MEMORY[0x263EF8340];
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  uint64_t result = (uint64_t)turi::globals::get_global_registry(this);
  uint64_t v5 = turi::globals::get_global_registry(void)::global_registry;
  for (uint64_t i = qword_2680815B8; v5 != i; v5 += 80)
  {
    if (*(unsigned __int8 *)(v5 + 72) == v2)
    {
      v34[0] = (void **)&v33;
      boost::detail::variant::visitation_impl<mpl_::int_<0>,boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<3l>,turi::globals::value_and_value_check<double>,boost::mpl::l_item<mpl_::long_<2l>,turi::globals::value_and_value_check<long long>,boost::mpl::l_item<mpl_::long_<1l>,turi::globals::value_and_value_check<std::string>,boost::mpl::l_end>>>>,boost::mpl::l_iter<boost::mpl::l_end>>,boost::detail::variant::invoke_visitor<turi::globals::get_value_visitor const,false>,void *,boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::has_fallback_type_>((boost::detail::variant *)*(unsigned int *)(v5 + 24), *(_DWORD *)(v5 + 24) ^ (*(int *)(v5 + 24) >> 31), (long long **)(v5 + 32), (uint64_t)&v35);
      std::pair<std::string,turi::flexible_type>::pair[abi:ne180100]<std::string&,turi::flexible_type,0>(&v37, (long long *)v5, (uint64_t)&v35);
      unint64_t v7 = *(void *)(a2 + 8);
      unint64_t v8 = *(void *)(a2 + 16);
      if (v7 >= v8)
      {
        unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - *(void *)a2) >> 3);
        unint64_t v13 = v12 + 1;
        if (v12 + 1 > 0x666666666666666) {
          std::vector<float>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v8 - *(void *)a2) >> 3);
        if (2 * v14 > v13) {
          unint64_t v13 = 2 * v14;
        }
        if (v14 >= 0x333333333333333) {
          unint64_t v15 = 0x666666666666666;
        }
        else {
          unint64_t v15 = v13;
        }
        v34[4] = (void **)(a2 + 16);
        uint64_t v16 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,turi::flexible_type>>>(a2 + 16, v15);
        uint64_t v17 = &v16[5 * v12];
        v34[0] = v16;
        v34[1] = v17;
        v34[3] = &v16[5 * v18];
        long long v19 = *(_OWORD *)&v37.__r_.__value_.__l.__data_;
        _OWORD v17[2] = (void *)v37.__r_.__value_.__r.__words[2];
        *(_OWORD *)uint64_t v17 = v19;
        memset(&v37, 0, sizeof(v37));
        v17[3] = 0;
        *((_DWORD *)v17 + 8) = 0;
        *((unsigned char *)v17 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
        uint64_t v20 = *(void **)v38;
        *(void **)((char *)v17 + 29) = *(void **)&v38[5];
        v17[3] = v20;
        *((unsigned char *)v17 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v38[12];
        v38[12] = 0;
        v34[2] = v17 + 5;
        std::vector<std::pair<std::string,turi::flexible_type>>::__swap_out_circular_buffer((uint64_t *)a2, v34);
        unint64_t v11 = *(void *)(a2 + 8);
        std::__split_buffer<std::pair<std::string,turi::flexible_type>>::~__split_buffer((uint64_t)v34);
      }
      else
      {
        long long v9 = *(_OWORD *)&v37.__r_.__value_.__l.__data_;
        *(void *)(v7 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *((void *)&v37.__r_.__value_.__l + 2);
        *(void *)(v7 + 24) = 0;
        *(_OWORD *)unint64_t v7 = v9;
        memset(&v37, 0, sizeof(v37));
        *(_DWORD *)(v7 + 32) = 0;
        *(unsigned char *)(v7 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
        uint64_t v10 = *(void *)&v38[5];
        *(void *)(v7 + 24) = *(void *)v38;
        *(void *)(v7 + 29) = v10;
        *(unsigned char *)(v7 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v38[12];
        v38[12] = 0;
        unint64_t v11 = v7 + 40;
      }
      *(void *)(a2 + 8) = v11;
      uint64_t result = std::pair<std::string,turi::flexible_type>::~pair((uint64_t)&v37);
      switch(v36)
      {
        case 2:
          if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v21 = v35;
            if (v35)
            {
              if (*((char *)v35 + 31) < 0) {
                operator delete((void *)v35[1]);
              }
              BOOL v22 = v21;
              uint64_t v23 = 0x1012C404EF22A49;
              goto LABEL_43;
            }
          }
          break;
        case 3:
          if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v30 = v35;
            if (v35)
            {
              double v31 = (void *)v35[1];
              if (v31)
              {
                v35[2] = (atomic_ullong)v31;
                operator delete(v31);
              }
              BOOL v22 = v30;
              uint64_t v23 = 0x1080C409938AC02;
              goto LABEL_43;
            }
          }
          break;
        case 4:
          if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v24 = v35;
            if (v35)
            {
              v34[0] = (void **)(v35 + 1);
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](v34);
              goto LABEL_38;
            }
          }
          break;
        case 5:
          if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v24 = v35;
            if (v35)
            {
              v34[0] = (void **)(v35 + 1);
              std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](v34);
LABEL_38:
              BOOL v22 = v24;
              uint64_t v23 = 0x1020C405E66F15BLL;
              goto LABEL_43;
            }
          }
          break;
        case 8:
          if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            unsigned int v32 = v35;
            if (v35)
            {
              boost::detail::shared_count::~shared_count((atomic_uint **)v35 + 2);
              BOOL v22 = v32;
              unsigned int v29 = -235920773;
              goto LABEL_42;
            }
          }
          break;
        case 9:
          if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v25 = v35;
            if (v35)
            {
              int64_t v26 = (void *)v35[6];
              if (v26)
              {
                v35[7] = (atomic_ullong)v26;
                operator delete(v26);
              }
              uint64_t v27 = (void *)v25[3];
              if (v27)
              {
                v25[4] = (atomic_ullong)v27;
                operator delete(v27);
              }
              unint64_t v28 = (std::__shared_weak_count *)v25[2];
              if (v28) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v28);
              }
              BOOL v22 = v25;
              unsigned int v29 = 2071181815;
LABEL_42:
              uint64_t v23 = v29 | 0x1030C4000000000;
LABEL_43:
              uint64_t result = MEMORY[0x22A614FA0](v22, v23);
            }
          }
          break;
        default:
          continue;
      }
    }
  }
  return result;
}

void sub_223F05FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va2, a7);
  va_start(va1, a7);
  va_start(va, a7);
  unint64_t v11 = va_arg(va1, _Unwind_Exception *);
  uint64_t v13 = va_arg(va1, void);
  va_copy(va2, va1);
  unint64_t v14 = va_arg(va2, void *);
  uint64_t v16 = va_arg(va2, void);
  std::pair<std::string,turi::flexible_type>::~pair((uint64_t)va2);
  switch(BYTE4(v16))
  {
    case 2:
      if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_20;
      }
      turi::globals::list_globals();
      goto LABEL_12;
    case 3:
      if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_20;
      }
      turi::globals::list_globals();
LABEL_12:
      a1 = v11;
      goto LABEL_20;
    case 4:
      if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_20;
      }
      unint64_t v8 = v14;
      if (!v14) {
        goto LABEL_20;
      }
      unint64_t v11 = (_Unwind_Exception *)(v14 + 1);
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
      goto LABEL_16;
    case 5:
      if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_20;
      }
      unint64_t v8 = v14;
      if (!v14) {
        goto LABEL_20;
      }
      unint64_t v11 = (_Unwind_Exception *)(v14 + 1);
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
LABEL_16:
      long long v9 = v8;
      uint64_t v10 = 0x1020C405E66F15BLL;
      break;
    case 8:
      if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL) == 1) {
        turi::globals::list_globals((uint64_t)va1);
      }
      goto LABEL_20;
    case 9:
      if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL) != 1 || !v14) {
        goto LABEL_20;
      }
      long long v9 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v14);
      uint64_t v10 = 0x1030C407B73B9F7;
      break;
    default:
      goto LABEL_20;
  }
  MEMORY[0x22A614FA0](v9, v10);
LABEL_20:
  std::vector<std::pair<std::string,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)va2);
  _Unwind_Resume(a1);
}

uint64_t turi::globals::set_global_impl(turi::globals *a1, uint64_t a2)
{
  void v9[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  turi::globals::get_global_registry_map(a1);
  v9[0] = (atomic_ullong *)a1;
  uint64_t v4 = std::__tree<std::__value_type<std::string,unsigned long>,std::__map_value_compare<std::string,std::__value_type<std::string,unsigned long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,unsigned long>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)&turi::globals::get_global_registry_map(void)::global_registry_map, (const void **)a1, (uint64_t)&std::piecewise_construct, (long long **)v9);
  uint64_t v5 = v4[7];
  memset(v9, 0, 13);
  if (v9 != (atomic_ullong **)a2)
  {
    *(atomic_ullong **)((char *)v9 + 5) = *(atomic_ullong **)(a2 + 5);
    v9[0] = *(atomic_ullong **)a2;
    BYTE4(v9[1]) = *(unsigned char *)(a2 + 12);
    if (BYTE4(v9[1]) <= 9u && ((1 << SBYTE4(v9[1])) & 0x33C) != 0) {
      atomic_fetch_add(v9[0], 1uLL);
    }
  }
  turi::globals::get_global_registry((turi::globals *)v4);
  unint64_t v8 = v9;
  has_fallback_char type = boost::detail::variant::visitation_impl<mpl_::int_<0>,boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<3l>,turi::globals::value_and_value_check<double>,boost::mpl::l_item<mpl_::long_<2l>,turi::globals::value_and_value_check<long long>,boost::mpl::l_item<mpl_::long_<1l>,turi::globals::value_and_value_check<std::string>,boost::mpl::l_end>>>>,boost::mpl::l_iter<boost::mpl::l_end>>,boost::detail::variant::invoke_visitor<turi::globals::set_value_visitor,false>,void *,boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::has_fallback_type_>((boost::detail::variant *)*(unsigned int *)(turi::globals::get_global_registry(void)::global_registry+ 80 * v5+ 24), *(_DWORD *)(turi::globals::get_global_registry(void)::global_registry + 80 * v5 + 24) ^ (*(int *)(turi::globals::get_global_registry(void)::global_registry + 80 * v5 + 24) >> 31), (uint64_t *)&v8, (uint64_t *)(turi::globals::get_global_registry(void)::global_registry + 80 * v5 + 32));
  turi::globals::set_value_visitor::~set_value_visitor(v9);
  return has_fallback_type;
}

void sub_223F062F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  turi::globals::set_value_visitor::~set_value_visitor((atomic_ullong *volatile *)va);
  _Unwind_Resume(a1);
}

uint64_t turi::globals::set_global(uint64_t a1, uint64_t a2)
{
  void v84[2] = *(atomic_ullong **)MEMORY[0x263EF8340];
  turi::globals::get_global_registry_map((turi::globals *)a1);
  uint64_t v4 = (turi::globals *)std::__tree<std::__value_type<std::string,turi::neural_net::shared_float_array>,std::__map_value_compare<std::string,std::__value_type<std::string,turi::neural_net::shared_float_array>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,turi::neural_net::shared_float_array>>>::__count_unique<std::string>((uint64_t)&turi::globals::get_global_registry_map(void)::global_registry_map, (const void **)a1);
  if (v4)
  {
    turi::globals::get_global_registry_map(v4);
    v80.__locale_ = (std::locale::__imp *)a1;
    uint64_t v5 = std::__tree<std::__value_type<std::string,unsigned long>,std::__map_value_compare<std::string,std::__value_type<std::string,unsigned long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,unsigned long>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)&turi::globals::get_global_registry_map(void)::global_registry_map, (const void **)a1, (uint64_t)&std::piecewise_construct, (long long **)&v80);
    uint64_t v6 = v5[7];
    turi::globals::get_global_registry((turi::globals *)v5);
    if (*(unsigned char *)(turi::globals::get_global_registry(void)::global_registry + 80 * v6 + 72))
    {
      if (*(char *)(a1 + 23) < 0) {
        std::string::__init_copy_ctor_external(&v77, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
      }
      else {
        std::string v77 = *(std::string *)a1;
      }
      memset(v82, 0, 13);
      if (v82 != (atomic_ullong **)a2)
      {
        *(atomic_ullong **)((char *)v82 + 5) = *(atomic_ullong **)(a2 + 5);
        v82[0] = *(atomic_ullong **)a2;
        BYTE4(v82[1]) = *(unsigned char *)(a2 + 12);
        if (BYTE4(v82[1]) <= 9u && ((1 << SBYTE4(v82[1])) & 0x33C) != 0) {
          atomic_fetch_add(v82[0], 1uLL);
        }
      }
      char v16 = turi::globals::set_global_impl((turi::globals *)&v77, (uint64_t)v82);
      switch(BYTE4(v82[1]))
      {
        case 2:
          if (atomic_fetch_add(v82[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v17 = v82[0];
            if (v82[0])
            {
              if (*((char *)v82[0] + 31) < 0) {
                operator delete(*((void **)v82[0] + 1));
              }
              uint64_t v18 = v17;
              uint64_t v19 = 0x1012C404EF22A49;
              goto LABEL_71;
            }
          }
          break;
        case 3:
          if (atomic_fetch_add(v82[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            double v31 = v82[0];
            if (v82[0])
            {
              unsigned int v32 = (void *)v82[0][1];
              if (v32)
              {
                v82[0][2] = (atomic_ullong)v32;
                operator delete(v32);
              }
              uint64_t v18 = v31;
              uint64_t v19 = 0x1080C409938AC02;
              goto LABEL_71;
            }
          }
          break;
        case 4:
          if (atomic_fetch_add(v82[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            unsigned int v29 = v82[0];
            if (v82[0])
            {
              v80.__locale_ = (std::locale::__imp *)(v82[0] + 1);
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
              goto LABEL_66;
            }
          }
          break;
        case 5:
          if (atomic_fetch_add(v82[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            unsigned int v29 = v82[0];
            if (v82[0])
            {
              v80.__locale_ = (std::locale::__imp *)(v82[0] + 1);
              std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
LABEL_66:
              uint64_t v18 = v29;
              uint64_t v19 = 0x1020C405E66F15BLL;
              goto LABEL_71;
            }
          }
          break;
        case 8:
          if (atomic_fetch_add(v82[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            char v33 = v82[0];
            if (v82[0])
            {
              boost::detail::shared_count::~shared_count((atomic_uint **)v82[0] + 2);
              uint64_t v18 = v33;
              unsigned int v30 = -235920773;
              goto LABEL_70;
            }
          }
          break;
        case 9:
          if (atomic_fetch_add(v82[0], 0xFFFFFFFFFFFFFFFFLL) == 1 && v82[0])
          {
            uint64_t v18 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v82[0]);
            unsigned int v30 = 2071181815;
LABEL_70:
            uint64_t v19 = v30 | 0x1030C4000000000;
LABEL_71:
            MEMORY[0x22A614FA0](v18, v19);
          }
          break;
        default:
          break;
      }
      memset(v82, 0, 13);
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v77.__r_.__value_.__l.__data_);
        if (v16) {
          return 0;
        }
      }
      else if (v16)
      {
        return 0;
      }
      uint64_t v34 = (int *)global_logger();
      if (v34[169] > 2) {
        return 3;
      }
      if (cppipc::must_cancel((cppipc *)v34)) {
        log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
      }
      long long v35 = (file_logger *)global_logger();
      started = file_logger::start_stream(v35, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/globals/globals.cpp", "set_global", 263, 1);
      std::string v37 = pthread_getspecific(*((void *)started + 74));
      if (v37 && *((unsigned char *)v37 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v37 + 2, (uint64_t)"Unable to change value of ", 26);
      }
      if (*(char *)(a1 + 23) < 0) {
        std::string::__init_copy_ctor_external(&v76, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
      }
      else {
        std::string v76 = *(std::string *)a1;
      }
      uint64_t v47 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v76);
      unint64_t v48 = pthread_getspecific(*(void *)(v47 + 592));
      if (v48 && *((unsigned char *)v48 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v48 + 2, (uint64_t)" to ", 4);
      }
      memset(v81, 0, 13);
      if (v81 != (atomic_ullong **)a2)
      {
        *(atomic_ullong **)((char *)v81 + 5) = *(atomic_ullong **)(a2 + 5);
        v81[0] = *(atomic_ullong **)a2;
        BYTE4(v81[1]) = *(unsigned char *)(a2 + 12);
        if (BYTE4(v81[1]) <= 9u && ((1 << SBYTE4(v81[1])) & 0x33C) != 0) {
          atomic_fetch_add(v81[0], 1uLL);
        }
      }
      uint64_t v49 = file_logger::operator<<<turi::flexible_type>(v47, (turi::flexible_type_impl *)v81);
      uint64_t v50 = pthread_getspecific(*(void *)(v49 + 592));
      if (v50 && *((unsigned char *)v50 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50 + 2, (uint64_t)". Invalid value.", 16);
      }
      long long v51 = pthread_getspecific(*(void *)(v49 + 592));
      if (v51)
      {
        if (*((unsigned char *)v51 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v51 + *(void *)(v51[2] - 24) + 16));
          uint64_t v52 = std::locale::use_facet(&v80, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v52->__vftable[2].~facet_0)(v52, 10);
          std::locale::~locale(&v80);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v49);
          if (*(_DWORD *)(v49 + 600) == 7)
          {
            __print_back_trace();
            exception = __cxa_allocate_exception(8uLL);
            void *exception = "LOG_FATAL encountered";
            __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      switch(BYTE4(v81[1]))
      {
        case 2:
          if (atomic_fetch_add(v81[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v53 = v81[0];
            if (v81[0])
            {
              if (*((char *)v81[0] + 31) < 0) {
                operator delete(*((void **)v81[0] + 1));
              }
              long long v54 = v53;
              uint64_t v55 = 0x1012C404EF22A49;
              goto LABEL_187;
            }
          }
          break;
        case 3:
          if (atomic_fetch_add(v81[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v69 = v81[0];
            if (v81[0])
            {
              uint64_t v70 = (void *)v81[0][1];
              if (v70)
              {
                v81[0][2] = (atomic_ullong)v70;
                operator delete(v70);
              }
              long long v54 = v69;
              uint64_t v55 = 0x1080C409938AC02;
              goto LABEL_187;
            }
          }
          break;
        case 4:
          if (atomic_fetch_add(v81[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            unsigned int v67 = v81[0];
            if (v81[0])
            {
              v80.__locale_ = (std::locale::__imp *)(v81[0] + 1);
              std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
              goto LABEL_182;
            }
          }
          break;
        case 5:
          if (atomic_fetch_add(v81[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            unsigned int v67 = v81[0];
            if (v81[0])
            {
              v80.__locale_ = (std::locale::__imp *)(v81[0] + 1);
              std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
LABEL_182:
              long long v54 = v67;
              uint64_t v55 = 0x1020C405E66F15BLL;
              goto LABEL_187;
            }
          }
          break;
        case 8:
          if (atomic_fetch_add(v81[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
          {
            uint64_t v71 = v81[0];
            if (v81[0])
            {
              boost::detail::shared_count::~shared_count((atomic_uint **)v81[0] + 2);
              long long v54 = v71;
              unsigned int v68 = -235920773;
              goto LABEL_186;
            }
          }
          break;
        case 9:
          if (atomic_fetch_add(v81[0], 0xFFFFFFFFFFFFFFFFLL) == 1 && v81[0])
          {
            long long v54 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v81[0]);
            unsigned int v68 = 2071181815;
LABEL_186:
            uint64_t v55 = v68 | 0x1030C4000000000;
LABEL_187:
            MEMORY[0x22A614FA0](v54, v55);
          }
          break;
        default:
          break;
      }
      memset(v81, 0, 13);
      uint64_t v15 = 3;
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
      {
        long long v61 = &v76;
        goto LABEL_190;
      }
      return v15;
    }
    unint64_t v11 = (int *)global_logger();
    if (v11[169] > 2) {
      return 2;
    }
    if (cppipc::must_cancel((cppipc *)v11)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    unint64_t v12 = (file_logger *)global_logger();
    uint64_t v13 = file_logger::start_stream(v12, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/globals/globals.cpp", "set_global", 258, 1);
    unint64_t v14 = pthread_getspecific(*((void *)v13 + 74));
    if (v14 && *((unsigned char *)v14 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14 + 2, (uint64_t)"Unable to change value of ", 26);
    }
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v78, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string v78 = *(std::string *)a1;
    }
    uint64_t v38 = file_logger::operator<<<std::string>((uint64_t)v13, (uint64_t)&v78);
    uint64_t v39 = pthread_getspecific(*(void *)(v38 + 592));
    if (v39 && *((unsigned char *)v39 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v39 + 2, (uint64_t)" to ", 4);
    }
    memset(v83, 0, 13);
    if (v83 != (atomic_ullong **)a2)
    {
      *(atomic_ullong **)((char *)v83 + 5) = *(atomic_ullong **)(a2 + 5);
      v83[0] = *(atomic_ullong **)a2;
      BYTE4(v83[1]) = *(unsigned char *)(a2 + 12);
      if (BYTE4(v83[1]) <= 9u && ((1 << SBYTE4(v83[1])) & 0x33C) != 0) {
        atomic_fetch_add(v83[0], 1uLL);
      }
    }
    uint64_t v40 = file_logger::operator<<<turi::flexible_type>(v38, (turi::flexible_type_impl *)v83);
    int64_t v41 = pthread_getspecific(*(void *)(v40 + 592));
    if (v41 && *((unsigned char *)v41 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v41 + 2, (uint64_t)". Variable is not runtime modifiable.", 37);
    }
    uint64_t v42 = pthread_getspecific(*(void *)(v40 + 592));
    if (v42)
    {
      if (*((unsigned char *)v42 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v42 + *(void *)(v42[2] - 24) + 16));
        uint64_t v43 = std::locale::use_facet(&v80, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v43->__vftable[2].~facet_0)(v43, 10);
        std::locale::~locale(&v80);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v40);
        if (*(_DWORD *)(v40 + 600) == 7)
        {
          __print_back_trace();
          uint64_t v74 = __cxa_allocate_exception(8uLL);
          *uint64_t v74 = "LOG_FATAL encountered";
          __cxa_throw(v74, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    switch(BYTE4(v83[1]))
    {
      case 2:
        if (atomic_fetch_add(v83[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v44 = v83[0];
          if (v83[0])
          {
            if (*((char *)v83[0] + 31) < 0) {
              operator delete(*((void **)v83[0] + 1));
            }
            double v45 = v44;
            uint64_t v46 = 0x1012C404EF22A49;
            goto LABEL_165;
          }
        }
        break;
      case 3:
        if (atomic_fetch_add(v83[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v64 = v83[0];
          if (v83[0])
          {
            uint64_t v65 = (void *)v83[0][1];
            if (v65)
            {
              v83[0][2] = (atomic_ullong)v65;
              operator delete(v65);
            }
            double v45 = v64;
            uint64_t v46 = 0x1080C409938AC02;
            goto LABEL_165;
          }
        }
        break;
      case 4:
        if (atomic_fetch_add(v83[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          long long v62 = v83[0];
          if (v83[0])
          {
            v80.__locale_ = (std::locale::__imp *)(v83[0] + 1);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
            goto LABEL_160;
          }
        }
        break;
      case 5:
        if (atomic_fetch_add(v83[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          long long v62 = v83[0];
          if (v83[0])
          {
            v80.__locale_ = (std::locale::__imp *)(v83[0] + 1);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
LABEL_160:
            double v45 = v62;
            uint64_t v46 = 0x1020C405E66F15BLL;
            goto LABEL_165;
          }
        }
        break;
      case 8:
        if (atomic_fetch_add(v83[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          atomic_ullong *volatile v66 = v83[0];
          if (v83[0])
          {
            boost::detail::shared_count::~shared_count((atomic_uint **)v83[0] + 2);
            double v45 = v66;
            unsigned int v63 = -235920773;
            goto LABEL_164;
          }
        }
        break;
      case 9:
        if (atomic_fetch_add(v83[0], 0xFFFFFFFFFFFFFFFFLL) == 1 && v83[0])
        {
          double v45 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v83[0]);
          unsigned int v63 = 2071181815;
LABEL_164:
          uint64_t v46 = v63 | 0x1030C4000000000;
LABEL_165:
          MEMORY[0x22A614FA0](v45, v46);
        }
        break;
      default:
        break;
    }
    memset(v83, 0, 13);
    uint64_t v15 = 2;
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    {
      long long v61 = &v78;
      goto LABEL_190;
    }
  }
  else
  {
    unint64_t v7 = (int *)global_logger();
    if (v7[169] > 2) {
      return 1;
    }
    if (cppipc::must_cancel((cppipc *)v7)) {
      log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
    }
    unint64_t v8 = (file_logger *)global_logger();
    long long v9 = file_logger::start_stream(v8, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/globals/globals.cpp", "set_global", 252, 1);
    uint64_t v10 = pthread_getspecific(*((void *)v9 + 74));
    if (v10 && *((unsigned char *)v10 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10 + 2, (uint64_t)"Unable to change value of ", 26);
    }
    if (*(char *)(a1 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v79, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else {
      std::string v79 = *(std::string *)a1;
    }
    uint64_t v20 = file_logger::operator<<<std::string>((uint64_t)v9, (uint64_t)&v79);
    uint64_t v21 = pthread_getspecific(*(void *)(v20 + 592));
    if (v21 && *((unsigned char *)v21 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21 + 2, (uint64_t)" to ", 4);
    }
    memset(v84, 0, 13);
    if (v84 != (atomic_ullong **)a2)
    {
      *(atomic_ullong **)((char *)v84 + 5) = *(atomic_ullong **)(a2 + 5);
      v84[0] = *(atomic_ullong **)a2;
      BYTE4(v84[1]) = *(unsigned char *)(a2 + 12);
      if (BYTE4(v84[1]) <= 9u && ((1 << SBYTE4(v84[1])) & 0x33C) != 0) {
        atomic_fetch_add(v84[0], 1uLL);
      }
    }
    uint64_t v22 = file_logger::operator<<<turi::flexible_type>(v20, (turi::flexible_type_impl *)v84);
    uint64_t v23 = pthread_getspecific(*(void *)(v22 + 592));
    if (v23 && *((unsigned char *)v23 + 280)) {
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v23 + 2, (uint64_t)". No such configuration variable.", 33);
    }
    uint64_t v24 = pthread_getspecific(*(void *)(v22 + 592));
    if (v24)
    {
      if (*((unsigned char *)v24 + 280))
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v24 + *(void *)(v24[2] - 24) + 16));
        uint64_t v25 = std::locale::use_facet(&v80, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v25->__vftable[2].~facet_0)(v25, 10);
        std::locale::~locale(&v80);
        std::ostream::put();
        std::ostream::flush();
        file_logger::stream_flush((file_logger *)v22);
        if (*(_DWORD *)(v22 + 600) == 7)
        {
          __print_back_trace();
          uint64_t v73 = __cxa_allocate_exception(8uLL);
          *uint64_t v73 = "LOG_FATAL encountered";
          __cxa_throw(v73, MEMORY[0x263F8C1D8], 0);
        }
      }
    }
    switch(BYTE4(v84[1]))
    {
      case 2:
        if (atomic_fetch_add(v84[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          int64_t v26 = v84[0];
          if (v84[0])
          {
            if (*((char *)v84[0] + 31) < 0) {
              operator delete(*((void **)v84[0] + 1));
            }
            uint64_t v27 = v26;
            uint64_t v28 = 0x1012C404EF22A49;
            goto LABEL_143;
          }
        }
        break;
      case 3:
        if (atomic_fetch_add(v84[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          uint64_t v58 = v84[0];
          if (v84[0])
          {
            uint64_t v59 = (void *)v84[0][1];
            if (v59)
            {
              v84[0][2] = (atomic_ullong)v59;
              operator delete(v59);
            }
            uint64_t v27 = v58;
            uint64_t v28 = 0x1080C409938AC02;
            goto LABEL_143;
          }
        }
        break;
      case 4:
        if (atomic_fetch_add(v84[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          int v56 = v84[0];
          if (v84[0])
          {
            v80.__locale_ = (std::locale::__imp *)(v84[0] + 1);
            std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
            goto LABEL_138;
          }
        }
        break;
      case 5:
        if (atomic_fetch_add(v84[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          int v56 = v84[0];
          if (v84[0])
          {
            v80.__locale_ = (std::locale::__imp *)(v84[0] + 1);
            std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
LABEL_138:
            uint64_t v27 = v56;
            uint64_t v28 = 0x1020C405E66F15BLL;
            goto LABEL_143;
          }
        }
        break;
      case 8:
        if (atomic_fetch_add(v84[0], 0xFFFFFFFFFFFFFFFFLL) == 1)
        {
          long long v60 = v84[0];
          if (v84[0])
          {
            boost::detail::shared_count::~shared_count((atomic_uint **)v84[0] + 2);
            uint64_t v27 = v60;
            unsigned int v57 = -235920773;
            goto LABEL_142;
          }
        }
        break;
      case 9:
        if (atomic_fetch_add(v84[0], 0xFFFFFFFFFFFFFFFFLL) == 1 && v84[0])
        {
          uint64_t v27 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v84[0]);
          unsigned int v57 = 2071181815;
LABEL_142:
          uint64_t v28 = v57 | 0x1030C4000000000;
LABEL_143:
          MEMORY[0x22A614FA0](v27, v28);
        }
        break;
      default:
        break;
    }
    memset(v84, 0, 13);
    uint64_t v15 = 1;
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
    {
      long long v61 = &v79;
LABEL_190:
      operator delete(v61->__r_.__value_.__l.__data_);
    }
  }
  return v15;
}

void sub_223F07204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,std::locale a37)
{
  std::locale::~locale(&a37);
  switch(*(unsigned char *)(v37 - 108))
  {
    case 2:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v37 - 120), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v39 = *(void *)(v37 - 120);
      if (!v39) {
        goto LABEL_27;
      }
      if (*(char *)(v39 + 31) < 0) {
        operator delete(*(void **)(v39 + 8));
      }
      uint64_t v40 = (void *)v39;
      uint64_t v41 = 0x1012C404EF22A49;
      goto LABEL_26;
    case 3:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v37 - 120), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      double v45 = *(void **)(v37 - 120);
      if (!v45) {
        goto LABEL_27;
      }
      uint64_t v46 = (void *)v45[1];
      if (v46)
      {
        v45[2] = v46;
        operator delete(v46);
      }
      uint64_t v40 = v45;
      uint64_t v41 = 0x1080C409938AC02;
      goto LABEL_26;
    case 4:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v37 - 120), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v42 = *(void **)(v37 - 120);
      if (!v42) {
        goto LABEL_27;
      }
      a36 = v42 + 1;
      std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&a36);
      goto LABEL_21;
    case 5:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v37 - 120), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v42 = *(void **)(v37 - 120);
      if (!v42) {
        goto LABEL_27;
      }
      a36 = v42 + 1;
      std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a36);
LABEL_21:
      uint64_t v40 = v42;
      uint64_t v41 = 0x1020C405E66F15BLL;
      goto LABEL_26;
    case 8:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v37 - 120), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v47 = *(void *)(v37 - 120);
      if (!v47) {
        goto LABEL_27;
      }
      boost::detail::shared_count::~shared_count((atomic_uint **)(v47 + 16));
      uint64_t v40 = (void *)v47;
      unsigned int v44 = -235920773;
      goto LABEL_25;
    case 9:
      if (atomic_fetch_add(*(atomic_ullong *volatile *)(v37 - 120), 0xFFFFFFFFFFFFFFFFLL) != 1) {
        goto LABEL_27;
      }
      uint64_t v43 = *(void **)(v37 - 120);
      if (!v43) {
        goto LABEL_27;
      }
      uint64_t v40 = std::pair<turi::atomic<unsigned long>,turi::flexible_type_impl::ndarray<double>>::~pair(v43);
      unsigned int v44 = 2071181815;
LABEL_25:
      uint64_t v41 = v44 | 0x1030C4000000000;
LABEL_26:
      MEMORY[0x22A614FA0](v40, v41);
LABEL_27:
      *(void *)(v37 - 12std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
      *(_DWORD *)(v37 - 112) = 0;
      *(unsigned char *)(v37 - 108) = 0;
      if (a14 < 0) {
        operator delete(a9);
      }
      _Unwind_Resume(a1);
      return;
    default:
      goto LABEL_27;
  }
}

uint64_t file_logger::operator<<<turi::flexible_type>(uint64_t a1, turi::flexible_type_impl *a2)
{
  uint64_t v4 = pthread_getspecific(*(void *)(a1 + 592));
  if (v4)
  {
    uint64_t v5 = v4;
    if (v4[280])
    {
      switch(*((unsigned char *)a2 + 12))
      {
        case 0:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v13);
          std::ostream::operator<<();
          std::stringbuf::str();
          goto LABEL_6;
        case 1:
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v13);
          std::ostream::operator<<();
          std::stringbuf::str();
LABEL_6:
          v13[0] = *MEMORY[0x263F8C2B8];
          uint64_t v6 = *(void *)(MEMORY[0x263F8C2B8] + 72);
          *(void *)((char *)v13 + *(void *)(v13[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
          v13[2] = v6;
          void v13[3] = MEMORY[0x263F8C318] + 16;
          if (v14 < 0) {
            operator delete((void *)v13[11]);
          }
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x22A614E30](&v15);
          break;
        case 2:
          uint64_t v7 = *(void *)a2;
          if (*(char *)(*(void *)a2 + 31) < 0)
          {
            std::string::__init_copy_ctor_external(&v12, *(const std::string::value_type **)(v7 + 8), *(void *)(v7 + 16));
          }
          else
          {
            long long v8 = *(_OWORD *)(v7 + 8);
            v12.__r_.__value_.__r.__words[2] = *(void *)(v7 + 24);
            *(_OWORD *)&v12.__r_.__value_.__l.__data_ = v8;
          }
          break;
        case 3:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v13, (void *)(*(void *)a2 + 8));
          break;
        case 4:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v13, (uint64_t *)(*(void *)a2 + 8));
          break;
        case 5:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v13, (void *)(*(void *)a2 + 8));
          break;
        case 6:
          turi::flexible_type_impl::get_string_visitor::operator()(a2, &v12);
          break;
        case 7:
          memset(&v12, 0, sizeof(v12));
          break;
        case 8:
          turi::flexible_type_impl::get_string_visitor::operator()();
          break;
        case 9:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)v13, (void *)(*(void *)a2 + 8));
          break;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v9 = &v12;
      }
      else {
        long long v9 = (std::string *)v12.__r_.__value_.__r.__words[0];
      }
      if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v12.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>((void *)v5 + 2, (uint64_t)v9, size);
      if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v12.__r_.__value_.__l.__data_);
      }
    }
  }
  return a1;
}

void sub_223F07C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

std::string *turi::globals::initialize_globals_from_environment(turi::globals *a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  turi::globals::get_global_registry(a1);
  uint64_t v2 = turi::globals::get_global_registry(void)::global_registry;
  uint64_t v1 = qword_2680815B8;
  if (turi::globals::get_global_registry(void)::global_registry != qword_2680815B8)
  {
    while (1)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v35, *(const std::string::value_type **)v2, *(void *)(v2 + 8));
      }
      else
      {
        long long v3 = *(_OWORD *)v2;
        v35.__r_.__value_.__r.__words[2] = *(void *)(v2 + 16);
        *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v3;
      }
      uint64_t v4 = (v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
         ? (turi *)&v35
         : (turi *)v35.__r_.__value_.__r.__words[0];
      turi::getenv_str(v4, (uint64_t)v37);
      if (v37[0]) {
        break;
      }
LABEL_58:
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v35.__r_.__value_.__l.__data_);
      }
      v2 += 80;
      if (v2 == v1) {
        return std::string::operator=((std::string *)&turi::GLOBALS_MAIN_PROCESS_PATH, (const std::string *)a1);
      }
    }
    memset(&v34, 0, sizeof(v34));
    std::string::operator=(&v34, &v38);
    v36.__locale_ = (std::locale::__imp *)&v34;
    if (boost::detail::variant::visitation_impl<mpl_::int_<0>,boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<3l>,turi::globals::value_and_value_check<double>,boost::mpl::l_item<mpl_::long_<2l>,turi::globals::value_and_value_check<long long>,boost::mpl::l_item<mpl_::long_<1l>,turi::globals::value_and_value_check<std::string>,boost::mpl::l_end>>>>,boost::mpl::l_iter<boost::mpl::l_end>>,boost::detail::variant::invoke_visitor<turi::globals::set_value_from_string_visitor,false>,void *,boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::has_fallback_type_>((boost::detail::variant *)*(unsigned int *)(v2 + 24), *(_DWORD *)(v2 + 24) ^ (*(int *)(v2 + 24) >> 31), (const std::string **)&v36, (uint64_t *)(v2 + 32)))
    {
      uint64_t v5 = (int *)global_logger();
      if (v5[169] > 2) {
        goto LABEL_53;
      }
      if (cppipc::must_cancel((cppipc *)v5)) {
        goto LABEL_62;
      }
      uint64_t v6 = (file_logger *)global_logger();
      started = file_logger::start_stream(v6, 2, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/globals/globals.cpp", "initialize_globals_from_environment", 278, 1);
      long long v8 = pthread_getspecific(*((void *)started + 74));
      if (v8 && *((unsigned char *)v8 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8 + 2, (uint64_t)"Setting configuration variable ", 31);
      }
      if (*(char *)(v2 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v33, *(const std::string::value_type **)v2, *(void *)(v2 + 8));
      }
      else
      {
        long long v9 = *(_OWORD *)v2;
        v33.__r_.__value_.__r.__words[2] = *(void *)(v2 + 16);
        *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
      }
      uint64_t v15 = file_logger::operator<<<std::string>((uint64_t)started, (uint64_t)&v33);
      char v16 = pthread_getspecific(*(void *)(v15 + 592));
      if (v16 && *((unsigned char *)v16 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16 + 2, (uint64_t)" to ", 4);
      }
      if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v32, v34.__r_.__value_.__l.__data_, v34.__r_.__value_.__l.__size_);
      }
      else {
        std::string v32 = v34;
      }
      uint64_t v19 = file_logger::operator<<<std::string>(v15, (uint64_t)&v32);
      uint64_t v20 = pthread_getspecific(*(void *)(v19 + 592));
      if (v20)
      {
        if (*((unsigned char *)v20 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v20 + *(void *)(v20[2] - 24) + 16));
          uint64_t v21 = std::locale::use_facet(&v36, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v21->__vftable[2].~facet_0)(v21, 10);
          std::locale::~locale(&v36);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v19);
          if (*(_DWORD *)(v19 + 600) == 7)
          {
            __print_back_trace();
            exception = __cxa_allocate_exception(8uLL);
            void *exception = "LOG_FATAL encountered";
            __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_53;
      }
      uint64_t v22 = &v33;
    }
    else
    {
      uint64_t v10 = (int *)global_logger();
      if (v10[169] > 3) {
        goto LABEL_53;
      }
      if (cppipc::must_cancel((cppipc *)v10)) {
LABEL_62:
      }
        log_stream_dispatch<true>::exec(int,char const*,char const*,int,BOOL)::{lambda(void)#1}::operator()();
      unint64_t v11 = (file_logger *)global_logger();
      std::string v12 = file_logger::start_stream(v11, 3, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/globals/globals.cpp", "initialize_globals_from_environment", 281, 1);
      uint64_t v13 = pthread_getspecific(*((void *)v12 + 74));
      if (v13 && *((unsigned char *)v13 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13 + 2, (uint64_t)"Cannot set configuration variable ", 34);
      }
      if (*(char *)(v2 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v31, *(const std::string::value_type **)v2, *(void *)(v2 + 8));
      }
      else
      {
        long long v14 = *(_OWORD *)v2;
        v31.__r_.__value_.__r.__words[2] = *(void *)(v2 + 16);
        *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v14;
      }
      uint64_t v17 = file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&v31);
      uint64_t v18 = pthread_getspecific(*(void *)(v17 + 592));
      if (v18 && *((unsigned char *)v18 + 280)) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18 + 2, (uint64_t)" to ", 4);
      }
      if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v30, v34.__r_.__value_.__l.__data_, v34.__r_.__value_.__l.__size_);
      }
      else {
        std::string v30 = v34;
      }
      uint64_t v23 = file_logger::operator<<<std::string>(v17, (uint64_t)&v30);
      uint64_t v24 = pthread_getspecific(*(void *)(v23 + 592));
      if (v24)
      {
        if (*((unsigned char *)v24 + 280))
        {
          std::ios_base::getloc((const std::ios_base *)((char *)v24 + *(void *)(v24[2] - 24) + 16));
          uint64_t v25 = std::locale::use_facet(&v36, MEMORY[0x263F8C108]);
          ((void (*)(const std::locale::facet *, uint64_t))v25->__vftable[2].~facet_0)(v25, 10);
          std::locale::~locale(&v36);
          std::ostream::put();
          std::ostream::flush();
          file_logger::stream_flush((file_logger *)v23);
          if (*(_DWORD *)(v23 + 600) == 7)
          {
            __print_back_trace();
            uint64_t v28 = __cxa_allocate_exception(8uLL);
            *uint64_t v28 = "LOG_FATAL encountered";
            __cxa_throw(v28, MEMORY[0x263F8C1D8], 0);
          }
        }
      }
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v30.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_53;
      }
      uint64_t v22 = &v31;
    }
    operator delete(v22->__r_.__value_.__l.__data_);
LABEL_53:
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v34.__r_.__value_.__l.__data_);
    }
    if (v37[0] && SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    goto LABEL_58;
  }
  return std::string::operator=((std::string *)&turi::GLOBALS_MAIN_PROCESS_PATH, (const std::string *)a1);
}

void sub_223F081C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a43 < 0) {
    operator delete(a38);
  }
  if (*(unsigned char *)(v49 - 128) && *(char *)(v49 - 97) < 0) {
    operator delete(*(void **)(v49 - 120));
  }
  if (a49 < 0) {
    operator delete(a44);
  }
  _Unwind_Resume(exception_object);
}

void turi::globals::set_value_visitor::~set_value_visitor(atomic_ullong *volatile *this)
{
  switch(*((unsigned char *)this + 12))
  {
    case 2:
      if (atomic_fetch_add(*this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v2 = *this;
        if (*this)
        {
          if (*((char *)v2 + 31) < 0) {
            operator delete((void *)v2[1]);
          }
          atomic_ullong *volatile v3 = v2;
          uint64_t v4 = 0x1012C404EF22A49;
          goto LABEL_32;
        }
      }
      break;
    case 3:
      if (atomic_fetch_add(*this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v5 = *this;
        if (*this)
        {
          uint64_t v6 = (void *)v5[1];
          if (v6)
          {
            v5[2] = (atomic_ullong)v6;
            operator delete(v6);
          }
          atomic_ullong *volatile v3 = v5;
          uint64_t v4 = 0x1080C409938AC02;
          goto LABEL_32;
        }
      }
      break;
    case 4:
      if (atomic_fetch_add(*this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v7 = *this;
        if (*this)
        {
          long long v14 = (void **)(v7 + 1);
          std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v14);
          goto LABEL_18;
        }
      }
      break;
    case 5:
      if (atomic_fetch_add(*this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v7 = *this;
        if (*this)
        {
          long long v14 = (void **)(v7 + 1);
          std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](&v14);
LABEL_18:
          atomic_ullong *volatile v3 = v7;
          uint64_t v4 = 0x1020C405E66F15BLL;
          goto LABEL_32;
        }
      }
      break;
    case 8:
      if (atomic_fetch_add(*this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v8 = *this;
        if (*this)
        {
          boost::detail::shared_count::~shared_count((atomic_uint **)v8 + 2);
          atomic_ullong *volatile v3 = v8;
          unsigned int v9 = -235920773;
          goto LABEL_31;
        }
      }
      break;
    case 9:
      if (atomic_fetch_add(*this, 0xFFFFFFFFFFFFFFFFLL) == 1)
      {
        atomic_ullong *volatile v10 = *this;
        if (*this)
        {
          unint64_t v11 = (void *)v10[6];
          if (v11)
          {
            v10[7] = (atomic_ullong)v11;
            operator delete(v11);
          }
          std::string v12 = (void *)v10[3];
          if (v12)
          {
            void v10[4] = (atomic_ullong)v12;
            operator delete(v12);
          }
          uint64_t v13 = (std::__shared_weak_count *)v10[2];
          if (v13) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v13);
          }
          atomic_ullong *volatile v3 = v10;
          unsigned int v9 = 2071181815;
LABEL_31:
          uint64_t v4 = v9 | 0x1030C4000000000;
LABEL_32:
          MEMORY[0x22A614FA0](v3, v4);
        }
      }
      break;
    default:
      break;
  }
  *this = 0;
  *((_DWORD *)this + 2) = 0;
  *((unsigned char *)this + 12) = 0;
}

void std::vector<turi::globals::global_value>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  atomic_ullong *volatile v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    atomic_ullong *volatile v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 80;
        std::allocator<turi::globals::global_value>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      atomic_ullong *volatile v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::_AllocatorDestroyRangeReverse<std::allocator<turi::globals::global_value>,std::reverse_iterator<turi::globals::global_value*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      std::allocator<turi::globals::global_value>::destroy[abi:ne180100](v3, v1);
      v1 += 80;
    }
    while (v1 != v2);
  }
}

uint64_t boost::detail::variant::visitation_impl<mpl_::int_<0>,boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<3l>,turi::globals::value_and_value_check<double>,boost::mpl::l_item<mpl_::long_<2l>,turi::globals::value_and_value_check<long long>,boost::mpl::l_item<mpl_::long_<1l>,turi::globals::value_and_value_check<std::string>,boost::mpl::l_end>>>>,boost::mpl::l_iter<boost::mpl::l_end>>,boost::detail::variant::invoke_visitor<turi::globals::get_pointer_visitor const,false>,void *,boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::has_fallback_type_>(boost::detail::variant *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if (a2 >= 3) {
    boost::detail::variant::forced_return<void>(a1);
  }
  return *(void *)a4;
}

void std::vector<std::pair<std::string,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    atomic_ullong *volatile v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = std::pair<std::string,turi::flexible_type>::~pair(v4 - 40);
      while ((void *)v4 != v2);
      atomic_ullong *volatile v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

boost::detail::variant *boost::detail::variant::visitation_impl<mpl_::int_<0>,boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<3l>,turi::globals::value_and_value_check<double>,boost::mpl::l_item<mpl_::long_<2l>,turi::globals::value_and_value_check<long long>,boost::mpl::l_item<mpl_::long_<1l>,turi::globals::value_and_value_check<std::string>,boost::mpl::l_end>>>>,boost::mpl::l_iter<boost::mpl::l_end>>,boost::detail::variant::invoke_visitor<turi::globals::get_value_visitor const,false>,void *,boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::has_fallback_type_>@<X0>(boost::detail::variant *result@<X0>, int a2@<W1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  switch(a2)
  {
    case 0:
      if (*a3) {
        uint64_t v4 = *(void *)*a3;
      }
      else {
        uint64_t v4 = 0;
      }
      *(_DWORD *)(a4 + 8) = 0;
      *(unsigned char *)(a4 + 12) = 1;
      *(void *)a4 = v4;
      break;
    case 1:
      atomic_ullong *volatile v5 = *a3;
      if (*a3) {
        atomic_ullong *volatile v5 = *(long long **)v5;
      }
      *(unsigned char *)(a4 + 12) = 0;
      *(_DWORD *)(a4 + 8) = 0;
      *(void *)a4 = v5;
      break;
    case 2:
      turi::globals::get_value_visitor::operator()<turi::globals::value_and_value_check<std::string>>(a3, a4);
    default:
      boost::detail::variant::forced_return_no_return(result);
  }
  return result;
}

void turi::globals::get_value_visitor::operator()<turi::globals::value_and_value_check<std::string>>(long long **a1@<X1>, uint64_t a2@<X8>)
{
  turi::globals::value_and_value_check<std::string>::get_value(a1, &__p);
  turi::flexible_type::flexible_type<std::string>(a2);
}

void sub_223F088A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::globals::value_and_value_check<std::string>::get_value(long long **a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    if (*((char *)v2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)v2, *((void *)v2 + 1));
    }
    else
    {
      long long v3 = *v2;
      a2->__r_.__value_.__r.__words[2] = *((void *)v2 + 2);
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v3;
    }
  }
  else
  {
    a2->__r_.__value_.__r.__words[0] = 0;
    a2->__r_.__value_.__l.__size_ = 0;
    a2->__r_.__value_.__r.__words[2] = 0;
  }
}

uint64_t *std::vector<std::pair<std::string,turi::flexible_type>>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  if (v2 != *result)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v4 + v5;
      uint64_t v7 = v2 + v5;
      long long v8 = *(_OWORD *)(v2 + v5 - 40);
      *(void *)(v6 - 24) = *(void *)(v2 + v5 - 24);
      *(_OWORD *)(v6 - 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = v8;
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 4std::unique_ptr<turi::neural_net::model_spec>::reset[abi:ne180100](&a9, 0) = 0;
      *(void *)(v6 - 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
      *(_DWORD *)(v6 - 8) = 0;
      *(unsigned char *)(v6 - 4) = 0;
      uint64_t v9 = *(void *)(v2 + v5 - 16);
      *(void *)(v6 - 11) = *(void *)(v2 + v5 - 11);
      *(void *)(v6 - 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v9;
      *(unsigned char *)(v6 - 4) = *(unsigned char *)(v2 + v5 - 4);
      *(unsigned char *)(v7 - 4) = 0;
      v5 -= 40;
    }
    while (v2 + v5 != v3);
    v4 += v5;
  }
  a2[1] = v4;
  uint64_t v10 = *result;
  void *result = v4;
  a2[1] = v10;
  uint64_t v11 = result[1];
  result[1] = a2[2];
  a2[2] = v11;
  uint64_t v12 = result[2];
  result[2] = a2[3];
  a2[3] = v12;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,turi::flexible_type>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(40 * a2);
}

uint64_t std::__split_buffer<std::pair<std::string,turi::flexible_type>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = i - 40;
    std::pair<std::string,turi::flexible_type>::~pair(i - 40);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

std::string *std::pair<std::string,turi::flexible_type>::pair[abi:ne180100]<std::string&,turi::flexible_type,0>(std::string *this, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  this[1].__r_.__value_.__r.__words[0] = 0;
  LODWORD(this[1].__r_.__value_.__r.__words[1]) = 0;
  this[1].__r_.__value_.__s.__data_[12] = 0;
  std::string::size_type v6 = *(void *)a3;
  *(std::string::size_type *)((char *)this[1].__r_.__value_.__r.__words + 5) = *(void *)(a3 + 5);
  this[1].__r_.__value_.__r.__words[0] = v6;
  this[1].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a3 + 12);
  *(unsigned char *)(a3 + 12) = 0;
  return this;
}

uint64_t boost::detail::variant::visitation_impl<mpl_::int_<0>,boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<3l>,turi::globals::value_and_value_check<double>,boost::mpl::l_item<mpl_::long_<2l>,turi::globals::value_and_value_check<long long>,boost::mpl::l_item<mpl_::long_<1l>,turi::globals::value_and_value_check<std::string>,boost::mpl::l_end>>>>,boost::mpl::l_iter<boost::mpl::l_end>>,boost::detail::variant::invoke_visitor<turi::globals::set_value_visitor,false>,void *,boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::has_fallback_type_>(boost::detail::variant *a1, int a2, uint64_t *a3, uint64_t *a4)
{
  switch(a2)
  {
    case 0:
      uint64_t v4 = *a3;
      uint64_t result = turi::globals::set_value_visitor::operator()(v4, (uint64_t)a4);
      break;
    case 1:
      uint64_t v6 = *a3;
      uint64_t result = turi::globals::set_value_visitor::operator()(v6, (uint64_t)a4);
      break;
    case 2:
      uint64_t v7 = (unsigned char *)*a3;
      uint64_t result = turi::globals::set_value_visitor::operator()(v7, a4);
      break;
    default:
      boost::detail::variant::forced_return<void>(a1);
  }
  return result;
}

uint64_t turi::globals::set_value_visitor::operator()(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 12) == 1)
  {
    double v3 = *(double *)a1;
  }
  else
  {
    if (*(unsigned char *)(a1 + 12)) {
      return 0;
    }
    double v3 = (double)*(uint64_t *)a1;
  }
  if (!*(void *)(a2 + 32) || (uint64_t result = std::function<BOOL ()(double)>::operator()(a2 + 8, v3), result))
  {
    if (*(void *)a2)
    {
      **(double **)a2 = v3;
      return 1;
    }
    return 0;
  }
  return result;
}

{
  uint64_t v3;
  uint64_t result;

  if (*(unsigned char *)(a1 + 12) == 1)
  {
    double v3 = (uint64_t)*(double *)a1;
  }
  else
  {
    if (*(unsigned char *)(a1 + 12)) {
      return 0;
    }
    double v3 = *(void *)a1;
  }
  if (!*(void *)(a2 + 32) || (uint64_t result = std::function<BOOL ()(long long)>::operator()(a2 + 8, v3), result))
  {
    if (*(void *)a2)
    {
      **(void **)a2 = v3;
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t std::function<BOOL ()(double)>::operator()(uint64_t a1, double a2)
{
  double v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, double *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t std::function<BOOL ()(long long)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t turi::globals::set_value_visitor::operator()(unsigned char *a1, uint64_t *a2)
{
  if (a1[12] != 2) {
    return 0;
  }
  uint64_t v3 = *(void *)a1;
  if (*(char *)(*(void *)a1 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v3 + 8), *(void *)(v3 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(v3 + 8);
    __p.__r_.__value_.__r.__words[2] = *(void *)(v3 + 24);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = turi::globals::value_and_value_check<std::string>::set_value(a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v5;
}

void sub_223F08DC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::globals::value_and_value_check<std::string>::set_value(uint64_t *a1, const std::string *a2)
{
  uint64_t result = turi::globals::value_and_value_check<std::string>::perform_check((uint64_t)a1, (uint64_t)a2);
  if (result)
  {
    uint64_t result = *a1;
    if (*a1)
    {
      std::string::operator=((std::string *)result, a2);
      return 1;
    }
  }
  return result;
}

uint64_t turi::globals::value_and_value_check<std::string>::perform_check(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    return 1;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    uint64_t v3 = *(void *)(a1 + 32);
    if (!v3) {
      std::__throw_bad_function_call[abi:ne180100]();
    }
  }
  else
  {
    std::string __p = *(std::string *)a2;
  }
  uint64_t v4 = (*(uint64_t (**)(uint64_t, std::string *))(*(void *)v3 + 48))(v3, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_223F08ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t boost::detail::variant::visitation_impl<mpl_::int_<0>,boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<3l>,turi::globals::value_and_value_check<double>,boost::mpl::l_item<mpl_::long_<2l>,turi::globals::value_and_value_check<long long>,boost::mpl::l_item<mpl_::long_<1l>,turi::globals::value_and_value_check<std::string>,boost::mpl::l_end>>>>,boost::mpl::l_iter<boost::mpl::l_end>>,boost::detail::variant::invoke_visitor<turi::globals::set_value_from_string_visitor,false>,void *,boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::has_fallback_type_>(boost::detail::variant *a1, int a2, const std::string **a3, uint64_t *a4)
{
  switch(a2)
  {
    case 0:
      uint64_t v4 = *a3;
      uint64_t result = turi::globals::set_value_from_string_visitor::operator()(v4, (uint64_t)a4);
      break;
    case 1:
      uint64_t v6 = *a3;
      uint64_t result = turi::globals::set_value_from_string_visitor::operator()(v6, (uint64_t)a4);
      break;
    case 2:
      uint64_t v7 = *a3;
      uint64_t result = turi::globals::set_value_from_string_visitor::operator()(v7, a4);
      break;
    default:
      boost::detail::variant::forced_return<void>(a1);
  }
  return result;
}

uint64_t turi::globals::set_value_from_string_visitor::operator()(const std::string *a1, uint64_t a2)
{
  double v3 = std::stod(a1, 0);
  double v4 = v3;
  if (!*(void *)(a2 + 32) || (uint64_t result = std::function<BOOL ()(double)>::operator()(a2 + 8, v3), result))
  {
    if (*(void *)a2)
    {
      **(double **)a2 = v4;
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

{
  uint64_t v3;
  uint64_t result;

  double v3 = std::stoll(a1, 0, 10);
  if (!*(void *)(a2 + 32) || (uint64_t result = std::function<BOOL ()(long long)>::operator()(a2 + 8, v3), result))
  {
    if (*(void *)a2)
    {
      **(void **)a2 = v3;
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_223F09188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_223F09378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t turi::globals::set_value_from_string_visitor::operator()(const std::string *a1, uint64_t *a2)
{
  return turi::globals::value_and_value_check<std::string>::set_value(a2, a1);
}

void demangle(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  size_t outlen = 0;
  int status = 0;
  if (sscanf(a1, "%*[^(]%*[^_]%127[^)+]", mangled) == 1 && (double v4 = __cxa_demangle(mangled, 0, &outlen, &status)) != 0)
  {
    std::string::basic_string[abi:ne180100]<0>(a2, v4);
    free(v4);
  }
  else if (sscanf(a1, "%127s", mangled) == 1)
  {
    std::string::basic_string[abi:ne180100]<0>(a2, mangled);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a2, a1);
  }
}

uint64_t __print_back_trace(void)
{
  MEMORY[0x270FA5388]();
  uint64_t v18 = *MEMORY[0x263EF8340];
  memset(v17, 0, 512);
  pthread_mutex_lock(&back_trace_file_lock);
  if ((write_error & 1) == 0)
  {
    sprintf(__filename, "backtrace.%d", backtrace_file_number);
    if (write_count) {
      uint64_t v0 = "a";
    }
    else {
      uint64_t v0 = "w";
    }
    uint64_t v1 = fopen(__filename, v0);
    if (v1)
    {
      ++write_count;
      int v2 = backtrace((void **)v17, 1024);
      double v3 = backtrace_symbols((void *const *)v17, v2);
      uint64_t v4 = v2;
      fwrite("Pointers\n", 9uLL, 1uLL, v1);
      fwrite("------------\n", 0xDuLL, 1uLL, v1);
      if (v2)
      {
        uint64_t v5 = (const void **)v17;
        uint64_t v6 = v2;
        do
        {
          uint64_t v7 = *v5++;
          fprintf(v1, "%p\n", v7);
          --v6;
        }
        while (v6);
        fwrite("Raw\n", 4uLL, 1uLL, v1);
        fwrite("------------\n", 0xDuLL, 1uLL, v1);
        uint64_t v8 = (const char **)v3;
        uint64_t v9 = v2;
        do
        {
          uint64_t v10 = *v8++;
          fprintf(v1, "%s\n", v10);
          --v9;
        }
        while (v9);
      }
      else
      {
        fwrite("Raw\n", 4uLL, 1uLL, v1);
        fwrite("------------\n", 0xDuLL, 1uLL, v1);
      }
      fwrite("\nDemangled\n", 0xBuLL, 1uLL, v1);
      fwrite("------------\n", 0xDuLL, 1uLL, v1);
      if (v2)
      {
        uint64_t v11 = v3;
        do
        {
          demangle(*v11, __p);
          if (v15 >= 0) {
            uint64_t v12 = __p;
          }
          else {
            uint64_t v12 = (void **)__p[0];
          }
          fprintf(v1, "%s\n", (const char *)v12);
          if (v15 < 0) {
            operator delete(__p[0]);
          }
          ++v11;
          --v4;
        }
        while (v4);
      }
      free(v3);
      fwrite("-------------------------------------------------------\n", 0x38uLL, 1uLL, v1);
      fwrite("\n\n", 2uLL, 1uLL, v1);
      fclose(v1);
    }
    else
    {
      fwrite("Unable to open output backtrace file.\n", 0x26uLL, 1uLL, (FILE *)*MEMORY[0x263EF8348]);
      write_error = 1;
    }
  }
  return pthread_mutex_unlock(&back_trace_file_lock);
}

void sub_223F09A20(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  __clang_call_terminate(exception_object);
}

void sub_223F09A38(void *a1, int a2)
{
  if (a2)
  {
    __cxa_begin_catch(a1);
    int v2 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(MEMORY[0x263F8C0F8], (uint64_t)"Unable to print back trace on termination", 41);
    std::endl[abi:ne180100]<char,std::char_traits<char>>(v2);
    __cxa_end_catch();
    JUMPOUT(0x223F099E4);
  }
  JUMPOUT(0x223F09A28);
}

void sub_223F09A8C()
{
}

void sub_223F09A94()
{
}

void CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _tc_google::protobuf::internal::VerifyVersion((_tc_google::protobuf::internal *)0x2DD278, (_tc_google::protobuf::internal *)0x2DD278, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/external/coremltools_wrap/coremltools/mlmodel/build/format/WordEmbedding.pb.cc", a4);
  _tc_google::protobuf::internal::InitProtobufDefaults(v4);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v5);
  CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_ = (uint64_t)&unk_26D75A180;
  unk_2680894A0 = 0;
  qword_2680894A8 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  unk_2680894B0 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_2680894B8 = 0;
  byte_2680894C0 = 1;
}

void CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v2[0] = &unk_26D7768F8;
    v2[1] = CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct::InitDefaultsImpl;
    char v3 = 0;
    _tc_google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(void)::once, (uint64_t)v2);
    _tc_google::protobuf::internal::FunctionClosure0::~FunctionClosure0((_tc_google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_223F09B9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::FunctionClosure0::~FunctionClosure0((_tc_google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::WordEmbedding *CoreML::Specification::CoreMLModels::WordEmbedding::WordEmbedding(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  *(void *)this = &unk_26D75A180;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::WordEmbedding *)&CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_223F09C1C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *(void *)(v1 + 24);
  if ((uint64_t *)v4 != &_tc_google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    JUMPOUT(0x22A614FA0);
  }
  return this;
}

void CoreML::Specification::CoreMLModels::WordEmbedding::~WordEmbedding(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  *(void *)this = &unk_26D75A180;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::CoreMLModels::WordEmbedding::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;
  uint64_t vars8;

  *(void *)this = &unk_26D75A180;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::CoreMLModels::WordEmbedding::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::CoreMLModels::WordEmbedding::default_instance(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return &CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_;
}

void CoreML::Specification::CoreMLModels::WordEmbedding::New(CoreML::Specification::CoreMLModels::WordEmbedding *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F09E24(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordEmbedding>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordEmbedding>);
  }
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  uint64_t v2 = *(void *)(this + 24);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

BOOL CoreML::Specification::CoreMLModels::WordEmbedding::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::WordEmbedding *this, _tc_google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v7 = *(unsigned __int8 **)a2;
          unint64_t v8 = *((void *)a2 + 1);
          if (*(void *)a2 >= v8)
          {
            uint64_t v10 = 0;
LABEL_34:
            unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
            unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v11 & 0x100000000) == 0) {
              goto LABEL_35;
            }
            goto LABEL_9;
          }
          uint64_t v9 = v7 + 1;
          uint64_t v10 = *v7;
          if ((char)*v7 < 1)
          {
            if ((unint64_t)v9 < v8)
            {
              int v12 = *v9;
              if ((v10 & ~v12) >= 0x80)
              {
                *(void *)a2 = v7 + 2;
                unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
                goto LABEL_9;
              }
            }
            goto LABEL_34;
          }
          *(void *)a2 = v9;
          unint64_t v11 = v10 | 0x100000000;
          if ((v11 & 0x100000000) == 0) {
            goto LABEL_35;
          }
LABEL_9:
          unsigned int v13 = v11 >> 3;
          if (v11 >> 3 != 100) {
            break;
          }
          if (v11 != 34) {
            goto LABEL_35;
          }
          if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
            _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5)) {
            return 0;
          }
        }
        if (v13 != 10) {
          break;
        }
        if (v11 != 82) {
          goto LABEL_35;
        }
        if (*v6 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
          _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        BOOL result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
        if (!result) {
          return result;
        }
        uint64_t v18 = *v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v18 = (std::string *)v18->__r_.__value_.__r.__words[0];
          std::string::size_type size = (const char *)(*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          std::string::size_type size = (const char *)HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v18, size, 0, (uint64_t)"CoreML.Specification.CoreMLModels.WordEmbedding.language"))return 0; {
      }
        }
      if (v13 != 1 || v11 != 8) {
        break;
      }
      char v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v16 = 0;
        goto LABEL_42;
      }
      int v16 = *v15;
      if (*v15 < 0)
      {
LABEL_42:
        uint64_t Varint32Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
        *((_DWORD *)this + 8) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 8) = v16;
        *(void *)a2 = v15 + 1;
      }
    }
LABEL_35:
    if (!v11 || (v11 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField(a2, (_tc_google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::WordEmbedding *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v6 = *((_DWORD *)this + 8);
  if (v6) {
    _tc_google::protobuf::internal::WireFormatLite::WriteUInt32(1, v6, a2, a4);
  }
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    unint64_t v8 = *(const char **)(result + 8);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t result = *(void *)result;
    goto LABEL_8;
  }
  unint64_t v8 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_8:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordEmbedding.language");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(10, *((void *)this + 2), a2);
  }
LABEL_9:
  uint64_t v9 = *((void *)this + 3);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    return result;
  }
  return _tc_google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(100, v9, a2);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::ByteSizeLong(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  int v8 = *((_DWORD *)this + 8);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 9) = v4;
  return v4;
}

std::string *CoreML::Specification::CoreMLModels::WordEmbedding::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::WordEmbedding *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  int data = (uint64_t *)v3[1].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v7)
  {
    if (data == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  int v9 = *((_DWORD *)a2 + 8);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::IsInitialized(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return 1;
}

void *CoreML::Specification::CoreMLModels::WordEmbedding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.WordEmbedding");
}

void CoreML::Specification::CoreMLModels::WordEmbedding::New(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordEmbedding>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

std::ios_base::failure *turi::error::io_error::io_error(std::ios_base::failure *a1, const std::string *a2)
{
  *(void *)&v8.__val_ = 1;
  v8.__cat_ = std::iostream_category();
  uint64_t v4 = std::ios_base::failure::failure(a1, a2, &v8);
  v4->__vftable = (std::ios_base::failure_vtbl *)&unk_26D75A230;
  uint64_t v5 = (std::string *)&v4[1];
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v5, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v6 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
    v5->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_223F0A42C(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

uint64_t turi::error::io_error::what(turi::error::io_error *this)
{
  uint64_t result = (uint64_t)this + 32;
  if (*((char *)this + 55) < 0) {
    return *(void *)result;
  }
  return result;
}

void turi::error::io_error::~io_error(std::runtime_error *this)
{
  this->__vftable = (std::runtime_error_vtbl *)&unk_26D75A230;
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[2].__vftable);
  }
  std::runtime_error::~runtime_error(this);
}

{
  uint64_t vars8;

  this->__vftable = (std::runtime_error_vtbl *)&unk_26D75A230;
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[2].__vftable);
  }
  std::runtime_error::~runtime_error(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t std::shared_ptr<turi::thread>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  return a1;
}

void turi::make_file_name(const void **a1@<X0>, unint64_t a2@<X1>, std::string *a3@<X8>)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v6 = (size_t)a1[1];
  }
  uint64_t v7 = &v13;
  std::string::basic_string[abi:ne180100]((uint64_t)&v13, v6 + 1);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v7 = (std::string *)v13.__r_.__value_.__r.__words[0];
  }
  if (v6)
  {
    if (*((char *)a1 + 23) >= 0) {
      std::error_code v8 = a1;
    }
    else {
      std::error_code v8 = *a1;
    }
    memmove(v7, v8, v6);
  }
  *(_WORD *)((char *)&v7->__r_.__value_.__l.__data_ + vboost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 46;
  std::to_string(&__p, a2);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v11 = std::string::append(&v13, (const std::string::value_type *)p_p, size);
  *a3 = *v11;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
}

void sub_223F0A884(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void turi::log_rotation_background_thread(turi *this)
{
  if (turi::thread_running == 1)
  {
    do
    {
      if (turi::log_base_name[23] < 0) {
        std::string::__init_copy_ctor_external(&v17, *(const std::string::value_type **)turi::log_base_name, *(std::string::size_type *)&turi::log_base_name[8]);
      }
      else {
        std::string v17 = *(std::string *)turi::log_base_name;
      }
      turi::make_file_name((const void **)&v17.__r_.__value_.__l.__data_, turi::log_counter, &v18);
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v17.__r_.__value_.__l.__data_);
      }
      uint64_t v1 = global_logger();
      if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v16, v18.__r_.__value_.__l.__data_, v18.__r_.__value_.__l.__size_);
      }
      else {
        std::string v16 = v18;
      }
      file_logger::set_log_file((uint64_t)v1, (uint64_t)&v16);
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v16.__r_.__value_.__l.__data_);
      }
      if (byte_2680816E7 >= 0) {
        uint64_t v2 = (const char *)&turi::symlink_name;
      }
      else {
        uint64_t v2 = (const char *)turi::symlink_name;
      }
      unlink(v2);
      if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v3 = &v18;
      }
      else {
        uint64_t v3 = (std::string *)v18.__r_.__value_.__r.__words[0];
      }
      std::string::basic_string[abi:ne180100]<0>(&v15, (char *)v3);
      if (byte_2680816E7 >= 0) {
        uint64_t v4 = (char *)&turi::symlink_name;
      }
      else {
        uint64_t v4 = (char *)turi::symlink_name;
      }
      std::string::basic_string[abi:ne180100]<0>(&__p, v4);
      boost::filesystem::detail::create_symlink((uint64_t)&v15, (uint64_t)&__p, 0);
      if (v14 < 0) {
        operator delete((void *)__p.tv_sec);
      }
      if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v15.__r_.__value_.__l.__data_);
      }
      uint64_t v5 = turi::truncate_limit;
      uint64_t v6 = turi::log_counter;
      if (turi::log_counter >= (unint64_t)turi::truncate_limit)
      {
        if (turi::log_base_name[23] < 0)
        {
          std::string::__init_copy_ctor_external(&v12, *(const std::string::value_type **)turi::log_base_name, *(std::string::size_type *)&turi::log_base_name[8]);
          uint64_t v6 = turi::log_counter;
          uint64_t v5 = turi::truncate_limit;
        }
        else
        {
          std::string v12 = *(std::string *)turi::log_base_name;
        }
        turi::make_file_name((const void **)&v12.__r_.__value_.__l.__data_, v6 - v5, &v15);
        if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v12.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v7 = (void *)v15.__r_.__value_.__r.__words[0];
          unlink(v15.__r_.__value_.__l.__data_);
          operator delete(v7);
        }
        else
        {
          unlink((const char *)&v15);
        }
      }
      gettimeofday(&v11, 0);
      gettimeofday(&v11, 0);
      pthread_mutex_lock(&turi::lock);
      if (turi::thread_running == 1)
      {
        __darwin_time_t tv_sec = v11.tv_sec;
        __darwin_suseconds_t tv_usec = v11.tv_usec;
        do
        {
          gettimeofday((timeval *)&v15, 0);
          uint64_t v10 = turi::log_interval;
          if ((double)(LODWORD(v15.__r_.__value_.__r.__words[1]) - tv_usec) / 1000000.0
             + (double)(v15.__r_.__value_.__r.__words[0] - tv_sec) >= (double)(unint64_t)turi::log_interval)
            break;
          gettimeofday(&__p, &v19);
          v15.__r_.__value_.__r.__words[0] = __p.tv_sec + v10;
          v15.__r_.__value_.__l.__size_ = 1000 * __p.tv_usec;
          pthread_cond_timedwait(&turi::cond, &turi::lock, (const timespec *)&v15);
        }
        while ((turi::thread_running & 1) != 0);
      }
      pthread_mutex_unlock(&turi::lock);
      ++turi::log_counter;
      if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v18.__r_.__value_.__l.__data_);
      }
    }
    while ((turi::thread_running & 1) != 0);
  }
}

void sub_223F0ABD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,char a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 113) < 0) {
    operator delete(*(void **)(v42 - 136));
  }
  _Unwind_Resume(exception_object);
}

void turi::begin_log_rotation(turi *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    turi::stop_log_rotation(a1);
    std::string::operator=((std::string *)turi::log_base_name, (const std::string *)a1);
    turi::log_interval = a2;
    turi::truncate_limit = a3;
    turi::log_counter = 0;
    std::string::operator=((std::string *)&turi::symlink_name, (const std::string *)turi::log_base_name);
    turi::thread_running = 1;
    operator new();
  }
  exception = __cxa_allocate_exception(8uLL);
  void *exception = "Truncate limit must be >= 1";
  __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
}

void sub_223F0AD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void turi::stop_log_rotation(turi *this)
{
  if (turi::thread_running == 1)
  {
    pthread_mutex_lock(&turi::lock);
    turi::thread_running = 0;
    int v1 = pthread_cond_signal(&turi::cond);
    assert_msg(v1 == 0, "Condition variable signal error %d", v1);
    pthread_mutex_unlock(&turi::lock);
    turi::thread::join(turi::log_rotate_thread, v2);
    uint64_t v3 = (std::__shared_weak_count *)qword_2680816F8;
    turi::log_rotate_thread = 0;
    qword_2680816F8 = 0;
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
    if (byte_2680816E7 >= 0) {
      uint64_t v4 = (const char *)&turi::symlink_name;
    }
    else {
      uint64_t v4 = (const char *)turi::symlink_name;
    }
    unlink(v4);
  }
}

void std::shared_ptr<turi::thread>::reset[abi:ne180100]<turi::thread,void>(uint64_t a1, uint64_t a2)
{
  std::shared_ptr<turi::thread>::shared_ptr[abi:ne180100]<turi::thread,void>(&v2, a2);
}

void turi::conditional::conditional(void)::{lambda(void)#1}::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  int v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.hpp", 97);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  long long v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"!error", 6);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.hpp", "operator()", 212, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::conditional::conditional(void)::{lambda(void)#1}::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F0AFB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::conditional::~conditional(pthread_cond_t *this)
{
  if (pthread_cond_destroy(this))
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(MEMORY[0x263F8C0F8], (uint64_t)"Condition variable destroy error ", 33);
    int v1 = (void *)std::ostream::operator<<();
    std::endl[abi:ne180100]<char,std::char_traits<char>>(v1);
    abort();
  }
}

void std::shared_ptr<turi::thread>::shared_ptr[abi:ne180100]<turi::thread,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_223F0B18C(_Unwind_Exception *exception_object)
{
  if (v1) {
    MEMORY[0x22A614FA0](v1, 0x1020C40AF416337);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__shared_ptr_pointer<turi::thread *,std::shared_ptr<turi::thread>::__shared_ptr_default_delete<turi::thread,turi::thread>,std::allocator<turi::thread>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<turi::thread *,std::shared_ptr<turi::thread>::__shared_ptr_default_delete<turi::thread,turi::thread>,std::allocator<turi::thread>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t boost::detail::function::functor_manager<void (*)(void)>::manage(uint64_t result, _WORD *a2, int a3)
{
  uint64_t v4 = result;
  switch(a3)
  {
    case 0:
      *(void *)a2 = *(void *)result;
      break;
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0;
      break;
    case 2:
      goto LABEL_7;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C69C0 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C69C0 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = v4;
      }
      else
      {
LABEL_7:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

uint64_t boost::detail::function::void_function_invoker0<void (*)(void),void>::invoke(uint64_t (**a1)(void))
{
  return (*a1)();
}

uint64_t streambuffdestructor(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = MEMORY[0x263F8C2B8];
    uint64_t v3 = *MEMORY[0x263F8C2B8];
    *(void *)uint64_t result = *MEMORY[0x263F8C2B8];
    uint64_t v4 = *(void *)(v2 + 72);
    *(void *)(result + *(void *)(v3 - 24)) = *(void *)(v2 + 64);
    *(void *)(result + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v4;
    *(void *)(result + 24) = MEMORY[0x263F8C318] + 16;
    if (*(char *)(result + 111) < 0) {
      operator delete(*(void **)(result + 88));
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x22A614E30](v1 + 128);
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

void *std::ofstream::~ofstream(void *a1)
{
  uint64_t v2 = MEMORY[0x263F8C2B0];
  uint64_t v3 = *MEMORY[0x263F8C2B0];
  *a1 = *MEMORY[0x263F8C2B0];
  *(void *)((char *)a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  MEMORY[0x22A614850](a1 + 1);
  std::ostream::~ostream();
  MEMORY[0x22A614E30](a1 + 52);
  return a1;
}

void file_logger::~file_logger(void **this)
{
  uint64_t v2 = (pthread_mutex_t *)(this + 76);
  pthread_mutex_lock((pthread_mutex_t *)(this + 76));
  if (!*(_DWORD *)((char *)this + *((void *)*this - 3) + 32))
  {
    std::ostream::flush();
    if (!std::filebuf::close()) {
      std::ios_base::clear((std::ios_base *)((char *)this + *((void *)*this - 3)), *(_DWORD *)((char *)this + *((void *)*this - 3) + 32) | 4);
    }
  }
  pthread_mutex_unlock(v2);
  pthread_mutex_destroy(v2);
  for (uint64_t i = 114; i != 82; i -= 4)
    std::__function::__value_func<void ()(int,char const*,unsigned long)>::~__value_func[abi:ne180100](&this[i]);
  if (*((char *)this + 591) < 0) {
    operator delete(this[71]);
  }
  uint64_t v4 = MEMORY[0x263F8C2B0];
  uint64_t v5 = *MEMORY[0x263F8C2B0];
  *this = (void *)*MEMORY[0x263F8C2B0];
  *(void **)((char *)this + *(void *)(v5 - 24)) = *(void **)(v4 + 24);
  MEMORY[0x22A614850](this + 1);
  std::ostream::~ostream();
  MEMORY[0x22A614E30](this + 52);
}

uint64_t file_logger::set_log_file(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (pthread_mutex_t *)(a1 + 608);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 608));
  if (!*(_DWORD *)(a1 + *(void *)(*(void *)a1 - 24) + 32))
  {
    std::ostream::flush();
    if (!std::filebuf::close()) {
      std::ios_base::clear((std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24)), *(_DWORD *)(a1 + *(void *)(*(void *)a1 - 24) + 32) | 4);
    }
    MEMORY[0x22A614700](a1 + 568, "");
  }
  if (*(char *)(a2 + 23) < 0)
  {
    if (!*(void *)(a2 + 8))
    {
LABEL_12:
      uint64_t v5 = 1;
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(a2 + 23))
  {
    goto LABEL_12;
  }
  std::ofstream::open();
  if ((*(unsigned char *)(a1 + *(void *)(*(void *)a1 - 24) + 32) & 5) == 0)
  {
    std::string::operator=((std::string *)(a1 + 568), (const std::string *)a2);
    goto LABEL_12;
  }
  uint64_t v5 = 0;
LABEL_13:
  pthread_mutex_unlock(v4);
  return v5;
}

void *textcolor@<X0>(int a1@<W0>, int a2@<W1>, void *a3@<X8>)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  snprintf(__str, 0xDuLL, "%c[%d;%dm", 27, a1, a2 + 30);
  return std::string::basic_string[abi:ne180100]<0>(a3, __str);
}

void *reset_color@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x14uLL, "%c[0m", 27);
  return std::string::basic_string[abi:ne180100]<0>(a1, __str);
}

uint64_t file_logger::_log(uint64_t this, int a2, const char *a3, const char *a4, int a5, const char *a6, va_list a7)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (*(_DWORD *)(this + 676) <= a2)
  {
    uint64_t v10 = this;
    int v11 = snprintf(__str, 0x400uLL, "%s(%s:%d): ", messages[a2], a4, a5);
    int v12 = vsnprintf(&__str[v11], 1024 - v11, a6, a7);
    uint64_t v13 = v12 + (uint64_t)v11;
    __str[v13] = 10;
    __str[(int)v13 + 1] = 0;
    if (*(_DWORD *)(v10 + 4 * a2 + 944))
    {
      pthread_mutex_lock((pthread_mutex_t *)(v10 + 608));
      uint64_t v14 = v10 + 32 * a2;
      if (*(void *)(v14 + 712)) {
        std::function<void ()(int,char const*,unsigned long)>::operator()(v14 + 688, a2, (uint64_t)&__str[v11], v12);
      }
      pthread_mutex_unlock((pthread_mutex_t *)(v10 + 608));
    }
    return file_logger::_lograw((file_logger *)v10, a2, __str);
  }
  return this;
}

uint64_t file_logger::_lograw(file_logger *this, int a2, const char *a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v5 = (pthread_mutex_t *)((char *)this + 608);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 608));
  if (!*(_DWORD *)((char *)this + *(void *)(*(void *)this - 24) + 32))
  {
    std::ostream::write();
    std::ostream::flush();
  }
  uint64_t result = pthread_mutex_unlock(v5);
  if (*((unsigned char *)this + 672) || *((unsigned char *)this + 673))
  {
    pthread_mutex_lock(v5);
    switch(a2)
    {
      case 1:
        char v7 = (FILE **)MEMORY[0x263EF8348];
        if (!*((unsigned char *)this + 673)) {
          char v7 = (FILE **)MEMORY[0x263EF8358];
        }
        std::error_code v8 = *v7;
        int v9 = 33;
        goto LABEL_20;
      case 3:
        uint64_t v10 = (FILE **)MEMORY[0x263EF8348];
        if (!*((unsigned char *)this + 673)) {
          uint64_t v10 = (FILE **)MEMORY[0x263EF8358];
        }
        std::error_code v8 = *v10;
        int v9 = 32;
        goto LABEL_20;
      case 5:
        int v11 = (FILE **)MEMORY[0x263EF8348];
        if (!*((unsigned char *)this + 673)) {
          int v11 = (FILE **)MEMORY[0x263EF8358];
        }
        std::error_code v8 = *v11;
        int v9 = 35;
        goto LABEL_20;
      case 6:
        int v12 = (FILE **)MEMORY[0x263EF8348];
        if (!*((unsigned char *)this + 673)) {
          int v12 = (FILE **)MEMORY[0x263EF8358];
        }
        std::error_code v8 = *v12;
        int v9 = 31;
LABEL_20:
        snprintf(__str, 0xDuLL, "%c[%d;%dm", 27, 1, v9);
        fputs(__str, v8);
        goto LABEL_21;
      case 7:
        uint64_t v14 = (FILE *)*MEMORY[0x263EF8348];
        snprintf(__str, 0xDuLL, "%c[%d;%dm", 27, 1, 31);
        fputs(__str, v14);
        goto LABEL_25;
      default:
        if (a2 < 7)
        {
LABEL_21:
          std::ostream::write();
          pthread_mutex_unlock(v5);
          uint64_t v13 = (FILE **)MEMORY[0x263EF8348];
          if (!*((unsigned char *)this + 673)) {
            uint64_t v13 = (FILE **)MEMORY[0x263EF8358];
          }
        }
        else
        {
LABEL_25:
          std::ostream::write();
          pthread_mutex_unlock(v5);
          uint64_t v13 = (FILE **)MEMORY[0x263EF8348];
        }
        std::string v15 = *v13;
        snprintf(__str, 0x14uLL, "%c[0m", 27);
        uint64_t result = fputs(__str, v15);
        break;
    }
  }
  return result;
}

file_logger *file_logger::start_stream(file_logger *this, int a2, const char *a3, const char *a4, int a5, char a6)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v10 = pthread_getspecific(*((void *)this + 74));
  if (!v10) {
    operator new();
  }
  std::stringbuf::str();
  if (v28 < 0)
  {
    operator delete(v26.__locale_);
    if (!v27) {
      goto LABEL_10;
    }
  }
  else if (!v28)
  {
    goto LABEL_10;
  }
  int v11 = pthread_getspecific(*((void *)this + 74));
  if (v11)
  {
    if (*((unsigned char *)v11 + 280))
    {
      std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(v11[2] - 24) + 16));
      int v12 = std::locale::use_facet(&v26, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
      std::locale::~locale(&v26);
      std::ostream::put();
      std::ostream::flush();
      file_logger::stream_flush(this);
      if (*((_DWORD *)this + 150) == 7)
      {
        __print_back_trace();
        exception = __cxa_allocate_exception(8uLL);
        void *exception = "LOG_FATAL encountered";
        __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
      }
    }
  }
LABEL_10:
  v10[74] = a2;
  if (*((_DWORD *)this + 169) > a2 || (a6 & 1) == 0)
  {
    *((unsigned char *)v10 + 28CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
    return this;
  }
  std::stringbuf::str();
  if (v28 < 0)
  {
    uint64_t v13 = v27;
    operator delete(v26.__locale_);
    if (!v13)
    {
LABEL_17:
      time(0);
      uint64_t v14 = (void *)std::ostream::operator<<();
      std::string v15 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)" : ", 3);
      size_t v16 = strlen(messages[a2]);
      uint64_t v17 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)messages[a2], v16);
      std::string v18 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)"(", 1);
      size_t v19 = strlen(a4);
      uint64_t v20 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)a4, v19);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v20, (uint64_t)":", 1);
      uint64_t v21 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"): ", 3);
    }
  }
  else if (!v28)
  {
    goto LABEL_17;
  }
  *((unsigned char *)v10 + 28CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 1;
  *((_DWORD *)this + 15CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = a2;
  uint64_t v22 = (uint64_t)v10 + *(void *)(*((void *)v10 + 2) - 24) + 16;
  if ((*(unsigned char *)(v22 + 32) & 5) != 0)
  {
    uint64_t v23 = -1;
  }
  else
  {
    (*(void (**)(std::locale *__return_ptr))(**(void **)(v22 + 40) + 32))(&v26);
    uint64_t v23 = v29;
  }
  *((void *)v10 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v23;
  return this;
}

void sub_223F0BFEC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10B2C40F675228ALL);
  _Unwind_Resume(a1);
}

void *turi::table_internal::_print_string(void *a1, unint64_t a2, uint64_t a3)
{
  __p.__r_.__value_.__s.__data_[0] = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
  int v6 = *(char *)(a3 + 23);
  if (v6 >= 0) {
    unint64_t v7 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    unint64_t v7 = *(void *)(a3 + 8);
  }
  if (v7 <= a2)
  {
    if (v6 >= 0) {
      uint64_t v13 = a3;
    }
    else {
      uint64_t v13 = *(void *)a3;
    }
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, v13, v7);
    unint64_t v14 = *(unsigned __int8 *)(a3 + 23);
    if ((v14 & 0x80u) != 0) {
      unint64_t v14 = *(void *)(a3 + 8);
    }
    uint64_t v15 = a2 - v14;
    if (a2 > v14)
    {
      do
      {
        __p.__r_.__value_.__s.__data_[0] = 32;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
        --v15;
      }
      while (v15);
    }
    __p.__r_.__value_.__s.__data_[0] = 32;
    p_p = &__p;
    int v11 = a1;
    uint64_t v12 = 1;
  }
  else
  {
    std::string::basic_string(&__p, (const std::string *)a3, 0, a2 - 2, (std::allocator<char> *)&v18);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::error_code v8 = &__p;
    }
    else {
      std::error_code v8 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v8, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    p_p = (std::string *)"...";
    int v11 = a1;
    uint64_t v12 = 3;
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)p_p, v12);
  __p.__r_.__value_.__s.__data_[0] = 124;
  return std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
}

void sub_223F0C170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void turi::table_internal::_print_double(void *a1, unint64_t a2, double a3)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  if ((double)(uint64_t)a3 != a3) {
    goto LABEL_10;
  }
  std::to_string(&v38, (uint64_t)a3);
  char v4 = HIBYTE(v38.__r_.__value_.__r.__words[2]);
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v38.__r_.__value_.__l.__size_;
  }
  if (size < a2)
  {
    turi::table_internal::_print_string(a1, a2, (uint64_t)&v38);
    char v4 = HIBYTE(v38.__r_.__value_.__r.__words[2]);
  }
  if (v4 < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (size >= a2)
  {
LABEL_10:
    v38.__r_.__value_.__s.__data_[0] = 32;
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)&v38, 1);
    int v6 = (char *)a1 + *(void *)(*a1 - 24);
    if ((v6[32] & 5) != 0)
    {
      uint64_t v7 = -1;
    }
    else
    {
      (*(void (**)(std::string *__return_ptr))(**((void **)v6 + 5) + 32))(&v38);
      uint64_t v7 = v43;
    }
    uint64_t v26 = v7;
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v38);
    std::string::size_type v8 = v38.__r_.__value_.__r.__words[0];
    *(void *)((char *)&v38 + *(void *)(v38.__r_.__value_.__r.__words[0] - 24) + 24) = a2;
    *(_DWORD *)((char *)&v38.__r_.__value_.__r.__words[1] + *(void *)(v8 - 24)) = *(_DWORD *)((unsigned char *)&v38.__r_.__value_.__r.__words[1]
                                                                                              + *(void *)(v8 - 24)) & 0xFFFFFF4F | 0x20;
    std::ostream::operator<<();
    int v9 = (char *)&v38 + *(void *)(v38.__r_.__value_.__r.__words[0] - 24);
    if ((v9[32] & 5) != 0)
    {
      unint64_t v10 = -1;
    }
    else
    {
      (*(void (**)(void **__return_ptr))(**((void **)v9 + 5) + 32))(&v30);
      unint64_t v10 = v37;
    }
    if (v10 <= a2)
    {
      std::stringbuf::str();
      if ((v32 & 0x80u) == 0) {
        uint64_t v21 = &v30;
      }
      else {
        uint64_t v21 = v30;
      }
      if ((v32 & 0x80u) == 0) {
        uint64_t v22 = v32;
      }
      else {
        uint64_t v22 = *(void *)v31;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v21, v22);
      if ((char)v32 < 0) {
        operator delete(v30);
      }
      v38.__r_.__value_.__r.__words[0] = *MEMORY[0x263F8C2C8];
      *(std::string::size_type *)((char *)v38.__r_.__value_.__r.__words
                                + *(void *)(v38.__r_.__value_.__r.__words[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8]
                                                                                                  + 24);
      v38.__r_.__value_.__l.__size_ = MEMORY[0x263F8C318] + 16;
      if (v41 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x22A614E30](v42);
    }
    else
    {
      v38.__r_.__value_.__r.__words[0] = *MEMORY[0x263F8C2C8];
      int v11 = (void *)v38.__r_.__value_.__r.__words[0];
      std::string::size_type v12 = *(void *)(MEMORY[0x263F8C2C8] + 24);
      *(std::string::size_type *)((char *)v38.__r_.__value_.__r.__words
                                + *(void *)(v38.__r_.__value_.__r.__words[0] - 24)) = v12;
      v38.__r_.__value_.__l.__size_ = MEMORY[0x263F8C318] + 16;
      if (v41 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x22A614E30](v42);
      int v13 = 0;
      do
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v38);
        std::string::size_type v14 = v38.__r_.__value_.__r.__words[0];
        *(void *)&v39[*(void *)(v38.__r_.__value_.__r.__words[0] - 24)] = a2;
        *(_DWORD *)((char *)&v38.__r_.__value_.__r.__words[1] + *(void *)(v14 - 24)) = *(_DWORD *)((unsigned char *)&v38.__r_.__value_.__r.__words[1] + *(void *)(v14 - 24)) & 0xFFFFFF4F | 0x20;
        *(std::string::size_type *)((char *)&v38.__r_.__value_.__r.__words[2] + *(void *)(v14 - 24)) = v13;
        std::ostream::operator<<();
        uint64_t v15 = (char *)&v38 + *(void *)(v38.__r_.__value_.__r.__words[0] - 24);
        if ((v15[32] & 5) != 0)
        {
          uint64_t v16 = -1;
        }
        else
        {
          (*(void (**)(void **__return_ptr))(**((void **)v15 + 5) + 32))(&v30);
          uint64_t v16 = v37;
        }
        if (v16 > (uint64_t)a2)
        {
          if (v13) {
            --v13;
          }
          else {
            int v13 = 0;
          }
          std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v30);
          uint64_t v17 = v30;
          *(void *)&v33[*((void *)v30 - 3)] = a2;
          *(_DWORD *)&v31[*(v17 - 3)] = *(_DWORD *)&v31[*(v17 - 3)] & 0xFFFFFF4F | 0x20;
          *(void *)&v31[*(v17 - 3) + 8] = v13;
          std::ostream::operator<<();
          std::stringbuf::str();
          if ((v29 & 0x80u) == 0) {
            char v18 = v28;
          }
          else {
            char v18 = (void **)v28[0];
          }
          if ((v29 & 0x80u) == 0) {
            uint64_t v19 = v29;
          }
          else {
            uint64_t v19 = (uint64_t)v28[1];
          }
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v18, v19);
          if ((char)v29 < 0) {
            operator delete(v28[0]);
          }
          uint64_t v30 = v11;
          *(void *)&v31[*((void *)v11 - 3) - 8] = v12;
          *(void *)std::string v31 = MEMORY[0x263F8C318] + 16;
          if (v35 < 0) {
            operator delete(v34);
          }
          std::streambuf::~streambuf();
          std::ostream::~ostream();
          MEMORY[0x22A614E30](&v36);
        }
        v38.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
        *(std::string::size_type *)((char *)v38.__r_.__value_.__r.__words + *((void *)v11 - 3)) = v12;
        v38.__r_.__value_.__l.__size_ = MEMORY[0x263F8C318] + 16;
        if (v41 < 0) {
          operator delete(__p);
        }
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x22A614E30](v42);
        if (v16 > (uint64_t)a2) {
          break;
        }
      }
      while (v13++ < 4);
    }
    uint64_t v23 = *(void *)(*a1 - 24);
    if ((*((unsigned char *)a1 + v23 + 32) & 5) == 0)
    {
      unint64_t v24 = v26 + a2;
      do
      {
        (*(void (**)(std::string *__return_ptr))(**(void **)((char *)a1 + v23 + 40) + 32))(&v38);
        if (v43 >= v24) {
          break;
        }
        v38.__r_.__value_.__s.__data_[0] = 32;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)&v38, 1);
        uint64_t v23 = *(void *)(*a1 - 24);
      }
      while ((*((unsigned char *)a1 + v23 + 32) & 5) == 0);
    }
    v38.__r_.__value_.__s.__data_[0] = 32;
    uint64_t v25 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)&v38, 1);
    v38.__r_.__value_.__s.__data_[0] = 124;
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v25, (uint64_t)&v38, 1);
  }
}

void sub_223F0CA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p)
{
}

void turi::table_internal::_print_BOOL(void *a1, unint64_t a2, int a3)
{
  if (a2 < 5)
  {
    if (a3) {
      uint64_t v5 = "T";
    }
    else {
      uint64_t v5 = "F";
    }
  }
  else if (a3)
  {
    uint64_t v5 = "True";
  }
  else
  {
    uint64_t v5 = "False";
  }
  std::string::basic_string[abi:ne180100]<0>(__p, v5);
  turi::table_internal::_print_string(a1, a2, (uint64_t)__p);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_223F0CB44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t turi::table_internal::_print_long(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v9);
  *(_DWORD *)((char *)&v9[1] + *(void *)(v9[0] - 24)) = *(_DWORD *)((unsigned char *)&v9[1] + *(void *)(v9[0] - 24)) & 0xFFFFFF4F | 0x20;
  std::ostream::operator<<();
  int v6 = (char *)v9 + *(void *)(v9[0] - 24);
  if ((v6[32] & 5) != 0)
  {
    unint64_t v7 = -1;
  }
  else
  {
    (*(void (**)(void **__return_ptr))(**((void **)v6 + 5) + 32))(v12);
    unint64_t v7 = v14;
  }
  if (v7 <= a2)
  {
    std::stringbuf::str();
    turi::table_internal::_print_string(a1, a2, (uint64_t)v12);
    if (v13 < 0) {
      operator delete(v12[0]);
    }
  }
  else
  {
    turi::table_internal::_print_double(a1, a2, (double)a3);
  }
  v9[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v9 + *(void *)(v9[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v9[1] = MEMORY[0x263F8C318] + 16;
  if (v10 < 0) {
    operator delete((void *)v9[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x22A614E30](&v11);
}

void sub_223F0CDAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void *turi::table_internal::_format_time(double a1)
{
  if (a1 >= 0.001)
  {
    if (a1 < 1.0)
    {
      uint64_t v2 = (void *)std::ostream::operator<<();
      uint64_t v3 = "ms";
      goto LABEL_5;
    }
    if (a1 >= 60.0)
    {
      if (a1 >= 3600.0)
      {
        if (a1 >= 86400.0)
        {
          uint64_t v11 = (void *)std::ostream::operator<<();
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"d ", 2);
          std::string::size_type v12 = (void *)std::ostream::operator<<();
          uint64_t result = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)"h ", 2);
          if (a1 >= 864000.0) {
            return result;
          }
        }
        else
        {
          char v10 = (void *)std::ostream::operator<<();
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"h ", 2);
        }
        uint64_t v2 = (void *)std::ostream::operator<<();
        uint64_t v3 = "m";
        goto LABEL_21;
      }
      int v9 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)"m ", 2);
      uint64_t v2 = (void *)std::ostream::operator<<();
    }
    else
    {
      unint64_t v5 = vcvtmd_u64_f64(a1 * 100.0) % 0x64;
      int v6 = (void *)std::ostream::operator<<();
      if (v5 <= 9) {
        unint64_t v7 = ".0";
      }
      else {
        unint64_t v7 = ".";
      }
      if (v5 > 9) {
        uint64_t v8 = 1;
      }
      else {
        uint64_t v8 = 2;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)v7, v8);
      uint64_t v2 = (void *)std::ostream::operator<<();
    }
    uint64_t v3 = "s";
LABEL_21:
    uint64_t v4 = 1;
    goto LABEL_22;
  }
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = "us";
LABEL_5:
  uint64_t v4 = 2;
LABEL_22:
  return std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)v3, v4);
}

uint64_t turi::table_internal::_print_time(void *a1, unint64_t a2, double a3)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v10);
  turi::table_internal::_format_time(a3);
  std::stringbuf::str();
  turi::table_internal::_print_string(a1, a2, (uint64_t)&__p);
  if (v9 < 0) {
    operator delete(__p);
  }
  v10[0] = *MEMORY[0x263F8C2B8];
  uint64_t v6 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v10 + *(void *)(v10[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  void v10[2] = v6;
  v10[3] = MEMORY[0x263F8C318] + 16;
  if (v11 < 0) {
    operator delete((void *)v10[11]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x22A614E30](&v12);
}

void sub_223F0D240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void turi::table_internal::_print_flexible_type(void *a1, unint64_t a2, turi::flexible_type_impl *this)
{
  int v5 = *((unsigned __int8 *)this + 12);
  if (*((unsigned char *)this + 12))
  {
    if (v5 == 2)
    {
      uint64_t v8 = *(void *)this + 8;
      turi::table_internal::_print_string(a1, a2, v8);
    }
    else if (v5 == 1)
    {
      double v6 = *(double *)this;
      turi::table_internal::_print_double(a1, a2, v6);
    }
    else
    {
      switch(*((unsigned char *)this + 12))
      {
        case 3:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v10, (void *)(*(void *)this + 8));
          break;
        case 4:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v10, (uint64_t *)(*(void *)this + 8));
          break;
        case 5:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v10, (void *)(*(void *)this + 8));
          break;
        case 6:
          turi::flexible_type_impl::get_string_visitor::operator()(this, &__p);
          break;
        case 7:
          memset(&__p, 0, sizeof(__p));
          break;
        case 8:
          turi::flexible_type_impl::get_string_visitor::operator()();
          break;
        case 9:
          turi::flexible_type_impl::get_string_visitor::operator()((uint64_t)&v10, (void *)(*(void *)this + 8));
          break;
        default:
          turi::flexible_type_internals::ft_converter<3>::set<turi::flexible_type>();
      }
      turi::table_internal::_print_string(a1, a2, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
  }
  else
  {
    uint64_t v7 = *(void *)this;
    turi::table_internal::_print_long(a1, a2, v7);
  }
}

void sub_223F0D420(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *turi::table_printer::table_printer(uint64_t *a1, long long **a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  std::vector<std::pair<std::string,unsigned long>>::__init_with_size[abi:ne180100]<std::pair<std::string,unsigned long>*,std::pair<std::string,unsigned long>*>((std::string *)a1, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 5);
  gettimeofday((timeval *)(a1 + 3), 0);
  a1[5] = 1000 * std::chrono::system_clock::now().__d_.__rep_;
  a1[6] = 0;
  a1[7] = 0xBFF0000000000000;
  a1[8] = 0;
  a1[9] = 0;
  a1[10] = 0;
  a1[11] = 0;
  int v5 = pthread_mutex_init((pthread_mutex_t *)(a1 + 12), 0);
  assert_msg(v5 == 0, "Mutex create error %d", v5);
  int v6 = pthread_mutex_init((pthread_mutex_t *)(a1 + 20), 0);
  assert_msg(v6 == 0, "Mutex create error %d", v6);
  a1[28] = 0xBFF0000000000000;
  int v7 = pthread_mutex_init((pthread_mutex_t *)(a1 + 29), 0);
  assert_msg(v7 == 0, "Mutex create error %d", v7);
  turi::sframe::sframe((turi::sframe *)(a1 + 37));
  *((_WORD *)a1 + 29boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  a1[78] = 0;
  a1[82] = 0;
  *((_OWORD *)a1 + 43) = 0u;
  *((_OWORD *)a1 + 44) = 0u;
  *((_OWORD *)a1 + 45) = 0u;
  a1[92] = 0;
  a1[93] = a3;
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = v9 - *a1;
  if (v9 != *a1)
  {
    uint64_t v11 = 0;
    unint64_t v12 = v10 >> 5;
    if (v12 <= 1) {
      unint64_t v12 = 1;
    }
    char v13 = (unint64_t *)(v8 + 24);
    while (*((char *)v13 - 1) < 0)
    {
      unint64_t v14 = *(v13 - 2);
      if (v14 > *v13)
      {
        uint64_t v15 = (unint64_t *)(v8 + 32 * v11 + 24);
LABEL_10:
        unint64_t *v15 = v14;
      }
LABEL_11:
      ++v11;
      v13 += 4;
      if (!--v12) {
        goto LABEL_12;
      }
    }
    unint64_t v14 = *((unsigned __int8 *)v13 - 1);
    uint64_t v15 = v13;
    if (*v13 >= v14) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  v16.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  turi::estimate_ticks_per_second((turi *)v16.__d_.__rep_);
  gettimeofday((timeval *)(a1 + 3), 0);
  return a1;
}

void sub_223F0D63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v17 = *(void **)(v10 + 720);
  if (v17)
  {
    *(void *)(v10 + 728) = v17;
    operator delete(v17);
  }
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&a10);
  turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>::~sframe_function_output_iterator(v15);
  turi::sframe::~sframe(v14);
  turi::mutex::~mutex(v13);
  turi::mutex::~mutex(v12);
  turi::mutex::~mutex(v11);
  a10 = (void **)v10;
  std::vector<std::pair<std::string,unsigned long>>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

void *turi::sframe_function_output_iterator<std::vector<turi::flexible_type>,std::function<void ()(std::vector<turi::flexible_type> const&)>,std::function<void ()(std::vector<turi::flexible_type>&&)>,std::function<void ()(turi::sframe_rows const&)>>::~sframe_function_output_iterator(void *a1)
{
  std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100](a1 + 8);
  std::__function::__value_func<void ()(std::vector<turi::flexible_type> &&)>::~__value_func[abi:ne180100](a1 + 4);
  return std::__function::__value_func<void ()(std::vector<turi::flexible_type> const&)>::~__value_func[abi:ne180100](a1);
}

void turi::table_printer::~table_printer(turi::table_printer *this)
{
  uint64_t v2 = (turi::table_printer *)((char *)this + 296);
  if (*((unsigned char *)this + 584) && *((unsigned char *)this + 585)) {
    turi::sframe::close((turi::table_printer *)((char *)this + 296));
  }
  uint64_t v3 = (void *)*((void *)this + 90);
  if (v3)
  {
    *((void *)this + 91) = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void **)((char *)this + 696);
  std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100](&v4);
  std::__function::__value_func<void ()(turi::sframe_rows const&)>::~__value_func[abi:ne180100]((void *)this + 83);
  std::__function::__value_func<void ()(std::vector<turi::flexible_type> &&)>::~__value_func[abi:ne180100]((void *)this + 79);
  std::__function::__value_func<void ()(std::vector<turi::flexible_type> const&)>::~__value_func[abi:ne180100]((void *)this + 75);
  turi::sframe::~sframe(v2);
  turi::mutex::~mutex((pthread_mutex_t *)((char *)this + 232));
  turi::mutex::~mutex((pthread_mutex_t *)((char *)this + 160));
  turi::mutex::~mutex((pthread_mutex_t *)((char *)this + 96));
  uint64_t v4 = (void **)this;
  std::vector<std::pair<std::string,unsigned long>>::__destroy_vector::operator()[abi:ne180100](&v4);
}

uint64_t turi::table_printer::print_header(turi::table_printer *this)
{
  v23[20] = *MEMORY[0x263EF8340];
  os_log_object();
  uint64_t v2 = os_log_object(void)::log_object;
  if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
  {
    LODWORD(buf[0]) = 134217984;
    *(void *)((char *)buf + 4) = 0;
    _os_log_impl(&dword_223D44000, v2, OS_LOG_TYPE_INFO, "event: %lu", (uint8_t *)buf, 0xCu);
  }
  turi::table_printer::print_line_break(this);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)buf);
  v14[0] = 124;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(buf, (uint64_t)v14, 1);
  uint64_t v3 = *(void *)this;
  uint64_t v4 = *((void *)this + 1);
  if (*(void *)this != v4)
  {
    uint64_t v5 = 0;
    do
    {
      v14[0] = 32;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(buf, (uint64_t)v14, 1);
      int v6 = *(char *)(v3 + 23);
      if (v6 >= 0) {
        uint64_t v7 = v3;
      }
      else {
        uint64_t v7 = *(void *)v3;
      }
      if (v6 >= 0) {
        uint64_t v8 = *(unsigned __int8 *)(v3 + 23);
      }
      else {
        uint64_t v8 = *(void *)(v3 + 8);
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(buf, v7, v8);
      if (*(char *)(v3 + 23) < 0) {
        unint64_t v9 = *(void *)(v3 + 8);
      }
      else {
        unint64_t v9 = *(unsigned __int8 *)(v3 + 23);
      }
      while (v9 < *(void *)(v3 + 24))
      {
        v14[0] = 32;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(buf, (uint64_t)v14, 1);
        ++v9;
      }
      v14[0] = 32;
      uint64_t v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(buf, (uint64_t)v14, 1);
      v14[0] = 124;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)v14, 1);
      os_log_object();
      uint64_t v11 = os_log_object(void)::log_object;
      if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = v3;
        if (*(char *)(v3 + 23) < 0) {
          uint64_t v12 = *(void *)v3;
        }
        *(_DWORD *)unint64_t v14 = 134218498;
        uint64_t v15 = 1;
        __int16 v16 = 2048;
        uint64_t v17 = v5;
        __int16 v18 = 2082;
        uint64_t v19 = v12;
        _os_log_impl(&dword_223D44000, v11, OS_LOG_TYPE_INFO, "event: %lu, column: %lu, value: %{public}s", v14, 0x20u);
      }
      ++v5;
      v3 += 32;
    }
    while (v3 != v4);
  }
  turi::table_printer::_p((uint64_t)this);
  turi::table_printer::print_line_break(this);
  *(void *)&buf[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)buf + *(void *)(*(void *)&buf[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  *((void *)&buf[0] + 1) = MEMORY[0x263F8C318] + 16;
  if (v22 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x22A614E30](v23);
}

void sub_223F0DAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void os_log_object(void)
{
  {
    os_log_object(void)::log_object = (uint64_t)os_log_create("com.apple.turi", "table_printer");
  }
}

uint64_t turi::table_printer::print_line_break(turi::table_printer *this)
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v6);
  char v9 = 43;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)&v9, 1);
  uint64_t v2 = *(void *)this;
  uint64_t v3 = *((void *)this + 1);
  if (*(void *)this != v3)
  {
    do
    {
      if (*(void *)(v2 + 24) != -2)
      {
        unint64_t v4 = 0;
        do
        {
          char v9 = 45;
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)&v9, 1);
          ++v4;
        }
        while (v4 < *(void *)(v2 + 24) + 2);
      }
      char v9 = 43;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)&v9, 1);
      v2 += 32;
    }
    while (v2 != v3);
  }
  turi::table_printer::_p((uint64_t)this);
  v6[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v6 + *(void *)(v6[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x22A614E30](&v8);
}

void sub_223F0DD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void turi::table_printer::print_footer(turi::table_printer *this)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  turi::table_printer::print_track_row_if_necessary(this);
  turi::table_printer::print_line_break(this);
  os_log_object();
  uint64_t v2 = os_log_object(void)::log_object;
  if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
  {
    int v3 = 134217984;
    uint64_t v4 = 3;
    _os_log_impl(&dword_223D44000, v2, OS_LOG_TYPE_INFO, "event: %lu", (uint8_t *)&v3, 0xCu);
  }
}

uint64_t turi::table_printer::print_track_row_if_necessary(turi::table_printer *this)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  uint64_t v2 = (pthread_mutex_t *)((char *)this + 232);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 232));
  if (!*((unsigned char *)this + 593))
  {
    uint64_t v3 = *((void *)this + 87);
    uint64_t v4 = *((void *)this + 88);
    if (v3 != v4)
    {
      uint64_t v5 = (v4 - v3) >> 4;
      v66.__r_.__value_.__r.__words[0] = v5;
      uint64_t v59 = (uint64_t)(*((void *)this + 1) - *(void *)this) >> 5;
      if (v5 != v59)
      {
        long long v54 = &v66;
        uint64_t v55 = &v59;
        turi::table_printer::print_track_row_if_necessary(void)const::$_0::operator()();
      }
      v66.__r_.__value_.__r.__words[0] = *((void *)this + 91) - *((void *)this + 90);
      uint64_t v59 = v5;
      if (v66.__r_.__value_.__r.__words[0] != v5)
      {
        long long v54 = &v66;
        uint64_t v55 = &v59;
        turi::table_printer::print_track_row_if_necessary(void)const::$_1::operator()();
      }
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v54);
      v66.__r_.__value_.__s.__data_[0] = 124;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v54, (uint64_t)&v66, 1);
      uint64_t v7 = *((void *)this + 87);
      if (*((void *)this + 88) != v7)
      {
        uint64_t v8 = 0;
        unint64_t v9 = 0;
        uint64_t v10 = 24;
        do
        {
          uint64_t v11 = (std::string *)(v7 + v8);
          turi::table_printer::os_log_value((turi::table_printer *)v9, (char *)(v7 + v8), v6);
          unint64_t v12 = *(void *)(*(void *)this + v10);
          int v13 = *(unsigned __int8 *)(*((void *)this + 90) + v9);
          if (v13 == 2)
          {
            double data = 0.0;
            switch(v11->__r_.__value_.__s.__data_[12])
            {
              case 0:
                double data = (double)(uint64_t)v11->__r_.__value_.__l.__data_;
                goto LABEL_69;
              case 1:
                double data = *(double *)&v11->__r_.__value_.__l.__data_;
                goto LABEL_69;
              case 2:
                uint64_t v25 = v11->__r_.__value_.__r.__words[0];
                uint64_t v26 = (char **)(v11->__r_.__value_.__r.__words[0] + 8);
                size_t __idx = 0;
                uint64_t v27 = (char *)v26;
                if (*(char *)(v25 + 31) < 0) {
                  uint64_t v27 = *v26;
                }
                char v28 = (const std::string *)std::string::basic_string[abi:ne180100]<0>(&v66, v27);
                double v29 = std::stod(v28, &__idx);
                if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v66.__r_.__value_.__l.__data_);
                }
                if (*(char *)(v25 + 31) < 0) {
                  uint64_t v30 = *(void *)(v25 + 16);
                }
                else {
                  uint64_t v30 = *(unsigned __int8 *)(v25 + 31);
                }
                if (__idx != v30)
                {
                  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
                  std::operator+<char>();
                  uint64_t v49 = std::string::append(&v64, " cannot be interpreted as a float");
                  long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
                  v66.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v50;
                  v49->__r_.__value_.__l.__size_ = 0;
                  v49->__r_.__value_.__r.__words[2] = 0;
                  v49->__r_.__value_.__r.__words[0] = 0;
                  std::runtime_error::runtime_error(exception, &v66);
                  __cxa_throw(exception, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
                }
                float v43 = v29;
                double data = v43;
                goto LABEL_69;
              case 3:
                uint64_t v19 = v11->__r_.__value_.__r.__words[0];
                memset(&v66, 0, sizeof(v66));
                std::vector<unsigned long>::__init_with_size[abi:ne180100]<unsigned long *,unsigned long *>(&v66, *(const void **)(v19 + 8), *(void *)(v19 + 16), (uint64_t)(*(void *)(v19 + 16) - *(void *)(v19 + 8)) >> 3);
                turi::flexible_type_fail(0);
                if (v66.__r_.__value_.__r.__words[0])
                {
                  v66.__r_.__value_.__l.__size_ = v66.__r_.__value_.__r.__words[0];
                  operator delete(v66.__r_.__value_.__l.__data_);
                }
                goto LABEL_69;
              case 4:
                uint64_t v37 = v11->__r_.__value_.__r.__words[0];
                memset(&v66, 0, sizeof(v66));
                std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&v66, *(uint64_t **)(v37 + 8), *(uint64_t **)(v37 + 16), (uint64_t)(*(void *)(v37 + 16) - *(void *)(v37 + 8)) >> 4);
                turi::flexible_type_fail(0);
                v64.__r_.__value_.__r.__words[0] = (std::string::size_type)&v66;
                std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v64);
                goto LABEL_69;
              case 5:
                uint64_t v38 = v11->__r_.__value_.__r.__words[0];
                memset(&v66, 0, sizeof(v66));
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__init_with_size[abi:ne180100]<std::pair<turi::flexible_type,turi::flexible_type>*,std::pair<turi::flexible_type,turi::flexible_type>*>(&v66, *(uint64_t **)(v38 + 8), *(uint64_t **)(v38 + 16), (uint64_t)(*(void *)(v38 + 16) - *(void *)(v38 + 8)) >> 5);
                turi::flexible_type_fail(0);
                v64.__r_.__value_.__r.__words[0] = (std::string::size_type)&v66;
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v64);
                goto LABEL_69;
              case 6:
                double data = (double)*(int *)(v7 + v8 + 8) / 1000000.0 + (double)((uint64_t)(*(void *)(v7 + v8) << 8) >> 8);
                goto LABEL_69;
              case 7:
                goto LABEL_69;
              case 8:
                uint64_t v39 = v11->__r_.__value_.__r.__words[0];
                uint64_t v40 = *(atomic_uint **)(v11->__r_.__value_.__r.__words[0] + 16);
                uint64_t v59 = *(void *)(v11->__r_.__value_.__r.__words[0] + 8);
                long long v60 = v40;
                if (v40) {
                  atomic_fetch_add_explicit(v40 + 2, 1u, memory_order_relaxed);
                }
                long long v41 = *(_OWORD *)(v39 + 24);
                long long v42 = *(_OWORD *)(v39 + 56);
                long long v62 = *(_OWORD *)(v39 + 40);
                long long v63 = v42;
                long long v61 = v41;
                turi::flexible_type_fail(0);
                boost::detail::shared_count::~shared_count(&v60);
                goto LABEL_69;
              case 9:
                turi::flexible_type_impl::ndarray<double>::ndarray(&v66, v11->__r_.__value_.__r.__words[0] + 8);
                turi::flexible_type_fail(0);
                if (v68)
                {
                  uint64_t v69 = v68;
                  operator delete(v68);
                }
                if (v66.__r_.__value_.__r.__words[2])
                {
                  std::string::size_type v67 = v66.__r_.__value_.__r.__words[2];
                  operator delete((void *)v66.__r_.__value_.__r.__words[2]);
                }
                if (v66.__r_.__value_.__l.__size_) {
                  std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v66.__r_.__value_.__l.__size_);
                }
LABEL_69:
                double v51 = data;
                turi::table_printer::_get_table_printer((uint64_t)this, &v51, (uint64_t)&v52);
                turi::table_internal::_print_time(&v54, v12, v53);
                goto LABEL_70;
              default:
LABEL_77:
                uint64_t result = turi::flexible_type_fail(0);
                __break(1u);
                return result;
            }
          }
          if (v13 == 1)
          {
            int v15 = *(unsigned __int8 *)(v7 + v8 + 12);
            uint64_t v16 = 0;
            switch(v15)
            {
              case 0:
                uint64_t v16 = v11->__r_.__value_.__r.__words[0];
                goto LABEL_57;
              case 1:
                uint64_t v16 = (uint64_t)*(double *)&v11->__r_.__value_.__l.__data_;
                goto LABEL_57;
              case 2:
                std::string::size_type v20 = v11->__r_.__value_.__r.__words[0];
                uint64_t v21 = (char **)(v11->__r_.__value_.__r.__words[0] + 8);
                size_t __idx = 0;
                char v22 = (char *)v21;
                if (*(char *)(v20 + 31) < 0) {
                  char v22 = *v21;
                }
                uint64_t v23 = (const std::string *)std::string::basic_string[abi:ne180100]<0>(&v66, v22);
                uint64_t v16 = std::stoll(v23, &__idx, 10);
                if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v66.__r_.__value_.__l.__data_);
                }
                if (*(char *)(v20 + 31) < 0) {
                  uint64_t v24 = *(void *)(v20 + 16);
                }
                else {
                  uint64_t v24 = *(unsigned __int8 *)(v20 + 31);
                }
                if (__idx != v24)
                {
                  double v45 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
                  std::operator+<char>();
                  uint64_t v46 = std::string::append(&v64, " cannot be interpreted as an integer");
                  long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
                  v66.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v47;
                  v46->__r_.__value_.__l.__size_ = 0;
                  v46->__r_.__value_.__r.__words[2] = 0;
                  v46->__r_.__value_.__r.__words[0] = 0;
                  std::runtime_error::runtime_error(v45, &v66);
                  __cxa_throw(v45, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
                }
                goto LABEL_57;
              case 3:
                std::string::size_type v18 = v11->__r_.__value_.__r.__words[0];
                memset(&v66, 0, sizeof(v66));
                std::vector<unsigned long>::__init_with_size[abi:ne180100]<unsigned long *,unsigned long *>(&v66, *(const void **)(v18 + 8), *(void *)(v18 + 16), (uint64_t)(*(void *)(v18 + 16) - *(void *)(v18 + 8)) >> 3);
                turi::flexible_type_fail(0);
                if (v66.__r_.__value_.__r.__words[0])
                {
                  v66.__r_.__value_.__l.__size_ = v66.__r_.__value_.__r.__words[0];
                  operator delete(v66.__r_.__value_.__l.__data_);
                }
                goto LABEL_56;
              case 4:
                std::string::size_type v31 = v11->__r_.__value_.__r.__words[0];
                memset(&v66, 0, sizeof(v66));
                std::vector<turi::flexible_type>::__init_with_size[abi:ne180100]<turi::flexible_type*,turi::flexible_type*>(&v66, *(uint64_t **)(v31 + 8), *(uint64_t **)(v31 + 16), (uint64_t)(*(void *)(v31 + 16) - *(void *)(v31 + 8)) >> 4);
                turi::flexible_type_fail(0);
                v64.__r_.__value_.__r.__words[0] = (std::string::size_type)&v66;
                std::vector<turi::flexible_type>::__destroy_vector::operator()[abi:ne180100]((void ***)&v64);
                goto LABEL_56;
              case 5:
                std::string::size_type v32 = v11->__r_.__value_.__r.__words[0];
                memset(&v66, 0, sizeof(v66));
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__init_with_size[abi:ne180100]<std::pair<turi::flexible_type,turi::flexible_type>*,std::pair<turi::flexible_type,turi::flexible_type>*>(&v66, *(uint64_t **)(v32 + 8), *(uint64_t **)(v32 + 16), (uint64_t)(*(void *)(v32 + 16) - *(void *)(v32 + 8)) >> 5);
                turi::flexible_type_fail(0);
                v64.__r_.__value_.__r.__words[0] = (std::string::size_type)&v66;
                std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v64);
                goto LABEL_56;
              case 6:
                uint64_t v16 = (uint64_t)(v11->__r_.__value_.__r.__words[0] << 8) >> 8;
                goto LABEL_57;
              case 7:
                goto LABEL_57;
              case 8:
                std::string::size_type v33 = v11->__r_.__value_.__r.__words[0];
                std::string v34 = *(atomic_uint **)(v11->__r_.__value_.__r.__words[0] + 16);
                uint64_t v59 = *(void *)(v11->__r_.__value_.__r.__words[0] + 8);
                long long v60 = v34;
                if (v34) {
                  atomic_fetch_add_explicit(v34 + 2, 1u, memory_order_relaxed);
                }
                long long v35 = *(_OWORD *)(v33 + 24);
                long long v36 = *(_OWORD *)(v33 + 56);
                long long v62 = *(_OWORD *)(v33 + 40);
                long long v63 = v36;
                long long v61 = v35;
                turi::flexible_type_fail(0);
                boost::detail::shared_count::~shared_count(&v60);
                goto LABEL_56;
              case 9:
                turi::flexible_type_impl::ndarray<double>::ndarray(&v66, v11->__r_.__value_.__r.__words[0] + 8);
                turi::flexible_type_fail(0);
                if (v68)
                {
                  uint64_t v69 = v68;
                  operator delete(v68);
                }
                if (v66.__r_.__value_.__r.__words[2])
                {
                  std::string::size_type v67 = v66.__r_.__value_.__r.__words[2];
                  operator delete((void *)v66.__r_.__value_.__r.__words[2]);
                }
                if (v66.__r_.__value_.__l.__size_) {
                  std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v66.__r_.__value_.__l.__size_);
                }
LABEL_56:
                uint64_t v16 = 0;
LABEL_57:
                uint64_t v52 = &unk_26D75A328;
                LOBYTE(v53) = v16 != 0;
                turi::table_internal::_print_BOOL(&v54, v12, v16 != 0);
                goto LABEL_70;
              default:
                goto LABEL_77;
            }
          }
          if (!*(unsigned char *)(*((void *)this + 90) + v9))
          {
            v66.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D75A050;
            v66.__r_.__value_.__l.__size_ = 0;
            LODWORD(v66.__r_.__value_.__r.__words[2]) = 0;
            v66.__r_.__value_.__s.__data_[20] = 0;
            if (v11 != (std::string *)&v66.__r_.__value_.__r.__words[1])
            {
              std::string::size_type v14 = v11->__r_.__value_.__r.__words[0];
              *(std::string::size_type *)((char *)&v66.__r_.__value_.__r.__words[1] + 5) = *(std::string::size_type *)((char *)v11->__r_.__value_.__r.__words + 5);
              v66.__r_.__value_.__l.__size_ = v14;
              v66.__r_.__value_.__s.__data_[20] = *(unsigned char *)(v7 + v8 + 12);
              if (v66.__r_.__value_.__s.__data_[20] <= 9u
                && ((1 << v66.__r_.__value_.__s.__data_[20]) & 0x33C) != 0)
              {
                atomic_fetch_add((atomic_ullong *volatile)v66.__r_.__value_.__l.__size_, 1uLL);
              }
            }
            turi::table_internal::_print_flexible_type(&v54, v12, (turi::flexible_type_impl *)&v66.__r_.__value_.__r.__words[1]);
            turi::table_internal::table_printer_element<turi::flexible_type,void>::~table_printer_element((uint64_t)&v66);
          }
LABEL_70:
          ++v9;
          uint64_t v7 = *((void *)this + 87);
          v8 += 16;
          v10 += 32;
        }
        while (v9 < (*((void *)this + 88) - v7) >> 4);
      }
      turi::table_printer::_p((uint64_t)this);
      long long v54 = (std::string *)*MEMORY[0x263F8C2C8];
      *(std::string **)((char *)&v54 + v54[-1].__r_.__value_.__r.__words[0]) = *(std::string **)(MEMORY[0x263F8C2C8]
                                                                                               + 24);
      uint64_t v55 = (uint64_t *)(MEMORY[0x263F8C318] + 16);
      if (v57 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x22A614E30](&v58);
    }
  }
  return pthread_mutex_unlock(v2);
}

void sub_223F0E6D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, boost::detail::shared_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (*(char *)(v17 - 169) < 0) {
    operator delete(*(void **)(v17 - 192));
  }
  if (*(char *)(v17 - 201) < 0)
  {
    operator delete(*(void **)(v17 - 224));
    if ((v16 & 1) == 0)
    {
LABEL_8:
      std::ostringstream::~ostringstream((uint64_t)&a14);
      pthread_mutex_unlock(v14);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v15);
  goto LABEL_8;
}

uint64_t turi::table_printer::get_tracked_table@<X0>(turi::table_printer *this@<X0>, turi::sframe *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v4 = (pthread_mutex_t *)((char *)this + 232);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 232));
  if (!*((unsigned char *)this + 592))
  {
    turi::sframe::sframe((turi::sframe *)__p);
    turi::sframe::operator=((uint64_t)this + 296, (uint64_t)__p);
    turi::sframe::~sframe((turi::sframe *)__p);
    uint64_t v6 = *(void *)this;
    uint64_t v5 = *((void *)this + 1);
    std::vector<std::string>::size_type v7 = (v5 - *(void *)this) >> 5;
    std::vector<std::string>::vector(&v13, v7);
    std::vector<turi::flex_type_enum>::vector(&v12, v7);
    if (v5 != v6)
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      if (v7 <= 1) {
        std::vector<std::string>::size_type v7 = 1;
      }
      do
      {
        std::string::operator=(&v13.__begin_[v8], (const std::string *)(*(void *)this + v9));
        *((unsigned char *)v12 + v10++) = 2;
        v9 += 32;
        ++v8;
      }
      while (v7 != v10);
    }
    std::string::basic_string[abi:ne180100]<0>(__p, "");
    turi::sframe::open_for_write((uint64_t)this + 296, &v13, &v12, __p, 1, 1);
  }
  if (*((unsigned char *)this + 584) && *((unsigned char *)this + 585)) {
    turi::sframe::close((turi::table_printer *)((char *)this + 296));
  }
  *((unsigned char *)this + 592) = 0;
  turi::sframe::sframe(a2, (turi::table_printer *)((char *)this + 296));
  return pthread_mutex_unlock(v4);
}

void sub_223F0EA9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  __clang_call_terminate(exception_object);
}

void turi::table_printer::print_track_row_if_necessary(void)const::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/logging/table_printer/table_printer.cpp", 110);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"track_row_values_.size()", 24);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"format.size()", 13);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  std::vector<std::string>::size_type v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    unint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/logging/table_printer/table_printer.cpp", "operator()", 229, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  std::vector<std::string> v13 = v16;
  turi::table_printer::print_track_row_if_necessary(void)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F0ECCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::table_printer::print_track_row_if_necessary(void)const::$_1::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Assertion failed: (", 19);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/logging/table_printer/table_printer.cpp", 110);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"track_row_styles_.size()", 24);
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"==", 2);
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"format.size()", 13);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"  [", 3);
  std::vector<std::string>::size_type v7 = (void *)std::ostream::operator<<();
  LOBYTE(v13) = 32;
  uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v13, 1);
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"==", 2);
  LOBYTE(v13) = 32;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)&v13, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"]", 1);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v11);
  if (*((int *)global_logger() + 169) <= 6)
  {
    unint64_t v12 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/logging/table_printer/table_printer.cpp", "operator()", 230, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v12, (uint64_t)&__p);
    if (v15 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  std::vector<std::string> v13 = v16;
  turi::table_printer::print_track_row_if_necessary(void)::$_1::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F0EF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::table_printer::os_log_value(turi::table_printer *this, char *a2, const turi::flexible_type *a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  switch(a2[12])
  {
    case 0:
      os_log_object();
      uint64_t v5 = os_log_object(void)::log_object;
      if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
      {
        uint64_t v6 = *(void **)a2;
        int v13 = 134218496;
        uint64_t v14 = 2;
        __int16 v15 = 2048;
        int v16 = this;
        __int16 v17 = 2048;
        std::string::size_type v18 = v6;
        std::vector<std::string>::size_type v7 = "event: %lu, column: %lu, value: %lld";
        goto LABEL_17;
      }
      break;
    case 1:
      os_log_object();
      uint64_t v5 = os_log_object(void)::log_object;
      if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
      {
        uint64_t v8 = *(void **)a2;
        int v13 = 134218496;
        uint64_t v14 = 2;
        __int16 v15 = 2048;
        int v16 = this;
        __int16 v17 = 2048;
        std::string::size_type v18 = v8;
        std::vector<std::string>::size_type v7 = "event: %lu, column: %lu, value: %f";
        goto LABEL_17;
      }
      break;
    case 2:
      os_log_object();
      uint64_t v5 = os_log_object(void)::log_object;
      if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
      {
        uint64_t v9 = (void *)(*(void *)a2 + 8);
        if (*(char *)(*(void *)a2 + 31) < 0) {
          uint64_t v9 = (void *)*v9;
        }
        int v13 = 134218498;
        uint64_t v14 = 2;
        __int16 v15 = 2048;
        int v16 = this;
        __int16 v17 = 2082;
        std::string::size_type v18 = v9;
        std::vector<std::string>::size_type v7 = "event: %lu, column: %lu, value: %{public}s";
        goto LABEL_17;
      }
      break;
    case 6:
      os_log_object();
      uint64_t v5 = os_log_object(void)::log_object;
      if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = (uint64_t)(*(void *)a2 << 8) >> 8;
        int v13 = 134218496;
        uint64_t v14 = 2;
        __int16 v15 = 2048;
        int v16 = this;
        __int16 v17 = 2048;
        std::string::size_type v18 = (void *)v12;
        std::vector<std::string>::size_type v7 = "event: %lu, column: %lu, value: %{time_t}lld";
        goto LABEL_17;
      }
      break;
    default:
      os_log_object();
      uint64_t v5 = os_log_object(void)::log_object;
      if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
      {
        unint64_t v10 = a2[12];
        if (v10 > 9) {
          uint64_t v11 = "undefined";
        }
        else {
          uint64_t v11 = off_2646D6DA0[v10];
        }
        int v13 = 134218498;
        uint64_t v14 = 2;
        __int16 v15 = 2048;
        int v16 = this;
        __int16 v17 = 2082;
        std::string::size_type v18 = v11;
        std::vector<std::string>::size_type v7 = "event: %lu, column: %lu, value: instance of complex type %{public}s";
LABEL_17:
        _os_log_impl(&dword_223D44000, v5, OS_LOG_TYPE_INFO, v7, (uint8_t *)&v13, 0x20u);
      }
      break;
  }
}

void turi::table_internal::table_printer_element<BOOL,void>::print(uint64_t a1, void *a2, unint64_t a3)
{
}

uint64_t turi::table_printer::_get_table_printer@<X0>(uint64_t result@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  double v4 = *a2;
  if (*a2 < 0.0)
  {
    uint64_t v5 = result;
    uint64_t result = gettimeofday(&v6, 0);
    double v4 = (double)(v6.tv_usec - *(_DWORD *)(v5 + 32)) / 1000000.0 + (double)(v6.tv_sec - *(void *)(v5 + 24));
  }
  *(void *)a3 = &unk_26D756A68;
  *(double *)(a3 + 8) = v4;
  return result;
}

uint64_t turi::table_printer::set_up_time_printing_interval(turi::table_printer *this, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  gettimeofday(v12, 0);
  unint64_t v4 = 0;
  double v5 = ((double)(v12[0].tv_usec - *((_DWORD *)this + 8)) / 1000000.0
      + (double)(v12[0].tv_sec - *((void *)this + 3))
      - *((double *)this + 7))
     / (double)(unint64_t)(a2 - *((void *)this + 8));
  v12[0] = (timeval)xmmword_2246C6A10;
  v12[1] = (timeval)unk_2246C6A20;
  double v6 = *(double *)&turi::MIN_SECONDS_BETWEEN_TICK_PRINTS;
  uint64_t result = 1000000000;
  do
  {
    uint64_t v8 = 0;
    while (1)
    {
      double v9 = v5 * (double)*(unint64_t *)((char *)&v12[0].tv_sec + v8);
      if (v9 >= v6) {
        break;
      }
      v8 += 8;
      if (v8 == 32) {
        goto LABEL_7;
      }
    }
    uint64_t result = *(__darwin_time_t *)((char *)&v12[0].tv_sec + v8);
LABEL_7:
    for (uint64_t i = 0; i != 32; i += 8)
      *(__darwin_time_t *)((char *)&v12[0].tv_sec + i) *= 10;
  }
  while (v9 < v6 && v4++ <= 8);
  return result;
}

void turi::table_printer::os_log_value(turi::table_printer *this, uint64_t a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  os_log_object();
  unint64_t v4 = os_log_object(void)::log_object;
  if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
  {
    int v5 = 134218496;
    uint64_t v6 = 2;
    __int16 v7 = 2048;
    uint64_t v8 = this;
    __int16 v9 = 2048;
    uint64_t v10 = a2;
    _os_log_impl(&dword_223D44000, v4, OS_LOG_TYPE_INFO, "event: %lu, column: %lu, value: %lu", (uint8_t *)&v5, 0x20u);
  }
}

{
  NSObject *v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  turi::table_printer *v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v11 = *MEMORY[0x263EF8340];
  os_log_object();
  unint64_t v4 = os_log_object(void)::log_object;
  if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
  {
    int v5 = 134218496;
    uint64_t v6 = 2;
    __int16 v7 = 2048;
    uint64_t v8 = this;
    __int16 v9 = 2048;
    uint64_t v10 = a2;
    _os_log_impl(&dword_223D44000, v4, OS_LOG_TYPE_INFO, "event: %lu, column: %lu, value: %lld", (uint8_t *)&v5, 0x20u);
  }
}

void turi::table_printer::os_log_value(turi::table_printer *this, double a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  os_log_object();
  unint64_t v4 = os_log_object(void)::log_object;
  if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
  {
    int v5 = 134218496;
    uint64_t v6 = 2;
    __int16 v7 = 2048;
    uint64_t v8 = this;
    __int16 v9 = 2048;
    double v10 = a2;
    _os_log_impl(&dword_223D44000, v4, OS_LOG_TYPE_INFO, "event: %lu, column: %lu, value: %f", (uint8_t *)&v5, 0x20u);
  }
}

void turi::table_printer::os_log_value(turi::table_printer *this, float a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  os_log_object();
  unint64_t v4 = os_log_object(void)::log_object;
  if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
  {
    int v5 = 134218496;
    uint64_t v6 = 2;
    __int16 v7 = 2048;
    uint64_t v8 = this;
    __int16 v9 = 2048;
    double v10 = a2;
    _os_log_impl(&dword_223D44000, v4, OS_LOG_TYPE_INFO, "event: %lu, column: %lu, value: %f", (uint8_t *)&v5, 0x20u);
  }
}

void turi::table_printer::os_log_value(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  os_log_object();
  uint64_t v6 = os_log_object(void)::log_object;
  if (os_log_type_enabled((os_log_t)os_log_object(void)::log_object, OS_LOG_TYPE_INFO))
  {
    double v7 = *a3;
    if (*a3 < 0.0)
    {
      gettimeofday((timeval *)v8, 0);
      double v7 = (double)(*(_DWORD *)&v8[8] - *(_DWORD *)(a1 + 32)) / 1000000.0
         + (double)(uint64_t)(*(void *)v8 - *(void *)(a1 + 24));
    }
    *(_DWORD *)uint64_t v8 = 134218496;
    *(void *)&void v8[4] = 2;
    *(_WORD *)&v8[12] = 2048;
    *(void *)&v8[14] = a2;
    __int16 v9 = 2048;
    double v10 = v7;
    _os_log_impl(&dword_223D44000, v6, OS_LOG_TYPE_INFO, "event: %lu, column: %lu, value: %f seconds", v8, 0x20u);
  }
}

std::string *std::vector<std::pair<std::string,unsigned long>>::__init_with_size[abi:ne180100]<std::pair<std::string,unsigned long>*,std::pair<std::string,unsigned long>*>(std::string *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<std::pair<turi::flexible_type,turi::flexible_type>>::__vallocate[abi:ne180100](result, a4);
    uint64_t result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<std::string,unsigned long>>,std::pair<std::string,unsigned long>*,std::pair<std::string,unsigned long>*,std::pair<std::string,unsigned long>*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_223F0F9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::pair<std::string,unsigned long>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<std::string,unsigned long>>,std::pair<std::string,unsigned long>*,std::pair<std::string,unsigned long>*,std::pair<std::string,unsigned long>*>(uint64_t a1, long long *a2, long long *a3, std::string *this)
{
  unint64_t v4 = this;
  uint64_t v12 = this;
  uint64_t v13 = this;
  v10[0] = a1;
  v10[1] = &v12;
  void v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((void *)v6 + 1));
        uint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
        uint64_t v8 = v4;
      }
      v4[1].__r_.__value_.__r.__words[0] = *((void *)v6 + 3);
      v6 += 2;
      unint64_t v4 = (std::string *)((char *)v8 + 32);
      uint64_t v13 = (std::string *)((char *)v8 + 32);
    }
    while (v6 != a3);
  }
  char v11 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::pair<std::string,unsigned long>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v10);
  return v4;
}

void sub_223F0FA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::pair<std::string,unsigned long>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::pair<std::string,unsigned long>*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,unsigned long>>,std::pair<std::string,unsigned long>*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 9) < 0) {
      operator delete(*(void **)(v1 - 32));
    }
    v1 -= 32;
  }
}

uint64_t turi::table_internal::table_printer_element<BOOL,void>::get_value@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 12) = 0;
  *(_DWORD *)(a2 + 8) = 0;
  *(void *)a2 = *(unsigned __int8 *)(result + 8);
  return result;
}

pthread_mutex_t *turi::mutex::mutex(pthread_mutex_t *this)
{
  int v2 = pthread_mutex_init(this, 0);
  assert_msg(v2 == 0, "Mutex create error %d", v2);
  return this;
}

double CoreML::Specification::V5::protobuf_MIL_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::V5::protobuf_MIL_2eproto::TableStruct *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _tc_google::protobuf::internal::VerifyVersion((_tc_google::protobuf::internal *)0x2DD278, (_tc_google::protobuf::internal *)0x2DD278, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/external/coremltools_wrap/coremltools/mlmodel/build/format/MIL.pb.cc", a4);
  _tc_google::protobuf::internal::InitProtobufDefaults(v4);
  qword_2680894D0 = 0;
  unk_2680894D8 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_2680894E0 = 0;
  unk_2680894E8 = 0;
  dword_2680894F0 = 0;
  CoreML::Specification::V5::_Program_FunctionsEntry_default_instance_ = (uint64_t)&unk_26D75B8B0;
  byte_2680894F8 = 1;
  qword_268089508 = 0;
  unk_268089510 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_268089518 = 0;
  unk_268089520 = 0;
  dword_268089528 = 0;
  CoreML::Specification::V5::_Program_AttributesEntry_default_instance_ = (uint64_t)&unk_26D75BA30;
  byte_268089530 = 1;
  *((unsigned char *)CoreML::Specification::V5::Program::Program((CoreML::Specification::V5::Program *)&CoreML::Specification::V5::_Program_default_instance_)
  + 104) = 1;
  qword_2680895B0 = 0;
  unk_2680895B8 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_2680895C0 = 0;
  unk_2680895C8 = 0;
  dword_2680895D0 = 0;
  CoreML::Specification::V5::_Function_BlockSpecializationsEntry_default_instance_ = (uint64_t)&unk_26D75BBB0;
  byte_2680895D8 = 1;
  qword_2680895E8 = 0;
  unk_2680895F0 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_2680895F8 = 0;
  unk_268089600 = 0;
  dword_268089608 = 0;
  CoreML::Specification::V5::_Function_AttributesEntry_default_instance_ = (uint64_t)&unk_26D75BA30;
  byte_268089610 = 1;
  *((unsigned char *)CoreML::Specification::V5::Function::Function((CoreML::Specification::V5::Function *)&CoreML::Specification::V5::_Function_default_instance_)
  + 12CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 1;
  qword_2680896A0 = 0;
  unk_2680896A8 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_2680896B0 = 0;
  unk_2680896B8 = 0;
  dword_2680896C0 = 0;
  CoreML::Specification::V5::_Block_AttributesEntry_default_instance_ = (uint64_t)&unk_26D75BA30;
  byte_2680896C8 = 1;
  *((unsigned char *)CoreML::Specification::V5::Block::Block((CoreML::Specification::V5::Block *)&CoreML::Specification::V5::_Block_default_instance_)
  + 128) = 1;
  CoreML::Specification::V5::_Argument_Binding_default_instance_ = (uint64_t)&unk_26D75A528;
  unk_268089760 = 0;
  qword_268089770 = 0;
  byte_268089778 = 1;
  CoreML::Specification::V5::_Argument_default_instance_ = (uint64_t)&unk_26D75A5C0;
  unk_268089798 = 0u;
  unk_2680897A8 = 0u;
  dword_2680897B8 = 0;
  byte_2680897C0 = 1;
  qword_2680897D0 = 0;
  unk_2680897D8 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_2680897E0 = 0;
  unk_2680897E8 = 0;
  dword_2680897F0 = 0;
  CoreML::Specification::V5::_Operation_InputsEntry_default_instance_ = (uint64_t)&unk_26D75BD30;
  byte_2680897F8 = 1;
  qword_268089808 = 0;
  unk_268089810 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_268089818 = 0;
  unk_268089820 = 0;
  dword_268089828 = 0;
  CoreML::Specification::V5::_Operation_AttributesEntry_default_instance_ = (uint64_t)&unk_26D75BA30;
  byte_268089830 = 1;
  *((unsigned char *)CoreML::Specification::V5::Operation::Operation((CoreML::Specification::V5::Operation *)&CoreML::Specification::V5::_Operation_default_instance_)
  + 144) = 1;
  CoreML::Specification::V5::_NamedValueType_default_instance_ = (uint64_t)&unk_26D75A6F0;
  *(void *)algn_2680898D8 = 0;
  qword_2680898E0 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_2680898E8 = 0;
  dword_2680898F0 = 0;
  byte_2680898F8 = 1;
  CoreML::Specification::V5::_ValueType_default_instance_ = (uint64_t)&unk_26D75A788;
  unk_268089908 = 0;
  qword_268089918 = 0;
  byte_268089920 = 1;
  qword_268089950 = 0;
  unk_268089958 = &_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_268089960 = 0;
  unk_268089968 = 0;
  dword_268089970 = 0;
  CoreML::Specification::V5::_TensorType_AttributesEntry_default_instance_ = (uint64_t)&unk_26D75BA30;
  byte_268089978 = 1;
  *((unsigned char *)CoreML::Specification::V5::TensorType::TensorType((CoreML::Specification::V5::TensorType *)&CoreML::Specification::V5::_TensorType_default_instance_)
  + 88) = 1;
  CoreML::Specification::V5::_TupleType_default_instance_ = (uint64_t)&unk_26D75A8B8;
  double result = 0.0;
  unk_2680899E8 = 0u;
  unk_2680899F8 = 0u;
  dword_268089A08 = 0;
  byte_268089A10 = 1;
  CoreML::Specification::V5::_ListType_default_instance_ = (uint64_t)&unk_26D75A950;
  unk_268089A20 = 0;
  dword_268089A38 = 0;
  byte_268089A40 = 1;
  CoreML::Specification::V5::_DictionaryType_default_instance_ = (uint64_t)&unk_26D75A9E8;
  unk_268089A50 = 0;
  dword_268089A68 = 0;
  byte_268089A70 = 1;
  qword_268089A80 = 0;
  qword_268089A88 = 0;
  CoreML::Specification::V5::_Dimension_ConstantDimension_default_instance_ = (uint64_t)&unk_26D75AA80;
  dword_268089A90 = 0;
  byte_268089A98 = 1;
  CoreML::Specification::V5::_Dimension_UnknownDimension_default_instance_ = (uint64_t)&unk_26D75AB18;
  qword_268089AA8 = 0;
  byte_268089AB0 = 0;
  dword_268089AB4 = 0;
  byte_268089AB8 = 1;
  CoreML::Specification::V5::_Dimension_default_instance_ = (uint64_t)&unk_26D75ABB0;
  unk_268089AC8 = 0;
  qword_268089AD8 = 0;
  byte_268089AE0 = 1;
  CoreML::Specification::V5::_Value_ImmediateValue_default_instance_ = (uint64_t)&unk_26D75AC48;
  unk_268089B00 = 0;
  qword_268089B10 = 0;
  byte_268089B18 = 1;
  CoreML::Specification::V5::_Value_FileValue_default_instance_ = (uint64_t)&unk_26D75ACE0;
  *(void *)algn_268089B48 = 0;
  qword_268089B50 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  unk_268089B58 = 0;
  dword_268089B60 = 0;
  byte_268089B68 = 1;
  CoreML::Specification::V5::_Value_BlobFileValue_default_instance_ = (uint64_t)&unk_26D75AD78;
  *(void *)algn_268089B78 = 0;
  qword_268089B80 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  unk_268089B88 = 0;
  dword_268089B90 = 0;
  byte_268089B98 = 1;
  CoreML::Specification::V5::_Value_default_instance_ = (uint64_t)&unk_26D75AE10;
  *(void *)algn_268089BA8 = 0;
  qword_268089BB0 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  qword_268089BC8 = 0;
  byte_268089BD0 = 1;
  CoreML::Specification::V5::_TensorValue_RepeatedFloats_default_instance_ = (uint64_t)&unk_26D75AEA8;
  *(void *)algn_268089BF8 = 0;
  qword_268089C00 = 0;
  unk_268089C08 = 0;
  dword_268089C14 = 0;
  byte_268089C18 = 1;
  CoreML::Specification::V5::_TensorValue_RepeatedDoubles_default_instance_ = (uint64_t)&unk_26D75AF40;
  *(void *)algn_268089C28 = 0;
  qword_268089C30 = 0;
  unk_268089C38 = 0;
  dword_268089C44 = 0;
  byte_268089C48 = 1;
  CoreML::Specification::V5::_TensorValue_RepeatedInts_default_instance_ = (uint64_t)&unk_26D75AFD8;
  *(void *)algn_268089C58 = 0;
  qword_268089C60 = 0;
  unk_268089C68 = 0;
  dword_268089C74 = 0;
  byte_268089C78 = 1;
  CoreML::Specification::V5::_TensorValue_RepeatedLongInts_default_instance_ = (uint64_t)&unk_26D75B070;
  *(void *)algn_268089C88 = 0;
  qword_268089C90 = 0;
  unk_268089C98 = 0;
  dword_268089CA4 = 0;
  byte_268089CA8 = 1;
  CoreML::Specification::V5::_TensorValue_RepeatedBools_default_instance_ = (uint64_t)&unk_26D75B108;
  *(void *)algn_268089CB8 = 0;
  qword_268089CC0 = 0;
  unk_268089CC8 = 0;
  dword_268089CD4 = 0;
  byte_268089CD8 = 1;
  CoreML::Specification::V5::_TensorValue_RepeatedStrings_default_instance_ = (uint64_t)&unk_26D75B1A0;
  dword_268089D08 = 0;
  unk_268089CF8 = 0u;
  unk_268089CE8 = 0u;
  byte_268089D10 = 1;
  CoreML::Specification::V5::_TensorValue_RepeatedBytes_default_instance_ = (uint64_t)&unk_26D75B238;
  unk_268089D20 = 0;
  qword_268089D28 = (uint64_t)&_tc_google::protobuf::internal::fixed_address_empty_string;
  dword_268089D30 = 0;
  byte_268089D38 = 1;
  CoreML::Specification::V5::_TensorValue_default_instance_ = (uint64_t)&unk_26D75B2D0;
  unk_268089D48 = 0;
  qword_268089D58 = 0;
  byte_268089D60 = 1;
  CoreML::Specification::V5::_TupleValue_default_instance_ = (uint64_t)&unk_26D75B368;
  dword_268089DC8 = 0;
  unk_268089DB8 = 0u;
  unk_268089DA8 = 0u;
  byte_268089DD0 = 1;
  CoreML::Specification::V5::_ListValue_default_instance_ = (uint64_t)&unk_26D75B400;
  dword_268089E00 = 0;
  *(_OWORD *)&algn_268089DE0[16] = 0u;
  *(_OWORD *)algn_268089DE0 = 0u;
  byte_268089E08 = 1;
  CoreML::Specification::V5::_DictionaryValue_KeyValuePair_default_instance_ = (uint64_t)&unk_26D75B498;
  *(void *)algn_268089E18 = 0;
  dword_268089E30 = 0;
  byte_268089E38 = 1;
  CoreML::Specification::V5::_DictionaryValue_default_instance_ = (uint64_t)&unk_26D75B530;
  dword_268089E68 = 0;
  unk_268089E58 = 0u;
  unk_268089E48 = 0u;
  byte_268089E70 = 1;
  qword_2680894D0 = (uint64_t)&CoreML::Specification::V5::_Program_FunctionsEntry_default_instance_;
  qword_2680894E0 = (uint64_t)&CoreML::Specification::V5::_Function_default_instance_;
  qword_268089508 = (uint64_t)&CoreML::Specification::V5::_Program_AttributesEntry_default_instance_;
  qword_268089518 = (uint64_t)&CoreML::Specification::V5::_Value_default_instance_;
  qword_2680895B0 = (uint64_t)&CoreML::Specification::V5::_Function_BlockSpecializationsEntry_default_instance_;
  qword_2680895C0 = (uint64_t)&CoreML::Specification::V5::_Block_default_instance_;
  qword_2680895E8 = (uint64_t)&CoreML::Specification::V5::_Function_AttributesEntry_default_instance_;
  qword_2680895F8 = (uint64_t)&CoreML::Specification::V5::_Value_default_instance_;
  qword_2680896A0 = (uint64_t)&CoreML::Specification::V5::_Block_AttributesEntry_default_instance_;
  qword_2680896B0 = (uint64_t)&CoreML::Specification::V5::_Value_default_instance_;
  qword_2680897D0 = (uint64_t)&CoreML::Specification::V5::_Operation_InputsEntry_default_instance_;
  qword_2680897E0 = (uint64_t)&CoreML::Specification::V5::_Argument_default_instance_;
  qword_268089808 = (uint64_t)&CoreML::Specification::V5::_Operation_AttributesEntry_default_instance_;
  qword_268089818 = (uint64_t)&CoreML::Specification::V5::_Value_default_instance_;
  qword_2680898E8 = (uint64_t)&CoreML::Specification::V5::_ValueType_default_instance_;
  qword_268089950 = (uint64_t)&CoreML::Specification::V5::_TensorType_AttributesEntry_default_instance_;
  qword_268089960 = (uint64_t)&CoreML::Specification::V5::_Value_default_instance_;
  qword_268089A28 = (uint64_t)&CoreML::Specification::V5::_ValueType_default_instance_;
  unk_268089A30 = &CoreML::Specification::V5::_Dimension_default_instance_;
  qword_268089A58 = (uint64_t)&CoreML::Specification::V5::_ValueType_default_instance_;
  unk_268089A60 = &CoreML::Specification::V5::_ValueType_default_instance_;
  qword_268089BB8 = (uint64_t)&CoreML::Specification::V5::_ValueType_default_instance_;
  qword_268089E20 = (uint64_t)&CoreML::Specification::V5::_Value_default_instance_;
  unk_268089E28 = &CoreML::Specification::V5::_Value_default_instance_;
  return result;
}

void CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(CoreML::Specification::V5::protobuf_MIL_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v2[0] = &unk_26D7768F8;
    v2[1] = CoreML::Specification::V5::protobuf_MIL_2eproto::TableStruct::InitDefaultsImpl;
    char v3 = 0;
    _tc_google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(void)::once, (uint64_t)v2);
    _tc_google::protobuf::internal::FunctionClosure0::~FunctionClosure0((_tc_google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_223F103BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::FunctionClosure0::~FunctionClosure0((_tc_google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CoreML::Specification::V5::Program *CoreML::Specification::V5::Program::Program(CoreML::Specification::V5::Program *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75A360;
  *((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::Init((uint64_t)this + 24);
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  *((_DWORD *)this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  int v2 = (CoreML::Specification::V5::protobuf_MIL_2eproto *)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Init((uint64_t)this + 56);
  *((_DWORD *)this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  if (this != (CoreML::Specification::V5::Program *)&CoreML::Specification::V5::_Program_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(v2);
  }
  *((void *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  return this;
}

void sub_223F1047C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v3);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::~Map(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom(uint64_t a1, uint64_t a2)
{
  uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin(a2 + 8, v10);
  uint64_t v4 = v10[0];
  if (v10[0])
  {
    uint64_t v5 = a1 + 8;
    do
    {
      uint64_t v6 = *(const std::string **)(v4 + 24);
      long long v7 = (const CoreML::Specification::V5::Function *)&v6[1];
      uint64_t v8 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::operator[](v5, v6);
      if (v7 != (const CoreML::Specification::V5::Function *)v8)
      {
        uint64_t v9 = (CoreML::Specification::V5::Function *)v8;
        CoreML::Specification::V5::Function::Clear((CoreML::Specification::V5::Function *)v8);
        CoreML::Specification::V5::Function::MergeFrom(v9, v7);
      }
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v10);
      uint64_t v4 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom(uint64_t a1, uint64_t a2)
{
  uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin(a2 + 8, v10);
  uint64_t v4 = v10[0];
  if (v10[0])
  {
    uint64_t v5 = a1 + 8;
    do
    {
      uint64_t v6 = *(const std::string **)(v4 + 24);
      long long v7 = (const CoreML::Specification::V5::Value *)&v6[1];
      uint64_t v8 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::operator[](v5, v6);
      if (v7 != (const CoreML::Specification::V5::Value *)v8)
      {
        uint64_t v9 = (CoreML::Specification::V5::Value *)v8;
        CoreML::Specification::V5::Value::Clear((CoreML::Specification::V5::Value *)v8);
        CoreML::Specification::V5::Value::MergeFrom(v9, v7);
      }
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v10);
      uint64_t v4 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

void CoreML::Specification::V5::Program::~Program(CoreML::Specification::V5::Program *this)
{
  *(void *)this = &unk_26D75A360;
  int v2 = (void *)((char *)this + 56);
  CoreML::Specification::V5::Program::SharedDtor((uint64_t)this);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v2);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::~Map((void *)this + 3);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Program::~Program(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::V5::Program::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 80);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A614FA0);
  }
  return this;
}

void *CoreML::Specification::V5::Program::default_instance(CoreML::Specification::V5::Program *this)
{
  return &CoreML::Specification::V5::_Program_default_instance_;
}

void CoreML::Specification::V5::Program::New(CoreML::Specification::V5::Program *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F10740(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40FAC9F822);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Program>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Program>);
  }
  return result;
}

void CoreML::Specification::V5::Program::Clear(CoreML::Specification::V5::Program *this)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::clear((uint64_t)this + 24);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::clear((uint64_t)this + 56);
  uint64_t v2 = *((void *)this + 10);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  *((void *)this + 11) = 0;
}

uint64_t CoreML::Specification::V5::Program::MergePartialFromCodedStream(CoreML::Specification::V5::Program *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 48;
  uint64_t v6 = (char *)this + 56;
  long long v7 = (std::string **)((char *)this + 80);
  uint64_t v8 = (char *)this + 16;
  uint64_t v9 = (char *)this + 24;
  while (1)
  {
    uint64_t v10 = *a2;
    if (*a2 >= a2[1]) {
      break;
    }
    uint64_t v11 = *v10;
    if (*v10 < 1) {
      goto LABEL_7;
    }
    *a2 = v10 + 1;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) == 0) {
      goto LABEL_27;
    }
LABEL_8:
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 8) {
          goto LABEL_27;
        }
        uint64_t v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          unint64_t Varint64Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v24 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v14;
          *a2 = v14 + 1;
        }
        *((void *)this + 11) = Varint64Fallback;
        break;
      case 2u:
        if (v12 != 18) {
          goto LABEL_27;
        }
        long long v36 = v8;
        uint64_t v37 = v9;
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        std::string __p = 0;
        uint64_t v41 = 0;
        int v16 = *a2;
        if (*a2 >= a2[1] || *v16 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_71;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v16;
          *a2 = v16 + 1;
        }
        unint64_t v25 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        int v26 = v25;
        if ((v25 & 0x8000000000000000) != 0
          || !_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::MergePartialFromCodedStream((uint64_t)&v36, (uint64_t)a2)|| !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v26))
        {
          goto LABEL_71;
        }
        if (v40 >= 0) {
          p_p = (_tc_google::protobuf::internal *)&__p;
        }
        else {
          p_p = (_tc_google::protobuf::internal *)__p;
        }
        if (v40 >= 0) {
          unint64_t v28 = HIBYTE(v40);
        }
        else {
          unint64_t v28 = v39;
        }
        BOOL v29 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, (const char *)v28, 0, (uint64_t)"CoreML.Specification.V5.Program.FunctionsEntry.key");
        goto LABEL_59;
      case 3u:
        if (v12 != 26) {
          goto LABEL_27;
        }
        if (*v7 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
          _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v7)) {
          return 0;
        }
        std::string::size_type v18 = *v7;
        if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::size_type v18 = (std::string *)v18->__r_.__value_.__r.__words[0];
          std::string::size_type size = (const char *)(*v7)->__r_.__value_.__l.__size_;
        }
        else
        {
          std::string::size_type size = (const char *)HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v18, size, 0, (uint64_t)"CoreML.Specification.V5.Program.docString"))return 0; {
        break;
        }
      case 4u:
        if (v12 != 34) {
          goto LABEL_27;
        }
        long long v36 = v5;
        uint64_t v37 = v6;
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        std::string __p = 0;
        uint64_t v41 = 0;
        std::string::size_type v20 = *a2;
        if (*a2 >= a2[1] || *v20 < 0)
        {
          int v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v21 < 0) {
            goto LABEL_71;
          }
        }
        else
        {
          int v21 = *v20;
          *a2 = v20 + 1;
        }
        unint64_t v30 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v21);
        int v31 = v30;
        if ((v30 & 0x8000000000000000) != 0
          || !_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::MergePartialFromCodedStream((uint64_t)&v36, (uint64_t)a2)|| !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v31))
        {
LABEL_71:
          BOOL v34 = 0;
          int v23 = 6;
          goto LABEL_62;
        }
        if (v40 >= 0) {
          std::string::size_type v32 = (_tc_google::protobuf::internal *)&__p;
        }
        else {
          std::string::size_type v32 = (_tc_google::protobuf::internal *)__p;
        }
        if (v40 >= 0) {
          unint64_t v33 = HIBYTE(v40);
        }
        else {
          unint64_t v33 = v39;
        }
        BOOL v29 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(v32, (const char *)v33, 0, (uint64_t)"CoreML.Specification.V5.Program.AttributesEntry.key");
LABEL_59:
        BOOL v34 = v29;
        if (v29) {
          int v23 = 0;
        }
        else {
          int v23 = 6;
        }
LABEL_62:
        if (v41) {
          (*(void (**)(uint64_t))(*(void *)v41 + 8))(v41);
        }
        if (SHIBYTE(v40) < 0) {
          operator delete(__p);
        }
        if (!v34) {
          goto LABEL_33;
        }
        break;
      default:
        goto LABEL_27;
    }
LABEL_32:
    int v23 = 0;
LABEL_33:
    if (v23) {
      return 0;
    }
  }
  uint64_t v11 = 0;
LABEL_7:
  unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v11);
  unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v12 & 0x100000000) != 0) {
    goto LABEL_8;
  }
LABEL_27:
  if (v12) {
    BOOL v22 = (v12 & 7) == 4;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22)
  {
    if (!_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
    goto LABEL_32;
    }
  }
  return 1;
}

void sub_223F10B80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::~Parser(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

uint64_t CoreML::Specification::V5::Program::SerializeWithCachedSizes(CoreML::Specification::V5::Program *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v6 = *((void *)this + 11);
  if (v6) {
    _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = **((void **)this + 5);
  if (v7)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v7 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_26;
      }
    }
    else if (v7 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_26:
      operator new[]();
    }
    _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 24, v25);
    uint64_t v9 = 0;
    while (v25[0])
    {
      uint64_t v11 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v25[0] + 24), *(void *)(v25[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 2));
      if ((void *)v9 != v11)
      {
        if (v9) {
          (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        }
        uint64_t v9 = (uint64_t)v11;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v9, a2, v10);
      unint64_t v12 = *(unsigned __int8 **)(v25[0] + 24);
      if ((char)v12[23] < 0)
      {
        unint64_t v12 = *(unsigned __int8 **)v12;
        uint64_t v13 = *(const char **)(*(void *)(v25[0] + 24) + 8);
      }
      else
      {
        uint64_t v13 = (const char *)v12[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v12, v13, 1, (uint64_t)"CoreML.Specification.V5.Program.FunctionsEntry.key");
      _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v25);
    }
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  uint64_t result = *((void *)this + 10);
  if (*(char *)(result + 23) < 0)
  {
    int v16 = *(const char **)(result + 8);
    if (!v16) {
      goto LABEL_33;
    }
    uint64_t result = *(void *)result;
    goto LABEL_32;
  }
  int v16 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_32:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v16, 1, (uint64_t)"CoreML.Specification.V5.Program.docString");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, *((void *)this + 10), a2);
  }
LABEL_33:
  unint64_t v17 = **((void **)this + 9);
  if (v17)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v17 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_56;
      }
    }
    else if (v17 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_56:
      operator new[]();
    }
    uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 56, v25);
    uint64_t v19 = 0;
    while (v25[0])
    {
      int v21 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v25[0] + 24), *(void *)(v25[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 6));
      if ((void *)v19 != v21)
      {
        if (v19) {
          (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
        }
        uint64_t v19 = (uint64_t)v21;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v19, a2, v20);
      BOOL v22 = *(unsigned __int8 **)(v25[0] + 24);
      if ((char)v22[23] < 0)
      {
        BOOL v22 = *(unsigned __int8 **)v22;
        int v23 = *(const char **)(*(void *)(v25[0] + 24) + 8);
      }
      else
      {
        int v23 = (const char *)v22[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v22, v23, 1, (uint64_t)"CoreML.Specification.V5.Program.AttributesEntry.key");
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v25);
    }
    if (v19) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
  }
  return result;
}

void sub_223F111C8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614F80](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Program::ByteSizeLong(_tc_google::protobuf::Arena **this)
{
  uint64_t v2 = *(unsigned int *)this[5];
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)(this + 3), v16);
  char v3 = 0;
  while (v16[0])
  {
    uint64_t v4 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v16[0] + 24), *(void *)(v16[0] + 24) + 24, this[2]);
    if (v3 != (_DWORD *)v4)
    {
      if (v3) {
        (*(void (**)(_DWORD *))(*(void *)v3 + 8))(v3);
      }
      char v3 = v4;
    }
    uint64_t v5 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v3);
    v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v16);
  }
  if (v3) {
    (*(void (**)(_DWORD *))(*(void *)v3 + 8))(v3);
  }
  uint64_t v6 = *(unsigned int *)this[9];
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)(this + 7), v16);
  unint64_t v7 = 0;
  uint64_t v8 = v6 + v2;
  while (v16[0])
  {
    uint64_t v9 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v16[0] + 24), *(void *)(v16[0] + 24) + 24, this[6]);
    if (v7 != (_DWORD *)v9)
    {
      if (v7) {
        (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
      }
      unint64_t v7 = v9;
    }
    uint64_t v10 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v7);
    v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v16);
  }
  if (v7) {
    (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
  }
  uint64_t v11 = this[10];
  uint64_t v12 = *((unsigned __int8 *)v11 + 23);
  if (*((char *)v11 + 23) < 0)
  {
    if (!*((void *)v11 + 1)) {
      goto LABEL_24;
    }
  }
  else if (!*((unsigned char *)v11 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v13 = *((void *)v11 + 1);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v8 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  unint64_t v14 = (unint64_t)this[11];
  if (v14) {
    v8 += ((9 * (__clz(v14 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 24) = v8;
  return v8;
}

void sub_223F114A0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::V5::Program::MergeFrom(CoreML::Specification::V5::Program *this, const CoreML::Specification::V5::Program *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 16, (uint64_t)a2 + 16);
  uint64_t result = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 48, (uint64_t)a2 + 48);
  uint64_t v6 = *((void *)a2 + 10);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_11;
  }
  uint64_t result = (uint64_t)this + 80;
  unint64_t v7 = (uint64_t *)*((void *)this + 10);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    uint64_t result = (uint64_t)std::string::operator=(*((std::string **)this + 10), (const std::string *)v6);
  }
LABEL_11:
  uint64_t v8 = *((void *)a2 + 11);
  if (v8) {
    *((void *)this + 11) = v8;
  }
  return result;
}

uint64_t CoreML::Specification::V5::Program::IsInitialized(CoreML::Specification::V5::Program *this)
{
  return 1;
}

void *CoreML::Specification::V5::Program::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Program");
}

CoreML::Specification::V5::Function *CoreML::Specification::V5::Function::Function(CoreML::Specification::V5::Function *this)
{
  *(void *)this = &unk_26D75A3F8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0u;
  *((_DWORD *)this + 14) = 0;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::Init((uint64_t)this + 48);
  *((void *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 22) = 0;
  uint64_t v2 = (CoreML::Specification::V5::protobuf_MIL_2eproto *)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Init((uint64_t)this + 80);
  *((_DWORD *)this + 22) = 0;
  if (this != (CoreML::Specification::V5::Function *)&CoreML::Specification::V5::_Function_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(v2);
  }
  *((void *)this + 13) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 28) = 0;
  return this;
}

void sub_223F11654(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v5);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::~Map(v3);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)(v2 + 16));
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom(uint64_t a1, uint64_t a2)
{
  uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin(a2 + 8, v10);
  uint64_t v4 = v10[0];
  if (v10[0])
  {
    uint64_t v5 = a1 + 8;
    do
    {
      uint64_t v6 = *(const std::string **)(v4 + 24);
      unint64_t v7 = (const CoreML::Specification::V5::Block *)&v6[1];
      uint64_t v8 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::operator[](v5, v6);
      if (v7 != (const CoreML::Specification::V5::Block *)v8)
      {
        uint64_t v9 = (CoreML::Specification::V5::Block *)v8;
        CoreML::Specification::V5::Block::Clear((CoreML::Specification::V5::Block *)v8);
        CoreML::Specification::V5::Block::MergeFrom(v9, v7);
      }
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v10);
      uint64_t v4 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

void CoreML::Specification::V5::Function::~Function(CoreML::Specification::V5::Function *this)
{
  *(void *)this = &unk_26D75A3F8;
  uint64_t v2 = (void *)((char *)this + 80);
  CoreML::Specification::V5::Function::SharedDtor((uint64_t)this);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v2);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::~Map((void *)this + 6);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Function::~Function(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::V5::Function::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 104);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A614FA0);
  }
  return this;
}

void CoreML::Specification::V5::Function::New(CoreML::Specification::V5::Function *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1188C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Function>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Function>);
  }
  return result;
}

void CoreML::Specification::V5::Function::Clear(CoreML::Specification::V5::Function *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    char v3 = (CoreML::Specification::V5::NamedValueType **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::V5::NamedValueType::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::clear((uint64_t)this + 48);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::clear((uint64_t)this + 80);
  uint64_t v5 = *((void *)this + 13);
  if ((uint64_t *)v5 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
}

uint64_t CoreML::Specification::V5::Function::MergePartialFromCodedStream(CoreML::Specification::V5::Function *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (char *)this + 72;
  uint64_t v5 = (char *)this + 80;
  uint64_t v6 = (char *)this + 40;
  unint64_t v7 = (char *)this + 48;
  uint64_t v8 = (std::string **)((char *)this + 104);
  uint64_t v9 = (char *)this + 16;
  while (1)
  {
    uint64_t v10 = *a2;
    if (*a2 >= a2[1])
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = *v10;
      if (*v10 >= 1)
      {
        *a2 = v10 + 1;
        unint64_t v12 = v11 | 0x100000000;
        if ((v12 & 0x100000000) != 0) {
          goto LABEL_8;
        }
        goto LABEL_27;
      }
    }
    unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v11);
    unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v12 & 0x100000000) != 0)
    {
LABEL_8:
      switch(v12 >> 3)
      {
        case 1u:
          if (v12 != 10) {
            break;
          }
          unint64_t v14 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::NamedValueType>::TypeHandler>((uint64_t)v9);
          __int16 v15 = *a2;
          if (*a2 >= a2[1] || *v15 < 0)
          {
            int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v15;
            *a2 = v15 + 1;
          }
          unint64_t v25 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          if ((v25 & 0x8000000000000000) == 0)
          {
            int v27 = v25;
            if (CoreML::Specification::V5::NamedValueType::MergePartialFromCodedStream(v14, a2, v26))
            {
              if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v27))
              {
                goto LABEL_32;
              }
            }
          }
          return 0;
        case 2u:
          if (v12 != 18) {
            break;
          }
          if (*v8 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
            _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v8)) {
            return 0;
          }
          unint64_t v17 = *v8;
          if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
          {
            unint64_t v17 = (std::string *)v17->__r_.__value_.__r.__words[0];
            std::string::size_type size = (const char *)(*v8)->__r_.__value_.__l.__size_;
          }
          else
          {
            std::string::size_type size = (const char *)HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
          }
          if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v17, size, 0, (uint64_t)"CoreML.Specification.V5.Function.opset"))return 0; {
          goto LABEL_32;
          }
        case 3u:
          if (v12 != 26) {
            break;
          }
          uint64_t v39 = v6;
          uint64_t v40 = v7;
          uint64_t v42 = 0;
          uint64_t v43 = 0;
          std::string __p = 0;
          uint64_t v44 = 0;
          uint64_t v19 = *a2;
          if (*a2 >= a2[1] || *v19 < 0)
          {
            int v20 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v20 < 0) {
              goto LABEL_74;
            }
          }
          else
          {
            int v20 = *v19;
            *a2 = v19 + 1;
          }
          unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v20);
          int v29 = v28;
          if ((v28 & 0x8000000000000000) != 0
            || !_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>>::MergePartialFromCodedStream((uint64_t)&v39, (uint64_t)a2)|| !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v29))
          {
            goto LABEL_74;
          }
          if (v43 >= 0) {
            p_p = (_tc_google::protobuf::internal *)&__p;
          }
          else {
            p_p = (_tc_google::protobuf::internal *)__p;
          }
          if (v43 >= 0) {
            unint64_t v31 = HIBYTE(v43);
          }
          else {
            unint64_t v31 = v42;
          }
          BOOL v32 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, (const char *)v31, 0, (uint64_t)"CoreML.Specification.V5.Function.BlockSpecializationsEntry.key");
          goto LABEL_62;
        case 4u:
          if (v12 != 34) {
            break;
          }
          uint64_t v39 = v4;
          uint64_t v40 = v5;
          uint64_t v42 = 0;
          uint64_t v43 = 0;
          std::string __p = 0;
          uint64_t v44 = 0;
          int v21 = *a2;
          if (*a2 >= a2[1] || *v21 < 0)
          {
            int v22 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v22 < 0) {
              goto LABEL_74;
            }
          }
          else
          {
            int v22 = *v21;
            *a2 = v21 + 1;
          }
          unint64_t v33 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v22);
          int v34 = v33;
          if ((v33 & 0x8000000000000000) != 0
            || !_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::MergePartialFromCodedStream((uint64_t)&v39, (uint64_t)a2)|| !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v34))
          {
LABEL_74:
            BOOL v37 = 0;
            int v24 = 6;
            goto LABEL_65;
          }
          if (v43 >= 0) {
            long long v35 = (_tc_google::protobuf::internal *)&__p;
          }
          else {
            long long v35 = (_tc_google::protobuf::internal *)__p;
          }
          if (v43 >= 0) {
            unint64_t v36 = HIBYTE(v43);
          }
          else {
            unint64_t v36 = v42;
          }
          BOOL v32 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(v35, (const char *)v36, 0, (uint64_t)"CoreML.Specification.V5.Function.AttributesEntry.key");
LABEL_62:
          BOOL v37 = v32;
          if (v32) {
            int v24 = 0;
          }
          else {
            int v24 = 6;
          }
LABEL_65:
          if (v44) {
            (*(void (**)(uint64_t))(*(void *)v44 + 8))(v44);
          }
          if (SHIBYTE(v43) < 0) {
            operator delete(__p);
          }
          if (!v37) {
            goto LABEL_33;
          }
          goto LABEL_32;
        default:
          break;
      }
    }
LABEL_27:
    if (!v12 || (v12 & 7) == 4) {
      return 1;
    }
    if (!_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
LABEL_32:
    }
    int v24 = 0;
LABEL_33:
    if (v24) {
      return 0;
    }
  }
}

void sub_223F11D38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Function::SerializeWithCachedSizes(CoreML::Specification::V5::Function *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(*((void *)this + 4) + 8 * i + 8), a2, a4);
  }
  uint64_t result = *((void *)this + 13);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v9 = *(const char **)(result + 8);
    if (!v9) {
      goto LABEL_10;
    }
    uint64_t result = *(void *)result;
    goto LABEL_9;
  }
  uint64_t v9 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_9:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v9, 1, (uint64_t)"CoreML.Specification.V5.Function.opset");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 13), a2);
  }
LABEL_10:
  unint64_t v10 = **((void **)this + 8);
  if (v10)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v10 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_33;
      }
    }
    else if (v10 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_33:
      operator new[]();
    }
    uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 48, v26);
    uint64_t v12 = 0;
    while (v26[0])
    {
      unint64_t v14 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v26[0] + 24), *(void *)(v26[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 5));
      if ((void *)v12 != v14)
      {
        if (v12) {
          (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
        }
        uint64_t v12 = (uint64_t)v14;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, v12, a2, v13);
      __int16 v15 = *(unsigned __int8 **)(v26[0] + 24);
      if ((char)v15[23] < 0)
      {
        __int16 v15 = *(unsigned __int8 **)v15;
        int v16 = *(const char **)(*(void *)(v26[0] + 24) + 8);
      }
      else
      {
        int v16 = (const char *)v15[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v15, v16, 1, (uint64_t)"CoreML.Specification.V5.Function.BlockSpecializationsEntry.key");
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v26);
    }
    if (v12) {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
  }
  unint64_t v18 = **((void **)this + 12);
  if (v18)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v18 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_57;
      }
    }
    else if (v18 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_57:
      operator new[]();
    }
    uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 80, v26);
    uint64_t v20 = 0;
    while (v26[0])
    {
      int v22 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v26[0] + 24), *(void *)(v26[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 9));
      if ((void *)v20 != v22)
      {
        if (v20) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
        uint64_t v20 = (uint64_t)v22;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v20, a2, v21);
      int v23 = *(unsigned __int8 **)(v26[0] + 24);
      if ((char)v23[23] < 0)
      {
        int v23 = *(unsigned __int8 **)v23;
        int v24 = *(const char **)(*(void *)(v26[0] + 24) + 8);
      }
      else
      {
        int v24 = (const char *)v23[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v23, v24, 1, (uint64_t)"CoreML.Specification.V5.Function.AttributesEntry.key");
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v26);
    }
    if (v20) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
  }
  return result;
}

void sub_223F1233C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614F80](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Function::ByteSizeLong(CoreML::Specification::V5::Function *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::V5::NamedValueType::ByteSizeLong(*(CoreML::Specification::V5::NamedValueType **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = **((unsigned int **)this + 8);
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 48, v20);
  unint64_t v7 = 0;
  uint64_t v8 = v6 + v4;
  while (v20[0])
  {
    uint64_t v9 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v20[0] + 24), *(void *)(v20[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 5));
    if (v7 != (_DWORD *)v9)
    {
      if (v7) {
        (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
      }
      unint64_t v7 = v9;
    }
    uint64_t v10 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v7);
    v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v20);
  }
  if (v7) {
    (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
  }
  uint64_t v11 = **((unsigned int **)this + 12);
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 80, v20);
  uint64_t v12 = 0;
  uint64_t v13 = v11 + v8;
  while (v20[0])
  {
    unint64_t v14 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v20[0] + 24), *(void *)(v20[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 9));
    if (v12 != (_DWORD *)v14)
    {
      if (v12) {
        (*(void (**)(_DWORD *))(*(void *)v12 + 8))(v12);
      }
      uint64_t v12 = v14;
    }
    uint64_t v15 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v12);
    v13 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v20);
  }
  if (v12) {
    (*(void (**)(_DWORD *))(*(void *)v12 + 8))(v12);
  }
  uint64_t v16 = *((void *)this + 13);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  if (*(char *)(v16 + 23) < 0)
  {
    if (!*(void *)(v16 + 8)) {
      goto LABEL_29;
    }
  }
  else if (!*(unsigned char *)(v16 + 23))
  {
    goto LABEL_29;
  }
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v13 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_29:
  *((_DWORD *)this + 28) = v13;
  return v13;
}

void sub_223F12648(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *CoreML::Specification::V5::Function::MergeFrom(CoreML::Specification::V5::Function *this, const CoreML::Specification::V5::Function *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::V5::NamedValueType **)(*((void *)a2 + 4) + 8);
    unint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::V5::Function *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::NamedValueType>::TypeHandler>((std::string *)((char *)this + 16), (std::string **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v8;
    uint64_t v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 40, (uint64_t)a2 + 40);
  uint64_t result = (std::string *)_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 72, (uint64_t)a2 + 72);
  uint64_t v11 = *((void *)a2 + 13);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    return result;
  }
  uint64_t result = (std::string *)*((void *)this + 13);
  if (result != (std::string *)v11)
  {
    if (result == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string)
    {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    return std::string::operator=(result, (const std::string *)v11);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Function::IsInitialized(CoreML::Specification::V5::Function *this)
{
  return 1;
}

void *CoreML::Specification::V5::Function::InternalSwap(CoreML::Specification::V5::Function *this, CoreML::Specification::V5::Function *a2)
{
  uint64_t v4 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v4;
  LODWORD(v4) = *((_DWORD *)this + 6);
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v4;
  LODWORD(v4) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v4;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::swap((void *)this + 6, (uint64_t)a2 + 48);
  uint64_t result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::swap((void *)this + 10, (uint64_t)a2 + 80);
  uint64_t v6 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v6;
  LODWORD(vboost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v6;
  return result;
}

void *CoreML::Specification::V5::Function::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Function");
}

CoreML::Specification::V5::Block *CoreML::Specification::V5::Block::Block(CoreML::Specification::V5::Block *this)
{
  *(void *)this = &unk_26D75A490;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 5boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_DWORD *)this + 2boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  int v2 = (CoreML::Specification::V5::protobuf_MIL_2eproto *)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Init((uint64_t)this + 96);
  *((_DWORD *)this + 2boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  if (this != (CoreML::Specification::V5::Block *)&CoreML::Specification::V5::_Block_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(v2);
  }
  *((_DWORD *)this + 3CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  return this;
}

void sub_223F12910(_Unwind_Exception *a1)
{
  unsigned int v5 = v4;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v5);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)(v2 + 64));
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)(v2 + 16));
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::Block::~Block(CoreML::Specification::V5::Block *this)
{
  *(void *)this = &unk_26D75A490;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map((void *)this + 12);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 8);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 5);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Block::~Block(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::Block::New(CoreML::Specification::V5::Block *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F12A5C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Block>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Block>);
  }
  return result;
}

double CoreML::Specification::V5::Block::Clear(CoreML::Specification::V5::Block *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (CoreML::Specification::V5::NamedValueType **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::V5::NamedValueType::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  }
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Clear<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  uint64_t v5 = *((unsigned int *)this + 18);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (CoreML::Specification::V5::Operation **)(*((void *)this + 10) + 8);
    do
    {
      unint64_t v7 = *v6++;
      CoreML::Specification::V5::Operation::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 18) = 0;
  }
  return _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::clear((uint64_t)this + 96);
}

uint64_t CoreML::Specification::V5::Block::MergePartialFromCodedStream(CoreML::Specification::V5::Block *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 88;
  uint64_t v6 = (char *)this + 96;
  unint64_t v7 = (char *)this + 64;
  signed int v8 = (unsigned int *)((char *)this + 40);
  uint64_t v9 = (char *)this + 16;
  while (1)
  {
    uint64_t v10 = *a2;
    if (*a2 >= a2[1]) {
      break;
    }
    uint64_t v11 = *v10;
    if (*v10 < 1) {
      goto LABEL_7;
    }
    *a2 = v10 + 1;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_25:
    if (v12) {
      BOOL v26 = (v12 & 7) == 4;
    }
    else {
      BOOL v26 = 1;
    }
    if (v26) {
      return 1;
    }
    if (!_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v12, a3))goto LABEL_74; {
LABEL_30:
    }
    int v27 = 0;
LABEL_31:
    if (v27) {
      goto LABEL_74;
    }
  }
  uint64_t v11 = 0;
LABEL_7:
  unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v11);
  unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v12 & 0x100000000) == 0) {
    goto LABEL_25;
  }
LABEL_8:
  switch(v12 >> 3)
  {
    case 1u:
      if (v12 != 10) {
        goto LABEL_25;
      }
      unint64_t v14 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::NamedValueType>::TypeHandler>((uint64_t)v9);
      uint64_t v15 = *a2;
      if (*a2 >= a2[1] || *v15 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_74;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v15;
        *a2 = v15 + 1;
      }
      unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v28 & 0x8000000000000000) != 0) {
        goto LABEL_74;
      }
      int v30 = v28;
      if (!CoreML::Specification::V5::NamedValueType::MergePartialFromCodedStream(v14, a2, v29)) {
        goto LABEL_74;
      }
      goto LABEL_40;
    case 2u:
      if (v12 != 18) {
        goto LABEL_25;
      }
      uint64_t v17 = (int *)*((void *)this + 7);
      if (!v17)
      {
        int v19 = *((_DWORD *)this + 13);
LABEL_63:
        _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v19 + 1);
        uint64_t v17 = (int *)*((void *)this + 7);
        int v19 = *v17;
        goto LABEL_64;
      }
      uint64_t v18 = *((int *)this + 12);
      int v19 = *v17;
      if ((int)v18 < *v17)
      {
        *((_DWORD *)this + 12) = v18 + 1;
        Aligned = *(std::string **)&v17[2 * v18 + 2];
        goto LABEL_67;
      }
      if (v19 == *((_DWORD *)this + 13)) {
        goto LABEL_63;
      }
LABEL_64:
      *uint64_t v17 = v19 + 1;
      uint64_t v39 = *(_tc_google::protobuf::Arena **)v8;
      if (!*(void *)v8) {
        operator new();
      }
      Aligned->__r_.__value_.__l.__size_ = 0;
      Aligned->__r_.__value_.__r.__words[2] = 0;
      Aligned->__r_.__value_.__r.__words[0] = 0;
      _tc_google::protobuf::Arena::AddListNode(v39, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<std::string>);
      uint64_t v40 = *((void *)this + 7);
      uint64_t v41 = *((int *)this + 12);
      *((_DWORD *)this + 12) = v41 + 1;
      *(void *)(v40 + 8 * v41 + 8) = Aligned;
LABEL_67:
      if (_tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, Aligned))
      {
        uint64_t v42 = *((void *)this + 7);
        uint64_t v43 = *(unsigned __int8 **)(v42 + 8 * *((int *)this + 12));
        if ((char)v43[23] < 0)
        {
          uint64_t v43 = *(unsigned __int8 **)v43;
          uint64_t v44 = *(const char **)(*(void *)(v42 + 8 * *((int *)this + 12)) + 8);
        }
        else
        {
          uint64_t v44 = (const char *)v43[23];
        }
        if (_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v43, v44, 0, (uint64_t)"CoreML.Specification.V5.Block.outputs"))
        {
          goto LABEL_30;
        }
      }
LABEL_74:
      uint64_t result = 0;
      break;
    case 3u:
      if (v12 != 26) {
        goto LABEL_25;
      }
      int v21 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Operation>::TypeHandler>((uint64_t)v7);
      int v22 = *a2;
      if (*a2 >= a2[1] || *v22 < 0)
      {
        int v23 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (v23 < 0) {
          goto LABEL_74;
        }
      }
      else
      {
        int v23 = *v22;
        *a2 = v22 + 1;
      }
      unint64_t v31 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v23);
      if ((v31 & 0x8000000000000000) != 0) {
        goto LABEL_74;
      }
      int v30 = v31;
      if (!CoreML::Specification::V5::Operation::MergePartialFromCodedStream(v21, a2, v32)) {
        goto LABEL_74;
      }
LABEL_40:
      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v30))goto LABEL_74; {
      goto LABEL_30;
      }
    case 4u:
      if (v12 != 34) {
        goto LABEL_25;
      }
      v46[0] = v5;
      v46[1] = v6;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      std::string __p = 0;
      uint64_t v50 = 0;
      int v24 = *a2;
      if (*a2 >= a2[1] || *v24 < 0)
      {
        int v25 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (v25 < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int v25 = *v24;
        *a2 = v24 + 1;
      }
      unint64_t v33 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v25);
      int v34 = v33;
      if ((v33 & 0x8000000000000000) != 0
        || !_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::MergePartialFromCodedStream((uint64_t)v46, (uint64_t)a2)|| !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v34))
      {
LABEL_73:
        BOOL v38 = 0;
        int v27 = 6;
        goto LABEL_55;
      }
      if (v49 >= 0) {
        p_p = (_tc_google::protobuf::internal *)&__p;
      }
      else {
        p_p = (_tc_google::protobuf::internal *)__p;
      }
      if (v49 >= 0) {
        unint64_t v36 = HIBYTE(v49);
      }
      else {
        unint64_t v36 = v48;
      }
      BOOL v37 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, (const char *)v36, 0, (uint64_t)"CoreML.Specification.V5.Block.AttributesEntry.key");
      BOOL v38 = v37;
      if (v37) {
        int v27 = 0;
      }
      else {
        int v27 = 6;
      }
LABEL_55:
      if (v50) {
        (*(void (**)(uint64_t))(*(void *)v50 + 8))(v50);
      }
      if (SHIBYTE(v49) < 0) {
        operator delete(__p);
      }
      if (!v38) {
        goto LABEL_31;
      }
      goto LABEL_30;
    default:
      goto LABEL_25;
  }
  return result;
}

void sub_223F12F90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Block::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  uint64_t v8 = *(unsigned int *)(v5 + 48);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = -v8;
    uint64_t v10 = 1;
    do
    {
      uint64_t v11 = *(unsigned __int8 **)(*(void *)(v5 + 56) + 8 * v10);
      if ((char)v11[23] < 0)
      {
        uint64_t v11 = *(unsigned __int8 **)v11;
        unint64_t v12 = *(const char **)(*(void *)(*(void *)(v5 + 56) + 8 * v10) + 8);
      }
      else
      {
        unint64_t v12 = (const char *)v11[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v11, v12, 1, (uint64_t)"CoreML.Specification.V5.Block.outputs");
      this = _tc_google::protobuf::internal::WireFormatLite::WriteString(2, *(void *)(*(void *)(v5 + 56) + 8 * v10++), a2);
    }
    while (v9 + v10 != 1);
  }
  int v13 = *(_DWORD *)(v5 + 72);
  if (v13)
  {
    for (int j = 0; j != v13; ++j)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 80) + 8 * j + 8), a2, a4);
  }
  unint64_t v15 = **(void **)(v5 + 112);
  if (v15)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v15 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_36;
      }
    }
    else if (v15 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_36:
      operator new[]();
    }
    this = _tc_google::protobuf::Map<std::string,std::string>::begin(v5 + 96, v23);
    uint64_t v17 = 0;
    while (v23[0])
    {
      int v19 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v23[0] + 24), *(void *)(v23[0] + 24) + 24, *(_tc_google::protobuf::Arena **)(v5 + 88));
      if ((void *)v17 != v19)
      {
        if (v17) {
          (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
        }
        uint64_t v17 = (uint64_t)v19;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v17, a2, v18);
      uint64_t v20 = *(unsigned __int8 **)(v23[0] + 24);
      if ((char)v20[23] < 0)
      {
        uint64_t v20 = *(unsigned __int8 **)v20;
        int v21 = *(const char **)(*(void *)(v23[0] + 24) + 8);
      }
      else
      {
        int v21 = (const char *)v20[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v20, v21, 1, (uint64_t)"CoreML.Specification.V5.Block.AttributesEntry.key");
      this = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v23);
    }
    if (v17) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
  }
  return this;
}

void sub_223F1334C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614F80](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Block::ByteSizeLong(CoreML::Specification::V5::Block *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::V5::NamedValueType::ByteSizeLong(*(CoreML::Specification::V5::NamedValueType **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if ((int)v6 >= 1)
  {
    uint64_t v8 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v9 = *v8++;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      --v6;
    }
    while (v6);
  }
  uint64_t v12 = *((unsigned int *)this + 18);
  uint64_t v13 = v7 + v12;
  if (v12)
  {
    int v14 = 0;
    do
    {
      uint64_t v15 = CoreML::Specification::V5::Operation::ByteSizeLong(*(_tc_google::protobuf::Arena ***)(*((void *)this + 10)
                                                                                                + 8 * v14
                                                                                                + 8));
      v13 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      ++v14;
    }
    while (v12 != v14);
  }
  uint64_t v16 = **((unsigned int **)this + 14);
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 96, v22);
  uint64_t v17 = 0;
  uint64_t v18 = v16 + v13;
  while (v22[0])
  {
    int v19 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v22[0] + 24), *(void *)(v22[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 11));
    if (v17 != (_DWORD *)v19)
    {
      if (v17) {
        (*(void (**)(_DWORD *))(*(void *)v17 + 8))(v17);
      }
      uint64_t v17 = v19;
    }
    uint64_t v20 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v17);
    v18 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v22);
  }
  if (v17) {
    (*(void (**)(_DWORD *))(*(void *)v17 + 8))(v17);
  }
  *((_DWORD *)this + 3CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v18;
  return v18;
}

void sub_223F135A0(_Unwind_Exception *exception_object)
{
  if (v1) {
    CoreML::Specification::V5::Program::SerializeWithCachedSizes();
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::V5::Block::MergeFrom(CoreML::Specification::V5::Block *this, const CoreML::Specification::V5::Block *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::V5::NamedValueType **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::V5::Block *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::NamedValueType>::TypeHandler>((std::string *)((char *)this + 16), (std::string **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v8;
    uint64_t v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    uint64_t v11 = (const std::string **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::V5::Block *)((char *)this + 40), *((_DWORD *)a2 + 12));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)((char *)this + 40), (std::string **)v12, v11, v10, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v13 = *((_DWORD *)this + 12) + v10;
    *((_DWORD *)this + 12) = v13;
    int v14 = (signed int *)*((void *)this + 7);
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  unsigned int v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    uint64_t v16 = (CoreML::Specification::V5::Operation **)(*((void *)a2 + 10) + 8);
    uint64_t v17 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::V5::Block *)((char *)this + 64), *((_DWORD *)a2 + 18));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Operation>::TypeHandler>((std::string *)((char *)this + 64), (std::string **)v17, v16, v15, **((_DWORD **)this + 10) - *((_DWORD *)this + 18));
    signed int v18 = *((_DWORD *)this + 18) + v15;
    *((_DWORD *)this + 18) = v18;
    int v19 = (signed int *)*((void *)this + 10);
    if (*v19 < v18) {
      *int v19 = v18;
    }
  }
  return _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 88, (uint64_t)a2 + 88);
}

uint64_t CoreML::Specification::V5::Block::IsInitialized(CoreML::Specification::V5::Block *this)
{
  return 1;
}

void *CoreML::Specification::V5::Block::InternalSwap(CoreML::Specification::V5::Block *this, CoreML::Specification::V5::Block *a2)
{
  uint64_t v4 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v4;
  LODWORD(v4) = *((_DWORD *)this + 6);
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v4;
  LODWORD(v4) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v4;
  uint64_t v5 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v5;
  LODWORD(v5) = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v5;
  LODWORD(v5) = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v5;
  uint64_t v6 = *((void *)this + 10);
  *((void *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v6;
  LODWORD(vboost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v6;
  LODWORD(vboost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v6;
  uint64_t result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::swap((void *)this + 12, (uint64_t)a2 + 96);
  int v8 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 3CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 3CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v8;
  return result;
}

void *CoreML::Specification::V5::Block::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Block");
}

CoreML::Specification::V5::Argument_Binding *CoreML::Specification::V5::Argument_Binding::Argument_Binding(CoreML::Specification::V5::Argument_Binding *this)
{
  *(void *)this = &unk_26D75A528;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::Argument_Binding *)&CoreML::Specification::V5::_Argument_Binding_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F13890(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::V5::Value::MergeFrom(std::string *this, const CoreML::Specification::V5::Value *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)(v3 + 16);
  uint64_t v6 = *(uint64_t **)(v3 + 16);
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 16), (const std::string *)v5);
  }
LABEL_11:
  if (a2 != (const CoreML::Specification::V5::Value *)&CoreML::Specification::V5::_Value_default_instance_
    && *((void *)a2 + 3))
  {
    uint64_t v7 = *(void *)(v3 + 24);
    if (!v7) {
      operator new();
    }
    this = (std::string *)CoreML::Specification::V5::ValueType::MergeFrom(v7, *((const CoreML::Specification::V5::ValueType **)a2 + 3));
  }
  int v8 = *((_DWORD *)a2 + 11);
  switch(v8)
  {
    case 5:
      if (*(_DWORD *)(v3 + 44) != 5)
      {
        CoreML::Specification::V5::Value::clear_value(v3);
        *(_DWORD *)(v3 + 44) = 5;
        operator new();
      }
      uint64_t v9 = (const CoreML::Specification::V5::Value_FileValue *)*((void *)a2 + 4);
      uint64_t v11 = *(std::string **)(v3 + 32);
      return CoreML::Specification::V5::Value_FileValue::MergeFrom(v11, v9);
    case 4:
      if (*(_DWORD *)(v3 + 44) != 4)
      {
        CoreML::Specification::V5::Value::clear_value(v3);
        *(_DWORD *)(v3 + 44) = 4;
        operator new();
      }
      uint64_t v9 = (const CoreML::Specification::V5::Value_FileValue *)*((void *)a2 + 4);
      uint64_t v11 = *(std::string **)(v3 + 32);
      return CoreML::Specification::V5::Value_FileValue::MergeFrom(v11, v9);
    case 3:
      if (*(_DWORD *)(v3 + 44) != 3)
      {
        CoreML::Specification::V5::Value::clear_value(v3);
        *(_DWORD *)(v3 + 44) = 3;
        operator new();
      }
      unsigned int v10 = (const CoreML::Specification::V5::Value_ImmediateValue *)*((void *)a2 + 4);
      uint64_t v12 = *(void *)(v3 + 32);
      return (std::string *)CoreML::Specification::V5::Value_ImmediateValue::MergeFrom(v12, v10);
  }
  return this;
}

void sub_223F13B54(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::Argument_Binding::~Argument_Binding(CoreML::Specification::V5::Argument_Binding *this)
{
  *(void *)this = &unk_26D75A528;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::V5::Argument_Binding::clear_binding((uint64_t)this);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Argument_Binding::~Argument_Binding(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::V5::Argument_Binding::clear_binding(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 2)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  else if (v2 == 1)
  {
    uint64_t v3 = *(void *)(this + 16);
    if ((uint64_t *)v3 != &_tc_google::protobuf::internal::fixed_address_empty_string && v3 != 0)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      this = MEMORY[0x22A614FA0](v3, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void CoreML::Specification::V5::Argument_Binding::New(CoreML::Specification::V5::Argument_Binding *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F13D28(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Argument_Binding>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Argument_Binding>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Argument_Binding::MergePartialFromCodedStream(CoreML::Specification::V5::Argument_Binding *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 18) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::V5::Argument_Binding::clear_binding((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        uint64_t v11 = *v5;
        signed int v18 = *a2;
        if (*a2 >= a2[1] || *v18 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v18;
          *a2 = v18 + 1;
        }
        unint64_t v20 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((v20 & 0x8000000000000000) == 0)
        {
          int v22 = v20;
          uint64_t result = CoreML::Specification::V5::Value::MergePartialFromCodedStream((CoreML::Specification::V5::Value *)v11, a2, v21);
          if (!result) {
            return result;
          }
          if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v22))
          {
            continue;
          }
        }
        return 0;
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*((_DWORD *)this + 7) != 1)
      {
        CoreML::Specification::V5::Argument_Binding::clear_binding((uint64_t)this);
        *((_DWORD *)this + 7) = 1;
        *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
LABEL_27:
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_27;
      }
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      int v14 = *((_DWORD *)this + 7);
      unsigned int v15 = (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string;
      if (v14 == 1) {
        unsigned int v15 = *v5;
      }
      if (SHIBYTE(v15->__r_.__value_.__r.__words[2]) < 0) {
        unsigned int v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
      }
      uint64_t v16 = (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string;
      if (v14 == 1) {
        uint64_t v16 = *v5;
      }
      if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0) {
        std::string::size_type size = (const char *)v16->__r_.__value_.__l.__size_;
      }
      else {
        std::string::size_type size = (const char *)HIBYTE(v16->__r_.__value_.__r.__words[2]);
      }
      if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v15, size, 0, (uint64_t)"CoreML.Specification.V5.Argument.Binding.name"))return 0; {
    }
      }
LABEL_20:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F13FBC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Argument_Binding::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    uint64_t v7 = *(unsigned __int8 **)(this + 16);
    if ((char)v7[23] < 0)
    {
      uint64_t v7 = *(unsigned __int8 **)v7;
      unint64_t v8 = *(const char **)(*(void *)(v5 + 16) + 8);
    }
    else
    {
      unint64_t v8 = (const char *)v7[23];
    }
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v7, v8, 1, (uint64_t)"CoreML.Specification.V5.Argument.Binding.name");
    if (*(_DWORD *)(v5 + 28) == 1) {
      uint64_t v9 = *(uint64_t **)(v5 + 16);
    }
    else {
      uint64_t v9 = &_tc_google::protobuf::internal::fixed_address_empty_string;
    }
    this = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, (uint64_t)v9, a2);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
  {
    uint64_t v10 = *(void *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::Argument_Binding::ByteSizeLong(CoreML::Specification::V5::Argument_Binding *this)
{
  int v2 = *((_DWORD *)this + 7);
  if (v2 == 2)
  {
    uint64_t v7 = CoreML::Specification::V5::Value::ByteSizeLong(*((CoreML::Specification::V5::Value **)this + 2));
    uint64_t v6 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
  }
  else
  {
    if (v2 != 1)
    {
      uint64_t result = 0;
      goto LABEL_9;
    }
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
  }
  uint64_t result = v6 + 1;
LABEL_9:
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = result;
  return result;
}

std::string *CoreML::Specification::V5::Argument_Binding::MergeFrom(std::string *this, const CoreML::Specification::V5::Argument_Binding *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 != 2)
  {
    if (v5 != 1) {
      return this;
    }
    uint64_t v6 = (const std::string *)*((void *)a2 + 2);
    if (*(_DWORD *)(v3 + 28) == 1)
    {
      uint64_t v7 = *(std::string **)(v3 + 16);
      if (v7 != (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string)
      {
        return std::string::operator=(v7, v6);
      }
    }
    else
    {
      CoreML::Specification::V5::Argument_Binding::clear_binding(v3);
      *(_DWORD *)(v3 + 28) = 1;
      *(void *)(v3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = &_tc_google::protobuf::internal::fixed_address_empty_string;
    }
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  if (*(_DWORD *)(v3 + 28) != 2)
  {
    CoreML::Specification::V5::Argument_Binding::clear_binding(v3);
    *(_DWORD *)(v3 + 28) = 2;
    operator new();
  }
  unint64_t v8 = (const CoreML::Specification::V5::Value *)*((void *)a2 + 2);
  uint64_t v9 = *(std::string **)(v3 + 16);
  return CoreML::Specification::V5::Value::MergeFrom(v9, v8);
}

void sub_223F142A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Argument_Binding::IsInitialized(CoreML::Specification::V5::Argument_Binding *this)
{
  return 1;
}

void *CoreML::Specification::V5::Argument_Binding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Argument.Binding");
}

CoreML::Specification::V5::Argument *CoreML::Specification::V5::Argument::Argument(CoreML::Specification::V5::Argument *this)
{
  *(void *)this = &unk_26D75A5C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::V5::Argument *)&CoreML::Specification::V5::_Argument_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  return this;
}

void sub_223F14354(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::Argument::~Argument(CoreML::Specification::V5::Argument *this)
{
  *(void *)this = &unk_26D75A5C0;
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Argument::~Argument(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::Argument::New(CoreML::Specification::V5::Argument *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F14454(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Argument>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Argument>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Argument::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    uint64_t v3 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::V5::Argument_Binding::clear_binding(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::V5::Argument::MergePartialFromCodedStream(CoreML::Specification::V5::Argument *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Argument_Binding>::TypeHandler>((uint64_t)v4);
      uint64_t v12 = *a2;
      if (*a2 >= a2[1] || *v12 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *a2 = v12 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v16 = v14;
        uint64_t result = CoreML::Specification::V5::Argument_Binding::MergePartialFromCodedStream(v11, a2, v15);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v16))
        {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::Argument::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::Argument::ByteSizeLong(CoreML::Specification::V5::Argument *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::V5::Argument_Binding::ByteSizeLong(*(CoreML::Specification::V5::Argument_Binding **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v4;
  return v4;
}

std::string *CoreML::Specification::V5::Argument::MergeFrom(std::string *this, const CoreML::Specification::V5::Argument *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::V5::Argument_Binding **)(*((void *)a2 + 4) + 8);
    unint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Argument_Binding>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

std::string *CoreML::Specification::V5::Argument::CopyFrom(std::string *this, std::string *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (uint64_t)this;
    uint64_t data_low = LODWORD(this[1].__r_.__value_.__l.__data_);
    if ((int)data_low >= 1)
    {
      uint64_t v6 = (uint64_t *)(this[1].__r_.__value_.__l.__size_ + 8);
      do
      {
        uint64_t v7 = *v6++;
        CoreML::Specification::V5::Argument_Binding::clear_binding(v7);
        --data_low;
      }
      while (data_low);
      *(_DWORD *)(v4 + 24) = 0;
    }
    return CoreML::Specification::V5::Argument::MergeFrom((std::string *)v4, (const CoreML::Specification::V5::Argument *)a2);
  }
  return this;
}

uint64_t CoreML::Specification::V5::Argument::IsInitialized(CoreML::Specification::V5::Argument *this)
{
  return 1;
}

uint64_t CoreML::Specification::V5::Argument::Swap(uint64_t this, CoreML::Specification::V5::Argument *a2)
{
  if (a2 != (CoreML::Specification::V5::Argument *)this)
  {
    uint64_t v2 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 4CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v2;
  }
  return this;
}

void *CoreML::Specification::V5::Argument::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Argument");
}

CoreML::Specification::V5::Operation *CoreML::Specification::V5::Operation::Operation(CoreML::Specification::V5::Operation *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75A658;
  *((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::Init((uint64_t)this + 24);
  *((_OWORD *)this + 3) = 0u;
  *((_DWORD *)this + 8) = 0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0u;
  *((_DWORD *)this + 28) = 0;
  uint64_t v2 = (CoreML::Specification::V5::protobuf_MIL_2eproto *)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Init((uint64_t)this + 104);
  *((_DWORD *)this + 28) = 0;
  if (this != (CoreML::Specification::V5::Operation *)&CoreML::Specification::V5::_Operation_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(v2);
  }
  *((void *)this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 34) = 0;
  return this;
}

void sub_223F1493C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v4);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v3 + 3);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v3);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::~Map(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom(uint64_t a1, uint64_t a2)
{
  uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin(a2 + 8, v9);
  uint64_t v4 = v9[0];
  if (v9[0])
  {
    uint64_t v5 = a1 + 8;
    do
    {
      uint64_t v6 = *(const std::string **)(v4 + 24);
      uint64_t v7 = (std::string *)&v6[1];
      signed int v8 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::operator[](v5, v6);
      CoreML::Specification::V5::Argument::CopyFrom(v8, v7);
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v9);
      uint64_t v4 = v9[0];
    }
    while (v9[0]);
  }
  return result;
}

void CoreML::Specification::V5::Operation::~Operation(CoreML::Specification::V5::Operation *this)
{
  *(void *)this = &unk_26D75A658;
  uint64_t v2 = (void *)((char *)this + 104);
  CoreML::Specification::V5::Operation::SharedDtor((uint64_t)this);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v2);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 9);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 6);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::~Map((void *)this + 3);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Operation::~Operation(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::V5::Operation::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 128);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A614FA0);
  }
  return this;
}

void CoreML::Specification::V5::Operation::New(CoreML::Specification::V5::Operation *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F14B6C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40B3FB24A3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Operation>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Operation>);
  }
  return result;
}

void CoreML::Specification::V5::Operation::Clear(CoreML::Specification::V5::Operation *this)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::clear((uint64_t)this + 24);
  uint64_t v2 = *((unsigned int *)this + 14);
  if ((int)v2 >= 1)
  {
    int v3 = (CoreML::Specification::V5::NamedValueType **)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::V5::NamedValueType::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 20);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (CoreML::Specification::V5::Block **)(*((void *)this + 11) + 8);
    do
    {
      uint64_t v7 = *v6++;
      CoreML::Specification::V5::Block::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 2CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::clear((uint64_t)this + 104);
  uint64_t v8 = *((void *)this + 16);
  if ((uint64_t *)v8 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)uint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
}

uint64_t CoreML::Specification::V5::Operation::MergePartialFromCodedStream(CoreML::Specification::V5::Operation *this, char **a2, unsigned int a3)
{
  uint64_t v43 = (char *)this + 96;
  uint64_t v4 = (char *)this + 104;
  uint64_t v5 = (char *)this + 72;
  uint64_t v6 = (char *)this + 48;
  uint64_t v7 = (char *)this + 16;
  uint64_t v8 = (char *)this + 24;
  uint64_t v9 = (std::string **)((char *)this + 128);
  while (1)
  {
    uint64_t v10 = *a2;
    if (*a2 >= a2[1])
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = *v10;
      if (*v10 >= 1)
      {
        *a2 = v10 + 1;
        unint64_t v12 = v11 | 0x100000000;
        if ((v12 & 0x100000000) != 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v11);
    unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v12 & 0x100000000) != 0)
    {
LABEL_8:
      switch(v12 >> 3)
      {
        case 1u:
          if (v12 != 10) {
            break;
          }
          if (*v9 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
            _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v9)) {
            return 0;
          }
          unint64_t v14 = *v9;
          if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
          {
            unint64_t v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
            std::string::size_type size = (const char *)(*v9)->__r_.__value_.__l.__size_;
          }
          else
          {
            std::string::size_type size = (const char *)HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
          }
          if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v14, size, 0, (uint64_t)"CoreML.Specification.V5.Operation.type"))return 0; {
          goto LABEL_36;
          }
        case 2u:
          if (v12 != 18) {
            break;
          }
          uint64_t v44 = v7;
          double v45 = v8;
          uint64_t v47 = 0;
          uint64_t v48 = 0;
          std::string __p = 0;
          uint64_t v49 = 0;
          int v16 = *a2;
          if (*a2 >= a2[1] || *v16 < 0)
          {
            int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (VarintSizeAsIntFallback < 0) {
              goto LABEL_82;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v16;
            *a2 = v16 + 1;
          }
          unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
          int v29 = v28;
          if ((v28 & 0x8000000000000000) != 0
            || !_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>>::MergePartialFromCodedStream((uint64_t)&v44, (uint64_t)a2)|| !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v29))
          {
            goto LABEL_82;
          }
          if (v48 >= 0) {
            p_p = (_tc_google::protobuf::internal *)&__p;
          }
          else {
            p_p = (_tc_google::protobuf::internal *)__p;
          }
          if (v48 >= 0) {
            unint64_t v31 = HIBYTE(v48);
          }
          else {
            unint64_t v31 = v47;
          }
          BOOL v32 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, (const char *)v31, 0, (uint64_t)"CoreML.Specification.V5.Operation.InputsEntry.key");
          goto LABEL_70;
        case 3u:
          if (v12 != 26) {
            break;
          }
          signed int v18 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::NamedValueType>::TypeHandler>((uint64_t)v6);
          int v19 = *a2;
          if (*a2 >= a2[1] || *v19 < 0)
          {
            int v20 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v20 < 0) {
              return 0;
            }
          }
          else
          {
            int v20 = *v19;
            *a2 = v19 + 1;
          }
          unint64_t v33 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v20);
          if ((v33 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v35 = v33;
          if (!CoreML::Specification::V5::NamedValueType::MergePartialFromCodedStream(v18, a2, v34)) {
            return 0;
          }
          goto LABEL_57;
        case 4u:
          if (v12 != 34) {
            break;
          }
          unsigned int v21 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Block>::TypeHandler>((uint64_t)v5);
          int v22 = *a2;
          if (*a2 >= a2[1] || *v22 < 0)
          {
            int v23 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v23 < 0) {
              return 0;
            }
          }
          else
          {
            int v23 = *v22;
            *a2 = v22 + 1;
          }
          unint64_t v36 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v23);
          if ((v36 & 0x8000000000000000) != 0) {
            return 0;
          }
          int v35 = v36;
          if (!CoreML::Specification::V5::Block::MergePartialFromCodedStream(v21, (_tc_google::protobuf::io::CodedInputStream *)a2))return 0; {
LABEL_57:
          }
          if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v35))
          {
            goto LABEL_36;
          }
          return 0;
        case 5u:
          if (v12 != 42) {
            break;
          }
          uint64_t v44 = v43;
          double v45 = v4;
          uint64_t v47 = 0;
          uint64_t v48 = 0;
          std::string __p = 0;
          uint64_t v49 = 0;
          int v24 = *a2;
          if (*a2 >= a2[1] || *v24 < 0)
          {
            int v25 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
            if (v25 < 0) {
              goto LABEL_82;
            }
          }
          else
          {
            int v25 = *v24;
            *a2 = v24 + 1;
          }
          unint64_t v37 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v25);
          int v38 = v37;
          if ((v37 & 0x8000000000000000) != 0
            || !_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::MergePartialFromCodedStream((uint64_t)&v44, (uint64_t)a2)|| !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v38))
          {
LABEL_82:
            BOOL v41 = 0;
            int v27 = 6;
            goto LABEL_73;
          }
          if (v48 >= 0) {
            uint64_t v39 = (_tc_google::protobuf::internal *)&__p;
          }
          else {
            uint64_t v39 = (_tc_google::protobuf::internal *)__p;
          }
          if (v48 >= 0) {
            unint64_t v40 = HIBYTE(v48);
          }
          else {
            unint64_t v40 = v47;
          }
          BOOL v32 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(v39, (const char *)v40, 0, (uint64_t)"CoreML.Specification.V5.Operation.AttributesEntry.key");
LABEL_70:
          BOOL v41 = v32;
          if (v32) {
            int v27 = 0;
          }
          else {
            int v27 = 6;
          }
LABEL_73:
          if (v49) {
            (*(void (**)(uint64_t))(*(void *)v49 + 8))(v49);
          }
          if (SHIBYTE(v48) < 0) {
            operator delete(__p);
          }
          if (!v41) {
            goto LABEL_37;
          }
          goto LABEL_36;
        default:
          break;
      }
    }
LABEL_31:
    if (!v12 || (v12 & 7) == 4) {
      return 1;
    }
    if (!_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
LABEL_36:
    }
    int v27 = 0;
LABEL_37:
    if (v27) {
      return 0;
    }
  }
}

void sub_223F150C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Operation::SerializeWithCachedSizes(CoreML::Specification::V5::Operation *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 16);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(const char **)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  uint64_t v7 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v7, 1, (uint64_t)"CoreML.Specification.V5.Operation.type");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 16), a2);
  }
LABEL_7:
  unint64_t v8 = **((void **)this + 5);
  if (v8)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v8 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_30;
      }
    }
    else if (v8 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_30:
      operator new[]();
    }
    uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 24, v28);
    uint64_t v10 = 0;
    while (v28[0])
    {
      unint64_t v12 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v28[0] + 24), *(void *)(v28[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 2));
      if ((void *)v10 != v12)
      {
        if (v10) {
          (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
        }
        uint64_t v10 = (uint64_t)v12;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v10, a2, v11);
      signed int v13 = *(unsigned __int8 **)(v28[0] + 24);
      if ((char)v13[23] < 0)
      {
        signed int v13 = *(unsigned __int8 **)v13;
        unint64_t v14 = *(const char **)(*(void *)(v28[0] + 24) + 8);
      }
      else
      {
        unint64_t v14 = (const char *)v13[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v13, v14, 1, (uint64_t)"CoreML.Specification.V5.Operation.InputsEntry.key");
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v28);
    }
    if (v10) {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
  }
  int v16 = *((_DWORD *)this + 14);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, *(void *)(*((void *)this + 8) + 8 * i + 8), a2, a4);
  }
  int v18 = *((_DWORD *)this + 20);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, *(void *)(*((void *)this + 11) + 8 * j + 8), a2, a4);
  }
  unint64_t v20 = **((void **)this + 15);
  if (v20)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v20 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_60;
      }
    }
    else if (v20 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_60:
      operator new[]();
    }
    uint64_t result = _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 104, v28);
    uint64_t v22 = 0;
    while (v28[0])
    {
      int v24 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v28[0] + 24), *(void *)(v28[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 12));
      if ((void *)v22 != v24)
      {
        if (v22) {
          (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
        }
        uint64_t v22 = (uint64_t)v24;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)5, v22, a2, v23);
      int v25 = *(unsigned __int8 **)(v28[0] + 24);
      if ((char)v25[23] < 0)
      {
        int v25 = *(unsigned __int8 **)v25;
        BOOL v26 = *(const char **)(*(void *)(v28[0] + 24) + 8);
      }
      else
      {
        BOOL v26 = (const char *)v25[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v25, v26, 1, (uint64_t)"CoreML.Specification.V5.Operation.AttributesEntry.key");
      uint64_t result = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v28);
    }
    if (v22) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
  }
  return result;
}

void sub_223F156F8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614F80](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Operation::ByteSizeLong(_tc_google::protobuf::Arena **this)
{
  uint64_t v2 = *(unsigned int *)this[5];
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)(this + 3), v23);
  int v3 = 0;
  while (v23[0])
  {
    uint64_t v4 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v23[0] + 24), *(void *)(v23[0] + 24) + 24, this[2]);
    if (v3 != (_DWORD *)v4)
    {
      if (v3) {
        (*(void (**)(_DWORD *))(*(void *)v3 + 8))(v3);
      }
      int v3 = v4;
    }
    uint64_t v5 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v3);
    v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v23);
  }
  if (v3) {
    (*(void (**)(_DWORD *))(*(void *)v3 + 8))(v3);
  }
  uint64_t v6 = *((unsigned int *)this + 14);
  uint64_t v7 = v2 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::V5::NamedValueType::ByteSizeLong(*((CoreML::Specification::V5::NamedValueType **)this[8]
                                                                   + v8
                                                                   + 1));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  uint64_t v10 = *((unsigned int *)this + 20);
  uint64_t v11 = v7 + v10;
  if (v10)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = CoreML::Specification::V5::Block::ByteSizeLong(*((CoreML::Specification::V5::Block **)this[11] + v12 + 1));
      v11 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      ++v12;
    }
    while (v10 != v12);
  }
  uint64_t v14 = *(unsigned int *)this[15];
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)(this + 13), v23);
  unsigned int v15 = 0;
  uint64_t v16 = v14 + v11;
  while (v23[0])
  {
    uint64_t v17 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v23[0] + 24), *(void *)(v23[0] + 24) + 24, this[12]);
    if (v15 != (_DWORD *)v17)
    {
      if (v15) {
        (*(void (**)(_DWORD *))(*(void *)v15 + 8))(v15);
      }
      unsigned int v15 = v17;
    }
    uint64_t v18 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v15);
    v16 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v23);
  }
  if (v15) {
    (*(void (**)(_DWORD *))(*(void *)v15 + 8))(v15);
  }
  int v19 = this[16];
  uint64_t v20 = *((unsigned __int8 *)v19 + 23);
  if (*((char *)v19 + 23) < 0)
  {
    if (!*((void *)v19 + 1)) {
      goto LABEL_30;
    }
  }
  else if (!*((unsigned char *)v19 + 23))
  {
    goto LABEL_30;
  }
  uint64_t v21 = *((void *)v19 + 1);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_30:
  *((_DWORD *)this + 34) = v16;
  return v16;
}

void sub_223F15A44(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *CoreML::Specification::V5::Operation::MergeFrom(std::string *this, const CoreML::Specification::V5::Operation *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)&this->__r_.__value_.__r.__words[2], (uint64_t)a2 + 16);
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::V5::NamedValueType **)(*((void *)a2 + 8) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&this[2], *((_DWORD *)a2 + 14));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::NamedValueType>::TypeHandler>(this + 2, (std::string **)v7, v6, v5, *(_DWORD *)this[2].__r_.__value_.__r.__words[2] - LODWORD(this[2].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(this[2].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(this[2].__r_.__value_.__r.__words[1]) = v8;
    uint64_t v9 = (signed int *)this[2].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 20);
  if (v10)
  {
    uint64_t v11 = (CoreML::Specification::V5::Block **)(*((void *)a2 + 11) + 8);
    int v12 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&this[3], *((_DWORD *)a2 + 20));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Block>::TypeHandler>((uint64_t)&this[3], (CoreML::Specification::V5::Block **)v12, v11, v10, *(_DWORD *)this[3].__r_.__value_.__r.__words[2] - LODWORD(this[3].__r_.__value_.__r.__words[1]));
    signed int v13 = LODWORD(this[3].__r_.__value_.__r.__words[1]) + v10;
    LODWORD(this[3].__r_.__value_.__r.__words[1]) = v13;
    uint64_t v14 = (signed int *)this[3].__r_.__value_.__r.__words[2];
    if (*v14 < v13) {
      *uint64_t v14 = v13;
    }
  }
  uint64_t result = (std::string *)_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)&this[4], (uint64_t)a2 + 96);
  uint64_t v16 = *((void *)a2 + 16);
  if (*(char *)(v16 + 23) < 0)
  {
    if (!*(void *)(v16 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v16 + 23))
  {
    return result;
  }
  uint64_t result = (std::string *)this[5].__r_.__value_.__l.__size_;
  if (result != (std::string *)v16)
  {
    if (result == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string)
    {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    return std::string::operator=(result, (const std::string *)v16);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Operation::IsInitialized(CoreML::Specification::V5::Operation *this)
{
  return 1;
}

void *CoreML::Specification::V5::Operation::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Operation");
}

CoreML::Specification::V5::NamedValueType *CoreML::Specification::V5::NamedValueType::NamedValueType(CoreML::Specification::V5::NamedValueType *this)
{
  *(void *)this = &unk_26D75A6F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::NamedValueType *)&CoreML::Specification::V5::_NamedValueType_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F15CB8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::NamedValueType::~NamedValueType(CoreML::Specification::V5::NamedValueType *this)
{
  *(void *)this = &unk_26D75A6F0;
  CoreML::Specification::V5::NamedValueType::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::NamedValueType::~NamedValueType(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::V5::NamedValueType::SharedDtor(uint64_t *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (uint64_t *)MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
  }
  if (v1 != &CoreML::Specification::V5::_NamedValueType_default_instance_)
  {
    this = (uint64_t *)v1[3];
    if (this)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v4();
    }
  }
  return this;
}

void CoreML::Specification::V5::NamedValueType::New(CoreML::Specification::V5::NamedValueType *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F15E60(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::NamedValueType>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::NamedValueType>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::NamedValueType::Clear(CoreML::Specification::V5::NamedValueType *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t CoreML::Specification::V5::NamedValueType::MergePartialFromCodedStream(CoreML::Specification::V5::NamedValueType *this, char **a2, unsigned int a3)
{
  unsigned int v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_25;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_25;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 18) {
          goto LABEL_25;
        }
        uint64_t v14 = (CoreML::Specification::V5::ValueType *)*((void *)this + 3);
        if (!v14) {
          operator new();
        }
        unsigned int v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v15;
          *a2 = v15 + 1;
        }
        unint64_t v18 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((v18 & 0x8000000000000000) == 0)
        {
          int v20 = v18;
          uint64_t result = CoreML::Specification::V5::ValueType::MergePartialFromCodedStream(v14, a2, v19);
          if (!result) {
            return result;
          }
          if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v20))
          {
            continue;
          }
        }
        return 0;
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      int v12 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (const char *)(*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        std::string::size_type size = (const char *)HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v12, size, 0, (uint64_t)"CoreML.Specification.V5.NamedValueType.name"))return 0; {
    }
      }
LABEL_25:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F16100(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::NamedValueType::SerializeWithCachedSizes(CoreML::Specification::V5::NamedValueType *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if ((*(char *)(result + 23) & 0x80000000) == 0)
  {
    uint64_t v7 = (const char *)*(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v7 = *(const char **)(result + 8);
  if (v7)
  {
    uint64_t result = *(void *)result;
LABEL_6:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v7, 1, (uint64_t)"CoreML.Specification.V5.NamedValueType.name");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 2), a2);
  }
LABEL_7:
  if (this != (CoreML::Specification::V5::NamedValueType *)&CoreML::Specification::V5::_NamedValueType_default_instance_)
  {
    uint64_t v8 = *((void *)this + 3);
    if (v8)
    {
      return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
    }
  }
  return result;
}

uint64_t CoreML::Specification::V5::NamedValueType::ByteSizeLong(CoreML::Specification::V5::NamedValueType *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if (this != (CoreML::Specification::V5::NamedValueType *)&CoreML::Specification::V5::_NamedValueType_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::V5::TensorType **)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::V5::ValueType::ByteSizeLong(v6);
      v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v5;
  return v5;
}

std::string *CoreML::Specification::V5::NamedValueType::MergeFrom(std::string *this, const CoreML::Specification::V5::NamedValueType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  if (a2 != (const CoreML::Specification::V5::NamedValueType *)&CoreML::Specification::V5::_NamedValueType_default_instance_
    && *((void *)a2 + 3))
  {
    if (!v3[1].__r_.__value_.__r.__words[0]) {
      operator new();
    }
    uint64_t v7 = (const CoreML::Specification::V5::ValueType *)*((void *)a2 + 3);
    uint64_t data = (uint64_t)v3[1].__r_.__value_.__l.__data_;
    return (std::string *)CoreML::Specification::V5::ValueType::MergeFrom(data, v7);
  }
  return this;
}

void sub_223F16398(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::ValueType::MergeFrom(uint64_t this, const CoreML::Specification::V5::ValueType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (uint64_t)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(this + 8), v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        CoreML::Specification::V5::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 1;
        operator new();
      }
      uint64_t v7 = (const CoreML::Specification::V5::TensorType *)*((void *)a2 + 2);
      uint64_t v11 = *(CoreML::Specification::V5::TensorType **)(v3 + 16);
      this = CoreML::Specification::V5::TensorType::MergeFrom(v11, v7);
      break;
    case 2:
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        CoreML::Specification::V5::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 2;
        operator new();
      }
      uint64_t v8 = (const CoreML::Specification::V5::ListType *)*((void *)a2 + 2);
      int v12 = *(std::string **)(v3 + 16);
      this = (uint64_t)CoreML::Specification::V5::ListType::MergeFrom(v12, v8);
      break;
    case 3:
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        CoreML::Specification::V5::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 3;
        operator new();
      }
      uint64_t v5 = (const CoreML::Specification::V5::TupleType *)*((void *)a2 + 2);
      uint64_t v9 = *(void *)(v3 + 16);
      this = CoreML::Specification::V5::TupleType::MergeFrom(v9, v5);
      break;
    case 4:
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        CoreML::Specification::V5::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 4;
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::V5::DictionaryType *)*((void *)a2 + 2);
      unsigned int v10 = *(std::string **)(v3 + 16);
      this = (uint64_t)CoreML::Specification::V5::DictionaryType::MergeFrom(v10, v6);
      break;
    default:
      return this;
  }
  return this;
}

void sub_223F1665C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::NamedValueType::IsInitialized(CoreML::Specification::V5::NamedValueType *this)
{
  return 1;
}

void *CoreML::Specification::V5::NamedValueType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.NamedValueType");
}

CoreML::Specification::V5::ValueType *CoreML::Specification::V5::ValueType::ValueType(CoreML::Specification::V5::ValueType *this)
{
  *(void *)this = &unk_26D75A788;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::ValueType *)&CoreML::Specification::V5::_ValueType_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F16734(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::TensorType::MergeFrom(CoreML::Specification::V5::TensorType *this, const CoreML::Specification::V5::TensorType *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::V5::Dimension **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::V5::TensorType *)((char *)this + 16), *((_DWORD *)a2 + 6));
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Dimension>::TypeHandler>((std::string *)((char *)this + 16), (std::string **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v8;
    uint64_t v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  uint64_t result = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 40, (uint64_t)a2 + 40);
  uint64_t v11 = *((void *)a2 + 9);
  if (v11) {
    *((void *)this + 9) = v11;
  }
  int v12 = *((_DWORD *)a2 + 20);
  if (v12) {
    *((_DWORD *)this + 2CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v12;
  }
  return result;
}

std::string *CoreML::Specification::V5::ListType::MergeFrom(std::string *this, const CoreML::Specification::V5::ListType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::V5::ListType *)&CoreML::Specification::V5::_ListType_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      unsigned int v5 = (CoreML::Specification::V5::ValueType *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::V5::ValueType::MergeFrom(v5, *((const CoreML::Specification::V5::ValueType **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::V5::Dimension *)*((void *)a2 + 3);
      uint64_t data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      return CoreML::Specification::V5::Dimension::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_223F16924(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::TupleType::MergeFrom(uint64_t this, const CoreML::Specification::V5::TupleType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (uint64_t)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(this + 8), v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::V5::ValueType **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 16), v5);
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::ValueType>::TypeHandler>(v3 + 16, (CoreML::Specification::V5::ValueType **)v7, v6, v5, **(_DWORD **)(v3 + 32) - *(_DWORD *)(v3 + 24));
    signed int v8 = *(_DWORD *)(v3 + 24) + v5;
    *(_DWORD *)(v3 + 24) = v8;
    uint64_t v9 = *(signed int **)(v3 + 32);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  return this;
}

std::string *CoreML::Specification::V5::DictionaryType::MergeFrom(std::string *this, const CoreML::Specification::V5::DictionaryType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::V5::DictionaryType *)&CoreML::Specification::V5::_DictionaryType_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      unsigned int v5 = (CoreML::Specification::V5::ValueType *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::V5::ValueType::MergeFrom(v5, *((const CoreML::Specification::V5::ValueType **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::V5::ValueType *)*((void *)a2 + 3);
      uint64_t data = (CoreML::Specification::V5::ValueType *)v3[1].__r_.__value_.__l.__data_;
      return (std::string *)CoreML::Specification::V5::ValueType::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_223F16AF4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::ValueType::~ValueType(CoreML::Specification::V5::ValueType *this)
{
  *(void *)this = &unk_26D75A788;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::V5::ValueType::clear_type((uint64_t)this);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::ValueType::~ValueType(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::V5::ValueType::clear_type(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 28))
  {
    case 1:
    case 2:
    case 3:
    case 4:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void CoreML::Specification::V5::ValueType::New(CoreML::Specification::V5::ValueType *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F16C98(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::ValueType>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::ValueType>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::ValueType::MergePartialFromCodedStream(CoreML::Specification::V5::ValueType *this, char **a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      unsigned int v5 = *a2;
      if (*a2 >= a2[1]) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_20:
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13) {
        return 1;
      }
      if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)goto LABEL_58; {
    }
      }
    uint64_t v6 = 0;
LABEL_6:
    unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_20;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 1)
        {
          CoreML::Specification::V5::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 1;
          operator new();
        }
        uint64_t v9 = (CoreML::Specification::V5::TensorType *)*((void *)this + 2);
        uint64_t v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v14;
          *a2 = v14 + 1;
        }
        unint64_t v22 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        int v24 = v22;
        uint64_t result = CoreML::Specification::V5::TensorType::MergePartialFromCodedStream(v9, a2, v23);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 2u:
        if (v7 != 18) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::V5::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        unsigned int v10 = (CoreML::Specification::V5::ListType *)*((void *)this + 2);
        uint64_t v16 = *a2;
        if (*a2 >= a2[1] || *v16 < 0)
        {
          int v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v17 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v17 = *v16;
          *a2 = v16 + 1;
        }
        unint64_t v26 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
        if ((v26 & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        int v24 = v26;
        uint64_t result = CoreML::Specification::V5::ListType::MergePartialFromCodedStream(v10, a2, v27);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 3u:
        if (v7 != 26) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 3)
        {
          CoreML::Specification::V5::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 3;
          operator new();
        }
        uint64_t v11 = (CoreML::Specification::V5::TupleType *)*((void *)this + 2);
        unint64_t v18 = *a2;
        if (*a2 >= a2[1] || *v18 < 0)
        {
          int v19 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v19 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v19 = *v18;
          *a2 = v18 + 1;
        }
        unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v19);
        if ((v28 & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        int v24 = v28;
        uint64_t result = CoreML::Specification::V5::TupleType::MergePartialFromCodedStream(v11, a2, v29);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 4u:
        if (v7 != 34) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 4)
        {
          CoreML::Specification::V5::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 4;
          operator new();
        }
        int v12 = (CoreML::Specification::V5::DictionaryType *)*((void *)this + 2);
        int v20 = *a2;
        if (*a2 >= a2[1] || *v20 < 0)
        {
          int v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v21 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v21 = *v20;
          *a2 = v20 + 1;
        }
        unint64_t v30 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v21);
        if ((v30 & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        int v24 = v30;
        uint64_t result = CoreML::Specification::V5::DictionaryType::MergePartialFromCodedStream(v12, a2, v31);
        if (!result) {
          return result;
        }
LABEL_57:
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v24))
        {
          continue;
        }
LABEL_58:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_20;
    }
    return result;
  }
}

void sub_223F17084(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::ValueType::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 3)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 4)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::ValueType::ByteSizeLong(CoreML::Specification::V5::TensorType **this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      uint64_t v2 = CoreML::Specification::V5::TensorType::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 2:
      uint64_t v2 = CoreML::Specification::V5::ListType::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 3:
      uint64_t v2 = CoreML::Specification::V5::TupleType::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 4:
      uint64_t v2 = CoreML::Specification::V5::DictionaryType::ByteSizeLong(this[2]);
LABEL_7:
      uint64_t result = v2 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::V5::ValueType::IsInitialized(CoreML::Specification::V5::ValueType *this)
{
  return 1;
}

void *CoreML::Specification::V5::ValueType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.ValueType");
}

CoreML::Specification::V5::TensorType *CoreML::Specification::V5::TensorType::TensorType(CoreML::Specification::V5::TensorType *this)
{
  *(void *)this = &unk_26D75A820;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0u;
  *((_DWORD *)this + 14) = 0;
  uint64_t v2 = (CoreML::Specification::V5::protobuf_MIL_2eproto *)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Init((uint64_t)this + 48);
  *((_DWORD *)this + 14) = 0;
  if (this != (CoreML::Specification::V5::TensorType *)&CoreML::Specification::V5::_TensorType_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(v2);
  }
  *((void *)this + 9) = 0;
  *((void *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  return this;
}

void sub_223F172EC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v3);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)(v2 + 16));
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorType::~TensorType(CoreML::Specification::V5::TensorType *this)
{
  *(void *)this = &unk_26D75A820;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map((void *)this + 6);
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TensorType::~TensorType(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TensorType::New(CoreML::Specification::V5::TensorType *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F17404(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4012099E73);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorType>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorType>);
  }
  return result;
}

void CoreML::Specification::V5::TensorType::Clear(CoreML::Specification::V5::TensorType *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::V5::Dimension::clear_dimension(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::clear((uint64_t)this + 48);
  *((_DWORD *)this + 2CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  *((void *)this + 9) = 0;
}

uint64_t CoreML::Specification::V5::TensorType::MergePartialFromCodedStream(CoreML::Specification::V5::TensorType *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 40;
  int v6 = (char *)this + 48;
  uint64_t v7 = (char *)this + 16;
  while (1)
  {
    signed int v8 = *a2;
    if (*a2 >= a2[1]) {
      break;
    }
    uint64_t v9 = *v8;
    if (*v8 < 1) {
      goto LABEL_7;
    }
    *a2 = v8 + 1;
    unint64_t v10 = v9 | 0x100000000;
    if ((v10 & 0x100000000) == 0) {
      goto LABEL_25;
    }
LABEL_8:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_25;
        }
        int v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_62;
          }
        }
        uint64_t Varint32Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_62:
        *((_DWORD *)this + 2CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v13;
        break;
      case 2u:
        if (v10 != 16) {
          goto LABEL_25;
        }
        uint64_t v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          unint64_t Varint64Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v23 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v14;
          *a2 = v14 + 1;
        }
        *((void *)this + 9) = Varint64Fallback;
        break;
      case 3u:
        if (v10 != 26) {
          goto LABEL_25;
        }
        uint64_t v16 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Dimension>::TypeHandler>((uint64_t)v7);
        int v17 = *a2;
        if (*a2 >= a2[1] || *v17 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v17;
          *a2 = v17 + 1;
        }
        unint64_t v24 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((v24 & 0x8000000000000000) != 0) {
          return 0;
        }
        int v26 = v24;
        if (!CoreML::Specification::V5::Dimension::MergePartialFromCodedStream(v16, a2, v25)
          || !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v26))
        {
          return 0;
        }
        break;
      case 4u:
        if (v10 != 34) {
          goto LABEL_25;
        }
        v35[0] = v5;
        v35[1] = v6;
        uint64_t v37 = 0;
        uint64_t v38 = 0;
        std::string __p = 0;
        uint64_t v39 = 0;
        int v19 = *a2;
        if (*a2 >= a2[1] || *v19 < 0)
        {
          int v20 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v20 < 0) {
            goto LABEL_59;
          }
        }
        else
        {
          int v20 = *v19;
          *a2 = v19 + 1;
        }
        unint64_t v27 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v20);
        int v28 = v27;
        if ((v27 & 0x8000000000000000) != 0
          || !_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::MergePartialFromCodedStream((uint64_t)v35, (uint64_t)a2)|| !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v28))
        {
LABEL_59:
          BOOL v32 = 0;
          int v22 = 6;
          goto LABEL_53;
        }
        if (v38 >= 0) {
          p_p = (_tc_google::protobuf::internal *)&__p;
        }
        else {
          p_p = (_tc_google::protobuf::internal *)__p;
        }
        if (v38 >= 0) {
          unint64_t v30 = HIBYTE(v38);
        }
        else {
          unint64_t v30 = v37;
        }
        BOOL v31 = _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, (const char *)v30, 0, (uint64_t)"CoreML.Specification.V5.TensorType.AttributesEntry.key");
        BOOL v32 = v31;
        if (v31) {
          int v22 = 0;
        }
        else {
          int v22 = 6;
        }
LABEL_53:
        if (v39) {
          (*(void (**)(uint64_t))(*(void *)v39 + 8))(v39);
        }
        if (SHIBYTE(v38) < 0) {
          operator delete(__p);
        }
        if (!v32) {
          goto LABEL_31;
        }
        break;
      default:
        goto LABEL_25;
    }
LABEL_30:
    int v22 = 0;
LABEL_31:
    if (v22) {
      return 0;
    }
  }
  uint64_t v9 = 0;
LABEL_7:
  unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v9);
  unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v10 & 0x100000000) != 0) {
    goto LABEL_8;
  }
LABEL_25:
  if (v10) {
    BOOL v21 = (v10 & 7) == 4;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21)
  {
    if (!_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v10, a3))return 0; {
    goto LABEL_30;
    }
  }
  return 1;
}

void sub_223F177E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::TensorType::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 80);
  if (v6) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 72);
  if (v7) {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 24);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  unint64_t v10 = **(void **)(v5 + 64);
  if (v10)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v10 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_31;
      }
    }
    else if (v10 >= 2 && _tc_google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_31:
      operator new[]();
    }
    this = _tc_google::protobuf::Map<std::string,std::string>::begin(v5 + 48, v18);
    uint64_t v12 = 0;
    while (v18[0])
    {
      uint64_t v14 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v18[0] + 24), *(void *)(v18[0] + 24) + 24, *(_tc_google::protobuf::Arena **)(v5 + 40));
      if ((void *)v12 != v14)
      {
        if (v12) {
          (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
        }
        uint64_t v12 = (uint64_t)v14;
      }
      _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v12, a2, v13);
      unsigned int v15 = *(unsigned __int8 **)(v18[0] + 24);
      if ((char)v15[23] < 0)
      {
        unsigned int v15 = *(unsigned __int8 **)v15;
        uint64_t v16 = *(const char **)(*(void *)(v18[0] + 24) + 8);
      }
      else
      {
        uint64_t v16 = (const char *)v15[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v15, v16, 1, (uint64_t)"CoreML.Specification.V5.TensorType.AttributesEntry.key");
      this = (uint64_t)_tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v18);
    }
    if (v12) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
  }
  return this;
}

void sub_223F17B34(_Unwind_Exception *a1)
{
  MEMORY[0x22A614F80](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::TensorType::ByteSizeLong(CoreML::Specification::V5::TensorType *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      unint64_t v5 = CoreML::Specification::V5::Dimension::ByteSizeLong(*(CoreML::Specification::V5::Dimension **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = **((unsigned int **)this + 8);
  _tc_google::protobuf::Map<std::string,std::string>::begin((uint64_t)this + 48, v15);
  unint64_t v7 = 0;
  uint64_t v8 = v6 + v4;
  while (v15[0])
  {
    uint64_t v9 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*(void *)(v15[0] + 24), *(void *)(v15[0] + 24) + 24, *((_tc_google::protobuf::Arena **)this + 5));
    if (v7 != (_DWORD *)v9)
    {
      if (v7) {
        (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
      }
      unint64_t v7 = v9;
    }
    uint64_t v10 = _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v7);
    v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
    _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v15);
  }
  if (v7) {
    (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
  }
  uint64_t v11 = *((void *)this + 9);
  if (v11) {
    v8 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  int v12 = *((_DWORD *)this + 20);
  if (v12)
  {
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v8 += v13;
  }
  *((_DWORD *)this + 21) = v8;
  return v8;
}

void sub_223F17D3C(_Unwind_Exception *exception_object)
{
  if (v1) {
    CoreML::Specification::V5::Program::SerializeWithCachedSizes();
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::V5::TensorType::IsInitialized(CoreML::Specification::V5::TensorType *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorType");
}

CoreML::Specification::V5::TupleType *CoreML::Specification::V5::TupleType::TupleType(CoreML::Specification::V5::TupleType *this)
{
  *(void *)this = &unk_26D75A8B8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::V5::TupleType *)&CoreML::Specification::V5::_TupleType_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  return this;
}

void sub_223F17DE4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TupleType::~TupleType(CoreML::Specification::V5::TupleType *this)
{
  *(void *)this = &unk_26D75A8B8;
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TupleType::~TupleType(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TupleType::New(CoreML::Specification::V5::TupleType *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F17EE4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TupleType>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TupleType>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TupleType::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    int v3 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::V5::ValueType::clear_type(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::V5::TupleType::MergePartialFromCodedStream(CoreML::Specification::V5::TupleType *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::ValueType>::TypeHandler>((uint64_t)v4);
      int v12 = *a2;
      if (*a2 >= a2[1] || *v12 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *a2 = v12 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v15 = v14;
        uint64_t result = CoreML::Specification::V5::ValueType::MergePartialFromCodedStream(v11, (_tc_google::protobuf::io::CodedInputStream *)a2);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v15))
        {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::TupleType::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TupleType::ByteSizeLong(CoreML::Specification::V5::TupleType *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::V5::ValueType::ByteSizeLong(*(CoreML::Specification::V5::ValueType **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::V5::TupleType::IsInitialized(CoreML::Specification::V5::TupleType *this)
{
  return 1;
}

void *CoreML::Specification::V5::TupleType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TupleType");
}

CoreML::Specification::V5::ListType *CoreML::Specification::V5::ListType::ListType(CoreML::Specification::V5::ListType *this)
{
  *(void *)this = &unk_26D75A950;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::ListType *)&CoreML::Specification::V5::_ListType_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F18208(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::ListType::~ListType(CoreML::Specification::V5::ListType *this)
{
  *(void *)this = &unk_26D75A950;
  CoreML::Specification::V5::ListType::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::ListType::~ListType(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::V5::ListType::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::V5::_ListType_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      int v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

void CoreML::Specification::V5::ListType::New(CoreML::Specification::V5::ListType *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1839C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::ListType>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::ListType>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::ListType::Clear(CoreML::Specification::V5::ListType *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t CoreML::Specification::V5::ListType::MergePartialFromCodedStream(CoreML::Specification::V5::ListType *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_24;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_24;
      }
      uint64_t v13 = (CoreML::Specification::V5::Dimension *)*((void *)this + 3);
      if (!v13) {
        operator new();
      }
      unint64_t v14 = *a2;
      if (*a2 >= a2[1] || *v14 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v14;
        *a2 = v14 + 1;
      }
      unint64_t v20 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v20 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v18 = v20;
      uint64_t result = CoreML::Specification::V5::Dimension::MergePartialFromCodedStream(v13, a2, v21);
      if (!result) {
        return result;
      }
LABEL_37:
      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v18))return 0; {
    }
      }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      uint64_t v10 = (CoreML::Specification::V5::ValueType *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        int v12 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (v12 < 0) {
          return 0;
        }
      }
      else
      {
        int v12 = *v11;
        *a2 = v11 + 1;
      }
      unint64_t v17 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v12);
      if ((v17 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v18 = v17;
      uint64_t result = CoreML::Specification::V5::ValueType::MergePartialFromCodedStream(v10, (_tc_google::protobuf::io::CodedInputStream *)a2);
      if (!result) {
        return result;
      }
      goto LABEL_37;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F18644(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::V5::ListType::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::V5::_ListType_default_instance_)
  {
    uint64_t v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7)
    {
      return (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::V5::ListType::ByteSizeLong(CoreML::Specification::V5::ListType *this)
{
  if (this == (CoreML::Specification::V5::ListType *)&CoreML::Specification::V5::_ListType_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::V5::ValueType *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::V5::ValueType::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::V5::Dimension *)*((void *)this + 3);
    if (v5)
    {
      unint64_t v6 = CoreML::Specification::V5::Dimension::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

std::string *CoreML::Specification::V5::Dimension::MergeFrom(std::string *this, const CoreML::Specification::V5::Dimension *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 == 2)
  {
    if (*(_DWORD *)(v3 + 28) != 2)
    {
      CoreML::Specification::V5::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 2;
      operator new();
    }
    uint64_t v7 = *(void *)(v3 + 16);
    uint64_t v9 = *((void *)a2 + 2);
    uint64_t v12 = *(void *)(v9 + 8);
    if (v12) {
      this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v7 + 8), v12 & 0xFFFFFFFFFFFFFFFELL);
    }
    if (*(unsigned char *)(v9 + 16)) {
      *(unsigned char *)(v7 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
    }
  }
  else if (v5 == 1)
  {
    if (*(_DWORD *)(v3 + 28) != 1)
    {
      CoreML::Specification::V5::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 1;
      operator new();
    }
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v8 = *((void *)a2 + 2);
    uint64_t v10 = *(void *)(v8 + 8);
    if (v10) {
      this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v10 & 0xFFFFFFFFFFFFFFFELL);
    }
    uint64_t v11 = *(void *)(v8 + 16);
    if (v11) {
      *(void *)(v6 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v11;
    }
  }
  return this;
}

void sub_223F188F4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::ListType::IsInitialized(CoreML::Specification::V5::ListType *this)
{
  return 1;
}

void *CoreML::Specification::V5::ListType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.ListType");
}

CoreML::Specification::V5::DictionaryType *CoreML::Specification::V5::DictionaryType::DictionaryType(CoreML::Specification::V5::DictionaryType *this)
{
  *(void *)this = &unk_26D75A9E8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::DictionaryType *)&CoreML::Specification::V5::_DictionaryType_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F189A8(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::DictionaryType::~DictionaryType(CoreML::Specification::V5::DictionaryType *this)
{
  *(void *)this = &unk_26D75A9E8;
  CoreML::Specification::V5::DictionaryType::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::DictionaryType::~DictionaryType(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::V5::DictionaryType::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::V5::_DictionaryType_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

void CoreML::Specification::V5::DictionaryType::New(CoreML::Specification::V5::DictionaryType *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F18B3C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::DictionaryType>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::DictionaryType>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::DictionaryType::Clear(CoreML::Specification::V5::DictionaryType *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t CoreML::Specification::V5::DictionaryType::MergePartialFromCodedStream(CoreML::Specification::V5::DictionaryType *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      uint64_t v10 = (CoreML::Specification::V5::ValueType *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v11;
        *a2 = v11 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v15 = v14;
        uint64_t result = CoreML::Specification::V5::ValueType::MergePartialFromCodedStream(v10, (_tc_google::protobuf::io::CodedInputStream *)a2);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v15))
        {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      uint64_t v10 = (CoreML::Specification::V5::ValueType *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F18D90(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::V5::DictionaryType::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::V5::_DictionaryType_default_instance_)
  {
    int v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7)
    {
      return (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::V5::DictionaryType::ByteSizeLong(CoreML::Specification::V5::DictionaryType *this)
{
  if (this == (CoreML::Specification::V5::DictionaryType *)&CoreML::Specification::V5::_DictionaryType_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::V5::ValueType *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::V5::ValueType::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    int v5 = (CoreML::Specification::V5::ValueType *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::V5::ValueType::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::V5::DictionaryType::IsInitialized(CoreML::Specification::V5::DictionaryType *this)
{
  return 1;
}

void *CoreML::Specification::V5::DictionaryType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.DictionaryType");
}

CoreML::Specification::V5::Dimension_ConstantDimension *CoreML::Specification::V5::Dimension_ConstantDimension::Dimension_ConstantDimension(CoreML::Specification::V5::Dimension_ConstantDimension *this)
{
  *(void *)this = &unk_26D75AA80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::Dimension_ConstantDimension *)&CoreML::Specification::V5::_Dimension_ConstantDimension_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

void sub_223F18F50(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::Dimension_ConstantDimension::~Dimension_ConstantDimension(CoreML::Specification::V5::Dimension_ConstantDimension *this)
{
  *(void *)this = &unk_26D75AA80;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75AA80;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::Dimension_ConstantDimension::New(CoreML::Specification::V5::Dimension_ConstantDimension *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F19060(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Dimension_ConstantDimension>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Dimension_ConstantDimension>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Dimension_ConstantDimension::Clear(uint64_t this)
{
  *(void *)(this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

uint64_t CoreML::Specification::V5::Dimension_ConstantDimension::MergePartialFromCodedStream(CoreML::Specification::V5::Dimension_ConstantDimension *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((void *)this + 2) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::Dimension_ConstantDimension::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::V5::Dimension_ConstantDimension::ByteSizeLong(CoreML::Specification::V5::Dimension_ConstantDimension *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::V5::Dimension_ConstantDimension::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::V5::Dimension_ConstantDimension::IsInitialized(CoreML::Specification::V5::Dimension_ConstantDimension *this)
{
  return 1;
}

void *CoreML::Specification::V5::Dimension_ConstantDimension::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Dimension.ConstantDimension");
}

CoreML::Specification::V5::Dimension_UnknownDimension *CoreML::Specification::V5::Dimension_UnknownDimension::Dimension_UnknownDimension(CoreML::Specification::V5::Dimension_UnknownDimension *this)
{
  *(void *)this = &unk_26D75AB18;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::Dimension_UnknownDimension *)&CoreML::Specification::V5::_Dimension_UnknownDimension_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_223F192A0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::Dimension_UnknownDimension::~Dimension_UnknownDimension(CoreML::Specification::V5::Dimension_UnknownDimension *this)
{
  *(void *)this = &unk_26D75AB18;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D75AB18;
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::Dimension_UnknownDimension::New(CoreML::Specification::V5::Dimension_UnknownDimension *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F193B0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Dimension_UnknownDimension>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Dimension_UnknownDimension>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Dimension_UnknownDimension::Clear(uint64_t this)
{
  *(unsigned char *)(this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

uint64_t CoreML::Specification::V5::Dimension_UnknownDimension::MergePartialFromCodedStream(CoreML::Specification::V5::Dimension_UnknownDimension *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      std::string::size_type v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::V5::Dimension_UnknownDimension::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::Dimension_UnknownDimension::ByteSizeLong(CoreML::Specification::V5::Dimension_UnknownDimension *this)
{
  uint64_t v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::V5::Dimension_UnknownDimension::CheckTypeAndMergeFrom(std::string *this, const _tc_google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::V5::Dimension_UnknownDimension::IsInitialized(CoreML::Specification::V5::Dimension_UnknownDimension *this)
{
  return 1;
}

void *CoreML::Specification::V5::Dimension_UnknownDimension::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Dimension.UnknownDimension");
}

CoreML::Specification::V5::Dimension *CoreML::Specification::V5::Dimension::Dimension(CoreML::Specification::V5::Dimension *this)
{
  *(void *)this = &unk_26D75ABB0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::Dimension *)&CoreML::Specification::V5::_Dimension_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F195E0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::Dimension::~Dimension(CoreML::Specification::V5::Dimension *this)
{
  *(void *)this = &unk_26D75ABB0;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::V5::Dimension::clear_dimension((uint64_t)this);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Dimension::~Dimension(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::V5::Dimension::clear_dimension(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 2 || v2 == 1)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void CoreML::Specification::V5::Dimension::New(CoreML::Specification::V5::Dimension *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F19744(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Dimension>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Dimension>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Dimension::MergePartialFromCodedStream(CoreML::Specification::V5::Dimension *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      std::string::size_type v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_18;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_18;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_18;
      }
      if (*((_DWORD *)this + 7) != 2)
      {
        CoreML::Specification::V5::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 2;
        operator new();
      }
      uint64_t v11 = (CoreML::Specification::V5::Dimension_UnknownDimension *)*((void *)this + 2);
      int v15 = *a2;
      if (*a2 >= a2[1] || *v15 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v15;
        *a2 = v15 + 1;
      }
      unint64_t v21 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v21 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v19 = v21;
      uint64_t result = CoreML::Specification::V5::Dimension_UnknownDimension::MergePartialFromCodedStream(v11, a2, v22);
      if (!result) {
        return result;
      }
LABEL_39:
      if (!_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v19))return 0; {
    }
      }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      if (*((_DWORD *)this + 7) != 1)
      {
        CoreML::Specification::V5::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 1;
        operator new();
      }
      BOOL v10 = (CoreML::Specification::V5::Dimension_ConstantDimension *)*((void *)this + 2);
      char v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        int v14 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (v14 < 0) {
          return 0;
        }
      }
      else
      {
        int v14 = *v13;
        *a2 = v13 + 1;
      }
      unint64_t v17 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v14);
      if ((v17 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v19 = v17;
      uint64_t result = CoreML::Specification::V5::Dimension_ConstantDimension::MergePartialFromCodedStream(v10, a2, v18);
      if (!result) {
        return result;
      }
      goto LABEL_39;
    }
LABEL_18:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F199B0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Dimension::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::V5::Dimension::ByteSizeLong(CoreML::Specification::V5::Dimension *this)
{
  int v1 = *((_DWORD *)this + 7);
  if (v1 == 2)
  {
    uint64_t v4 = *((void *)this + 2);
    unint64_t v3 = 2 * *(unsigned __int8 *)(v4 + 16);
    *(_DWORD *)(v4 + 2CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v3;
  }
  else
  {
    if (v1 != 1)
    {
      unint64_t v5 = 0;
      goto LABEL_9;
    }
    uint64_t v2 = *((void *)this + 2);
    unint64_t v3 = *(void *)(v2 + 16);
    if (v3) {
      unint64_t v3 = ((9 * (__clz(v3 | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    *(_DWORD *)(v2 + 24) = v3;
  }
  unint64_t v5 = v3 + 2;
LABEL_9:
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v5;
  return v5;
}

uint64_t CoreML::Specification::V5::Dimension::IsInitialized(CoreML::Specification::V5::Dimension *this)
{
  return 1;
}

void *CoreML::Specification::V5::Dimension::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Dimension");
}

CoreML::Specification::V5::Value_ImmediateValue *CoreML::Specification::V5::Value_ImmediateValue::Value_ImmediateValue(CoreML::Specification::V5::Value_ImmediateValue *this)
{
  *(void *)this = &unk_26D75AC48;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::Value_ImmediateValue *)&CoreML::Specification::V5::_Value_ImmediateValue_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F19B44(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::V5::TensorValue::MergeFrom(std::string *this, const CoreML::Specification::V5::TensorValue *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        CoreML::Specification::V5::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 1;
        operator new();
      }
      unint64_t v5 = (const CoreML::Specification::V5::TensorValue_RepeatedFloats *)*((void *)a2 + 2);
      BOOL v10 = *(unint64_t **)(v3 + 16);
      return (std::string *)CoreML::Specification::V5::TensorValue_RepeatedFloats::MergeFrom(v10, v5);
    case 2:
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        CoreML::Specification::V5::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 2;
        operator new();
      }
      unint64_t v5 = (const CoreML::Specification::V5::TensorValue_RepeatedFloats *)*((void *)a2 + 2);
      BOOL v10 = *(unint64_t **)(v3 + 16);
      return (std::string *)CoreML::Specification::V5::TensorValue_RepeatedFloats::MergeFrom(v10, v5);
    case 3:
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        CoreML::Specification::V5::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 3;
        operator new();
      }
      int v6 = (const CoreML::Specification::V5::TensorValue_RepeatedBools *)*((void *)a2 + 2);
      uint64_t v11 = *(unint64_t **)(v3 + 16);
      return (std::string *)CoreML::Specification::V5::TensorValue_RepeatedBools::MergeFrom(v11, v6);
    case 4:
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        CoreML::Specification::V5::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 4;
        operator new();
      }
      uint64_t v7 = (const CoreML::Specification::V5::TensorValue_RepeatedStrings *)*((void *)a2 + 2);
      char v12 = *(std::string **)(v3 + 16);
      return CoreML::Specification::V5::TensorValue_RepeatedStrings::MergeFrom(v12, v7);
    case 5:
      if (*(_DWORD *)(v3 + 28) != 5)
      {
        CoreML::Specification::V5::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 5;
        operator new();
      }
      uint64_t v8 = (const CoreML::Specification::GLMRegressor_DoubleArray *)*((void *)a2 + 2);
      char v13 = *(unint64_t **)(v3 + 16);
      goto LABEL_39;
    case 6:
      if (*(_DWORD *)(v3 + 28) != 6)
      {
        CoreML::Specification::V5::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 6;
        operator new();
      }
      uint64_t v8 = (const CoreML::Specification::GLMRegressor_DoubleArray *)*((void *)a2 + 2);
      char v13 = *(unint64_t **)(v3 + 16);
LABEL_39:
      this = (std::string *)CoreML::Specification::GLMRegressor_DoubleArray::MergeFrom(v13, v8);
      break;
    case 7:
      if (*(_DWORD *)(v3 + 28) != 7)
      {
        CoreML::Specification::V5::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 7;
        operator new();
      }
      uint64_t v9 = (const CoreML::Specification::V5::TensorValue_RepeatedBytes *)*((void *)a2 + 2);
      int v14 = *(std::string **)(v3 + 16);
      this = CoreML::Specification::V5::TensorValue_RepeatedBytes::MergeFrom(v14, v9);
      break;
    default:
      return this;
  }
  return this;
}

void sub_223F19F9C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::TupleValue::MergeFrom(uint64_t this, const CoreML::Specification::V5::TupleValue *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (uint64_t)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(this + 8), v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (CoreML::Specification::V5::Value **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 16), v5);
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Value>::TypeHandler>(v3 + 16, (CoreML::Specification::V5::Value **)v7, v6, v5, **(_DWORD **)(v3 + 32) - *(_DWORD *)(v3 + 24));
    signed int v8 = *(_DWORD *)(v3 + 24) + v5;
    *(_DWORD *)(v3 + 24) = v8;
    uint64_t v9 = *(signed int **)(v3 + 32);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  return this;
}

std::string *CoreML::Specification::V5::DictionaryValue::MergeFrom(std::string *this, const CoreML::Specification::V5::DictionaryValue *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (CoreML::Specification::V5::DictionaryValue_KeyValuePair **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::DictionaryValue_KeyValuePair>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

void CoreML::Specification::V5::Value_ImmediateValue::~Value_ImmediateValue(CoreML::Specification::V5::Value_ImmediateValue *this)
{
  *(void *)this = &unk_26D75AC48;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::V5::Value_ImmediateValue::clear_value((uint64_t)this);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Value_ImmediateValue::~Value_ImmediateValue(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::V5::Value_ImmediateValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 28))
  {
    case 1:
    case 2:
    case 3:
    case 4:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void CoreML::Specification::V5::Value_ImmediateValue::New(CoreML::Specification::V5::Value_ImmediateValue *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1A2D8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Value_ImmediateValue>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Value_ImmediateValue>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Value_ImmediateValue::MergePartialFromCodedStream(CoreML::Specification::V5::Value_ImmediateValue *this, char **a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      unsigned int v5 = *a2;
      if (*a2 >= a2[1]) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_20:
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13) {
        return 1;
      }
      if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)goto LABEL_58; {
    }
      }
    uint64_t v6 = 0;
LABEL_6:
    unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_20;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 1)
        {
          CoreML::Specification::V5::Value_ImmediateValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 1;
          operator new();
        }
        uint64_t v9 = (CoreML::Specification::V5::TensorValue *)*((void *)this + 2);
        int v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v14;
          *a2 = v14 + 1;
        }
        unint64_t v22 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        int v24 = v22;
        uint64_t result = CoreML::Specification::V5::TensorValue::MergePartialFromCodedStream(v9, a2, v23);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 2u:
        if (v7 != 18) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::V5::Value_ImmediateValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        BOOL v10 = (CoreML::Specification::V5::TupleValue *)*((void *)this + 2);
        uint64_t v16 = *a2;
        if (*a2 >= a2[1] || *v16 < 0)
        {
          int v17 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v17 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v17 = *v16;
          *a2 = v16 + 1;
        }
        unint64_t v26 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
        if ((v26 & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        int v24 = v26;
        uint64_t result = CoreML::Specification::V5::TupleValue::MergePartialFromCodedStream(v10, a2, v27);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 3u:
        if (v7 != 26) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 3)
        {
          CoreML::Specification::V5::Value_ImmediateValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 3;
          operator new();
        }
        uint64_t v11 = (CoreML::Specification::V5::ListValue *)*((void *)this + 2);
        unsigned int v18 = *a2;
        if (*a2 >= a2[1] || *v18 < 0)
        {
          int v19 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v19 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v19 = *v18;
          *a2 = v18 + 1;
        }
        unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v19);
        if ((v28 & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        int v24 = v28;
        uint64_t result = CoreML::Specification::V5::ListValue::MergePartialFromCodedStream(v11, a2, v29);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 4u:
        if (v7 != 34) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 4)
        {
          CoreML::Specification::V5::Value_ImmediateValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 4;
          operator new();
        }
        char v12 = (CoreML::Specification::V5::DictionaryValue *)*((void *)this + 2);
        unint64_t v20 = *a2;
        if (*a2 >= a2[1] || *v20 < 0)
        {
          int v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v21 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v21 = *v20;
          *a2 = v20 + 1;
        }
        unint64_t v30 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v21);
        if ((v30 & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        int v24 = v30;
        uint64_t result = CoreML::Specification::V5::DictionaryValue::MergePartialFromCodedStream(v12, a2, v31);
        if (!result) {
          return result;
        }
LABEL_57:
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v24))
        {
          continue;
        }
LABEL_58:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_20;
    }
    return result;
  }
}

void sub_223F1A6C4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Value_ImmediateValue::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 3)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 4)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::Value_ImmediateValue::ByteSizeLong(CoreML::Specification::V5::TensorValue **this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      uint64_t v2 = CoreML::Specification::V5::TensorValue::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 2:
      uint64_t v2 = CoreML::Specification::V5::TupleValue::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 3:
      uint64_t v2 = CoreML::Specification::V5::ListValue::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 4:
      uint64_t v2 = CoreML::Specification::V5::DictionaryValue::ByteSizeLong(this[2]);
LABEL_7:
      uint64_t result = v2 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::V5::Value_ImmediateValue::MergeFrom(uint64_t this, const CoreML::Specification::V5::Value_ImmediateValue *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (uint64_t)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(this + 8), v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        CoreML::Specification::V5::Value_ImmediateValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 1;
        operator new();
      }
      uint64_t v7 = (const CoreML::Specification::V5::TensorValue *)*((void *)a2 + 2);
      BOOL v10 = *(std::string **)(v3 + 16);
      this = (uint64_t)CoreML::Specification::V5::TensorValue::MergeFrom(v10, v7);
      break;
    case 2:
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        CoreML::Specification::V5::Value_ImmediateValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 2;
        operator new();
      }
      uint64_t v5 = (const CoreML::Specification::V5::TupleValue *)*((void *)a2 + 2);
      uint64_t v8 = *(void *)(v3 + 16);
      goto LABEL_18;
    case 3:
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        CoreML::Specification::V5::Value_ImmediateValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 3;
        operator new();
      }
      uint64_t v5 = (const CoreML::Specification::V5::TupleValue *)*((void *)a2 + 2);
      uint64_t v8 = *(void *)(v3 + 16);
LABEL_18:
      this = CoreML::Specification::V5::TupleValue::MergeFrom(v8, v5);
      break;
    case 4:
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        CoreML::Specification::V5::Value_ImmediateValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 4;
        operator new();
      }
      int v6 = (const CoreML::Specification::V5::DictionaryValue *)*((void *)a2 + 2);
      uint64_t v9 = *(std::string **)(v3 + 16);
      this = (uint64_t)CoreML::Specification::V5::DictionaryValue::MergeFrom(v9, v6);
      break;
    default:
      return this;
  }
  return this;
}

void sub_223F1AB1C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Value_ImmediateValue::IsInitialized(CoreML::Specification::V5::Value_ImmediateValue *this)
{
  return 1;
}

void *CoreML::Specification::V5::Value_ImmediateValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Value.ImmediateValue");
}

CoreML::Specification::V5::Value_FileValue *CoreML::Specification::V5::Value_FileValue::Value_FileValue(CoreML::Specification::V5::Value_FileValue *this)
{
  *(void *)this = &unk_26D75ACE0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::Value_FileValue *)&CoreML::Specification::V5::_Value_FileValue_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F1ABF0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Value_FileValue::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A614FA0);
  }
  return this;
}

void CoreML::Specification::V5::Value_FileValue::~Value_FileValue(CoreML::Specification::V5::Value_FileValue *this)
{
  *(void *)this = &unk_26D75ACE0;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::V5::Value_FileValue::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;
  uint64_t vars8;

  *(void *)this = &unk_26D75ACE0;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::V5::Value_FileValue::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::Value_FileValue::New(CoreML::Specification::V5::Value_FileValue *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1AD8C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Value_FileValue>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Value_FileValue>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Value_FileValue::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  *(void *)(this + 24) = 0;
  return this;
}

BOOL CoreML::Specification::V5::Value_FileValue::MergePartialFromCodedStream(CoreML::Specification::V5::Value_FileValue *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_23;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_23;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_23;
        }
        int v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          *((void *)this + 3) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 3) = *v14;
          *a2 = v14 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      BOOL result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      char v12 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        char v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (const char *)(*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        std::string::size_type size = (const char *)HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v12, size, 0, (uint64_t)"CoreML.Specification.V5.Value.FileValue.fileName"))return 0; {
    }
      }
LABEL_23:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::Value_FileValue::SerializeWithCachedSizes(CoreML::Specification::V5::Value_FileValue *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(const char **)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  uint64_t v7 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v7, 1, (uint64_t)"CoreML.Specification.V5.Value.FileValue.fileName");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 2), a2);
  }
LABEL_7:
  unint64_t v8 = *((void *)this + 3);
  if (v8)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v8, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Value_FileValue::ByteSizeLong(CoreML::Specification::V5::Value_FileValue *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  if (v5) {
    v4 += ((9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

std::string *CoreML::Specification::V5::Value_FileValue::MergeFrom(std::string *this, const CoreML::Specification::V5::Value_FileValue *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  int v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  std::string::size_type v7 = *((void *)a2 + 3);
  if (v7) {
    v3[1].__r_.__value_.__r.__words[0] = v7;
  }
  return this;
}

uint64_t CoreML::Specification::V5::Value_FileValue::IsInitialized(CoreML::Specification::V5::Value_FileValue *this)
{
  return 1;
}

void *CoreML::Specification::V5::Value_FileValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Value.FileValue");
}

CoreML::Specification::V5::Value_BlobFileValue *CoreML::Specification::V5::Value_BlobFileValue::Value_BlobFileValue(CoreML::Specification::V5::Value_BlobFileValue *this)
{
  *(void *)this = &unk_26D75AD78;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::Value_BlobFileValue *)&CoreML::Specification::V5::_Value_BlobFileValue_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F1B1BC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::Value_BlobFileValue::~Value_BlobFileValue(CoreML::Specification::V5::Value_BlobFileValue *this)
{
  *(void *)this = &unk_26D75AD78;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::V5::Value_FileValue::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;
  uint64_t vars8;

  *(void *)this = &unk_26D75AD78;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::V5::Value_FileValue::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::Value_BlobFileValue::New(CoreML::Specification::V5::Value_BlobFileValue *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1B2E4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Value_BlobFileValue>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Value_BlobFileValue>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Value_BlobFileValue::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  *(void *)(this + 24) = 0;
  return this;
}

BOOL CoreML::Specification::V5::Value_BlobFileValue::MergePartialFromCodedStream(CoreML::Specification::V5::Value_BlobFileValue *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = *a2;
        if (*a2 >= a2[1])
        {
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_23;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_23;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_23;
        }
        int v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          *((void *)this + 3) = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 3) = *v14;
          *a2 = v14 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      BOOL result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      char v12 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        char v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (const char *)(*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        std::string::size_type size = (const char *)HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v12, size, 0, (uint64_t)"CoreML.Specification.V5.Value.BlobFileValue.fileName"))return 0; {
    }
      }
LABEL_23:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::Value_BlobFileValue::SerializeWithCachedSizes(CoreML::Specification::V5::Value_BlobFileValue *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(const char **)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  uint64_t v7 = (const char *)*(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v7, 1, (uint64_t)"CoreML.Specification.V5.Value.BlobFileValue.fileName");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 2), a2);
  }
LABEL_7:
  unint64_t v8 = *((void *)this + 3);
  if (v8)
  {
    return _tc_google::protobuf::internal::WireFormatLite::WriteInt64(2, v8, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Value_BlobFileValue::ByteSizeLong(CoreML::Specification::V5::Value_BlobFileValue *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  if (v5) {
    v4 += ((9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::V5::Value_BlobFileValue::IsInitialized(CoreML::Specification::V5::Value_BlobFileValue *this)
{
  return 1;
}

void *CoreML::Specification::V5::Value_BlobFileValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Value.BlobFileValue");
}

CoreML::Specification::V5::Value *CoreML::Specification::V5::Value::Value(CoreML::Specification::V5::Value *this)
{
  *(void *)this = &unk_26D75AE10;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::Value *)&CoreML::Specification::V5::_Value_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_223F1B680(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::Value::~Value(CoreML::Specification::V5::Value *this)
{
  *(void *)this = &unk_26D75AE10;
  CoreML::Specification::V5::Value::SharedDtor(this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::Value::~Value(this);
  JUMPOUT(0x22A614FA0);
}

void *CoreML::Specification::V5::Value::SharedDtor(void *this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = this[2];
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A614FA0](v2, 0x1012C40EC159624);
  }
  if ((uint64_t *)v1 != &CoreML::Specification::V5::_Value_default_instance_)
  {
    this = *(void **)(v1 + 24);
    if (this) {
      this = (void *)(*(uint64_t (**)(void *))(*this + 8))(this);
    }
  }
  if (*(_DWORD *)(v1 + 44))
  {
    return (void *)CoreML::Specification::V5::Value::clear_value(v1);
  }
  return this;
}

uint64_t CoreML::Specification::V5::Value::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 44);
  if (v2 == 5 || v2 == 4 || v2 == 3)
  {
    this = *(void *)(this + 32);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

void CoreML::Specification::V5::Value::New(CoreML::Specification::V5::Value *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1B8A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::Value>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Value>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Value::Clear(CoreML::Specification::V5::Value *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  return CoreML::Specification::V5::Value::clear_value((uint64_t)this);
}

uint64_t CoreML::Specification::V5::Value::MergePartialFromCodedStream(CoreML::Specification::V5::Value *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (2)
  {
    while (1)
    {
      int v6 = *a2;
      if (*a2 >= a2[1]) {
        break;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) != 0) {
        goto LABEL_8;
      }
LABEL_30:
      if (v8) {
        BOOL v19 = (v8 & 7) == 4;
      }
      else {
        BOOL v19 = 1;
      }
      if (v19) {
        return 1;
      }
      if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)goto LABEL_67; {
    }
      }
    uint64_t v7 = 0;
LABEL_7:
    unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
    unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0) {
      goto LABEL_30;
    }
LABEL_8:
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_30;
        }
        if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
          _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
        if (!result) {
          return result;
        }
        uint64_t v11 = *v5;
        if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v11 = (std::string *)v11->__r_.__value_.__r.__words[0];
          std::string::size_type size = (const char *)(*v5)->__r_.__value_.__l.__size_;
        }
        else
        {
          std::string::size_type size = (const char *)HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v11, size, 0, (uint64_t)"CoreML.Specification.V5.Value.docString"))goto LABEL_67; {
        continue;
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_30;
        }
        BOOL v13 = (CoreML::Specification::V5::ValueType *)*((void *)this + 3);
        if (!v13) {
          operator new();
        }
        int v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_67;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v14;
          *a2 = v14 + 1;
        }
        unint64_t v26 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((v26 & 0x8000000000000000) != 0) {
          goto LABEL_67;
        }
        int v27 = v26;
        uint64_t result = CoreML::Specification::V5::ValueType::MergePartialFromCodedStream(v13, (_tc_google::protobuf::io::CodedInputStream *)a2);
        if (!result) {
          return result;
        }
        goto LABEL_63;
      case 3u:
        if (v8 != 26) {
          goto LABEL_30;
        }
        if (*((_DWORD *)this + 11) != 3)
        {
          CoreML::Specification::V5::Value::clear_value((uint64_t)this);
          *((_DWORD *)this + 11) = 3;
          operator new();
        }
        char v16 = (CoreML::Specification::V5::Value_ImmediateValue *)*((void *)this + 4);
        unint64_t v20 = *a2;
        if (*a2 >= a2[1] || *v20 < 0)
        {
          int v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v21 < 0) {
            goto LABEL_67;
          }
        }
        else
        {
          int v21 = *v20;
          *a2 = v20 + 1;
        }
        unint64_t v28 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v21);
        if ((v28 & 0x8000000000000000) != 0) {
          goto LABEL_67;
        }
        int v27 = v28;
        uint64_t result = CoreML::Specification::V5::Value_ImmediateValue::MergePartialFromCodedStream(v16, a2, v29);
        if (!result) {
          return result;
        }
        goto LABEL_63;
      case 4u:
        if (v8 != 34) {
          goto LABEL_30;
        }
        if (*((_DWORD *)this + 11) != 4)
        {
          CoreML::Specification::V5::Value::clear_value((uint64_t)this);
          *((_DWORD *)this + 11) = 4;
          operator new();
        }
        int v17 = (CoreML::Specification::V5::Value_FileValue *)*((void *)this + 4);
        unint64_t v22 = *a2;
        if (*a2 >= a2[1] || *v22 < 0)
        {
          int v23 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v23 < 0) {
            goto LABEL_67;
          }
        }
        else
        {
          int v23 = *v22;
          *a2 = v22 + 1;
        }
        unint64_t v30 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v23);
        if ((v30 & 0x8000000000000000) != 0) {
          goto LABEL_67;
        }
        int v27 = v30;
        uint64_t result = CoreML::Specification::V5::Value_FileValue::MergePartialFromCodedStream(v17, a2, v31);
        if (!result) {
          return result;
        }
        goto LABEL_63;
      case 5u:
        if (v8 != 42) {
          goto LABEL_30;
        }
        if (*((_DWORD *)this + 11) != 5)
        {
          CoreML::Specification::V5::Value::clear_value((uint64_t)this);
          *((_DWORD *)this + 11) = 5;
          operator new();
        }
        unsigned int v18 = (CoreML::Specification::V5::Value_BlobFileValue *)*((void *)this + 4);
        int v24 = *a2;
        if (*a2 >= a2[1] || *v24 < 0)
        {
          int v25 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v25 < 0) {
            goto LABEL_67;
          }
        }
        else
        {
          int v25 = *v24;
          *a2 = v24 + 1;
        }
        unint64_t v32 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v25);
        if ((v32 & 0x8000000000000000) != 0) {
          goto LABEL_67;
        }
        int v27 = v32;
        uint64_t result = CoreML::Specification::V5::Value_BlobFileValue::MergePartialFromCodedStream(v18, a2, v33);
        if (!result) {
          return result;
        }
LABEL_63:
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v27))
        {
          continue;
        }
LABEL_67:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_30;
    }
    return result;
  }
}

void sub_223F1BD84(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::Value::SerializeWithCachedSizes(CoreML::Specification::V5::Value *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if ((*(char *)(result + 23) & 0x80000000) == 0)
  {
    uint64_t v7 = (const char *)*(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v7 = *(const char **)(result + 8);
  if (v7)
  {
    uint64_t result = *(void *)result;
LABEL_6:
    _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)result, v7, 1, (uint64_t)"CoreML.Specification.V5.Value.docString");
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 2), a2);
  }
LABEL_7:
  if (this != (CoreML::Specification::V5::Value *)&CoreML::Specification::V5::_Value_default_instance_)
  {
    uint64_t v8 = *((void *)this + 3);
    if (v8) {
      uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
    }
  }
  int v9 = *((_DWORD *)this + 11);
  if (v9 == 3)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, *((void *)this + 4), a2, a4);
    int v9 = *((_DWORD *)this + 11);
  }
  if (v9 == 4)
  {
    uint64_t result = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, *((void *)this + 4), a2, a4);
    int v9 = *((_DWORD *)this + 11);
  }
  if (v9 == 5)
  {
    uint64_t v10 = *((void *)this + 4);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::V5::Value::ByteSizeLong(CoreML::Specification::V5::Value *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if (this != (CoreML::Specification::V5::Value *)&CoreML::Specification::V5::_Value_default_instance_)
  {
    int v6 = (CoreML::Specification::V5::ValueType *)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::V5::ValueType::ByteSizeLong(v6);
      v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  int v8 = *((_DWORD *)this + 11);
  switch(v8)
  {
    case 5:
      uint64_t v9 = CoreML::Specification::V5::Value_BlobFileValue::ByteSizeLong(*((CoreML::Specification::V5::Value_BlobFileValue **)this
                                                                        + 4));
      goto LABEL_17;
    case 4:
      uint64_t v9 = CoreML::Specification::V5::Value_FileValue::ByteSizeLong(*((CoreML::Specification::V5::Value_FileValue **)this
                                                                    + 4));
      goto LABEL_17;
    case 3:
      uint64_t v9 = CoreML::Specification::V5::Value_ImmediateValue::ByteSizeLong(*((CoreML::Specification::V5::TensorValue ***)this
                                                                         + 4));
LABEL_17:
      v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      break;
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v5;
  return v5;
}

uint64_t CoreML::Specification::V5::Value::IsInitialized(CoreML::Specification::V5::Value *this)
{
  return 1;
}

uint64_t CoreML::Specification::V5::Value::Swap(uint64_t this, CoreML::Specification::V5::Value *a2)
{
  if (a2 != (CoreML::Specification::V5::Value *)this)
  {
    uint64_t v2 = *(void *)(this + 16);
    *(void *)(this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    uint64_t v4 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 4CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v4;
  }
  return this;
}

void *CoreML::Specification::V5::Value::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.Value");
}

CoreML::Specification::V5::TensorValue_RepeatedFloats *CoreML::Specification::V5::TensorValue_RepeatedFloats::TensorValue_RepeatedFloats(CoreML::Specification::V5::TensorValue_RepeatedFloats *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75AEA8;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::V5::TensorValue_RepeatedFloats *)&CoreML::Specification::V5::_TensorValue_RepeatedFloats_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F1C0D4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorValue_RepeatedFloats::~TensorValue_RepeatedFloats(CoreML::Specification::V5::TensorValue_RepeatedFloats *this)
{
  *(void *)this = &unk_26D75AEA8;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TensorValue_RepeatedFloats::~TensorValue_RepeatedFloats(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TensorValue_RepeatedFloats::New(CoreML::Specification::V5::TensorValue_RepeatedFloats *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1C1E8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorValue_RepeatedFloats>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedFloats>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedFloats::Clear(uint64_t this)
{
  *(_DWORD *)(this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

BOOL CoreML::Specification::V5::TensorValue_RepeatedFloats::MergePartialFromCodedStream(CoreML::Specification::V5::TensorValue_RepeatedFloats *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(_tc_google::protobuf::internal::WireFormatLite::FieldType)2>(1, 0xAu, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      signed int v13 = *v5;
      unsigned int v14 = VarintSizeAsIntFallback >> 2;
      int v15 = _tc_google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      int v16 = _tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v16 >= v15) {
        int v17 = v15;
      }
      else {
        int v17 = v16;
      }
      if (v15 == -1) {
        int v17 = v16;
      }
      if (v17 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v14 <= 1) {
          int v18 = 1;
        }
        else {
          int v18 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v28 = 0;
          BOOL v19 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v28);
            if (!result) {
              return result;
            }
            unsigned int v20 = v28;
          }
          else
          {
            unsigned int v20 = *v19;
            *a2 = (char *)(v19 + 1);
          }
          signed int v21 = *((_DWORD *)this + 4);
          if (v21 == *((_DWORD *)this + 5))
          {
            _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v21 + 1);
            signed int v21 = *v5;
          }
          uint64_t v22 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v21 + 1;
          *(_DWORD *)(v22 + 4 * v21 + 8) = v20;
          --v18;
        }
        while (v18);
      }
    }
    signed int v24 = v13 + v14;
    if ((int)*v5 >= (int)(v13 + v14))
    {
      uint64_t v25 = *((void *)this + 3);
    }
    else
    {
      _tc_google::protobuf::RepeatedField<float>::Reserve(v5, v13 + v14);
      uint64_t v25 = *((void *)this + 3);
      uint64_t v26 = 4 * v24 - 4 * *((int *)this + 4);
      if (v26 >= 1) {
        bzero((void *)(v25 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v26 >> 2) - ((unint64_t)v26 > 3)) + 4);
      }
    }
    *uint64_t v5 = v24;
    uint64_t v27 = v25 + 8;
    if (!v25) {
      uint64_t v27 = 0;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::ReadRaw((_tc_google::protobuf::io::CodedInputStream *)a2, (char *)(v27 + 4 * v13), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v13;
    return result;
  }
  return 0;
}

BOOL _tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(_tc_google::protobuf::internal::WireFormatLite::FieldType)2>(int a1, unsigned int a2, unsigned int **this, uint64_t a4)
{
  unsigned int v27 = 0;
  unint64_t v8 = *this;
  if ((int)(*((_DWORD *)this + 2) - *this) < 4)
  {
    BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27);
    if (!result) {
      return result;
    }
    unsigned int v9 = v27;
  }
  else
  {
    unsigned int v9 = *v8;
    *this = v8 + 1;
  }
  signed int v10 = *(_DWORD *)a4;
  if (*(_DWORD *)a4 == *(_DWORD *)(a4 + 4))
  {
    _tc_google::protobuf::RepeatedField<float>::Reserve((unsigned int *)a4, v10 + 1);
    signed int v10 = *(_DWORD *)a4;
  }
  uint64_t v11 = *(void *)(a4 + 8);
  int v12 = v10 + 1;
  *(_DWORD *)a4 = v10 + 1;
  *(_DWORD *)(v11 + 4 * v10 + 8) = v9;
  signed int v13 = *this;
  int v14 = *((_DWORD *)this + 2) - *this;
  if (v14 >= 1)
  {
    int v15 = a1 + 4;
    int v16 = *(_DWORD *)(a4 + 4) - v12;
    int v17 = v14 / (a1 + 4);
    if (v17 >= v16) {
      int v18 = *(_DWORD *)(a4 + 4) - v12;
    }
    else {
      int v18 = v14 / (a1 + 4);
    }
    if (v18 < 1)
    {
      LODWORD(v19) = 0;
    }
    else
    {
      uint64_t v19 = 0;
      int v20 = v10 + 2;
      uint64_t v21 = v11 + 4 * v12 + 8;
      int v22 = v17;
      if (v17 >= (uint64_t)v16) {
        int v22 = v16;
      }
      do
      {
        if (a2 > 0x7F)
        {
          if (a2 >> 14
            || (a2 & 0x7F | 0x80) != *(unsigned __int8 *)v13
            || *((unsigned __int8 *)v13 + 1) != (a2 >> 7))
          {
            goto LABEL_22;
          }
          int v23 = (unsigned int *)((char *)v13 + 2);
        }
        else
        {
          int v24 = *(unsigned __int8 *)v13;
          int v23 = (unsigned int *)((char *)v13 + 1);
          if (v24 != a2) {
            goto LABEL_22;
          }
        }
        int v25 = *v23;
        signed int v13 = v23 + 1;
        *(_DWORD *)a4 = v20 + v19;
        *(_DWORD *)(v21 + 4 * v19++) = v25;
      }
      while (v22 != v19);
      LODWORD(v19) = v18;
    }
LABEL_22:
    if ((int)v19 * v15 >= 1) {
      _tc_google::protobuf::io::CodedInputStream::Skip((_tc_google::protobuf::io::CodedInputStream *)this, v19 * v15);
    }
  }
  return 1;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedFloats::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        unsigned int v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *unsigned int v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(void *)(v5 + 24);
    if (v13) {
      int v14 = (_tc_google::protobuf::internal::WireFormatLite *)(v13 + 8);
    }
    else {
      int v14 = 0;
    }
    int v15 = (const float *)*(unsigned int *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteFloatArray(v14, v15, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedFloats::ByteSizeLong(CoreML::Specification::V5::TensorValue_RepeatedFloats *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

unint64_t *CoreML::Specification::V5::TensorValue_RepeatedFloats::MergeFrom(unint64_t *this, const CoreML::Specification::V5::TensorValue_RepeatedFloats *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    int v7 = *((_DWORD *)v3 + 4);
    int v6 = (unsigned int *)(v3 + 2);
    _tc_google::protobuf::RepeatedField<float>::Reserve(v6, v7 + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v6 + 1) + 4 * (int)*v6 + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    *v6 += *((_DWORD *)a2 + 4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedFloats::IsInitialized(CoreML::Specification::V5::TensorValue_RepeatedFloats *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorValue_RepeatedFloats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorValue.RepeatedFloats");
}

CoreML::Specification::V5::TensorValue_RepeatedDoubles *CoreML::Specification::V5::TensorValue_RepeatedDoubles::TensorValue_RepeatedDoubles(CoreML::Specification::V5::TensorValue_RepeatedDoubles *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75AF40;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::V5::TensorValue_RepeatedDoubles *)&CoreML::Specification::V5::_TensorValue_RepeatedDoubles_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F1C8CC(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorValue_RepeatedDoubles::~TensorValue_RepeatedDoubles(CoreML::Specification::V5::TensorValue_RepeatedDoubles *this)
{
  *(void *)this = &unk_26D75AF40;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TensorValue_RepeatedDoubles::~TensorValue_RepeatedDoubles(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TensorValue_RepeatedDoubles::New(CoreML::Specification::V5::TensorValue_RepeatedDoubles *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1C9E0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorValue_RepeatedDoubles>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedDoubles>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedDoubles::Clear(uint64_t this)
{
  *(_DWORD *)(this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

BOOL CoreML::Specification::V5::TensorValue_RepeatedDoubles::MergePartialFromCodedStream(CoreML::Specification::V5::TensorValue_RepeatedDoubles *this, char **a2, unsigned int a3)
{
  int v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          uint64_t v7 = 0;
LABEL_7:
          unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(_tc_google::protobuf::internal::WireFormatLite::FieldType)1>(1, 0xAu, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      signed int v13 = *v5;
      unsigned int v14 = VarintSizeAsIntFallback >> 3;
      int v15 = _tc_google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      int v16 = _tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2);
      if (v16 >= v15) {
        int v17 = v15;
      }
      else {
        int v17 = v16;
      }
      if (v15 == -1) {
        int v17 = v16;
      }
      if (v17 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v14 <= 1) {
          int v18 = 1;
        }
        else {
          int v18 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v28 = 0;
          uint64_t v19 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = _tc_google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v28);
            if (!result) {
              return result;
            }
            unint64_t v20 = v28;
          }
          else
          {
            unint64_t v20 = *v19;
            *a2 = (char *)(v19 + 1);
          }
          signed int v21 = *((_DWORD *)this + 4);
          if (v21 == *((_DWORD *)this + 5))
          {
            _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v21 + 1);
            signed int v21 = *v5;
          }
          uint64_t v22 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v21 + 1;
          *(void *)(v22 + 8 * v21 + 8) = v20;
          --v18;
        }
        while (v18);
      }
    }
    signed int v24 = v13 + v14;
    if ((int)*v5 >= (int)(v13 + v14))
    {
      uint64_t v25 = *((void *)this + 3);
    }
    else
    {
      _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v13 + v14);
      uint64_t v25 = *((void *)this + 3);
      uint64_t v26 = 8 * v24 - 8 * *((int *)this + 4);
      if (v26 >= 1) {
        bzero((void *)(v25 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v26 >> 3) - ((unint64_t)v26 > 7)) + 8);
      }
    }
    *int v5 = v24;
    uint64_t v27 = v25 + 8;
    if (!v25) {
      uint64_t v27 = 0;
    }
  }
  while (_tc_google::protobuf::io::CodedInputStream::ReadRaw((_tc_google::protobuf::io::CodedInputStream *)a2, (char *)(v27 + 8 * v13), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *int v5 = v13;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedDoubles::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        unsigned int v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *unsigned int v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(void *)(v5 + 24);
    if (v13) {
      unsigned int v14 = (_tc_google::protobuf::internal::WireFormatLite *)(v13 + 8);
    }
    else {
      unsigned int v14 = 0;
    }
    int v15 = (const double *)*(unsigned int *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteDoubleArray(v14, v15, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedDoubles::ByteSizeLong(CoreML::Specification::V5::TensorValue_RepeatedDoubles *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedDoubles::IsInitialized(CoreML::Specification::V5::TensorValue_RepeatedDoubles *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorValue_RepeatedDoubles::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorValue.RepeatedDoubles");
}

CoreML::Specification::V5::TensorValue_RepeatedInts *CoreML::Specification::V5::TensorValue_RepeatedInts::TensorValue_RepeatedInts(CoreML::Specification::V5::TensorValue_RepeatedInts *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75AFD8;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::V5::TensorValue_RepeatedInts *)&CoreML::Specification::V5::_TensorValue_RepeatedInts_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F1CEB8(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorValue_RepeatedInts::~TensorValue_RepeatedInts(CoreML::Specification::V5::TensorValue_RepeatedInts *this)
{
  *(void *)this = &unk_26D75AFD8;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TensorValue_RepeatedInts::~TensorValue_RepeatedInts(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TensorValue_RepeatedInts::New(CoreML::Specification::V5::TensorValue_RepeatedInts *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1CFCC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorValue_RepeatedInts>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedInts>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedInts::Clear(uint64_t this)
{
  *(_DWORD *)(this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedInts::MergePartialFromCodedStream(CoreML::Specification::V5::TensorValue_RepeatedInts *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (signed int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = *a2;
        if (*a2 >= a2[1]) {
          break;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_14:
        if (v8) {
          BOOL v12 = (v8 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12) {
          return 1;
        }
        if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = 0;
LABEL_7:
      unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
      unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_14;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        goto LABEL_14;
      }
      if (v8 != 8) {
        break;
      }
      if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(_tc_google::protobuf::internal::WireFormatLite::FieldType)5>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, v5) & 1) == 0)return 0; {
    }
      }
    if (v8 != 10) {
      goto LABEL_14;
    }
    unsigned int v10 = *a2;
    if (*a2 < a2[1] && (*v10 & 0x80000000) == 0)
    {
      int VarintSizeAsIntFallback = *v10;
      *a2 = v10 + 1;
      goto LABEL_23;
    }
    int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
    if (VarintSizeAsIntFallback < 0) {
      return 0;
    }
LABEL_23:
    int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
    if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
    {
      while (1)
      {
        unsigned int v14 = *a2;
        if (*a2 >= a2[1]) {
          break;
        }
        int v15 = *v14;
        if (*v14 < 0) {
          goto LABEL_28;
        }
        *a2 = v14 + 1;
LABEL_29:
        signed int v17 = *((_DWORD *)this + 4);
        if (v17 == *((_DWORD *)this + 5))
        {
          _tc_google::protobuf::RepeatedField<float>::Reserve((unsigned int *)v5, v17 + 1);
          signed int v17 = *v5;
        }
        uint64_t v18 = *((void *)this + 3);
        *((_DWORD *)this + 4) = v17 + 1;
        *(_DWORD *)(v18 + 4 * v17 + 8) = v15;
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) <= 0) {
          goto LABEL_32;
        }
      }
      int v15 = 0;
LABEL_28:
      uint64_t Varint32Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback((_tc_google::protobuf::io::CodedInputStream *)a2, v15);
      int v15 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
      goto LABEL_29;
    }
LABEL_32:
    _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
  }
}

uint64_t _tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(_tc_google::protobuf::internal::WireFormatLite::FieldType)5>(uint64_t a1, unsigned int a2, _tc_google::protobuf::io::CodedInputStream *a3, signed int *a4)
{
  uint64_t v7 = *(char **)a3;
  if (*(void *)a3 >= *((void *)a3 + 1))
  {
    int v8 = 0;
  }
  else
  {
    int v8 = *v7;
    if ((*v7 & 0x80000000) == 0)
    {
      *(void *)a3 = v7 + 1;
      goto LABEL_6;
    }
  }
  uint64_t Varint32Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a3, v8);
  int v8 = Varint32Fallback;
  if (Varint32Fallback < 0) {
    return 0;
  }
LABEL_6:
  signed int v10 = *a4;
  if (*a4 == a4[1])
  {
    _tc_google::protobuf::RepeatedField<float>::Reserve((unsigned int *)a4, v10 + 1);
    signed int v10 = *a4;
  }
  uint64_t v11 = *((void *)a4 + 1);
  *a4 = v10 + 1;
  *(_DWORD *)(v11 + 4 * v10 + 8) = v8;
  int v12 = a4[1] - *a4;
  if (v12 >= 1)
  {
    int v13 = v12 + 1;
    while (1)
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14) {
          return 1;
        }
        signed int v17 = *(char **)a3;
        unint64_t v14 = *((void *)a3 + 1);
        if ((int)(v14 - *(void *)a3) < 2
          || (a2 & 0x7F | 0x80) != *v17
          || v17[1] != (a2 >> 7))
        {
          return 1;
        }
        int v16 = v17 + 2;
      }
      else
      {
        int v15 = *(char **)a3;
        unint64_t v14 = *((void *)a3 + 1);
        if (*(void *)a3 >= v14 || *v15 != a2) {
          return 1;
        }
        int v16 = v15 + 1;
      }
      *(void *)a3 = v16;
      if ((unint64_t)v16 >= v14) {
        break;
      }
      int v18 = *v16;
      if (*v16 < 0) {
        goto LABEL_23;
      }
      *(void *)a3 = v16 + 1;
LABEL_25:
      uint64_t v20 = *a4;
      *a4 = v20 + 1;
      *(_DWORD *)(v11 + 4 * v20 + 8) = v18;
      if (--v13 <= 1) {
        return 1;
      }
    }
    int v18 = 0;
LABEL_23:
    uint64_t v19 = _tc_google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a3, v18);
    if (v19 < 0) {
      return 0;
    }
    int v18 = v19;
    uint64_t v11 = *((void *)a4 + 1);
    goto LABEL_25;
  }
  return 1;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedInts::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(int *)(*(void *)(v3 + 24) + 4 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            LODWORD(v1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *(_DWORD *)(*(void *)(v3 + 24) + 4 * i + 8);
            int v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedInts::ByteSizeLong(CoreML::Specification::V5::TensorValue_RepeatedInts *this)
{
  uint64_t v2 = _tc_google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 4);
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  uint64_t result = v4 + v2;
  *((_DWORD *)this + 8) = v3;
  *((_DWORD *)this + 9) = result;
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedInts::IsInitialized(CoreML::Specification::V5::TensorValue_RepeatedInts *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorValue_RepeatedInts::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorValue.RepeatedInts");
}

CoreML::Specification::V5::TensorValue_RepeatedLongInts *CoreML::Specification::V5::TensorValue_RepeatedLongInts::TensorValue_RepeatedLongInts(CoreML::Specification::V5::TensorValue_RepeatedLongInts *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75B070;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::V5::TensorValue_RepeatedLongInts *)&CoreML::Specification::V5::_TensorValue_RepeatedLongInts_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F1D5E4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorValue_RepeatedLongInts::~TensorValue_RepeatedLongInts(CoreML::Specification::V5::TensorValue_RepeatedLongInts *this)
{
  *(void *)this = &unk_26D75B070;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TensorValue_RepeatedLongInts::~TensorValue_RepeatedLongInts(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TensorValue_RepeatedLongInts::New(CoreML::Specification::V5::TensorValue_RepeatedLongInts *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1D6F8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorValue_RepeatedLongInts>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedLongInts>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedLongInts::Clear(uint64_t this)
{
  *(_DWORD *)(this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedLongInts::MergePartialFromCodedStream(CoreML::Specification::V5::TensorValue_RepeatedLongInts *this, char **a2, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        int v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *a2 = v10 + 1;
        }
        int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            uint64_t v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              unint64_t Varint64Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v17 & 1) == 0) {
                return 0;
              }
              unint64_t v15 = Varint64Fallback;
            }
            else
            {
              unint64_t v15 = *v14;
              *a2 = v14 + 1;
            }
            signed int v18 = *((_DWORD *)this + 4);
            if (v18 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<double>::Reserve(v5, v18 + 1);
              signed int v18 = *v5;
            }
            uint64_t v19 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v18 + 1;
            *(void *)(v19 + 8 * v18 + 8) = v15;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t _tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(_tc_google::protobuf::internal::WireFormatLite::FieldType)3>(uint64_t a1, unsigned int a2, _tc_google::protobuf::io::CodedInputStream *a3, uint64_t a4)
{
  uint64_t v7 = *(char **)a3;
  if (*(void *)a3 >= *((void *)a3 + 1) || *v7 < 0)
  {
    unint64_t Varint64Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a3);
    if ((v10 & 1) == 0) {
      return 0;
    }
    unint64_t v8 = Varint64Fallback;
  }
  else
  {
    unint64_t v8 = *v7;
    *(void *)a3 = v7 + 1;
  }
  signed int v12 = *(_DWORD *)a4;
  int v13 = *(_DWORD *)(a4 + 4);
  if (*(_DWORD *)a4 == v13)
  {
    _tc_google::protobuf::RepeatedField<double>::Reserve((unsigned int *)a4, v12 + 1);
    signed int v12 = *(_DWORD *)a4;
    int v13 = *(_DWORD *)(a4 + 4);
  }
  uint64_t v14 = *(void *)(a4 + 8);
  signed int v15 = v12 + 1;
  *(_DWORD *)a4 = v12 + 1;
  *(void *)(v14 + 8 * v12 + 8) = v8;
  if (v13 - (v12 + 1) >= 1)
  {
    int v16 = v13 - v12;
    do
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14) {
          return 1;
        }
        uint64_t v20 = *(char **)a3;
        unint64_t v17 = *((void *)a3 + 1);
        if ((int)(v17 - *(void *)a3) < 2
          || (a2 & 0x7F | 0x80) != *v20
          || v20[1] != (a2 >> 7))
        {
          return 1;
        }
        uint64_t v19 = v20 + 2;
      }
      else
      {
        signed int v18 = *(char **)a3;
        unint64_t v17 = *((void *)a3 + 1);
        if (*(void *)a3 >= v17 || *v18 != a2) {
          return 1;
        }
        uint64_t v19 = v18 + 1;
      }
      *(void *)a3 = v19;
      if ((unint64_t)v19 >= v17 || *v19 < 0)
      {
        unint64_t v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a3);
        if ((v22 & 1) == 0) {
          return 0;
        }
        uint64_t v14 = *(void *)(a4 + 8);
        signed int v15 = *(_DWORD *)a4;
      }
      else
      {
        unint64_t v21 = *v19;
        *(void *)a3 = v19 + 1;
      }
      uint64_t v23 = v14 + 8 * v15++;
      *(_DWORD *)a4 = v15;
      *(void *)(v23 + 8) = v21;
      --v16;
    }
    while (v16 > 1);
  }
  return 1;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedLongInts::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = _tc_google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            signed int v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            signed int v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedLongInts::ByteSizeLong(CoreML::Specification::V5::TensorValue_RepeatedLongInts *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedLongInts::IsInitialized(CoreML::Specification::V5::TensorValue_RepeatedLongInts *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorValue_RepeatedLongInts::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorValue.RepeatedLongInts");
}

CoreML::Specification::V5::TensorValue_RepeatedBools *CoreML::Specification::V5::TensorValue_RepeatedBools::TensorValue_RepeatedBools(CoreML::Specification::V5::TensorValue_RepeatedBools *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D75B108;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::V5::TensorValue_RepeatedBools *)&CoreML::Specification::V5::_TensorValue_RepeatedBools_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_223F1DD0C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorValue_RepeatedBools::~TensorValue_RepeatedBools(CoreML::Specification::V5::TensorValue_RepeatedBools *this)
{
  *(void *)this = &unk_26D75B108;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TensorValue_RepeatedBools::~TensorValue_RepeatedBools(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TensorValue_RepeatedBools::New(CoreML::Specification::V5::TensorValue_RepeatedBools *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1DE20(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorValue_RepeatedBools>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedBools>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBools::Clear(uint64_t this)
{
  *(_DWORD *)(this + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBools::MergePartialFromCodedStream(CoreML::Specification::V5::TensorValue_RepeatedBools *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((_tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(_tc_google::protobuf::internal::WireFormatLite::FieldType)8>(1, 0xAu, (_tc_google::protobuf::io::CodedInputStream *)a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        int v10 = *a2;
        if (*a2 >= a2[1] || *v10 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *a2 = v10 + 1;
        }
        int v13 = _tc_google::protobuf::io::CodedInputStream::PushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) >= 1)
        {
          do
          {
            uint64_t v14 = *a2;
            if (*a2 >= a2[1] || *v14 < 0)
            {
              unint64_t Varint64Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback((_tc_google::protobuf::io::CodedInputStream *)a2);
              if ((v16 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v14;
              *a2 = v14 + 1;
            }
            BOOL v17 = Varint64Fallback != 0;
            signed int v18 = *((_DWORD *)this + 4);
            if (v18 == *((_DWORD *)this + 5))
            {
              _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v5, v18 + 1);
              signed int v18 = *v5;
            }
            uint64_t v19 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v18 + 1;
            *(unsigned char *)(v19 + v18 + 8) = v17;
          }
          while ((int)_tc_google::protobuf::io::CodedInputStream::BytesUntilLimit((_tc_google::protobuf::io::CodedInputStream *)a2) > 0);
        }
        _tc_google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v13);
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t _tc_google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(_tc_google::protobuf::internal::WireFormatLite::FieldType)8>(uint64_t a1, unsigned int a2, _tc_google::protobuf::io::CodedInputStream *a3, uint64_t a4)
{
  uint64_t v7 = *(char **)a3;
  if (*(void *)a3 >= *((void *)a3 + 1) || *v7 < 0)
  {
    unint64_t Varint64Fallback = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a3);
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    unint64_t Varint64Fallback = *v7;
    *(void *)a3 = v7 + 1;
  }
  BOOL v11 = Varint64Fallback != 0;
  signed int v12 = *(_DWORD *)a4;
  int v13 = *(_DWORD *)(a4 + 4);
  if (*(_DWORD *)a4 == v13)
  {
    _tc_google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)a4, v12 + 1);
    signed int v12 = *(_DWORD *)a4;
    int v13 = *(_DWORD *)(a4 + 4);
  }
  uint64_t v14 = *(void *)(a4 + 8);
  signed int v15 = v12 + 1;
  *(_DWORD *)a4 = v12 + 1;
  *(unsigned char *)(v14 + v12 + 8) = v11;
  if (v13 - (v12 + 1) >= 1)
  {
    int v16 = v13 - v12;
    do
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14) {
          return 1;
        }
        uint64_t v20 = *(char **)a3;
        unint64_t v17 = *((void *)a3 + 1);
        if ((int)(v17 - *(void *)a3) < 2
          || (a2 & 0x7F | 0x80) != *v20
          || v20[1] != (a2 >> 7))
        {
          return 1;
        }
        uint64_t v19 = v20 + 2;
      }
      else
      {
        signed int v18 = *(char **)a3;
        unint64_t v17 = *((void *)a3 + 1);
        if (*(void *)a3 >= v17 || *v18 != a2) {
          return 1;
        }
        uint64_t v19 = v18 + 1;
      }
      *(void *)a3 = v19;
      if ((unint64_t)v19 >= v17 || *v19 < 0)
      {
        unint64_t v21 = _tc_google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a3);
        if ((v22 & 1) == 0) {
          return 0;
        }
        uint64_t v14 = *(void *)(a4 + 8);
        signed int v15 = *(_DWORD *)a4;
      }
      else
      {
        unint64_t v21 = *v19;
        *(void *)a3 = v19 + 1;
      }
      uint64_t v23 = v14 + v15++;
      *(_DWORD *)a4 = v15;
      *(unsigned char *)(v23 + 8) = v21 != 0;
      --v16;
    }
    while (v16 > 1);
  }
  return 1;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBools::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    if (*((int *)a2 + 4) < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, 0xAu);
      int v6 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v6 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v6;
    }
    unsigned int v7 = *(_DWORD *)(v5 + 32);
    if (v6 < 5)
    {
      _tc_google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v7);
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 1);
      if (v7 < 0x80)
      {
        unsigned int v10 = *(_DWORD *)(v5 + 32);
        char v9 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        char v9 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v9++ = v7 | 0x80;
          unsigned int v10 = v7 >> 7;
          unsigned int v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
      }
      *char v9 = v10;
      int v12 = v9 - v8 + 1;
      *((void *)a2 + 1) += v12;
      *((_DWORD *)a2 + 4) -= v12;
    }
    uint64_t v13 = *(void *)(v5 + 24);
    if (v13) {
      uint64_t v14 = (_tc_google::protobuf::internal::WireFormatLite *)(v13 + 8);
    }
    else {
      uint64_t v14 = 0;
    }
    signed int v15 = (const BOOL *)*(unsigned int *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteBoolArray(v14, v15, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBools::ByteSizeLong(CoreML::Specification::V5::TensorValue_RepeatedBools *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if (v1)
  {
    if ((v1 & 0x80000000) != 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 + v1;
  *((_DWORD *)this + 8) = v1;
  *((_DWORD *)this + 9) = v3;
  return v3;
}

unint64_t *CoreML::Specification::V5::TensorValue_RepeatedBools::MergeFrom(unint64_t *this, const CoreML::Specification::V5::TensorValue_RepeatedBools *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)_tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    int v7 = *((_DWORD *)v3 + 4);
    int v6 = (unsigned int *)(v3 + 2);
    _tc_google::protobuf::RepeatedField<BOOL>::Reserve(v6, v7 + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v6 + 1) + (int)*v6 + 8), (const void *)(*((void *)a2 + 3) + 8), *((int *)a2 + 4));
    *v6 += *((_DWORD *)a2 + 4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBools::IsInitialized(CoreML::Specification::V5::TensorValue_RepeatedBools *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorValue_RepeatedBools::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorValue.RepeatedBools");
}

CoreML::Specification::V5::TensorValue_RepeatedStrings *CoreML::Specification::V5::TensorValue_RepeatedStrings::TensorValue_RepeatedStrings(CoreML::Specification::V5::TensorValue_RepeatedStrings *this)
{
  *(void *)this = &unk_26D75B1A0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::V5::TensorValue_RepeatedStrings *)&CoreML::Specification::V5::_TensorValue_RepeatedStrings_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  return this;
}

void sub_223F1E424(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorValue_RepeatedStrings::~TensorValue_RepeatedStrings(CoreML::Specification::V5::TensorValue_RepeatedStrings *this)
{
  *(void *)this = &unk_26D75B1A0;
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TensorValue_RepeatedStrings::~TensorValue_RepeatedStrings(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TensorValue_RepeatedStrings::New(CoreML::Specification::V5::TensorValue_RepeatedStrings *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1E524(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorValue_RepeatedStrings>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedStrings>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedStrings::Clear(CoreML::Specification::V5::TensorValue_RepeatedStrings *this)
{
  return _tc_google::protobuf::internal::RepeatedPtrFieldBase::Clear<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 16);
}

BOOL CoreML::Specification::V5::TensorValue_RepeatedStrings::MergePartialFromCodedStream(CoreML::Specification::V5::TensorValue_RepeatedStrings *this, char **a2, unsigned int a3)
{
  int v5 = (_tc_google::protobuf::Arena **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      int v6 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v7 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v14 = *((_DWORD *)this + 7);
        goto LABEL_23;
      }
      uint64_t v13 = *((int *)this + 6);
      int v14 = *v12;
      if ((int)v13 >= *v12)
      {
        if (v14 != *((_DWORD *)this + 7))
        {
LABEL_24:
          *int v12 = v14 + 1;
          int v16 = *v5;
          if (!*v5) {
            operator new();
          }
          Aligned->__r_.__value_.__l.__size_ = 0;
          Aligned->__r_.__value_.__r.__words[2] = 0;
          Aligned->__r_.__value_.__r.__words[0] = 0;
          _tc_google::protobuf::Arena::AddListNode(v16, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<std::string>);
          uint64_t v17 = *((void *)this + 4);
          uint64_t v18 = *((int *)this + 6);
          *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v18 + 1;
          *(void *)(v17 + 8 * v18 + 8) = Aligned;
          goto LABEL_27;
        }
LABEL_23:
        _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v5, v14 + 1);
        int v12 = (int *)*((void *)this + 4);
        int v14 = *v12;
        goto LABEL_24;
      }
      *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v13 + 1;
      Aligned = *(std::string **)&v12[2 * v13 + 2];
LABEL_27:
      BOOL result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, Aligned);
      if (!result) {
        return result;
      }
      uint64_t v20 = *((void *)this + 4);
      unint64_t v21 = *(unsigned __int8 **)(v20 + 8 * *((int *)this + 6));
      if ((char)v21[23] < 0)
      {
        unint64_t v21 = *(unsigned __int8 **)v21;
        char v22 = *(const char **)(*(void *)(v20 + 8 * *((int *)this + 6)) + 8);
      }
      else
      {
        char v22 = (const char *)v21[23];
      }
      if (!_tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v21, v22, 0, (uint64_t)"CoreML.Specification.V5.TensorValue.RepeatedStrings.values"))return 0; {
    }
      }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedStrings::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v2 = *(unsigned int *)(this + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = -v2;
    uint64_t v6 = 1;
    do
    {
      uint64_t v7 = *(unsigned __int8 **)(*(void *)(v4 + 32) + 8 * v6);
      if ((char)v7[23] < 0)
      {
        uint64_t v7 = *(unsigned __int8 **)v7;
        unint64_t v8 = *(const char **)(*(void *)(*(void *)(v4 + 32) + 8 * v6) + 8);
      }
      else
      {
        unint64_t v8 = (const char *)v7[23];
      }
      _tc_google::protobuf::internal::WireFormatLite::VerifyUtf8String((_tc_google::protobuf::internal *)v7, v8, 1, (uint64_t)"CoreML.Specification.V5.TensorValue.RepeatedStrings.values");
      this = _tc_google::protobuf::internal::WireFormatLite::WriteString(1, *(void *)(*(void *)(v4 + 32) + 8 * v6++), a2);
    }
    while (v5 + v6 != 1);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedStrings::ByteSizeLong(CoreML::Specification::V5::TensorValue_RepeatedStrings *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *((unsigned int *)this + 6);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*((void *)this + 4) + 8);
    uint64_t v3 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v3;
  return v3;
}

std::string *CoreML::Specification::V5::TensorValue_RepeatedStrings::MergeFrom(std::string *this, const CoreML::Specification::V5::TensorValue_RepeatedStrings *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (const std::string **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((_tc_google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedStrings::IsInitialized(CoreML::Specification::V5::TensorValue_RepeatedStrings *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorValue_RepeatedStrings::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorValue.RepeatedStrings");
}

CoreML::Specification::V5::TensorValue_RepeatedBytes *CoreML::Specification::V5::TensorValue_RepeatedBytes::TensorValue_RepeatedBytes(CoreML::Specification::V5::TensorValue_RepeatedBytes *this)
{
  *(void *)this = &unk_26D75B238;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::TensorValue_RepeatedBytes *)&CoreML::Specification::V5::_TensorValue_RepeatedBytes_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &_tc_google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return this;
}

void sub_223F1E9A0(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorValue_RepeatedBytes::~TensorValue_RepeatedBytes(CoreML::Specification::V5::TensorValue_RepeatedBytes *this)
{
  *(void *)this = &unk_26D75B238;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::V5::Value_FileValue::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;
  uint64_t vars8;

  *(void *)this = &unk_26D75B238;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::V5::Value_FileValue::SharedDtor((uint64_t)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TensorValue_RepeatedBytes::New(CoreML::Specification::V5::TensorValue_RepeatedBytes *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1EAC8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorValue_RepeatedBytes>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedBytes>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBytes::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBytes::MergePartialFromCodedStream(CoreML::Specification::V5::TensorValue_RepeatedBytes *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (*v4 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v4)) {
        return 0;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBytes::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = *(void *)(this + 16);
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v3 + 23)) {
      return this;
    }
    return _tc_google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, v3, a2);
  }
  if (*(void *)(v3 + 8)) {
    return _tc_google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, v3, a2);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBytes::ByteSizeLong(CoreML::Specification::V5::TensorValue_RepeatedBytes *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v4;
  return v4;
}

std::string *CoreML::Specification::V5::TensorValue_RepeatedBytes::MergeFrom(std::string *this, const CoreML::Specification::V5::TensorValue_RepeatedBytes *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    return this;
  }
  this = (std::string *)v3->__r_.__value_.__r.__words[2];
  if (this != (std::string *)v5)
  {
    if (this == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string)
    {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    return std::string::operator=(this, (const std::string *)v5);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue_RepeatedBytes::IsInitialized(CoreML::Specification::V5::TensorValue_RepeatedBytes *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorValue_RepeatedBytes::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorValue.RepeatedBytes");
}

CoreML::Specification::V5::TensorValue *CoreML::Specification::V5::TensorValue::TensorValue(CoreML::Specification::V5::TensorValue *this)
{
  *(void *)this = &unk_26D75B2D0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::TensorValue *)&CoreML::Specification::V5::_TensorValue_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_223F1EDEC(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TensorValue::~TensorValue(CoreML::Specification::V5::TensorValue *this)
{
  *(void *)this = &unk_26D75B2D0;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::V5::TensorValue::clear_value((uint64_t)this);
  }
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TensorValue::~TensorValue(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t CoreML::Specification::V5::TensorValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 28))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void CoreML::Specification::V5::TensorValue::New(CoreML::Specification::V5::TensorValue *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1EF88(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TensorValue>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue::MergePartialFromCodedStream(CoreML::Specification::V5::TensorValue *this, char **a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1]) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_29:
      if (v7) {
        BOOL v16 = (v7 & 7) == 4;
      }
      else {
        BOOL v16 = 1;
      }
      if (v16) {
        return 1;
      }
      if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)goto LABEL_91; {
    }
      }
    uint64_t v6 = 0;
LABEL_6:
    unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_29;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 1)
        {
          CoreML::Specification::V5::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 1;
          operator new();
        }
        char v9 = (CoreML::Specification::V5::TensorValue_RepeatedFloats *)*((void *)this + 2);
        uint64_t v17 = *a2;
        if (*a2 >= a2[1] || *v17 < 0)
        {
          int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v17;
          *a2 = v17 + 1;
        }
        unint64_t v31 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
        if ((v31 & 0x8000000000000000) != 0) {
          goto LABEL_91;
        }
        int v33 = v31;
        uint64_t result = CoreML::Specification::V5::TensorValue_RepeatedFloats::MergePartialFromCodedStream(v9, a2, v32);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 2u:
        if (v7 != 18) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::V5::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        unsigned int v10 = (CoreML::Specification::V5::TensorValue_RepeatedInts *)*((void *)this + 2);
        uint64_t v19 = *a2;
        if (*a2 >= a2[1] || *v19 < 0)
        {
          int v20 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v20 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v20 = *v19;
          *a2 = v19 + 1;
        }
        unint64_t v35 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v20);
        if ((v35 & 0x8000000000000000) != 0) {
          goto LABEL_91;
        }
        int v33 = v35;
        uint64_t result = CoreML::Specification::V5::TensorValue_RepeatedInts::MergePartialFromCodedStream(v10, a2, v36);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 3u:
        if (v7 != 26) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 3)
        {
          CoreML::Specification::V5::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 3;
          operator new();
        }
        unsigned int v11 = (CoreML::Specification::V5::TensorValue_RepeatedBools *)*((void *)this + 2);
        unint64_t v21 = *a2;
        if (*a2 >= a2[1] || *v21 < 0)
        {
          int v22 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v22 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v22 = *v21;
          *a2 = v21 + 1;
        }
        unint64_t v37 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v22);
        if ((v37 & 0x8000000000000000) != 0) {
          goto LABEL_91;
        }
        int v33 = v37;
        uint64_t result = CoreML::Specification::V5::TensorValue_RepeatedBools::MergePartialFromCodedStream(v11, a2, v38);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 4u:
        if (v7 != 34) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 4)
        {
          CoreML::Specification::V5::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 4;
          operator new();
        }
        int v12 = (CoreML::Specification::V5::TensorValue_RepeatedStrings *)*((void *)this + 2);
        uint64_t v23 = *a2;
        if (*a2 >= a2[1] || *v23 < 0)
        {
          int v24 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v24 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v24 = *v23;
          *a2 = v23 + 1;
        }
        unint64_t v39 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v24);
        if ((v39 & 0x8000000000000000) != 0) {
          goto LABEL_91;
        }
        int v33 = v39;
        uint64_t result = CoreML::Specification::V5::TensorValue_RepeatedStrings::MergePartialFromCodedStream(v12, a2, v40);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 5u:
        if (v7 != 42) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 5)
        {
          CoreML::Specification::V5::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 5;
          operator new();
        }
        uint64_t v13 = (CoreML::Specification::V5::TensorValue_RepeatedLongInts *)*((void *)this + 2);
        uint64_t v25 = *a2;
        if (*a2 >= a2[1] || *v25 < 0)
        {
          int v26 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v26 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v26 = *v25;
          *a2 = v25 + 1;
        }
        unint64_t v41 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v26);
        if ((v41 & 0x8000000000000000) != 0) {
          goto LABEL_91;
        }
        int v33 = v41;
        uint64_t result = CoreML::Specification::V5::TensorValue_RepeatedLongInts::MergePartialFromCodedStream(v13, a2, v42);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 6u:
        if (v7 != 50) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 6)
        {
          CoreML::Specification::V5::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 6;
          operator new();
        }
        int v14 = (CoreML::Specification::V5::TensorValue_RepeatedDoubles *)*((void *)this + 2);
        uint64_t v27 = *a2;
        if (*a2 >= a2[1] || *v27 < 0)
        {
          int v28 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v28 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v28 = *v27;
          *a2 = v27 + 1;
        }
        unint64_t v43 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v28);
        if ((v43 & 0x8000000000000000) != 0) {
          goto LABEL_91;
        }
        int v33 = v43;
        uint64_t result = CoreML::Specification::V5::TensorValue_RepeatedDoubles::MergePartialFromCodedStream(v14, a2, v44);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 7u:
        if (v7 != 58) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 7)
        {
          CoreML::Specification::V5::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 7;
          operator new();
        }
        signed int v15 = (CoreML::Specification::V5::TensorValue_RepeatedBytes *)*((void *)this + 2);
        unsigned int v29 = *a2;
        if (*a2 >= a2[1] || *v29 < 0)
        {
          int v30 = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
          if (v30 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v30 = *v29;
          *a2 = v29 + 1;
        }
        unint64_t v45 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v30);
        if ((v45 & 0x8000000000000000) != 0) {
          goto LABEL_91;
        }
        int v33 = v45;
        uint64_t result = CoreML::Specification::V5::TensorValue_RepeatedBytes::MergePartialFromCodedStream(v15, a2, v46);
        if (!result) {
          return result;
        }
LABEL_90:
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v33))
        {
          continue;
        }
LABEL_91:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_29;
    }
    return result;
  }
}

void sub_223F1F580(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::TensorValue::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 3)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 4)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 5)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 6)
  {
    this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 7)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)7, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TensorValue::ByteSizeLong(CoreML::Specification::V5::TensorValue *this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      uint64_t v2 = (unsigned int *)*((void *)this + 2);
      uint64_t v3 = v2[4];
      uint64_t v4 = 4 * v3;
      if (v3) {
        goto LABEL_7;
      }
      goto LABEL_3;
    case 2:
      uint64_t v7 = CoreML::Specification::V5::TensorValue_RepeatedInts::ByteSizeLong(*((CoreML::Specification::V5::TensorValue_RepeatedInts **)this
                                                                             + 2));
      goto LABEL_14;
    case 3:
      uint64_t v2 = (unsigned int *)*((void *)this + 2);
      uint64_t v4 = v2[4];
      if (v4) {
        goto LABEL_7;
      }
      goto LABEL_3;
    case 4:
      uint64_t v7 = CoreML::Specification::V5::TensorValue_RepeatedStrings::ByteSizeLong(*((CoreML::Specification::V5::TensorValue_RepeatedStrings **)this
                                                                                + 2));
      goto LABEL_14;
    case 5:
      uint64_t v7 = CoreML::Specification::V5::TensorValue_RepeatedLongInts::ByteSizeLong(*((CoreML::Specification::V5::TensorValue_RepeatedLongInts **)this
                                                                                 + 2));
      goto LABEL_14;
    case 6:
      uint64_t v2 = (unsigned int *)*((void *)this + 2);
      uint64_t v8 = v2[4];
      uint64_t v4 = 8 * v8;
      if (v8)
      {
LABEL_7:
        if ((v4 & 0x80000000) != 0) {
          uint64_t v5 = 11;
        }
        else {
          uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
LABEL_3:
        uint64_t v5 = 0;
      }
      uint64_t v10 = v5 + v4;
      v2[8] = v4;
      v2[9] = v10;
      uint64_t v9 = v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_17;
    case 7:
      uint64_t v7 = CoreML::Specification::V5::TensorValue_RepeatedBytes::ByteSizeLong(*((CoreML::Specification::V5::TensorValue_RepeatedBytes **)this
                                                                              + 2));
LABEL_14:
      uint64_t v9 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
LABEL_17:
      uint64_t result = v9 + 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  *((_DWORD *)this + boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::V5::TensorValue::IsInitialized(CoreML::Specification::V5::TensorValue *this)
{
  return 1;
}

void *CoreML::Specification::V5::TensorValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TensorValue");
}

CoreML::Specification::V5::TupleValue *CoreML::Specification::V5::TupleValue::TupleValue(CoreML::Specification::V5::TupleValue *this)
{
  *(void *)this = &unk_26D75B368;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::V5::TupleValue *)&CoreML::Specification::V5::_TupleValue_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  return this;
}

void sub_223F1F8D4(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::TupleValue::~TupleValue(CoreML::Specification::V5::TupleValue *this)
{
  *(void *)this = &unk_26D75B368;
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::TupleValue::~TupleValue(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::TupleValue::New(CoreML::Specification::V5::TupleValue *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1F9D4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::TupleValue>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TupleValue>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::TupleValue::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    uint64_t v3 = (CoreML::Specification::V5::Value **)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::V5::Value::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::V5::TupleValue::MergePartialFromCodedStream(CoreML::Specification::V5::TupleValue *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Value>::TypeHandler>((uint64_t)v4);
      int v12 = *a2;
      if (*a2 >= a2[1] || *v12 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *a2 = v12 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v15 = v14;
        uint64_t result = CoreML::Specification::V5::Value::MergePartialFromCodedStream(v11, (_tc_google::protobuf::io::CodedInputStream *)a2);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v15))
        {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::TupleValue::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::TupleValue::ByteSizeLong(CoreML::Specification::V5::TupleValue *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::V5::Value::ByteSizeLong(*(CoreML::Specification::V5::Value **)(*((void *)this + 4)
                                                                                               + 8 * v3
                                                                                               + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::V5::TupleValue::IsInitialized(CoreML::Specification::V5::TupleValue *this)
{
  return 1;
}

void *CoreML::Specification::V5::TupleValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.TupleValue");
}

CoreML::Specification::V5::ListValue *CoreML::Specification::V5::ListValue::ListValue(CoreML::Specification::V5::ListValue *this)
{
  *(void *)this = &unk_26D75B400;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::V5::ListValue *)&CoreML::Specification::V5::_ListValue_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  return this;
}

void sub_223F1FD08(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::ListValue::~ListValue(CoreML::Specification::V5::ListValue *this)
{
  *(void *)this = &unk_26D75B400;
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::ListValue::~ListValue(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::ListValue::New(CoreML::Specification::V5::ListValue *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F1FE08(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::ListValue>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::ListValue>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::ListValue::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    int v3 = (CoreML::Specification::V5::Value **)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::V5::Value::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::V5::ListValue::MergePartialFromCodedStream(CoreML::Specification::V5::ListValue *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Value>::TypeHandler>((uint64_t)v4);
      int v12 = *a2;
      if (*a2 >= a2[1] || *v12 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *a2 = v12 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v15 = v14;
        uint64_t result = CoreML::Specification::V5::Value::MergePartialFromCodedStream(v11, (_tc_google::protobuf::io::CodedInputStream *)a2);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v15))
        {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::ListValue::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::ListValue::ByteSizeLong(CoreML::Specification::V5::ListValue *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::V5::Value::ByteSizeLong(*(CoreML::Specification::V5::Value **)(*((void *)this + 4)
                                                                                               + 8 * v3
                                                                                               + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::V5::ListValue::IsInitialized(CoreML::Specification::V5::ListValue *this)
{
  return 1;
}

void *CoreML::Specification::V5::ListValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.ListValue");
}

CoreML::Specification::V5::DictionaryValue_KeyValuePair *CoreML::Specification::V5::DictionaryValue_KeyValuePair::DictionaryValue_KeyValuePair(CoreML::Specification::V5::DictionaryValue_KeyValuePair *this)
{
  *(void *)this = &unk_26D75B498;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::V5::DictionaryValue_KeyValuePair *)&CoreML::Specification::V5::_DictionaryValue_KeyValuePair_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_223F2012C(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::DictionaryValue_KeyValuePair::~DictionaryValue_KeyValuePair(CoreML::Specification::V5::DictionaryValue_KeyValuePair *this)
{
  *(void *)this = &unk_26D75B498;
  CoreML::Specification::V5::DictionaryValue_KeyValuePair::SharedDtor((uint64_t *)this);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::DictionaryValue_KeyValuePair::~DictionaryValue_KeyValuePair(this);
  JUMPOUT(0x22A614FA0);
}

uint64_t *CoreML::Specification::V5::DictionaryValue_KeyValuePair::SharedDtor(uint64_t *this)
{
  if (this != &CoreML::Specification::V5::_DictionaryValue_KeyValuePair_default_instance_)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (uint64_t *)v1[3];
    if (this)
    {
      int v3 = *(uint64_t (**)(void))(*this + 8);
      return (uint64_t *)v3();
    }
  }
  return this;
}

void CoreML::Specification::V5::DictionaryValue_KeyValuePair::New(CoreML::Specification::V5::DictionaryValue_KeyValuePair *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F202C0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::DictionaryValue_KeyValuePair>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::DictionaryValue_KeyValuePair>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::DictionaryValue_KeyValuePair::Clear(CoreML::Specification::V5::DictionaryValue_KeyValuePair *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t CoreML::Specification::V5::DictionaryValue_KeyValuePair::MergePartialFromCodedStream(CoreML::Specification::V5::DictionaryValue_KeyValuePair *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_6:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      uint64_t v10 = (CoreML::Specification::V5::Value *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v11;
        *a2 = v11 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v15 = v14;
        uint64_t result = CoreML::Specification::V5::Value::MergePartialFromCodedStream(v10, (_tc_google::protobuf::io::CodedInputStream *)a2);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v15))
        {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      uint64_t v10 = (CoreML::Specification::V5::Value *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F20514(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::V5::DictionaryValue_KeyValuePair::SerializeWithCachedSizes(uint64_t *this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::V5::_DictionaryValue_KeyValuePair_default_instance_)
  {
    uint64_t v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7)
    {
      return (uint64_t *)_tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::V5::DictionaryValue_KeyValuePair::ByteSizeLong(CoreML::Specification::V5::DictionaryValue_KeyValuePair *this)
{
  if (this == (CoreML::Specification::V5::DictionaryValue_KeyValuePair *)&CoreML::Specification::V5::_DictionaryValue_KeyValuePair_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::V5::Value *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::V5::Value::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::V5::Value *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::V5::Value::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

std::string *CoreML::Specification::V5::DictionaryValue_KeyValuePair::MergeFrom(std::string *this, const CoreML::Specification::V5::DictionaryValue_KeyValuePair *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = _tc_google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::V5::DictionaryValue_KeyValuePair *)&CoreML::Specification::V5::_DictionaryValue_KeyValuePair_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      uint64_t v5 = (CoreML::Specification::V5::Value *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::V5::Value::MergeFrom(v5, *((const CoreML::Specification::V5::Value **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::V5::Value *)*((void *)a2 + 3);
      uint64_t data = (CoreML::Specification::V5::Value *)v3[1].__r_.__value_.__l.__data_;
      return (std::string *)CoreML::Specification::V5::Value::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_223F2075C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::V5::DictionaryValue_KeyValuePair::IsInitialized(CoreML::Specification::V5::DictionaryValue_KeyValuePair *this)
{
  return 1;
}

void *CoreML::Specification::V5::DictionaryValue_KeyValuePair::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.DictionaryValue.KeyValuePair");
}

CoreML::Specification::V5::DictionaryValue *CoreML::Specification::V5::DictionaryValue::DictionaryValue(CoreML::Specification::V5::DictionaryValue *this)
{
  *(void *)this = &unk_26D75B530;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::V5::DictionaryValue *)&CoreML::Specification::V5::_DictionaryValue_default_instance_) {
    CoreML::Specification::V5::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = 0;
  return this;
}

void sub_223F20810(_Unwind_Exception *a1)
{
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>(v2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::V5::DictionaryValue::~DictionaryValue(CoreML::Specification::V5::DictionaryValue *this)
{
  *(void *)this = &unk_26D75B530;
  _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::GLMRegressor_DoubleArray>::TypeHandler>((void *)this + 2);
  _tc_google::protobuf::internal::InternalMetadataWithArenaBase<std::string,_tc_google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::V5::DictionaryValue::~DictionaryValue(this);
  JUMPOUT(0x22A614FA0);
}

void CoreML::Specification::V5::DictionaryValue::New(CoreML::Specification::V5::DictionaryValue *this, _tc_google::protobuf::Arena *a2)
{
}

void sub_223F20910(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<CoreML::Specification::V5::DictionaryValue>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::DictionaryValue>);
  }
  return result;
}

uint64_t CoreML::Specification::V5::DictionaryValue::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    uint64_t v3 = (CoreML::Specification::V5::DictionaryValue_KeyValuePair **)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::V5::DictionaryValue_KeyValuePair::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::V5::DictionaryValue::MergePartialFromCodedStream(CoreML::Specification::V5::DictionaryValue *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        uint64_t v6 = 0;
LABEL_7:
        unsigned int TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = _tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::DictionaryValue_KeyValuePair>::TypeHandler>((uint64_t)v4);
      int v12 = *a2;
      if (*a2 >= a2[1] || *v12 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *a2 = v12 + 1;
      }
      unint64_t v14 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v14 & 0x8000000000000000) == 0)
      {
        int v16 = v14;
        uint64_t result = CoreML::Specification::V5::DictionaryValue_KeyValuePair::MergePartialFromCodedStream(v11, a2, v15);
        if (!result) {
          return result;
        }
        if (_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v16))
        {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::V5::DictionaryValue::SerializeWithCachedSizes(uint64_t this, _tc_google::protobuf::io::CodedOutputStream *a2, uint64_t a3, _tc_google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = _tc_google::protobuf::internal::WireFormatLite::WriteMessage((_tc_google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::V5::DictionaryValue::ByteSizeLong(CoreML::Specification::V5::DictionaryValue *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::V5::DictionaryValue_KeyValuePair::ByteSizeLong(*(CoreML::Specification::V5::DictionaryValue_KeyValuePair **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::V5::DictionaryValue::IsInitialized(CoreML::Specification::V5::DictionaryValue *this)
{
  return 1;
}

void *CoreML::Specification::V5::DictionaryValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.V5.DictionaryValue");
}

void CoreML::Specification::V5::Program::New(CoreML::Specification::V5::Program *this)
{
}

uint64_t CoreML::Specification::V5::Program::GetCachedSize(CoreML::Specification::V5::Program *this)
{
  return *((unsigned int *)this + 24);
}

void CoreML::Specification::V5::Function::New(CoreML::Specification::V5::Function *this)
{
}

uint64_t CoreML::Specification::V5::Function::GetCachedSize(CoreML::Specification::V5::Function *this)
{
  return *((unsigned int *)this + 28);
}

void CoreML::Specification::V5::Block::New(CoreML::Specification::V5::Block *this)
{
}

uint64_t CoreML::Specification::V5::Block::GetCachedSize(CoreML::Specification::V5::Block *this)
{
  return *((unsigned int *)this + 30);
}

void CoreML::Specification::V5::Argument_Binding::New(CoreML::Specification::V5::Argument_Binding *this)
{
}

void CoreML::Specification::V5::Argument::New(CoreML::Specification::V5::Argument *this)
{
}

uint64_t CoreML::Specification::V5::Argument::GetCachedSize(CoreML::Specification::V5::Argument *this)
{
  return *((unsigned int *)this + 10);
}

void CoreML::Specification::V5::Operation::New(CoreML::Specification::V5::Operation *this)
{
}

uint64_t CoreML::Specification::V5::Operation::GetCachedSize(CoreML::Specification::V5::Operation *this)
{
  return *((unsigned int *)this + 34);
}

void CoreML::Specification::V5::NamedValueType::New(CoreML::Specification::V5::NamedValueType *this)
{
}

uint64_t CoreML::Specification::V5::NamedValueType::GetCachedSize(CoreML::Specification::V5::NamedValueType *this)
{
  return *((unsigned int *)this + 8);
}

void CoreML::Specification::V5::ValueType::New(CoreML::Specification::V5::ValueType *this)
{
}

void CoreML::Specification::V5::TensorType::New(CoreML::Specification::V5::TensorType *this)
{
}

uint64_t CoreML::Specification::V5::TensorType::GetCachedSize(CoreML::Specification::V5::TensorType *this)
{
  return *((unsigned int *)this + 21);
}

void CoreML::Specification::V5::TupleType::New(CoreML::Specification::V5::TupleType *this)
{
}

void CoreML::Specification::V5::ListType::New(CoreML::Specification::V5::ListType *this)
{
}

void CoreML::Specification::V5::DictionaryType::New(CoreML::Specification::V5::DictionaryType *this)
{
}

void CoreML::Specification::V5::Dimension_ConstantDimension::New(CoreML::Specification::V5::Dimension_ConstantDimension *this)
{
}

void CoreML::Specification::V5::Dimension_UnknownDimension::New(CoreML::Specification::V5::Dimension_UnknownDimension *this)
{
}

uint64_t CoreML::Specification::V5::Dimension_UnknownDimension::GetCachedSize(CoreML::Specification::V5::Dimension_UnknownDimension *this)
{
  return *((unsigned int *)this + 5);
}

void CoreML::Specification::V5::Dimension::New(CoreML::Specification::V5::Dimension *this)
{
}

void CoreML::Specification::V5::Value_ImmediateValue::New(CoreML::Specification::V5::Value_ImmediateValue *this)
{
}

void CoreML::Specification::V5::Value_FileValue::New(CoreML::Specification::V5::Value_FileValue *this)
{
}

void CoreML::Specification::V5::Value_BlobFileValue::New(CoreML::Specification::V5::Value_BlobFileValue *this)
{
}

void CoreML::Specification::V5::Value::New(CoreML::Specification::V5::Value *this)
{
}

void CoreML::Specification::V5::TensorValue_RepeatedFloats::New(CoreML::Specification::V5::TensorValue_RepeatedFloats *this)
{
}

void CoreML::Specification::V5::TensorValue_RepeatedDoubles::New(CoreML::Specification::V5::TensorValue_RepeatedDoubles *this)
{
}

void CoreML::Specification::V5::TensorValue_RepeatedInts::New(CoreML::Specification::V5::TensorValue_RepeatedInts *this)
{
}

void CoreML::Specification::V5::TensorValue_RepeatedLongInts::New(CoreML::Specification::V5::TensorValue_RepeatedLongInts *this)
{
}

void CoreML::Specification::V5::TensorValue_RepeatedBools::New(CoreML::Specification::V5::TensorValue_RepeatedBools *this)
{
}

void CoreML::Specification::V5::TensorValue_RepeatedStrings::New(CoreML::Specification::V5::TensorValue_RepeatedStrings *this)
{
}

void CoreML::Specification::V5::TensorValue_RepeatedBytes::New(CoreML::Specification::V5::TensorValue_RepeatedBytes *this)
{
}

void CoreML::Specification::V5::TensorValue::New(CoreML::Specification::V5::TensorValue *this)
{
}

void CoreML::Specification::V5::TupleValue::New(CoreML::Specification::V5::TupleValue *this)
{
}

void CoreML::Specification::V5::ListValue::New(CoreML::Specification::V5::ListValue *this)
{
}

void CoreML::Specification::V5::DictionaryValue_KeyValuePair::New(CoreML::Specification::V5::DictionaryValue_KeyValuePair *this)
{
}

void CoreML::Specification::V5::DictionaryValue::New(CoreML::Specification::V5::DictionaryValue *this)
{
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(void *a1)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::clear((uint64_t)a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x22A614FA0](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

double _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::clear(uint64_t a1)
{
  _tc_google::protobuf::Map<std::string,std::string>::begin(a1, &v3);
  while ((void)v3)
  {
    long long v5 = v3;
    uint64_t v6 = v4;
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::erase(a1, &v5, (uint64_t)&v7);
    double result = *(double *)&v7;
    long long v3 = v7;
    uint64_t v4 = v8;
  }
  return result;
}

__n128 _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::erase@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(void *)a1)
  {
    uint64_t v6 = *(void *)(*a2 + 24);
    if (v6)
    {
      uint64_t v7 = _tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value>::~MapPair(v6);
      MEMORY[0x22A614FA0](v7, 0x10B2C40CC7398DALL);
    }
  }
  long long v9 = *(_OWORD *)a2;
  uint64_t v10 = a2[2];
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(a2);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::erase(*(void **)(a1 + 16), (uint64_t)&v9);
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)a3 = *(_OWORD *)a2;
  *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = a2[2];
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::erase(void *a1, uint64_t a2)
{
  BOOL v4 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::revalidate_if_necessary(a2, &v12);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void ***)a2;
  uint64_t v7 = a1[4];
  uint64_t v8 = *(void *)(v7 + 8 * v5);
  if (v4)
  {
    uint64_t v9 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::EraseFromLinkedList((uint64_t)a1, (uint64_t)v6, *(void *)(v7 + 8 * v5));
LABEL_5:
    *(void *)(a1[4] + 8 * v5) = v9;
    goto LABEL_6;
  }
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::__erase_unique<std::string *>(v8, (const void ***)(v12 + 32));
  if (!*(void *)(v8 + 24))
  {
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyTree((uint64_t)a1, (void **)v8);
    uint64_t v9 = 0;
    *(void *)(a1[4] + ((8 * v5) | 8)) = 0;
    v5 &= ~1uLL;
    goto LABEL_5;
  }
LABEL_6:
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyNode((uint64_t)a1, v6);
  --*a1;
  if (v5 == a1[3])
  {
    unint64_t v10 = a1[1];
    if (v5 < v10)
    {
      uint64_t v11 = a1[4];
      do
      {
        if (*(void *)(v11 + 8 * v5)) {
          break;
        }
        a1[3] = ++v5;
      }
      while (v10 != v5);
    }
  }
}

uint64_t _tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value>::~MapPair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::EraseFromLinkedList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = *(void *)(a3 + 32);
  if (v3 == a2) {
    return v4;
  }
  *(void *)(v3 + 32) = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::EraseFromLinkedList();
  return v3;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyTree(uint64_t a1, void **a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy((uint64_t)a2, a2[1]);
  if (!v3)
  {
    operator delete(a2);
  }
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyNode(uint64_t a1, void **__p)
{
  if (*((char *)__p + 23) < 0) {
    operator delete(*__p);
  }
  if (!*(void *)(a1 + 40))
  {
    operator delete(__p);
  }
}

uint64_t std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::__erase_unique<std::string *>(uint64_t a1, const void ***a2)
{
  uint64_t v3 = (uint64_t *)std::__tree<std::string *,_tc_google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::find<std::string *>(a1, a2);
  if ((uint64_t *)(a1 + 8) == v3) {
    return 0;
  }
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::erase(a1, v3);
  return 1;
}

uint64_t *std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::erase(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::__remove_node_pointer(a1, a2);
  if (!*(void *)(a1 + 16)) {
    operator delete(a2);
  }
  return v4;
}

uint64_t *std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::__remove_node_pointer(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = a2;
    do
    {
      uint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      uint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*(uint64_t **)a1 == a2) {
    *(void *)a1 = v3;
  }
  --*(void *)(a1 + 24);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 8), a2);
  return v3;
}

void std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy(a1, *a2);
    std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy(a1, a2[1]);
    if (!*(void *)(a1 + 16))
    {
      operator delete(a2);
    }
  }
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::~InnerMap(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::clear((void *)a1);
    if (!*(void *)(a1 + 40)) {
      operator delete(*(void **)(a1 + 32));
    }
  }
  return a1;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::clear(void *a1)
{
  unint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = *(void *)(v4 + 8 * v3);
      if (v5)
      {
        if (v5 == *(void *)(v4 + 8 * (v3 ^ 1)))
        {
          uint64_t v7 = v3 + 1;
          *(void *)(v4 + 8 * (v3 + 1)) = 0;
          *(void *)(a1[4] + 8 * v3) = 0;
          uint64_t v8 = *(uint64_t **)v5;
          do
          {
            uint64_t v9 = (void **)v8[4];
            unint64_t v10 = (uint64_t *)v8[1];
            uint64_t v11 = v8;
            if (v10)
            {
              do
              {
                uint64_t v12 = v10;
                unint64_t v10 = (uint64_t *)*v10;
              }
              while (v10);
            }
            else
            {
              do
              {
                uint64_t v12 = (uint64_t *)v11[2];
                BOOL v13 = *v12 == (void)v11;
                uint64_t v11 = v12;
              }
              while (!v13);
            }
            std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::erase(v5, v8);
            _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyNode((uint64_t)a1, v9);
            uint64_t v8 = v12;
          }
          while (v12 != (uint64_t *)(v5 + 8));
          _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyTree((uint64_t)a1, (void **)v5);
          goto LABEL_16;
        }
        *(void *)(v4 + 8 * v3) = 0;
        do
        {
          uint64_t v6 = *(void *)(v5 + 32);
          _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyNode((uint64_t)a1, (void **)v5);
          uint64_t v5 = v6;
        }
        while (v6);
      }
      uint64_t v7 = v3;
LABEL_16:
      uint64_t v3 = v7 + 1;
      unint64_t v2 = a1[1];
    }
    while (v7 + 1 < v2);
  }
  *a1 = 0;
  a1[3] = v2;
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::~Map(void *a1)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::clear((uint64_t)a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x22A614FA0](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

double _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::clear(uint64_t a1)
{
  _tc_google::protobuf::Map<std::string,std::string>::begin(a1, &v3);
  while ((void)v3)
  {
    long long v5 = v3;
    uint64_t v6 = v4;
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::erase(a1, &v5, (uint64_t)&v7);
    double result = *(double *)&v7;
    long long v3 = v7;
    uint64_t v4 = v8;
  }
  return result;
}

__n128 _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::erase@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(void *)a1)
  {
    uint64_t v6 = *(void *)(*a2 + 24);
    if (v6)
    {
      uint64_t v7 = _tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function>::~MapPair(v6);
      MEMORY[0x22A614FA0](v7, 0x10B2C40A53FFCBDLL);
    }
  }
  long long v9 = *(_OWORD *)a2;
  uint64_t v10 = a2[2];
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(a2);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::erase(*(void **)(a1 + 16), (uint64_t)&v9);
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)a3 = *(_OWORD *)a2;
  *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = a2[2];
  return result;
}

uint64_t _tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function>::~MapPair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::~Map(void *a1)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::clear((uint64_t)a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x22A614FA0](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

double _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::clear(uint64_t a1)
{
  _tc_google::protobuf::Map<std::string,std::string>::begin(a1, &v3);
  while ((void)v3)
  {
    long long v5 = v3;
    uint64_t v6 = v4;
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::erase(a1, &v5, (uint64_t)&v7);
    double result = *(double *)&v7;
    long long v3 = v7;
    uint64_t v4 = v8;
  }
  return result;
}

__n128 _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::erase@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(void *)a1)
  {
    uint64_t v6 = *(void *)(*a2 + 24);
    if (v6)
    {
      uint64_t v7 = _tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block>::~MapPair(v6);
      MEMORY[0x22A614FA0](v7, 0x10B2C4008C62E43);
    }
  }
  long long v9 = *(_OWORD *)a2;
  uint64_t v10 = a2[2];
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(a2);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::erase(*(void **)(a1 + 16), (uint64_t)&v9);
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)a3 = *(_OWORD *)a2;
  *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = a2[2];
  return result;
}

uint64_t _tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block>::~MapPair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

CoreML::Specification::V5::NamedValueType *_tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::NamedValueType>::TypeHandler>(uint64_t a1)
{
  uint64_t v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    int v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a1, v4 + 1);
    uint64_t v2 = *(int **)(a1 + 16);
    int v4 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = *(int *)(a1 + 8);
  int v4 = *v2;
  if ((int)v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::V5::NamedValueType **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_6;
  }
LABEL_7:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  CoreML::Specification::V5::NamedValueType::NamedValueType(Aligned);
  _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::NamedValueType>);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v8 + 1;
  *(void *)(v7 + 8 * v8 + 8) = Aligned;
  return Aligned;
}

void sub_223F2177C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::NamedValueType>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::V5::Operation *_tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Operation>::TypeHandler>(uint64_t a1)
{
  uint64_t v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    int v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a1, v4 + 1);
    uint64_t v2 = *(int **)(a1 + 16);
    int v4 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = *(int *)(a1 + 8);
  int v4 = *v2;
  if ((int)v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::V5::Operation **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_6;
  }
LABEL_7:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  CoreML::Specification::V5::Operation::Operation(Aligned);
  _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Operation>);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v8 + 1;
  *(void *)(v7 + 8 * v8 + 8) = Aligned;
  return Aligned;
}

void sub_223F218C8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40B3FB24A3);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Operation>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::V5::Argument_Binding *_tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Argument_Binding>::TypeHandler>(uint64_t a1)
{
  uint64_t v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    int v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a1, v4 + 1);
    uint64_t v2 = *(int **)(a1 + 16);
    int v4 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = *(int *)(a1 + 8);
  int v4 = *v2;
  if ((int)v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::V5::Argument_Binding **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_6;
  }
LABEL_7:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  CoreML::Specification::V5::Argument_Binding::Argument_Binding(Aligned);
  _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument_Binding>);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v8 + 1;
  *(void *)(v7 + 8 * v8 + 8) = Aligned;
  return Aligned;
}

void sub_223F21A14(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument_Binding>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::~Map(void *a1)
{
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::clear((uint64_t)a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x22A614FA0](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

double _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::clear(uint64_t a1)
{
  _tc_google::protobuf::Map<std::string,std::string>::begin(a1, &v3);
  while ((void)v3)
  {
    long long v5 = v3;
    uint64_t v6 = v4;
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::erase(a1, &v5, (uint64_t)&v7);
    double result = *(double *)&v7;
    long long v3 = v7;
    uint64_t v4 = v8;
  }
  return result;
}

__n128 _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::erase@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(void *)a1)
  {
    uint64_t v6 = *(void *)(*a2 + 24);
    if (v6)
    {
      uint64_t v7 = _tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument>::~MapPair(v6);
      MEMORY[0x22A614FA0](v7, 0x10B2C40C743746ALL);
    }
  }
  long long v9 = *(_OWORD *)a2;
  uint64_t v10 = a2[2];
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(a2);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::erase(*(void **)(a1 + 16), (uint64_t)&v9);
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)a3 = *(_OWORD *)a2;
  *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = a2[2];
  return result;
}

uint64_t _tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument>::~MapPair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

CoreML::Specification::V5::Block *_tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Block>::TypeHandler>(uint64_t a1)
{
  uint64_t v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    int v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a1, v4 + 1);
    uint64_t v2 = *(int **)(a1 + 16);
    int v4 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = *(int *)(a1 + 8);
  int v4 = *v2;
  if ((int)v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::V5::Block **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_6;
  }
LABEL_7:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  CoreML::Specification::V5::Block::Block(Aligned);
  _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Block>);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v8 + 1;
  *(void *)(v7 + 8 * v8 + 8) = Aligned;
  return Aligned;
}

void sub_223F21CF4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Block>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::V5::Dimension *_tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Dimension>::TypeHandler>(uint64_t a1)
{
  uint64_t v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    int v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a1, v4 + 1);
    uint64_t v2 = *(int **)(a1 + 16);
    int v4 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = *(int *)(a1 + 8);
  int v4 = *v2;
  if ((int)v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::V5::Dimension **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_6;
  }
LABEL_7:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  CoreML::Specification::V5::Dimension::Dimension(Aligned);
  _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Dimension>);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v8 + 1;
  *(void *)(v7 + 8 * v8 + 8) = Aligned;
  return Aligned;
}

void sub_223F21E40(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Dimension>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::V5::ValueType *_tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::ValueType>::TypeHandler>(uint64_t a1)
{
  uint64_t v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    int v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a1, v4 + 1);
    uint64_t v2 = *(int **)(a1 + 16);
    int v4 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = *(int *)(a1 + 8);
  int v4 = *v2;
  if ((int)v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::V5::ValueType **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_6;
  }
LABEL_7:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  CoreML::Specification::V5::ValueType::ValueType(Aligned);
  _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::ValueType>);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v8 + 1;
  *(void *)(v7 + 8 * v8 + 8) = Aligned;
  return Aligned;
}

void sub_223F21F8C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::ValueType>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void _tc_google::protobuf::RepeatedField<float>::Reserve(unsigned int *a1, int a2)
{
  signed int v2 = a1[1];
  if (v2 < a2)
  {
    int v4 = (_tc_google::protobuf::Arena **)*((void *)a1 + 1);
    if (v4) {
      long long v5 = *v4;
    }
    else {
      long long v5 = 0;
    }
    int v6 = 2 * v2;
    if (v6 <= a2) {
      int v6 = a2;
    }
    if (v6 <= 4) {
      unsigned int v7 = 4;
    }
    else {
      unsigned int v7 = v6;
    }
    uint64_t v8 = 4 * v7;
    if (v5) {
      Aligned = _tc_google::protobuf::Arena::AllocateAligned(v5, MEMORY[0x263F8C238], v8 + 8);
    }
    else {
      Aligned = operator new(v8 + 8);
    }
    *((void *)a1 + 1) = Aligned;
    void *Aligned = v5;
    a1[1] = v7;
    uint64_t v10 = *a1;
    if ((int)v10 >= 1) {
      memcpy(Aligned + 1, v4 + 1, 4 * v10);
    }
    if (v4 && !*v4)
    {
      operator delete(v4);
    }
  }
}

CoreML::Specification::V5::Value *_tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Value>::TypeHandler>(uint64_t a1)
{
  signed int v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    int v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a1, v4 + 1);
    signed int v2 = *(int **)(a1 + 16);
    int v4 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = *(int *)(a1 + 8);
  int v4 = *v2;
  if ((int)v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::V5::Value **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_6;
  }
LABEL_7:
  *signed int v2 = v4 + 1;
  int v6 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  CoreML::Specification::V5::Value::Value(Aligned);
  _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Value>);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v8 + 1;
  *(void *)(v7 + 8 * v8 + 8) = Aligned;
  return Aligned;
}

void sub_223F221B8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Value>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::V5::DictionaryValue_KeyValuePair *_tc_google::protobuf::internal::RepeatedPtrFieldBase::Add<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::DictionaryValue_KeyValuePair>::TypeHandler>(uint64_t a1)
{
  signed int v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    int v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    _tc_google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a1, v4 + 1);
    signed int v2 = *(int **)(a1 + 16);
    int v4 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = *(int *)(a1 + 8);
  int v4 = *v2;
  if ((int)v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::V5::DictionaryValue_KeyValuePair **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_6;
  }
LABEL_7:
  *signed int v2 = v4 + 1;
  int v6 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  CoreML::Specification::V5::DictionaryValue_KeyValuePair::DictionaryValue_KeyValuePair(Aligned);
  _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::DictionaryValue_KeyValuePair>);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v8 + 1;
  *(void *)(v7 + 8 * v8 + 8) = Aligned;
  return Aligned;
}

void sub_223F22304(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::DictionaryValue_KeyValuePair>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t _tc_google::protobuf::internal::RepeatedPtrFieldBase::Clear<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(result + 16) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      if (*(char *)(*(void *)v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(result + 8) = 0;
  }
  return result;
}

void _tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(uint64_t a1)
{
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x22A614FA0);
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "");
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, _tc_google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a2;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  void *result = &unk_26D75B8B0;
  result[1] = v5;
  return result;
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *(CoreML::Specification::V5::Function **)(a1 + 24);
  if (v3) {
    CoreML::Specification::V5::Function::Clear(v3);
  }
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          unint64_t TagFallback = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *a2 = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
          _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v9;
        uint64_t v10 = *a2;
        if (*a2 < a2[1] && *v10 == 18)
        {
          *a2 = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v9 | 2;
      Aligned = *(CoreML::Specification::V5::Function **)(a1 + 24);
      if (!Aligned)
      {
        uint64_t v12 = *(_tc_google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::V5::Function::Function(Aligned);
        _tc_google::protobuf::Arena::AddListNode(v12, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Function>);
        *(void *)(a1 + 24) = Aligned;
      }
      BOOL v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v13;
        *a2 = v13 + 1;
      }
      unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v15 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v17 = v15;
      uint64_t result = CoreML::Specification::V5::Function::MergePartialFromCodedStream(Aligned, a2, v16);
      if (!result) {
        return result;
      }
      uint64_t result = _tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*a2 == a2[1] && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F22790(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  int v4 = (CoreML::Specification::V5::Function *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::V5::Function::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  _tc_google::protobuf::internal::WireFormatLite::WriteString(1, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return _tc_google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((_tc_google::protobuf::internal::WireFormatLite *)2, v5, a2, v6);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 112) + ((9 * (__clz(*(_DWORD *)(v4 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  int v7 = _tc_google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *int v7 = 18;
  int v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *int v9 = v11;
  BOOL v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::value(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    _tc_google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/external/google/protobuf/map_entry_lite.h", 162);
    unsigned int v3 = _tc_google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: default_instance_ != NULL: ");
    _tc_google::protobuf::internal::LogFinisher::operator=((uint64_t)&v6, (_tc_google::protobuf::internal::LogMessage *)v3);
    _tc_google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v4 = *(void *)(v2 + 24);
  if (*(void *)(a1 + 24)) {
    return *(void *)(a1 + 24);
  }
  else {
    return v4;
  }
}

void sub_223F22BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  _tc_google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(uint64_t a1)
{
  *(void *)a1 = &unk_26D75B988;
  if (*(void *)(a1 + 8) != a1 && !*(void *)(a1 + 32))
  {
    _tc_google::protobuf::internal::MapTypeHandler<(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena((uint64_t **)(a1 + 16));
    uint64_t v2 = *(void *)(a1 + 24);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

uint64_t **_tc_google::protobuf::internal::MapTypeHandler<(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(uint64_t **result)
{
  uint64_t v1 = *result;
  if (*result != &_tc_google::protobuf::internal::fixed_address_empty_string && v1 != 0)
  {
    if (*((char *)v1 + 23) < 0) {
      operator delete((void *)*v1);
    }
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

std::string *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFromInternal(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      unsigned int v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      char v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (_tc_google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::V5::Function::Function(Aligned);
        _tc_google::protobuf::Arena::AddListNode(size, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Function>);
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      int v9 = (const CoreML::Specification::V5::Function *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      uint64_t result = CoreML::Specification::V5::Function::MergeFrom((CoreML::Specification::V5::Function *)v4[1].__r_.__value_.__l.__data_, v9);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_223F22E60(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

void _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance()
{
}

void sub_223F22F28(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::Own<std::string>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_delete_object<std::string>);
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<std::string>(uint64_t result)
{
  if (result)
  {
    if (*(char *)(result + 23) < 0) {
      operator delete(*(void **)result);
    }
    JUMPOUT(0x22A614FA0);
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Function>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void _tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(uint64_t a1)
{
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x22A614FA0);
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, _tc_google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a2;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  void *result = &unk_26D75BA30;
  result[1] = v5;
  return result;
}

CoreML::Specification::V5::Value *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t result = *(CoreML::Specification::V5::Value **)(a1 + 24);
  if (result) {
    uint64_t result = (CoreML::Specification::V5::Value *)CoreML::Specification::V5::Value::Clear(result);
  }
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          unint64_t TagFallback = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *a2 = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
          _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v9;
        unsigned int v10 = *a2;
        if (*a2 < a2[1] && *v10 == 18)
        {
          *a2 = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v9 | 2;
      Aligned = *(CoreML::Specification::V5::Value **)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(_tc_google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::V5::Value::Value(Aligned);
        _tc_google::protobuf::Arena::AddListNode(v12, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Value>);
        *(void *)(a1 + 24) = Aligned;
      }
      BOOL v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v13;
        *a2 = v13 + 1;
      }
      unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v15 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v17 = v15;
      uint64_t result = CoreML::Specification::V5::Value::MergePartialFromCodedStream(Aligned, a2, v16);
      if (!result) {
        return result;
      }
      uint64_t result = _tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*a2 == a2[1] && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F233D0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::V5::Value *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::V5::Value::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  _tc_google::protobuf::internal::WireFormatLite::WriteString(1, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return _tc_google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((_tc_google::protobuf::internal::WireFormatLite *)2, v5, a2, v6);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 40) + ((9 * (__clz(*(_DWORD *)(v4 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  int v7 = _tc_google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *int v7 = 18;
  int v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *int v9 = v11;
  BOOL v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(uint64_t a1)
{
  *(void *)a1 = &unk_26D75BB08;
  if (*(void *)(a1 + 8) != a1 && !*(void *)(a1 + 32))
  {
    _tc_google::protobuf::internal::MapTypeHandler<(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena((uint64_t **)(a1 + 16));
    uint64_t v2 = *(void *)(a1 + 24);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

std::string *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFromInternal(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      unsigned int v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (_tc_google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::V5::Value::Value(Aligned);
        _tc_google::protobuf::Arena::AddListNode(size, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Value>);
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      int v9 = (const CoreML::Specification::V5::Value *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      uint64_t result = CoreML::Specification::V5::Value::MergeFrom((std::string *)v4[1].__r_.__value_.__l.__data_, v9);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_223F2398C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

void _tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(uint64_t a1)
{
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x22A614FA0);
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, _tc_google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a2;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  void *result = &unk_26D75BBB0;
  result[1] = v5;
  return result;
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  unsigned int v3 = *(CoreML::Specification::V5::Block **)(a1 + 24);
  if (v3) {
    CoreML::Specification::V5::Block::Clear(v3);
  }
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          unint64_t TagFallback = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *a2 = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
          _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v9;
        unsigned int v10 = *a2;
        if (*a2 < a2[1] && *v10 == 18)
        {
          *a2 = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v9 | 2;
      Aligned = *(CoreML::Specification::V5::Block **)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(_tc_google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::V5::Block::Block(Aligned);
        _tc_google::protobuf::Arena::AddListNode(v12, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Block>);
        *(void *)(a1 + 24) = Aligned;
      }
      BOOL v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v13;
        *a2 = v13 + 1;
      }
      unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v15 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v17 = v15;
      uint64_t result = CoreML::Specification::V5::Block::MergePartialFromCodedStream(Aligned, a2, v16);
      if (!result) {
        return result;
      }
      uint64_t result = _tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*a2 == a2[1] && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F23D98(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::V5::Block *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::V5::Block::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  _tc_google::protobuf::internal::WireFormatLite::WriteString(1, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return _tc_google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((_tc_google::protobuf::internal::WireFormatLite *)2, v5, a2, v6);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 120) + ((9 * (__clz(*(_DWORD *)(v4 + 120) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  int v7 = _tc_google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *int v7 = 18;
  int v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *int v9 = v11;
  BOOL v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(uint64_t a1)
{
  *(void *)a1 = &unk_26D75BC88;
  if (*(void *)(a1 + 8) != a1 && !*(void *)(a1 + 32))
  {
    _tc_google::protobuf::internal::MapTypeHandler<(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena((uint64_t **)(a1 + 16));
    uint64_t v2 = *(void *)(a1 + 24);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

std::string *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFromInternal(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      unsigned int v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (_tc_google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::V5::Block::Block(Aligned);
        _tc_google::protobuf::Arena::AddListNode(size, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Block>);
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      int v9 = (const CoreML::Specification::V5::Block *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      uint64_t result = (std::string *)CoreML::Specification::V5::Block::MergeFrom((CoreML::Specification::V5::Block *)v4[1].__r_.__value_.__l.__data_, v9);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_223F24354(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

void _tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(uint64_t a1)
{
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x22A614FA0);
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, _tc_google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a2;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  void *result = &unk_26D75BD30;
  result[1] = v5;
  return result;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 16);
  if ((uint64_t *)v2 != &_tc_google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *(void *)(result + 24);
  if (v3)
  {
    uint64_t v4 = *(unsigned int *)(v3 + 24);
    if ((int)v4 >= 1)
    {
      uint64_t v5 = (uint64_t *)(*(void *)(v3 + 32) + 8);
      do
      {
        uint64_t v6 = *v5++;
        uint64_t result = CoreML::Specification::V5::Argument_Binding::clear_binding(v6);
        --v4;
      }
      while (v4);
      *(_DWORD *)(v3 + 24) = 0;
    }
  }
  *(_DWORD *)(v1 + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          unint64_t TagFallback = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *a2 = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = _tc_google::protobuf::io::CodedInputStream::ReadTagFallback((_tc_google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
          _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = _tc_google::protobuf::internal::WireFormatLite::ReadBytes(a2, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v9;
        unsigned int v10 = *a2;
        if (*a2 < a2[1] && *v10 == 18)
        {
          *a2 = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v9 | 2;
      Aligned = *(CoreML::Specification::V5::Argument **)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(_tc_google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::V5::Argument::Argument(Aligned);
        _tc_google::protobuf::Arena::AddListNode(v12, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument>);
        *(void *)(a1 + 24) = Aligned;
      }
      BOOL v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v13;
        *a2 = v13 + 1;
      }
      unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      if ((v15 & 0x8000000000000000) != 0) {
        return 0;
      }
      int v17 = v15;
      uint64_t result = CoreML::Specification::V5::Argument::MergePartialFromCodedStream(Aligned, a2, v16);
      if (!result) {
        return result;
      }
      uint64_t result = _tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*a2 == a2[1] && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((_tc_google::protobuf::internal::WireFormatLite::SkipField((_tc_google::protobuf::internal::WireFormatLite *)a2, (_tc_google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_223F2478C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::V5::Argument *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::V5::Argument::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, _tc_google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  _tc_google::protobuf::internal::WireFormatLite::WriteString(1, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return _tc_google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((_tc_google::protobuf::internal::WireFormatLite *)2, v5, a2, v6);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 40) + ((9 * (__clz(*(_DWORD *)(v4 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  int v7 = _tc_google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *int v7 = 18;
  int v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *int v9 = v11;
  BOOL v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(uint64_t a1)
{
  *(void *)a1 = &unk_26D75BE08;
  if (*(void *)(a1 + 8) != a1 && !*(void *)(a1 + 32))
  {
    _tc_google::protobuf::internal::MapTypeHandler<(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena((uint64_t **)(a1 + 16));
    uint64_t v2 = *(void *)(a1 + 24);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

std::string *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFromInternal(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      unsigned int v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
        _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (_tc_google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::V5::Argument::Argument(Aligned);
        _tc_google::protobuf::Arena::AddListNode(size, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument>);
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      int v9 = (const CoreML::Specification::V5::Argument *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      uint64_t result = CoreML::Specification::V5::Argument::MergeFrom((std::string *)v4[1].__r_.__value_.__l.__data_, v9);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_223F24D48(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::Init(uint64_t a1)
{
  int v2 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InnerMap(Aligned, 0, v2);
  uint64_t result = _tc_google::protobuf::Arena::AddListNode(v2, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap>);
  *(void *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = Aligned;
  return result;
}

void sub_223F24E30(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E0C40D5F42F35);
  _Unwind_Resume(a1);
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InnerMap(void *a1, unint64_t a2, _tc_google::protobuf::Arena *a3)
{
  *a1 = 0;
  a1[2] = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::Seed();
  a1[4] = 0;
  a1[5] = a3;
  if (a2 <= 8) {
    a2 = 8;
  }
  uint64_t v8 = a3;
  uint64_t v6 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<void *>::allocate(&v8, a2, 0);
  bzero(v6, 8 * a2);
  a1[3] = a2;
  a1[4] = v6;
  a1[1] = a2;
  return a1;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::Seed()
{
  uint64_t v0 = std::random_device::random_device[abi:ne180100](&v7);
  unsigned int v1 = MEMORY[0x22A614A70](v0);
  unsigned int v2 = v1 + ((v1 / 0x7FFFFFFF) | ((v1 / 0x7FFFFFFF) << 31));
  if (v2 <= 1) {
    unsigned int v2 = 1;
  }
  v6[0] = v2;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v6);
  long long v5 = xmmword_2246C6AE0;
  uint64_t v3 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)&v5, (uint64_t)v6, &v5);
  std::random_device::~random_device(&v7);
  return v3;
}

void sub_223F24F74(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x223F24F5CLL);
}

std::random_device *std::random_device::random_device[abi:ne180100](std::random_device *a1)
{
  std::string::basic_string[abi:ne180100]<0>(&__token, "/dev/urandom");
  std::random_device::random_device(a1, &__token);
  if (SHIBYTE(__token.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__token.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_223F24FF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned int *std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](unsigned int *result)
{
  unsigned int v1 = *result;
  for (uint64_t i = 1; i != 257; ++i)
  {
    unsigned int v3 = v1 / 0x1F31D;
    unsigned int v4 = 16807 * (v1 % 0x1F31D);
    v3 *= 2836;
    BOOL v5 = v4 >= v3;
    unsigned int v6 = v4 - v3;
    if (v5) {
      int v7 = 0;
    }
    else {
      int v7 = 0x7FFFFFFF;
    }
    unsigned int v1 = v7 + v6;
    result[i] = v1;
  }
  unsigned int v8 = 16807 * (v1 % 0x1F31D);
  unsigned int v9 = 2836 * (v1 / 0x1F31D);
  BOOL v5 = v8 >= v9;
  unsigned int v10 = v8 - v9;
  if (v5) {
    int v11 = 0;
  }
  else {
    int v11 = 0x7FFFFFFF;
  }
  unsigned int v12 = v11 + v10;
  void *result = v12;
  result[257] = v12;
  return result;
}

uint64_t std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result = a3[1];
  uint64_t v4 = result - *a3;
  if (result != *a3)
  {
    unint64_t v5 = v4 + 1;
    if (v4 == -1)
    {
      std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__independent_bits_engine((uint64_t)v10, a2, 0x40uLL);
      return std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__eval((uint64_t)v10);
    }
    else
    {
      unint64_t v7 = __clz(v5);
      uint64_t v8 = 63;
      if (((v5 << v7) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        uint64_t v8 = 64;
      }
      std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__independent_bits_engine((uint64_t)v10, a2, v8 - v7);
      do
        unint64_t v9 = std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__eval((uint64_t)v10);
      while (v9 >= v5);
      return *a3 + v9;
    }
  }
  return result;
}

uint64_t std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__independent_bits_engine(uint64_t result, uint64_t a2, unint64_t a3)
{
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  if (a3 % 0x1E) {
    unint64_t v3 = a3 / 0x1E + 1;
  }
  else {
    unint64_t v3 = a3 / 0x1E;
  }
  unint64_t v4 = a3 / v3;
  *(void *)(result + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = a3 / v3;
  *(void *)(result + 24) = v3;
  unint64_t v5 = (-1 << (a3 / v3)) & 0x7FFFFFFE;
  if (a3 / v3 >= 0x40) {
    unint64_t v5 = 0;
  }
  *(void *)(result + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v5;
  if ((v5 ^ 0x7FFFFFFE) > v5 / v3)
  {
    ++v3;
    unint64_t v4 = a3 / v3;
    *(void *)(result + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = a3 / v3;
    *(void *)(result + 24) = v3;
    if (a3 / v3 > 0x3F)
    {
      unint64_t v6 = 0;
      *(void *)(result + 32) = v3 + v4 * v3 - a3;
      *(void *)(result + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
      goto LABEL_13;
    }
    *(void *)(result + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = (-1 << v4) & 0x7FFFFFFE;
  }
  *(void *)(result + 32) = v3 + a3 / v3 * v3 - a3;
  if (v4 > 0x3E) {
    unint64_t v6 = 0;
  }
  else {
    unint64_t v6 = 0x3FFFFFFFuLL >> v4 << (v4 + 1);
  }
LABEL_13:
  *(void *)(result + 48) = v6;
  unsigned int v7 = 0xFFFFFFFF >> -(char)v4;
  if (!v4) {
    unsigned int v7 = 0;
  }
  if (v4 >= 0x1F) {
    unsigned int v8 = -1;
  }
  else {
    unsigned int v8 = 0xFFFFFFFF >> ~(_BYTE)v4;
  }
  *(_DWORD *)(result + 5boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v7;
  *(_DWORD *)(result + 6CoreML::Specification::V5::DictionaryValue::New(this, 0) = v8;
  return result;
}

uint64_t std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__eval(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = *(unsigned int **)a1;
    unint64_t v5 = *(void *)(a1 + 40);
    unint64_t v6 = *(void *)(a1 + 16);
    unsigned int v7 = **(_DWORD **)a1;
    unsigned int v8 = *(_DWORD *)(*(void *)a1 + 1028);
    do
    {
      do
      {
        unint64_t v9 = (char *)v4
           + (((unint64_t)((((unint64_t)(v8 - 1) << 7) * (unsigned __int128)0x8000000201uLL) >> 64) >> 3) & 0xFFC);
        v4[257] = *((_DWORD *)v9 + 1);
        unsigned int v10 = v7 / 0x1F31D;
        unsigned int v11 = 16807 * (v7 % 0x1F31D);
        v10 *= 2836;
        BOOL v12 = v11 >= v10;
        unsigned int v13 = v11 - v10;
        if (v12) {
          int v14 = 0;
        }
        else {
          int v14 = 0x7FFFFFFF;
        }
        unsigned int v7 = v14 + v13;
        *((_DWORD *)v9 + 1) = v7;
        unsigned int v8 = v4[257];
        unint64_t v15 = v8 - 1;
      }
      while (v5 <= v15);
      uint64_t v16 = v2 << v6;
      if (v6 >= 0x40) {
        uint64_t v16 = 0;
      }
      uint64_t v2 = v16 + (*(_DWORD *)(a1 + 56) & v15);
      ++v3;
    }
    while (v3 != v1);
    *unint64_t v4 = v7;
  }
  else
  {
    uint64_t v2 = 0;
  }
  unint64_t v17 = *(void *)(a1 + 24);
  if (v1 < v17)
  {
    uint64_t v18 = *(unsigned int **)a1;
    unint64_t v19 = *(void *)(a1 + 48);
    unint64_t v20 = *(void *)(a1 + 16);
    unsigned int v21 = **(_DWORD **)a1;
    unsigned int v22 = *(_DWORD *)(*(void *)a1 + 1028);
    do
    {
      do
      {
        uint64_t v23 = (char *)v18
            + (((unint64_t)((((unint64_t)(v22 - 1) << 7) * (unsigned __int128)0x8000000201uLL) >> 64) >> 3) & 0xFFC);
        v18[257] = *((_DWORD *)v23 + 1);
        unsigned int v24 = v21 / 0x1F31D;
        unsigned int v25 = 16807 * (v21 % 0x1F31D);
        v24 *= 2836;
        BOOL v12 = v25 >= v24;
        unsigned int v26 = v25 - v24;
        if (v12) {
          int v27 = 0;
        }
        else {
          int v27 = 0x7FFFFFFF;
        }
        unsigned int v21 = v27 + v26;
        *((_DWORD *)v23 + 1) = v21;
        unsigned int v22 = v18[257];
        unint64_t v28 = v22 - 1;
      }
      while (v19 <= v28);
      uint64_t v29 = v2 << (v20 + 1);
      if (v20 >= 0x3F) {
        uint64_t v29 = 0;
      }
      uint64_t v2 = v29 + (*(_DWORD *)(a1 + 60) & v28);
      ++v1;
    }
    while (v1 != v17);
    *uint64_t v18 = v21;
  }
  return v2;
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<void *>::allocate(_tc_google::protobuf::Arena **a1, uint64_t a2, size_t __sz)
{
  uint64_t v3 = *a1;
  if (v3) {
    return _tc_google::protobuf::Arena::AllocateAligned(v3, MEMORY[0x263F8C250], 8 * a2);
  }
  else {
    return operator new(8 * a2);
  }
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Init(uint64_t a1)
{
  uint64_t v2 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InnerMap(Aligned, 0, v2);
  uint64_t result = _tc_google::protobuf::Arena::AddListNode(v2, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap>);
  *(void *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = Aligned;
  return result;
}

void sub_223F25448(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E0C40D5F42F35);
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::operator[](uint64_t a1, const std::string *a2)
{
  unint64_t v4 = (std::string **)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::operator[](*(uint64_t **)(a1 + 16), (uint64_t)a2);
  ValueTypeInternal = *v4;
  if (!*v4)
  {
    ValueTypeInternal = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::CreateValueTypeInternal((_tc_google::protobuf::Arena **)a1, a2);
    *unint64_t v4 = ValueTypeInternal;
  }
  return ValueTypeInternal + 1;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::operator[](uint64_t *a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v6, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v6 = *(std::string *)a2;
  }
  uint64_t v7 = 0;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::insert(a1, (long long *)&v6, (uint64_t)v5);
  uint64_t v3 = v5[0];
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  return v3 + 24;
}

void sub_223F25544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::CreateValueTypeInternal(_tc_google::protobuf::Arena **a1, const std::string *a2)
{
  unint64_t v4 = *a1;
  if (!v4) {
    operator new();
  }
  Aligned = (std::string *)_tc_google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x263F8C250], 144);
  std::string v6 = *a1;
  Aligned->__r_.__value_.__l.__size_ = 0;
  Aligned->__r_.__value_.__r.__words[2] = 0;
  Aligned->__r_.__value_.__r.__words[0] = 0;
  _tc_google::protobuf::Arena::OwnDestructor<std::string>(v6, Aligned);
  uint64_t v7 = *a1;
  CoreML::Specification::V5::Function::Function((CoreML::Specification::V5::Function *)&Aligned[1]);
  _tc_google::protobuf::Arena::OwnDestructor<CoreML::Specification::V5::Function>(v7, &Aligned[1]);
  std::string::operator=(Aligned, a2);
  return Aligned;
}

void sub_223F25610(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10B2C40A53FFCBDLL);
  _Unwind_Resume(a1);
}

double _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::insert@<D0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (unsigned __int8 *)a2, 0, &v17);
  if ((void)v17)
  {
    uint64_t v7 = *((void *)&v17 + 1);
    uint64_t v8 = v18;
    *(void *)a3 = v17;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v8;
    *(unsigned char *)(a3 + 24) = 0;
  }
  else
  {
    if (_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::ResizeIfLoadIsOutOfRange(a1, *a1 + 1))
    {
      _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (unsigned __int8 *)a2, 0, &v14);
      long long v17 = v14;
      uint64_t v9 = v16;
      uint64_t v18 = v15;
      uint64_t v19 = v16;
    }
    else
    {
      uint64_t v9 = v19;
    }
    unsigned int v10 = (_tc_google::protobuf::Arena *)a1[5];
    if (v10) {
      Aligned = (std::string *)_tc_google::protobuf::Arena::AllocateAligned(v10, MEMORY[0x263F8C250], 40);
    }
    else {
      Aligned = (std::string *)operator new(0x28uLL);
    }
    uint64_t v12 = (uint64_t)Aligned;
    if (*((char *)a2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(Aligned, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v13 = *a2;
      Aligned->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
      *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v13;
    }
    *(void *)(v12 + 24) = *((void *)a2 + 3);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InsertUnique(a1, v9, v12, (uint64_t *)&v14);
    ++*a1;
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v15;
    *(unsigned char *)(a3 + 24) = 1;
  }
  return result;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::ResizeIfLoadIsOutOfRange(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = ((3 * v2) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v3 <= a2)
  {
    if (v2 <= 0x800000000000000)
    {
      uint64_t v6 = 2 * v2;
LABEL_16:
      _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::Resize(a1, v6);
      return 1;
    }
  }
  else if (v2 >= 9 && (12 * v2) >> 6 >= a2)
  {
    char v7 = 0;
    do
      ++v7;
    while ((((5 * a2) >> 2) + 1) << v7 < v3);
    uint64_t v6 = v2 >> v7 <= 8 ? 8 : v2 >> v7;
    if (v6 != v2) {
      goto LABEL_16;
    }
  }
  return 0;
}

uint64_t *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InsertUnique@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = a3;
  unint64_t v5 = a2;
  uint64_t v6 = result;
  uint64_t v8 = result[4];
  uint64_t v9 = *(void *)(v8 + 8 * a2);
  if (!v9)
  {
    *(void *)(a3 + 32) = 0;
    *(void *)(v8 + 8 * a2) = a3;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a2 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a2);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 32);
    }
    while (v11);
    if (v10 < 8)
    {
      *(void *)(a3 + 32) = v9;
      *(void *)(v8 + 8 * a2) = a3;
LABEL_11:
      *a4 = v4;
      a4[1] = (uint64_t)v6;
      a4[2] = v5;
      return result;
    }
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::TreeConvert((uint64_t)result, a2);
    *(void *)(v4 + 32) = 0;
    uint64_t v14 = *(void *)(v6[4] + 8 * v5);
    uint64_t v15 = (const void **)v4;
    double result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v14, &v15, (uint64_t *)&v15);
    v5 &= ~1uLL;
    uint64_t v4 = result[4];
LABEL_8:
    unint64_t v12 = v6[3];
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    void v6[3] = v12;
    goto LABEL_11;
  }
  *(void *)(a3 + 32) = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a2);
  uint64_t v15 = (const void **)a3;
  double result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v13, &v15, (uint64_t *)&v15);
  *a4 = result[4];
  a4[1] = (uint64_t)v6;
  a4[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::Resize(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  a1[1] = a2;
  unint64_t v5 = (void *)a1[4];
  uint64_t v9 = (_tc_google::protobuf::Arena *)a1[5];
  uint64_t v6 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<void *>::allocate(&v9, a2, 0);
  bzero(v6, 8 * a2);
  unint64_t v7 = a1[3];
  a1[3] = a1[1];
  a1[4] = (uint64_t)v6;
  while (v7 < v4)
  {
    uint64_t v8 = v5[v7];
    if (v8)
    {
      if (v8 == v5[v7 ^ 1]) {
        _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::TransferTree(a1, (uint64_t)v5, v7++);
      }
      else {
        _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::TransferList(a1, (uint64_t)v5, v7);
      }
    }
    ++v7;
  }
  if (!a1[5]) {
    operator delete(v5);
  }
}

uint64_t *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::TransferList(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8 * a3);
  do
  {
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, (unsigned char *)v4);
    double result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InsertUnique(a1, v6, v4, v8);
    uint64_t v4 = v5;
  }
  while (v5);
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::TransferTree(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void ***)(a2 + 8 * a3);
  uint64_t v5 = *v4;
  do
  {
    uint64_t v6 = (unsigned char *)v5[4];
    uint64_t v7 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, v6);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InsertUnique(a1, v7, (uint64_t)v6, v11);
    uint64_t v8 = (void *)v5[1];
    if (v8)
    {
      do
      {
        uint64_t v9 = v8;
        uint64_t v8 = (void *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        uint64_t v9 = (void *)v5[2];
        BOOL v10 = *v9 == (void)v5;
        uint64_t v5 = v9;
      }
      while (!v10);
    }
    uint64_t v5 = v9;
  }
  while (v9 != v4 + 1);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyTree((uint64_t)a1, v4);
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(_tc_google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = _tc_google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x263F8C250], 32);
  }
  else {
    Aligned = (uint64_t *)operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  v9[1] = *(void **)(a1 + 40);
  void v9[2] = 0;
  uint64_t v8 = v9;
  v9[0] = 0;
  std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::set[abi:ne180100](Aligned, (uint64_t)&v8);
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy((uint64_t)&v8, v9[0]);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(a1, a2, v6);
  uint64_t result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(a1, a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_223F25B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8 * a2);
  if (!v3) {
    return 0;
  }
  uint64_t v5 = 0;
  do
  {
    uint64_t v8 = (const void **)v3;
    std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(a3, &v8, (uint64_t *)&v8);
    ++v5;
    uint64_t v6 = *(void *)(v3 + 32);
    *(void *)(v3 + 32) = 0;
    uint64_t v3 = v6;
  }
  while (v6);
  return v5;
}

uint64_t *std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  *a1 = 0;
  uint64_t v3 = *(void *)(a2 + 16);
  a1[1] = 0;
  a1[2] = v3;
  a1[3] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::insert[abi:ne180100]<std::__tree_const_iterator<std::string *,std::__tree_node<std::string *,void *> *,long>>(a1, *(const void ****)a2, (const void ****)(a2 + 8));
  return a1;
}

void sub_223F25C70(_Unwind_Exception *a1)
{
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::insert[abi:ne180100]<std::__tree_const_iterator<std::string *,std::__tree_node<std::string *,void *> *,long>>(uint64_t *result, const void ***a2, const void ****a3)
{
  if (a2 != (const void ***)a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_hint_unique_key_args<std::string *,std::string * const&>(v5, v6, v4 + 4, (uint64_t *)v4 + 4);
      uint64_t v7 = v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = (const void ****)v7;
          uint64_t v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (const void ****)v4[2];
          BOOL v9 = *v8 == v4;
          uint64_t v4 = (const void ***)v8;
        }
        while (!v9);
      }
      uint64_t v4 = (const void ***)v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_hint_unique_key_args<std::string *,std::string * const&>(uint64_t a1, uint64_t *a2, const void ***a3, uint64_t *a4)
{
  uint64_t v6 = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__find_equal<std::string *>((void *)a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate((_tc_google::protobuf::Arena **)(a1 + 16), 1, 0);
    void v7[4] = *a4;
    std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

uint64_t *std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__find_equal<std::string *>(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, const void ***a5)
{
  BOOL v9 = a1 + 1;
  if (a1 + 1 != a2 && !std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 3), *a5, (const void **)a2[4]))
  {
    if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 3), (const void **)a2[4], *a5))
    {
      *a3 = a2;
      *a4 = (uint64_t)a2;
      return a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      uint64_t v14 = (uint64_t *)a2[1];
      do
      {
        uint64_t v15 = v14;
        uint64_t v14 = (uint64_t *)*v14;
      }
      while (v14);
    }
    else
    {
      uint64_t v18 = a2;
      do
      {
        uint64_t v15 = (uint64_t *)v18[2];
        BOOL v17 = *v15 == (void)v18;
        uint64_t v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 3), *a5, (const void **)v15[4])) {
        goto LABEL_28;
      }
      uint64_t v13 = *a4;
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = a2;
    }
    return a4;
  }
  if ((uint64_t *)*a1 == a2)
  {
    unint64_t v12 = a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v12;
      return v12 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  uint64_t v11 = (uint64_t *)*a2;
  if (*a2)
  {
    do
    {
      unint64_t v12 = v11;
      uint64_t v11 = (uint64_t *)v11[1];
    }
    while (v11);
  }
  else
  {
    uint64_t v16 = a2;
    do
    {
      unint64_t v12 = (uint64_t *)v16[2];
      BOOL v17 = *v12 == (void)v16;
      uint64_t v16 = v12;
    }
    while (v17);
  }
  if (std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 3), (const void **)v12[4], *a5)) {
    goto LABEL_16;
  }
LABEL_28:
  return std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__find_equal<std::string *>((uint64_t)a1, a3, a5);
}

uint64_t *std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[3] = (uint64_t *)((char *)a1[3] + 1);
  return result;
}

uint64_t *std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__find_equal<std::string *>(uint64_t a1, void *a2, const void ***a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 24;
    do
    {
      while (1)
      {
        uint64_t v8 = v4;
        if (!std::less<std::string>::operator()[abi:ne180100](v7, *a3, (const void **)v4[4])) {
          break;
        }
        uint64_t v4 = (uint64_t *)*v8;
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v7, (const void **)v8[4], *a3)) {
        break;
      }
      uint64_t v5 = v8 + 1;
      uint64_t v4 = (uint64_t *)v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (uint64_t *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(_tc_google::protobuf::Arena **a1, uint64_t a2, size_t __sz)
{
  uint64_t v3 = *a1;
  if (v3) {
    return _tc_google::protobuf::Arena::AllocateAligned(v3, MEMORY[0x263F8C250], 40 * a2);
  }
  else {
    return operator new(40 * a2);
  }
}

uint64_t *std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(uint64_t a1, const void ***a2, uint64_t *a3)
{
  uint64_t v5 = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__find_equal<std::string *>(a1, &v9, a2);
  uint64_t v6 = (uint64_t *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate((_tc_google::protobuf::Arena **)(a1 + 16), 1, 0);
    void v6[4] = *a3;
    std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)a1, v9, v7, v6);
  }
  return v6;
}

std::string *_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function>::MapPair(std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
  CoreML::Specification::V5::Function::Function((CoreML::Specification::V5::Function *)&this[1]);
  return this;
}

void sub_223F26160(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::OwnDestructor<std::string>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<std::string>);
  }
  return result;
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::OwnDestructor<CoreML::Specification::V5::Function>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Function>);
  }
  return result;
}

std::string *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::operator[](uint64_t a1, const std::string *a2)
{
  uint64_t v4 = (std::string **)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::operator[](*(uint64_t **)(a1 + 16), (uint64_t)a2);
  ValueTypeInternal = *v4;
  if (!*v4)
  {
    ValueTypeInternal = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::CreateValueTypeInternal((_tc_google::protobuf::Arena **)a1, a2);
    *uint64_t v4 = ValueTypeInternal;
  }
  return ValueTypeInternal + 1;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::operator[](uint64_t *a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v6, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v6 = *(std::string *)a2;
  }
  uint64_t v7 = 0;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::insert(a1, (long long *)&v6, (uint64_t)v5);
  uint64_t v3 = v5[0];
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  return v3 + 24;
}

void sub_223F26288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::CreateValueTypeInternal(_tc_google::protobuf::Arena **a1, const std::string *a2)
{
  uint64_t v4 = *a1;
  if (!v4) {
    operator new();
  }
  Aligned = (std::string *)_tc_google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x263F8C250], 72);
  std::string v6 = *a1;
  Aligned->__r_.__value_.__l.__size_ = 0;
  Aligned->__r_.__value_.__r.__words[2] = 0;
  Aligned->__r_.__value_.__r.__words[0] = 0;
  _tc_google::protobuf::Arena::OwnDestructor<std::string>(v6, Aligned);
  uint64_t v7 = *a1;
  CoreML::Specification::V5::Value::Value((CoreML::Specification::V5::Value *)&Aligned[1]);
  _tc_google::protobuf::Arena::OwnDestructor<CoreML::Specification::V5::Value>(v7, &Aligned[1]);
  std::string::operator=(Aligned, a2);
  return Aligned;
}

void sub_223F26354(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10B2C40CC7398DALL);
  _Unwind_Resume(a1);
}

double _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::insert@<D0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (unsigned __int8 *)a2, 0, &v17);
  if ((void)v17)
  {
    uint64_t v7 = *((void *)&v17 + 1);
    uint64_t v8 = v18;
    *(void *)a3 = v17;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v8;
    *(unsigned char *)(a3 + 24) = 0;
  }
  else
  {
    if (_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::ResizeIfLoadIsOutOfRange(a1, *a1 + 1))
    {
      _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (unsigned __int8 *)a2, 0, &v14);
      long long v17 = v14;
      uint64_t v9 = v16;
      uint64_t v18 = v15;
      uint64_t v19 = v16;
    }
    else
    {
      uint64_t v9 = v19;
    }
    uint64_t v10 = (_tc_google::protobuf::Arena *)a1[5];
    if (v10) {
      Aligned = (std::string *)_tc_google::protobuf::Arena::AllocateAligned(v10, MEMORY[0x263F8C250], 40);
    }
    else {
      Aligned = (std::string *)operator new(0x28uLL);
    }
    uint64_t v12 = (uint64_t)Aligned;
    if (*((char *)a2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(Aligned, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v13 = *a2;
      Aligned->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
      *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v13;
    }
    *(void *)(v12 + 24) = *((void *)a2 + 3);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::InsertUnique(a1, v9, v12, (uint64_t *)&v14);
    ++*a1;
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v15;
    *(unsigned char *)(a3 + 24) = 1;
  }
  return result;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::ResizeIfLoadIsOutOfRange(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = ((3 * v2) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v3 <= a2)
  {
    if (v2 <= 0x800000000000000)
    {
      uint64_t v6 = 2 * v2;
LABEL_16:
      _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::Resize(a1, v6);
      return 1;
    }
  }
  else if (v2 >= 9 && (12 * v2) >> 6 >= a2)
  {
    char v7 = 0;
    do
      ++v7;
    while ((((5 * a2) >> 2) + 1) << v7 < v3);
    uint64_t v6 = v2 >> v7 <= 8 ? 8 : v2 >> v7;
    if (v6 != v2) {
      goto LABEL_16;
    }
  }
  return 0;
}

uint64_t *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::InsertUnique@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = a3;
  unint64_t v5 = a2;
  uint64_t v6 = result;
  uint64_t v8 = result[4];
  uint64_t v9 = *(void *)(v8 + 8 * a2);
  if (!v9)
  {
    *(void *)(a3 + 32) = 0;
    *(void *)(v8 + 8 * a2) = a3;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a2 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a2);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 32);
    }
    while (v11);
    if (v10 < 8)
    {
      *(void *)(a3 + 32) = v9;
      *(void *)(v8 + 8 * a2) = a3;
LABEL_11:
      *a4 = v4;
      a4[1] = (uint64_t)v6;
      a4[2] = v5;
      return result;
    }
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::TreeConvert((uint64_t)result, a2);
    *(void *)(v4 + 32) = 0;
    uint64_t v14 = *(void *)(v6[4] + 8 * v5);
    uint64_t v15 = (const void **)v4;
    double result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v14, &v15, (uint64_t *)&v15);
    v5 &= ~1uLL;
    uint64_t v4 = result[4];
LABEL_8:
    unint64_t v12 = v6[3];
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    void v6[3] = v12;
    goto LABEL_11;
  }
  *(void *)(a3 + 32) = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a2);
  uint64_t v15 = (const void **)a3;
  double result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v13, &v15, (uint64_t *)&v15);
  *a4 = result[4];
  a4[1] = (uint64_t)v6;
  a4[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::Resize(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  a1[1] = a2;
  unint64_t v5 = (void *)a1[4];
  uint64_t v9 = (_tc_google::protobuf::Arena *)a1[5];
  uint64_t v6 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<void *>::allocate(&v9, a2, 0);
  bzero(v6, 8 * a2);
  unint64_t v7 = a1[3];
  a1[3] = a1[1];
  a1[4] = (uint64_t)v6;
  while (v7 < v4)
  {
    uint64_t v8 = v5[v7];
    if (v8)
    {
      if (v8 == v5[v7 ^ 1]) {
        _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::TransferTree(a1, (uint64_t)v5, v7++);
      }
      else {
        _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::TransferList(a1, (uint64_t)v5, v7);
      }
    }
    ++v7;
  }
  if (!a1[5]) {
    operator delete(v5);
  }
}

uint64_t *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::TransferList(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8 * a3);
  do
  {
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, (unsigned char *)v4);
    double result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::InsertUnique(a1, v6, v4, v8);
    uint64_t v4 = v5;
  }
  while (v5);
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::TransferTree(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void ***)(a2 + 8 * a3);
  uint64_t v5 = *v4;
  do
  {
    uint64_t v6 = (unsigned char *)v5[4];
    uint64_t v7 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, v6);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::InsertUnique(a1, v7, (uint64_t)v6, v11);
    uint64_t v8 = (void *)v5[1];
    if (v8)
    {
      do
      {
        uint64_t v9 = v8;
        uint64_t v8 = (void *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        uint64_t v9 = (void *)v5[2];
        BOOL v10 = *v9 == (void)v5;
        uint64_t v5 = v9;
      }
      while (!v10);
    }
    uint64_t v5 = v9;
  }
  while (v9 != v4 + 1);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyTree((uint64_t)a1, v4);
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(_tc_google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = _tc_google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x263F8C250], 32);
  }
  else {
    Aligned = (uint64_t *)operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  v9[1] = *(void **)(a1 + 40);
  void v9[2] = 0;
  uint64_t v8 = v9;
  v9[0] = 0;
  std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::set[abi:ne180100](Aligned, (uint64_t)&v8);
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy((uint64_t)&v8, v9[0]);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(a1, a2, v6);
  uint64_t result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(a1, a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_223F268E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

uint64_t *std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  *a1 = 0;
  uint64_t v3 = *(void *)(a2 + 16);
  a1[1] = 0;
  a1[2] = v3;
  a1[3] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::insert[abi:ne180100]<std::__tree_const_iterator<std::string *,std::__tree_node<std::string *,void *> *,long>>(a1, *(const void ****)a2, (const void ****)(a2 + 8));
  return a1;
}

void sub_223F26940(_Unwind_Exception *a1)
{
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value>::MapPair(std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
  CoreML::Specification::V5::Value::Value((CoreML::Specification::V5::Value *)&this[1]);
  return this;
}

void sub_223F269B0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::OwnDestructor<CoreML::Specification::V5::Value>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Value>);
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Program>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::MergePartialFromCodedStream(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(char **)a2;
  if (*(void *)a2 >= *(void *)(a2 + 8) || *v4 != 10)
  {
    BOOL v10 = (void **)(a1 + 16);
    if (*(char *)(a1 + 39) < 0) {
      operator delete(*v10);
    }
    *BOOL v10 = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    goto LABEL_13;
  }
  *(void *)a2 = v4 + 1;
  if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, (std::string *)(a1 + 16))) {
    return 0;
  }
  if ((int)(*(_DWORD *)(a2 + 8) - *(void *)a2) < 1 {
    || **(unsigned char **)a2 != 18
  }
    || (uint64_t v5 = *(void *)(a1 + 8),
        uint64_t v6 = **(void **)(v5 + 16),
        *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::operator[](v5, (const std::string *)(a1 + 16)), v6 == **(void **)(*(void *)(a1 + 8) + 16)))
  {
LABEL_13:
    uint64_t v11 = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*(_tc_google::protobuf::Arena ***)a1);
    unint64_t v12 = *(void **)(a1 + 48);
    if (v12 != v11)
    {
      if (v12) {
        (*(void (**)(void *))(*v12 + 8))(v12);
      }
      *(void *)(a1 + 48) = v11;
    }
    uint64_t v13 = (std::string *)v11[2];
    *((_DWORD *)v11 + 10) |= 1u;
    if (v13 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
    }
    std::string::operator=(v13, (const std::string *)(a1 + 16));
    uint64_t v14 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
    if (v14) {
      _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::UseKeyAndValueFromEntry(a1);
    }
    if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
      *(void *)(a1 + 48) = 0;
    }
    return v14;
  }
  _tc_google::protobuf::io::CodedInputStream::Skip((_tc_google::protobuf::io::CodedInputStream *)a2, 1u);
  uint64_t v7 = *(CoreML::Specification::V5::Function **)(a1 + 40);
  uint64_t v8 = *(char **)a2;
  if (*(void *)a2 >= *(void *)(a2 + 8) || *v8 < 0)
  {
    int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
    if (VarintSizeAsIntFallback < 0)
    {
LABEL_31:
      _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::erase(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16));
      return 0;
    }
  }
  else
  {
    int VarintSizeAsIntFallback = *v8;
    *(void *)a2 = v8 + 1;
  }
  unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_31;
  }
  int v17 = v15;
  if (!CoreML::Specification::V5::Function::MergePartialFromCodedStream(v7, (char **)a2, v16)
    || !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17))
  {
    goto LABEL_31;
  }
  if (*(void *)a2 == *(void *)(a2 + 8) && (*(_DWORD *)(a2 + 44) || *(_DWORD *)(a2 + 24) == *(_DWORD *)(a2 + 40)))
  {
    *(_DWORD *)(a2 + 32) = 0;
    uint64_t v14 = 1;
    *(unsigned char *)(a2 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
    return v14;
  }
  return _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::ReadBeyondKeyValuePair(a1, a2);
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::erase(uint64_t a1, unsigned __int8 *a2)
{
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(*(void *)(a1 + 16), a2, 0, &v6);
  if (!(void)v6) {
    return 0;
  }
  long long v4 = v6;
  uint64_t v5 = v7;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::erase(a1, &v4, (uint64_t)&v6);
  return 1;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*(_tc_google::protobuf::Arena ***)a1);
  uint64_t v5 = *(void **)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*(void (**)(void *))(*v5 + 8))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  long long v6 = *(CoreML::Specification::V5::Function **)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (CoreML::Specification::V5::Function *)v4[3];
  if (!Aligned)
  {
    uint64_t v8 = (_tc_google::protobuf::Arena *)v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::V5::Function::Function(Aligned);
    _tc_google::protobuf::Arena::AddListNode(v8, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Function>);
    void v4[3] = Aligned;
  }
  if (v6 != Aligned) {
    CoreML::Specification::V5::Function::InternalSwap(Aligned, v6);
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::erase(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v9 = *(void *)(a1 + 48);
  *(_DWORD *)(v9 + 40) |= 1u;
  uint64_t v10 = *(void *)(v9 + 16);
  if ((uint64_t *)v10 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  long long v11 = *(_OWORD *)(a1 + 16);
  *(void *)(v10 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v10 = v11;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  uint64_t v12 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v12) {
    _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
    *(void *)(a1 + 48) = 0;
  }
  return v12;
}

void sub_223F26F24(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

void *_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(_tc_google::protobuf::Arena **a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = v1;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  void *result = &unk_26D75B8B0;
  return result;
}

std::string *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  unint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  uint64_t result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::operator[](*(void *)(a1 + 8), (const std::string *)(a1 + 16));
  *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = result;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(CoreML::Specification::V5::Function **)(v4 + 24);
  if (!Aligned)
  {
    long long v6 = *(_tc_google::protobuf::Arena **)(v4 + 32);
    if (!v6) {
      operator new();
    }
    CoreML::Specification::V5::Function::Function(Aligned);
    _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Function>);
    *(void *)(v4 + 24) = Aligned;
    uint64_t result = *(std::string **)(a1 + 40);
  }
  if (Aligned != (CoreML::Specification::V5::Function *)result)
  {
    return (std::string *)CoreML::Specification::V5::Function::InternalSwap((CoreML::Specification::V5::Function *)result, Aligned);
  }
  return result;
}

void sub_223F270EC(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::MergePartialFromCodedStream(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(char **)a2;
  if (*(void *)a2 >= *(void *)(a2 + 8) || *v4 != 10)
  {
    uint64_t v10 = (void **)(a1 + 16);
    if (*(char *)(a1 + 39) < 0) {
      operator delete(*v10);
    }
    *uint64_t v10 = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    goto LABEL_13;
  }
  *(void *)a2 = v4 + 1;
  if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, (std::string *)(a1 + 16))) {
    return 0;
  }
  if ((int)(*(_DWORD *)(a2 + 8) - *(void *)a2) < 1 {
    || **(unsigned char **)a2 != 18
  }
    || (uint64_t v5 = *(void *)(a1 + 8),
        uint64_t v6 = **(void **)(v5 + 16),
        *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::operator[](v5, (const std::string *)(a1 + 16)), v6 == **(void **)(*(void *)(a1 + 8) + 16)))
  {
LABEL_13:
    long long v11 = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*(_tc_google::protobuf::Arena ***)a1);
    uint64_t v12 = *(void **)(a1 + 48);
    if (v12 != v11)
    {
      if (v12) {
        (*(void (**)(void *))(*v12 + 8))(v12);
      }
      *(void *)(a1 + 48) = v11;
    }
    uint64_t v13 = (std::string *)v11[2];
    *((_DWORD *)v11 + 10) |= 1u;
    if (v13 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
    }
    std::string::operator=(v13, (const std::string *)(a1 + 16));
    uint64_t v14 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
    if (v14) {
      _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::UseKeyAndValueFromEntry(a1);
    }
    if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
      *(void *)(a1 + 48) = 0;
    }
    return v14;
  }
  _tc_google::protobuf::io::CodedInputStream::Skip((_tc_google::protobuf::io::CodedInputStream *)a2, 1u);
  uint64_t v7 = *(CoreML::Specification::V5::Value **)(a1 + 40);
  uint64_t v8 = *(char **)a2;
  if (*(void *)a2 >= *(void *)(a2 + 8) || *v8 < 0)
  {
    int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
    if (VarintSizeAsIntFallback < 0)
    {
LABEL_31:
      _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::erase(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16));
      return 0;
    }
  }
  else
  {
    int VarintSizeAsIntFallback = *v8;
    *(void *)a2 = v8 + 1;
  }
  unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_31;
  }
  int v17 = v15;
  if (!CoreML::Specification::V5::Value::MergePartialFromCodedStream(v7, (char **)a2, v16)
    || !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17))
  {
    goto LABEL_31;
  }
  if (*(void *)a2 == *(void *)(a2 + 8) && (*(_DWORD *)(a2 + 44) || *(_DWORD *)(a2 + 24) == *(_DWORD *)(a2 + 40)))
  {
    *(_DWORD *)(a2 + 32) = 0;
    uint64_t v14 = 1;
    *(unsigned char *)(a2 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
    return v14;
  }
  return _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::ReadBeyondKeyValuePair(a1, a2);
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::erase(uint64_t a1, unsigned __int8 *a2)
{
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(*(void *)(a1 + 16), a2, 0, &v6);
  if (!(void)v6) {
    return 0;
  }
  long long v4 = v6;
  uint64_t v5 = v7;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::erase(a1, &v4, (uint64_t)&v6);
  return 1;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*(_tc_google::protobuf::Arena ***)a1);
  uint64_t v5 = *(void **)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*(void (**)(void *))(*v5 + 8))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  long long v6 = *(CoreML::Specification::V5::Value **)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (CoreML::Specification::V5::Value *)v4[3];
  if (!Aligned)
  {
    uint64_t v8 = (_tc_google::protobuf::Arena *)v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::V5::Value::Value(Aligned);
    _tc_google::protobuf::Arena::AddListNode(v8, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Value>);
    void v4[3] = Aligned;
  }
  CoreML::Specification::V5::Value::Swap((uint64_t)Aligned, v6);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::erase(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v9 = *(void *)(a1 + 48);
  *(_DWORD *)(v9 + 40) |= 1u;
  uint64_t v10 = *(void *)(v9 + 16);
  if ((uint64_t *)v10 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  long long v11 = *(_OWORD *)(a1 + 16);
  *(void *)(v10 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v10 = v11;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  uint64_t v12 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v12) {
    _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
    *(void *)(a1 + 48) = 0;
  }
  return v12;
}

void sub_223F27618(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

void *_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(_tc_google::protobuf::Arena **a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = v1;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  void *result = &unk_26D75BA30;
  return result;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  unint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  long long v3 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::operator[](*(void *)(a1 + 8), (const std::string *)(a1 + 16));
  *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(CoreML::Specification::V5::Value **)(v4 + 24);
  if (!Aligned)
  {
    long long v6 = *(_tc_google::protobuf::Arena **)(v4 + 32);
    if (!v6) {
      operator new();
    }
    CoreML::Specification::V5::Value::Value(Aligned);
    _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Value>);
    *(void *)(v4 + 24) = Aligned;
    long long v3 = *(std::string **)(a1 + 40);
  }
  return CoreML::Specification::V5::Value::Swap((uint64_t)v3, Aligned);
}

void sub_223F277C8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,false>(uint64_t result, const void ***a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = (const void ***)result;
LABEL_2:
  long long v11 = a2 - 1;
  uint64_t v12 = v10;
LABEL_3:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    uint64_t v10 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = a2 - v12;
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          uint64_t result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2 - 1, v12);
          if (result)
          {
            uint64_t v23 = *v12;
            *uint64_t v12 = *v11;
            *long long v11 = v23;
          }
          break;
        case 3uLL:
          uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, a2 - 1, a3);
          break;
        case 4uLL:
          uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, v12 + 2, a2 - 1, a3);
          break;
        case 5uLL:
          uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, v12 + 2, v12 + 3, a2 - 1, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v15 <= 191) {
      break;
    }
    if (v14 == 1)
    {
      if (v12 != a2)
      {
        return (uint64_t)std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a2, a3);
      }
      return result;
    }
    unint64_t v17 = v16 >> 1;
    uint64_t v18 = &v12[v16 >> 1];
    if ((unint64_t)v15 >= 0x401)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, &v12[v16 >> 1], a2 - 1, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12 + 1, v18 - 1, a2 - 2, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12 + 2, &v12[v17 + 1], a2 - 3, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v18 - 1, v18, &v12[v17 + 1], a3);
      uint64_t v19 = *v12;
      *uint64_t v12 = *v18;
      *uint64_t v18 = v19;
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(&v12[v16 >> 1], v12, a2 - 1, a3);
      if (a5) {
        goto LABEL_14;
      }
    }
    if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v12 - 1, v12))
    {
      uint64_t result = (uint64_t)std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(v12, a2, a3);
      uint64_t v12 = (const void ***)result;
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v20 = std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(v12, a2, a3);
    if ((v21 & 1) == 0) {
      goto LABEL_17;
    }
    BOOL v22 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v20, a3);
    uint64_t v12 = v20 + 1;
    uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v20 + 1, a2, a3);
    if (result)
    {
      a4 = -v14;
      a2 = v20;
      if (v22) {
        return result;
      }
      goto LABEL_2;
    }
    uint64_t v13 = v14 + 1;
    if (!v22)
    {
LABEL_17:
      uint64_t result = std::__introsort<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,false>(v10, v20, a3, -v14, a5 & 1);
      uint64_t v12 = v20 + 1;
LABEL_19:
      a5 = 0;
      a4 = -v14;
      goto LABEL_3;
    }
  }
  if (a5)
  {
    return (uint64_t)std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a3);
  }
  else
  {
    return (uint64_t)std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a3);
  }
}

BOOL _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(uint64_t a1, const void ***a2, const void ***a3)
{
  int v3 = *((char *)*a3 + 23);
  int v4 = *((char *)*a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)*a2 + 23);
  }
  else {
    size_t v5 = (size_t)(*a2)[1];
  }
  if (v4 >= 0) {
    char v6 = *a2;
  }
  else {
    char v6 = **a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)*a3 + 23);
  }
  else {
    size_t v7 = (size_t)(*a3)[1];
  }
  if (v3 >= 0) {
    uint64_t v8 = *a3;
  }
  else {
    uint64_t v8 = **a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

const void ***std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(const void ***result, const void ***a2, uint64_t a3)
{
  if (result != a2)
  {
    v14[7] = v3;
    unsigned char v14[8] = v4;
    char v6 = result;
    size_t v7 = result + 1;
    if (result + 1 != a2)
    {
      uint64_t v9 = 0;
      int v10 = result;
      do
      {
        long long v11 = v10;
        int v10 = v7;
        uint64_t result = (const void ***)_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v7, v11);
        if (result)
        {
          v14[0] = *v10;
          uint64_t v12 = v9;
          while (1)
          {
            *(const void ***)((char *)v6 + v12 + 8) = *(const void ***)((char *)v6 + v12);
            if (!v12) {
              break;
            }
            v12 -= 8;
            uint64_t result = (const void ***)_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v14, (const void ***)((char *)v6 + v12));
            if ((result & 1) == 0)
            {
              uint64_t v13 = (const void ***)((char *)v6 + v12 + 8);
              goto LABEL_10;
            }
          }
          uint64_t v13 = v6;
LABEL_10:
          *uint64_t v13 = v14[0];
        }
        size_t v7 = v10 + 1;
        v9 += 8;
      }
      while (v10 + 1 != a2);
    }
  }
  return result;
}

const void ***std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(const void ***result, const void ***a2, uint64_t a3)
{
  if (result != a2)
  {
    v12[7] = v3;
    unsigned char v12[8] = v4;
    char v6 = result;
    size_t v7 = result + 1;
    if (result + 1 != a2)
    {
      uint64_t v9 = result - 1;
      do
      {
        int v10 = v6;
        char v6 = v7;
        uint64_t result = (const void ***)_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v7, v10);
        if (result)
        {
          v12[0] = *v6;
          long long v11 = v9;
          do
          {
            void v11[2] = v11[1];
            uint64_t result = (const void ***)_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v12, v11--);
          }
          while ((result & 1) != 0);
          void v11[2] = v12[0];
        }
        size_t v7 = v6 + 1;
        ++v9;
      }
      while (v6 + 1 != a2);
    }
  }
  return result;
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(const void ***a1, const void ***a2, const void ***a3, uint64_t a4)
{
  BOOL v8 = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a4, a2, a1);
  uint64_t result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a4, a3, a2);
  if (!v8)
  {
    if (!result) {
      return result;
    }
    long long v11 = *a2;
    *a2 = *a3;
    *a3 = v11;
    if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a4, a2, a1))return 1; {
    uint64_t v12 = *a1;
    }
    *a1 = *a2;
    *a2 = v12;
    return 2;
  }
  int v10 = *a1;
  if (!result)
  {
    *a1 = *a2;
    *a2 = v10;
    if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a4, a3, a2))return 1; {
    uint64_t v13 = *a2;
    }
    *a2 = *a3;
    *a3 = v13;
    return 2;
  }
  *a1 = *a3;
  *a3 = v10;
  return 1;
}

const void ***std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(const void ***a1, const void ***a2, uint64_t a3)
{
  int v4 = a2;
  long long v11 = *a1;
  if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v11, a2 - 1))
  {
    char v6 = a1;
    do
      ++v6;
    while (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v11, v6));
  }
  else
  {
    size_t v7 = a1 + 1;
    do
    {
      char v6 = v7;
      if (v7 >= v4) {
        break;
      }
      BOOL v8 = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v11, v7);
      size_t v7 = v6 + 1;
    }
    while (!v8);
  }
  if (v6 < v4)
  {
    do
      --v4;
    while (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v11, v4));
  }
  while (v6 < v4)
  {
    uint64_t v9 = *v6;
    const void *v6 = *v4;
    *int v4 = v9;
    do
      ++v6;
    while (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v11, v6));
    do
      --v4;
    while (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v11, v4));
  }
  if (v6 - 1 != a1) {
    *a1 = *(v6 - 1);
  }
  *(v6 - 1) = v11;
  return v6;
}

const void ***std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(const void ***a1, const void ***a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v13 = *a1;
  do
    ++v6;
  while (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &a1[v6], &v13));
  size_t v7 = &a1[v6];
  BOOL v8 = &a1[v6 - 1];
  if (v6 == 1)
  {
    do
    {
      if (v7 >= a2) {
        break;
      }
      --a2;
    }
    while (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2, &v13));
  }
  else
  {
    do
      --a2;
    while (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2, &v13));
  }
  if (v7 < a2)
  {
    uint64_t v9 = &a1[v6];
    int v10 = a2;
    do
    {
      long long v11 = *v9;
      *uint64_t v9 = *v10;
      *int v10 = v11;
      do
        ++v9;
      while (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v9, &v13));
      do
        --v10;
      while (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v10, &v13));
    }
    while (v9 < v10);
    BOOL v8 = v9 - 1;
  }
  if (v8 != a1) {
    *a1 = *v8;
  }
  const void *v8 = v13;
  return v8;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(const void ***a1, const void ***a2, uint64_t a3)
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      BOOL v8 = a2 - 1;
      if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2 - 1, a1))
      {
        uint64_t v9 = *a1;
        *a1 = *v8;
        const void *v8 = v9;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      int v10 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a3);
      long long v11 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v11, v10))
    {
      unint64_t v17 = *v11;
      uint64_t v14 = v12;
      while (1)
      {
        uint64_t v15 = (const void ***)((char *)a1 + v14);
        *(const void ***)((char *)a1 + v14 + 24) = *(const void ***)((char *)a1 + v14 + 16);
        if (v14 == -16) {
          break;
        }
        v14 -= 8;
        if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v17, v15 + 1))
        {
          unint64_t v16 = (const void ***)((char *)a1 + v14 + 24);
          goto LABEL_12;
        }
      }
      unint64_t v16 = a1;
LABEL_12:
      *unint64_t v16 = v17;
      if (++v13 == 8) {
        return v11 + 1 == a2;
      }
    }
    int v10 = v11;
    v12 += 8;
    if (++v11 == a2) {
      return 1;
    }
  }
}

BOOL std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(const void ***a1, const void ***a2, const void ***a3, const void ***a4, uint64_t a5)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a2, a3, a5);
  BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a5, a4, a3);
  if (result)
  {
    long long v11 = *a3;
    *a3 = *a4;
    *a4 = v11;
    BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a5, a3, a2);
    if (result)
    {
      uint64_t v12 = *a2;
      *a2 = *a3;
      *a3 = v12;
      BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a5, a2, a1);
      if (result)
      {
        int v13 = *a1;
        *a1 = *a2;
        *a2 = v13;
      }
    }
  }
  return result;
}

BOOL std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(const void ***a1, const void ***a2, const void ***a3, const void ***a4, const void ***a5, uint64_t a6)
{
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a2, a3, a4, a6);
  BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a6, a5, a4);
  if (result)
  {
    int v13 = *a4;
    *a4 = *a5;
    *a5 = v13;
    BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a6, a4, a3);
    if (result)
    {
      uint64_t v14 = *a3;
      *a3 = *a4;
      *a4 = v14;
      BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a6, a3, a2);
      if (result)
      {
        uint64_t v15 = *a2;
        *a2 = *a3;
        *a3 = v15;
        BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a6, a2, a1);
        if (result)
        {
          unint64_t v16 = *a1;
          *a1 = *a2;
          *a2 = v16;
        }
      }
    }
  }
  return result;
}

const void ***std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(const void ***a1, const void ***a2, const void ***a3, uint64_t a4)
{
  if (a1 != a2)
  {
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = a2 - a1;
    if ((char *)a2 - (char *)a1 >= 9)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = &a1[v10];
      do
      {
        std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>((BOOL)a1, a4, v9, v12--);
        --v11;
      }
      while (v11);
    }
    int v13 = a2;
    if (a2 != a3)
    {
      uint64_t v14 = a2;
      do
      {
        if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a4, v14, a1))
        {
          uint64_t v15 = *v14;
          *uint64_t v14 = *a1;
          *a1 = v15;
          std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>((BOOL)a1, a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      int v13 = a3;
    }
    if (v8 >= 9)
    {
      uint64_t v16 = (unint64_t)v8 >> 3;
      unint64_t v17 = a2 - 1;
      do
      {
        uint64_t v18 = *a1;
        uint64_t v19 = (const void ***)std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a4, v16);
        if (v17 == v19)
        {
          *uint64_t v19 = v18;
        }
        else
        {
          *uint64_t v19 = *v17;
          *unint64_t v17 = v18;
          std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>((BOOL)a1, (uint64_t)(v19 + 1), a4, v19 + 1 - a1);
        }
        --v17;
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

BOOL std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(BOOL result, uint64_t a2, uint64_t a3, const void ***a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    v19[11] = v4;
    v19[12] = v5;
    size_t v7 = a4;
    BOOL v8 = result;
    int64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= ((uint64_t)a4 - result) >> 3)
    {
      uint64_t v12 = ((uint64_t)a4 - result) >> 2;
      uint64_t v13 = v12 + 1;
      uint64_t v14 = (const void ***)(result + 8 * (v12 + 1));
      uint64_t v15 = v12 + 2;
      if (v12 + 2 < a3
        && _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a2, (const void ***)(result + 8 * (v12 + 1)), v14 + 1))
      {
        ++v14;
        uint64_t v13 = v15;
      }
      BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a2, v14, v7);
      if (!result)
      {
        v19[0] = *v7;
        do
        {
          uint64_t v16 = v14;
          *size_t v7 = *v14;
          if (v9 < v13) {
            break;
          }
          uint64_t v17 = (2 * v13) | 1;
          uint64_t v14 = (const void ***)(v8 + 8 * v17);
          uint64_t v18 = 2 * v13 + 2;
          if (v18 < a3
            && _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a2, (const void ***)(v8 + 8 * v17), v14 + 1))
          {
            ++v14;
            uint64_t v17 = v18;
          }
          BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a2, v14, v19);
          size_t v7 = v16;
          uint64_t v13 = v17;
        }
        while (!result);
        *uint64_t v16 = v19[0];
      }
    }
  }
  return result;
}

void *std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    int64_t v9 = &a1[v6 + 1];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3
      && _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a2, (const void ***)&a1[v6 + 1], (const void ***)&a1[v6 + 2]))
    {
      ++v9;
      uint64_t v10 = v11;
    }
    *a1 = *v9;
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

BOOL std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(BOOL result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a4 - 2;
  if (a4 >= 2)
  {
    v13[7] = v4;
    unsigned char v13[8] = v5;
    BOOL v8 = result;
    unint64_t v9 = v6 >> 1;
    uint64_t v10 = (const void ***)(result + 8 * (v6 >> 1));
    uint64_t v11 = (const void ***)(a2 - 8);
    BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v10, (const void ***)(a2 - 8));
    if (result)
    {
      v13[0] = *v11;
      do
      {
        uint64_t v12 = v10;
        *uint64_t v11 = *v10;
        if (!v9) {
          break;
        }
        unint64_t v9 = (v9 - 1) >> 1;
        uint64_t v10 = (const void ***)(v8 + 8 * v9);
        BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v10, v13);
        uint64_t v11 = v12;
      }
      while (result);
      *uint64_t v12 = v13[0];
    }
  }
  return result;
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(uint64_t a1, uint64_t a2, _tc_google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a3;
  void *result = &unk_26D75BF10;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 3;
  return result;
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(uint64_t a1)
{
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Function,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const**,false>(uint64_t result, const void ***a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = (const void ***)result;
LABEL_2:
  uint64_t v11 = a2 - 1;
  uint64_t v12 = v10;
LABEL_3:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    uint64_t v10 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = a2 - v12;
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          BOOL result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2 - 1, v12);
          if (result)
          {
            uint64_t v23 = *v12;
            *uint64_t v12 = *v11;
            *uint64_t v11 = v23;
          }
          break;
        case 3uLL:
          BOOL result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, a2 - 1, a3);
          break;
        case 4uLL:
          BOOL result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, v12 + 2, a2 - 1, a3);
          break;
        case 5uLL:
          BOOL result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, v12 + 2, v12 + 3, a2 - 1, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v15 <= 191) {
      break;
    }
    if (v14 == 1)
    {
      if (v12 != a2)
      {
        return (uint64_t)std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a2, a3);
      }
      return result;
    }
    unint64_t v17 = v16 >> 1;
    uint64_t v18 = &v12[v16 >> 1];
    if ((unint64_t)v15 >= 0x401)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, &v12[v16 >> 1], a2 - 1, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12 + 1, v18 - 1, a2 - 2, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12 + 2, &v12[v17 + 1], a2 - 3, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v18 - 1, v18, &v12[v17 + 1], a3);
      uint64_t v19 = *v12;
      *uint64_t v12 = *v18;
      *uint64_t v18 = v19;
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(&v12[v16 >> 1], v12, a2 - 1, a3);
      if (a5) {
        goto LABEL_14;
      }
    }
    if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v12 - 1, v12))
    {
      BOOL result = (uint64_t)std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(v12, a2, a3);
      uint64_t v12 = (const void ***)result;
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v20 = std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(v12, a2, a3);
    if ((v21 & 1) == 0) {
      goto LABEL_17;
    }
    BOOL v22 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const**>(v12, v20, a3);
    uint64_t v12 = v20 + 1;
    BOOL result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const**>(v20 + 1, a2, a3);
    if (result)
    {
      a4 = -v14;
      a2 = v20;
      if (v22) {
        return result;
      }
      goto LABEL_2;
    }
    uint64_t v13 = v14 + 1;
    if (!v22)
    {
LABEL_17:
      BOOL result = std::__introsort<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const**,false>(v10, v20, a3, -v14, a5 & 1);
      uint64_t v12 = v20 + 1;
LABEL_19:
      a5 = 0;
      a4 = -v14;
      goto LABEL_3;
    }
  }
  if (a5)
  {
    return (uint64_t)std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a3);
  }
  else
  {
    return (uint64_t)std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a3);
  }
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Value> const**>(const void ***a1, const void ***a2, uint64_t a3)
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      BOOL v8 = a2 - 1;
      if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2 - 1, a1))
      {
        unint64_t v9 = *a1;
        *a1 = *v8;
        const void *v8 = v9;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      uint64_t v10 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a3);
      uint64_t v11 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v11, v10))
    {
      unint64_t v17 = *v11;
      uint64_t v14 = v12;
      while (1)
      {
        uint64_t v15 = (const void ***)((char *)a1 + v14);
        *(const void ***)((char *)a1 + v14 + 24) = *(const void ***)((char *)a1 + v14 + 16);
        if (v14 == -16) {
          break;
        }
        v14 -= 8;
        if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v17, v15 + 1))
        {
          unint64_t v16 = (const void ***)((char *)a1 + v14 + 24);
          goto LABEL_12;
        }
      }
      unint64_t v16 = a1;
LABEL_12:
      *unint64_t v16 = v17;
      if (++v13 == 8) {
        return v11 + 1 == a2;
      }
    }
    uint64_t v10 = v11;
    v12 += 8;
    if (++v11 == a2) {
      return 1;
    }
  }
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(uint64_t a1, uint64_t a2, _tc_google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a3;
  void *result = &unk_26D75BFD0;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 3;
  return result;
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(uint64_t a1)
{
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Value,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x22A614FA0);
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::swap(void *result, uint64_t a2)
{
  int v3 = result;
  if (*result == *(void *)a2)
  {
    int v4 = *((_DWORD *)result + 2);
    *((_DWORD *)result + 2) = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a2 + 8) = v4;
    uint64_t v5 = result[2];
    result[2] = *(void *)(a2 + 16);
    *(void *)(a2 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v5;
  }
  else
  {
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Map((uint64_t)v6, (uint64_t)result);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::operator=(v3, a2);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::operator=((void *)a2, (uint64_t)v6);
    return _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map(v6);
  }
  return result;
}

void sub_223F29034(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::~Map((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::operator=(void *a1, uint64_t a2)
{
  if (a1 != (void *)a2)
  {
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::clear((uint64_t)a1);
    _tc_google::protobuf::Map<std::string,std::string>::begin(a2, &v6);
    memset(v5, 0, sizeof(v5));
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::insert<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::const_iterator>(a1, &v6, v5);
  }
  return a1;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Map(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::Init(a1);
  _tc_google::protobuf::Map<std::string,std::string>::begin(a2, &v6);
  memset(v5, 0, sizeof(v5));
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::insert<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::const_iterator>((void *)a1, &v6, v5);
  return a1;
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::insert<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::const_iterator>(void *result, long long *a2, void *a3)
{
  long long v10 = *a2;
  uint64_t v11 = *((void *)a2 + 2);
  uint64_t v3 = v10;
  if ((void)v10 != *a3)
  {
    uint64_t v5 = (uint64_t)result;
    do
    {
      _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(*(void *)(v5 + 16), *(unsigned __int8 **)(v3 + 24), 0, v12);
      if (!v12[0])
      {
        long long v6 = *(const std::string **)(v10 + 24);
        uint64_t v7 = (const CoreML::Specification::V5::Value *)&v6[1];
        BOOL v8 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::operator[](v5, v6);
        if (v7 != (const CoreML::Specification::V5::Value *)v8)
        {
          unint64_t v9 = v8;
          CoreML::Specification::V5::Value::Clear((CoreML::Specification::V5::Value *)v8);
          CoreML::Specification::V5::Value::MergeFrom(v9, v7);
        }
      }
      BOOL result = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(&v10);
      uint64_t v3 = v10;
    }
    while ((void)v10 != *a3);
  }
  return result;
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::Init(uint64_t a1)
{
  unint64_t v2 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InnerMap(Aligned, 0, v2);
  BOOL result = _tc_google::protobuf::Arena::AddListNode(v2, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap>);
  *(void *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = Aligned;
  return result;
}

void sub_223F29268(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E0C40D5F42F35);
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::operator[](uint64_t a1, const std::string *a2)
{
  int v4 = (std::string **)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::operator[](*(uint64_t **)(a1 + 16), (uint64_t)a2);
  ValueTypeInternal = *v4;
  if (!*v4)
  {
    ValueTypeInternal = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::CreateValueTypeInternal((_tc_google::protobuf::Arena **)a1, a2);
    *int v4 = ValueTypeInternal;
  }
  return ValueTypeInternal + 1;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::operator[](uint64_t *a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v6, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v6 = *(std::string *)a2;
  }
  uint64_t v7 = 0;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::insert(a1, (long long *)&v6, (uint64_t)v5);
  uint64_t v3 = v5[0];
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  return v3 + 24;
}

void sub_223F29364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::CreateValueTypeInternal(_tc_google::protobuf::Arena **a1, const std::string *a2)
{
  int v4 = *a1;
  if (!v4) {
    operator new();
  }
  Aligned = (std::string *)_tc_google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x263F8C250], 152);
  std::string v6 = *a1;
  Aligned->__r_.__value_.__l.__size_ = 0;
  Aligned->__r_.__value_.__r.__words[2] = 0;
  Aligned->__r_.__value_.__r.__words[0] = 0;
  _tc_google::protobuf::Arena::OwnDestructor<std::string>(v6, Aligned);
  uint64_t v7 = *a1;
  CoreML::Specification::V5::Block::Block((CoreML::Specification::V5::Block *)&Aligned[1]);
  _tc_google::protobuf::Arena::OwnDestructor<CoreML::Specification::V5::Block>(v7, &Aligned[1]);
  std::string::operator=(Aligned, a2);
  return Aligned;
}

void sub_223F29430(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10B2C4008C62E43);
  _Unwind_Resume(a1);
}

double _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::insert@<D0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (unsigned __int8 *)a2, 0, &v17);
  if ((void)v17)
  {
    uint64_t v7 = *((void *)&v17 + 1);
    uint64_t v8 = v18;
    *(void *)a3 = v17;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v8;
    *(unsigned char *)(a3 + 24) = 0;
  }
  else
  {
    if (_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::ResizeIfLoadIsOutOfRange(a1, *a1 + 1))
    {
      _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (unsigned __int8 *)a2, 0, &v14);
      long long v17 = v14;
      uint64_t v9 = v16;
      uint64_t v18 = v15;
      uint64_t v19 = v16;
    }
    else
    {
      uint64_t v9 = v19;
    }
    long long v10 = (_tc_google::protobuf::Arena *)a1[5];
    if (v10) {
      Aligned = (std::string *)_tc_google::protobuf::Arena::AllocateAligned(v10, MEMORY[0x263F8C250], 40);
    }
    else {
      Aligned = (std::string *)operator new(0x28uLL);
    }
    uint64_t v12 = (uint64_t)Aligned;
    if (*((char *)a2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(Aligned, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v13 = *a2;
      Aligned->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
      *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v13;
    }
    *(void *)(v12 + 24) = *((void *)a2 + 3);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::InsertUnique(a1, v9, v12, (uint64_t *)&v14);
    ++*a1;
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v15;
    *(unsigned char *)(a3 + 24) = 1;
  }
  return result;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::ResizeIfLoadIsOutOfRange(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = ((3 * v2) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v3 <= a2)
  {
    if (v2 <= 0x800000000000000)
    {
      uint64_t v6 = 2 * v2;
LABEL_16:
      _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::Resize(a1, v6);
      return 1;
    }
  }
  else if (v2 >= 9 && (12 * v2) >> 6 >= a2)
  {
    char v7 = 0;
    do
      ++v7;
    while ((((5 * a2) >> 2) + 1) << v7 < v3);
    uint64_t v6 = v2 >> v7 <= 8 ? 8 : v2 >> v7;
    if (v6 != v2) {
      goto LABEL_16;
    }
  }
  return 0;
}

uint64_t *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::InsertUnique@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = a3;
  unint64_t v5 = a2;
  uint64_t v6 = result;
  uint64_t v8 = result[4];
  uint64_t v9 = *(void *)(v8 + 8 * a2);
  if (!v9)
  {
    *(void *)(a3 + 32) = 0;
    *(void *)(v8 + 8 * a2) = a3;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a2 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a2);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 32);
    }
    while (v11);
    if (v10 < 8)
    {
      *(void *)(a3 + 32) = v9;
      *(void *)(v8 + 8 * a2) = a3;
LABEL_11:
      *a4 = v4;
      a4[1] = (uint64_t)v6;
      a4[2] = v5;
      return result;
    }
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::TreeConvert((uint64_t)result, a2);
    *(void *)(v4 + 32) = 0;
    uint64_t v14 = *(void *)(v6[4] + 8 * v5);
    uint64_t v15 = (const void **)v4;
    double result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v14, &v15, (uint64_t *)&v15);
    v5 &= ~1uLL;
    uint64_t v4 = result[4];
LABEL_8:
    unint64_t v12 = v6[3];
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    void v6[3] = v12;
    goto LABEL_11;
  }
  *(void *)(a3 + 32) = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a2);
  uint64_t v15 = (const void **)a3;
  double result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v13, &v15, (uint64_t *)&v15);
  *a4 = result[4];
  a4[1] = (uint64_t)v6;
  a4[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::Resize(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  a1[1] = a2;
  unint64_t v5 = (void *)a1[4];
  uint64_t v9 = (_tc_google::protobuf::Arena *)a1[5];
  uint64_t v6 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<void *>::allocate(&v9, a2, 0);
  bzero(v6, 8 * a2);
  unint64_t v7 = a1[3];
  a1[3] = a1[1];
  a1[4] = (uint64_t)v6;
  while (v7 < v4)
  {
    uint64_t v8 = v5[v7];
    if (v8)
    {
      if (v8 == v5[v7 ^ 1]) {
        _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::TransferTree(a1, (uint64_t)v5, v7++);
      }
      else {
        _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::TransferList(a1, (uint64_t)v5, v7);
      }
    }
    ++v7;
  }
  if (!a1[5]) {
    operator delete(v5);
  }
}

uint64_t *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::TransferList(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8 * a3);
  do
  {
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, (unsigned char *)v4);
    double result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::InsertUnique(a1, v6, v4, v8);
    uint64_t v4 = v5;
  }
  while (v5);
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::TransferTree(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void ***)(a2 + 8 * a3);
  uint64_t v5 = *v4;
  do
  {
    uint64_t v6 = (unsigned char *)v5[4];
    uint64_t v7 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, v6);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::InsertUnique(a1, v7, (uint64_t)v6, v11);
    uint64_t v8 = (void *)v5[1];
    if (v8)
    {
      do
      {
        uint64_t v9 = v8;
        uint64_t v8 = (void *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        uint64_t v9 = (void *)v5[2];
        BOOL v10 = *v9 == (void)v5;
        uint64_t v5 = v9;
      }
      while (!v10);
    }
    uint64_t v5 = v9;
  }
  while (v9 != v4 + 1);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyTree((uint64_t)a1, v4);
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(_tc_google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = _tc_google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x263F8C250], 32);
  }
  else {
    Aligned = (uint64_t *)operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  v9[1] = *(void **)(a1 + 40);
  void v9[2] = 0;
  uint64_t v8 = v9;
  v9[0] = 0;
  std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::MapAllocator<std::string *>>::set[abi:ne180100](Aligned, (uint64_t)&v8);
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy((uint64_t)&v8, v9[0]);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(a1, a2, v6);
  uint64_t result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(a1, a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_223F299BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

uint64_t *std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::MapAllocator<std::string *>>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  *a1 = 0;
  uint64_t v3 = *(void *)(a2 + 16);
  a1[1] = 0;
  a1[2] = v3;
  a1[3] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::insert[abi:ne180100]<std::__tree_const_iterator<std::string *,std::__tree_node<std::string *,void *> *,long>>(a1, *(const void ****)a2, (const void ****)(a2 + 8));
  return a1;
}

void sub_223F29A1C(_Unwind_Exception *a1)
{
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block>::MapPair(std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
  CoreML::Specification::V5::Block::Block((CoreML::Specification::V5::Block *)&this[1]);
  return this;
}

void sub_223F29A8C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::OwnDestructor<CoreML::Specification::V5::Block>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Block>);
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Function>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>>::MergePartialFromCodedStream(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(char **)a2;
  if (*(void *)a2 >= *(void *)(a2 + 8) || *v4 != 10)
  {
    BOOL v10 = (void **)(a1 + 16);
    if (*(char *)(a1 + 39) < 0) {
      operator delete(*v10);
    }
    *BOOL v10 = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    goto LABEL_13;
  }
  *(void *)a2 = v4 + 1;
  if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, (std::string *)(a1 + 16))) {
    return 0;
  }
  if ((int)(*(_DWORD *)(a2 + 8) - *(void *)a2) < 1 {
    || **(unsigned char **)a2 != 18
  }
    || (uint64_t v5 = *(void *)(a1 + 8),
        uint64_t v6 = **(void **)(v5 + 16),
        *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::operator[](v5, (const std::string *)(a1 + 16)), v6 == **(void **)(*(void *)(a1 + 8) + 16)))
  {
LABEL_13:
    uint64_t v11 = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*(_tc_google::protobuf::Arena ***)a1);
    unint64_t v12 = *(void **)(a1 + 48);
    if (v12 != v11)
    {
      if (v12) {
        (*(void (**)(void *))(*v12 + 8))(v12);
      }
      *(void *)(a1 + 48) = v11;
    }
    uint64_t v13 = (std::string *)v11[2];
    *((_DWORD *)v11 + 10) |= 1u;
    if (v13 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
    }
    std::string::operator=(v13, (const std::string *)(a1 + 16));
    uint64_t v14 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
    if (v14) {
      _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>>::UseKeyAndValueFromEntry(a1);
    }
    if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
      *(void *)(a1 + 48) = 0;
    }
    return v14;
  }
  _tc_google::protobuf::io::CodedInputStream::Skip((_tc_google::protobuf::io::CodedInputStream *)a2, 1u);
  uint64_t v7 = *(CoreML::Specification::V5::Block **)(a1 + 40);
  uint64_t v8 = *(char **)a2;
  if (*(void *)a2 >= *(void *)(a2 + 8) || *v8 < 0)
  {
    int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
    if (VarintSizeAsIntFallback < 0)
    {
LABEL_31:
      _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::erase(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16));
      return 0;
    }
  }
  else
  {
    int VarintSizeAsIntFallback = *v8;
    *(void *)a2 = v8 + 1;
  }
  unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_31;
  }
  int v17 = v15;
  if (!CoreML::Specification::V5::Block::MergePartialFromCodedStream(v7, (char **)a2, v16)
    || !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17))
  {
    goto LABEL_31;
  }
  if (*(void *)a2 == *(void *)(a2 + 8) && (*(_DWORD *)(a2 + 44) || *(_DWORD *)(a2 + 24) == *(_DWORD *)(a2 + 40)))
  {
    *(_DWORD *)(a2 + 32) = 0;
    uint64_t v14 = 1;
    *(unsigned char *)(a2 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
    return v14;
  }
  return _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>>::ReadBeyondKeyValuePair(a1, a2);
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::erase(uint64_t a1, unsigned __int8 *a2)
{
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(*(void *)(a1 + 16), a2, 0, &v6);
  if (!(void)v6) {
    return 0;
  }
  long long v4 = v6;
  uint64_t v5 = v7;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::erase(a1, &v4, (uint64_t)&v6);
  return 1;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*(_tc_google::protobuf::Arena ***)a1);
  uint64_t v5 = *(void **)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*(void (**)(void *))(*v5 + 8))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  long long v6 = *(CoreML::Specification::V5::Block **)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (CoreML::Specification::V5::Block *)v4[3];
  if (!Aligned)
  {
    uint64_t v8 = (_tc_google::protobuf::Arena *)v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::V5::Block::Block(Aligned);
    _tc_google::protobuf::Arena::AddListNode(v8, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Block>);
    void v4[3] = Aligned;
  }
  if (v6 != Aligned) {
    CoreML::Specification::V5::Block::InternalSwap(Aligned, v6);
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::erase(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v9 = *(void *)(a1 + 48);
  *(_DWORD *)(v9 + 40) |= 1u;
  uint64_t v10 = *(void *)(v9 + 16);
  if ((uint64_t *)v10 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  long long v11 = *(_OWORD *)(a1 + 16);
  *(void *)(v10 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v10 = v11;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  uint64_t v12 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v12) {
    _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
    *(void *)(a1 + 48) = 0;
  }
  return v12;
}

void sub_223F2A000(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

void *_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(_tc_google::protobuf::Arena **a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = v1;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  void *result = &unk_26D75BBB0;
  return result;
}

std::string *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  unint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  uint64_t result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::operator[](*(void *)(a1 + 8), (const std::string *)(a1 + 16));
  *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = result;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(CoreML::Specification::V5::Block **)(v4 + 24);
  if (!Aligned)
  {
    long long v6 = *(_tc_google::protobuf::Arena **)(v4 + 32);
    if (!v6) {
      operator new();
    }
    CoreML::Specification::V5::Block::Block(Aligned);
    _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Block>);
    *(void *)(v4 + 24) = Aligned;
    uint64_t result = *(std::string **)(a1 + 40);
  }
  if (Aligned != (CoreML::Specification::V5::Block *)result)
  {
    return (std::string *)CoreML::Specification::V5::Block::InternalSwap((CoreML::Specification::V5::Block *)result, Aligned);
  }
  return result;
}

void sub_223F2A1C8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const**,false>(uint64_t result, const void ***a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = (const void ***)result;
LABEL_2:
  long long v11 = a2 - 1;
  uint64_t v12 = v10;
LABEL_3:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    uint64_t v10 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = a2 - v12;
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          uint64_t result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2 - 1, v12);
          if (result)
          {
            uint64_t v23 = *v12;
            *uint64_t v12 = *v11;
            *long long v11 = v23;
          }
          break;
        case 3uLL:
          uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, a2 - 1, a3);
          break;
        case 4uLL:
          uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, v12 + 2, a2 - 1, a3);
          break;
        case 5uLL:
          uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, v12 + 2, v12 + 3, a2 - 1, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v15 <= 191) {
      break;
    }
    if (v14 == 1)
    {
      if (v12 != a2)
      {
        return (uint64_t)std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a2, a3);
      }
      return result;
    }
    unint64_t v17 = v16 >> 1;
    uint64_t v18 = &v12[v16 >> 1];
    if ((unint64_t)v15 >= 0x401)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, &v12[v16 >> 1], a2 - 1, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12 + 1, v18 - 1, a2 - 2, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12 + 2, &v12[v17 + 1], a2 - 3, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v18 - 1, v18, &v12[v17 + 1], a3);
      uint64_t v19 = *v12;
      *uint64_t v12 = *v18;
      *uint64_t v18 = v19;
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(&v12[v16 >> 1], v12, a2 - 1, a3);
      if (a5) {
        goto LABEL_14;
      }
    }
    if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v12 - 1, v12))
    {
      uint64_t result = (uint64_t)std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(v12, a2, a3);
      uint64_t v12 = (const void ***)result;
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v20 = std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(v12, a2, a3);
    if ((v21 & 1) == 0) {
      goto LABEL_17;
    }
    BOOL v22 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const**>(v12, v20, a3);
    uint64_t v12 = v20 + 1;
    uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const**>(v20 + 1, a2, a3);
    if (result)
    {
      a4 = -v14;
      a2 = v20;
      if (v22) {
        return result;
      }
      goto LABEL_2;
    }
    uint64_t v13 = v14 + 1;
    if (!v22)
    {
LABEL_17:
      uint64_t result = std::__introsort<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const**,false>(v10, v20, a3, -v14, a5 & 1);
      uint64_t v12 = v20 + 1;
LABEL_19:
      a5 = 0;
      a4 = -v14;
      goto LABEL_3;
    }
  }
  if (a5)
  {
    return (uint64_t)std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a3);
  }
  else
  {
    return (uint64_t)std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a3);
  }
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Block> const**>(const void ***a1, const void ***a2, uint64_t a3)
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v8 = a2 - 1;
      if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2 - 1, a1))
      {
        uint64_t v9 = *a1;
        *a1 = *v8;
        _tc_google::protobuf::Arena *v8 = v9;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      uint64_t v10 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a3);
      long long v11 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v11, v10))
    {
      unint64_t v17 = *v11;
      uint64_t v14 = v12;
      while (1)
      {
        uint64_t v15 = (const void ***)((char *)a1 + v14);
        *(const void ***)((char *)a1 + v14 + 24) = *(const void ***)((char *)a1 + v14 + 16);
        if (v14 == -16) {
          break;
        }
        v14 -= 8;
        if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v17, v15 + 1))
        {
          unint64_t v16 = (const void ***)((char *)a1 + v14 + 24);
          goto LABEL_12;
        }
      }
      unint64_t v16 = a1;
LABEL_12:
      *unint64_t v16 = v17;
      if (++v13 == 8) {
        return v11 + 1 == a2;
      }
    }
    uint64_t v10 = v11;
    v12 += 8;
    if (++v11 == a2) {
      return 1;
    }
  }
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(uint64_t a1, uint64_t a2, _tc_google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a3;
  void *result = &unk_26D75C0B8;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 3;
  return result;
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(uint64_t a1)
{
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Block,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x22A614FA0);
}

std::string *_tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::NamedValueType>::TypeHandler>(std::string *result, std::string **a2, CoreML::Specification::V5::NamedValueType **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    long long v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::NamedValueType>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = (CoreML::Specification::V5::NamedValueType **)&a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::V5::NamedValueType::NamedValueType(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::NamedValueType>);
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::NamedValueType>::Merge(v21, (std::string *)Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223F2A970(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::NamedValueType>::Merge(CoreML::Specification::V5::NamedValueType *a1, std::string *this)
{
  return CoreML::Specification::V5::NamedValueType::MergeFrom(this, a1);
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::swap(void *result, uint64_t a2)
{
  long long v3 = result;
  if (*result == *(void *)a2)
  {
    int v4 = *((_DWORD *)result + 2);
    *((_DWORD *)result + 2) = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a2 + 8) = v4;
    uint64_t v5 = result[2];
    result[2] = *(void *)(a2 + 16);
    *(void *)(a2 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v5;
  }
  else
  {
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::Map((uint64_t)v6, (uint64_t)result);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::operator=(v3, a2);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::operator=((void *)a2, (uint64_t)v6);
    return _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::~Map(v6);
  }
  return result;
}

void sub_223F2AA30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::~Map((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::operator=(void *a1, uint64_t a2)
{
  if (a1 != (void *)a2)
  {
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::clear((uint64_t)a1);
    _tc_google::protobuf::Map<std::string,std::string>::begin(a2, &v6);
    memset(v5, 0, sizeof(v5));
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::insert<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::const_iterator>(a1, &v6, v5);
  }
  return a1;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::Map(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::Init(a1);
  _tc_google::protobuf::Map<std::string,std::string>::begin(a2, &v6);
  memset(v5, 0, sizeof(v5));
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::insert<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::const_iterator>((void *)a1, &v6, v5);
  return a1;
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::insert<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::const_iterator>(void *result, long long *a2, void *a3)
{
  long long v10 = *a2;
  uint64_t v11 = *((void *)a2 + 2);
  uint64_t v3 = v10;
  if ((void)v10 != *a3)
  {
    uint64_t v5 = (uint64_t)result;
    do
    {
      _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(*(void *)(v5 + 16), *(unsigned __int8 **)(v3 + 24), 0, v12);
      if (!v12[0])
      {
        long long v6 = *(const std::string **)(v10 + 24);
        uint64_t v7 = (const CoreML::Specification::V5::Block *)&v6[1];
        uint64_t v8 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Block>::operator[](v5, v6);
        if (v7 != (const CoreML::Specification::V5::Block *)v8)
        {
          uint64_t v9 = (CoreML::Specification::V5::Block *)v8;
          CoreML::Specification::V5::Block::Clear((CoreML::Specification::V5::Block *)v8);
          CoreML::Specification::V5::Block::MergeFrom(v9, v7);
        }
      }
      BOOL result = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<_tc_google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(&v10);
      uint64_t v3 = v10;
    }
    while ((void)v10 != *a3);
  }
  return result;
}

void _tc_google::protobuf::internal::RepeatedPtrFieldBase::Destroy<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(void *a1)
{
  unint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (uint64_t *)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        uint64_t v5 = *v3;
        if (*v3)
        {
          if (*(char *)(v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          MEMORY[0x22A614FA0](v5, 0x1012C40EC159624);
        }
        ++v3;
        --v4;
      }
      while (v4);
      unint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Block>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

std::string *_tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(std::string *result, std::string **a2, const std::string **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = std::string::operator=(v15, v13);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = &a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      Aligned->__r_.__value_.__l.__size_ = 0;
      Aligned->__r_.__value_.__r.__words[2] = 0;
      Aligned->__r_.__value_.__r.__words[0] = 0;
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<std::string>);
      BOOL result = std::string::operator=(Aligned, v21);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *_tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Operation>::TypeHandler>(std::string *result, std::string **a2, CoreML::Specification::V5::Operation **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Operation>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = (CoreML::Specification::V5::Operation **)&a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::V5::Operation::Operation(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Operation>);
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Operation>::Merge(v21, (std::string *)Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223F2AEA0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40B3FB24A3);
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Operation>::Merge(CoreML::Specification::V5::Operation *a1, std::string *this)
{
  return CoreML::Specification::V5::Operation::MergeFrom(this, a1);
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Argument_Binding>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Argument>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

std::string *_tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Argument_Binding>::TypeHandler>(std::string *result, std::string **a2, CoreML::Specification::V5::Argument_Binding **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Argument_Binding>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = (CoreML::Specification::V5::Argument_Binding **)&a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::V5::Argument_Binding::Argument_Binding(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument_Binding>);
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Argument_Binding>::Merge(v21, (std::string *)Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223F2B038(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Argument_Binding>::Merge(CoreML::Specification::V5::Argument_Binding *a1, std::string *this)
{
  return CoreML::Specification::V5::Argument_Binding::MergeFrom(this, a1);
}

void *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::Init(uint64_t a1)
{
  unint64_t v2 = *(_tc_google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::InnerMap(Aligned, 0, v2);
  BOOL result = _tc_google::protobuf::Arena::AddListNode(v2, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap>);
  *(void *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = Aligned;
  return result;
}

void sub_223F2B10C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E0C40D5F42F35);
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::operator[](uint64_t a1, const std::string *a2)
{
  uint64_t v4 = (std::string **)_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::operator[](*(uint64_t **)(a1 + 16), (uint64_t)a2);
  ValueTypeInternal = *v4;
  if (!*v4)
  {
    ValueTypeInternal = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::CreateValueTypeInternal((_tc_google::protobuf::Arena **)a1, a2);
    *uint64_t v4 = ValueTypeInternal;
  }
  return ValueTypeInternal + 1;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::operator[](uint64_t *a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v6, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v6 = *(std::string *)a2;
  }
  uint64_t v7 = 0;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::insert(a1, (long long *)&v6, (uint64_t)v5);
  uint64_t v3 = v5[0];
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  return v3 + 24;
}

void sub_223F2B208(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::CreateValueTypeInternal(_tc_google::protobuf::Arena **a1, const std::string *a2)
{
  uint64_t v4 = *a1;
  if (!v4) {
    operator new();
  }
  Aligned = (std::string *)_tc_google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x263F8C250], 72);
  std::string v6 = *a1;
  Aligned->__r_.__value_.__l.__size_ = 0;
  Aligned->__r_.__value_.__r.__words[2] = 0;
  Aligned->__r_.__value_.__r.__words[0] = 0;
  _tc_google::protobuf::Arena::OwnDestructor<std::string>(v6, Aligned);
  uint64_t v7 = *a1;
  CoreML::Specification::V5::Argument::Argument((CoreML::Specification::V5::Argument *)&Aligned[1]);
  _tc_google::protobuf::Arena::OwnDestructor<CoreML::Specification::V5::Argument>(v7, &Aligned[1]);
  std::string::operator=(Aligned, a2);
  return Aligned;
}

void sub_223F2B2D4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10B2C40C743746ALL);
  _Unwind_Resume(a1);
}

double _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::insert@<D0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (unsigned __int8 *)a2, 0, &v17);
  if ((void)v17)
  {
    uint64_t v7 = *((void *)&v17 + 1);
    uint64_t v8 = v18;
    *(void *)a3 = v17;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v8;
    *(unsigned char *)(a3 + 24) = 0;
  }
  else
  {
    if (_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::ResizeIfLoadIsOutOfRange(a1, *a1 + 1))
    {
      _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (unsigned __int8 *)a2, 0, &v14);
      long long v17 = v14;
      uint64_t v9 = v16;
      uint64_t v18 = v15;
      uint64_t v19 = v16;
    }
    else
    {
      uint64_t v9 = v19;
    }
    uint64_t v10 = (_tc_google::protobuf::Arena *)a1[5];
    if (v10) {
      Aligned = (std::string *)_tc_google::protobuf::Arena::AllocateAligned(v10, MEMORY[0x263F8C250], 40);
    }
    else {
      Aligned = (std::string *)operator new(0x28uLL);
    }
    uint64_t v12 = (uint64_t)Aligned;
    if (*((char *)a2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(Aligned, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v13 = *a2;
      Aligned->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
      *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v13;
    }
    *(void *)(v12 + 24) = *((void *)a2 + 3);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::InsertUnique(a1, v9, v12, (uint64_t *)&v14);
    ++*a1;
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v15;
    *(unsigned char *)(a3 + 24) = 1;
  }
  return result;
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::ResizeIfLoadIsOutOfRange(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = ((3 * v2) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v3 <= a2)
  {
    if (v2 <= 0x800000000000000)
    {
      uint64_t v6 = 2 * v2;
LABEL_16:
      _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::Resize(a1, v6);
      return 1;
    }
  }
  else if (v2 >= 9 && (12 * v2) >> 6 >= a2)
  {
    char v7 = 0;
    do
      ++v7;
    while ((((5 * a2) >> 2) + 1) << v7 < v3);
    uint64_t v6 = v2 >> v7 <= 8 ? 8 : v2 >> v7;
    if (v6 != v2) {
      goto LABEL_16;
    }
  }
  return 0;
}

uint64_t *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::InsertUnique@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = a3;
  unint64_t v5 = a2;
  uint64_t v6 = result;
  uint64_t v8 = result[4];
  uint64_t v9 = *(void *)(v8 + 8 * a2);
  if (!v9)
  {
    *(void *)(a3 + 32) = 0;
    *(void *)(v8 + 8 * a2) = a3;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a2 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a2);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 32);
    }
    while (v11);
    if (v10 < 8)
    {
      *(void *)(a3 + 32) = v9;
      *(void *)(v8 + 8 * a2) = a3;
LABEL_11:
      *a4 = v4;
      a4[1] = (uint64_t)v6;
      a4[2] = v5;
      return result;
    }
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::TreeConvert((uint64_t)result, a2);
    *(void *)(v4 + 32) = 0;
    uint64_t v14 = *(void *)(v6[4] + 8 * v5);
    uint64_t v15 = (const void **)v4;
    double result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v14, &v15, (uint64_t *)&v15);
    v5 &= ~1uLL;
    uint64_t v4 = result[4];
LABEL_8:
    unint64_t v12 = v6[3];
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    void v6[3] = v12;
    goto LABEL_11;
  }
  *(void *)(a3 + 32) = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a2);
  uint64_t v15 = (const void **)a3;
  double result = std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v13, &v15, (uint64_t *)&v15);
  *a4 = result[4];
  a4[1] = (uint64_t)v6;
  a4[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::Resize(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  a1[1] = a2;
  unint64_t v5 = (void *)a1[4];
  uint64_t v9 = (_tc_google::protobuf::Arena *)a1[5];
  uint64_t v6 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<void *>::allocate(&v9, a2, 0);
  bzero(v6, 8 * a2);
  unint64_t v7 = a1[3];
  a1[3] = a1[1];
  a1[4] = (uint64_t)v6;
  while (v7 < v4)
  {
    uint64_t v8 = v5[v7];
    if (v8)
    {
      if (v8 == v5[v7 ^ 1]) {
        _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::TransferTree(a1, (uint64_t)v5, v7++);
      }
      else {
        _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::TransferList(a1, (uint64_t)v5, v7);
      }
    }
    ++v7;
  }
  if (!a1[5]) {
    operator delete(v5);
  }
}

uint64_t *_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::TransferList(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8 * a3);
  do
  {
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, (unsigned char *)v4);
    double result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::InsertUnique(a1, v6, v4, v8);
    uint64_t v4 = v5;
  }
  while (v5);
  return result;
}

void _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::TransferTree(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void ***)(a2 + 8 * a3);
  uint64_t v5 = *v4;
  do
  {
    uint64_t v6 = (unsigned char *)v5[4];
    uint64_t v7 = _tc_google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, v6);
    _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::InsertUnique(a1, v7, (uint64_t)v6, v11);
    uint64_t v8 = (void *)v5[1];
    if (v8)
    {
      do
      {
        uint64_t v9 = v8;
        uint64_t v8 = (void *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        uint64_t v9 = (void *)v5[2];
        BOOL v10 = *v9 == (void)v5;
        uint64_t v5 = v9;
      }
      while (!v10);
    }
    uint64_t v5 = v9;
  }
  while (v9 != v4 + 1);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::DestroyTree((uint64_t)a1, v4);
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(_tc_google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = _tc_google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x263F8C250], 32);
  }
  else {
    Aligned = (uint64_t *)operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  v9[1] = *(void **)(a1 + 40);
  void v9[2] = 0;
  uint64_t v8 = v9;
  v9[0] = 0;
  std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::MapAllocator<std::string *>>::set[abi:ne180100](Aligned, (uint64_t)&v8);
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy((uint64_t)&v8, v9[0]);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(a1, a2, v6);
  uint64_t result = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::CopyListToTree(a1, a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_223F2B860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

uint64_t *std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::MapAllocator<std::string *>>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  *a1 = 0;
  uint64_t v3 = *(void *)(a2 + 16);
  a1[1] = 0;
  a1[2] = v3;
  a1[3] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Function>::MapAllocator<std::string *>>::insert[abi:ne180100]<std::__tree_const_iterator<std::string *,std::__tree_node<std::string *,void *> *,long>>(a1, *(const void ****)a2, (const void ****)(a2 + 8));
  return a1;
}

void sub_223F2B8C0(_Unwind_Exception *a1)
{
  std::__tree<std::string *,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::InnerMap::KeyCompare,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Value>::MapAllocator<std::string *>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument>::MapPair(std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
  CoreML::Specification::V5::Argument::Argument((CoreML::Specification::V5::Argument *)&this[1]);
  return this;
}

void sub_223F2B930(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

_tc_google::protobuf::Arena *_tc_google::protobuf::Arena::OwnDestructor<CoreML::Specification::V5::Argument>(_tc_google::protobuf::Arena *result, void *a2)
{
  if (a2) {
    return (_tc_google::protobuf::Arena *)_tc_google::protobuf::Arena::AddListNode(result, a2, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument>);
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Operation>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>>::MergePartialFromCodedStream(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(char **)a2;
  if (*(void *)a2 >= *(void *)(a2 + 8) || *v4 != 10)
  {
    BOOL v10 = (void **)(a1 + 16);
    if (*(char *)(a1 + 39) < 0) {
      operator delete(*v10);
    }
    *BOOL v10 = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    goto LABEL_13;
  }
  *(void *)a2 = v4 + 1;
  if (!_tc_google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, (std::string *)(a1 + 16))) {
    return 0;
  }
  if ((int)(*(_DWORD *)(a2 + 8) - *(void *)a2) < 1 {
    || **(unsigned char **)a2 != 18
  }
    || (uint64_t v5 = *(void *)(a1 + 8),
        uint64_t v6 = **(void **)(v5 + 16),
        *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::operator[](v5, (const std::string *)(a1 + 16)), v6 == **(void **)(*(void *)(a1 + 8) + 16)))
  {
LABEL_13:
    uint64_t v11 = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*(_tc_google::protobuf::Arena ***)a1);
    unint64_t v12 = *(void **)(a1 + 48);
    if (v12 != v11)
    {
      if (v12) {
        (*(void (**)(void *))(*v12 + 8))(v12);
      }
      *(void *)(a1 + 48) = v11;
    }
    uint64_t v13 = (std::string *)v11[2];
    *((_DWORD *)v11 + 10) |= 1u;
    if (v13 == (std::string *)&_tc_google::protobuf::internal::fixed_address_empty_string) {
      _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
    }
    std::string::operator=(v13, (const std::string *)(a1 + 16));
    uint64_t v14 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
    if (v14) {
      _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>>::UseKeyAndValueFromEntry(a1);
    }
    if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
      *(void *)(a1 + 48) = 0;
    }
    return v14;
  }
  _tc_google::protobuf::io::CodedInputStream::Skip((_tc_google::protobuf::io::CodedInputStream *)a2, 1u);
  uint64_t v7 = *(CoreML::Specification::V5::Argument **)(a1 + 40);
  uint64_t v8 = *(char **)a2;
  if (*(void *)a2 >= *(void *)(a2 + 8) || *v8 < 0)
  {
    int VarintSizeAsIntFallback = _tc_google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((_tc_google::protobuf::io::CodedInputStream *)a2);
    if (VarintSizeAsIntFallback < 0)
    {
LABEL_31:
      _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::erase(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16));
      return 0;
    }
  }
  else
  {
    int VarintSizeAsIntFallback = *v8;
    *(void *)a2 = v8 + 1;
  }
  unint64_t v15 = _tc_google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit((_tc_google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_31;
  }
  int v17 = v15;
  if (!CoreML::Specification::V5::Argument::MergePartialFromCodedStream(v7, (char **)a2, v16)
    || !_tc_google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((_tc_google::protobuf::io::CodedInputStream *)a2, v17))
  {
    goto LABEL_31;
  }
  if (*(void *)a2 == *(void *)(a2 + 8) && (*(_DWORD *)(a2 + 44) || *(_DWORD *)(a2 + 24) == *(_DWORD *)(a2 + 40)))
  {
    *(_DWORD *)(a2 + 32) = 0;
    uint64_t v14 = 1;
    *(unsigned char *)(a2 + 3boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
    return v14;
  }
  return _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>>::ReadBeyondKeyValuePair(a1, a2);
}

uint64_t _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::erase(uint64_t a1, unsigned __int8 *a2)
{
  _tc_google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(*(void *)(a1 + 16), a2, 0, &v6);
  if (!(void)v6) {
    return 0;
  }
  long long v4 = v6;
  uint64_t v5 = v7;
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::erase(a1, &v4, (uint64_t)&v6);
  return 1;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = _tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*(_tc_google::protobuf::Arena ***)a1);
  uint64_t v5 = *(void **)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*(void (**)(void *))(*v5 + 8))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  long long v6 = *(CoreML::Specification::V5::Argument **)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (CoreML::Specification::V5::Argument *)v4[3];
  if (!Aligned)
  {
    uint64_t v8 = (_tc_google::protobuf::Arena *)v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::V5::Argument::Argument(Aligned);
    _tc_google::protobuf::Arena::AddListNode(v8, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument>);
    void v4[3] = Aligned;
  }
  CoreML::Specification::V5::Argument::Swap((uint64_t)Aligned, v6);
  _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::erase(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v9 = *(void *)(a1 + 48);
  *(_DWORD *)(v9 + 40) |= 1u;
  uint64_t v10 = *(void *)(v9 + 16);
  if ((uint64_t *)v10 == &_tc_google::protobuf::internal::fixed_address_empty_string) {
    _tc_google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  long long v11 = *(_OWORD *)(a1 + 16);
  *(void *)(v10 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v10 = v11;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  uint64_t v12 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v12) {
    _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
    *(void *)(a1 + 48) = 0;
  }
  return v12;
}

void sub_223F2BE9C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

void *_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(_tc_google::protobuf::Arena **a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = v1;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  void *result = &unk_26D75BD30;
  return result;
}

uint64_t _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<_tc_google::protobuf::internal::MapFieldLite<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  unint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  long long v3 = _tc_google::protobuf::Map<std::string,CoreML::Specification::V5::Argument>::operator[](*(void *)(a1 + 8), (const std::string *)(a1 + 16));
  *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(CoreML::Specification::V5::Argument **)(v4 + 24);
  if (!Aligned)
  {
    long long v6 = *(_tc_google::protobuf::Arena **)(v4 + 32);
    if (!v6) {
      operator new();
    }
    CoreML::Specification::V5::Argument::Argument(Aligned);
    _tc_google::protobuf::Arena::AddListNode(v6, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Argument>);
    *(void *)(v4 + 24) = Aligned;
    long long v3 = *(std::string **)(a1 + 40);
  }
  return CoreML::Specification::V5::Argument::Swap((uint64_t)v3, Aligned);
}

void sub_223F2C04C(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const**,false>(uint64_t result, const void ***a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = (const void ***)result;
LABEL_2:
  long long v11 = a2 - 1;
  uint64_t v12 = v10;
LABEL_3:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    uint64_t v10 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = a2 - v12;
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          uint64_t result = _tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2 - 1, v12);
          if (result)
          {
            uint64_t v23 = *v12;
            *uint64_t v12 = *v11;
            *long long v11 = v23;
          }
          break;
        case 3uLL:
          uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, a2 - 1, a3);
          break;
        case 4uLL:
          uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, v12 + 2, a2 - 1, a3);
          break;
        case 5uLL:
          uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, v12 + 1, v12 + 2, v12 + 3, a2 - 1, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v15 <= 191) {
      break;
    }
    if (v14 == 1)
    {
      if (v12 != a2)
      {
        return (uint64_t)std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a2, a3);
      }
      return result;
    }
    unint64_t v17 = v16 >> 1;
    uint64_t v18 = &v12[v16 >> 1];
    if ((unint64_t)v15 >= 0x401)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, &v12[v16 >> 1], a2 - 1, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12 + 1, v18 - 1, a2 - 2, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12 + 2, &v12[v17 + 1], a2 - 3, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v18 - 1, v18, &v12[v17 + 1], a3);
      uint64_t v19 = *v12;
      *uint64_t v12 = *v18;
      *uint64_t v18 = v19;
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(&v12[v16 >> 1], v12, a2 - 1, a3);
      if (a5) {
        goto LABEL_14;
      }
    }
    if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v12 - 1, v12))
    {
      uint64_t result = (uint64_t)std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(v12, a2, a3);
      uint64_t v12 = (const void ***)result;
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v20 = std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &>(v12, a2, a3);
    if ((v21 & 1) == 0) {
      goto LABEL_17;
    }
    BOOL v22 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const**>(v12, v20, a3);
    uint64_t v12 = v20 + 1;
    uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const**>(v20 + 1, a2, a3);
    if (result)
    {
      a4 = -v14;
      a2 = v20;
      if (v22) {
        return result;
      }
      goto LABEL_2;
    }
    uint64_t v13 = v14 + 1;
    if (!v22)
    {
LABEL_17:
      uint64_t result = std::__introsort<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const**,false>(v10, v20, a3, -v14, a5 & 1);
      uint64_t v12 = v20 + 1;
LABEL_19:
      a5 = 0;
      a4 = -v14;
      goto LABEL_3;
    }
  }
  if (a5)
  {
    return (uint64_t)std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a3);
  }
  else
  {
    return (uint64_t)std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(v12, a2, a3);
  }
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Argument> const**>(const void ***a1, const void ***a2, uint64_t a3)
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v8 = a2 - 1;
      if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, a2 - 1, a1))
      {
        uint64_t v9 = *a1;
        *a1 = *v8;
        _tc_google::protobuf::Arena *v8 = v9;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      uint64_t v10 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*> &,_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const**>(a1, a1 + 1, a1 + 2, a3);
      long long v11 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    if (_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, v11, v10))
    {
      unint64_t v17 = *v11;
      uint64_t v14 = v12;
      while (1)
      {
        uint64_t v15 = (const void ***)((char *)a1 + v14);
        *(const void ***)((char *)a1 + v14 + 24) = *(const void ***)((char *)a1 + v14 + 16);
        if (v14 == -16) {
          break;
        }
        v14 -= 8;
        if (!_tc_google::protobuf::internal::CompareByDerefFirst<_tc_google::protobuf::MapPair<std::string,CoreML::Specification::V5::Function> const*>::operator()(a3, &v17, v15 + 1))
        {
          unint64_t v16 = (const void ***)((char *)a1 + v14 + 24);
          goto LABEL_12;
        }
      }
      unint64_t v16 = a1;
LABEL_12:
      *unint64_t v16 = v17;
      if (++v13 == 8) {
        return v11 + 1 == a2;
      }
    }
    uint64_t v10 = v11;
    v12 += 8;
    if (++v11 == a2) {
      return 1;
    }
  }
}

void *_tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(uint64_t a1, uint64_t a2, _tc_google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = &_tc_google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a3;
  void *result = &unk_26D75C1A0;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 3;
  return result;
}

void _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(uint64_t a1)
{
  _tc_google::protobuf::internal::MapEntryImpl<_tc_google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>,_tc_google::protobuf::MessageLite,std::string,CoreML::Specification::V5::Argument,(_tc_google::protobuf::internal::WireFormatLite::FieldType)9,(_tc_google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x22A614FA0);
}

uint64_t _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Block>::TypeHandler>(uint64_t result, CoreML::Specification::V5::Block **a2, CoreML::Specification::V5::Block **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    long long v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Block>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = &a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::V5::Block::Block(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Block>);
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Block>::Merge(v21, Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223F2C7F4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Block>::Merge(CoreML::Specification::V5::Block *a1, CoreML::Specification::V5::Block *this)
{
  return CoreML::Specification::V5::Block::MergeFrom(this, a1);
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::NamedValueType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::ValueType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

std::string *_tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Dimension>::TypeHandler>(std::string *result, std::string **a2, CoreML::Specification::V5::Dimension **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    long long v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Dimension>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = (CoreML::Specification::V5::Dimension **)&a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::V5::Dimension::Dimension(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Dimension>);
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Dimension>::Merge(v21, (std::string *)Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223F2C9B8(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Dimension>::Merge(CoreML::Specification::V5::Dimension *a1, std::string *this)
{
  return CoreML::Specification::V5::Dimension::MergeFrom(this, a1);
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TupleType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::ValueType>::TypeHandler>(uint64_t result, CoreML::Specification::V5::ValueType **a2, CoreML::Specification::V5::ValueType **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    long long v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::ValueType>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = &a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::V5::ValueType::ValueType(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::ValueType>);
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::ValueType>::Merge(v21, Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223F2CB24(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::ValueType>::Merge(CoreML::Specification::V5::ValueType *a1, CoreML::Specification::V5::ValueType *this)
{
  return CoreML::Specification::V5::ValueType::MergeFrom(this, a1);
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::ListType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::DictionaryType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Dimension_ConstantDimension>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Dimension_UnknownDimension>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Dimension>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Value_ImmediateValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Value_FileValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Value_BlobFileValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::Value>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedFloats>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedDoubles>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedInts>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedLongInts>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void _tc_google::protobuf::RepeatedField<BOOL>::Reserve(unsigned int *a1, int a2)
{
  signed int v2 = a1[1];
  if (v2 < a2)
  {
    uint64_t v4 = (_tc_google::protobuf::Arena **)*((void *)a1 + 1);
    if (v4) {
      char v5 = *v4;
    }
    else {
      char v5 = 0;
    }
    int v6 = 2 * v2;
    if (v6 <= a2) {
      int v6 = a2;
    }
    if (v6 <= 4) {
      int v7 = 4;
    }
    else {
      int v7 = v6;
    }
    if (v5) {
      Aligned = _tc_google::protobuf::Arena::AllocateAligned(v5, MEMORY[0x263F8C238], (v7 + 8));
    }
    else {
      Aligned = operator new((v7 + 8));
    }
    *((void *)a1 + 1) = Aligned;
    void *Aligned = v5;
    a1[1] = v7;
    size_t v9 = *a1;
    if ((int)v9 >= 1) {
      memcpy(Aligned + 1, v4 + 1, v9);
    }
    if (v4 && !*v4)
    {
      operator delete(v4);
    }
  }
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedBools>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedStrings>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue_RepeatedBytes>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TensorValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::TupleValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::Value>::TypeHandler>(uint64_t result, CoreML::Specification::V5::Value **a2, CoreML::Specification::V5::Value **a3, unsigned int a4, unsigned int a5)
{
  size_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    long long v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Value>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = &a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::V5::Value::Value(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::Value>);
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Value>::Merge(v21, Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223F2D054(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::Value>::Merge(CoreML::Specification::V5::Value *a1, CoreML::Specification::V5::Value *this)
{
  return CoreML::Specification::V5::Value::MergeFrom(this, a1);
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::ListValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::DictionaryValue_KeyValuePair>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t _tc_google::protobuf::internal::arena_delete_object<CoreML::Specification::V5::DictionaryValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

std::string *_tc_google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<_tc_google::protobuf::RepeatedPtrField<CoreML::Specification::V5::DictionaryValue_KeyValuePair>::TypeHandler>(std::string *result, std::string **a2, CoreML::Specification::V5::DictionaryValue_KeyValuePair **a3, unsigned int a4, unsigned int a5)
{
  size_t v9 = (_tc_google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    long long v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::DictionaryValue_KeyValuePair>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    unint64_t v20 = (CoreML::Specification::V5::DictionaryValue_KeyValuePair **)&a2[a5];
    do
    {
      char v21 = *v19;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::V5::DictionaryValue_KeyValuePair::DictionaryValue_KeyValuePair(Aligned);
      _tc_google::protobuf::Arena::AddListNode(v18, Aligned, (void (*)(void *))_tc_google::protobuf::internal::arena_destruct_object<CoreML::Specification::V5::DictionaryValue_KeyValuePair>);
      BOOL result = _tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::DictionaryValue_KeyValuePair>::Merge(v21, (std::string *)Aligned);
      *v20++ = Aligned;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_223F2D218(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

std::string *_tc_google::protobuf::internal::GenericTypeHandler<CoreML::Specification::V5::DictionaryValue_KeyValuePair>::Merge(CoreML::Specification::V5::DictionaryValue_KeyValuePair *a1, std::string *this)
{
  return CoreML::Specification::V5::DictionaryValue_KeyValuePair::MergeFrom(this, a1);
}

void turi::create_tls_data(turi *this)
{
}

void sub_223F2D2F0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  MEMORY[0x22A614FA0](v4, 0x1020C40D1E6F92FLL);
  int v6 = (void *)*v2;
  *signed int v2 = 0;
  if (v6) {
    std::default_delete<boost::unordered::unordered_map<unsigned long,turi::any,boost::hash<unsigned long>,std::equal_to<unsigned long>,std::allocator<std::pair<unsigned long const,turi::any>>>>::operator()[abi:ne180100]((uint64_t)v2, v6);
  }
  MEMORY[0x22A614FA0](v1, 0x1020C40D090CC53);
  _Unwind_Resume(a1);
}

void *turi::thread::get_tls_data(turi::thread *this)
{
  pthread_key_t tsd_id = turi::get_tsd_id(this);
  BOOL result = pthread_getspecific(tsd_id);
  if (!result)
  {
    turi::create_tls_data(0);
  }
  return result;
}

uint64_t turi::destroy_tls_data(uint64_t this, void *a2)
{
  if (this)
  {
    uint64_t v4 = *(void **)(this + 16);
    signed int v2 = (void *)(this + 16);
    uint64_t v3 = v4;
    *signed int v2 = 0;
    if (v4) {
      std::default_delete<boost::unordered::unordered_map<unsigned long,turi::any,boost::hash<unsigned long>,std::equal_to<unsigned long>,std::allocator<std::pair<unsigned long const,turi::any>>>>::operator()[abi:ne180100]((uint64_t)v2, v3);
    }
    JUMPOUT(0x22A614FA0);
  }
  return this;
}

void turi::thread::invoke(turi **this, void *a2)
{
}

uint64_t boost::function0<void>::operator()(void *a1)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v4, "call to empty boost::function");
    v4.__vftable = (std::runtime_error_vtbl *)&unk_26D758738;
    boost::throw_exception<boost::bad_function_call>(&v4);
  }
  uint64_t v1 = *(uint64_t (**)(void *))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  signed int v2 = a1 + 1;
  return v1(v2);
}

void sub_223F2D68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

uint64_t turi::thread::join(uint64_t this, turi::thread *a2)
{
  uint64_t v10 = 0;
  if (*(unsigned char *)(this + 24))
  {
    this = pthread_join(*(pthread_t *)(this + 8), &v10);
    if (v10)
    {
      uint64_t v8 = (void **)v10;
      if (*((char *)v10 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v9, *(const std::string::value_type **)v10, *((void *)v10 + 1));
        if (*((char *)v8 + 23) < 0) {
          operator delete(*v8);
        }
      }
      else
      {
        long long v5 = *(_OWORD *)v10;
        v9.__r_.__value_.__r.__words[2] = *((void *)v10 + 2);
        *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v5;
      }
      MEMORY[0x22A614FA0](v8, 0x1012C40EC159624);
      exception = __cxa_allocate_exception(0x18uLL);
      std::string::size_type v7 = v9.__r_.__value_.__r.__words[2];
      *(_OWORD *)exception = *(_OWORD *)&v9.__r_.__value_.__l.__data_;
      exception[2] = v7;
      memset(&v9, 0, sizeof(v9));
    }
    if (this)
    {
      signed int v2 = (void *)MEMORY[0x263F8C0F8];
      uint64_t v3 = std::operator<<[abi:ne180100]<std::char_traits<char>>(MEMORY[0x263F8C0F8], "Major error in join");
      std::endl[abi:ne180100]<char,std::char_traits<char>>(v3);
      std::operator<<[abi:ne180100]<std::char_traits<char>>(v2, "pthread_join() returned error ");
      std::runtime_error v4 = (void *)std::ostream::operator<<();
      std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
      exit(1);
    }
  }
  return this;
}

void sub_223F2D7CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::operator<<[abi:ne180100]<std::char_traits<char>>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  return std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)__s, v4);
}

void turi::thread::launch(turi *a1)
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  turi::get_tsd_id(a1);
  if (!*((unsigned char *)a1 + 24))
  {
    if (!pthread_attr_init(&v2))
    {
      if (!pthread_attr_setstacksize(&v2, *(void *)a1))
      {
        if (!pthread_attr_setdetachstate(&v2, 1)) {
          operator new();
        }
        turi::thread::launch(boost::function<void ()(void)> const&)::$_3::operator()();
      }
      turi::thread::launch(boost::function<void ()(void)> const&)::$_2::operator()();
    }
    turi::thread::launch(boost::function<void ()(void)> const&)::$_1::operator()();
  }
  turi::thread::launch(boost::function<void ()(void)> const&)::$_0::operator()();
}

void sub_223F2D9B4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E2C40FB0CDD78);
  _Unwind_Resume(a1);
}

void turi::thread::launch(boost::function<void ()(void)> const&)::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", 97);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  pthread_attr_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  size_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"!(thread_started)", 17);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    long long v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", "operator()", 217, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::thread::launch(boost::function<void ()(void)> const&)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F2DADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::thread::launch(boost::function<void ()(void)> const&)::$_1::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", 97);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  pthread_attr_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  size_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"!error", 6);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    long long v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", "operator()", 222, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::thread::launch(boost::function<void ()(void)> const&)::$_1::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F2DCDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::thread::launch(boost::function<void ()(void)> const&)::$_2::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", 97);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  pthread_attr_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  size_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"!error", 6);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    long long v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", "operator()", 224, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::thread::launch(boost::function<void ()(void)> const&)::$_2::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F2DEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::thread::launch(boost::function<void ()(void)> const&)::$_3::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", 97);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  pthread_attr_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  size_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"!error", 6);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    long long v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", "operator()", 226, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::thread::launch(boost::function<void ()(void)> const&)::$_3::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F2E0DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

void turi::thread::launch(boost::function<void ()(void)> const&)::$_4::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", 97);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  pthread_attr_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  size_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"!error", 6);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    long long v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/pthread_tools.cpp", "operator()", 241, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::thread::launch(boost::function<void ()(void)> const&)::$_4::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F2E2DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t turi::thread_group::invoke(void *a1, uint64_t a2)
{
  boost::function0<void>::operator()(a1);
  pthread_mutex_lock((pthread_mutex_t *)(a2 + 16));
  __n128 v5 = (__n128)(unint64_t)pthread_self();
  std::deque<std::pair<_opaque_pthread_t *,char const*>>::push_back((void *)(a2 + 128), &v5);
  int v3 = pthread_cond_signal((pthread_cond_t *)(a2 + 80));
  assert_msg(v3 == 0, "Condition variable signal error %d", v3);
  return pthread_mutex_unlock((pthread_mutex_t *)(a2 + 16));
}

void turi::thread_group::launch(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (*(void *)a1)++;
  uint64_t v13 = v4;
  char v14 = 0;
  long long v12 = xmmword_2246C7DF0;
  __n128 v5 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  ++*(void *)(a1 + 8);
  pthread_mutex_unlock(v5);
  uint64_t v7 = 0;
  uint64_t v6 = *a2;
  if (*a2)
  {
    uint64_t v7 = *a2;
    if (v6)
    {
      long long v8 = *(_OWORD *)(a2 + 1);
      uint64_t v9 = a2[3];
    }
    else
    {
      (*(void (**)(uint64_t *, long long *, void))(v6 & 0xFFFFFFFFFFFFFFFELL))(a2 + 1, &v8, 0);
    }
  }
  boost::bind<void,boost::function<void ()(void)>,turi::thread_group *,boost::function<void ()(void)>,turi::thread_group *>((uint64_t)turi::thread_group::invoke, (uint64_t)&v7, a1, (uint64_t)v10);
  boost::function<void ()(void)>::function<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(v11, (uint64_t)v10);
}

void sub_223F2E594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
}

uint64_t *boost::bind<void,boost::function<void ()(void)>,turi::thread_group *,boost::function<void ()(void)>,turi::thread_group *>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v10 = 0;
  uint64_t v7 = *(void *)a2;
  if (*(void *)a2)
  {
    uint64_t v10 = *(void *)a2;
    if (v7)
    {
      long long v11 = *(_OWORD *)(a2 + 8);
      uint64_t v12 = *(void *)(a2 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v7 & 0xFFFFFFFFFFFFFFFELL))(a2 + 8, &v11, 0);
    }
  }
  boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>::list2((uint64_t)&v13, (uint64_t)&v10, a3);
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = 0;
  uint64_t v8 = v13;
  if (v13)
  {
    *(void *)(a4 + 8) = v13;
    if (v8)
    {
      *(_OWORD *)(a4 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v14;
      *(void *)(a4 + 32) = v15;
    }
    else
    {
      (*(void (**)(long long *, uint64_t, void))(v8 & 0xFFFFFFFFFFFFFFFELL))(&v14, a4 + 16, 0);
    }
  }
  *(void *)(a4 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v16;
  boost::function0<void>::~function0(&v13);
  return boost::function0<void>::~function0(&v10);
}

void sub_223F2E6B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  boost::function0<void>::~function0((uint64_t *)va1);
  boost::function0<void>::~function0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void turi::thread_group::launch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != -1)
  {
    uint64_t v5 = (*(void *)a1)++;
    uint64_t v13 = v5;
    char v14 = 0;
    long long v12 = xmmword_2246C7DF0;
    pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
    ++*(void *)(a1 + 8);
    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 16));
    uint64_t v7 = 0;
    uint64_t v6 = *(void *)a2;
    if (*(void *)a2)
    {
      uint64_t v7 = *(void *)a2;
      if (v6)
      {
        long long v8 = *(_OWORD *)(a2 + 8);
        uint64_t v9 = *(void *)(a2 + 24);
      }
      else
      {
        (*(void (**)(uint64_t, long long *, void))(v6 & 0xFFFFFFFFFFFFFFFELL))(a2 + 8, &v8, 0);
      }
    }
    boost::bind<void,boost::function<void ()(void)>,turi::thread_group *,boost::function<void ()(void)>,turi::thread_group *>((uint64_t)turi::thread_group::invoke, (uint64_t)&v7, a1, (uint64_t)v10);
    boost::function<void ()(void)>::function<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(v11, (uint64_t)v10);
  }
  turi::thread_group::launch(a1, (uint64_t *)a2);
}

void sub_223F2E820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
}

uint64_t turi::thread_group::join(turi::thread_group *this)
{
  pthread_attr_t v2 = (pthread_mutex_t *)((char *)this + 16);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 16));
  while (*((void *)this + 1))
  {
    while (1)
    {
      uint64_t v3 = *((void *)this + 21);
      if (v3) {
        break;
      }
      int v4 = pthread_cond_wait((pthread_cond_t *)((char *)this + 80), v2);
      assert_msg(v4 == 0, "Condition variable wait error %d", v4);
    }
    unint64_t v5 = *((void *)this + 20);
    uint64_t v6 = *(void *)(*((void *)this + 17) + ((v5 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v5;
    uint64_t v7 = *(_opaque_pthread_t **)v6;
    uint64_t v8 = *(void *)(v6 + 8);
    *((void *)this + 2CoreML::Specification::V5::DictionaryValue::New(this, 0) = v5 + 1;
    *((void *)this + 21) = v3 - 1;
    std::deque<std::pair<_opaque_pthread_t *,char const*>>::__maybe_remove_front_spare[abi:ne180100]((uint64_t)this + 128, 1);
    uint64_t v9 = *((void *)this + 1) - 1;
    *((void *)this + 1) = v9;
    if (!v9) {
      *(void *)this = 0;
    }
    pthread_mutex_unlock(v2);
    long long v12 = 0;
    pthread_join(v7, &v12);
    if (v8)
    {
      exception = __cxa_allocate_exception(8uLL);
      void *exception = v8;
      __cxa_throw(exception, MEMORY[0x263F8C1D8], 0);
    }
    pthread_mutex_lock(v2);
  }
  return pthread_mutex_unlock(v2);
}

void std::default_delete<boost::unordered::unordered_map<unsigned long,turi::any,boost::hash<unsigned long>,std::equal_to<unsigned long>,std::allocator<std::pair<unsigned long const,turi::any>>>>::operator()[abi:ne180100](uint64_t a1, void *a2)
{
  if (a2)
  {
    boost::unordered::detail::table<boost::unordered::detail::map<std::allocator<std::pair<unsigned long const,turi::any>>,unsigned long,turi::any,boost::hash<unsigned long>,std::equal_to<unsigned long>>>::delete_buckets(a2);
    JUMPOUT(0x22A614FA0);
  }
}

void boost::unordered::detail::table<boost::unordered::detail::map<std::allocator<std::pair<unsigned long const,turi::any>>,unsigned long,turi::any,boost::hash<unsigned long>,std::equal_to<unsigned long>>>::delete_buckets(void *a1)
{
  pthread_attr_t v2 = (void *)a1[5];
  if (v2)
  {
    uint64_t v3 = (void *)v2[a1[1]];
    if (v3)
    {
      do
      {
        int v4 = (void *)*v3;
        uint64_t v5 = v3[3];
        if (v5) {
          (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        }
        operator delete(v3);
        uint64_t v3 = v4;
      }
      while (v4);
      pthread_attr_t v2 = (void *)a1[5];
    }
    operator delete(v2);
    a1[2] = 0;
    a1[4] = 0;
    a1[5] = 0;
  }
}

uint64_t boost::unordered::unordered_map<unsigned long,turi::any,boost::hash<unsigned long>,std::equal_to<unsigned long>,std::allocator<std::pair<unsigned long const,turi::any>>>::unordered_map(uint64_t result)
{
  *(unsigned char *)BOOL result = 0;
  unint64_t v1 = 38;
  pthread_attr_t v2 = (char *)&boost::unordered::detail::prime_list_template<unsigned long>::value;
  do
  {
    unint64_t v3 = v1 >> 1;
    int v4 = (unint64_t *)&v2[8 * (v1 >> 1)];
    unint64_t v6 = *v4;
    uint64_t v5 = (char *)(v4 + 1);
    v1 += ~(v1 >> 1);
    if (v6 < 0xB) {
      pthread_attr_t v2 = v5;
    }
    else {
      unint64_t v1 = v3;
    }
  }
  while (v1);
  uint64_t v7 = (char *)&unk_2246C7F28;
  if (v2 != "NSt3__117bad_function_callE") {
    uint64_t v7 = v2;
  }
  *(void *)(result + 8) = *(void *)v7;
  *(void *)(result + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  *(_DWORD *)(result + 24) = 1065353216;
  *(void *)(result + 32) = 0;
  *(void *)(result + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  return result;
}

__n128 std::deque<std::pair<_opaque_pthread_t *,char const*>>::push_back(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 32 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<std::pair<_opaque_pthread_t *,char const*>>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  __n128 result = *a2;
  *(__n128 *)(*(void *)(v5 + ((v7 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v7) = *a2;
  ++a1[5];
  return result;
}

void std::deque<std::pair<_opaque_pthread_t *,char const*>>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x100;
  unint64_t v4 = v2 - 256;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      unsigned int v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v5, v33);
      unint64_t v35 = &v34[8 * (v33 >> 2)];
      unint64_t v37 = &v34[8 * v36];
      unsigned int v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        unint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)unint64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      std::__split_buffer<char *>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    std::__split_buffer<char *>::push_front((uint64_t)a1, &v54);
    unsigned int v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      unsigned int v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v46);
      unint64_t v35 = &v34[8 * (v46 >> 2)];
      unint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        double v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)double v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      unint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  int v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  double v53 = operator new(0x1000uLL);
  std::__split_buffer<char *>::push_back(&v54, &v53);
  int v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<char *>::push_front((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_223F2EE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>::list2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = 0;
  uint64_t v5 = *(void *)a2;
  if (*(void *)a2)
  {
    uint64_t v7 = *(void *)a2;
    if (v5)
    {
      long long v8 = *(_OWORD *)(a2 + 8);
      uint64_t v9 = *(void *)(a2 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v5 & 0xFFFFFFFFFFFFFFFELL))(a2 + 8, &v8, 0);
    }
  }
  boost::_bi::storage2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>::storage2(a1, (uint64_t)&v7, a3);
  boost::function0<void>::~function0(&v7);
  return a1;
}

void sub_223F2EF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t boost::_bi::storage2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>::storage2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = 0;
  uint64_t v5 = *(void *)a2;
  if (*(void *)a2)
  {
    uint64_t v7 = *(void *)a2;
    if (v5)
    {
      long long v8 = *(_OWORD *)(a2 + 8);
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)a1 = 0;
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v5 & 0xFFFFFFFFFFFFFFFELL))(a2 + 8, &v8, 0);
      uint64_t v5 = v7;
      *(void *)a1 = 0;
      if (!v5) {
        goto LABEL_10;
      }
    }
    *(void *)a1 = v5;
    if (v5)
    {
      *(_OWORD *)(a1 + 8) = v8;
      *(void *)(a1 + 24) = v9;
    }
    else
    {
      (*(void (**)(long long *, uint64_t, void))(v5 & 0xFFFFFFFFFFFFFFFELL))(&v8, a1 + 8, 0);
    }
  }
  else
  {
    *(void *)a1 = 0;
  }
LABEL_10:
  boost::function0<void>::~function0(&v7);
  *(void *)(a1 + 32) = a3;
  return a1;
}

void sub_223F2EFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::function<void ()(void)>::function<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = 0;
  if (v4)
  {
    uint64_t v6 = v4;
    if (v4)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 32);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(a2 + 16, &v7, 0);
    }
  }
  uint64_t v9 = *(void *)(a2 + 40);
  boost::function0<void>::function0<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(a1, &v5);
}

void sub_223F2F0A0(_Unwind_Exception *a1)
{
  boost::function0<void>::~function0(v1);
  _Unwind_Resume(a1);
}

void boost::function0<void>::function0<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(void *a1, uint64_t *a2)
{
  *a1 = 0;
  uint64_t v4 = a2[1];
  uint64_t v5 = *a2;
  uint64_t v6 = 0;
  if (v4)
  {
    uint64_t v6 = v4;
    if (v4)
    {
      long long v7 = *((_OWORD *)a2 + 1);
      uint64_t v8 = a2[4];
    }
    else
    {
      (*(void (**)(uint64_t *, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(a2 + 2, &v7, 0);
    }
  }
  uint64_t v9 = a2[5];
  boost::function0<void>::assign_to<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>((uint64_t)a1, (uint64_t)&v5);
}

void sub_223F2F158(_Unwind_Exception *a1)
{
  boost::function0<void>::~function0(v1);
  _Unwind_Resume(a1);
}

void boost::function0<void>::assign_to<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = 0;
  if (v3)
  {
    uint64_t v5 = v3;
    if (v3)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 32);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v3 & 0xFFFFFFFFFFFFFFFELL))(a2 + 16, &v6, 0);
    }
  }
  uint64_t v8 = *(void *)(a2 + 40);
  boost::detail::function::basic_vtable0<void>::assign_to<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>((uint64_t)boost::function0<void>::assign_to<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>)::stored_vtable, &v4);
}

void sub_223F2F224(_Unwind_Exception *a1)
{
  boost::function0<void>::~function0(v1);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::functor_manager<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>::manage(uint64_t result, _WORD *a2, int a3)
{
  if (a3 != 4) {
    return boost::detail::function::functor_manager<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>::manager(result, a2, a3);
  }
  a2[4] = 0;
  return result;
}

uint64_t *boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>,void>::invoke(void (***a1)(uint64_t *, void))
{
  return boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>::operator()<void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list0>((uint64_t)(*a1 + 1), *a1);
}

void boost::detail::function::basic_vtable0<void>::assign_to<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = *a2;
  uint64_t v6 = 0;
  if (v4)
  {
    uint64_t v6 = v4;
    if (v4)
    {
      long long v7 = *((_OWORD *)a2 + 1);
      uint64_t v8 = a2[4];
    }
    else
    {
      (*(void (**)(uint64_t *, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(a2 + 2, &v7, 0);
    }
  }
  uint64_t v9 = a2[5];
  boost::detail::function::basic_vtable0<void>::assign_to<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(a1, (uint64_t)&v5);
}

void sub_223F2F334(_Unwind_Exception *a1)
{
  boost::function0<void>::~function0(v1);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::functor_manager<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>::manager(uint64_t result, _WORD *a2, int a3)
{
  uint64_t v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)__n128 result = 0;
      return result;
    case 2:
      uint64_t v5 = *(void *)a2;
      if (*(void *)a2)
      {
        boost::function0<void>::~function0((uint64_t *)(v5 + 8));
        __n128 result = MEMORY[0x22A614FA0](v5, 0x10E2C4076855C0ALL);
      }
      goto LABEL_9;
    case 3:
      __n128 result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C7F9FLL & 0x7FFFFFFFFFFFFFFFLL)
        || (__n128 result = strcmp((const char *)result, (const char *)(0x80000002246C7F9FLL & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223F2F4A4(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E2C4076855C0ALL);
  _Unwind_Resume(a1);
}

uint64_t *boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>::operator()<void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list0>(uint64_t a1, void (**a2)(uint64_t *, void))
{
  uint64_t v3 = *a2;
  uint64_t v6 = 0;
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    uint64_t v6 = *(void *)a1;
    if (v4)
    {
      long long v7 = *(_OWORD *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(a1 + 8, &v7, 0);
    }
  }
  v3(&v6, *(void *)(a1 + 32));
  return boost::function0<void>::~function0(&v6);
}

void sub_223F2F55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void boost::detail::function::basic_vtable0<void>::assign_to<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3)
  {
    if (v3)
    {
      long long v4 = *(_OWORD *)(a2 + 16);
      uint64_t v5 = *(void *)(a2 + 32);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v3 & 0xFFFFFFFFFFFFFFFELL))(a2 + 16, &v4, 0);
    }
  }
  uint64_t v6 = *(void *)(a2 + 40);
  boost::detail::function::basic_vtable0<void>::assign_functor<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>();
}

void sub_223F2F618(_Unwind_Exception *a1)
{
  boost::function0<void>::~function0(v1);
  _Unwind_Resume(a1);
}

void boost::detail::function::basic_vtable0<void>::assign_functor<boost::_bi::bind_t<void,void (*)(boost::function<void ()(void)>,turi::thread_group *),boost::_bi::list2<boost::_bi::value<boost::function<void ()(void)>>,boost::_bi::value<turi::thread_group *>>>>()
{
}

void sub_223F2F6C0(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E2C4076855C0ALL);
  _Unwind_Resume(a1);
}

uint64_t std::deque<std::pair<_opaque_pthread_t *,char const*>>::__maybe_remove_front_spare[abi:ne180100](uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x100) {
    a2 = 1;
  }
  if (v2 < 0x200) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 256;
  }
  return v4 ^ 1u;
}

turi::parallel_task_queue *turi::parallel_task_queue::parallel_task_queue(turi::parallel_task_queue *this, turi::thread_pool *a2)
{
  *(void *)this = a2;
  uint64_t v3 = (pthread_cond_t *)((char *)this + 72);
  int v4 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 8), 0);
  assert_msg(v4 == 0, "Mutex create error %d", v4);
  turi::conditional::conditional(v3);
  *((unsigned char *)this + 184) = 0;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 13boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0u;
  *(_OWORD *)((char *)this + 12CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0u;
  return this;
}

void sub_223F2F7CC(_Unwind_Exception *a1)
{
  turi::mutex::~mutex(v1);
  _Unwind_Resume(a1);
}

void turi::parallel_task_queue::launch(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a1;
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 8));
  ++*(void *)(v3 + 168);
  uint64_t v4 = *a2;
  if (!*a2)
  {
    uint64_t v8 = v3;
    uint64_t v10 = 0;
LABEL_6:
    uint64_t v13 = v3;
    uint64_t v14 = 0;
    uint64_t v9 = 0;
LABEL_7:
    uint64_t v17 = v3;
    uint64_t v18 = 0;
LABEL_8:
    uint64_t v21 = v3;
    uint64_t v22 = 0;
LABEL_9:
    uint64_t v25 = v3;
    uint64_t v26 = 0;
    goto LABEL_10;
  }
  uint64_t v5 = *a2;
  if (v4)
  {
    long long v6 = *(_OWORD *)(a2 + 1);
    uint64_t v7 = a2[3];
    uint64_t v8 = v3;
  }
  else
  {
    (*(void (**)(uint64_t *, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(a2 + 1, &v6, 0);
    uint64_t v4 = v5;
    uint64_t v8 = v3;
    uint64_t v10 = 0;
    if (!v5) {
      goto LABEL_6;
    }
  }
  uint64_t v10 = v4;
  if (v4)
  {
    long long v11 = v6;
    uint64_t v12 = v7;
    uint64_t v13 = v3;
    uint64_t v9 = 0;
  }
  else
  {
    (*(void (**)(long long *, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(&v6, &v11, 0);
    uint64_t v4 = v10;
    uint64_t v3 = v8;
    uint64_t v13 = v8;
    uint64_t v14 = 0;
    uint64_t v9 = 0;
    if (!v10) {
      goto LABEL_7;
    }
  }
  uint64_t v14 = v4;
  if (v4)
  {
    long long v15 = v11;
    uint64_t v16 = v12;
    uint64_t v17 = v3;
  }
  else
  {
    (*(void (**)(long long *, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(&v11, &v15, 0);
    uint64_t v3 = v13;
    uint64_t v4 = v14;
    uint64_t v17 = v13;
    uint64_t v18 = 0;
    if (!v14) {
      goto LABEL_8;
    }
  }
  uint64_t v18 = v4;
  if (v4)
  {
    long long v19 = v15;
    uint64_t v20 = v16;
    uint64_t v21 = v3;
  }
  else
  {
    (*(void (**)(long long *, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(&v15, &v19, 0);
    uint64_t v3 = v17;
    uint64_t v4 = v18;
    uint64_t v21 = v17;
    uint64_t v22 = 0;
    if (!v18) {
      goto LABEL_9;
    }
  }
  uint64_t v22 = v4;
  if (v4)
  {
    long long v23 = v19;
    uint64_t v24 = v20;
    uint64_t v25 = v3;
  }
  else
  {
    (*(void (**)(long long *, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(&v19, &v23, 0);
    uint64_t v4 = v22;
    uint64_t v3 = v21;
    uint64_t v25 = v21;
    uint64_t v26 = 0;
    if (!v22) {
      goto LABEL_10;
    }
  }
  uint64_t v26 = v4;
  if (v4)
  {
    long long v27 = v23;
    uint64_t v28 = v24;
  }
  else
  {
    (*(void (**)(long long *, long long *, void))(v4 & 0xFFFFFFFFFFFFFFFELL))(&v23, &v27, 0);
    uint64_t v3 = v25;
  }
LABEL_10:
  uint64_t v29 = v3;
  operator new();
}

void sub_223F2FB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  boost::function0<void>::~function0((uint64_t *)(v29 - 144));
  boost::function0<void>::~function0(&a28);
  boost::function0<void>::~function0(&a23);
  boost::function0<void>::~function0(&a18);
  boost::function0<void>::~function0(&a9);
  pthread_mutex_unlock(v28);
  _Unwind_Resume(a1);
}

uint64_t turi::thread_pool::launch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = (pthread_mutex_t *)(a1 + 408);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 408));
  ++*(void *)(a1 + 520);
  uint64_t v10 = 0;
  uint64_t v7 = *(void *)a2;
  if (*(void *)a2)
  {
    uint64_t v10 = *(void *)a2;
    if (v7)
    {
      long long v11 = *(_OWORD *)(a2 + 8);
      uint64_t v12 = *(void *)(a2 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v7 & 0xFFFFFFFFFFFFFFFELL))(a2 + 8, &v11, 0);
    }
  }
  uint64_t v13 = a3;
  v14[0] = 0;
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::move_assign((uint64_t)v14, &v10);
  int v15 = v13;
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 232));
  std::deque<std::pair<boost::function<void ()(void)>,int>>::push_back((void *)(a1 + 184), v14);
  if (*(_WORD *)(a1 + 392))
  {
    int v8 = pthread_cond_signal((pthread_cond_t *)(a1 + 296));
    assert_msg(v8 == 0, "Condition variable signal error %d", v8);
  }
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 232));
  boost::function0<void>::~function0(v14);
  boost::function0<void>::~function0(&v10);
  return pthread_mutex_unlock(v6);
}

void sub_223F2FCBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  pthread_mutex_unlock(v16);
  _Unwind_Resume(a1);
}

void turi::parallel_task_queue::join(turi::parallel_task_queue *this)
{
  uint64_t v9 = (pthread_mutex_t *)((char *)this + 8);
  char v10 = 1;
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 8));
  *((unsigned char *)this + 184) = 1;
  while (*((void *)this + 22) != *((void *)this + 21))
  {
    unint64_t v2 = v9;
    uint64_t v9 = 0;
    char v10 = 0;
    int v3 = pthread_cond_wait((pthread_cond_t *)((char *)this + 72), v2);
    assert_msg(v3 == 0, "Condition variable wait error %d", v3);
    uint64_t v4 = v9;
    uint64_t v9 = v2;
    *(void *)&v7[0] = v4;
    LOBYTE(v4) = v10;
    char v10 = 1;
    BYTE8(v7[0]) = (_BYTE)v4;
    std::unique_lock<turi::mutex>::~unique_lock[abi:ne180100]((uint64_t)v7);
  }
  *((unsigned char *)this + 184) = 0;
  if (*((void *)this + 20))
  {
    std::exception_ptr::exception_ptr(&v8, (const std::exception_ptr *)(*(void *)(*((void *)this + 16)+ ((*((void *)this + 19) >> 6) & 0x3FFFFFFFFFFFFF8))+ 8 * (*((void *)this + 19) & 0x1FFLL)));
    memset(v7, 0, sizeof(v7));
    std::deque<std::exception_ptr>::__move_assign((uint64_t)this + 120, (uint64_t)v7);
    std::deque<std::exception_ptr>::~deque[abi:ne180100](v7);
    std::exception_ptr::exception_ptr(&v6, &v8);
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    std::unique_lock<turi::mutex>::~unique_lock[abi:ne180100]((uint64_t)&v9);
  }
}

void sub_223F2FE30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::exception_ptr a18)
{
  std::exception_ptr::~exception_ptr(&a10);
  std::exception_ptr::~exception_ptr(&a18);
  std::unique_lock<turi::mutex>::~unique_lock[abi:ne180100](v18 - 64);
  _Unwind_Resume(a1);
}

void turi::parallel_task_queue::~parallel_task_queue(turi::parallel_task_queue *this)
{
}

void sub_223F2FE9C(void *a1)
{
}

turi::thread_pool *turi::thread_pool::thread_pool(turi::thread_pool *this, uint64_t a2, char a3)
{
  std::exception_ptr v6 = turi::thread_group::thread_group(this);
  turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::blocking_queue((uint64_t)v6 + 176);
  int v7 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 408), 0);
  assert_msg(v7 == 0, "Mutex create error %d", v7);
  turi::conditional::conditional((pthread_cond_t *)((char *)this + 472));
  *((unsigned char *)this + 53boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  *(_OWORD *)((char *)this + 52CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0u;
  *((unsigned char *)this + 537) = a3;
  *((void *)this + 5CoreML::Specification::V5::DictionaryValue::New(this, 0) = a2;
  turi::thread_pool::spawn_thread_group(this);
  return this;
}

void sub_223F2FF5C(_Unwind_Exception *a1)
{
  turi::conditional::~conditional(v4);
  turi::mutex::~mutex(v3);
  turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::~blocking_queue(v2);
  turi::thread_group::~thread_group(v1);
  _Unwind_Resume(a1);
}

unint64_t turi::thread_pool::spawn_thread_group(turi::thread_pool *this)
{
  turi::config::init_cocoa_multithreaded_runtime(this);
  unint64_t result = turi::thread::cpu_count(v2);
  if (*((void *)this + 50))
  {
    if (*((unsigned char *)this + 537))
    {
      uint64_t v6 = 0;
      int v7 = this;
      uint64_t v4 = (uint64_t)boost::function0<void>::assign_to<boost::_bi::bind_t<void,boost::_mfi::mf0<void,turi::thread_pool>,boost::_bi::list1<boost::_bi::value<turi::thread_pool*>>>>(boost::_bi::bind_t<void,boost::_mfi::mf0<void,turi::thread_pool>,boost::_bi::list1<boost::_bi::value<turi::thread_pool*>>>)::stored_vtable
         + 1;
      std::exception_ptr v5 = turi::thread_pool::wait_for_task;
      turi::thread_group::launch((uint64_t)this, (uint64_t)&v4, 0 % result);
    }
    uint64_t v6 = 0;
    int v7 = this;
    uint64_t v4 = (uint64_t)boost::function0<void>::assign_to<boost::_bi::bind_t<void,boost::_mfi::mf0<void,turi::thread_pool>,boost::_bi::list1<boost::_bi::value<turi::thread_pool*>>>>(boost::_bi::bind_t<void,boost::_mfi::mf0<void,turi::thread_pool>,boost::_bi::list1<boost::_bi::value<turi::thread_pool*>>>)::stored_vtable
       + 1;
    std::exception_ptr v5 = turi::thread_pool::wait_for_task;
    turi::thread_group::launch((uint64_t)this, &v4);
  }
  return result;
}

void sub_223F30074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void turi::thread_group::~thread_group(turi::thread_group *this)
{
}

uint64_t turi::thread_pool::size(turi::thread_pool *this)
{
  return *((void *)this + 50);
}

uint64_t *turi::thread_pool::wait_for_task(turi::thread_pool *this)
{
  *((unsigned char *)turi::thread::get_tls_data(this) + 8) = 1;
  while (1)
  {
    v13[0] = 0;
    int v14 = 0;
    char v15 = 0;
    turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::dequeue((uint64_t)this + 176, (uint64_t)v10);
    boost::function<void ()(void)>::operator=(v13, v10);
    int v14 = v11;
    char v15 = v12;
    uint64_t v2 = boost::function0<void>::~function0(v10);
    if (!v15) {
      break;
    }
    uint64_t v3 = v14;
    tls_uint64_t data = (turi::thread *)turi::thread::get_tls_data((turi::thread *)v2);
    uint64_t v5 = *(void *)tls_data;
    if (v3 != -1) {
      *(void *)turi::thread::get_tls_data(tls_data) = v3;
    }
    uint64_t v6 = (turi::thread *)boost::function0<void>::operator()(v13);
    *(void *)turi::thread::get_tls_data(vboost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v5;
    pthread_mutex_lock((pthread_mutex_t *)((char *)this + 408));
    uint64_t v7 = *((void *)this + 66) + 1;
    *((void *)this + 6boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v7;
    if (*((unsigned char *)this + 536))
    {
      if (v7 == *((void *)this + 65))
      {
        int v8 = pthread_cond_signal((pthread_cond_t *)((char *)this + 472));
        assert_msg(v8 == 0, "Condition variable signal error %d", v8);
      }
    }
    pthread_mutex_unlock((pthread_mutex_t *)((char *)this + 408));
    boost::function0<void>::~function0(v13);
  }
  return boost::function0<void>::~function0(v13);
}

void sub_223F30210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  pthread_mutex_unlock(v17);
  boost::function0<void>::~function0(&a17);
  _Unwind_Resume(a1);
}

uint64_t turi::thread_pool::destroy_all_threads(turi::thread_pool *this)
{
  turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::wait_until_empty((unsigned __int8 *)this + 176);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 232));
  *((unsigned char *)this + 17boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  int v2 = pthread_cond_broadcast((pthread_cond_t *)((char *)this + 296));
  assert_msg(v2 == 0, "Condition variable broadcast error %d", v2);
  int v3 = pthread_cond_broadcast((pthread_cond_t *)((char *)this + 344));
  assert_msg(v3 == 0, "Condition variable broadcast error %d", v3);
  pthread_mutex_unlock((pthread_mutex_t *)((char *)this + 232));
  return turi::thread_group::join(this);
}

uint64_t turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::wait_until_empty(unsigned __int8 *a1)
{
  int v2 = (pthread_mutex_t *)(a1 + 56);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 56));
  for (; *((void *)a1 + 6); --*((_WORD *)a1 + 109))
  {
    if (!*a1) {
      break;
    }
    ++*((_WORD *)a1 + 109);
    int v3 = pthread_cond_wait((pthread_cond_t *)(a1 + 168), v2);
    assert_msg(v3 == 0, "Condition variable wait error %d", v3);
  }
  pthread_mutex_unlock(v2);
  return *a1;
}

void turi::thread_pool::destroy_all_threads(void)::$_0::operator()()
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  uint64_t v0 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"Check failed (", 14);
  uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/thread_pool.cpp", 95);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)":", 1);
  int v2 = (void *)std::ostream::operator<<();
  int v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)"): ", 3);
  uint64_t v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"false", 5);
  std::endl[abi:ne180100]<char,std::char_traits<char>>(v4);
  if (*((int *)global_logger() + 169) <= 6)
  {
    uint64_t v5 = log_stream_dispatch<true>::exec((cppipc *)6, "/Library/Caches/com.apple.xbs/Sources/TuriCore/turicreate_oss/src/core/parallel/thread_pool.cpp", "operator()", 144, 1);
    std::stringbuf::str();
    file_logger::operator<<<std::string>((uint64_t)v5, (uint64_t)&__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  __print_back_trace();
  turi::thread_pool::destroy_all_threads(void)::$_0::operator() const(void)::{lambda(void)#1}::operator()();
}

void sub_223F30524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  a17 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&a17 + *(void *)(a17 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  a18 = MEMORY[0x263F8C318] + 16;
  if (a31 < 0) {
    operator delete(a26);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x22A614E30](&a34);
  _Unwind_Resume(a1);
}

uint64_t *turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::dequeue@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (pthread_mutex_t *)(a1 + 56);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 56));
  uint64_t v13 = 0;
  int v16 = 0;
  if (*(void *)(a1 + 48))
  {
LABEL_4:
    unint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(*(void *)(a1 + 16) + 8 * (v6 / 0x66));
    unint64_t v8 = v6 % 0x66;
    boost::function<void ()(void)>::operator=(&v13, v7 + 40 * (v6 % 0x66));
    int v16 = *(_DWORD *)(v7 + 40 * v8 + 32);
    std::deque<std::pair<boost::function<void ()(void)>,int>>::pop_front((int64x2_t *)(a1 + 8));
    if (!*(void *)(a1 + 48) && *(_WORD *)(a1 + 218))
    {
      int v9 = pthread_cond_signal((pthread_cond_t *)(a1 + 168));
      assert_msg(v9 == 0, "Condition variable signal error %d", v9);
    }
    char v10 = 1;
  }
  else
  {
    while (*(unsigned char *)a1)
    {
      ++*(_WORD *)(a1 + 216);
      int v5 = pthread_cond_wait((pthread_cond_t *)(a1 + 120), v4);
      assert_msg(v5 == 0, "Condition variable wait error %d", v5);
      --*(_WORD *)(a1 + 216);
      if (*(void *)(a1 + 48)) {
        goto LABEL_4;
      }
    }
    char v10 = 0;
  }
  pthread_mutex_unlock(v4);
  *(void *)a2 = 0;
  uint64_t v11 = v13;
  if (v13)
  {
    *(void *)a2 = v13;
    if (v11)
    {
      *(_OWORD *)(a2 + 8) = v14;
      *(void *)(a2 + 24) = v15;
    }
    else
    {
      (*(void (**)(long long *, uint64_t, void))(v11 & 0xFFFFFFFFFFFFFFFELL))(&v14, a2 + 8, 0);
    }
  }
  *(_DWORD *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = v10;
  return boost::function0<void>::~function0(&v13);
}

void sub_223F307CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  boost::function0<void>::~function0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t turi::thread_pool::join(turi::thread_pool *this)
{
  turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::wait_until_empty((unsigned __int8 *)this + 176);
  uint64_t v4 = (pthread_mutex_t *)((char *)this + 408);
  char v5 = 1;
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 408));
  *((unsigned char *)this + 53boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 1;
  while (*((void *)this + 66) != *((void *)this + 65))
  {
    int v2 = pthread_cond_wait((pthread_cond_t *)((char *)this + 472), v4);
    assert_msg(v2 == 0, "Condition variable wait error %d", v2);
    uint64_t v6 = 0;
    char v5 = 1;
    char v7 = 0;
    std::unique_lock<turi::mutex>::~unique_lock[abi:ne180100]((uint64_t)&v6);
  }
  *((unsigned char *)this + 53boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  return std::unique_lock<turi::mutex>::~unique_lock[abi:ne180100]((uint64_t)&v4);
}

void sub_223F308C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  std::unique_lock<turi::mutex>::~unique_lock[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void turi::thread_pool::~thread_pool(turi::thread_pool *this)
{
}

uint64_t turi::thread_pool::get_instance(turi::thread_pool *this)
{
  return turi::get_pool_ptr_instance(void)::pool;
}

uint64_t turi::get_pool_ptr_instance(turi *this)
{
  {
    turi::mutex::mutex(&turi::pool_creation_lock(void)::lock);
    __cxa_atexit((void (*)(void *))turi::mutex::~mutex, &turi::pool_creation_lock(void)::lock, &dword_223D44000);
  }
  uint64_t v1 = (turi::thread *)pthread_mutex_lock(&turi::pool_creation_lock(void)::lock);
  {
    if (v1)
    {
      __cxa_atexit((void (*)(void *))std::shared_ptr<turi::thread_pool>::~shared_ptr[abi:ne180100], &turi::get_pool_ptr_instance(void)::pool, &dword_223D44000);
    }
  }
  if (!(void)turi::get_pool_ptr_instance(void)::pool)
  {
    uint64_t v6 = turi::thread::cpu_count(v1);
    char v5 = 1;
    std::allocate_shared[abi:ne180100]<turi::thread_pool,std::allocator<turi::thread_pool>,unsigned long,BOOL,void>(&v6, &v5, &v7);
    long long v3 = v7;
    long long v7 = 0uLL;
    uint64_t v4 = (std::__shared_weak_count *)*((void *)&turi::get_pool_ptr_instance(void)::pool + 1);
    turi::get_pool_ptr_instance(void)::pool = v3;
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      if (*((void *)&v7 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v7 + 1));
      }
    }
  }
  return pthread_mutex_unlock(&turi::pool_creation_lock(void)::lock);
}

void sub_223F30AB0(_Unwind_Exception *a1)
{
}

uint64_t std::deque<std::exception_ptr>::~deque[abi:ne180100](void *a1)
{
  int v2 = (void **)a1[1];
  long long v3 = (void **)a1[2];
  if (v3 == v2)
  {
    uint64_t v4 = a1 + 5;
    long long v3 = (void **)a1[1];
  }
  else
  {
    uint64_t v4 = a1 + 5;
    unint64_t v5 = a1[4];
    uint64_t v6 = &v2[v5 >> 9];
    long long v7 = (std::exception_ptr *)((char *)*v6 + 8 * (v5 & 0x1FF));
    uint64_t v8 = *(uint64_t *)((char *)v2 + (((a1[5] + v5) >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * ((a1[5] + v5) & 0x1FF);
    if (v7 != (std::exception_ptr *)v8)
    {
      do
      {
        std::exception_ptr::~exception_ptr(v7);
        long long v7 = v9 + 1;
        if ((char *)v7 - (unsigned char *)*v6 == 4096)
        {
          char v10 = (std::exception_ptr *)v6[1];
          ++v6;
          long long v7 = v10;
        }
      }
      while (v7 != (std::exception_ptr *)v8);
      int v2 = (void **)a1[1];
      long long v3 = (void **)a1[2];
    }
  }
  *uint64_t v4 = 0;
  unint64_t v11 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      long long v3 = (void **)a1[2];
      int v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v11 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v12 = v11 >> 3;
  if (v12 == 1)
  {
    uint64_t v13 = 256;
  }
  else
  {
    if (v12 != 2) {
      goto LABEL_16;
    }
    uint64_t v13 = 512;
  }
  a1[4] = v13;
LABEL_16:
  while (v2 != v3)
  {
    long long v14 = *v2++;
    operator delete(v14);
  }
  return std::__split_buffer<std::shared_ptr<std::vector<turi::flexible_type>> *,std::allocator<std::shared_ptr<std::vector<turi::flexible_type>> *>>::~__split_buffer((uint64_t)a1);
}

turi::thread_group *turi::thread_group::thread_group(turi::thread_group *this)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  int v2 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 16), 0);
  assert_msg(v2 == 0, "Mutex create error %d", v2);
  turi::conditional::conditional((pthread_cond_t *)((char *)this + 80));
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 1CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0u;
  *((_OWORD *)this + 8) = 0u;
  return this;
}

void sub_223F30C84(_Unwind_Exception *a1)
{
  turi::mutex::~mutex(v1);
  _Unwind_Resume(a1);
}

uint64_t std::deque<std::pair<_opaque_pthread_t *,char const*>>::~deque[abi:ne180100](void *a1)
{
  int v2 = (void **)a1[1];
  long long v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      long long v3 = (void **)a1[2];
      int v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 128;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 256;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    long long v7 = *v2++;
    operator delete(v7);
  }
  return std::__split_buffer<std::shared_ptr<std::vector<turi::flexible_type>> *,std::allocator<std::shared_ptr<std::vector<turi::flexible_type>> *>>::~__split_buffer((uint64_t)a1);
}

uint64_t std::shared_ptr<turi::thread_pool>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  int v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  return a1;
}

void *std::allocate_shared[abi:ne180100]<turi::thread_pool,std::allocator<turi::thread_pool>,unsigned long,BOOL,void>@<X0>(uint64_t *a1@<X1>, char *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = operator new(0x238uLL);
  unint64_t result = std::__shared_ptr_emplace<turi::thread_pool>::__shared_ptr_emplace[abi:ne180100]<unsigned long,BOOL,std::allocator<turi::thread_pool>,0>(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_223F30DC0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<turi::thread_pool>::__shared_ptr_emplace[abi:ne180100]<unsigned long,BOOL,std::allocator<turi::thread_pool>,0>(void *a1, uint64_t *a2, char *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26D75C280;
  turi::thread_pool::thread_pool((turi::thread_pool *)(a1 + 3), *a2, *a3);
  return a1;
}

void sub_223F30E24(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<turi::thread_pool>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C280;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<turi::thread_pool>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D75C280;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x22A614FA0);
}

void std::__shared_ptr_emplace<turi::thread_pool>::__on_zero_shared(uint64_t a1)
{
}

uint64_t boost::detail::function::functor_manager<turi::parallel_task_queue::launch(boost::function<void ()(void)> const&,unsigned long)::$_0>::manage(uint64_t result, _WORD *a2, int a3)
{
  unint64_t v4 = (void *)result;
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)unint64_t result = 0;
      return result;
    case 2:
      unint64_t result = *(void *)a2;
      if (*(void *)a2)
      {
        unint64_t v5 = boost::function0<void>::~function0((uint64_t *)result);
        unint64_t result = MEMORY[0x22A614FA0](v5, 0x10E2C40F3C66E27);
      }
      goto LABEL_9;
    case 3:
      unint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"ZN4turi19parallel_task_queue6launchERKN5boost8functionIFvvEEEmE3$_0" & 0x7FFFFFFFFFFFFFFFLL)
        || (unint64_t result = strcmp((const char *)result, (const char *)((unint64_t)"ZN4turi19parallel_task_queue6launchERKN5boost8functionIFvvEEEmE3$_0" & 0x7FFFFFFFFFFFFFFFLL)), !result))
      {
        *(void *)a2 = *v4;
      }
      else
      {
LABEL_9:
        *(void *)a2 = 0;
      }
      break;
    default:
      a2[4] = 0;
      break;
  }
  return result;
}

void sub_223F31000(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x10E2C40F3C66E27);
  _Unwind_Resume(a1);
}

uint64_t boost::detail::function::void_function_obj_invoker0<turi::parallel_task_queue::launch(boost::function<void ()(void)> const&,unsigned long)::$_0,void>::invoke(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[4];
  boost::function0<void>::operator()(v1);
  pthread_mutex_lock((pthread_mutex_t *)(v2 + 8));
  uint64_t v3 = *(void *)(v2 + 176) + 1;
  *(void *)(v2 + 17boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v3;
  if (*(unsigned char *)(v2 + 184) && v3 == *(void *)(v2 + 168))
  {
    int v4 = pthread_cond_signal((pthread_cond_t *)(v2 + 72));
    assert_msg(v4 == 0, "Condition variable signal error %d", v4);
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 8));
}

void sub_223F310C8(_Unwind_Exception *a1)
{
  pthread_mutex_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_223F310E4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
  __cxa_begin_catch(a1);
  pthread_mutex_lock((pthread_mutex_t *)(v10 + 8));
  std::current_exception();
  std::deque<std::exception_ptr>::push_back((void *)(v10 + 120), &a10);
  std::exception_ptr::~exception_ptr(&a10);
  pthread_mutex_unlock((pthread_mutex_t *)(v10 + 8));
  __cxa_end_catch();
  JUMPOUT(0x223F3105CLL);
}

void sub_223F31130(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
  std::exception_ptr::~exception_ptr(&a10);
  pthread_mutex_unlock(v10);
  __cxa_end_catch();
  JUMPOUT(0x223F310D4);
}

std::exception_ptr *std::deque<std::exception_ptr>::push_back(void *a1, std::exception_ptr *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = ((v5 - v4) << 6) - 1;
  if (v5 == v4) {
    uint64_t v6 = 0;
  }
  if (v6 == a1[5] + a1[4])
  {
    std::deque<std::exception_ptr>::__add_back_capacity(a1);
    uint64_t v4 = a1[1];
    uint64_t v5 = a1[2];
  }
  if (v5 == v4)
  {
    uint64_t v8 = 0;
  }
  else
  {
    unint64_t v7 = a1[5] + a1[4];
    uint64_t v8 = (std::exception_ptr *)(*(void *)(v4 + ((v7 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v7 & 0x1FF));
  }
  unint64_t result = std::exception_ptr::exception_ptr(v8, a2);
  ++a1[5];
  return result;
}

void std::deque<std::exception_ptr>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    int v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      unsigned int v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v5, v33);
      unint64_t v35 = &v34[8 * (v33 >> 2)];
      unint64_t v37 = &v34[8 * v36];
      unsigned int v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        unint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)unint64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      int v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      std::__split_buffer<char *>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    std::__split_buffer<char *>::push_front((uint64_t)a1, &v54);
    unsigned int v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    int v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      unsigned int v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v46);
      unint64_t v35 = &v34[8 * (v46 >> 2)];
      unint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        double v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)double v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      unint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  int v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  double v53 = operator new(0x1000uLL);
  std::__split_buffer<char *>::push_back(&v54, &v53);
  long long v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<char *>::push_front((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_223F314C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t std::deque<std::exception_ptr>::__move_assign(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void ***)(a1 + 8);
  uint64_t v5 = *(void ***)(a1 + 16);
  if (v5 == v4)
  {
    uint64_t v6 = (void *)(a1 + 40);
    uint64_t v5 = *(void ***)(a1 + 8);
  }
  else
  {
    uint64_t v6 = (void *)(a1 + 40);
    unint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = &v4[v7 >> 9];
    int v9 = (std::exception_ptr *)((char *)*v8 + 8 * (v7 & 0x1FF));
    uint64_t v10 = *(uint64_t *)((char *)v4 + (((*(void *)(a1 + 40) + v7) >> 6) & 0x3FFFFFFFFFFFFF8))
        + 8 * ((*(void *)(a1 + 40) + v7) & 0x1FF);
    if (v9 != (std::exception_ptr *)v10)
    {
      do
      {
        std::exception_ptr::~exception_ptr(v9);
        int v9 = v11 + 1;
        if ((char *)v9 - (unsigned char *)*v8 == 4096)
        {
          uint64_t v12 = (std::exception_ptr *)v8[1];
          ++v8;
          int v9 = v12;
        }
      }
      while (v9 != (std::exception_ptr *)v10);
      unint64_t v4 = *(void ***)(a1 + 8);
      uint64_t v5 = *(void ***)(a1 + 16);
    }
  }
  void *v6 = 0;
  unint64_t v13 = (char *)v5 - (char *)v4;
  if (v13 >= 0x11)
  {
    do
    {
      operator delete(*v4);
      uint64_t v14 = *(void *)(a1 + 16);
      unint64_t v4 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v4;
      unint64_t v13 = v14 - (void)v4;
    }
    while (v13 > 0x10);
  }
  if (v13 >> 3 == 1)
  {
    uint64_t v15 = 256;
    goto LABEL_14;
  }
  if (v13 >> 3 == 2)
  {
    uint64_t v15 = 512;
LABEL_14:
    *(void *)(a1 + 32) = v15;
  }
  std::deque<std::exception_ptr>::shrink_to_fit((void **)a1);
  uint64_t result = std::__split_buffer<std::exception_ptr *>::operator=(a1, a2);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0;
  return result;
}

void std::deque<std::exception_ptr>::shrink_to_fit(void **a1)
{
  if (a1[5])
  {
    std::deque<std::exception_ptr>::__maybe_remove_front_spare[abi:ne180100]((uint64_t)a1, 0);
    std::deque<std::exception_ptr>::__maybe_remove_back_spare[abi:ne180100](a1, 0);
  }
  else
  {
    BOOL v3 = a1[1];
    for (uint64_t i = (uint64_t)a1[2]; (void *)i != v3; a1[2] = (void *)i)
    {
      operator delete(*(void **)(i - 8));
      BOOL v3 = a1[1];
      uint64_t i = (uint64_t)a1[2] - 8;
    }
    a1[4] = 0;
  }
  std::__split_buffer<std::exception_ptr *>::shrink_to_fit(a1);
}

uint64_t std::deque<std::exception_ptr>::__maybe_remove_front_spare[abi:ne180100](uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x200) {
    a2 = 1;
  }
  if (v2 < 0x400) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 512;
  }
  return v4 ^ 1u;
}

uint64_t std::deque<std::exception_ptr>::__maybe_remove_back_spare[abi:ne180100](void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = ((v2 - v3) << 6) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x200) {
    a2 = 1;
  }
  if (v5 < 0x400) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

void std::__split_buffer<std::exception_ptr *>::shrink_to_fit(void **a1)
{
  uint64_t v3 = a1[3];
  uint64_t v2 = (uint64_t)(a1 + 3);
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 >= (v3 - (unsigned char *)*a1) >> 3) {
    return;
  }
  if (v5 == v4)
  {
    uint64_t v10 = 0;
    int v7 = 0;
    goto LABEL_8;
  }
  int v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v2, v6);
  uint64_t v8 = a1[1];
  unint64_t v5 = a1[2];
  uint64_t v10 = &v7[8 * v9];
  uint64_t v11 = v5 - v8;
  if (v5 == v8)
  {
LABEL_8:
    uint64_t v14 = v5;
    goto LABEL_9;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 8 * (v11 >> 3);
  do
  {
    *(void *)&v7[v12] = *(void *)&v8[v12];
    v12 += 8;
  }
  while (v13 != v12);
  unint64_t v5 = a1[1];
  uint64_t v14 = a1[2];
LABEL_9:
  int64_t v15 = v14 - v5;
  uint64_t v16 = *a1;
  *a1 = v7;
  a1[1] = v7;
  a1[2] = &v7[v15];
  a1[3] = v10;
  if (v16)
  {
    operator delete(v16);
  }
}

uint64_t std::__split_buffer<std::exception_ptr *>::operator=(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != v5) {
    *(void *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v4 + ((v5 - v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  std::__split_buffer<std::exception_ptr *>::shrink_to_fit((void **)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0u;
  return a1;
}

uint64_t turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::blocking_queue(uint64_t a1)
{
  *(unsigned char *)a1 = 1;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4CoreML::Specification::V5::DictionaryValue::New(this, 0) = 0u;
  int v2 = pthread_mutex_init((pthread_mutex_t *)(a1 + 56), 0);
  assert_msg(v2 == 0, "Mutex create error %d", v2);
  turi::conditional::conditional((pthread_cond_t *)(a1 + 120));
  turi::conditional::conditional((pthread_cond_t *)(a1 + 168));
  *(_WORD *)(a1 + 21boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 0;
  *(_WORD *)(a1 + 218) = 0;
  return a1;
}

void sub_223F3196C(_Unwind_Exception *a1)
{
  turi::conditional::~conditional(v3);
  turi::mutex::~mutex(v2);
  std::deque<std::pair<boost::function<void ()(void)>,int>>::~deque[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

uint64_t std::deque<std::pair<boost::function<void ()(void)>,int>>::~deque[abi:ne180100](void *a1)
{
  int v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v3 == v2)
  {
    uint64_t v4 = a1 + 5;
    uint64_t v3 = (void **)a1[1];
  }
  else
  {
    uint64_t v4 = a1 + 5;
    unint64_t v5 = a1[4];
    unint64_t v6 = &v2[v5 / 0x66];
    int v7 = (uint64_t *)((char *)*v6 + 40 * (v5 % 0x66));
    unint64_t v8 = (unint64_t)v2[(a1[5] + v5) / 0x66] + 40 * ((a1[5] + v5) % 0x66);
    if (v7 != (uint64_t *)v8)
    {
      do
      {
        int v7 = boost::function0<void>::~function0(v7) + 5;
        if ((char *)v7 - (unsigned char *)*v6 == 4080)
        {
          uint64_t v9 = (uint64_t *)v6[1];
          ++v6;
          int v7 = v9;
        }
      }
      while (v7 != (uint64_t *)v8);
      int v2 = (void **)a1[1];
      uint64_t v3 = (void **)a1[2];
    }
  }
  *uint64_t v4 = 0;
  unint64_t v10 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      int v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v10 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 51;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 102;
  }
  a1[4] = v12;
LABEL_16:
  while (v2 != v3)
  {
    uint64_t v13 = *v2++;
    operator delete(v13);
  }
  return std::__split_buffer<std::shared_ptr<std::vector<turi::flexible_type>> *,std::allocator<std::shared_ptr<std::vector<turi::flexible_type>> *>>::~__split_buffer((uint64_t)a1);
}

uint64_t turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::~blocking_queue(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::broadcast(a1);
  turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::broadcast_blocking_empty(a1);
  turi::conditional::~conditional((pthread_cond_t *)(a1 + 168));
  turi::conditional::~conditional((pthread_cond_t *)(a1 + 120));
  turi::mutex::~mutex((pthread_mutex_t *)(a1 + 56));
  std::deque<std::pair<boost::function<void ()(void)>,int>>::~deque[abi:ne180100]((void *)(a1 + 8));
  return a1;
}

uint64_t turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::broadcast(uint64_t a1)
{
  int v2 = (pthread_mutex_t *)(a1 + 56);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 56));
  int v3 = pthread_cond_broadcast((pthread_cond_t *)(a1 + 120));
  assert_msg(v3 == 0, "Condition variable broadcast error %d", v3);
  return pthread_mutex_unlock(v2);
}

uint64_t turi::blocking_queue<std::pair<boost::function<void ()(void)>,int>>::broadcast_blocking_empty(uint64_t a1)
{
  int v2 = (pthread_mutex_t *)(a1 + 56);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 56));
  int v3 = pthread_cond_broadcast((pthread_cond_t *)(a1 + 168));
  assert_msg(v3 == 0, "Condition variable broadcast error %d", v3);
  return pthread_mutex_unlock(v2);
}

uint64_t boost::detail::function::functor_manager<boost::_bi::bind_t<void,boost::_mfi::mf0<void,turi::thread_pool>,boost::_bi::list1<boost::_bi::value<turi::thread_pool*>>>>::manage(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }
      uint64_t result = *(void *)(*(void *)a2 + 8) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == (0x80000002246C8096 & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp((const char *)result, (const char *)(0x80000002246C8096 & 0x7FFFFFFFFFFFFFFFLL)),
            !result))
      {
        *(void *)a2 = v4;
      }
      else
      {
        *(void *)a2 = 0;
      }
    }
  }
  else
  {
    long long v5 = *(_OWORD *)result;
    *(void *)(a2 + 1boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }
  return result;
}

uint64_t boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void,boost::_mfi::mf0<void,turi::thread_pool>,boost::_bi::list1<boost::_bi::value<turi::thread_pool*>>>,void>::invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int v2 = *(uint64_t (**)(void *))a1;
  int v3 = (void *)(*(void *)(a1 + 16) + (v1 >> 1));
  if (v1) {
    return (*(uint64_t (**)(void))(*v3 + v2))();
  }
  else {
    return v2(v3);
  }
}

void std::deque<std::pair<boost::function<void ()(void)>,int>>::push_back(void *a1, uint64_t *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 102 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<std::pair<boost::function<void ()(void)>,int>>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  uint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x66));
  unint64_t v9 = v7 % 0x66;
  uint64_t v10 = v8 + 40 * (v7 % 0x66);
  *(void *)uint64_t v10 = 0;
  uint64_t v11 = *a2;
  if (*a2)
  {
    *(void *)uint64_t v10 = v11;
    if (v11)
    {
      long long v12 = *(_OWORD *)(a2 + 1);
      *(void *)(v10 + 24) = a2[3];
      *(_OWORD *)(v10 + 8) = v12;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, void))(v11 & 0xFFFFFFFFFFFFFFFELL))(a2 + 1, v10 + 8, 0);
    }
  }
  *(_DWORD *)(v8 + 40 * v9 + 32) = *((_DWORD *)a2 + 8);
  ++a1[5];
}

void std::deque<std::pair<boost::function<void ()(void)>,int>>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x66;
  unint64_t v4 = v2 - 102;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      unsigned int v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v5, v33);
      unint64_t v35 = &v34[8 * (v33 >> 2)];
      unint64_t v37 = &v34[8 * v36];
      unsigned int v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        unint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)unint64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      unint64_t v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      std::__split_buffer<char *>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    std::__split_buffer<char *>::push_front((uint64_t)a1, &v54);
    unsigned int v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    unint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      unsigned int v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v46);
      unint64_t v35 = &v34[8 * (v46 >> 2)];
      unint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        double v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)double v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      unint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  int v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  double v53 = operator new(0xFF0uLL);
  std::__split_buffer<char *>::push_back(&v54, &v53);
  long long v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<char *>::push_front((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_223F320B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t std::deque<std::pair<boost::function<void ()(void)>,int>>::pop_front(int64x2_t *a1)
{
  boost::function0<void>::~function0((uint64_t *)(*(void *)(a1->i64[1] + 8 * (a1[2].i64[0] / 0x66uLL))
                                               + 40 * (a1[2].i64[0] % 0x66uLL)));
  a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_2246C0940);
  return std::deque<std::pair<boost::function<void ()(void)>,int>>::__maybe_remove_front_spare[abi:ne180100]((uint64_t)a1, 1);
}

uint64_t *boost::function<void ()(void)>::operator=(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = 0;
  uint64_t v3 = *(void *)a2;
  if (*(void *)a2)
  {
    uint64_t v5 = *(void *)a2;
    if (v3)
    {
      long long v6 = *(_OWORD *)(a2 + 8);
      uint64_t v7 = *(void *)(a2 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v3 & 0xFFFFFFFFFFFFFFFELL))(a2 + 8, &v6, 0);
    }
  }
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::swap(&v5, a1);
  boost::function0<void>::~function0(&v5);
  return a1;
}

void sub_223F32208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::deque<std::pair<boost::function<void ()(void)>,int>>::__maybe_remove_front_spare[abi:ne180100](uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x66) {
    a2 = 1;
  }
  if (v2 < 0xCC) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 102;
  }
  return v4 ^ 1u;
}

uint64_t *boost::function<void ()(void)>::operator=(uint64_t *a1, uint64_t *a2)
{
  v4[0] = 0;
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::move_assign((uint64_t)v4, a2);
  boost::function4<BOOL,char const*&,char const* const&,boost::spirit::context<boost::fusion::cons<turi::flexible_type &,boost::fusion::nil_>,boost::fusion::vector<>> &,boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space,boost::spirit::char_encoding::iso8859_1>> const&>::swap(v4, a1);
  boost::function0<void>::~function0(v4);
  return a1;
}

void sub_223F322C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

_DWORD *boost::random::lagged_fibonacci_01_engine<double,48,607u,273u>::fill(_DWORD *result)
{
  for (uint64_t i = 0; i != 546; i += 2)
  {
    double v2 = *(double *)&result[i + 2] + *(double *)&result[i + 670];
    if (v2 >= 1.0) {
      double v2 = v2 + -1.0;
    }
    *(double *)&result[i + 2] = v2;
  }
  uint64_t v3 = 0;
  __asm
  {
    FMOV            V0.2D, #1.0
    FMOV            V1.2D, #-1.0
  }
  do
  {
    float64x2_t v10 = vaddq_f64(*(float64x2_t *)&result[v3 + 548], *(float64x2_t *)&result[v3 + 2]);
    *(int8x16_t *)&result[v3 + 548] = vbslq_s8((int8x16_t)vcgeq_f64(v10, _Q0), (int8x16_t)vaddq_f64(v10, _Q1), (int8x16_t)v10);
    v3 += 4;
  }
  while (v3 != 668);
  std::exception_ptr *result = 0;
  return result;
}

uint64_t turi::random::pure_random_seed(turi::random *this)
{
  {
    turi::random::pure_random_seed(void)::base_start_time = std::chrono::steady_clock::now().__d_.__rep_;
  }
  {
    time_t v6 = time(0);
    turi::random::pure_random_seed(void)::base_seed = 0xC6A4A7935BD1E995
                                                    * ((0xC6A4A7935BD1E995 * (v6 ^ 0xC3A5C85C97CB3127)) ^ ((0xC6A4A7935BD1E995 * (v6 ^ 0xC3A5C85C97CB3127)) >> 47));
  }
  {
    turi::random::pure_random_seed(void)::base_count = 0;
  }
  atomic_fetch_add(&turi::random::pure_random_seed(void)::base_count, 1uLL);
  v1.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  uint64_t v2 = 5
     * __ROR8__((0x4CF5AD432745937FLL* ((0x2284A7AA00000000 * (v1.__d_.__rep_ - turi::random::pure_random_seed(void)::base_start_time)) | ((0x87C37B91114253D5 * (v1.__d_.__rep_ - turi::random::pure_random_seed(void)::base_start_time)) >> 31))) ^ 0x9FA35C8D77B96328, 27)+ 0x1E30CEC3A97BD6F1;
  uint64_t v3 = (5
      * (v2
       + __ROR8__((0x87C37B91114253D5* ((0x93A2C9BF80000000 * turi::random::pure_random_seed(void)::base_count) | ((unint64_t)(0x4CF5AD432745937FLL * turi::random::pure_random_seed(void)::base_count) >> 33))) ^ 0x9FA35C8D77B96328, 31))+ 944331445) ^ v2;
  uint64_t v4 = 5
     * __ROR8__((0x4CF5AD432745937FLL* ((0x2284A7AA00000000 * turi::random::pure_random_seed(void)::base_seed) | ((0x87C37B91114253D5* turi::random::pure_random_seed(void)::base_seed) >> 31))) ^ 0x9FA35C8D77B96328, 27)+ 0x1E30CEC3A97BD6F1;
  return (5
        * (__ROR8__((0x87C37B91114253D5* ((0x93A2C9BF80000000 * v3) | ((unint64_t)(0x4CF5AD432745937FLL * v3) >> 33))) ^ 0x9FA35C8D77B96328, 31)+ v4)+ 944331445) ^ v4;
}

void sub_223F3256C(_Unwind_Exception *a1)
{
}

uint64_t turi::random::destroy_tls_data(uint64_t this, void *a2)
{
  if (this)
  {
    turi::mutex::~mutex((pthread_mutex_t *)(this + 6288));
    JUMPOUT(0x22A614FA0);
  }
  return this;
}

void *turi::random::get_source(turi::random *this)
{
  pthread_key_t random_source_key = turi::random::get_random_source_key(this);
  uint64_t v2 = pthread_getspecific(random_source_key);
  if (!v2) {
    operator new();
  }
  return v2;
}

void sub_223F32644(_Unwind_Exception *a1)
{
  MEMORY[0x22A614FA0](v1, 0x1000C40541204DDLL);
  _Unwind_Resume(a1);
}

void *turi::random::source_registry::global(turi::random::source_registry *this)
{
  {
    turi::random::source_registry::source_registry((turi::random::source_registry *)&turi::random::source_registry::global(void)::registry);
    __cxa_atexit((void (*)(void *))turi::random::source_registry::~source_registry, &turi::random::source_registry::global(void)::registry, &dword_223D44000);
  }
  return &turi::random::source_registry::global(void)::registry;
}

void sub_223F326EC(_Unwind_Exception *a1)
{
}

uint64_t turi::random::source_registry::register_generator(uint64_t **this, turi::random::generator *a2)
{
  uint64_t v5 = a2;
  if (!a2) {
    turi::random::source_registry::register_generator(turi::random::generator *)::{lambda(void)#1}::operator()();
  }
  uint64_t v3 = (pthread_mutex_t *)(this + 797);
  pthread_mutex_lock((pthread_mutex_t *)(this + 797));
  std::__tree<unsigned long>::__emplace_unique_key_args<unsigned long,unsigned long const&>(this, (unint64_t *)&v5, (uint64_t *)&v5);
  turi::random::generator::seed(v5, (turi::random::generator *)(this + 3));
  return pthread_mutex_unlock(v3);
}

uint64_t turi::random::generator::nondet_seed(turi::random::generator *this)
{
  uint64_t v2 = (pthread_mutex_t *)turi::random::nondet_generator::global(this);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 6288));
  turi::random::nondet_generator::operator()(v2);
  boost::random::detail::seed_array_real<48,607ul,boost::random::detail::generator_seed_seq<boost::random::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>>,double>();
  *(_DWORD *)this = 607;
  unsigned int v3 = turi::random::nondet_generator::operator()(v2);
  uint64_t v4 = 0;
  *((_DWORD *)this + 121boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v3;
  uint64_t v5 = 1;
  do
  {
    int v6 = 1812433253 * (v3 ^ (v3 >> 30));
    unsigned int v3 = v6 + v5;
    *((_DWORD *)this + v4 + 1217) = v4 + v6 + 1;
    ++v5;
    ++v4;
  }
  while (v4 != 350);
  *((void *)this + 784) = 351;
  boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::normalize_state((unsigned int *)this + 1216);
  *((void *)this + 785) = ((unint64_t)turi::random::nondet_generator::operator()(v2) << 16) | 0x330E;
  return pthread_mutex_unlock((pthread_mutex_t *)((char *)this + 6288));
}

void *turi::random::nondet_generator::global(turi::random::nondet_generator *this)
{
  {
    turi::random::nondet_generator::nondet_generator((pthread_mutex_t *)&turi::random::nondet_generator::global(void)::global_gen);
    __cxa_atexit((void (*)(void *))turi::random::nondet_generator::~nondet_generator, &turi::random::nondet_generator::global(void)::global_gen, &dword_223D44000);
  }
  return &turi::random::nondet_generator::global(void)::global_gen;
}

void sub_223F32914(_Unwind_Exception *a1)
{
}

uint64_t turi::random::nondet_generator::operator()(pthread_mutex_t *a1)
{
  uint64_t v2 = a1 + 9;
  pthread_mutex_lock(a1 + 9);
  if (*(_DWORD *)&a1->__opaque[*(void *)(a1->__sig - 24) + 24]) {
    turi::random::nondet_generator::operator()(void)::{lambda(void)#1}::operator()();
  }
  std::istream::read();
  if (*(_DWORD *)&a1->__opaque[*(void *)(a1->__sig - 24) + 24]) {
    turi::random::nondet_generator::operator()(void)::{lambda(void)#2}::operator()();
  }
  pthread_mutex_unlock(v2);
  return 0;
}

unsigned int *boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::seed(unsigned int *result, unsigned int *a2)
{
  unsigned int v2 = *a2;
  std::exception_ptr *result = *a2;
  for (uint64_t i = 1; i != 351; ++i)
  {
    unsigned int v2 = i + 1812433253 * (v2 ^ (v2 >> 30));
    result[i] = v2;
  }
  *((void *)result + 17boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 351;
  return boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::normalize_state(result);
}

turi::random::generator *turi::random::generator::generator(turi::random::generator *this)
{
  int v5 = 331;
  v6.__darwin_time_t tv_sec = (__darwin_time_t)&v5;
  boost::random::detail::seed_array_real<48,607ul,boost::random::detail::generator_seed_seq<boost::random::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>>,double>();
  *(_DWORD *)this = 607;
  boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::seed((unsigned int *)this + 1216, &boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::default_seed);
  *((void *)this + 785) = 78606;
  uint64_t v2 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 6288), 0);
  assert_msg(v2 == 0, v3, v2);
  gettimeofday(&v6, 0);
  turi::random::generator::seed(this, v6.tv_usec + 1000000 * LODWORD(v6.tv_sec));
  return this;
}

void sub_223F32AD0(_Unwind_Exception *a1)
{
  turi::mutex::~mutex(v1);
  _Unwind_Resume(a1);
}

uint64_t turi::random::generator::seed(turi::random::generator *this, unsigned int a2)
{
  uint64_t v4 = (pthread_mutex_t *)((char *)this + 6288);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 6288));
  *((void *)this + 785) = ((unint64_t)a2 << 16) | 0x330E;
  boost::random::detail::seed_array_real<48,607ul,boost::random::rand48,double>();
  *(_DWORD *)this = 607;
  boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::seed<boost::random::rand48>((char *)this + 4864, (uint64_t *)this + 785);
  return pthread_mutex_unlock(v4);
}

unsigned int *boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::seed<boost::random::rand48>(void *__dst, uint64_t *a2)
{
  uint64_t v3 = 0;
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a2;
  do
  {
    unint64_t v5 = 0x5DEECE66DLL * v4 + 11;
    uint64_t v4 = v5 & 0xFFFFFFFFFFFFLL;
    *(_DWORD *)&__src[v3] = (v5 >> 17) & 0x7FFFFFFF;
    v3 += 4;
  }
  while (v3 != 1404);
  *a2 = v4;
  memcpy(__dst, __src, 0x57CuLL);
  *((void *)__dst + 17boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = 351;
  return boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::normalize_state((unsigned int *)__dst);
}

uint64_t *boost::random::detail::seed_array_real<48,607ul,boost::random::rand48,double>()
{
  uint64_t result = (uint64_t *)MEMORY[0x270FA5388]();
  uint64_t v3 = 0;
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v4 = *result;
  do
  {
    unint64_t v5 = 0x5DEECE66DLL * v4 + 11;
    uint64_t v4 = v5 & 0xFFFFFFFFFFFFLL;
    *(_DWORD *)&v8[4 * v3++] = (v5 >> 17) & 0x7FFFFFFF;
  }
  while (v3 != 1214);
  uint64_t *result = v4;
  uint64_t v6 = -4856;
  do
  {
    LODWORD(v2) = *(_DWORD *)&v8[v6 + 4856];
    unint64_t v7 = 0x3CF0000000000000;
    LOWORD(v7) = *(_WORD *)((char *)&v9 + v6 + 4);
    double v2 = (double)*(unint64_t *)&v2 * 3.55271368e-15 + 0.0 + (double)v7 * 0.0000152587891;
    *(double *)(v1 + v6 + 485boost::variant<turi::globals::value_and_value_check<double>,turi::globals::value_and_value_check<long long>,turi::globals::value_and_value_check<std::string>>::destroy_content((int *)this + 6) = v2;
    v6 += 8;
  }
  while (v6);
  return result;
}

unsigned int *boost::random::mersenne_twister_engine<unsigned int,32ul,351ul,175ul,19ul,3433795303u,11ul,4294967295u,7ul,834054912u,15ul,4293197824u,17ul,1812433253u>::normalize_state(unsigned int *result)
{
  uint64_t v1 = 0;
  int v2 = result[350] ^ result[174];
  if (v2 >= 0) {
    int v3 = 2 * v2;
  }
  else {
    int v3 = (2 * v2) ^ 0x71DCF;
  }
  uint64_t *result = *result & 0xFFF80000 | v3 & 0x7FFFF;
  while (!result[v1])
  {
    if (++v1 == 351)
    {
      uint64_t *result = 0x80000000;
      return result;
    }
  }
  return result;
}