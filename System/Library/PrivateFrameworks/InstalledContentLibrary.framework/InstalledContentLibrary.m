id _CreateError(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  uint64_t vars8;

  v9 = _CreateErrorV(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&a9);
  return v9;
}

id _CreateErrorV(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8)
{
  id v15 = a3;
  id v16 = a5;
  id v17 = a6;
  id v18 = a7;
  if (v17) {
    uint64_t v19 = [v17 mutableCopy];
  }
  else {
    uint64_t v19 = objc_opt_new();
  }
  v20 = (void *)v19;
  if (v18)
  {
    v21 = (void *)[[NSString alloc] initWithFormat:v18 arguments:a8];
    [v20 setObject:v21 forKeyedSubscript:*MEMORY[0x1E4F28568]];
  }
  if (v16) {
    [v20 setObject:v16 forKeyedSubscript:*MEMORY[0x1E4F28A50]];
  }
  v22 = [NSString stringWithUTF8String:a1];
  [v20 setObject:v22 forKeyedSubscript:@"FunctionName"];

  v23 = [NSNumber numberWithInt:a2];
  [v20 setObject:v23 forKeyedSubscript:@"SourceFileLine"];

  v24 = [MEMORY[0x1E4F28C58] errorWithDomain:v15 code:a4 userInfo:v20];

  return v24;
}

id getUMUserManagerClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getUMUserManagerClass_softClass;
  uint64_t v7 = getUMUserManagerClass_softClass;
  if (!getUMUserManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getUMUserManagerClass_block_invoke;
    v3[3] = &unk_1E62E6C30;
    v3[4] = &v4;
    __getUMUserManagerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1BCA641D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BCA646C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1BCA64970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1BCA64CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1BCA65244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

Class __getUMUserManagerClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!UserManagementLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __UserManagementLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E62E6C50;
    uint64_t v5 = 0;
    UserManagementLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!UserManagementLibraryCore_frameworkLibrary) {
    __getUMUserManagerClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("UMUserManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getUMUserManagerClass_block_invoke_cold_2();
  }
  getUMUserManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __UserManagementLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  UserManagementLibraryCore_frameworkLibrary = result;
  return result;
}

__CFString *MICopyProcessNameForPid()
{
  int v0 = MEMORY[0x1F4188790]();
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = proc_pidpath(v0, buffer, 0x1000u);
  if (v1 < 1)
  {
    v3 = @"Unknown Process Name";
  }
  else
  {
    v2 = (void *)[[NSString alloc] initWithBytes:buffer length:v1 encoding:4];
    v3 = [v2 lastPathComponent];
  }
  return v3;
}

id MIFetchInfoForUsername(const char *a1, uid_t *a2, gid_t *a3, void *a4)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (sysconf(71) == -1) {
    MIFetchInfoForUsername_cold_1(&v15, v20);
  }
  uint64_t v8 = MEMORY[0x1F4188790]();
  memset(&v15, 0, sizeof(v15));
  v14 = 0;
  id result = (id)getpwnam_r(a1, &v15, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9, &v14);
  if (result)
  {
    uint64_t v13 = 0;
    memset(v20, 0, sizeof(v20));
    int v11 = (int)result;
    os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR);
    v12 = strerror(v11);
    int v16 = 136315394;
    uint64_t v17 = a1;
    __int16 v18 = 2080;
    uint64_t v19 = v12;
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
LABEL_13:
    MIFetchInfoForUsername_cold_2(&v16, v20);
  }
  if (!v14) {
    goto LABEL_13;
  }
  if (a2) {
    *a2 = v15.pw_uid;
  }
  if (a3) {
    *a3 = v15.pw_gid;
  }
  if (a4)
  {
    id result = [MEMORY[0x1E4F1CB10] fileURLWithFileSystemRepresentation:v15.pw_dir isDirectory:1 relativeToURL:0];
    *a4 = result;
  }
  return result;
}

uint64_t MIFetchInfoForUID(uint64_t a1, void *a2, gid_t *a3, void *a4, void *a5)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (sysconf(71) == -1)
  {
    int v19 = *__error();
    v20 = (void *)*MEMORY[0x1E4F28798];
    uint64_t v21 = v19;
    v22 = strerror(v19);
    uint64_t v17 = _CreateError((uint64_t)"MIFetchInfoForUID", 140, v20, v21, 0, 0, @"Failed to get home dir path size: %s", v23, (uint64_t)v22);
    uint64_t v18 = 0;
    if (!a5) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  uint64_t v10 = MEMORY[0x1F4188790]();
  memset(&v27, 0, sizeof(v27));
  v26 = 0;
  int v12 = getpwuid_r(a1, &v27, (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11, &v26);
  if (v12)
  {
    v14 = (void *)*MEMORY[0x1E4F28798];
    uint64_t v15 = v12;
    strerror(v12);
    _CreateError((uint64_t)"MIFetchInfoForUID", 150, v14, v15, 0, 0, @"getpwuid_r failed for uid %d : %s", v16, a1);
    uint64_t v17 = LABEL_4:;
    uint64_t v18 = 0;
    goto LABEL_5;
  }
  if (!v26)
  {
    _CreateError((uint64_t)"MIFetchInfoForUID", 155, (void *)*MEMORY[0x1E4F28798], 2, 0, 0, @"getpwuid_r succeeded but no user was found with uid %d", v13, a1);
    goto LABEL_4;
  }
  if (a2)
  {
    *a2 = [NSString stringWithUTF8String:v27.pw_name];
  }
  if (a3) {
    *a3 = v27.pw_gid;
  }
  if (a4)
  {
    uint64_t v18 = 1;
    [MEMORY[0x1E4F1CB10] fileURLWithFileSystemRepresentation:v27.pw_dir isDirectory:1 relativeToURL:0];
    uint64_t v17 = 0;
    *a4 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 1;
  }
LABEL_5:
  if (!a5) {
    goto LABEL_10;
  }
LABEL_8:
  if ((v18 & 1) == 0) {
    *a5 = v17;
  }
LABEL_10:

  return v18;
}

void MIGetCurrentMobileUserInfo(_DWORD *a1, _DWORD *a2)
{
  if (MIGetCurrentMobileUserInfo_onceToken != -1) {
    dispatch_once(&MIGetCurrentMobileUserInfo_onceToken, &__block_literal_global);
  }
  *a1 = MIGetCurrentMobileUserInfo_uid;
  *a2 = MIGetCurrentMobileUserInfo_gid;
}

id __MIGetCurrentMobileUserInfo_block_invoke()
{
  return MIFetchInfoForUsername("mobile", (uid_t *)&MIGetCurrentMobileUserInfo_uid, (gid_t *)&MIGetCurrentMobileUserInfo_gid, 0);
}

uint64_t MIAssumeIdentityOfUsername(const char *a1, void *a2)
{
  uint64_t v4 = 0;
  MIFetchInfoForUsername(a1, (uid_t *)&v4 + 1, (gid_t *)&v4, 0);
  return MIAssumeIdentity(HIDWORD(v4), v4, a2);
}

uint64_t MIAssumeIdentity(uint64_t a1, gid_t a2, void *a3)
{
  if (!(a2 | a1))
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      MIAssumeIdentity_cold_1();
    }
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
      MOLogWrite();
    }
  }
  id v19 = 0;
  id v20 = 0;
  int v6 = MIFetchInfoForUID(a1, &v20, 0, 0, &v19);
  id v7 = v20;
  id v8 = v19;
  if (v6)
  {
    if (pthread_setugid_np(a1, a2))
    {
      size_t v9 = __error();
      uint64_t v10 = (void *)*MEMORY[0x1E4F28798];
      uint64_t v18 = *v9;
      strerror(*v9);
      _CreateAndLogError((uint64_t)"MIAssumeIdentity", 228, v10, v18, 0, 0, @"pthread_setugid_np failed for uid %d gid %d; error %d (%s)",
        v11,
        a1);
    }
    else
    {
      if (!initgroups((const char *)[v7 UTF8String], a2))
      {
        uint64_t v16 = 1;
        goto LABEL_16;
      }
      uint64_t v12 = *__error();
      MIRestoreIdentity();
      uint64_t v13 = (void *)*MEMORY[0x1E4F28798];
      strerror(v12);
      _CreateAndLogError((uint64_t)"MIAssumeIdentity", 238, v13, v12, 0, 0, @"SYS_initgroups failed; error %d (%s)",
        v14,
        v12);
    uint64_t v15 = };

    id v8 = (id)v15;
  }
  if (a3)
  {
    id v8 = v8;
    uint64_t v16 = 0;
    *a3 = v8;
  }
  else
  {
    uint64_t v16 = 0;
  }
LABEL_16:

  return v16;
}

uint64_t MIRestoreIdentity()
{
  uid_t v0 = getuid();
  if (!(v0 | getgid()))
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      MIRestoreIdentity_cold_1();
    }
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
      MOLogWrite();
    }
  }
  uint64_t result = pthread_setugid_np(0xFFFFFF9B, 0xFFFFFF9B);
  if (result)
  {
    int v2 = *__error();
    os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR);
    strerror(v2);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return result;
}

uint64_t MIAssumeMobileIdentity(void *a1)
{
  if (MIGetCurrentMobileUserInfo_onceToken != -1) {
    dispatch_once(&MIGetCurrentMobileUserInfo_onceToken, &__block_literal_global);
  }
  uint64_t v2 = MIGetCurrentMobileUserInfo_uid;
  gid_t v3 = MIGetCurrentMobileUserInfo_gid;
  return MIAssumeIdentity(v2, v3, a1);
}

id MILoadInfoPlist(void *a1, void *a2)
{
  return MILoadInfoPlistWithError(a1, a2, 0);
}

id MILoadInfoPlistWithError(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v24 = 0;
  id v7 = (__CFBundle *)_CreateCFBundle(v5, 0, &v24);
  id v8 = v24;
  if (!v7)
  {
    uint64_t v13 = 0;
    if (!a3) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    uint64_t FilteredInfoPlist = _CFBundleCreateFilteredInfoPlist();
    if (FilteredInfoPlist)
    {
      uint64_t v11 = (const void *)FilteredInfoPlist;
      CFTypeID TypeID = CFDictionaryGetTypeID();
      if (TypeID == CFGetTypeID(v11))
      {
        uint64_t v13 = [MEMORY[0x1E4F1CA60] dictionaryWithDictionary:v11];
        CFRelease(v11);
      }
      else
      {
        CFTypeID v17 = CFGetTypeID(v11);
        CFStringRef v18 = CFCopyTypeIDDescription(v17);
        uint64_t v20 = _CreateAndLogError((uint64_t)"MILoadInfoPlistWithError", 363, @"MIInstallerErrorDomain", 3, 0, 0, @"Object returned from _CFBundleCreateFilteredInfoPlist was not a dictionary, was type %@", v19, (uint64_t)v18);

        if (v18) {
          CFRelease(v18);
        }
        CFRelease(v11);
        uint64_t v13 = 0;
        id v8 = (id)v20;
      }
      goto LABEL_17;
    }
    uint64_t v16 = _CreateAndLogError((uint64_t)"MILoadInfoPlistWithError", 357, @"MIInstallerErrorDomain", 3, 0, 0, @"Failed to get filtered Info.plist with keys %@ from bundle %@", v10, (uint64_t)v6);

LABEL_16:
    uint64_t v13 = 0;
    id v8 = (id)v16;
    goto LABEL_17;
  }
  CFDictionaryRef InfoDictionary = CFBundleGetInfoDictionary(v7);
  if (!InfoDictionary)
  {
    uint64_t v21 = [v5 path];
    uint64_t v16 = _CreateAndLogError((uint64_t)"MILoadInfoPlistWithError", 378, @"MIInstallerErrorDomain", 35, 0, 0, @"CFBundleGetInfoDictionary failed for bundle at %@", v22, (uint64_t)v21);

    goto LABEL_16;
  }
  uint64_t v15 = [MEMORY[0x1E4F1CA60] dictionaryWithDictionary:InfoDictionary];
  uint64_t v13 = v15;
  if (v15) {
    [v15 removeObjectForKey:@"CFBundleInfoPlistURL"];
  }
LABEL_17:
  CFRelease(v7);
  if (!a3) {
    goto LABEL_20;
  }
LABEL_18:
  if (!v13) {
    *a3 = v8;
  }
LABEL_20:

  return v13;
}

const void *_CreateCFBundle(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  uint64_t Unique = _CFBundleCreateUnique();
  if (!Unique)
  {
    uint64_t v12 = [v5 path];
    _CreateAndLogError((uint64_t)"_CreateCFBundle", 296, @"MIInstallerErrorDomain", 3, 0, 0, @"Failed to create CFBundle for %@", v13, (uint64_t)v12);
    id v11 = (id)objc_claimAutoreleasedReturnValue();

    id v8 = 0;
    if (!a3)
    {
LABEL_23:
      id v7 = 0;
      goto LABEL_24;
    }
LABEL_11:
    id v11 = v11;
    id v7 = 0;
    *a3 = v11;
    goto LABEL_24;
  }
  id v7 = (const void *)Unique;
  id v8 = (id)_CFBundleCopyInfoPlistURL();
  if (!v8)
  {
    if (gLogHandle && *(int *)(gLogHandle + 44) >= 7)
    {
      v26 = v7;
      MOLogWrite();
    }
    objc_msgSend(v5, "URLByAppendingPathComponent:isDirectory:", @"Info.plist", 0, v26);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
  }
  size_t v9 = +[MIFileManager defaultManager];
  id v28 = 0;
  char v10 = [v9 itemIsFileAtURL:v8 error:&v28];
  id v11 = v28;

  if ((v10 & 1) == 0)
  {
    uint64_t v14 = [v11 domain];
    uint64_t v15 = *MEMORY[0x1E4F28798];
    if ([v14 isEqualToString:*MEMORY[0x1E4F28798]])
    {
      uint64_t v16 = [v11 code];

      if (v16 == 2)
      {
        CFTypeID v17 = [v8 path];
        _CreateAndLogError((uint64_t)"_CreateCFBundle", 310, @"MIInstallerErrorDomain", 35, v11, 0, @"Info.plist missing at %@", v18, (uint64_t)v17);
        goto LABEL_22;
      }
    }
    else
    {
    }
    uint64_t v19 = [v11 domain];
    if ([v19 isEqualToString:v15])
    {
      uint64_t v20 = [v11 code];

      if (v20 == 22)
      {
        CFTypeID v17 = [v8 path];
        uint64_t v27 = (uint64_t)v17;
        uint64_t v22 = @"Expected Info.plist file at %@ but found something that was not a file.";
        uint64_t v23 = 312;
LABEL_21:
        _CreateAndLogError((uint64_t)"_CreateCFBundle", v23, @"MIInstallerErrorDomain", 3, v11, 0, v22, v21, v27);
        uint64_t v24 = LABEL_22:;

        CFRelease(v7);
        id v11 = (id)v24;
        if (!a3) {
          goto LABEL_23;
        }
        goto LABEL_11;
      }
    }
    else
    {
    }
    CFTypeID v17 = [v8 path];
    uint64_t v27 = (uint64_t)v17;
    uint64_t v22 = @"Error when introspecting %@";
    uint64_t v23 = 314;
    goto LABEL_21;
  }
  if (a2)
  {
    id v8 = v8;
    *a2 = v8;
  }
LABEL_24:

  return v7;
}

id MILoadRawInfoPlist(void *a1, void *a2)
{
  id v11 = 0;
  id v12 = 0;
  gid_t v3 = _CreateCFBundle(a1, &v12, &v11);
  id v4 = v12;
  id v5 = v11;
  if (v3)
  {
    id v10 = v5;
    id v6 = objc_msgSend(MEMORY[0x1E4F1C9E8], "MI_dictionaryWithContentsOfURL:options:error:", v4, 0, &v10);
    id v7 = v10;

    id v8 = (void *)[v6 mutableCopy];
    CFRelease(v3);
    id v5 = v7;
    if (!a2) {
      goto LABEL_7;
    }
  }
  else
  {
    id v8 = 0;
    if (!a2) {
      goto LABEL_7;
    }
  }
  if (!v8) {
    *a2 = v5;
  }
LABEL_7:

  return v8;
}

void MIRecordCurrentBuildVersion(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (void *)_CFCopySystemVersionDictionary();
  id v7 = 0;
  char v3 = objc_msgSend(v2, "MI_writeToURL:format:options:error:", v1, 200, 268435457, &v7);
  id v4 = v7;
  if (v3)
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5)
    {
      id v5 = [v2 objectForKeyedSubscript:*MEMORY[0x1E4F1CD10]];
      id v6 = [v2 objectForKeyedSubscript:@"ReleaseType"];
      MOLogWrite();

LABEL_8:
    }
  }
  else if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
  {
    id v5 = [v1 path];
    MOLogWrite();
    goto LABEL_8;
  }
}

uint64_t MIIsBuildUpgrade(uint64_t a1, void *a2)
{
  char v3 = [MEMORY[0x1E4F1C9E8] dictionaryWithContentsOfURL:a1];
  id v4 = v3;
  if (!v3)
  {
    if (gLogHandle && *(int *)(gLogHandle + 44) < 5) {
      goto LABEL_16;
    }
LABEL_15:
    MOLogWrite();
LABEL_16:
    id v12 = 0;
    uint64_t v13 = 0;
    size_t v9 = 0;
    id v11 = 0;
    id v7 = 0;
    goto LABEL_26;
  }
  uint64_t v5 = *MEMORY[0x1E4F1CD10];
  uint64_t v6 = [v3 objectForKeyedSubscript:*MEMORY[0x1E4F1CD10]];
  if (!v6)
  {
    if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  id v7 = (id)v6;
  id v8 = (void *)_CFCopySystemVersionDictionary();
  if (!v8)
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
      MOLogWrite();
    }
    id v12 = 0;
    uint64_t v13 = 0;
    size_t v9 = 0;
    goto LABEL_25;
  }
  size_t v9 = v8;
  uint64_t v10 = [v8 objectForKeyedSubscript:v5];
  if (!v10)
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
      MOLogWrite();
    }
    id v12 = 0;
    uint64_t v13 = 0;
LABEL_25:
    id v11 = 0;
    goto LABEL_26;
  }
  id v11 = (void *)v10;
  id v12 = [v4 objectForKeyedSubscript:@"ReleaseType"];
  uint64_t v13 = [v9 objectForKeyedSubscript:@"ReleaseType"];
  if ([v7 isEqual:v11])
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5) {
      MOLogWrite();
    }
    uint64_t v14 = 0;
    goto LABEL_29;
  }
  if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5) {
    MOLogWrite();
  }
LABEL_26:
  if (a2)
  {
    id v7 = v7;
    *a2 = v7;
  }
  uint64_t v14 = 1;
LABEL_29:

  return v14;
}

id MILoadFilteredPlist(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  CFTypeRef v25 = 0;
  CFTypeRef cf = 0;
  id v24 = 0;
  id v7 = [MEMORY[0x1E4F1C9B8] dataWithContentsOfURL:v5 options:3 error:&v24];
  id v8 = v24;
  if (!v7)
  {
    id v12 = [v5 path];
    _CreateAndLogError((uint64_t)"MILoadFilteredPlist", 502, @"MIInstallerErrorDomain", 4, v8, 0, @"Failed to read plist from %@", v15, (uint64_t)v12);
    id v16 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_21;
  }
  if (!v6)
  {
    id v23 = 0;
    uint64_t v10 = [MEMORY[0x1E4F28F98] propertyListWithData:v7 options:0 format:0 error:&v23];
    id v13 = v23;

    if (!v10)
    {
      id v12 = [v5 path];
      _CreateAndLogError((uint64_t)"MILoadFilteredPlist", 520, @"MIInstallerErrorDomain", 4, v13, 0, @"Failed to decode plist from %@", v20, (uint64_t)v12);
      id v16 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_20;
    }
    id v8 = v13;
    goto LABEL_12;
  }
  int Filtered = _CFPropertyListCreateFiltered();
  uint64_t v10 = (void *)v25;
  if (Filtered) {
    BOOL v11 = v25 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    CFTypeRef v25 = 0;
LABEL_12:
    objc_opt_class();
    id v12 = v10;
    if (objc_opt_isKindOfClass()) {
      id v17 = v12;
    }
    else {
      id v17 = 0;
    }

    if (v17)
    {
      id v16 = v8;
      goto LABEL_24;
    }
    uint64_t v18 = (objc_class *)objc_opt_class();
    NSStringFromClass(v18);
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    _CreateAndLogError((uint64_t)"MILoadFilteredPlist", 526, @"MIInstallerErrorDomain", 4, 0, 0, @"Object returned from _CFPropertyListCreateFiltered was not a dictionary, was type %@", v19, (uint64_t)v13);
    goto LABEL_18;
  }
  id v12 = (id)cf;
  CFTypeRef cf = 0;
  id v13 = [v5 path];
  _CreateAndLogError((uint64_t)"MILoadFilteredPlist", 511, @"MIInstallerErrorDomain", 4, v12, 0, @"Failed to decode plist from %@", v14, (uint64_t)v13);
LABEL_18:
  id v16 = (id)objc_claimAutoreleasedReturnValue();

LABEL_20:
  id v8 = v13;
LABEL_21:

  if (a3)
  {
    id v16 = v16;
    id v12 = 0;
    *a3 = v16;
  }
  else
  {
    id v12 = 0;
  }
LABEL_24:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v25)
  {
    CFRelease(v25);
    CFTypeRef v25 = 0;
  }
  id v21 = v12;

  return v21;
}

id MICopyCurrentBuildVersion()
{
  if (MICopyCurrentBuildVersion_onceToken != -1) {
    dispatch_once(&MICopyCurrentBuildVersion_onceToken, &__block_literal_global_105);
  }
  uid_t v0 = (void *)MICopyCurrentBuildVersion_buildVersion;
  return v0;
}

void __MICopyCurrentBuildVersion_block_invoke()
{
  uid_t v0 = (void *)_CFCopySystemVersionDictionaryValue();
  objc_opt_class();
  id v1 = v0;
  if (objc_opt_isKindOfClass()) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  char v3 = (void *)MICopyCurrentBuildVersion_buildVersion;
  MICopyCurrentBuildVersion_buildVersion = (uint64_t)v2;

  if (!MICopyCurrentBuildVersion_buildVersion && (!gLogHandle || *(int *)(gLogHandle + 44) >= 3))
  {
    MOLogWrite();
  }
}

void MIAssertHighResourceUsage()
{
  if (!atomic_fetch_add(sResourceExpectationCount, 1u))
  {
    uint64_t v0 = getpid();
    MEMORY[0x1F40CD848](v0);
  }
}

void MIClearResourceAssertion()
{
  if (atomic_fetch_add(sResourceExpectationCount, 0xFFFFFFFF) == 1)
  {
    uint64_t v0 = getpid();
    MEMORY[0x1F40CD8D8](v0);
  }
}

void _InitTraversalState(void *a1)
{
}

void *_DestroyTraversalState(uint64_t a1)
{
  for (i = *(void **)a1; *(void *)a1; i = *(void **)a1)
  {
    *(void *)a1 = *i;
    --*(unsigned char *)(a1 + 1051);
    _FreeContinuation(a1, (uint64_t)i);
  }
  while (1)
  {
    char v3 = *(void **)(a1 + 8);
    if (!v3) {
      break;
    }
    *(void *)(a1 + 8) = *v3;
    free(v3);
  }
  while (1)
  {
    uint64_t result = *(void **)(a1 + 16);
    if (!result) {
      break;
    }
    *(void *)(a1 + 16) = *result;
    free(result);
  }
  return result;
}

void *_PopContinuation(uint64_t a1)
{
  uint64_t result = *(void **)a1;
  if (result)
  {
    *(void *)a1 = *result;
    --*(unsigned char *)(a1 + 1051);
  }
  return result;
}

uint64_t _FreeContinuation(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a2 + 8);
  if (v4)
  {
    *id v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v4;
  }
  uint64_t result = *(unsigned int *)(a2 + 24);
  if ((result & 0x80000000) == 0)
  {
    uint64_t result = close(result);
    *(_DWORD *)(a2 + 24) = -1;
  }
  *(void *)a2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2;
  return result;
}

void *_CreateAndPushContinuation(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  if (v2)
  {
    *(void *)(a1 + 16) = *v2;
  }
  else
  {
    id v2 = malloc_type_malloc(0x20uLL, 0x103004057E7F81CuLL);
    if (!v2)
    {
      if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
        MOLogWrite();
      }
      return 0;
    }
  }
  AttrBuffer = _GetAttrBuffer(a1);
  v2[1] = AttrBuffer;
  if (!AttrBuffer)
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
      MOLogWrite();
    }
    free(v2);
    return 0;
  }
  v2[2] = 0;
  v2[3] = 0xFFFFFFFFLL;
  void *v2 = *(void *)a1;
  *(void *)a1 = v2;
  ++*(unsigned char *)(a1 + 1051);
  return v2;
}

void *_GetAttrBuffer(uint64_t a1)
{
  id v1 = *(void **)(a1 + 8);
  if (v1)
  {
    *(void *)(a1 + 8) = *v1;
    return v1;
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 1050);
  if (v3 >= 0x10)
  {
    id v4 = *(void **)a1;
    if (*(void *)a1 && v4[1])
    {
      while (1)
      {
        id v5 = v4;
        id v4 = (void *)*v4;
        if (!v4) {
          break;
        }
        if (!v4[1])
        {
          if (!v5) {
            goto LABEL_15;
          }
          break;
        }
      }
      id v1 = (void *)v5[1];
      v5[1] = 0;
      *((_DWORD *)v5 + 7) = 0;
      *((_DWORD *)v5 + 5) = 0;
      int v6 = *((_DWORD *)v5 + 6);
      if ((v6 & 0x80000000) == 0)
      {
        close(v6);
        *((_DWORD *)v5 + 6) = -1;
      }
    }
    else
    {
LABEL_15:
      if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
        MOLogWrite();
      }
      return 0;
    }
    return v1;
  }
  *(unsigned char *)(a1 + 1050) = v3 + 1;
  return malloc_type_malloc(0x4000uLL, 0x8D484474uLL);
}

uint64_t _PushContinuation(uint64_t result, void *a2)
{
  *a2 = *(void *)result;
  *(void *)uint64_t result = a2;
  ++*(unsigned char *)(result + 1051);
  return result;
}

BOOL _PushPathBuf(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v3 = *(unsigned __int16 *)(a1 + 1048);
  unint64_t v4 = a3 + v3 + 1;
  if (v4 <= 0x3FF)
  {
    uint64_t v6 = a1 + 24;
    *(unsigned char *)(a1 + 24 + v3) = 47;
    memcpy((void *)(*(unsigned __int16 *)(a1 + 1048) + a1 + 24 + 1), a2, a3);
    *(_WORD *)(a1 + 1048) = v4;
    *(unsigned char *)(v6 + v4) = 0;
  }
  return v4 < 0x400;
}

uint64_t _PopPathBuf(uint64_t result)
{
  uint64_t v1 = *(unsigned __int16 *)(result + 1048);
  if (*(_WORD *)(result + 1048))
  {
    do
    {
      BOOL v2 = *(unsigned char *)(result + 23 + v1) == 47 || v1 == 1;
      --v1;
    }
    while (!v2);
  }
  *(unsigned char *)(result + 24 + (unsigned __int16)v1) = 0;
  *(_WORD *)(result + 1048) = v1;
  return result;
}

uint64_t _LastPathElement(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = a1 + a2;
  while (1)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4 + v3;
    int v7 = *(unsigned __int8 *)(v6 - 1);
    if (v6 - 1 <= a1) {
      break;
    }
    uint64_t v3 = v5 - 1;
    if (v7 == 47) {
      goto LABEL_6;
    }
  }
  if (v7 == 47)
  {
LABEL_6:
    *a3 = -v5;
    return v4 + v5;
  }
  return 0;
}

uint64_t TraverseDirectory(uint64_t a1, char a2, unsigned int a3, void *a4, void *a5)
{
  return TraverseDirectoryWithPostTraversal(a1, a2, a3, a4, a5, 0);
}

uint64_t TraverseDirectoryWithPostTraversal(uint64_t a1, char a2, unsigned int a3, void *a4, void *a5, void *a6)
{
  uint64_t v128 = *MEMORY[0x1E4F143B8];
  id v11 = a5;
  id v12 = a6;
  uint64_t v105 = 0;
  uint64_t v106 = 0;
  uint64_t v104 = 5;
  if (a3) {
    int v13 = -1610579959;
  }
  else {
    int v13 = -1610612727;
  }
  LODWORD(v106) = (a3 >> 6) & 4 | (a3 >> 7) & 1;
  HIDWORD(v104) = v13 & 0xBDB8FFFF | (((a3 >> 1) & 7) << 16) & 0xBDBFFFFF | (((a3 >> 5) & 1) << 22) & 0xBDFFFFFF | (((a3 >> 4) & 1) << 30) | (((a3 >> 6) & 1) << 25);
  HIDWORD(v105) = 6;
  bzero(&v122, 0x420uLL);
  if (!a1)
  {
    _CreateAndLogError((uint64_t)"TraverseDirectoryWithPostTraversal", 891, @"MIInstallerErrorDomain", 25, 0, 0, @"%s was called with a NULL path parameter.", v14, (uint64_t)"_Bool TraverseDirectoryWithPostTraversal(const char *, TraverseDirectoryOptions, TraverseDirectoryAdditionalFetchProperties, NSError *__autoreleasing *, __strong TraverseDirectoryItemBlock, __strong TraverseDirectoryPostTraversalBlock)");
    goto LABEL_15;
  }
  unint64_t v15 = __strlcpy_chk();
  if (v15 >= 0x400)
  {
    _CreateAndLogError((uint64_t)"TraverseDirectoryWithPostTraversal", 898, @"MIInstallerErrorDomain", 4, 0, 0, @"Attempted to iterate directories starting at a path that was too long: %s", v16, a1);
LABEL_15:
    id v29 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_16;
  }
  unsigned __int16 v126 = v15;
  id v17 = _CreateAndPushContinuation((uint64_t)&v122);
  if (!v17)
  {
    _CreateAndLogError((uint64_t)"TraverseDirectoryWithPostTraversal", 906, (void *)*MEMORY[0x1E4F28798], 12, 0, 0, @"Failed to create a continuation", v18, v97);
    goto LABEL_15;
  }
  if ((a2 & 1) == 0)
  {
    uint64_t v19 = (uint64_t)v17;
    char v20 = a2;
    id v21 = v11;
    long long v114 = 0u;
    long long v115 = 0u;
    long long v112 = 0u;
    long long v113 = 0u;
    long long v110 = 0u;
    *(_OWORD *)__errnum = 0u;
    uint64_t v121 = 0;
    long long v119 = 0u;
    long long v120 = 0u;
    long long v117 = 0u;
    long long v118 = 0u;
    long long v116 = 0u;
    id v108 = 0;
    v109 = 0;
    char v107 = 0;
    int ContinuationFD = _GetContinuationFD((uint64_t)&v122, v19, 0, &v108);
    id v23 = v108;
    if (ContinuationFD == -1)
    {
      a2 = v20;
    }
    else
    {
      if (!fgetattrlist(ContinuationFD, &v104, *(void **)(v19 + 8), 0x4000uLL, 0))
      {
        _ParseAttributeBuf((uint64_t)v125, *(void *)(v19 + 8), (uint64_t)&v110, &v109, 0, &v107);
        a2 = v20;
        if (DWORD1(v112) != 2)
        {
          int v69 = *(_DWORD *)(v19 + 24);
          if ((v69 & 0x80000000) == 0)
          {
            close(v69);
            *(_DWORD *)(v19 + 24) = -1;
          }
        }
        uint64_t v70 = 0;
        while (1)
        {
          uint64_t v71 = v70;
          v72 = (char *)&v122 + v126 + v70;
          int v73 = v72[23];
          if (v72 + 23 <= v125) {
            break;
          }
          uint64_t v70 = v71 - 1;
          if (v73 == 47) {
            goto LABEL_102;
          }
        }
        if (v73 != 47)
        {
          uint64_t v28 = _CreateAndLogError((uint64_t)"_CallBlockForBaseItem", 839, @"MIInstallerErrorDomain", 4, 0, 0, @"Failed to locate last path element in %s", v68, (uint64_t)v125);
          goto LABEL_13;
        }
LABEL_102:
        BOOL v74 = _CallClientBlock(v20, (uint64_t)v125, v126, (uint64_t)&v125[v126 + v71], -v71, 0, (uint64_t)&v110, (uint64_t)&v116, (uint64_t)v109, v21)- 1 < 2;
        int v75 = DWORD1(v112) != 2 || v74;
        if (v107) {
          int v65 = 1;
        }
        else {
          int v65 = v75;
        }
        id v64 = 0;
        int v66 = 1;
        goto LABEL_89;
      }
      int v24 = *__error();
      CFTypeRef v25 = (void *)*MEMORY[0x1E4F28798];
      uint64_t v26 = v24;
      strerror(v24);
      uint64_t v28 = _CreateAndLogError((uint64_t)"_CallBlockForBaseItem", 823, v25, v26, 0, 0, @"fgetattrlist for %s failed: %s", v27, (uint64_t)v125);
      a2 = v20;
LABEL_13:

      id v23 = (id)v28;
    }
    id v64 = v23;
    int v65 = 0;
    int v66 = 0;
    id v23 = v64;
LABEL_89:

    id v29 = v64;
    if (!v66) {
      goto LABEL_16;
    }
    if (v65) {
      goto LABEL_91;
    }
    goto LABEL_21;
  }
  id v29 = 0;
LABEL_21:
  v32 = v122;
  if (!v122) {
    goto LABEL_91;
  }
  v98 = (uint64_t (**)(char *, unsigned char *))(v12 + 16);
  v99 = a4;
  char v100 = a2;
  while (1)
  {
    v122 = (int32x2_t *)*v32;
    --v127;
    if (!*(void *)&v32[1])
    {
      AttrBuffer = _GetAttrBuffer((uint64_t)&v122);
      v32[1] = (int32x2_t)AttrBuffer;
      if (!AttrBuffer) {
        break;
      }
    }
    while (1)
    {
      id v103 = v11;
      v102 = v12;
      uint64_t v121 = 0;
      long long v119 = 0u;
      long long v120 = 0u;
      long long v117 = 0u;
      long long v118 = 0u;
      long long v115 = 0u;
      long long v116 = 0u;
      long long v113 = 0u;
      long long v114 = 0u;
      *(_OWORD *)__errnum = 0u;
      long long v112 = 0u;
      long long v110 = 0u;
      unsigned int v36 = v32[3].u16[2];
      if (!v32[3].i16[2]) {
        goto LABEL_62;
      }
      unsigned __int32 v37 = v32[2].u32[0];
      unsigned __int32 v38 = v32[2].u32[1];
      unsigned int v39 = v37 - v38;
      if (v37 < v38)
      {
        _CreateAndLogError((uint64_t)"_ProcessContinuation", 650, @"MIInstallerErrorDomain", 4, 0, 0, @"Internal error: totalProcessedEntryCount (%u) was less than reprocessCount (%u)", v35, v32[2].u32[0]);
        v67 = LABEL_93:;
LABEL_117:
        id v82 = v67;

LABEL_118:
        id v83 = v82;

        v84 = (void *)v32[1];
        if (v84)
        {
          void *v84 = v123;
          v123 = v84;
        }
        int v85 = v32[3].i32[0];
        if ((v85 & 0x80000000) == 0)
        {
          close(v85);
          v32[3].i32[0] = -1;
        }
        int32x2_t *v32 = (int32x2_t)v124;
        v124 = v32;
        id v29 = v83;
        goto LABEL_123;
      }
      if (v37 == v38)
      {
        uint64_t v40 = v32[3].u16[3];
      }
      else
      {
        if (v39 >= v36)
        {
          v32[2].i32[1] = v38 + v36;
          v32[3].i16[3] = v36;
          goto LABEL_62;
        }
        uint64_t v40 = (unsigned __int16)(v37 - v38);
        v32[3].i16[3] = v39;
        v32[2].i32[1] = v37;
      }
      int32x2_t v41 = v32[1];
      if (v40)
      {
        int v42 = 0;
        unint64_t v43 = 0;
        while (1)
        {
          uint64_t v44 = *(unsigned int *)(*(void *)&v41 + v43);
          v43 += v44;
          if (v43 > 0x4000) {
            break;
          }
          if (++v42 >= v40) {
            goto LABEL_37;
          }
        }
        _CreateAndLogError((uint64_t)"_ProcessContinuation", 685, @"MIInstallerErrorDomain", 4, 0, 0, @"Read entry length %u for entry %hu but that put us off the end of the buffer", v35, v44);
        goto LABEL_93;
      }
      unint64_t v43 = 0;
LABEL_37:
      id v101 = v11;
      if (v40 < v36)
      {
        while (1)
        {
          id v108 = 0;
          v109 = 0;
          char v107 = 0;
          _ParseAttributeBuf((uint64_t)v125, *(void *)&v41 + v43, (uint64_t)&v110, &v108, &v109, &v107);
          uint64_t v46 = (uint64_t)v109;
          if (!v109) {
            break;
          }
          v43 += v110;
          if (v43 > 0x4000)
          {
            v76 = @"MIInstallerErrorDomain";
            uint64_t v97 = v110;
            v77 = @"Read entry length %u for entry %hu but that put us off the end of the buffer";
            uint64_t v78 = 709;
            goto LABEL_112;
          }
          uint64_t v47 = __errnum[2];
          if (__errnum[2])
          {
            v80 = (void *)*MEMORY[0x1E4F28798];
            strerror(__errnum[2]);
            _CreateAndLogError((uint64_t)"_ProcessContinuation", 716, v80, v47, 0, 0, @"got error while processing entry %hu in %s : %s", v81, v40);
            goto LABEL_116;
          }
          size_t v48 = (v112 - 1);
          if (!_PushPathBuf((uint64_t)&v122, v109, v48))
          {
            v76 = (__CFString *)*MEMORY[0x1E4F28798];
            uint64_t v97 = v46;
            v77 = @"Could not append element \"%s\" of length %zd to path \"%s\" because it would make the path longer than MAXPATHLEN";
            uint64_t v78 = 723;
            uint64_t v79 = 63;
            goto LABEL_115;
          }
          int v49 = _CallClientBlock(v100, (uint64_t)v125, v126, v46, v48, v127 + 1, (uint64_t)&v110, (uint64_t)&v116, (uint64_t)v108, v103);
          if (v49 == 2)
          {
            char v107 = 1;
          }
          else if (v49 == 1)
          {
            goto LABEL_127;
          }
          ++v32[3].i16[3];
          v32[2] = vadd_s32(v32[2], (int32x2_t)0x100000001);
          if (DWORD1(v112) == 2)
          {
            if (!v107)
            {
              int32x2_t *v32 = (int32x2_t)v122;
              v122 = v32;
              ++v127;
              if (_CreateAndPushContinuation((uint64_t)&v122))
              {

                id v11 = v101;
                goto LABEL_85;
              }
              v76 = (__CFString *)*MEMORY[0x1E4F28798];
              v77 = @"Failed to create a continuation";
              uint64_t v78 = 753;
              uint64_t v79 = 12;
LABEL_115:
              _CreateAndLogError((uint64_t)"_ProcessContinuation", v78, v76, v79, 0, 0, v77, v45, v97);
              v67 = LABEL_116:;
              id v11 = v101;
              goto LABEL_117;
            }
            if (v12)
            {
              v50 = (void *)MEMORY[0x1C1878860]();
              int v51 = (*v98)(v102, v125);
              if (!v51)
              {
LABEL_127:

                v92 = (void *)v32[1];
                id v11 = v101;
                if (v92)
                {
                  void *v92 = v123;
                  v123 = v92;
                }
                int v93 = v32[3].i32[0];
                if ((v93 & 0x80000000) == 0)
                {
                  close(v93);
                  v32[3].i32[0] = -1;
                }
                int32x2_t *v32 = (int32x2_t)v124;
                v124 = v32;
                goto LABEL_91;
              }
            }
          }
          uint64_t v52 = v126;
          if (v126)
          {
            id v11 = v101;
            do
            {
              unsigned __int16 v53 = v52 - 1;
              BOOL v54 = v125[v52 - 1] == 47 || v52 == 1;
              --v52;
            }
            while (!v54);
            uint64_t v52 = v53;
          }
          else
          {
            id v11 = v101;
          }
          uint64_t v40 = (v40 + 1);
          v125[v52] = 0;
          unsigned __int16 v126 = v52;
          if (v40 >= v32[3].u16[2]) {
            goto LABEL_62;
          }
        }
        v76 = @"MIInstallerErrorDomain";
        uint64_t v97 = v40;
        v77 = @"Entry %hu in %s did not include name information even though we requested it.";
        uint64_t v78 = 702;
LABEL_112:
        uint64_t v79 = 4;
        goto LABEL_115;
      }
LABEL_62:

      *(void *)&long long v110 = 0;
      int v55 = _GetContinuationFD((uint64_t)&v122, (uint64_t)v32, 1, &v110);
      id v56 = (id)v110;
      if (v55 == -1) {
        goto LABEL_125;
      }
      int v57 = getattrlistbulk(v55, &v104, *(void **)&v32[1], 0x4000uLL, 0);
      if (!v57) {
        break;
      }
      if (v57 == -1)
      {
        int v86 = *__error();
        v87 = (void *)*MEMORY[0x1E4F28798];
        uint64_t v88 = v86;
        uint64_t v89 = v32[2].u32[0];
        strerror(v86);
        uint64_t v91 = _CreateAndLogError((uint64_t)"_PopulateAttrBuf", 410, v87, v88, 0, 0, @"getattrlistbulk failed on entry %u in %s : %s", v90, v89);

        id v56 = (id)v91;
LABEL_125:
        id v82 = v56;

        goto LABEL_118;
      }
      v32[3].i16[2] = v57;
      v32[3].i16[3] = 0;
    }
    if (!v12 || (v100 & 1) != 0 && !v122) {
      goto LABEL_71;
    }
    v58 = (void *)MEMORY[0x1C1878860]();
    if (!(*v98)(v102, v125))
    {
      v95 = (void *)v32[1];
      if (v95)
      {
        void *v95 = v123;
        v123 = v95;
      }
      int v96 = v32[3].i32[0];
      if ((v96 & 0x80000000) == 0)
      {
        close(v96);
        v32[3].i32[0] = -1;
      }
      int32x2_t *v32 = (int32x2_t)v124;
      v124 = v32;
      goto LABEL_91;
    }
LABEL_71:
    uint64_t v59 = v126;
    if (v126)
    {
      do
      {
        unsigned __int16 v60 = v59 - 1;
        BOOL v61 = v125[v59 - 1] == 47 || v59 == 1;
        --v59;
      }
      while (!v61);
      uint64_t v59 = v60;
    }
    v125[v59] = 0;
    unsigned __int16 v126 = v59;
    v62 = (void *)v32[1];
    if (v62)
    {
      void *v62 = v123;
      v123 = v62;
    }
    int v63 = v32[3].i32[0];
    if ((v63 & 0x80000000) == 0)
    {
      close(v63);
      v32[3].i32[0] = -1;
    }
    int32x2_t *v32 = (int32x2_t)v124;
    v124 = v32;
LABEL_85:
    v32 = v122;
    if (!v122)
    {
LABEL_91:
      _DestroyTraversalState((uint64_t)&v122);
      uint64_t v30 = 1;
      goto LABEL_19;
    }
  }
  uint64_t v94 = _CreateAndLogError((uint64_t)"TraverseDirectoryWithPostTraversal", 931, (void *)*MEMORY[0x1E4F28798], 12, 0, 0, @"Failed to locate an attrBuf", v34, v97);

  id v29 = (id)v94;
LABEL_123:
  a4 = v99;
LABEL_16:
  _DestroyTraversalState((uint64_t)&v122);
  if (a4)
  {
    id v29 = v29;
    uint64_t v30 = 0;
    *a4 = v29;
  }
  else
  {
    uint64_t v30 = 0;
  }
LABEL_19:

  return v30;
}

uint64_t _GetContinuationFD(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v4 = *(unsigned int *)(a2 + 24);
  if (v4 == -1)
  {
    if (a3) {
      int v8 = 1048832;
    }
    else {
      int v8 = 0x200000;
    }
    uint64_t v9 = a1 + 24;
    uint64_t v10 = open((const char *)(a1 + 24), v8);
    if ((v10 & 0x80000000) == 0)
    {
      uint64_t v4 = v10;
      id v5 = 0;
      *(_DWORD *)(a2 + 24) = v4;
      goto LABEL_14;
    }
    id v11 = __error();
    uint64_t v12 = *v11;
    int v13 = (void *)*MEMORY[0x1E4F28798];
    if (v12 == 2)
    {
      strerror(2);
      _CreateError((uint64_t)"_GetContinuationFD", 301, v13, 2, 0, 0, @"Failed to open %s : %s", v14, v9);
      id v5 = (id)objc_claimAutoreleasedReturnValue();
      if (!a4) {
        goto LABEL_13;
      }
    }
    else
    {
      strerror(*v11);
      _CreateAndLogError((uint64_t)"_GetContinuationFD", 303, v13, v12, 0, 0, @"Failed to open %s : %s", v15, v9);
      id v5 = (id)objc_claimAutoreleasedReturnValue();
      if (!a4)
      {
LABEL_13:
        uint64_t v4 = 0xFFFFFFFFLL;
        goto LABEL_14;
      }
    }
    id v5 = v5;
    *a4 = v5;
    goto LABEL_13;
  }
  id v5 = 0;
LABEL_14:

  return v4;
}

uint64_t _ParseAttributeBuf(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, unsigned char *a6)
{
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)a3 = *(_DWORD *)a2;
  int v9 = *(_DWORD *)(a2 + 20);
  *(_OWORD *)(a3 + 4) = *(_OWORD *)(a2 + 4);
  *(_DWORD *)(a3 + 20) = v9;
  int v10 = *(_DWORD *)(a3 + 4);
  if ((v10 & 0x20000000) == 0)
  {
    id v11 = (uint64_t *)(a2 + 24);
    if (v10) {
      goto LABEL_3;
    }
LABEL_6:
    int v13 = 0;
    if ((v10 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  *(_DWORD *)(a3 + 24) = *(_DWORD *)(a2 + 24);
  id v11 = (uint64_t *)(a2 + 28);
  if ((v10 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v12 = *v11;
  *(void *)(a3 + 28) = *v11;
  int v13 = (char *)v11++ + (int)v12;
  if ((v10 & 8) != 0)
  {
LABEL_7:
    int v14 = *(_DWORD *)v11;
    id v11 = (uint64_t *)((char *)v11 + 4);
    *(_DWORD *)(a3 + 36) = v14;
  }
LABEL_8:
  if ((v10 & 0x8000) != 0)
  {
    int v16 = *(_DWORD *)v11;
    id v11 = (uint64_t *)((char *)v11 + 4);
    *(_DWORD *)(a3 + 40) = v16;
    if ((v10 & 0x10000) == 0)
    {
LABEL_10:
      if ((v10 & 0x20000) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v10 & 0x10000) == 0)
  {
    goto LABEL_10;
  }
  int v17 = *(_DWORD *)v11;
  id v11 = (uint64_t *)((char *)v11 + 4);
  *(_DWORD *)(a3 + 44) = v17;
  if ((v10 & 0x20000) == 0)
  {
LABEL_11:
    if ((v10 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v18 = *(_DWORD *)v11;
  id v11 = (uint64_t *)((char *)v11 + 4);
  *(_DWORD *)(a3 + 48) = v18;
  if ((v10 & 0x40000) == 0)
  {
LABEL_12:
    if ((v10 & 0x400000) == 0) {
      goto LABEL_13;
    }
LABEL_19:
    uint64_t v20 = *v11;
    *(void *)(a3 + 56) = *v11;
    uint64_t v15 = (char *)v11++ + (int)v20;
    if ((v10 & 0x2000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_18:
  int v19 = *(_DWORD *)v11;
  id v11 = (uint64_t *)((char *)v11 + 4);
  *(_DWORD *)(a3 + 52) = v19;
  if ((v10 & 0x400000) != 0) {
    goto LABEL_19;
  }
LABEL_13:
  uint64_t v15 = 0;
  if ((v10 & 0x2000000) != 0)
  {
LABEL_20:
    uint64_t v21 = *v11++;
    *(void *)(a3 + 64) = v21;
  }
LABEL_21:
  if ((v10 & 0x40000000) != 0)
  {
    int v22 = *(_DWORD *)v11;
    id v11 = (uint64_t *)((char *)v11 + 4);
    *(_DWORD *)(a3 + 72) = v22;
  }
  if (*(_DWORD *)(a3 + 36) == 2)
  {
    int v23 = *(_DWORD *)(a3 + 12);
    if ((v23 & 2) != 0)
    {
      int v24 = *(_DWORD *)v11;
      id v11 = (uint64_t *)((char *)v11 + 4);
      *(_DWORD *)(a3 + 80) = v24;
      if (!v24) {
        *a6 = 1;
      }
    }
    if ((v23 & 4) != 0)
    {
      int v25 = *(_DWORD *)v11;
      *(_DWORD *)(a3 + 84) = v25;
      if ((v25 & 3) != 0)
      {
        if (gLogHandle && *(int *)(gLogHandle + 44) >= 7) {
          uint64_t result = MOLogWrite();
        }
        *a6 = 1;
      }
    }
  }
  else
  {
    int v27 = *(_DWORD *)(a3 + 16);
    if (v27)
    {
      int v28 = *(_DWORD *)v11;
      id v11 = (uint64_t *)((char *)v11 + 4);
      *(_DWORD *)(a3 + 80) = v28;
    }
    if ((v27 & 4) != 0) {
      *(void *)(a3 + 88) = *v11;
    }
  }
  if (a5) {
    *a5 = v13;
  }
  if (a4) {
    *a4 = v15;
  }
  return result;
}

uint64_t _CallClientBlock(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  int v18 = a10;
  int v19 = *(_DWORD *)(a7 + 36);
  if ((a1 & 2) != 0 && v19 == 2)
  {
    uint64_t v20 = 0;
  }
  else
  {
    BOOL v21 = a9;
    *(void *)a8 = *(void *)(a7 + 64);
    *(void *)(a8 + 8) = *(void *)(a7 + 88);
    *(void *)(a8 + 16) = a2;
    *(void *)(a8 + 24) = a3;
    *(void *)(a8 + 32) = a4;
    uint64_t v22 = *(unsigned int *)(a7 + 52);
    *(void *)(a8 + 40) = a5;
    *(void *)(a8 + 48) = v22;
    *(_DWORD *)(a8 + 56) = v19;
    int v23 = *(_DWORD *)(a7 + 72);
    *(_DWORD *)(a8 + 60) = *(_DWORD *)(a7 + 80);
    *(_DWORD *)(a8 + 64) = v23;
    *(void *)(a8 + 68) = *(void *)(a7 + 40);
    *(_DWORD *)(a8 + 76) = *(_DWORD *)(a7 + 80);
    __int16 v24 = *(_WORD *)(a7 + 48) & 0xFFF;
    *(_WORD *)(a8 + 80) = v24;
    unsigned int v25 = v19 - 1;
    if (v25 <= 6) {
      *(_WORD *)(a8 + 80) = word_1BCB0A3E8[v25] | v24;
    }
    if (a9) {
      BOOL v21 = *(_DWORD *)(a9 + 36) != -1;
    }
    *(unsigned char *)(a8 + 82) = v21;
    *(unsigned char *)(a8 + 83) = a6;
    uint64_t v26 = (void *)MEMORY[0x1C1878860]();
    char v28 = 1;
    if (v18[2](v18, a8, &v28)) {
      uint64_t v20 = 2 * (v28 == 0);
    }
    else {
      uint64_t v20 = 1;
    }
  }

  return v20;
}

void sub_1BCA69A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

uint64_t MIUpdateSinfWithData(void *a1, void *a2, void *a3, unsigned int a4, unsigned int a5, void *a6)
{
  id v11 = a1;
  uint64_t v15 = 0;
  uint64_t v12 = _sinfURLsForBundle(a2, a3, &v15);
  if (v12) {
    uint64_t v13 = _writeSinfData(v11, v12, a4, a5, a6);
  }
  else {
    uint64_t v13 = 0;
  }

  return v13;
}

id _sinfURLsForBundle(void *a1, void *a2, void *a3)
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  unint64_t v43 = [MEMORY[0x1E4F1CA80] setWithCapacity:1];
  int v7 = [v5 URLByAppendingPathComponent:@"SC_Info/Manifest.plist" isDirectory:0];
  id v48 = 0;
  int v8 = objc_msgSend(MEMORY[0x1E4F1C9E8], "MI_dictionaryWithContentsOfURL:options:error:", v7, 0, &v48);
  id v9 = v48;
  int v10 = v9;
  if (!v8)
  {
    uint64_t v15 = [v9 domain];
    if ([v15 isEqualToString:*MEMORY[0x1E4F281F8]])
    {
      uint64_t v16 = [v10 code];

      if (v16 == 260) {
        goto LABEL_20;
      }
    }
    else
    {
    }
    if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
      goto LABEL_20;
    }
    int v17 = [v7 path];
    unsigned int v36 = v17;
    unsigned __int32 v37 = v10;
LABEL_19:
    MOLogWrite();

LABEL_20:
    id v13 = 0;
    int v42 = 0;
    goto LABEL_28;
  }
  uint64_t v11 = [v8 objectForKeyedSubscript:@"SinfReplicationPaths"];
  if (!v11)
  {
    if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
      goto LABEL_20;
    }
    int v17 = [v7 path];
    unsigned int v36 = v17;
    goto LABEL_19;
  }
  uint64_t v12 = (void *)v11;
  objc_opt_class();
  id v13 = v12;
  if (objc_opt_isKindOfClass()) {
    id v14 = v13;
  }
  else {
    id v14 = 0;
  }

  if (v14)
  {
    objc_opt_class();
    if (MIArrayContainsOnlyClass(v13))
    {
      id v13 = v13;
      int v42 = v13;
      goto LABEL_28;
    }
    if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
      goto LABEL_27;
    }
  }
  else if (gLogHandle && *(int *)(gLogHandle + 44) < 3)
  {
    goto LABEL_27;
  }
  unsigned int v36 = [v7 path];
  MOLogWrite();

LABEL_27:
  int v42 = 0;
LABEL_28:

  int v18 = _rootSinfURLForBundle(v5, v6);
  int v19 = +[MIFileManager defaultManager];
  uint64_t v20 = [v19 realPathForURL:v18 ifChildOfURL:v5];

  if (!v20)
  {
    uint64_t v34 = _CreateAndLogError((uint64_t)"_sinfURLsForBundle", 76, @"MIInstallerErrorDomain", 61, 0, &unk_1F170E800, @"Root sinf URL points outside of bundle", v21, (uint64_t)v36);
    uint64_t v22 = v42;
    if (a3) {
      goto LABEL_50;
    }
    goto LABEL_52;
  }
  [v43 addObject:v18];
  uint64_t v22 = v42;
  if (!v42) {
    goto LABEL_41;
  }
  uint64_t v40 = v18;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id obj = v42;
  uint64_t v23 = [obj countByEnumeratingWithState:&v44 objects:v49 count:16];
  if (!v23)
  {
LABEL_40:

    uint64_t v22 = v42;
    int v18 = v40;
LABEL_41:
    uint64_t v20 = objc_msgSend(v43, "copy", v36);
    uint64_t v34 = 0;
    if (a3) {
      goto LABEL_50;
    }
    goto LABEL_52;
  }
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)v45;
  unsigned __int32 v38 = a3;
  id v39 = v6;
LABEL_32:
  uint64_t v26 = 0;
  while (1)
  {
    if (*(void *)v45 != v25) {
      objc_enumerationMutation(obj);
    }
    int v27 = *(void **)(*((void *)&v44 + 1) + 8 * v26);
    if (objc_msgSend(v27, "containsDotDotPathComponents", v36, v37))
    {
      _CreateAndLogError((uint64_t)"_sinfURLsForBundle", 84, @"MIInstallerErrorDomain", 61, 0, &unk_1F170E828, @"sinf subpath %@ contains illegal '..' segment", v28, (uint64_t)v27);
      uint64_t v34 = LABEL_47:;
      goto LABEL_49;
    }
    if ([v27 hasPrefix:@"/"])
    {
      _CreateAndLogError((uint64_t)"_sinfURLsForBundle", 89, @"MIInstallerErrorDomain", 61, 0, &unk_1F170E850, @"sinf subpath %@ is absolute", v29, (uint64_t)v27);
      goto LABEL_47;
    }
    uint64_t v30 = [v5 URLByAppendingPathComponent:v27 isDirectory:0];
    v31 = +[MIFileManager defaultManager];
    v32 = [v31 realPathForURL:v30 ifChildOfURL:v5];

    if (!v32) {
      break;
    }
    [v43 addObject:v32];

    if (v24 == ++v26)
    {
      uint64_t v24 = [obj countByEnumeratingWithState:&v44 objects:v49 count:16];
      a3 = v38;
      id v6 = v39;
      if (v24) {
        goto LABEL_32;
      }
      goto LABEL_40;
    }
  }
  uint64_t v34 = _CreateAndLogError((uint64_t)"_sinfURLsForBundle", 98, @"MIInstallerErrorDomain", 61, 0, &unk_1F170E878, @"sinf subpath %@ points outside of bundle", v33, (uint64_t)v27);

LABEL_49:
  uint64_t v20 = 0;
  a3 = v38;
  id v6 = v39;
  uint64_t v22 = v42;
  int v18 = v40;
  if (!v38) {
    goto LABEL_52;
  }
LABEL_50:
  if (!v20) {
    *a3 = v34;
  }
LABEL_52:

  return v20;
}

uint64_t _writeSinfData(void *a1, void *a2, unsigned int a3, unsigned int a4, void *a5)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v34 = a1;
  id v7 = a2;
  if (gLogHandle && *(int *)(gLogHandle + 44) >= 7)
  {
    uint64_t v28 = (void *)[v34 length];
    id v29 = v7;
    MOLogWrite();
  }
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v8 = v7;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v38 objects:v42 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v30 = a5;
    id v11 = 0;
    uint64_t v12 = *(void *)v39;
    id obj = v8;
    while (2)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v39 != v12) {
          objc_enumerationMutation(obj);
        }
        id v14 = *(void **)(*((void *)&v38 + 1) + 8 * i);
        uint64_t v15 = +[MIFileManager defaultManager];
        uint64_t v16 = [v14 URLByDeletingLastPathComponent];
        id v37 = v11;
        char v17 = [v15 createDirectoryAtURL:v16 withIntermediateDirectories:1 mode:493 error:&v37];
        id v18 = v37;

        if (v17)
        {
          id v36 = v18;
          char v19 = [v34 writeToURL:v14 options:1 error:&v36];
          id v20 = v36;

          if ((v19 & 1) == 0)
          {
            uint64_t v25 = [v14 path];
            _CreateAndLogError((uint64_t)"_writeSinfData", 130, @"MIInstallerErrorDomain", 24, v20, &unk_1F170E8A0, @"Failed to write sinf to %@ : %@", v26, (uint64_t)v25);
            id v11 = (id)objc_claimAutoreleasedReturnValue();

LABEL_23:
            id v8 = obj;

            if (v30)
            {
              id v11 = v11;
              uint64_t v24 = 0;
              *uint64_t v30 = v11;
            }
            else
            {
              uint64_t v24 = 0;
            }
            goto LABEL_26;
          }
          uint64_t v21 = +[MIFileManager defaultManager];
          id v35 = v20;
          int v22 = [v21 setOwnerOfURL:v14 toUID:a3 gid:a4 error:&v35];
          id v11 = v35;

          if (!v22) {
            goto LABEL_23;
          }
        }
        else
        {
          if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
          {
            uint64_t v23 = [v14 URLByDeletingLastPathComponent];
            uint64_t v28 = [v23 path];
            id v29 = v18;
            MOLogWrite();
          }
          id v11 = v18;
        }
      }
      id v8 = obj;
      uint64_t v10 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
      if (v10) {
        continue;
      }
      break;
    }
  }
  else
  {
    id v11 = 0;
  }

  uint64_t v24 = 1;
LABEL_26:

  return v24;
}

uint64_t MIReplicateRootSinf(void *a1, void *a2, unsigned int a3, unsigned int a4, void *a5)
{
  id v9 = a2;
  id v10 = a1;
  id v11 = _rootSinfURLForBundle(v10, v9);
  id v26 = 0;
  uint64_t v12 = _sinfURLsForBundle(v10, v9, &v26);

  id v13 = v26;
  id v14 = (void *)[v12 mutableCopy];

  if (v14)
  {
    [v14 removeObject:v11];
    if (![v14 count])
    {
      uint64_t v17 = 1;
      goto LABEL_20;
    }
    id v25 = v13;
    uint64_t v15 = [MEMORY[0x1E4F1C9B8] dataWithContentsOfURL:v11 options:2 error:&v25];
    id v16 = v25;

    if (v15)
    {
      id v24 = v16;
      uint64_t v17 = _writeSinfData(v15, v14, a3, a4, &v24);
      id v18 = v24;
    }
    else
    {
      char v19 = [v16 domain];
      if ([v19 isEqualToString:*MEMORY[0x1E4F281F8]])
      {
        uint64_t v20 = [v16 code];

        if (v20 == 260)
        {
          if (!gLogHandle || *(int *)(gLogHandle + 44) < 7)
          {
            uint64_t v17 = 1;
LABEL_17:

            id v13 = v16;
            if (!a5) {
              goto LABEL_20;
            }
            goto LABEL_18;
          }
          int v22 = [v11 path];
          MOLogWrite();
          uint64_t v17 = 1;
LABEL_16:

          goto LABEL_17;
        }
      }
      else
      {
      }
      _CreateAndLogError((uint64_t)"MIReplicateRootSinf", 181, @"MIInstallerErrorDomain", 24, v16, &unk_1F170E7D8, @"Failed to read sinf at %@ : %@", v21, (uint64_t)v11);
      id v18 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v17 = 0;
    }
    int v22 = v16;
    id v16 = v18;
    goto LABEL_16;
  }
  uint64_t v17 = 0;
  if (!a5) {
    goto LABEL_20;
  }
LABEL_18:
  if ((v17 & 1) == 0)
  {
    id v13 = v13;
    uint64_t v17 = 0;
    *a5 = v13;
  }
LABEL_20:

  return v17;
}

id _rootSinfURLForBundle(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1 URLByAppendingPathComponent:@"SC_Info" isDirectory:1];
  id v5 = [NSString stringWithFormat:@"%@.sinf", v3];

  id v6 = [v4 URLByAppendingPathComponent:v5 isDirectory:0];

  return v6;
}

void MIRemoveSinf(void *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v20 = 0;
  BOOL v2 = _sinfURLsForBundle(a1, a2, &v20);
  id v3 = v20;
  if (v2)
  {
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v4 = v2;
    uint64_t v5 = [v4 countByEnumeratingWithState:&v16 objects:v21 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v17;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          id v9 = v3;
          if (*(void *)v17 != v7) {
            objc_enumerationMutation(v4);
          }
          id v10 = *(void **)(*((void *)&v16 + 1) + 8 * i);
          id v11 = +[MIFileManager defaultManager];
          id v15 = v3;
          char v12 = [v11 removeItemAtURL:v10 error:&v15];
          id v3 = v15;

          if ((v12 & 1) == 0 && (!gLogHandle || *(int *)(gLogHandle + 44) >= 3))
          {
            id v13 = [v10 path];
            id v14 = v3;
            MOLogWrite();
          }
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v16 objects:v21 count:16];
      }
      while (v6);
    }
  }
  else if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
  {
    MOLogWrite();
  }
}

uint64_t MIGetSinfDataType(void *a1, _DWORD *a2, void *a3)
{
  id v5 = a1;
  unsigned int v18 = -1;
  uint64_t v6 = +[MIFileManager defaultManager];
  id v17 = 0;
  uint64_t v7 = [v6 dataForExtendedAttributeNamed:@"com.apple.managed_drm_id" length:4 fromURL:v5 error:&v17];
  id v8 = v17;

  if (v7)
  {
    if ([v7 length] != 4)
    {
      id v10 = [v5 path];
      [v7 length];
      _CreateAndLogError((uint64_t)"MIGetSinfDataType", 229, @"MIInstallerErrorDomain", 4, 0, 0, @"Got value for %s extended attribute on %@ with unexpected length %lu", v14, (uint64_t)"com.apple.managed_drm_id");
      goto LABEL_12;
    }
    [v7 getBytes:&v18 length:4];
    uint64_t v9 = v18;
    if (v18 >= 2)
    {
      id v10 = [v5 path];
      _CreateAndLogError((uint64_t)"MIGetSinfDataType", 242, @"MIInstallerErrorDomain", 4, 0, 0, @"Got unknown value %u for %s extended attribute on %@", v11, v9);
      uint64_t v15 = LABEL_12:;

      id v8 = (id)v15;
      goto LABEL_13;
    }
  }
  else
  {
    id v10 = [v8 domain];
    if (![v10 isEqualToString:*MEMORY[0x1E4F28798]])
    {
LABEL_13:

LABEL_14:
      if (a3)
      {
        id v8 = v8;
        uint64_t v13 = 0;
        *a3 = v8;
      }
      else
      {
        uint64_t v13 = 0;
      }
      goto LABEL_17;
    }
    uint64_t v12 = [v8 code];

    if (v12 != 93) {
      goto LABEL_14;
    }
    unsigned int v18 = 0;

    id v8 = 0;
    LODWORD(v9) = 0;
  }
  if (a2) {
    *a2 = v9;
  }
  uint64_t v13 = 1;
LABEL_17:

  return v13;
}

uint64_t MISetSinfDataType(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  int v16 = a2;
  uint64_t v6 = +[MIFileManager defaultManager];
  uint64_t v7 = v6;
  if (a2 < 2)
  {
    if (a2)
    {
      uint64_t v11 = [MEMORY[0x1E4F1C9B8] dataWithBytes:&v16 length:4];
      id v14 = 0;
      uint64_t v10 = [v7 setData:v11 forExtendedAttributeNamed:@"com.apple.managed_drm_id" onURL:v5 error:&v14];
      id v9 = v14;

      if (!a3) {
        goto LABEL_10;
      }
    }
    else
    {
      id v15 = 0;
      uint64_t v10 = [v6 removeExtendedAttributeNamed:@"com.apple.managed_drm_id" fromURL:v5 error:&v15];
      id v9 = v15;
      if (!a3) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v13 = [v5 path];
    _CreateAndLogError((uint64_t)"MISetSinfDataType", 267, @"MIInstallerErrorDomain", 4, 0, 0, @"Got unknown value %u for Sinf data type to set on %@", v8, a2);
    id v9 = (id)objc_claimAutoreleasedReturnValue();

    uint64_t v10 = 0;
    if (!a3) {
      goto LABEL_10;
    }
  }
  if ((v10 & 1) == 0) {
    *a3 = v9;
  }
LABEL_10:

  return v10;
}

id _GenerateBuiltInAppInstallSessionID(void *a1)
{
  id v1 = a1;
  BOOL v2 = (void *)MGCopyAnswer();
  objc_opt_class();
  id v3 = v2;
  id v4 = 0;
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }

  id v5 = [NSString stringWithFormat:@"%@/%@", v4, v1];

  uint64_t v6 = _HashForString(v5);

  return v6;
}

id _GenerateBuiltInAppInstallID(void *a1)
{
  uint64_t v1 = _GenerateBuiltInAppInstallID_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&_GenerateBuiltInAppInstallID_onceToken, &__block_literal_global_0);
  }
  id v3 = [NSString stringWithFormat:@"%@/%@", v2, _GenerateBuiltInAppInstallID_osVersion];

  id v4 = _HashForString(v3);

  return v4;
}

id _IdentifierStorageLocationForBundle(void *a1)
{
  id v1 = a1;
  if ([v1 isPlaceholder]) {
    [v1 bundleURL];
  }
  else {
  id v2 = [v1 executableURL];
  }

  return v2;
}

id _HashForString(void *a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = (const void *)[v1 UTF8String];
  CC_LONG v3 = [v1 length];

  CC_SHA256(v2, v3, md);
  id v4 = [MEMORY[0x1E4F1C9B8] dataWithBytes:md length:16];
  return v4;
}

id _UUIDData()
{
  v2[2] = *MEMORY[0x1E4F143B8];
  v2[0] = 0;
  v2[1] = 0;
  MEMORY[0x1C1878F50](v2);
  uint64_t v0 = [MEMORY[0x1E4F1C9B8] dataWithBytes:v2 length:16];
  return v0;
}

uint64_t ICLSetLoggingHandle(uint64_t result)
{
  gLogHandle = result;
  return result;
}

unint64_t MIReserveMemoryForValidation(unint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    if (sAvailableMemoryOnceToken != -1) {
      dispatch_once(&sAvailableMemoryOnceToken, &__block_literal_global_1);
    }
    if (sMaxAvailableMemoryForResourceValidation < a1)
    {
      if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
        MIReserveMemoryForValidation_cold_1((uint64_t)v3, a1);
      }
      a1 = sMaxAvailableMemoryForResourceValidation;
    }
    pthread_mutex_lock(&sAvailableMemoryForResourceValidationMutex);
    for (uint64_t i = sAvailableMemoryForResourceValidation;
          sAvailableMemoryForResourceValidation < a1;
          uint64_t i = sAvailableMemoryForResourceValidation)
    {
      if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5) {
        MOLogWrite();
      }
      pthread_cond_wait(&sAvailableMemoryForResourceValidationCondition, &sAvailableMemoryForResourceValidationMutex);
    }
    sAvailableMemoryForResourceValidation = i - a1;
    pthread_mutex_unlock(&sAvailableMemoryForResourceValidationMutex);
  }

  return a1;
}

unint64_t MIReturnMemoryUsedForValidation(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (sAvailableMemoryOnceToken != -1) {
      dispatch_once(&sAvailableMemoryOnceToken, &__block_literal_global_1);
    }
    uint64_t v2 = v1;
    if (sMaxAvailableMemoryForResourceValidation < v1)
    {
      if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
        MIReturnMemoryUsedForValidation_cold_2();
      }
      uint64_t v2 = sMaxAvailableMemoryForResourceValidation;
    }
    pthread_mutex_lock(&sAvailableMemoryForResourceValidationMutex);
    unint64_t v3 = sAvailableMemoryForResourceValidation + v2;
    if (v3 > sMaxAvailableMemoryForResourceValidation)
    {
      if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
        MIReturnMemoryUsedForValidation_cold_1();
      }
      unint64_t v3 = sMaxAvailableMemoryForResourceValidation;
    }
    sAvailableMemoryForResourceValidation = v3;
    pthread_cond_broadcast(&sAvailableMemoryForResourceValidationCondition);
    return pthread_mutex_unlock(&sAvailableMemoryForResourceValidationMutex);
  }
  return result;
}

void *MIReduceAvailableMemoryForValidationForTesting()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  if (sAvailableMemoryOnceToken != -1) {
    dispatch_once(&sAvailableMemoryOnceToken, &__block_literal_global_1);
  }
  unint64_t v0 = sMaxAvailableMemoryForResourceValidation - 10485760;
  if ((unint64_t)sMaxAvailableMemoryForResourceValidation <= 0xA00000) {
    MIReduceAvailableMemoryForValidationForTesting_cold_1(&v3, v4);
  }
  if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5) {
    MOLogWrite();
  }
  MIReserveMemoryForValidation(v0, @"Testing");
  if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5) {
    MOLogWrite();
  }
  sReservedMemoryForTesting = v0;
  unint64_t v1 = malloc_type_malloc(v0, 0x8B67CEAFuLL);
  sReservedMemoryForTestingAllocation = (uint64_t)v1;
  return memset(v1, 120, v0);
}

uint64_t MIRestoreAvailableMemoryForValidationAfterTesting()
{
  if (sAvailableMemoryOnceToken != -1) {
    dispatch_once(&sAvailableMemoryOnceToken, &__block_literal_global_1);
  }
  unint64_t v0 = sReservedMemoryForTesting;
  sReservedMemoryForTesting = 0;
  MIReturnMemoryUsedForValidation(v0);
  free((void *)sReservedMemoryForTestingAllocation);
  sReservedMemoryForTestingAllocation = 0;
  uint64_t result = gLogHandle;
  if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5) {
    return MOLogWrite();
  }
  return result;
}

void sub_1BCA74FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_1BCA76390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_1BCA777B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BCA7BF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BCA7C3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BCA7C980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BCA80B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  return _os_log_send_and_compose_impl();
}

id _ErrorDict()
{
  v5[1] = *MEMORY[0x1E4F143B8];
  uint64_t path = container_error_get_path();
  if (path)
  {
    unint64_t v1 = [NSString stringWithFileSystemRepresentation:path];
  }
  else
  {
    unint64_t v1 = @"Failed to read container error path";
  }
  uint64_t v4 = *MEMORY[0x1E4F28328];
  v5[0] = v1;
  uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v5 forKeys:&v4 count:1];

  return v2;
}

__CFString *_RawContainerDescription()
{
  uint64_t v0 = (void *)container_copy_unlocalized_description();
  if (v0)
  {
    unint64_t v1 = [NSString stringWithUTF8String:v0];
  }
  else
  {
    unint64_t v1 = @"<No container description>";
  }
  free(v0);
  return v1;
}

void sub_1BCA8351C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void sub_1BCA83910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MIInstallProfileAtURL(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 path];
  uint64_t v3 = (const void *)MISProfileCreateWithFile();

  if (v3)
  {
    uint64_t v4 = _InstallProvisioningProfile();
    CFRelease(v3);
  }
  else
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
    {
      uint64_t v6 = [v1 path];
      MOLogWrite();
    }
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t _InstallProvisioningProfile()
{
  uint64_t v0 = MISInstallProvisioningProfile();
  uint64_t v1 = v0;
  if (v0 && (!gLogHandle || *(int *)(gLogHandle + 44) >= 3))
  {
    uint64_t v3 = MIErrorStringForMISError(v0);
    MOLogWrite();
  }
  return v1;
}

uint64_t MIInstallProfileWithData(void *a1)
{
  id v1 = a1;
  uint64_t v2 = MISProfileCreateWithData();
  if (v2)
  {
    uint64_t v3 = (const void *)v2;
    uint64_t v4 = _InstallProvisioningProfile();
    CFRelease(v3);
  }
  else
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
    {
      [v1 length];
      MOLogWrite();
    }
    uint64_t v4 = 0;
  }

  return v4;
}

void MIUninstallProfilesForAppIdentifier(void *a1)
{
  id v1 = a1;
  if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5) {
    MOLogWrite();
  }
  id v2 = v1;
  uint64_t v3 = MISEnumerateMatchingProfilesUnauthoritative();
  if (v3 && (!gLogHandle || *(int *)(gLogHandle + 44) >= 3))
  {
    uint64_t v4 = MIErrorStringForMISError(v3);
    MOLogWrite();
  }
}

uint64_t __MIUninstallProfilesForAppIdentifier_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  if (!a7) {
    return 1;
  }
  if (!MISEntitlementDictionaryAllowsEntitlementValue()) {
    return 1;
  }
  if (!gLogHandle || *(int *)(gLogHandle + 44) >= 5) {
    MOLogWrite();
  }
  uint64_t result = MISRemoveProvisioningProfile();
  if (result)
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
    {
      uint64_t v8 = MIErrorStringForMISError(result);
      MOLogWrite();
    }
    return 0;
  }
  return result;
}

id MIErrorStringForMISError(uint64_t a1)
{
  unsigned int v1 = (a1 >> 14) & 0xFFF;
  if (a1 >> 26 == 58 && v1 == 2)
  {
    id v2 = (void *)MISCopyErrorStringForErrorCode();
  }
  else
  {
    if (a1 >> 26 || v1 != 3) {
      objc_msgSend(NSString, "stringWithFormat:", @"Unknown error: 0x%x", a1, v4);
    }
    else {
    id v2 = objc_msgSend(NSString, "stringWithFormat:", @"POSIX error %d (%s)", a1 & 0x3FFF, strerror(a1 & 0x3FFF));
    }
  }
  return v2;
}

id MIFetchSignatureVersionForExecutableURL(void *a1, _DWORD *a2)
{
  uint64_t v3 = [a1 path];
  int v4 = MISValidationCopySignatureVersion();

  if (v4 && a2) {
    *a2 = v4;
  }
  return 0;
}

uint64_t MIIsFatalMISProfileInstallationError(int a1, unsigned int a2)
{
  if (a1) {
    unsigned int v2 = a2;
  }
  else {
    unsigned int v2 = 0;
  }
  if (a1 == -402620383) {
    return 1;
  }
  else {
    return v2;
  }
}

uint64_t __MILogHandleForSignpost_block_invoke()
{
  MILogHandleForSignpost_logHandle = (uint64_t)os_log_create("com.apple.installd", "Signpost");
  return MEMORY[0x1F41817F8]();
}

id _CreateAndLogError(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  id v9 = _CreateAndLogErrorV(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&a9);
  return v9;
}

id _CreateAndLogErrorV(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8)
{
  id v15 = a5;
  int v16 = _CreateErrorV(a1, a2, a3, a4, v15, a6, a7, a8);
  id v17 = [v16 userInfo];
  uint64_t v18 = *MEMORY[0x1E4F28568];
  long long v19 = [v17 objectForKeyedSubscript:*MEMORY[0x1E4F28568]];

  if (v15)
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
    {
      id v20 = [v15 domain];
      [v15 code];
      uint64_t v21 = [v15 userInfo];
      uint64_t v23 = [v21 objectForKeyedSubscript:v18];
      MOLogWrite();
    }
  }
  else if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
  {
    MOLogWrite();
  }

  return v16;
}

BOOL _IsMalformedBundleError(void *a1)
{
  id v1 = a1;
  unsigned int v2 = [v1 domain];
  if ([v2 isEqualToString:@"MIInstallerErrorDomain"]
    && [v1 code] == 12)
  {
    BOOL v3 = 1;
  }
  else
  {
    int v4 = [v1 domain];
    if ([v4 isEqualToString:@"MIInstallerErrorDomain"]
      && [v1 code] == 11)
    {
      BOOL v3 = 1;
    }
    else
    {
      uint64_t v5 = [v1 domain];
      if ([v5 isEqualToString:@"MIInstallerErrorDomain"]) {
        BOOL v3 = [v1 code] == 35;
      }
      else {
        BOOL v3 = 0;
      }
    }
  }

  return v3;
}

__CFString *MICopyUnlocalizedDescriptionForContainerExtendedError()
{
  uint64_t v0 = container_error_copy_unlocalized_description();
  if (v0)
  {
    id v1 = (void *)v0;
    unsigned int v2 = [NSString stringWithUTF8String:v0];
    free(v1);
  }
  else
  {
    unsigned int v2 = @"(container_error_copy_unlocalized_description returned NULL)";
  }
  return v2;
}

id _MIValidateObject(void *a1)
{
  id v1 = a1;
  if (objc_opt_isKindOfClass()) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

BOOL MIIsValidInstallationDomain(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 3;
}

__CFString *MIStringForInstallationDomain(unint64_t a1)
{
  if (a1 >= 5)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown MIInstallationDomain: %lu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E62E6F78[a1];
  }
  return v1;
}

id MIDiskImageManagerProxy()
{
  if (MIDiskImageManagerProxy_onceToken != -1) {
    dispatch_once(&MIDiskImageManagerProxy_onceToken, &__block_literal_global_4);
  }
  uint64_t v0 = (void *)MIDiskImageManagerProxy_miDiskImageManager;
  if (MIDiskImageManagerProxy_miDiskImageManager)
  {
    uint64_t v0 = [(id)MIDiskImageManagerProxy_miDiskImageManager sharedInstance];
  }
  return v0;
}

Class __MIDiskImageManagerProxy_block_invoke()
{
  Class result = NSClassFromString(&cfstr_Midiskimageman.isa);
  MIDiskImageManagerProxy_miDiskImageManager = (uint64_t)result;
  return result;
}

id MobileInstallerDelegateProtocolInterface()
{
  os_unfair_lock_lock((os_unfair_lock_t)&MobileInstallerDelegateProtocolInterface_lock);
  WeakRetained = objc_loadWeakRetained(&MobileInstallerDelegateProtocolInterface_weakInterface);
  if (!WeakRetained)
  {
    WeakRetained = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F171DB90];
    objc_storeWeak(&MobileInstallerDelegateProtocolInterface_weakInterface, WeakRetained);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&MobileInstallerDelegateProtocolInterface_lock);
  return WeakRetained;
}

id MobileInstallerProtocolInterface()
{
  os_unfair_lock_lock((os_unfair_lock_t)&MobileInstallerProtocolInterface_lock);
  WeakRetained = objc_loadWeakRetained(&MobileInstallerProtocolInterface_weakInterface);
  if (!WeakRetained)
  {
    WeakRetained = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F171E1D8];
    id v1 = ICLKnownBundleRecordClasses();
    id v2 = [v1 setByAddingObject:objc_opt_class()];

    BOOL v3 = (void *)MEMORY[0x1E4F1CAD0];
    uint64_t v4 = objc_opt_class();
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = objc_opt_class();
    uint64_t v7 = objc_msgSend(v3, "setWithObjects:", v4, v5, v6, objc_opt_class(), 0);
    [WeakRetained setClasses:v7 forSelector:sel_checkCapabilities_withOptions_completion_ argumentIndex:0 ofReply:0];

    uint64_t v8 = (void *)MEMORY[0x1E4F1CAD0];
    uint64_t v9 = objc_opt_class();
    uint64_t v10 = objc_msgSend(v8, "setWithObjects:", v9, objc_opt_class(), 0);
    [WeakRetained setClasses:v10 forSelector:sel_uninstallIdentifiers_withOptions_completion_ argumentIndex:0 ofReply:1];

    [WeakRetained setClasses:v2 forSelector:sel_installURL_identity_targetingDomain_options_returningResultInfo_completion_ argumentIndex:1 ofReply:1];
    [WeakRetained setClasses:v2 forSelector:sel_fetchInfoForContainerizedAppWithIdentity_inDomain_options_completion_ argumentIndex:0 ofReply:1];
    [WeakRetained setClasses:v2 forSelector:sel_fetchInfoForFrameworkAtURL_options_completion_ argumentIndex:0 ofReply:1];
    [WeakRetained setClasses:v2 forSelector:sel_cancelUpdateForStagedUUID_completion_ argumentIndex:0 ofReply:1];
    [WeakRetained setClasses:v2 forSelector:sel_finalizeStagedInstallForUUID_returningResultInfo_completion_ argumentIndex:1 ofReply:1];
    objc_storeWeak(&MobileInstallerProtocolInterface_weakInterface, WeakRetained);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&MobileInstallerProtocolInterface_lock);
  return WeakRetained;
}

void sub_1BCA8DCA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BCA93788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void sub_1BCA94468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1BCA947B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

id getUMUserManagerClass_0()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getUMUserManagerClass_softClass_0;
  uint64_t v7 = getUMUserManagerClass_softClass_0;
  if (!getUMUserManagerClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getUMUserManagerClass_block_invoke_0;
    v3[3] = &unk_1E62E6C30;
    v3[4] = &v4;
    __getUMUserManagerClass_block_invoke_0((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1BCA94B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BCA965BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BCA9665C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BCA966FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BCA96810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BCA96918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BCA96AD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BCA96BB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BCA96E4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BCA970A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

Class __getUMUserManagerClass_block_invoke_0(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!UserManagementLibraryCore_frameworkLibrary_0)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __UserManagementLibraryCore_block_invoke_0;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E62E7268;
    uint64_t v5 = 0;
    UserManagementLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  }
  if (!UserManagementLibraryCore_frameworkLibrary_0) {
    __getUMUserManagerClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("UMUserManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getUMUserManagerClass_block_invoke_cold_2();
  }
  getUMUserManagerClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __UserManagementLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  UserManagementLibraryCore_frameworkLibrary_0 = result;
  return result;
}

uint64_t ICLKnownBundleRecordClasses()
{
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  return objc_msgSend(v0, "setWithObjects:", v1, v2, v3, v4, v5, v6, objc_opt_class(), 0);
}

uint64_t MIBooleanValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2 = [v3 BOOLValue];
  }

  return a2;
}

uint64_t MIArrayContainsOnlyClass(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v1 = a1;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          uint64_t v6 = 0;
          goto LABEL_11;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 1;
LABEL_11:

  return v6;
}

id MIArrayFilteredToContainOnlyClass(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v11 + 1) + 8 * i);
        if (objc_opt_isKindOfClass()) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];
  return v9;
}

uint64_t MIDictionaryContainsOnlyClasses(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  uint64_t v9 = 0;
  long long v10 = &v9;
  uint64_t v11 = 0x2020000000;
  char v12 = 1;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __MIDictionaryContainsOnlyClasses_block_invoke;
  v8[3] = &unk_1E62E7288;
  v8[4] = &v9;
  v8[5] = a2;
  v8[6] = a3;
  [v5 enumerateKeysAndObjectsUsingBlock:v8];
  uint64_t v6 = *((unsigned __int8 *)v10 + 24);
  _Block_object_dispose(&v9, 8);

  return v6;
}

void sub_1BCA98148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __MIDictionaryContainsOnlyClasses_block_invoke(void *a1, void *a2, void *a3, unsigned char *a4)
{
  id v8 = a2;
  id v7 = a3;
  if (a1[5] && (objc_opt_isKindOfClass() & 1) == 0 || a1[6] && (objc_opt_isKindOfClass() & 1) == 0)
  {
    *(unsigned char *)(*(void *)(a1[4] + 8) + 24) = 0;
    *a4 = 1;
  }
}

id MIStringifyObject(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v2 = v1;
    }
    else
    {
      id v2 = [NSString stringWithFormat:@"%@", v1];
    }
    id v3 = v2;
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id MIArrayifyThing(void *a1)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      if (MIArrayContainsOnlyClass(v1))
      {
        id v2 = v1;
LABEL_7:
        id v3 = v2;
        goto LABEL_12;
      }
    }
    else
    {
      if (objc_opt_isKindOfClass())
      {
        v6[0] = v1;
        id v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:1];
        goto LABEL_7;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v4 = [v1 allObjects];
        if (MIArrayContainsOnlyClass(v4)) {
          id v3 = v4;
        }
        else {
          id v3 = 0;
        }

        goto LABEL_12;
      }
    }
  }
  id v3 = 0;
LABEL_12:

  return v3;
}

BOOL MICompareObjects(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  BOOL v6 = (v3 != 0) == (v4 != 0) && (!v3 || !v4 || [v3 isEqual:v4]);

  return v6;
}

id MICreateSHA256Digest(void *a1, void *a2)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  memset(md, 0, sizeof(md));
  memset(&v48, 0, sizeof(v48));
  id v3 = a1;
  if (lstat((const char *)[v3 fileSystemRepresentation], &v48))
  {
    id v4 = __error();
    int v5 = *v4;
    BOOL v6 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4F28798] code:*v4 userInfo:0];
    uint64_t v7 = [v3 fileSystemRepresentation];
    strerror(v5);
    _CreateAndLogError((uint64_t)"MICreateSHA256Digest", 121, @"MIInstallerErrorDomain", 4, v6, 0, @"Failed to stat path %s : %s", v8, v7);
    id v9 = (id)objc_claimAutoreleasedReturnValue();

    goto LABEL_3;
  }
  if (v48.st_size <= 0xFFFFFFF)
  {
    id v47 = 0;
    uint64_t v11 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithContentsOfURL:v3 options:3 error:&v47];
    id v9 = v47;
    if (v11)
    {
      id v12 = v11;
      CC_SHA256((const void *)[v12 bytes], objc_msgSend(v12, "length"), (unsigned __int8 *)md);

LABEL_28:
      uint64_t v22 = (char *)malloc_type_calloc(1uLL, 0x41uLL, 0x67229F93uLL);
      uint64_t v23 = v22;
      uint64_t v24 = 0;
      id v25 = (unsigned __int8 *)md;
      do
      {
        unsigned int v26 = *v25++;
        int v27 = &v22[v24];
        *int v27 = _HexToASCII_hex[(unint64_t)v26 >> 4];
        v24 += 2;
        v27[1] = _HexToASCII_hex[v26 & 0xF];
      }
      while (v24 != 64);
      v22[64] = 0;
      long long v10 = [NSString stringWithUTF8String:v22];
      free(v23);
      if (!a2) {
        goto LABEL_33;
      }
      goto LABEL_31;
    }
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
      MOLogWrite();
    }
    goto LABEL_3;
  }
  uint64_t v42 = 0;
  uint64_t v43 = &v42;
  uint64_t v44 = 0x8810000000;
  long long v45 = "";
  memset(&v46, 0, sizeof(v46));
  CC_SHA256_Init(&v46);
  id v13 = v3;
  long long v14 = (const char *)[v13 fileSystemRepresentation];
  v38[0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  long long v39 = __MICreateSHA256Digest_block_invoke;
  long long v40 = &unk_1E62E72B8;
  long long v41 = &v42;
  id v37 = v38;
  memset(&v49, 0, sizeof(v49));
  int v15 = open(v14, 256);
  int v16 = v15;
  if (v15 < 0)
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
    {
      id v20 = __error();
      strerror(*v20);
      MOLogWrite();
    }
    long long v19 = 0;
LABEL_21:
    int v18 = 0;
  }
  else
  {
    if (fstat(v15, &v49))
    {
      if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    if (v49.st_size >= 0x10000) {
      int64_t st_size = 0x10000;
    }
    else {
      int64_t st_size = v49.st_size;
    }
    long long v19 = malloc_type_malloc(st_size, 0xBF9B6362uLL);
    if (!v19)
    {
      if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
        goto LABEL_13;
      }
LABEL_12:
      id v17 = __error();
      strerror(*v17);
      MOLogWrite();
LABEL_13:
      int v18 = 0;
      long long v19 = 0;
LABEL_23:
      close(v16);
      goto LABEL_24;
    }
    off_t v30 = v49.st_size;
    if (v49.st_size < 1)
    {
      int v18 = 1;
      goto LABEL_23;
    }
    id v36 = v13;
    off_t v31 = 0;
    while (1)
    {
      int64_t v32 = v30 - v31;
      if (st_size >= v32) {
        int64_t st_size = v32;
      }
      ssize_t v33 = read(v16, v19, st_size);
      ssize_t v34 = v33;
      if (v33 == -1)
      {
        if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
        {
          id v35 = __error();
          id v13 = v36;
          strerror(*v35);
          MOLogWrite();
          goto LABEL_21;
        }
        goto LABEL_60;
      }
      if (v33 <= 0) {
        break;
      }
      int v18 = v39((uint64_t)v37, v19, v33);
      if (v18)
      {
        v31 += v34;
        off_t v30 = v49.st_size;
        if (v31 < v49.st_size) {
          continue;
        }
      }
      goto LABEL_61;
    }
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
    {
      MOLogWrite();
      id v13 = v36;
      goto LABEL_21;
    }
LABEL_60:
    int v18 = 0;
LABEL_61:
    id v13 = v36;
  }
  if (v16 != -1) {
    goto LABEL_23;
  }
LABEL_24:
  if (v19) {
    free(v19);
  }

  CC_SHA256_Final((unsigned __int8 *)md, (CC_SHA256_CTX *)(v43 + 4));
  if (v18)
  {
    _Block_object_dispose(&v42, 8);
    id v9 = 0;
    goto LABEL_28;
  }
  _CreateAndLogError((uint64_t)"MICreateSHA256Digest", 148, @"MIInstallerErrorDomain", 4, 0, 0, @"Failed to read %@", v21, (uint64_t)v13);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  _Block_object_dispose(&v42, 8);
LABEL_3:
  long long v10 = 0;
  if (!a2) {
    goto LABEL_33;
  }
LABEL_31:
  if (!v10) {
    *a2 = v9;
  }
LABEL_33:

  return v10;
}

void sub_1BCA98A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __MICreateSHA256Digest_block_invoke(uint64_t a1, const void *a2, CC_LONG a3)
{
  return 1;
}

void MIRunTransactionalTask(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  int v5 = a1;
  BOOL v6 = (void *)os_transaction_create();
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __MIRunTransactionalTask_block_invoke;
  v9[3] = &unk_1E62E72E0;
  id v10 = v6;
  id v11 = v4;
  id v7 = v6;
  id v8 = v4;
  dispatch_async(v5, v9);
}

uint64_t __MIRunTransactionalTask_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1BCA9915C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
}

void sub_1BCA994D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void sub_1BCA998DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1BCA99CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _ProtectionClassForString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:*MEMORY[0x1E4F28340]])
  {
    uint64_t v2 = 1;
  }
  else
  {
    if ([v1 isEqualToString:*MEMORY[0x1E4F28348]]) {
      goto LABEL_4;
    }
    if ([v1 isEqualToString:*MEMORY[0x1E4F28358]])
    {
      uint64_t v2 = 3;
      goto LABEL_15;
    }
    if ([v1 isEqualToString:*MEMORY[0x1E4F28378]])
    {
      uint64_t v2 = 4;
      goto LABEL_15;
    }
    if ([v1 isEqualToString:*MEMORY[0x1E4F28368]])
    {
      uint64_t v2 = 7;
      goto LABEL_15;
    }
    if ([v1 isEqualToString:*MEMORY[0x1E4F28388]])
    {
LABEL_4:
      uint64_t v2 = 2;
    }
    else if ([v1 isEqualToString:*MEMORY[0x1E4F28360]])
    {
      uint64_t v2 = 3;
    }
    else
    {
      uint64_t v2 = 0;
    }
  }
LABEL_15:

  return v2;
}

uint64_t _hasNoConflictWithSystemAppBundleIDs(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  int v13 = [a1 containsObject:v9];
  if (v13)
  {
    _CreateAndLogError((uint64_t)"_hasNoConflictWithSystemAppBundleIDs", 1290, @"MIInstallerErrorDomain", 81, 0, &unk_1F170F3E0, @"Identifier %@ is a %@, so we can't install %@ with that same identifier.", v12, (uint64_t)v9);
    id v14 = (id)objc_claimAutoreleasedReturnValue();
    if (a5)
    {
      id v14 = v14;
      *a5 = v14;
    }
  }
  else
  {
    id v14 = 0;
  }

  return v13 ^ 1u;
}

uint64_t _checkIdentifierForConflict(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a4;
  id v13 = a5;
  id v23 = 0;
  id v14 = +[MIContainer containerWithIdentifier:v11 forPersona:a2 ofContentClass:a3 createIfNeeded:0 created:0 error:&v23];
  id v15 = v23;

  if (v14)
  {
    _CreateAndLogError((uint64_t)"_checkIdentifierForConflict", 1246, @"MIInstallerErrorDomain", 81, 0, &unk_1F170F408, @"%@ with identifier %@ is already installed, so we can't install %@ with that same identifier.", v16, (uint64_t)v12);
  }
  else
  {
    id v17 = [v15 domain];
    if ([v17 isEqualToString:@"MIContainerManagerErrorDomain"])
    {
      uint64_t v18 = [v15 code];

      if (v18 == 21)
      {

        id v20 = 0;
        uint64_t v21 = 1;
        goto LABEL_11;
      }
    }
    else
    {
    }
    _CreateAndLogError((uint64_t)"_checkIdentifierForConflict", 1249, @"MIInstallerErrorDomain", 4, v15, 0, @"Unable to check if %@ with bundle identifier %@ is already installed.", v19, (uint64_t)v12);
  }
  id v20 = (id)objc_claimAutoreleasedReturnValue();

  if (a6)
  {
    id v20 = v20;
    uint64_t v21 = 0;
    *a6 = v20;
  }
  else
  {
    uint64_t v21 = 0;
  }
LABEL_11:

  return v21;
}

uint64_t _hasNoConflictWithNonContainerizedSystemApp(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = +[MIDaemonConfiguration sharedInstance];
  id v8 = [v7 builtInApplicationBundleIDs];

  int v10 = [v8 containsObject:v5];
  if (v10)
  {
    id v11 = _CreateAndLogError((uint64_t)"_hasNoConflictWithNonContainerizedSystemApp", 1272, @"MIInstallerErrorDomain", 81, 0, &unk_1F170F430, @"%@ with identifier %@ is already installed, so we can't install %@ with that same identifier.", v9, @"App");
    id v12 = v11;
    if (a3)
    {
      id v12 = v11;
      *a3 = v12;
    }
  }
  else
  {
    id v12 = 0;
  }

  return v10 ^ 1u;
}

void sub_1BCAA0240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void sub_1BCAA13B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t MIGetBooleanEntitlement(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = [a1 objectForKeyedSubscript:v5];
    if (v6)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        a3 = [v6 BOOLValue];
      }
      else if (gLogHandle && *(int *)(gLogHandle + 44) >= 7)
      {
        MOLogWrite();
      }
    }
    else
    {
      a3 = 0;
    }
  }
  else
  {
    a3 = 0;
  }

  return a3;
}

uint64_t MIGetFirstTrueBooleanEntitlement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = a2;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v14;
    while (2)
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        if (MIGetBooleanEntitlement(v5, *(void **)(*((void *)&v13 + 1) + 8 * v10), a3))
        {
          uint64_t v11 = 1;
          goto LABEL_11;
        }
        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }
  uint64_t v11 = 0;
LABEL_11:

  return v11;
}

uint64_t MIHasUpgradeEnabledEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.private.mobileinstall.upgrade-enabled", 0);
}

uint64_t MIHasContainerRequiredEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.private.security.container-required", 1);
}

uint64_t MIHasNoContainerEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.private.security.no-container", 0);
}

uint64_t MIHasNoSandboxEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.private.security.no-sandbox", 0);
}

BOOL MIHasSeatbeltProfilesEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"seatbelt-profiles"];
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t MIHasPlatformApplicationEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"platform-application", 0);
}

uint64_t MIHasSystemContainerEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.security.system-container", 0);
}

uint64_t MIHasXPCServicesAllowedEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.private.mobileinstall.xpc-services-enabled", 0);
}

uint64_t MIHasSystemApplicationEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.private.security.system-application", 0);
}

uint64_t MIHasWebKitPushBundleEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.private.webkit.pushbundle", 0);
}

uint64_t MIHasMarketplaceEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.marketplace.app-installation", 0);
}

id MICopyPlaceholderEntitlements(void *a1)
{
  id v1 = [a1 URLByAppendingPathComponent:@"PlaceholderEntitlements.plist" isDirectory:0];
  BOOL v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithContentsOfURL:v1];

  return v2;
}

uint64_t MIWritePlaceholderEntitlements(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [a1 URLByAppendingPathComponent:@"PlaceholderEntitlements.plist" isDirectory:0];
  uint64_t v7 = objc_msgSend(v5, "MI_writeToURL:format:options:error:", v6, 200, 268435457, a3);

  return v7;
}

id MICopyApplicationGroupEntitlement(void *a1)
{
  return _MICommonCopyGroupEntitlement(a1, @"com.apple.security.application-groups");
}

id _MICommonCopyGroupEntitlement(void *a1, void *a2)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v4 = [a1 objectForKeyedSubscript:v3];
  if (!v4) {
    goto LABEL_14;
  }
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  objc_opt_class();
  if (isKindOfClass)
  {
    if (MIArrayContainsOnlyClass(v4))
    {
      id v6 = v4;
LABEL_7:
      uint64_t v7 = [MEMORY[0x1E4F1CAD0] setWithArray:v6];
      uint64_t v8 = [v7 allObjects];

      goto LABEL_16;
    }
    if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
      goto LABEL_14;
    }
LABEL_13:
    MOLogWrite();
LABEL_14:
    id v6 = 0;
    goto LABEL_15;
  }
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v10[0] = v4;
  id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  if (v6) {
    goto LABEL_7;
  }
LABEL_15:
  uint64_t v8 = 0;
LABEL_16:

  return v8;
}

BOOL MIHasAnyApplicationGroupEntitlements(void *a1)
{
  id v1 = _MICommonCopyGroupEntitlement(a1, @"com.apple.security.application-groups");
  BOOL v2 = v1 != 0;

  return v2;
}

id MICopySystemGroupEntitlement(void *a1)
{
  id v1 = a1;
  BOOL v2 = _MICommonCopyGroupEntitlement(v1, @"com.apple.security.system-groups");
  id v3 = v2;
  if (!v2 || ![v2 count])
  {
    uint64_t v4 = _MICommonCopyGroupEntitlement(v1, @"com.apple.security.system-group-containers");

    id v3 = (void *)v4;
  }

  return v3;
}

BOOL MIHasAnySystemGroupEntitlements(void *a1)
{
  id v1 = MICopySystemGroupEntitlement(a1);
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t MIHasOnDemandInstallCapableEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.on-demand-install-capable", 0);
}

id MICopyParentIdentifiersEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"com.apple.developer.parent-application-identifiers"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  if (v3 && (objc_opt_class(), MIArrayContainsOnlyClass(v3))) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }

  return v4;
}

id MICopyApplicationIdentifierEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"application-identifier"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  return v3;
}

id MICopyPreviousApplicationIdentifiersEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"previous-application-identifiers"];
  objc_opt_class();
  id v2 = MIArrayifyThing(v1);

  return v2;
}

uint64_t MIHasBetaReportsActiveEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"beta-reports-active", 0);
}

id MICopyKeychainAccessGroupEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"keychain-access-groups"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  if (v3 && (objc_opt_class(), MIArrayContainsOnlyClass(v3))) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }

  return v4;
}

uint64_t MIHasSwiftPlaygroundsAppEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.swift-playgrounds-app", 0);
}

id MICopyAppManagementDomainEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"com.apple.developer.app-management-domain"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  return v3;
}

uint64_t MIClassifyAppManagementDomainValue(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    if ([v1 hasPrefix:@"swift-playgrounds"])
    {
      uint64_t v3 = 2;
    }
    else if ([v2 isEqualToString:@"com.apple.WebKit.PushBundles"])
    {
      uint64_t v3 = 3;
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  else
  {
    uint64_t v3 = 1;
  }

  return v3;
}

uint64_t MIClassifyAppManagementDomainEntitlement(void *a1)
{
  id v1 = MICopyAppManagementDomainEntitlement(a1);
  uint64_t v2 = MIClassifyAppManagementDomainValue(v1);

  return v2;
}

id MICopyNetworkExtensionEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"com.apple.developer.networking.networkextension"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  if (v3 && (objc_opt_class(), MIArrayContainsOnlyClass(v3))) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }

  return v4;
}

id MICopyAssociatedAppClipsEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"com.apple.developer.associated-appclip-app-identifiers"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  if (v3 && (objc_opt_class(), MIArrayContainsOnlyClass(v3))) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }

  return v4;
}

uint64_t MIHasDriverKitEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.driverkit", 0);
}

id MICopyDataProtectionClassEntitlement(void *a1)
{
  id v1 = a1;
  id v2 = [v1 objectForKeyedSubscript:@"com.apple.developer.default-data-protection"];
  objc_opt_class();
  id v3 = v2;
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }

  if (!v4)
  {
    id v5 = [v1 objectForKeyedSubscript:@"data-protection-class"];
    objc_opt_class();
    id v6 = v5;
    id v4 = (objc_opt_isKindOfClass() & 1) != 0 ? v6 : 0;

    if (!v4)
    {
      uint64_t v7 = [v1 objectForKeyedSubscript:@"DataProtectionClass"];
      objc_opt_class();
      id v8 = v7;
      if (objc_opt_isKindOfClass()) {
        id v4 = v8;
      }
      else {
        id v4 = 0;
      }
    }
  }

  return v4;
}

id MICopyDataProtectionIfAvailableEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"com.apple.developer.default-data-protection-if-available"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  if (v3)
  {
    id v4 = v2;
  }
  else
  {
    objc_opt_class();
    id v5 = v2;
    if (objc_opt_isKindOfClass()) {
      id v6 = v5;
    }
    else {
      id v6 = 0;
    }

    if (v6)
    {
      id v7 = v5;
      objc_opt_class();
      MIArrayFilteredToContainOnlyClass(v7);
      id v4 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v4 = 0;
    }
  }

  return v4;
}

uint64_t MIHasBrowserEngineHostEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.web-browser-engine.host", 0);
}

uint64_t MIHasEmbeddedBrowserEngineEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.embedded-web-browser-engine", 0);
}

uint64_t MIHasBrowserEngineRenderingEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.web-browser-engine.rendering", 0);
}

uint64_t MIHasBrowserEngineNetworkingEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.web-browser-engine.networking", 0);
}

uint64_t MIHasBrowserEngineContentEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.web-browser-engine.webcontent", 0);
}

id MICopyMemoryTransferAcceptEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"com.apple.developer.memory.transfer-accept"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  return v3;
}

id MICopyMemoryTransferSendEntitlement(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"com.apple.developer.memory.transfer-send"];
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  return v3;
}

uint64_t MIHasDefaultBrowserEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.web-browser", 0);
}

uint64_t MIHasBrowserAppInstallationEntitlement(void *a1)
{
  return MIGetBooleanEntitlement(a1, @"com.apple.developer.browser.app-installation", 0);
}

id MICopyExtensionCacheEntryWithPlatform(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  if (sExtensionPointCatalogOnce != -1) {
    dispatch_once_f(&sExtensionPointCatalogOnce, 0, (dispatch_function_t)_SetUpExtensionCacheOnce);
  }
  id v6 = [(id)sExtensionPointCatalog extensionPointForIdentifier:v5 platform:a2];
  id v7 = [v6 SDKDictionary];

  if (v7)
  {
    id v9 = 0;
  }
  else
  {
    _CreateAndLogError((uint64_t)"MICopyExtensionCacheEntryWithPlatform", 46, @"MIInstallerErrorDomain", 142, 0, 0, @"Extension cache does not have an entry for %@", v8, (uint64_t)v5);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    if (a3)
    {
      id v9 = v9;
      *a3 = v9;
    }
  }

  return v7;
}

void _SetUpExtensionCacheOnce()
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2050000000;
  uint64_t v0 = (void *)getEXExtensionPointCatalogClass_softClass;
  uint64_t v8 = getEXExtensionPointCatalogClass_softClass;
  if (!getEXExtensionPointCatalogClass_softClass)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __getEXExtensionPointCatalogClass_block_invoke;
    v4[3] = &unk_1E62E6C30;
    v4[4] = &v5;
    __getEXExtensionPointCatalogClass_block_invoke((uint64_t)v4);
    uint64_t v0 = (void *)v6[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v5, 8);
  id v2 = objc_alloc_init(v1);
  id v3 = (void *)sExtensionPointCatalog;
  sExtensionPointCatalog = (uint64_t)v2;
}

void sub_1BCAA33F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MICopyExtensionCacheEntry(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t active_platform = dyld_get_active_platform();
  uint64_t v5 = MICopyExtensionCacheEntryWithPlatform(v3, active_platform, a2);

  return v5;
}

Class __getEXExtensionPointCatalogClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ExtensionFoundationLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __ExtensionFoundationLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E62E7418;
    uint64_t v5 = 0;
    ExtensionFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!ExtensionFoundationLibraryCore_frameworkLibrary) {
    __getEXExtensionPointCatalogClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("EXExtensionPointCatalog");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getEXExtensionPointCatalogClass_block_invoke_cold_2();
  }
  getEXExtensionPointCatalogClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ExtensionFoundationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ExtensionFoundationLibraryCore_frameworkLibrary = result;
  return result;
}

BOOL MIHasStringValueOfNonZeroLength(void *a1, uint64_t a2, BOOL a3)
{
  long long v4 = [a1 objectForKeyedSubscript:a2];
  if (v4)
  {
    objc_opt_class();
    a3 = (objc_opt_isKindOfClass() & 1) != 0 && [v4 length];
  }

  return a3;
}

BOOL MIHasStringValueOfNonZeroLengthIfDefined(void *a1, uint64_t a2)
{
  return MIHasStringValueOfNonZeroLength(a1, a2, 1);
}

BOOL MIHasStringValueOfNonZeroLengthIfDefinedCF(void *a1, uint64_t a2)
{
  return MIHasStringValueOfNonZeroLength(a1, a2, 1);
}

BOOL MIHasRequiredStringValueOfNonZeroLength(void *a1, uint64_t a2)
{
  return MIHasStringValueOfNonZeroLength(a1, a2, 0);
}

BOOL MIHasRequiredStringValueOfNonZeroLengthCF(void *a1, uint64_t a2)
{
  return MIHasStringValueOfNonZeroLength(a1, a2, 0);
}

uint64_t MIIsValidRDNSString(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v1 = [a1 componentsSeparatedByString:@"."];
  if ((unint64_t)[v1 count] >= 2)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v10;
      while (2)
      {
        uint64_t v7 = 0;
        do
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v3);
          }
          if (!objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * v7), "length", (void)v9))
          {
            uint64_t v2 = 0;
            goto LABEL_13;
          }
          ++v7;
        }
        while (v5 != v7);
        uint64_t v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
        if (v5) {
          continue;
        }
        break;
      }
    }
    uint64_t v2 = 1;
LABEL_13:
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t MIIsCompatibleWithDeviceFamily(void *a1, uint64_t a2)
{
  id v3 = NSNumber;
  id v4 = a1;
  uint64_t v5 = [v3 numberWithInt:a2];
  uint64_t v6 = [MEMORY[0x1E4F1CAD0] setWithObject:v5];
  uint64_t v7 = MIIsCompatibleWithAtLeastOneDeviceFamily(v4, v6, 0);

  return v7;
}

uint64_t MIIsCompatibleWithAtLeastOneDeviceFamily(void *a1, void *a2, uint64_t a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  if (v5)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v7 = v5;
    a3 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (a3)
    {
      uint64_t v8 = *(void *)v16;
      while (2)
      {
        uint64_t v9 = 0;
        do
        {
          if (*(void *)v16 != v8) {
            objc_enumerationMutation(v7);
          }
          long long v10 = *(void **)(*((void *)&v15 + 1) + 8 * v9);
          if (objc_opt_respondsToSelector())
          {
            uint64_t v11 = objc_msgSend(v10, "intValue", (void)v15);
            long long v12 = [NSNumber numberWithInt:v11];
            char v13 = [v6 containsObject:v12];

            if (v13)
            {
              a3 = 1;
              goto LABEL_13;
            }
          }
          ++v9;
        }
        while (a3 != v9);
        a3 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
        if (a3) {
          continue;
        }
        break;
      }
    }
LABEL_13:
  }
  return a3;
}

uint64_t MIIsApplicableToCurrentDeviceFamilyWithError(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = +[MIDaemonConfiguration sharedInstance];
  char v5 = [v4 skipDeviceFamilyCheck];

  if (v5)
  {
    id v6 = 0;
    id v7 = 0;
    uint64_t v8 = 1;
    goto LABEL_16;
  }
  uint64_t v9 = (void *)MGCopyAnswer();
  objc_opt_class();
  id v10 = v9;
  id v6 = 0;
  if (objc_opt_isKindOfClass()) {
    id v6 = v10;
  }

  if (v6)
  {
    objc_opt_class();
    if ((MIArrayContainsOnlyClass(v6) & 1) == 0)
    {
      _CreateAndLogError((uint64_t)"MIIsApplicableToCurrentDeviceFamilyWithError", 81, @"MIInstallerErrorDomain", 4, 0, 0, @"Array of supported device families returned from MobileGestalt was not an array of numbers; got: %@",
        v12,
        (uint64_t)v6);
      goto LABEL_13;
    }
    char v13 = [MEMORY[0x1E4F1CAD0] setWithArray:v6];
    uint64_t v8 = 1;
    char v14 = MIIsCompatibleWithAtLeastOneDeviceFamily(v3, v13, 1);

    if (v14)
    {
      id v7 = 0;
      goto LABEL_16;
    }
    uint64_t v20 = (uint64_t)v3;
    long long v15 = &unk_1F170F5C0;
    long long v16 = @"This app was not built to support this device family; app is compatible with %@ but this device supports %@";
    uint64_t v17 = 86;
  }
  else
  {
    long long v15 = &unk_1F170F598;
    long long v16 = @"Couldn't fetch list of supported device families.";
    uint64_t v17 = 76;
  }
  _CreateAndLogError((uint64_t)"MIIsApplicableToCurrentDeviceFamilyWithError", v17, @"MIInstallerErrorDomain", 10, 0, v15, v16, v11, v20);
  long long v18 = LABEL_13:;
  id v7 = v18;
  if (a2)
  {
    id v7 = v18;
    uint64_t v8 = 0;
    *a2 = v7;
  }
  else
  {
    uint64_t v8 = 0;
  }
LABEL_16:

  return v8;
}

void sub_1BCAA8510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

uint64_t _ItemIsIgnoredContainerContentForStash(void *a1)
{
  id v1 = a1;
  if (([v1 hasPrefix:@"."] & 1) != 0
    || ([v1 isEqualToString:@"com.apple.mobileinstallation.placeholder"] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:@"com.apple.mobileinstallation.stash"];
  }

  return v2;
}

void sub_1BCAA8E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _removefile_error_callback(_removefile_state *a1, uint64_t a2, _DWORD *a3)
{
  int dst = 0;
  if (removefile_state_get(a1, 5u, &dst))
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
      MOLogWrite();
    }
    int dst = 2;
  }
  else if (dst != 2 && (!gLogHandle || *(int *)(gLogHandle + 44) >= 3))
  {
    strerror(dst);
    MOLogWrite();
  }
  if (a3 && !*a3) {
    *a3 = dst;
  }
  return 0;
}

uint64_t _CopyfileStatusCallback(uint64_t a1, int a2, uint64_t a3, const char *a4, uint64_t a5, void *a6)
{
  if (a2 == 3)
  {
    id v8 = a6;
    uint64_t v9 = *__error();
    if ([v8 ignoreErrors])
    {
      if (a1)
      {
        if (gLogHandle && *(int *)(gLogHandle + 44) < 3) {
          goto LABEL_17;
        }
      }
      else if (gLogHandle && *(int *)(gLogHandle + 44) < 3)
      {
        goto LABEL_17;
      }
      strerror(v9);
LABEL_16:
      MOLogWrite();
LABEL_17:
      uint64_t v10 = 1;
LABEL_28:

      return v10;
    }
    if (v9 == 45)
    {
      memset(&v23, 0, sizeof(v23));
      if (lstat(a4, &v23))
      {
        uint64_t v12 = *__error();
        _CreateError((uint64_t)"_CopyfileStatusCallback", 237, (void *)*MEMORY[0x1E4F28798], v12, 0, 0, @"lstat returned an error when trying to determine type for %s", v13, (uint64_t)a4);
        uint64_t v20 = LABEL_27:;
        [v8 setError:v20];

        uint64_t v10 = 2;
        goto LABEL_28;
      }
      unsigned int v17 = v23.st_mode & 0xF000;
      if (v17 >= 0x6000)
      {
        if (v17 == 24576)
        {
          if (gLogHandle && *(int *)(gLogHandle + 44) < 5) {
            goto LABEL_17;
          }
          goto LABEL_16;
        }
        if (v17 == 49152)
        {
          if (gLogHandle && *(int *)(gLogHandle + 44) < 5) {
            goto LABEL_17;
          }
          goto LABEL_16;
        }
      }
      else
      {
        if (v17 == 4096)
        {
          if (gLogHandle && *(int *)(gLogHandle + 44) < 5) {
            goto LABEL_17;
          }
          goto LABEL_16;
        }
        if (v17 == 0x2000)
        {
          if (gLogHandle && *(int *)(gLogHandle + 44) < 5) {
            goto LABEL_17;
          }
          goto LABEL_16;
        }
      }
      long long v18 = (void *)*MEMORY[0x1E4F28798];
      if (a1)
      {
        uint64_t v22 = a1;
        long long v15 = @"copyfile hit ENOTSUP at %d while copying %s to %s; src mode: 0%o";
        uint64_t v16 = 258;
      }
      else
      {
        uint64_t v22 = (uint64_t)a4;
        long long v15 = @"copyfile hit ENOTSUP in source hierarchy while copying %s to %s; src mode: 0%o";
        uint64_t v16 = 256;
      }
      uint64_t v19 = 45;
    }
    else
    {
      char v14 = (void *)*MEMORY[0x1E4F28798];
      strerror(v9);
      if (a1)
      {
        uint64_t v22 = a1;
        long long v15 = @"copyfile failed at %d while copying %s to %s: %s (%d)";
        uint64_t v16 = 267;
      }
      else
      {
        uint64_t v22 = (uint64_t)a4;
        long long v15 = @"copyfile failed in source hierarchy while copying %s to %s: %s (%d)";
        uint64_t v16 = 265;
      }
      long long v18 = v14;
      uint64_t v19 = v9;
    }
    _CreateError((uint64_t)"_CopyfileStatusCallback", v16, v18, v19, 0, 0, v15, v11, v22);
    goto LABEL_27;
  }
  return 0;
}

void sub_1BCAAAF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void sub_1BCAAB914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
}

void sub_1BCAAC41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1BCAAC6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BCAACD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _dataForEAKey(char *name, int fd, void *a3)
{
  unint64_t v6 = fgetxattr(fd, name, 0, 0, 0, 32);
  if ((v6 & 0x8000000000000000) != 0)
  {
    int v11 = *__error();
    uint64_t v12 = (void *)*MEMORY[0x1E4F28798];
    uint64_t v13 = v11;
    strerror(v11);
    _CreateError((uint64_t)"_dataForEAKey", 1549, v12, v13, 0, 0, @"Could not get data length for extended attribute key %s: %s", v14, (uint64_t)name);
LABEL_8:
    id v15 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v16 = 0;
    goto LABEL_9;
  }
  size_t v8 = v6;
  if (!v6)
  {
    uint64_t v30 = name;
    uint64_t v9 = @"Data for extended attribute key %s was empty";
    uint64_t v10 = 1552;
    goto LABEL_7;
  }
  if (v6 > 0x1000)
  {
    uint64_t v30 = name;
    uint64_t v9 = @"Data length is more than 4 KB for extended attribute key %s: length is %zd bytes";
    uint64_t v10 = 1555;
LABEL_7:
    _CreateError((uint64_t)"_dataForEAKey", v10, @"MIInstallerErrorDomain", 4, 0, 0, v9, v7, (uint64_t)v30);
    goto LABEL_8;
  }
  uint64_t v19 = malloc_type_malloc(v6, 0x1F5EDC03uLL);
  if (!v19)
  {
    int v22 = *__error();
    stat v23 = (void *)*MEMORY[0x1E4F28798];
    uint64_t v24 = v22;
    strerror(v22);
    _CreateError((uint64_t)"_dataForEAKey", 1561, v23, v24, 0, 0, @"Failed to malloc %zd bytes for extended attribute key %s: %s", v25, v8);
    goto LABEL_8;
  }
  uint64_t v16 = v19;
  ssize_t v20 = fgetxattr(fd, name, v19, v8, 0, 32);
  if (v20 < 0)
  {
    int v26 = *__error();
    int v27 = (void *)*MEMORY[0x1E4F28798];
    uint64_t v28 = v26;
    strerror(v26);
    _CreateError((uint64_t)"_dataForEAKey", 1567, v27, v28, 0, 0, @"Failed to malloc %zd bytes for extended attribute key %s: %s", v29, v8);
  }
  else
  {
    if (v20)
    {
      unsigned int v17 = [MEMORY[0x1E4F1C9B8] dataWithBytesNoCopy:v16 length:v20 freeWhenDone:1];
      id v15 = 0;
      if (v17) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    _CreateError((uint64_t)"_dataForEAKey", 1570, @"MIInstallerErrorDomain", 4, 0, 0, @"Data for key %s returned length 0, expected length %zd", v21, (uint64_t)name);
  }
  id v15 = (id)objc_claimAutoreleasedReturnValue();
LABEL_9:
  free(v16);
  if (a3)
  {
    id v15 = v15;
    unsigned int v17 = 0;
    *a3 = v15;
  }
  else
  {
    unsigned int v17 = 0;
  }
LABEL_12:

  return v17;
}

uint64_t _CheckRealpathHasBasePrefix(void *a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  bzero(v26, 0x400uLL);
  id v20 = v3;
  realpath_DARWIN_EXTSN((const char *)[v20 fileSystemRepresentation], v26);
  char v5 = [NSString stringWithFileSystemRepresentation:v26];
  unint64_t v6 = [v5 pathComponents];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v7 = [v4 pathComponents];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = 0;
    uint64_t v11 = *(void *)v22;
    while (2)
    {
      uint64_t v12 = v4;
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v22 != v11) {
          objc_enumerationMutation(v7);
        }
        uint64_t v14 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        if (v10 + i < (unint64_t)[v6 count])
        {
          id v15 = [v6 objectAtIndexedSubscript:v10 + i];
          char v16 = [v14 isEqualToString:v15];

          if (v16) {
            continue;
          }
        }
        if (gLogHandle && *(int *)(gLogHandle + 44) < 3)
        {
          uint64_t v17 = 0;
          id v4 = v12;
        }
        else
        {
          [v20 fileSystemRepresentation];
          id v4 = v12;
          uint64_t v19 = [v12 path];
          MOLogWrite();

          uint64_t v17 = 0;
        }
        goto LABEL_16;
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v25 count:16];
      v10 += i;
      uint64_t v17 = 1;
      id v4 = v12;
      if (v9) {
        continue;
      }
      break;
    }
  }
  else
  {
    uint64_t v17 = 1;
  }
LABEL_16:

  return v17;
}

void sub_1BCAB10DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _AllPersonasAssociatedWithIdentifier(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = +[MIUserManagement sharedInstance];
  id v15 = 0;
  char v5 = [v4 personaForBundleID:v3 error:&v15];
  id v6 = v15;

  if (!v5)
  {
    uint64_t v11 = 0;
    goto LABEL_7;
  }
  if (+[ICLFeatureFlags appReferencesEnabled])
  {
    Class Class = objc_getClass("MIAppReferenceManager");
    if (Class)
    {
      uint64_t v8 = [(objc_class *)Class defaultManager];
      id v14 = v6;
      uint64_t v9 = [v8 personaUniqueStringsForAppWithBundleID:v3 error:&v14];
      id v10 = v14;

      uint64_t v11 = (void *)[v9 mutableCopy];
      id v6 = v10;
      if (!v11)
      {
LABEL_7:
        if (!a2) {
          goto LABEL_14;
        }
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v11 = objc_opt_new();
  }
  [v11 addObject:v5];
  if (!a2) {
    goto LABEL_14;
  }
LABEL_12:
  if (!v11) {
    *a2 = v6;
  }
LABEL_14:
  uint64_t v12 = (void *)[v11 copy];

  return v12;
}

uint64_t __MILogHandleForSignpost_block_invoke_0()
{
  MILogHandleForSignpost_logHandle_0 = (uint64_t)os_log_create("com.apple.installd", "Signpost");
  return MEMORY[0x1F41817F8]();
}

uint64_t MIMachOFileMatchesMyArchitecture(const char *a1, void *a2)
{
  char v15 = 0;
  int v14 = 0;
  if (parse_macho_is_file_runnable_for_apps(a1, &v15, &v14) && v15)
  {
    id v5 = 0;
    uint64_t v6 = 1;
    goto LABEL_19;
  }
  if (v14)
  {
    _CreateAndLogError((uint64_t)"MIMachOFileMatchesMyArchitecture", 58, @"MIInstallerErrorDomain", 4, 0, 0, @"Failed to determine if file matches arch for input file: %s because libparsemacho returned error code: %u", v4, (uint64_t)a1);
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v6 = 0;
    if (!a2) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  char v13 = 0;
  uint64_t v7 = +[MITestManager sharedInstance];
  id v12 = 0;
  int v8 = [v7 isRunningInTestMode:&v13 outError:&v12];
  id v5 = v12;
  if (v8)
  {
    if (v13 && [v7 testFlagsAreSet:128])
    {
      if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
        MOLogWrite();
      }
      uint64_t v6 = 1;
    }
    else
    {
      uint64_t v10 = _CreateAndLogError((uint64_t)"MIMachOFileMatchesMyArchitecture", 56, @"MIInstallerErrorDomain", 15, 0, &unk_1F170F8E0, @"Failed to find matching arch for input file: %s", v9, (uint64_t)a1);

      uint64_t v6 = 0;
      id v5 = (id)v10;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  if (a2)
  {
LABEL_17:
    if ((v6 & 1) == 0)
    {
      id v5 = v5;
      uint64_t v6 = 0;
      *a2 = v5;
    }
  }
LABEL_19:

  return v6;
}

__CFString *MIMachOStringForPlatform(uint64_t a1)
{
  if ((a1 - 1) >= 0xC)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown platform: %u", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E62E76B0[(int)a1 - 1];
  }
  return v1;
}

uint64_t MIMachOFileIterateImageVersions(const char *a1, void *a2, void *a3)
{
  id v5 = a3;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __MIMachOFileIterateImageVersions_block_invoke;
  v15[3] = &unk_1E62E7668;
  id v16 = v5;
  id v6 = v5;
  uint64_t v7 = (void *)MEMORY[0x1C1878AA0](v15);
  *__error() = 0;
  uint64_t v8 = parse_macho_iterate_slices(a1, (uint64_t)v7);
  if (v8)
  {
    id v9 = 0;
  }
  else
  {
    uint64_t v10 = __error();
    id v12 = _CreateError((uint64_t)"MIMachOFileIterateImageVersions", 124, (void *)*MEMORY[0x1E4F28798], *v10, 0, 0, @"parse_macho_iterate_slices failed for %s", v11, (uint64_t)a1);
    _CreateAndLogError((uint64_t)"MIMachOFileIterateImageVersions", 124, @"MIInstallerErrorDomain", 73, v12, 0, @"Failed to iterate on macho slices for input file: %s", v13, (uint64_t)a1);
    id v9 = (id)objc_claimAutoreleasedReturnValue();

    if (a2)
    {
      id v9 = v9;
      *a2 = v9;
    }
  }

  return v8;
}

uint64_t __MIMachOFileIterateImageVersions_block_invoke(uint64_t a1)
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2020000000;
  char v7 = 0;
  id v3 = *(id *)(a1 + 32);
  dyld_get_image_versions();
  uint64_t v1 = *((unsigned __int8 *)v5 + 24);

  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1BCAB7B78(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t __MIMachOFileIterateImageVersions_block_invoke_2(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

id MIMachOFileImageSlices(const char *a1, void *a2)
{
  uint64_t v4 = objc_opt_new();
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __MIMachOFileImageSlices_block_invoke;
  v12[3] = &unk_1E62E7690;
  id v5 = v4;
  id v13 = v5;
  uint64_t v6 = (void *)MEMORY[0x1C1878AA0](v12);
  id v11 = 0;
  int v7 = MIMachOFileIterateImageVersions(a1, &v11, v6);
  id v8 = v11;
  id v9 = 0;
  if (v7) {
    id v9 = (void *)[v5 copy];
  }
  if (a2 && !v9) {
    *a2 = v8;
  }

  return v9;
}

uint64_t __MIMachOFileImageSlices_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void **)(a1 + 32);
  int v7 = [[MIMachOImageSlice alloc] initWithCPUType:a2 cpuSubtype:a3 platform:a4 sdkVersion:a5 minOSVersion:a6];
  [v6 addObject:v7];

  return 1;
}

uint64_t MIMachOSimPlatformForPlatform(uint64_t a1)
{
  int v2 = a1 - 2;
  if (a1 - 2) < 0xB && ((0x6E7u >> v2)) {
    return dword_1BCB0A4F0[v2];
  }
  if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
    MIMachOSimPlatformForPlatform_cold_1(a1);
  }
  if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3)
  {
    uint64_t v4 = MIMachOStringForPlatform(a1);
    MOLogWrite();
  }
  return 0;
}

uint64_t MIMachOActiveIOSPlatform()
{
  return 2;
}

BOOL MIDistributorTypeIsFirstPartyApple(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

BOOL MIDistributorTypeIsThirdParty(uint64_t a1)
{
  return a1 == -1;
}

BOOL _IsDictionaryWithKeyStringAndValueArrayOfString(void *a1)
{
  id v1 = a1;
  uint64_t v7 = 0;
  id v8 = &v7;
  uint64_t v9 = 0x2020000000;
  char v10 = 1;
  objc_opt_class();
  id v2 = v1;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  if (v3)
  {
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    void v6[2] = ___IsDictionaryWithKeyStringAndValueArrayOfString_block_invoke;
    v6[3] = &unk_1E62E7718;
    v6[4] = &v7;
    [v2 enumerateKeysAndObjectsUsingBlock:v6];
    BOOL v4 = *((unsigned char *)v8 + 24) != 0;
  }
  else
  {
    if (!gLogHandle || *(int *)(gLogHandle + 44) >= 3) {
      MOLogWrite();
    }
    BOOL v4 = 0;
    *((unsigned char *)v8 + 24) = 0;
  }
  _Block_object_dispose(&v7, 8);

  return v4;
}

void sub_1BCABC0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1BCAC0BF4(void *result)
{
  *uint64_t result = ++qword_1E9FB8B08;
  return result;
}

uint64_t sub_1BCAC0C10(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  uint64_t v34 = *MEMORY[0x1E4F14068];
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = v34;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1BCAC0E6C(mach_port_t a1, unsigned int a2, long long *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  uint64_t v13 = *MEMORY[0x1E4F14068];
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1BCAC0FFC(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  uint64_t v22 = *MEMORY[0x1E4F14068];
  *(_DWORD *)uint64_t v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1BCAC11EC(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1BCAC1368(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F16F9FD0
                + (dword_1E9FB8A18 ^ 0x74u ^ qword_1E9FB7E30 ^ byte_1BCB19910[byte_1BCB167A0[dword_1E9FB8A18 ^ 0x74 ^ qword_1E9FB7E30] ^ 0x4F])
                - 92);
  uint64_t v2 = *(void *)(v1 - 4);
  id v3 = (unint64_t *)*(&off_1F16F9FD0
                           + ((qword_1E9FB7E30 + v2) ^ 0x74u ^ byte_1BCB19710[byte_1BCB163A0[(qword_1E9FB7E30 + v2) ^ 0x74] ^ 0xF8])
                           + 13);
  unint64_t v4 = 267049729 * ((unint64_t)&v6[*v3 - v2] ^ 0x733E1D47A735574);
  *(void *)(v1 - 4) = v4;
  unint64_t *v3 = v4;
  uint64_t v7 = a1;
  unsigned int v8 = 1281 - 535753261 * ((((2 * &v7) | 0xCA73AF1A) - &v7 + 449194099) ^ 0xEFCDD9A2);
  LOBYTE(v3) = *(_DWORD *)(v1 - 4) ^ 0x74 ^ *(_DWORD *)v3;
  (*(void (**)(uint64_t *))((char *)*(&off_1F16F9FD0
                                              + (dword_1E9FB8A18 ^ 0x74u ^ qword_1E9FB7E30 ^ byte_1BCB19910[byte_1BCB167A0[dword_1E9FB8A18 ^ 0x74 ^ qword_1E9FB7E30] ^ 0xF3])
                                              + 5)
                                    + 8
                                    * (*((unsigned char *)off_1F16FA130
                                                                      + (*((unsigned __int8 *)off_1F16FA268
                                                                         + v3
                                                                         - 12) ^ 0x82u)
                                                                      - 4) ^ v3)
                                    + 15668))(&v7);
  return v9;
}

uint64_t sub_1BCAC1554(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA508
         + (*((unsigned __int8 *)off_1F16FA1F0 + a1 - 12) ^ 0xB4u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC1584(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F16FA1C8
         + (*((unsigned char *)off_1F16FA430 + a2 - 12) ^ a1)) ^ a2;
}

uint64_t sub_1BCAC15B0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA448 + ~*((unsigned char *)off_1F16FA220 + a1 - 4)) ^ a1;
}

uint64_t sub_1BCAC15DC(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F16FA1A0 + ((*off_1F16FA008)[a2] ^ a1) - 8) ^ a2;
}

uint64_t sub_1BCAC1608(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA508
         + (*((unsigned __int8 *)off_1F16FA1F0 + a1 - 12) ^ 0xF8u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC1634(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA1A0 + ((*off_1F16FA008)[a1] ^ 0x4Fu) - 8) ^ a1;
}

uint64_t sub_1BCAC1664(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA508
         + (*((unsigned __int8 *)off_1F16FA1F0 + a1 - 12) ^ 0x29u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC1694(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA448 + (*((unsigned __int8 *)off_1F16FA220 + a1 - 4) ^ 0xDDu)) ^ a1;
}

uint64_t sub_1BCAC16C0(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F16F9FD0
                + ((qword_1E9FB7E30 - dword_1E9FB7E38) ^ 0x74u ^ byte_1BCB19710[byte_1BCB163A0[(qword_1E9FB7E30 - dword_1E9FB7E38) ^ 0x74] ^ 0xE8])
                + 142);
  uint64_t v2 = *(void *)(v1 - 4);
  id v3 = (char *)off_1F16FA268 - 12;
  unint64_t v4 = (char *)off_1F16FA130 - 4;
  long long v5 = *(&off_1F16F9FD0
       + (*((unsigned char *)off_1F16FA130
          + (*((unsigned __int8 *)off_1F16FA268 + ((qword_1E9FB7E30 + v2) ^ 0x74u) - 12) ^ 0x82u)
          - 4) ^ (qword_1E9FB7E30 + v2) ^ 0x74u)
       - 103);
  unint64_t v6 = v2 ^ (unint64_t)&v8 ^ *v5;
  *(void *)(v1 - 4) = 267049729 * v6 + 0x48C956030C959174;
  void *v5 = 267049729 * (v6 ^ 0x733E1D47A735574);
  unsigned int v9 = 235795823
     * (((&v9 | 0x2539766F) - &v9 + (&v9 & 0xDAC68990)) ^ 0xB1943F36)
     + 489;
  uint64_t v10 = a1;
  LOBYTE(v5) = (*(_DWORD *)v5 - *(_DWORD *)(v1 - 4)) ^ 0x74;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F16F9FD0
                                                             + (dword_1E9FB7E38 ^ 0x74u ^ qword_1E9FB7E30 ^ byte_1BCB19710[byte_1BCB163A0[dword_1E9FB7E38 ^ 0x74 ^ qword_1E9FB7E30] ^ 0xE8])
                                                             + 110)
                                                   + 8
                                                   * (v5 ^ v4[v3[v5] ^ 0x69])
                                                   + 17180))(&v9);
}

uint64_t sub_1BCAC18A8(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F16FA508
         + (*((unsigned char *)off_1F16FA1F0 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1BCAC18D4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA248 + (*((unsigned __int8 *)off_1F16FA150 + a1) ^ 0x2Du) - 4) ^ a1;
}

uint64_t sub_1BCAC1904(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F16FA448 + (*((unsigned char *)off_1F16FA220 + a2 - 4) ^ a1)) ^ a2;
}

uint64_t sub_1BCAC1930(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA130
         + (*((unsigned __int8 *)off_1F16FA268 + a1 - 12) ^ 0x23u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC1960(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA130
         + (*((unsigned __int8 *)off_1F16FA268 + a1 - 12) ^ 0xC8u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC1990(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA130
         + (*((unsigned __int8 *)off_1F16FA268 + a1 - 12) ^ 0x69u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC19C0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA130
         + (*((unsigned __int8 *)off_1F16FA268 + a1 - 12) ^ 0xBCu)
         - 4) ^ a1;
}

uint64_t sub_1BCAC19F0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA248 + (*((unsigned __int8 *)off_1F16FA150 + a1) ^ 0xFDu) - 4) ^ a1;
}

uint64_t sub_1BCAC1A20(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F16F9FD0
                + (*((unsigned char *)off_1F16FA448
                   + (*((unsigned __int8 *)off_1F16FA220
                      + ((qword_1E9FB7E30 + dword_1E9FB8828) ^ 0x74u)
                      - 4) ^ 0xDDu)) ^ (qword_1E9FB7E30 + dword_1E9FB8828) ^ 0x74u)
                + 69);
  uint64_t v2 = *(void *)(v1 - 4);
  id v3 = *(&off_1F16F9FD0
       + ((qword_1E9FB7E30 + v2) ^ 0x74u ^ byte_1BCB19710[byte_1BCB163A0[(qword_1E9FB7E30 + v2) ^ 0x74] ^ 0xF8])
       + 13);
  unint64_t v4 = (unint64_t)&v6[*v3 ^ v2];
  *(void *)(v1 - 4) = 267049729 * v4 + 0x48C956030C959174;
  void *v3 = 267049729 * (v4 ^ 0x733E1D47A735574);
  unsigned int v7 = 986 - 108757529 * ((2 * (&v7 & 0x79B1DF38) - &v7 - 2041700159) ^ 0x66D242EA);
  uint64_t v8 = a1;
  LOBYTE(v1) = *(_DWORD *)(v1 - 4) ^ 0x74 ^ *(_DWORD *)v3;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F16F9FD0
                                                             + ((qword_1E9FB7E30 + dword_1E9FB8828) ^ 0x74u ^ byte_1BCB19710[byte_1BCB163A0[(qword_1E9FB7E30 + dword_1E9FB8828) ^ 0x74] ^ 0xB4])
                                                             + 86)
                                                   + 8
                                                   * (*((unsigned char *)off_1F16FA508
                                                                                     + (*((unsigned __int8 *)off_1F16FA1F0
                                                                                        + v1
                                                                                        - 12) ^ 0xB4u)
                                                                                     - 4) ^ v1)
                                                   + 16548))(&v7);
}

uint64_t sub_1BCAC1C08(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F16FA248 + (*((unsigned char *)off_1F16FA150 + a2) ^ a1)
                                            - 4) ^ a2;
}

uint64_t sub_1BCAC1C34(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA1C8 + (*((unsigned __int8 *)off_1F16FA430 + a1 - 12) ^ 0x3Au)) ^ a1;
}

uint64_t sub_1BCAC1C60(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F16FA130
         + (*((unsigned char *)off_1F16FA268 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1BCAC1C8C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA1A0 + ((*off_1F16FA008)[a1] ^ 0xF3u) - 8) ^ a1;
}

uint64_t sub_1BCAC1CBC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA508
         + (*((unsigned __int8 *)off_1F16FA1F0 + a1 - 12) ^ 0xE8u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC1CEC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA130
         + (*((unsigned __int8 *)off_1F16FA268 + a1 - 12) ^ 0x82u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC1D1C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F16FA508
         + (*((unsigned __int8 *)off_1F16FA1F0 + a1 - 12) ^ 0x14u)
         - 4) ^ a1;
}

uint64_t sub_1BCAC1D4C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x7EC954F57526279DLL) + 894454067;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x7EC954F57526279DLL) + 894454067;
  int v4 = (v2 < -378353655) ^ (v3 < -378353655);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v5 = v2 < -378353655;
  }
  int v1 = *(_DWORD *)a1 ^ (1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF));
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + v1 - 364)
                              + 8 * ((50 * (((v1 - 1) ^ v5) & 1)) | v1)
                              - 4))();
}

uint64_t sub_1BCAC1E24@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v8 = 17 * (a1 ^ 0x342);
  *(void *)(v2 - 7 + (v5 + v3 - v6)) = *(void *)(a2 - 7 + (v5 + v3 - v6));
  BOOL v9 = (((v8 - 573) | 1) ^ 0x12F) + v6 != ((v8 - 875) & v4);
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * v9) | (16 * v9)) ^ v8)))();
}

uint64_t sub_1BCAC1E88(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a3 + 267 + 3 * (a3 ^ 0x2A3) + 303) * (v3 == a2)) ^ a3)))();
}

uint64_t sub_1BCAC1EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v38 = 628203409 * ((2 * ((v37 - 120) & 0x3B7F2A8) - (v37 - 120) + 2085096789) ^ 0xFEC00166);
  *(_DWORD *)(v37 - 120) = v38 + v35 - 1882358692;
  *(_DWORD *)(v37 - 112) = (v33 ^ 0x2CD98D77) + v38;
  *(void *)(v37 - 104) = &STACK[0x781B11C067844016];
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v34 + 8 * (v35 ^ 0x312)))(v37 - 120);
  return (*(uint64_t (**)(uint64_t))(v34
                                            + 8
                                            * ((25
                                              * (*v36
                                               + 397052914
                                               + ((2 * a33) & 0x76 ^ 0x62)
                                               + (a33 & ((v35 - 772) ^ 0x1F7) ^ ((v35 ^ 0xA0u) + 2004662622)) > 0xFFFFFFBF)) ^ v35)))(v39);
}

uint64_t sub_1BCAC2040(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v7 = v5 - 511081790;
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * ((241
                                                       * (511081790 - v3 - v4 + v7 < ((a3 - 1178941524) & 0x46453A9F ^ 0x284u))) ^ (a3 + 1341))))(a1, 1584496196);
}

uint64_t sub_1BCAC20C8(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 24) - 0x6FE5CF68CB30070DLL) = v3;
  *int v1 = v2;
  return result;
}

uint64_t sub_1BCAC20E8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((252 * (a8 + 1 == v9 + 32)) ^ a1)))();
}

uint64_t sub_1BCAC21BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((6 * ((v0 - 348) ^ 0x16E) + 777) * ((v1 ^ v3) < 0x201)) ^ (v0 - 348))))();
}

uint64_t sub_1BCAC2218@<X0>(unint64_t a1@<X8>)
{
  int v2 = STACK[0x408] ^ 0x2D2;
  unint64_t v4 = STACK[0x5C0];
  STACK[0x488] = *(void *)(v1 + 8 * (int)(STACK[0x408] - 611));
  STACK[0x638] = v4;
  LODWORD(STACK[0x644]) = 292784270;
  STACK[0x5A0] = a1;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((107
                                * ((((v2 ^ 0xF7) - 2) ^ (((2
                                                                          * (*(_DWORD *)(v4 - 0x781B11C067843F56) & 0x3F)) ^ 0x62)
                                                                        + (*(_DWORD *)(v4 - 0x781B11C067843F56) & 0x3F ^ 0x3DDAD74Eu)
                                                                        - 1037752241 < 0xFFFFFFC0)) & 1)) ^ v2)))();
}

uint64_t sub_1BCAC222C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27
                                                              + 8
                                                              * ((1584
                                                                * (v26 + ((a3 - 570679783) & 0x203E1C3) == 984897232)) | (a3 - 570679783) & 0x203E1C3)))(a1, a2, a26);
}

void sub_1BCAC228C(_DWORD *a1)
{
  unsigned int v1 = *a1 + 628203409 * ((-2 - ((~a1 | 0x96C77CC6) + (a1 | 0x69388339))) ^ 0x144F70F5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAC238C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 24) = a5;
  return result;
}

uint64_t sub_1BCAC2394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,unsigned int a43)
{
  int v46 = STACK[0x408] - 345;
  unsigned int v47 = ((LODWORD(STACK[0x62C]) ^ v45) + (v43 ^ v45)) % a43;
  *(_DWORD *)(STACK[0x378] + 52) = (v47 ^ 0x19DEEB97) - 14297728 + ((2 * v47) & 0x572E);
  int v48 = STACK[0x634];
  LODWORD(STACK[0x580]) = STACK[0x634];
  return (*(uint64_t (**)(void))(v44 + 8 * ((1792 * (v48 == v45)) ^ v46)))();
}

uint64_t sub_1BCAC2414(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1202
                                * ((int)((v4 ^ 0xFDF3FEF7) + 1455220666 + (v2 & 0xFBE7FDEE) - 1420879538) > (((a2 + 388) | 0x18) ^ (a2 - 729)))) ^ a2)))();
}

uint64_t sub_1BCAC24A8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  unsigned int v8 = a1 - 32;
  uint64_t v9 = v6 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a5 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a3 == 32) * a4) ^ (v7 + a2 + 1146))))();
}

uint64_t sub_1BCAC24B4()
{
  int v6 = 204 * (v1 ^ 0x10B);
  int v7 = (void *)STACK[0x3E0];
  unint64_t v8 = STACK[0x3E0] + 264;
  v7[31] = 0x34227ED6047D9DB0;
  v7[32] = v8;
  v7[65] = 0x34227ED6047D9DB0;
  v7[66] = v7 + 67;
  STACK[0x3B8] = (unint64_t)v7 + 0x7EC954F5752629A9;
  v7[99] = 0x34227ED6047D9DB0;
  v7[100] = v7 + 101;
  STACK[0x3C0] = (unint64_t)v7 + 0x7EC954F575262AB9;
  v7[133] = 0x34227ED6047D9DB0;
  v7[134] = v7 + 135;
  STACK[0x3E8] = (unint64_t)v7 + 0x7EC954F575262BC9;
  v7[167] = 0x34227ED6047D9DB0;
  v7[168] = v7 + 169;
  STACK[0x400] = (unint64_t)v7 + 0x7EC954F575262CD9;
  unint64_t v9 = STACK[0x568] + 4;
  LODWORD(STACK[0x380]) = 2 * v0;
  *(void *)(v5 - 168) = (char *)v7 + 0x7EC954F575262899;
  LODWORD(v8) = 460628867 * ((2 * ((v5 - 192) & 0xE7E9AF8) - (v5 - 192) - 243178234) ^ 0xBD17E77B);
  LODWORD(STACK[0x3B0]) = v1 + 1254;
  *(void *)(v5 - 192) = v9;
  *(_DWORD *)(v5 - 184) = v1 + 1254 + v8;
  *(_DWORD *)(v5 - 176) = v8 + (v0 ^ 0xA64BBE56) + 2079940600 + ((2 * v0) & 0x39FFD636 ^ 0x31688212);
  uint64_t v10 = 8 * (v1 ^ 0x6FB);
  STACK[0x3A8] = v10;
  (*(void (**)(uint64_t))(v4 + v10))(v5 - 192);
  uint64_t v11 = v9 + v3;
  int v12 = 460628867 * ((v5 - 192) ^ 0x4C96827D);
  int v13 = v1 + 1254 + v12;
  *(void *)(v5 - 192) = v11;
  *(_DWORD *)(v5 - 184) = v13;
  *(_DWORD *)(v5 - 176) = v12 + (v0 ^ 0x60498E56) - 1107595272 + ((v6 ^ 0xB5FBB452) & (2 * v0) ^ 0x3568A212);
  *(void *)(v5 - 168) = STACK[0x3B8];
  uint64_t v14 = 8 * (v1 + 1771);
  (*(void (**)(uint64_t))(v4 + v14))(v5 - 192);
  uint64_t v15 = v11 + v3;
  int v16 = STACK[0x380];
  *(void *)(v5 - 168) = STACK[0x3C0];
  *(_DWORD *)(v5 - 184) = v13;
  *(_DWORD *)(v5 - 176) = v12 + (v0 ^ 0xA0493A9A) + 2113657660 + (v16 & 0x35FADFAE ^ 0x35688A8A);
  *(void *)(v5 - 192) = v15;
  (*(void (**)(uint64_t))(v4 + STACK[0x3A8]))(v5 - 192);
  uint64_t v17 = v15 + v3;
  int v18 = 460628867 * ((((v5 - 192) | 0x77AC0FD9) + (~(v5 - 192) | 0x8853F026)) ^ 0x3B3A8DA5);
  *(void *)(v5 - 192) = v17;
  int v19 = STACK[0x3B0];
  *(_DWORD *)(v5 - 176) = v18 + (v0 ^ 0x844B3E76) + 1509547992 + (v16 & 0x7DFED676 ^ 0x75688212);
  *(_DWORD *)(v5 - 184) = v19 + v18;
  *(void *)(v5 - 168) = STACK[0x3E8];
  (*(void (**)(uint64_t))(v4 + v14))(v5 - 192);
  int v20 = 460628867
      * ((((v5 - 192) ^ 0x86CC717E) + 968922173 - 2 * (((v5 - 192) ^ 0x86CC717E) & 0x39C0943D)) ^ 0xF39A673E);
  *(void *)(v5 - 168) = STACK[0x400];
  *(void *)(v5 - 192) = v17 + v3;
  *(_DWORD *)(v5 - 176) = v20 + (v0 ^ 0x44D0EB6) - 637538536 + (v16 & 0x7DF2B7F6 ^ 0x7560A292);
  *(_DWORD *)(v5 - 184) = v19 + v20;
  (*(void (**)(uint64_t))(v4 + v14))(v5 - 192);
  unint64_t v21 = STACK[0x568];
  unint64_t v22 = (v2 - 1854503558);
  STACK[0x5D8] = v22;
  return (*(uint64_t (**)(unint64_t))(v4
                                                     + 8
                                                     * ((15 * (v22 != 150 * (v6 ^ 0x267) - 450)) ^ (v6 - 162))))(v21);
}

uint64_t sub_1BCAC2894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned __int8 a32,int a33,unint64_t a34)
{
  uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * v34);
  int v39 = STACK[0x310];
  uint64_t v40 = LODWORD(STACK[0x310]);
  int v41 = STACK[0x314];
  int v42 = STACK[0x318];
  int v43 = STACK[0x314];
  int v44 = STACK[0x318];
  int v45 = LOBYTE(STACK[0x324]) ^ 0x5F;
  if (v45 == 2)
  {
    BOOL v50 = (unint64_t)&STACK[0x2C4] < a34 && v38 < (unint64_t)&STACK[0x304];
    return (*(uint64_t (**)(uint64_t, void, void))(v35 + 8 * (((a33 - 838) * v50) ^ ((int)a2 + 1696))))(v40, LODWORD(STACK[0x31C]), LODWORD(STACK[0x31C]));
  }
  else if (v45 == 1)
  {
    BOOL v47 = (unint64_t)&STACK[0x2C4] < a34 && v38 < (unint64_t)&STACK[0x304];
    return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((167 * ((v47 ^ a32) & 1)) ^ ((int)a2 + 363))))(v40);
  }
  else
  {
    LODWORD(STACK[0x30C]) = 2 * (LODWORD(STACK[0x30C]) ^ v37) + v37 - (v36 & (4 * (LODWORD(STACK[0x30C]) ^ v37)));
    LODWORD(STACK[0x310]) = (v40 ^ v37) + (v39 ^ v37) + v37 - (v36 & (2 * ((v40 ^ v37) + (v39 ^ v37))));
    LODWORD(STACK[0x314]) = (v43 ^ v37) + (v41 ^ v37) + v37 - (v36 & (2 * ((v43 ^ v37) + (v41 ^ v37))));
    LODWORD(STACK[0x318]) = (v44 ^ v37) + (v42 ^ v37) + v37 - (v36 & (2 * ((v44 ^ v37) + (v42 ^ v37))));
    return v51(v40, a2, a3, a4, &STACK[0x2C4], a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30);
  }
}

uint64_t sub_1BCAC289C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13)
{
  int v18 = a8 + ((v13 - 413042188) & 0x189E87FB) - 1467;
  int v19 = 628203409 * ((((2 * (v17 - 160)) | 0x18198006) - (v17 - 160) - 202162179) ^ 0x8E84CC30);
  STACK[0x328] = a13;
  STACK[0x338] = a3;
  STACK[0x340] = a11;
  *(_DWORD *)(v17 - 144) = v13 - v19 + 149;
  *(_DWORD *)(v17 - 140) = v16 - v19 + 262867000;
  STACK[0x310] = a12;
  STACK[0x318] = a10;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v13 + 1205)))(v17 - 160);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((*(_DWORD *)(v17 - 128) == v14) * (v18 ^ 0x97E4A0F)) ^ v13)))(v20);
}

uint64_t sub_1BCAC29A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = v6 - 428;
  int v11 = ((v6 - 604) & *(_DWORD *)(v8 + v7 * (uint64_t)a6 + 40)) == 0;
  return (*(uint64_t (**)(void))(v9 + 8 * (((16 * v11) | (v11 << 6)) ^ v10)))();
}

uint64_t sub_1BCAC29D8@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(_DWORD *)(v2 + 392) = a2;
  *(_DWORD *)(v2 + 396) = STACK[0x474];
  *(void *)(v2 + 400) = STACK[0x458];
  *(_DWORD *)(v2 + 408) = 1893250515 - v4 + LODWORD(STACK[0x578]);
  *(void *)(v2 + 416) = STACK[0x3E0] + (v4 + 1880706817);
  int v8 = (*(uint64_t (**)(unint64_t, unint64_t))(v5 + v3 * (uint64_t)a1 + 8))(STACK[0x380], STACK[0x280]);
  return (*(uint64_t (**)(__n128))(v7
                                           + 8
                                           * (((v8 + 984896845 - ((2 * v8) & 0x7568AA9A) == 984896845)
                                             * (((v6 + 792) | 0x40) ^ 0x6BF)) ^ v6)))((__n128)0);
}

uint64_t sub_1BCAC2AA8()
{
  int v5 = 535753261 * ((v4 - 144) ^ 0xAF40E2F);
  *(void *)(v4 - 136) = v2;
  *(_DWORD *)(v4 - 144) = v5 + v3 + 392;
  *(void *)(v4 - 120) = v7;
  *(_DWORD *)(v4 - 128) = v10 - v5 + 1159319401 + (v3 ^ 0x359);
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 ^ 0xEBB)))(v4 - 144);
  *uint64_t v9 = v8;
  *(_DWORD *)(v0 + 64) = 984896845;
  return result;
}

uint64_t sub_1BCAC2B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 535753261 * ((2 * ((v19 - 136) & 0x630BDF70) - (v19 - 136) + 485761164) ^ 0x16002EA3);
  *(void *)(v19 - 136) = v18;
  *(_DWORD *)(v19 - 128) = v14 + ((v17 - 7) ^ 0x79EE137A) + v20;
  *(_DWORD *)(v19 - 124) = v20 + v17 + 782;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0x916)))(v19 - 136);
  *(void *)(v19 - 128) = a13;
  *(void *)(v19 - 120) = a14;
  *(_DWORD *)(v19 - 136) = (v17 + 179) ^ (1374699841
                                        * ((2 * ((v19 - 136) & 0x2F83ECE8) - (v19 - 136) + 1350308629) ^ 0x3D880B1C));
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * ((v17 - 7) ^ 0x903)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((202
                                              * (*(_DWORD *)(v19 - 132) <= v15
                                                                         + 2 * (((v17 + 576) | 0x4E) ^ 0x38Cu)
                                                                         - 166)) ^ (v17 - 7))))(v21);
}

uint64_t sub_1BCAC2C4C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((29 * (v0 >= ((STACK[0x408] + 15) ^ 0xCF4DCCE0))) ^ (STACK[0x408] + 10))))();
}

uint64_t sub_1BCAC2C8C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1202
                                * (*(_DWORD *)(v2 + 4 * (((((v3 + 1808758639) & 0x943083EE) - 397) ^ (a1 + 48)) + v4)) == v1)) ^ (v3 - 1186))))();
}

void sub_1BCAC2CE0(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x7EC954F57526279DLL) = (((v3 + v2) * (v1 - 869762700)) ^ 0x7DE3FEFE)
                                         - 1237418024
                                         + ((2 * (v3 + v2) * (v1 - 869762700)) & 0xFBC7FDFC);
}

uint64_t sub_1BCAC2D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v12 = v9 + 287309830;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((238 * (a4 - v8 - v10 + v12 > 0xE)) ^ 0x17Eu)))(a1, a2, a3, a4, 2515444549, a6, a7, a8);
}

uint64_t sub_1BCAC2DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int8x16x4_t v67 = vld4q_s8(a5);
  uint64_t v48 = (HIDWORD(a32) - 1492486827) & 0x58F58770;
  uint8x16_t v49 = (uint8x16_t)veorq_s8(v67.val[1], v47);
  _Q17 = vmovl_u8(*(uint8x8_t *)v49.i8);
  _Q16 = vmovl_high_u8(v49);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint64_t v58 = 25 * (v48 ^ 0x27);
  uint64_t v59 = (_DWORD *)(v45 + 4 * (v44 + 16 + v43));
  int v60 = *(v59 - 8) ^ *(v59 - 3);
  int v61 = *(v59 - 16) ^ *(v59 - 14) ^ (v60 + (v58 ^ (v46 - 1339)) - ((2 * v60) & 0x7568AA9A));
  HIDWORD(v63) = v61 ^ v46;
  LODWORD(v63) = v61;
  int v62 = v63 >> 31;
  uint64_t v64 = (2 * v62) & 0x7568AA9A;
  *uint64_t v59 = v62 + v46 - v64;
  int v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * ((25 * (v44 + 17 == v44 + 80)) ^ ((int)v48 + 1334)));
  return v65(a1, a2, a3, v48, v65, v58, v44 + 17, v64, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1BCAC2FC8(int a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 201956065;
  return (*(uint64_t (**)(void))(v3 + 8 * (((*(_DWORD *)(a2 + 4) == v2 + 291) * (((a1 + 34) ^ 0x5FC) - 44)) | a1)))();
}

uint64_t sub_1BCAC3018@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((42 * (((a1 == v2) | v3) != 0)) ^ 0x4CF)))();
}

uint64_t sub_1BCAC302C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((((v1 + 1325739869) & 0xB0FAD43B ^ 0x7EF) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_1BCAC306C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v65 = 3 * (v60 ^ 0x465);
  int v66 = (unsigned __int8 *)&STACK[0x1920] + v61;
  unsigned __int8 v67 = *(unsigned char *)a1;
  *(void *)(v66 + 17) = *(void *)(a1 + 1);
  *(_DWORD *)(v66 + 25) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v66 + 29) = *(_WORD *)(a1 + 13);
  v66[31] = *(unsigned char *)(a1 + 15);
  uint64_t v68 = *(void *)(a1 + 8);
  *(void *)int v66 = *(void *)a1;
  *((void *)v66 + 1) = v68;
  v66[16] = v67;
  v66 += 16;
  uint64_t v69 = *(void *)(v63 + 8 * (v65 ^ 0x4B8)) - 8;
  unsigned int v70 = (v65 + 2067608387) & 0x84C2C9FF;
  uint64_t v71 = *(void *)(v63 + 8 * (v65 - 909)) - 12;
  int v72 = ((v65 + 2067608387) ^ a7 ^ v66[4]) + *(unsigned __int8 *)(v71 + (v66[4] ^ 0x42)) - 102;
  uint64_t v73 = *(void *)(v63 + 8 * (v65 ^ 0x41A));
  LOBYTE(v68) = *(unsigned char *)(v73 + (v66[14] ^ 0x86));
  int v74 = v72 ^ 0xE6;
  char v75 = *(unsigned char *)(v73 + (v66[10] ^ 0xCBLL));
  int v76 = (((*(unsigned __int8 *)(v71 + (v66[8] ^ 0x65)) + (v66[8] ^ 0x34) - 102) ^ 0xF5) << 24) | (((v75 ^ (16 * v75)) ^ 0x89) << 8);
  uint64_t v77 = *(void *)(v63 + 8 * (v65 - 1022)) - 8;
  unsigned int v78 = *(unsigned __int8 *)(v77 + (v66[1] ^ 0x1ALL));
  int v79 = (v78 >> 1) ^ (((((v78 ^ 0xC8) + (v78 & 0xD5 ^ 0x3F) + 1) ^ v78 & 0xDF) & 0xF0) >> 4) ^ 0xF;
  int v80 = ((v66[3] ^ 0xB8) + *(unsigned char *)(v69 + (v66[3] ^ 0x54)) - 94) | (((v78 ^ (v79 - ((2 * v79) & 0x94) - 54)) ^ 0xC1) << 16);
  LOBYTE(v79) = *(unsigned char *)(v73 + (v66[6] ^ 0x2ELL));
  unsigned int v81 = v76 & 0xFFFFFF00 | ((v66[11] ^ 0x3E) + *(unsigned char *)(v69 + (v66[11] ^ v62)) - 94);
  unsigned int v82 = *(unsigned char *)(v77 + (v66[13] ^ a2)) ^ 0x1D;
  int v83 = ((v66[7] ^ 0x90) + *(unsigned char *)(v69 + (v66[7] ^ 0x7CLL)) - 94) | (v74 << 24) | (((v79 ^ (16 * v79)) ^ 0x95) << 8);
  int v84 = *(unsigned __int8 *)(v77 + (v66[13] ^ a2)) ^ 0x1D ^ (v82 >> 4) ^ (v82 >> 1);
  LODWORD(v68) = (((v68 ^ (16 * v68)) ^ 0x45) << 8) | ((v84 - ((2 * v84) & 0x2E) + 23) << 16);
  LOBYTE(v84) = *(unsigned char *)(v77 + (v66[5] ^ 0xEDLL));
  int v85 = ((v84 ^ 0x1D) >> 4) ^ ((v84 ^ 0x1D) >> 1);
  uint64_t v350 = v77;
  unsigned int v86 = v83 & 0xFF00FFFF | ((v84 ^ 0x6C ^ (v85 - ((2 * v85) & 0xBC) + 94)) << 16);
  LOBYTE(v84) = *(unsigned char *)(v77 + (v66[9] ^ 0x38)) ^ ((*(unsigned char *)(v77 + (v66[9] ^ 0x38)) ^ 0x1D) >> 4) ^ ((*(unsigned char *)(v77 + (v66[9] ^ 0x38)) ^ 0x1D) >> 1);
  uint64_t v352 = v71;
  uint64_t v353 = v69;
  uint64_t v351 = v73;
  unsigned int v87 = v80 & 0xFFFF00FF | (((*(unsigned __int8 *)(v71 + (*v66 ^ 0x81)) + (*v66 ^ 0xD0) - 102) ^ 0x3C) << 24) | (((*(unsigned char *)(v73 + (v66[2] ^ 0x22)) ^ (16 * *(unsigned char *)(v73 + (v66[2] ^ 0x22)))) ^ 0xBB) << 8);
  LODWORD(STACK[0x3C0]) = (v68 & 0xFFFFFF00 | ((((v66[12] ^ 0x13) + *(unsigned __int8 *)(v71 + (v66[12] ^ 0x42)) - 102) ^ 0xE6) << 24) | (*(unsigned char *)(v69 + (v66[15] ^ 0x38)) + (v66[15] ^ 0xD4) - 94)) ^ 0xFA565627;
  LODWORD(STACK[0x370]) = v87 ^ 0x820AB173;
  LODWORD(STACK[0x268]) = v86 ^ 0xDF8F2371;
  LODWORD(STACK[0x3A8]) = (v81 & 0xFF00FFFF | ((v84 ^ 0xB6) << 16)) ^ 0xC2BD17C7;
  v348 = (unsigned char *)STACK[0x618];
  v349 = (unsigned __int8 *)STACK[0x620];
  HIDWORD(v347) = 104954743;
  STACK[0x3B8] = 14;
  uint64_t v88 = v73;
  int v89 = *(unsigned __int8 *)(v73 + (v349[14] ^ 0xD9));
  LODWORD(v347) = v70 - 49;
  HIDWORD(v359) = 3 * (v70 ^ 0x17);
  unint64_t v90 = HIDWORD(v359) ^ (v70 + 104955438) ^ 0x6417B73;
  STACK[0x280] = v90;
  uint64_t v91 = v349[v90];
  LODWORD(STACK[0x400]) = (((16 * v89) ^ 0x60) - ((2 * ((16 * v89) ^ 0x60)) & 0xFFFFFFBF) + 86) ^ v89;
  uint64_t v92 = v69;
  LOBYTE(v66) = *(unsigned char *)(v71 + (v91 ^ 0xE6));
  LOBYTE(v89) = v91 ^ 0xB7;
  STACK[0x3E8] = 15;
  int v93 = v349[15];
  unsigned __int8 v94 = ((_BYTE)v66 + v89 - 102) ^ 0xE5;
  if ((v93 & 0x20) != 0) {
    int v95 = -32;
  }
  else {
    int v95 = 32;
  }
  int v363 = *(unsigned __int8 *)(v69 + ((v95 + v93) ^ 0xDDLL)) + ((v95 + v93) ^ 0x31);
  STACK[0x3B0] = 6;
  int v96 = *(unsigned __int8 *)(v73 + (v349[6] ^ 0x51));
  STACK[0x2D0] = 12;
  HIDWORD(v97) = v96 ^ (((16 * v96) ^ 0x60) + (~(2 * ((16 * v96) ^ 0x60)) | 0x5F) + 87) ^ 0x3F;
  LODWORD(v97) = BYTE4(v97) & 0xF8;
  STACK[0x230] = 0;
  unint64_t v98 = ((v97 >> 3) | ((unint64_t)v94 << 13)) ^ 0x58F620A6;
  int v99 = (v98 >> 21) | (v98 << 11);
  int v362 = *(unsigned __int8 *)(v71 + (v349[12] ^ 0xF7) - 2 * ((v349[12] ^ 0xF7) & 0xAEu) + 174) - (v349[12] ^ 0xF7);
  uint64_t v100 = *v349;
  STACK[0x368] = 3;
  uint64_t v101 = v349[3];
  int v102 = *(unsigned __int8 *)(v71 + (v100 ^ 0xD8)) + (v100 ^ 0x76) - 2 * (v100 ^ 0x76);
  int v103 = *(unsigned __int8 *)(v69 + (v101 ^ 0x57));
  STACK[0x380] = 8;
  int v360 = (v101 ^ 0xFFFFFFBB) + v103;
  LOBYTE(v96) = (v349[8] ^ 0xA7) + *(unsigned char *)(v71 + (v349[8] ^ 0xF6));
  char v104 = v96 - ((2 * v96 + 52) & 0x4E);
  STACK[0x2D8] = 7;
  LOBYTE(v96) = (v349[7] ^ 0xE9) + *(unsigned char *)(v69 + (v349[7] ^ 5)) - 94;
  STACK[0x208] = 13;
  int v105 = *(unsigned __int8 *)(v350 + (v349[13] ^ 0x12));
  unsigned __int8 v106 = *(unsigned char *)(v350 + (v349[5] ^ 0x9CLL));
  unsigned int v107 = v105 ^ ((((v105 ^ 0x1Du) >> 3) & 4 ^ v105 & 0xA4 | ((v105 ^ 0x1Du) >> 3) & 0xFFFFFFFB ^ (v105 ^ 0x1D) & 0x5A) >> 1);
  int v108 = ((v106 ^ 0x1D) >> 4) ^ ((v106 ^ 0x1D) >> 1);
  int v109 = v96 | ((v106 ^ 0xE6 ^ (v108 - ((2 * v108) & 0xBC) + 94)) << 16);
  int v110 = *(unsigned __int8 *)(v350 + (v349[9] ^ 0x76));
  unsigned int v111 = (v110 & 8 | (16 * ((v110 & 8) != 0)) | 0xFFFFFFC7) ^ 0x10;
  unsigned int v112 = (v110 ^ 0x1Du) >> 3;
  BOOL v113 = ((v111 + 17) & v112) == 0;
  char v114 = v111 + 124;
  char v115 = 26 - v111;
  if (v113) {
    char v115 = v114;
  }
  int v116 = v110 ^ ((((v112 + v115 - 75) ^ (v110 ^ 0x1D) & 0xF7) & 0xFE) >> 1);
  char v117 = *(unsigned char *)(v92 + (v349[11] ^ 0x12)) + (v349[11] ^ 0xFE);
  int v118 = *(unsigned __int8 *)(v350 + (v349[1] ^ 0xCFLL));
  unsigned int v119 = v118 & 0xFFFFFFBF ^ ((v118 | 0xFFFFFFBF) + 68) ^ 0x1E;
  long long v120 = (char *)*(&off_1F16F9FD0 + (int)(v70 ^ 0x11C)) - 4;
  LODWORD(v359) = v107;
  int v121 = *(_DWORD *)&v120[4 * (v107 ^ 0x6A)];
  int v122 = v119 ^ (v119 >> 4) ^ (v119 >> 1);
  char v123 = *(unsigned char *)(v88 + (v349[10] ^ 0xFBLL));
  int v124 = (v123 ^ (16 * v123)) ^ 0x8F;
  v125 = (char *)*(&off_1F16F9FD0 + (int)(v70 - 229)) - 4;
  int v126 = *(_DWORD *)&v125[4 * (v123 ^ (16 * v123))];
  HIDWORD(v127) = v126 ^ 0xE708;
  LODWORD(v127) = v126 ^ 0x5E500000;
  LODWORD(v357) = v124;
  HIDWORD(v357) = v102 - 103;
  HIDWORD(v364) = v70;
  uint64_t v128 = (char *)*(&off_1F16F9FD0 + (int)(v70 ^ 0x1F3)) - 4;
  int v129 = (v127 >> 16) ^ *(_DWORD *)&v128[4 * ((v102 - 103) ^ 0xF9)] ^ (16 * (v121 ^ 0x5AD1FA42)
                                                                                      - 1075532640
                                                                                      - ((32 * (v121 ^ 0x5AD1FA42)) & 0x7FC95940));
  HIDWORD(v356) = v109 ^ v99;
  unsigned int v130 = v109 ^ v99 ^ 0xDD03A24B;
  v131 = (char *)*(&off_1F16F9FD0 + (int)(v70 ^ 0x1DF)) - 4;
  unsigned int v132 = *(_DWORD *)&v131[4 * ((v109 ^ v99) ^ 0x78)] ^ v121 ^ (v129
                                                                              - 1852648702
                                                                              - ((2 * v129) & 0x2325A604));
  int v133 = *(_DWORD *)&v125[4 * (LODWORD(STACK[0x400]) ^ 0x71)];
  HIDWORD(v127) = v133 ^ 0xE708;
  LODWORD(v127) = v133 ^ 0x5E500000;
  unint64_t v358 = __PAIR64__(v116, v122);
  int v134 = *(_DWORD *)&v120[4 * (v122 ^ 0xBF)] ^ 0x5AD1FA42;
  int v135 = (v127 >> 16) ^ (16 * v134 - 1075532640 - ((32 * v134) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * HIBYTE(v130)];
  LODWORD(v356) = (v117 - 94);
  int v136 = *(_DWORD *)&v131[4 * (v356 ^ 0xB9)] ^ v134 ^ (v135 - 1852648702 - ((2 * v135) & 0x2325A604));
  unsigned int v137 = *(unsigned __int8 *)(v88 + (v349[2] ^ 0x26)) ^ 0xFFFFFFEE;
  int v138 = v137 ^ (16 * v137);
  int v139 = *(_DWORD *)&v120[4 * BYTE2(v130)] ^ 0x5AD1FA42;
  HIDWORD(v355) = v138;
  int v140 = *(_DWORD *)&v125[4 * (v138 ^ 0xFB)];
  HIDWORD(v127) = v140 ^ 0xE708;
  LODWORD(v127) = v140 ^ 0x5E500000;
  HIDWORD(v354) = (v104 - 63);
  int v141 = (v127 >> 16) ^ *(_DWORD *)&v128[4 * (HIDWORD(v354) ^ 0x40)] ^ (16 * v139
                                                                      - 1075532640
                                                                      - ((32 * v139) & 0x7FC95940));
  LODWORD(v355) = v363 - 94;
  unsigned int v142 = *(_DWORD *)&v131[4 * ((v363 - 94) ^ 0xEB)] ^ v139 ^ (v141
                                                                             - 1852648702
                                                                             - ((2 * v141) & 0x2325A604));
  int v143 = *(_DWORD *)&v125[4 * (BYTE1(v99) ^ 0x31)];
  HIDWORD(v127) = v143 ^ 0xE708;
  LODWORD(v127) = v143 ^ 0x5E500000;
  int v144 = *(_DWORD *)&v120[4 * (v116 ^ 0x61)] ^ 0x5AD1FA42;
  LODWORD(v354) = v362 - 103;
  int v145 = (v127 >> 16) ^ *(_DWORD *)&v128[4 * ((v362 - 103) ^ 0xF7)] ^ (16 * v144
                                                                                      - 1075532640
                                                                                      - ((32 * v144) & 0x7FC95940));
  HIDWORD(a24) = v360 - 94;
  unsigned int v146 = *(_DWORD *)&v131[4 * ((v360 - 94) ^ 0x33)] ^ v144 ^ (v145
                                                                             - 1852648702
                                                                             - ((2 * v145) & 0x2325A604));
  int v147 = *(_DWORD *)&v125[4 * (BYTE1(v142) ^ 0xF4)];
  HIDWORD(v127) = v147 ^ 0xE708;
  LODWORD(v127) = v147 ^ 0x5E500000;
  int v148 = *(_DWORD *)&v120[4 * (BYTE2(v146) ^ 0xBB)] ^ 0x5AD1FA42;
  unsigned __int8 v149 = BYTE1(v136) ^ 0xAD;
  int v150 = *(_DWORD *)&v120[4 * (BYTE2(v132) ^ 0x3D)];
  unsigned int v151 = v148 ^ *(_DWORD *)&v128[4 * (HIBYTE(v132) ^ 0xD)] ^ *(_DWORD *)&v131[4 * (v136 ^ 0xDB)] ^ (16 * v148 - 1075532640 - ((32 * v148) & 0x7FC95940)) ^ (v127 >> 16);
  int v152 = *(_DWORD *)&v125[4 * ((unsigned __int16)(v146 ^ 0x22E) >> 8)];
  HIDWORD(v127) = v152 ^ 0xE708;
  LODWORD(v127) = v152 ^ 0x5E500000;
  int v153 = (16 * (v150 ^ 0x5AD1FA42) - 1075532640 - ((32 * (v150 ^ 0x5AD1FA42)) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * ((v136 ^ 0xF15ADDBu) >> 24)] ^ (v127 >> 16);
  unsigned int v154 = *(_DWORD *)&v131[4 * (v142 ^ 0x80)] ^ v150 ^ (v153 - 1852648702 - ((2 * v153) & 0x2325A604));
  int v155 = *(_DWORD *)&v120[4 * (BYTE2(v136) ^ 0xD6)] ^ 0x5AD1FA42;
  int v156 = *(_DWORD *)&v125[4 * (BYTE1(v132) ^ 0x1C)];
  int v157 = (16 * v155 - 1075532640 - ((32 * v155) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * (HIBYTE(v142) ^ 0x19)];
  HIDWORD(v127) = v156 ^ 0xE708;
  LODWORD(v127) = v156 ^ 0x5E500000;
  unsigned int v158 = *(_DWORD *)&v131[4 * (v146 ^ 0x2E)] ^ v155 ^ (v127 >> 16) ^ (v157
                                                                                     - 1852648702
                                                                                     - ((2 * v157) & 0x2325A604));
  int v159 = *(_DWORD *)&v120[4 * (BYTE2(v142) ^ 0x32)];
  int v160 = *(_DWORD *)&v125[4 * v149];
  HIDWORD(v127) = v160 ^ 0xE708;
  LODWORD(v127) = v160 ^ 0x5E500000;
  int v161 = (v127 >> 16) ^ *(_DWORD *)&v128[4 * (HIBYTE(v146) ^ 0xBD)] ^ (16 * (v159 ^ 0x5AD1FA42)
                                                                     - 1075532640
                                                                     - ((32 * (v159 ^ 0x5AD1FA42)) & 0x7FC95940));
  int v162 = v159 ^ *(_DWORD *)&v131[4 * (v132 ^ 0xE2)] ^ 0x2B182C86 ^ (v161
                                                                                   - 1852648702
                                                                                   - ((2 * v161) & 0x2325A604));
  unsigned int v163 = v162
       - ((2 * v162) & 0x5F186BF6)
       + 797718011
       - ((2 * (v162 - ((2 * v162) & 0x5F186BF6) + 797718011)) & 0xBBEBF684)
       - 571081918;
  int v164 = *(_DWORD *)&v120[4 * (BYTE2(v163) ^ 0x36)];
  BYTE2(v161) = BYTE2(v158) ^ 0xEB;
  int v165 = *(_DWORD *)&v125[4 * ((unsigned __int16)(v158 ^ 0xDFF9) >> 8)];
  unsigned int v166 = (16 * (v164 ^ 0x5AD1FA42) - 1075532640 - ((32 * (v164 ^ 0x5AD1FA42)) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * (HIBYTE(v151) ^ 7)] ^ (((v165 ^ 0x5E50E708u) >> (v151 & 0x10) >> (v151 & 0x10 ^ 0x10)) + ((v165 << 16) ^ 0xE7080000));
  unsigned int v167 = *(_DWORD *)&v131[4 * (v154 ^ 0x9B)] ^ v164 ^ (v166 - 1852648702 - ((2 * v166) & 0x2325A604));
  LOWORD(v164) = v151 ^ 0x722;
  int v168 = *(_DWORD *)&v120[4 * ((v151 ^ 0xEEC80722) >> 16)] ^ 0x5AD1FA42;
  int v169 = *(_DWORD *)&v125[4 * (BYTE1(v163) ^ 0x68)];
  HIDWORD(v127) = v169 ^ 0xE708;
  LODWORD(v127) = v169 ^ 0x5E500000;
  int v170 = (16 * v168 - 1075532640 - ((32 * v168) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * (HIBYTE(v154) ^ 0x11)] ^ (v127 >> 16);
  int v171 = *(_DWORD *)&v131[4 * (v158 ^ 0xF9)];
  int v172 = *(_DWORD *)&v128[4 * (HIBYTE(v158) ^ 5)];
  HIDWORD(v127) = v172 ^ 0xA0;
  LODWORD(v127) = v172 ^ 0xBFE4AC00;
  unsigned int v173 = v171 ^ v168 ^ (v170 - 1852648702 - ((2 * v170) & 0x2325A604));
  int v174 = *(_DWORD *)&v120[4 * (BYTE2(v154) ^ 0xE4)] ^ 0x5AD1FA42;
  int v175 = *(_DWORD *)&v125[4 * BYTE1(v164)];
  unsigned int v176 = (((v127 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v174) ^ (((v127 >> 10) ^ 0x25EB099C) >> 22);
  HIDWORD(v127) = v175 ^ 0xE708;
  LODWORD(v127) = v175 ^ 0x5E500000;
  int v177 = *(_DWORD *)&v125[4 * (BYTE1(v154) ^ 0x37)];
  int v178 = *(_DWORD *)&v131[4 * (v163 ^ 0x71)] ^ v174 ^ (v127 >> 16) ^ (v176
                                                                                     - 1852648702
                                                                                     - ((2 * v176) & 0x2325A604));
  HIDWORD(v127) = v177 ^ 0xE708;
  LODWORD(v127) = v177 ^ 0x5E500000;
  int v179 = *(_DWORD *)&v120[4 * BYTE2(v161)] ^ 0x5AD1FA42;
  int v180 = (v127 >> 16) ^ (16 * v179 - 1075532640 - ((32 * v179) & 0x7FC95940)) ^ *(_DWORD *)&v128[4
                                                                                               * (HIBYTE(v163) ^ 0x34)];
  unsigned int v181 = *(_DWORD *)&v131[4 * (v164 ^ 0x33)] ^ v179 ^ (v180 - 1852648702 - ((2 * v180) & 0x2325A604));
  int v182 = *(_DWORD *)&v120[4 * (BYTE2(v181) ^ 0x62)] ^ 0x5AD1FA42;
  int v183 = (16 * v182 - 1075532640 - ((32 * v182) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * (HIBYTE(v167) ^ 0x87)];
  unsigned __int8 v184 = BYTE2(v178) ^ 0xF7;
  int v185 = *(_DWORD *)&v125[4 * ((unsigned __int16)(v178 ^ 0xE4A6) >> 8)];
  HIDWORD(v127) = v185 ^ 0xE708;
  LODWORD(v127) = v185 ^ 0x5E500000;
  unsigned int v186 = *(_DWORD *)&v131[4 * (v173 ^ 0x68)] ^ v182 ^ (v127 >> 16) ^ (v183
                                                                                     - 1852648702
                                                                                     - ((2 * v183) & 0x2325A604));
  int v187 = *(_DWORD *)&v120[4 * (BYTE2(v167) ^ 0x8A)] ^ 0x5AD1FA42;
  int v188 = *(_DWORD *)&v125[4 * ((unsigned __int16)(v181 ^ 0x2957) >> 8)];
  HIDWORD(v127) = v188 ^ 0xE708;
  LODWORD(v127) = v188 ^ 0x5E500000;
  int v189 = (16 * v187 - 1075532640 - ((32 * v187) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * (HIBYTE(v173) ^ 0xCE)] ^ (v127 >> 16);
  unsigned int v190 = *(_DWORD *)&v131[4 * (v178 ^ 0x15)] ^ v187 ^ (v189 - 1852648702 - ((2 * v189) & 0x2325A604));
  int v191 = *(_DWORD *)&v120[4 * (BYTE2(v173) ^ 0x60)] ^ 0x5AD1FA42;
  int v192 = *(_DWORD *)&v125[4 * (BYTE1(v167) ^ 0x61)];
  HIDWORD(v127) = v192 ^ 0xE708;
  LODWORD(v127) = v192 ^ 0x5E500000;
  int v193 = (16 * v191 - 1075532640 - ((32 * v191) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * ((v178 ^ 0xF1F7E4A6) >> 24)] ^ (v127 >> 16);
  int v194 = *(_DWORD *)&v131[4 * (v181 ^ 0x57)] ^ v191 ^ (v193 - 1852648702 - ((2 * v193) & 0x2325A604));
  BOOL v113 = (v173 & 0x1000) == 0;
  int v195 = BYTE1(v173) ^ 0xC;
  if (v113) {
    int v196 = 16;
  }
  else {
    int v196 = -16;
  }
  int v197 = *(_DWORD *)&v120[4 * v184] ^ 0x5AD1FA42;
  unsigned int v198 = *(_DWORD *)&v125[4 * ((v195 + v196) ^ 0x83)];
  int v199 = *(_DWORD *)&v128[4 * (HIBYTE(v181) ^ 0xA1)] ^ HIWORD(v198);
  unsigned int v200 = v199 ^ (v198 << 16) ^ (16 * v197 - 1075532640 - ((32 * v197) & 0x7FC95940)) ^ 0xE7085E50;
  int v201 = *(_DWORD *)&v131[4 * (v167 ^ 0x21)] ^ v197 ^ (v200
                                                                      - 1852648702
                                                                      - 2 * (v200 & 0x1192D30F ^ v199 & 0xD));
  unsigned int v202 = v201 ^ 0xEFBC3B44;
  int v203 = *(_DWORD *)&v120[4 * ((v201 ^ 0xEFBC3B44) >> 16)] ^ 0x5AD1FA42;
  int v204 = *(_DWORD *)&v125[4 * ((unsigned __int16)(v194 ^ 0x8D48) >> 8)];
  HIDWORD(v205) = v204 ^ 0xE708;
  LODWORD(v205) = v204 ^ 0x5E500000;
  int v206 = (v205 >> 16) ^ *(_DWORD *)&v128[4 * (HIBYTE(v186) ^ 0xCC)] ^ (16 * v203
                                                                     - 1075532640
                                                                     - ((32 * v203) & 0x7FC95940));
  int v207 = *(_DWORD *)&v131[4 * (v190 ^ 0xA9)] ^ v203 ^ (v206 - 1852648702 - ((2 * v206) & 0x2325A604));
  int v208 = v186 ^ 0x255FD583;
  int v209 = *(_DWORD *)&v120[4 * (BYTE2(v208) ^ 0xC3)] ^ 0x5AD1FA42;
  int v210 = *(_DWORD *)&v125[4 * ((unsigned __int16)(v201 ^ 0x3B44) >> 8)];
  HIDWORD(v205) = v210 ^ 0xE708;
  LODWORD(v205) = v210 ^ 0x5E500000;
  int v211 = (v205 >> 16) ^ *(_DWORD *)&v128[4 * HIBYTE(v190)] ^ (16 * v209 - 1075532640 - ((32 * v209) & 0x7FC95940));
  unsigned int v212 = *(_DWORD *)&v131[4 * (v194 ^ 0x48)] ^ v209 ^ (v211 - 1852648701 + ~((2 * v211) & 0x2325A604));
  int v213 = *(_DWORD *)&v120[4 * ((v190 ^ 0xE93411A9) >> 16)] ^ 0x5AD1FA42;
  int v214 = *(_DWORD *)&v125[4 * BYTE1(v208)];
  HIDWORD(v205) = v214 ^ 0xE708;
  LODWORD(v205) = v214 ^ 0x5E500000;
  int v215 = (16 * v213 - 1075532640 - ((32 * v213) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * ((v194 ^ 0x807D8D48) >> 24)] ^ (v205 >> 16);
  unsigned int v216 = *(_DWORD *)&v131[4 * (v201 ^ 0x77)] ^ v213 ^ (v215 - 1852648702 - ((2 * v215) & 0x2325A604));
  int v217 = *(_DWORD *)&v120[4 * (BYTE2(v194) ^ 0xBE)] ^ 0x5AD1FA42;
  int v218 = *(_DWORD *)&v125[4 * (BYTE1(v190) ^ 0x82)];
  HIDWORD(v205) = v218 ^ 0xE708;
  LODWORD(v205) = v218 ^ 0x5E500000;
  int v219 = (v205 >> 16) ^ *(_DWORD *)&v128[4 * HIBYTE(v202)] ^ (16 * v217 - 1075532640 - ((32 * v217) & 0x7FC95940));
  int v220 = *(_DWORD *)&v131[4 * v208] ^ v217;
  int v221 = *(_DWORD *)&v125[4 * (BYTE1(v216) ^ 0x89)];
  unsigned int v222 = v220 ^ (v219 - 1852648702 - ((2 * v219) & 0x2325A604));
  HIDWORD(v205) = v221 ^ 0xE708;
  LODWORD(v205) = v221 ^ 0x5E500000;
  int v223 = *(_DWORD *)&v120[4 * ((v222 ^ 0x950DA39D) >> 16)] ^ 0x5AD1FA42;
  int v224 = (16 * v223 - 1075532640 - ((32 * v223) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * ((v207 ^ 0x11521BCAu) >> 24)];
  int v225 = v224 - 1852648702 - 2 * (v224 & 0x1192D306 ^ *(_DWORD *)&v128[4 * ((v207 ^ 0x11521BCAu) >> 24)] & 4);
  BYTE1(v224) = BYTE1(v212) ^ 0xD1;
  int v226 = *(_DWORD *)&v131[4 * (v212 ^ 0x88)] ^ v223 ^ (v205 >> 16) ^ 0x71C9D6C4 ^ v225;
  int v227 = *(_DWORD *)&v120[4 * ((v207 ^ 0x11521BCAu) >> 16)];
  int v228 = *(_DWORD *)&v125[4 * (BYTE1(v222) ^ 0x30)];
  HIDWORD(v205) = v228 ^ 0xE708;
  LODWORD(v205) = v228 ^ 0x5E500000;
  int v229 = (16 * (v227 ^ 0x5AD1FA42) - 1075532640 - ((32 * (v227 ^ 0x5AD1FA42)) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * (HIBYTE(v212) ^ 0xDF)] ^ (v205 >> 16);
  v216 ^= 0x7A851A70u;
  unsigned int v230 = *(_DWORD *)&v131[4 * (v216 ^ 0x33)] ^ v227 ^ (v229 - 1852648702 - ((2 * v229) & 0x2325A604));
  int v231 = *(_DWORD *)&v125[4 * (BYTE1(v207) ^ 0x88)];
  HIDWORD(v205) = v231 ^ 0xE708;
  LODWORD(v205) = v231 ^ 0x5E500000;
  int v232 = *(_DWORD *)&v120[4 * (BYTE2(v212) ^ 0xA7)] ^ 0x5AD1FA42;
  int v233 = (16 * v232 - 1075532640 - ((32 * v232) & 0x7FC95940)) ^ *(_DWORD *)&v128[4
                                                                                * (HIBYTE(v216) ^ -HIBYTE(v216) ^ ((HIBYTE(v216) ^ 0xFFFFFF16) + 234))
                                                                                + 932] ^ (v205 >> 16);
  int v234 = *(_DWORD *)&v131[4 * (v222 ^ 0x9D)] ^ v232 ^ (v233 - 1852648702 - ((2 * v233) & 0x2325A604));
  int v235 = *(_DWORD *)&v120[4 * BYTE2(v216)];
  int v236 = *(_DWORD *)&v125[4 * BYTE1(v224)];
  HIDWORD(v205) = v236 ^ 0xE708;
  LODWORD(v205) = v236 ^ 0x5E500000;
  int v237 = (v205 >> 16) ^ *(_DWORD *)&v128[4 * (HIBYTE(v222) ^ 0x7C)] ^ (16 * (v235 ^ 0x5AD1FA42)
                                                                     - 1075532640
                                                                     - ((32 * (v235 ^ 0x5AD1FA42)) & 0x7FC95940));
  unsigned int v238 = *(_DWORD *)&v131[4 * (v207 ^ 0xF9)] ^ v235 ^ (v237 - 1852648702 - ((2 * v237) & 0x2325A604));
  unsigned int v239 = HIBYTE(v238);
  LOBYTE(v236) = ~(2 * (HIBYTE(v238) & 0x6F ^ 0xDF)) + (HIBYTE(v238) & 0x6F ^ 0xDF);
  int v240 = *(_DWORD *)&v120[4 * (BYTE2(v238) ^ 0x56)];
  int v241 = *(_DWORD *)&v125[4 * ((unsigned __int16)(v234 ^ 0xDE69) >> 8)];
  HIDWORD(v205) = v241 ^ 0xE708;
  LODWORD(v205) = v241 ^ 0x5E500000;
  unsigned int v242 = v226 - ((2 * v226) & 0x109610FA) - 2008348547;
  int v243 = (v205 >> 16) ^ *(_DWORD *)&v128[4 * (HIBYTE(v242) ^ 0xE1)] ^ (16 * (v240 ^ 0x5AD1FA42)
                                                                     - 1075532640
                                                                     - ((32 * (v240 ^ 0x5AD1FA42)) & 0x7FC95940));
  int v244 = *(_DWORD *)&v125[4 * (BYTE1(v238) ^ 0xC5)];
  HIDWORD(v205) = v244 ^ 0xE708;
  LODWORD(v205) = v244 ^ 0x5E500000;
  unsigned int v245 = *(_DWORD *)&v131[4 * (v230 ^ 0x91)] ^ v240 ^ (v243 - 1852648702 - ((2 * v243) & 0x2325A604));
  int v246 = *(_DWORD *)&v120[4 * (BYTE2(v242) ^ 0x21)] ^ 0x5AD1FA42;
  unsigned int v247 = v246 ^ *(_DWORD *)&v128[4 * (HIBYTE(v230) ^ 0x87)] ^ *(_DWORD *)&v131[4 * (v234 ^ 0x69)] ^ ((v205 >> 16) - 1852648702 - ((2 * (v205 >> 16)) & 0x2325A604)) ^ (16 * v246 - 1075532640 - ((32 * v246) & 0x7FC95940));
  int v248 = *(_DWORD *)&v120[4 * (BYTE2(v230) ^ 0x2B)] ^ 0x5AD1FA42;
  int v249 = *(_DWORD *)&v125[4 * (BYTE1(v242) ^ 0x63)];
  HIDWORD(v205) = v249 ^ 0xE708;
  LODWORD(v205) = v249 ^ 0x5E500000;
  int v250 = (16 * v248 - 1075532640 - ((32 * v248) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * ((v234 ^ 0x5FEEDE69u) >> 24)] ^ (v205 >> 16);
  int v251 = *(_DWORD *)&v131[4 * (((v238 ^ 0xD) + (v238 ^ 0xFFFFFFC1) + 1) ^ 0xFFFFFFFE)
                        + 4 * (v238 ^ 0xD)] ^ v248 ^ (v250 - 1852648702 - ((2 * v250) & 0x2325A604));
  int v252 = *(_DWORD *)&v120[4 * (BYTE2(v234) ^ 0x2D)] ^ 0x5AD1FA42;
  int v253 = *(_DWORD *)&v125[4 * (BYTE1(v230) ^ 0x25)];
  HIDWORD(v205) = v253 ^ 0xE708;
  LODWORD(v205) = v253 ^ 0x5E500000;
  int v254 = (v205 >> 16) ^ (16 * v252 - 1075532640 - ((32 * v252) & 0x7FC95940)) ^ *(_DWORD *)&v128[4
                                                                                               * (v239 & 0x90 ^ 0x86 ^ v236)];
  unsigned int v255 = *(_DWORD *)&v131[4 * (v242 ^ 0x26)] ^ v252 ^ (v254 - 1852648702 - ((2 * v254) & 0x2325A604));
  int v256 = *(_DWORD *)&v120[4 * ((v255 ^ 0x59A5F4B7) >> 16)] ^ 0x5AD1FA42;
  int v257 = *(_DWORD *)&v125[4 * ((unsigned __int16)(v251 ^ 0x872B) >> 8)];
  HIDWORD(v205) = v257 ^ 0xE708;
  LODWORD(v205) = v257 ^ 0x5E500000;
  int v258 = (16 * v256 - 1075532640 - ((32 * v256) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * (HIBYTE(v245) ^ 0x88)] ^ (v205 >> 16);
  int v259 = *(_DWORD *)&v131[4 * (v247 ^ 0xEE)] ^ v256 ^ (v258 - 1852648702 - ((2 * v258) & 0x2325A604));
  int v260 = *(_DWORD *)&v120[4 * (BYTE2(v245) ^ 0xF4)] ^ 0x5AD1FA42;
  int v261 = *(_DWORD *)&v125[4 * (BYTE1(v255) ^ 0x67)];
  HIDWORD(v205) = v261 ^ 0xE708;
  LODWORD(v205) = v261 ^ 0x5E500000;
  int v262 = v260 ^ *(_DWORD *)&v128[4 * (HIBYTE(v247) ^ 0xD6)] ^ *(_DWORD *)&v131[4 * (v251 ^ 0x18)] ^ (16 * v260 - 1075532640 - ((32 * v260) & 0x7FC95940)) ^ ((v205 >> 16) - 1852648702 - ((2 * (v205 >> 16)) & 0x2325A604));
  int v263 = *(_DWORD *)&v120[4 * (BYTE2(v247) ^ 0x56)] ^ 0x5AD1FA42;
  int v264 = *(_DWORD *)&v125[4 * (BYTE1(v245) ^ 0x41)];
  HIDWORD(v205) = v264 ^ 0xE708;
  LODWORD(v205) = v264 ^ 0x5E500000;
  int v265 = v205 >> 16;
  HIDWORD(v205) = *(_DWORD *)&v131[4 * (v255 ^ 0xB7)] ^ 0x8D1A77B8;
  LODWORD(v205) = HIDWORD(v205);
  int v266 = (v205 >> 21) ^ __ROR4__(*(_DWORD *)&v128[4 * ((v251 ^ 0x911B872B) >> 24)] ^ v263 ^ 0x6D41727E ^ (16 * v263- 1075532640- ((32 * v263) & 0x7FC95940)) ^ v265, 21);
  int v267 = *(_DWORD *)&v120[4 * (BYTE2(v251) ^ 0xD8)] ^ 0x5AD1FA42;
  int v268 = *(_DWORD *)&v125[4 * (BYTE1(v247) ^ 0xE4)];
  HIDWORD(v205) = v268 ^ 0xE708;
  LODWORD(v205) = v268 ^ 0x5E500000;
  int v269 = (v205 >> 16) ^ *(_DWORD *)&v128[4 * (HIBYTE(v255) ^ 0xB0)] ^ (16 * v267
                                                                     - 1075532640
                                                                     - ((32 * v267) & 0x7FC95940));
  int v270 = v269 - 1852648702 - ((2 * v269) & 0x2325A604);
  HIDWORD(v205) = v266 ^ 0x549BF9D9;
  LODWORD(v205) = v266 ^ 0x549BF9D9;
  int v271 = v205 >> 11;
  int v272 = *(_DWORD *)&v125[4 * (BYTE1(v271) ^ 0xA0)];
  HIDWORD(v205) = v272 ^ 0xE708;
  LODWORD(v205) = v272 ^ 0x5E500000;
  unsigned int v273 = *(_DWORD *)&v131[4 * (v245 ^ 0xE4)] ^ v267 ^ v270;
  int v274 = *(_DWORD *)&v120[4 * (BYTE2(v273) ^ 0x72)] ^ 0x5AD1FA42;
  int v275 = (v205 >> 16) ^ *(_DWORD *)&v128[4 * ((v259 ^ 0xD4B73D47) >> 24)] ^ (16 * v274
                                                                           - 1075532640
                                                                           - ((32 * v274) & 0x7FC95940));
  int v276 = *(_DWORD *)&v131[4 * (v262 ^ 0xEA)] ^ v274 ^ (v275 - 1852648702 - ((2 * v275) & 0x2325A604));
  int v277 = *(_DWORD *)&v120[4 * (BYTE2(v259) ^ 0x74)] ^ 0x5AD1FA42;
  int v278 = *(_DWORD *)&v125[4 * (BYTE1(v273) ^ 0x66)];
  HIDWORD(v205) = v278 ^ 0xE708;
  LODWORD(v205) = v278 ^ 0x5E500000;
  unsigned int v279 = v262 ^ 0x177CD9D9;
  int v280 = *(_DWORD *)&v128[4 * HIBYTE(v279)] ^ 0x6D41727E ^ v277 ^ (v205 >> 16) ^ (16 * v277
                                                                                - 1075532640
                                                                                - ((32 * v277) & 0x7FC95940));
  int v281 = *(_DWORD *)&v131[4 * (v271 ^ 0xEF)];
  int v282 = v280 & 0x200 | 0x555B2010;
  if ((v280 & 0x200 & (v281 ^ 0x9192D302)) != 0) {
    int v282 = -1430896608 - v282;
  }
  unsigned int v283 = ((v281 ^ 0x8D1A77B8) - 1432035344 + v282) ^ v280 & 0xFFFFFDFF;
  int v284 = *(_DWORD *)&v120[4 * BYTE2(v279)] ^ 0x5AD1FA42;
  int v285 = (16 * v284 - 1075532640 - ((32 * v284) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * ((v271 ^ 0x1EA133EFu) >> 24)];
  int v286 = *(_DWORD *)&v125[4 * (BYTE1(v259) ^ 0xAE)];
  HIDWORD(v287) = v286 ^ 0xE708;
  LODWORD(v287) = v286 ^ 0x5E500000;
  unsigned int v288 = *(_DWORD *)&v131[4 * (v273 ^ 0xD)] ^ v284 ^ (v287 >> 16) ^ (v285
                                                                                    - 1852648702
                                                                                    - ((2 * v285) & 0x2325A604));
  int v289 = *(_DWORD *)&v120[4 * (BYTE2(v271) ^ 0x62)] ^ 0x5AD1FA42;
  int v290 = *(_DWORD *)&v125[4 * BYTE1(v279)];
  HIDWORD(v287) = v290 ^ 0xE708;
  LODWORD(v287) = v290 ^ 0x5E500000;
  int v291 = (16 * v289 - 1075532640 - ((32 * v289) & 0x7FC95940)) ^ *(_DWORD *)&v128[4 * (HIBYTE(v273) ^ 0x32)] ^ (v287 >> 16);
  int v292 = *(_DWORD *)&v131[4 * (v259 ^ 0x74)] ^ v289 ^ (v291 - 1852648701 + ~((2 * v291) & 0x2325A604));
  v293 = (char *)*(&off_1F16F9FD0 + (int)(v70 ^ 0x173)) - 8;
  unsigned __int8 v294 = v283 ^ 0x9F;
  v295 = (char *)*(&off_1F16F9FD0 + (int)(v70 - 332)) - 4;
  unsigned int v296 = *(_DWORD *)&v295[4 * (BYTE2(v276) ^ 0x99)] ^ 0xB7E99773;
  uint64_t v297 = (uint64_t)*(&off_1F16F9FD0 + (int)(v70 ^ 0x136));
  unsigned int v298 = ((((v283 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
        - 1999839573
        + *(_DWORD *)&v293[4 * (((v283 ^ 0xF137909F) >> 24) ^ 0xB4)]) ^ ((v288 ^ 0x7B)
                                                                       - 1356832173
                                                                       + ((2 * (v288 ^ 0x7B) + 224) & 0x3C4 ^ 0x9FBEDFFF)) ^ v296 ^ (v296 >> 2) ^ *(_DWORD *)(v297 + 4 * (v288 ^ 0x79u)) ^ (v296 >> 4);
  v299 = (char *)*(&off_1F16F9FD0 + (int)(v70 ^ 0x1C9)) - 8;
  int v300 = v292 ^ 0x250E7C9C;
  unsigned int v301 = *(_DWORD *)&v299[4 * ((unsigned __int16)(v292 ^ 0x7C9C) >> 8)] ^ 0x8810263A;
  int v302 = v298 ^ v301 ^ (1515496080 * v301);
  int v303 = *(_DWORD *)&v293[4 * (((v276 ^ 0x6792B6A6u) >> 24) ^ 0xB4)];
  unsigned int v304 = HIBYTE(v288);
  int v305 = *(_DWORD *)&v293[4 * (HIBYTE(v288) ^ 0xB4)];
  unsigned int v306 = (v292 ^ 0x250E7C9Cu) >> 24;
  int v307 = *(_DWORD *)&v295[4 * (BYTE2(v292) ^ 5)];
  int v308 = *(_DWORD *)&v295[4 * ((v283 ^ 0xF137909F) >> 16)];
  HIDWORD(v361) = *(_DWORD *)&v295[4 * ((v288 ^ 0xBC37B) >> 16)];
  LODWORD(v364) = *(_DWORD *)&v293[4 * (v306 ^ 0xB4)];
  int v309 = *(_DWORD *)&v299[4 * ((unsigned __int16)(v288 ^ 0xC37B) >> 8)];
  uint64_t v310 = *(unsigned int *)&v299[4 * ((unsigned __int16)(v276 ^ 0xB6A6) >> 8)];
  uint64_t v311 = *(unsigned int *)&v299[4 * (BYTE1(v283) ^ 0x5E)];
  int v312 = *(_DWORD *)(v297 + 4 * (v283 ^ 0x9Du));
  int v313 = *(_DWORD *)(v297 + 4 * (v292 ^ 0x9Eu));
  LODWORD(v361) = *(_DWORD *)(v297 + 4 * (v276 ^ 0xA4u));
  unsigned int v314 = (v302 - 544267431 - ((2 * v302) & 0xBF1E46B2)) ^ LODWORD(STACK[0x268]);
  uint64_t v315 = v314 ^ 0x5244C6B3;
  uint64_t v316 = (uint64_t)*(&off_1F16F9FD0 + HIDWORD(v364) - 323);
  v348[5] = *(unsigned char *)(v316 + (BYTE2(v315) ^ 0x5ELL)) ^ BYTE2(v315) ^ 0x8A ^ ((BYTE2(v315) ^ 0x8A)
                                                                            - ((2 * (BYTE2(v315) ^ 0x8A) - 18) & 0xEA)
                                                                            - 20) ^ 0xB9;
  unsigned int v317 = v307 ^ 0xB7E99773 ^ ((((v276 ^ 0x6792B6A6u) >> 24) ^ 0x9FD52929) - 1999839573 + v303) ^ ((v307 ^ 0xB7E99773) >> 2) ^ ((v307 ^ 0xB7E99773) >> 4) ^ v309 ^ 0x8810263A ^ v312 ^ (1515496080 * (v309 ^ 0x8810263A)) ^ (v294 - 1356832173 + ((2 * v294 + 224) & 0x3C4 ^ 0x9FBEDFFF));
  unsigned int v318 = v308 ^ 0xB7E99773 ^ ((v304 ^ 0x9FD52929) - 1999839573 + v305) ^ ((v308 ^ 0xB7E99773) >> 2) ^ ((v308 ^ 0xB7E99773) >> 4);
  unsigned int v319 = (v317 - 2113228429 - ((2 * v317) & 0x4156390) + 85) ^ LODWORD(STACK[0x370]);
  unsigned int v320 = v319 ^ 0x22A932A6;
  uint64_t v321 = (BYTE1(v320) | 0x88) ^ (v320 >> 8) & 0x88;
  unsigned int v322 = (v318 & 0x1000000 | ((((v318 & 0x1000000) >> 24) & 1) << 25)) ^ 0x55E6FFEF;
  v323 = (char *)*(&off_1F16F9FD0 + (HIDWORD(v364) ^ 0x147)) - 4;
  BOOL v113 = ((v322 - 1441202159) & (v313 ^ 0x32000000)) == 0;
  v348[2] = (((unsigned __int16)(v319 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v319 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v323[v321 ^ 0x14] ^ 0xC8) - ((2 * v323[v321 ^ 0x14]) & 0x20) - 112);
  v324 = (char *)*(&off_1F16F9FD0 + (HIDWORD(v364) ^ 0x155)) - 12;
  LODWORD(v321) = v324[HIBYTE(v314) ^ 0xEFLL];
  HIDWORD(v287) = v321 ^ 0x1A;
  LODWORD(v287) = (v321 ^ 0x80) << 24;
  v348[STACK[0x280]] = (v287 >> 29) ^ 0x83;
  unsigned int v325 = (v300
        - 1356832173
        + ((2 * ((v300 + 112) & 0xFFFFFFEF ^ (v300 | 0x7FFFFFF2))) ^ 0x6041201B)) ^ v313;
  unsigned int v326 = v322 - 1080166180;
  unsigned int v327 = 1802238138 - v322;
  if (v113) {
    unsigned int v327 = v326;
  }
  unsigned int v328 = v310 ^ 0x8810263A ^ LODWORD(STACK[0x3A8]) ^ ((v318 & 0xFEFFFFFF ^ (1515496080 * (v310 ^ 0x8810263A)) ^ (v325 - 361035979 + v327))
                                                    - 1027795071
                                                    - ((2
                                                      * (v318 & 0xFEFFFFFF ^ (1515496080 * (v310 ^ 0x8810263A)) ^ (v325 - 361035979 + v327))) & 0x857A2F02));
  v329 = (char *)*(&off_1F16F9FD0 + (HIDWORD(v364) ^ 0x140)) - 4;
  char v330 = v329[v310 ^ 0x3Au ^ LOBYTE(STACK[0x3A8]) ^ ((v318 ^ (-112 * (v310 ^ 0x3A)) ^ (v325 + 53 + v327))
                                                                                     - 127
                                                                                     - ((2
                                                                                       * (v318 ^ (-112 * (v310 ^ 0x3A)) ^ (v325 + 53 + v327))) & 2)) ^ 0x28];
  v348[11] = v330 & 0xFB ^ 0xA ^ ((v330 | 0xFB) + 24);
  int v331 = v324[HIBYTE(v319) ^ 0xF9];
  HIDWORD(v332) = v331 ^ 0x1A;
  LODWORD(v332) = (v331 ^ 0x80) << 24;
  unint64_t v333 = STACK[0x230];
  v348[STACK[0x230]] = (v332 >> 29) ^ 0xFB;
  v348[1] = BYTE2(v320) ^ 0x61 ^ ((BYTE2(v320) ^ 0x61) - ((2 * (BYTE2(v320) ^ 0x61) - 18) & 0xEA) - 20) ^ 0xB8 ^ *(unsigned char *)(v316 + (BYTE2(v320) ^ 0xB5));
  int v334 = (v306 ^ 0x9FD52929) - 1999839573 + v364;
  unsigned int v335 = HIDWORD(v361) ^ 0xB7E99773 ^ ((HIDWORD(v361) ^ 0xB7E99773) >> 4) ^ ((HIDWORD(v361) ^ 0xB7E99773) >> 2);
  unsigned int v336 = (v335 & 0x80000 | ((((v335 & 0x80000) >> 19) & 1) << 20)) ^ 0x56EF246B;
  BOOL v113 = ((v336 - 1458513003) & v334) == 0;
  unsigned int v337 = v336 - 268633155;
  unsigned int v338 = -1646574445 - v336;
  if (v113) {
    unsigned int v338 = v337;
  }
  int v339 = v361 ^ ((v276 ^ 0xA6) + 2096205936) ^ (((v334 - 1189879848 + v338) ^ v335 & 0xFFF7FFFF ^ (1515496080 * (v311 ^ 0x8810263A)))
                                                               + 841929186
                                                               - 2
                                                               * (((v334 - 1189879848 + v338) ^ v335 & 0xFFF7FFFF ^ (1515496080 * (v311 ^ 0x8810263A))) & 0x322ED1EB ^ ((v334 - 1189879848 + v338) ^ v335 & 0xFFF7FFFF) & 9));
  unsigned int v340 = v311 ^ LODWORD(STACK[0x3C0]) ^ (v339 - 95005161 - ((2 * v339) & 0xF4ACAC2E));
  v348[STACK[0x208]] = *(unsigned char *)(v316 + (BYTE2(v340) ^ 0x8B) + ((v340 >> 15) & 0x1A8 ^ 0xFFFFFEFF) + 213) ^ BYTE2(v340) ^ ((BYTE2(v340) ^ 0x8B) + (~(2 * (BYTE2(v340) ^ 0x8B) - 18) | 0x15) - 19) ^ 0xD;
  int v341 = v324[HIBYTE(v340) ^ 0x72];
  HIDWORD(v342) = v341 ^ 0x1A;
  LODWORD(v342) = (v341 ^ 0x80) << 24;
  v348[STACK[0x2D0]] = (v342 >> 29) ^ 0x50;
  unsigned int v343 = ((v328 ^ 0xCFDDD967) >> 16) ^ 0xFFFFFF94;
  v348[9] = v343 ^ (v343 - ((2 * v343 - 18) & 0xEA) - 20) ^ *(unsigned char *)(v316
                                                                     + (((v328 ^ 0xCFDDD967) >> 16) ^ 0x40)) ^ 0xC;
  unsigned int v344 = (((v340 ^ 0xD725B415) >> 4) & 0xF0 | ((unsigned __int16)(v340 ^ 0xB415) >> 12)) ^ 0xE6;
  v348[STACK[0x3B8]] = v323[((v344 >> 4) & 0xFFFFFF0F | (16 * (v344 & 0xF))) ^ 0xAELL] ^ (((v344 >> 4) & 0xF | (16 * (v344 & 0xF)))
                                                                                        - ((2
                                                                                          * ((v344 >> 4) & 0xF | (16 * (v344 & 0xF)))) & 0x90)
                                                                                        - 56) ^ 0x2B;
  v348[10] = (((unsigned __int16)(v328 ^ 0xD967) >> 8) - (((v328 ^ 0xCFDDD967) >> 7) & 0x90) - 56) ^ 0xDB ^ v323[((unsigned __int16)(v328 ^ 0xD967) >> 8) ^ 0xA0];
  v348[STACK[0x3B0]] = (BYTE1(v315) - ((v315 >> 7) & 0x90) - 56) ^ v323[BYTE1(v315) ^ 0x75] ^ 0x80;
  v348[STACK[0x368]] = v329[v319 ^ 0x95] ^ 0xB4;
  v348[STACK[0x2D8]] = v329[v314 ^ 0x7FLL] ^ 0x25;
  v348[STACK[0x3E8]] = v329[v340 ^ 0xBALL] ^ 0x8A;
  int v345 = v324[HIBYTE(v328) ^ 0x49];
  HIDWORD(v342) = v345 ^ 0x1A;
  LODWORD(v342) = (v345 ^ 0x80) << 24;
  v348[STACK[0x380]] = (v342 >> 29) ^ 0x2E;
  return (*(uint64_t (**)(char *, void, void, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * ((219 * (((v333 + 104954751 - 2 * ((v333 + 16) & 0x6417B7F) + 8) ^ 0x6417B70u) > 0x14F)) ^ HIDWORD(v364))))(v323, v343 - ((2 * v343 - 18) & 0xEA) - 20, ~(2 * (HIWORD(v340) ^ 0xFFFFFF8B) - 18) | 0x15, v315, v329, 26, v310, v311, a9, a10, a11, a12, a13, a14, a15, a16, v347, v348, v349,
           v350,
           v351,
           v352,
           v353,
           a24,
           v354,
           v355,
           v356,
           v357,
           v358,
           v359,
           v361,
           v364,
           2,
           5,
           11,
           1,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           10,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1BCAC5338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((44 * (a3 - a5 + (((a6 ^ 0x209) + 606552041) & 0x3E1F ^ 0xFFFFFFFFFFFFFF6ELL) < 0x20)) ^ a6 ^ 0x209u)))();
}

uint64_t sub_1BCAC5388@<X0>(uint64_t a1@<X0>, int a2@<W3>, char a3@<W4>, char a4@<W5>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a1 + (v8 + a2)) = *(unsigned char *)(a5 + ((v8 + a2) & 0xFLL)) ^ (*(unsigned char *)(v9
                                                                                              + (v8 + a2))
                                                                                   - 106) ^ *(unsigned char *)(v5 + (((_BYTE)v8 + (_BYTE)a2) & 0xF)) ^ *(unsigned char *)((((_BYTE)v8 + (_BYTE)a2) & 0xF) + v6 + 2) ^ (((v8 + a2) & 0xF) * (((v7 + a3) & a4) + 127));
  return (*(uint64_t (**)(void))(v10 + 8 * ((11 * ((v8 + 1 + a2) > 0x14F)) ^ v7)))();
}

uint64_t sub_1BCAC53F4(char a1, int8x16_t a2, int8x8_t a3, int8x8_t a4, uint64_t a5, char a6, int a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v59 = a7 - 8;
  uint64_t v60 = (v57 + v59);
  v62.val[0].i64[0] = ((_BYTE)v57 + (_BYTE)v59) & 0xF;
  v62.val[0].i64[1] = (v56 + (_BYTE)v59) & 0xF;
  v62.val[1].i64[0] = (v55 + (_BYTE)v59) & 0xF;
  v62.val[1].i64[1] = (v54 + (_BYTE)v59) & 0xF;
  v62.val[2].i64[0] = (v50 + (_BYTE)v59 + (a9 ^ 8)) & 0xF;
  v62.val[2].i64[1] = (a6 + (_BYTE)v59) & 0xF;
  v62.val[3].i64[0] = (a1 + (_BYTE)v59) & 0xF;
  v62.val[3].i64[1] = (v51 + (_BYTE)v59) & 0xF;
  *(int8x8_t *)(*(void *)(v58 - 128) + v60) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v52 + v60), *(int8x8_t *)(v48 + (v60 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v47 + (v60 & 0xF) - 7), *(int8x8_t *)(v49 + (v60 & 0xF) - 7)))), a4), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v62, a2), a3)));
  return (*(uint64_t (**)(void))(a47 + 8 * (((v53 == v59) | (16 * (v53 == v59))) ^ a9)))();
}

uint64_t sub_1BCAC53FC@<X0>(uint64_t a1@<X8>)
{
  int v7 = (v3 + 108) ^ *(unsigned __int8 *)(v2 + (v4 + v1));
  int v8 = ((*(unsigned __int8 *)(v2 + (v4 + v1 + 2)) ^ 0x80) << 16) | ((*(unsigned __int8 *)(v2 + (v4 + v1 + 3)) ^ 0x80) << 24) | v7 | ((*(unsigned __int8 *)(v2 + (v4 + v1 + 1)) ^ 0x80) << 8);
  *(_DWORD *)(a1 + ((v4 + v1) & 0xFFFFFFFC)) = v8 + v6 - 2 * (v8 & (v6 + 2) ^ v7 & 2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((15 * ((v4 + 4 + v1) > 0x3F)) ^ v3)))((v3 - 432));
}

uint64_t sub_1BCAC5498()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v0 + 1504)))();
  LODWORD(STACK[0x580]) = v1;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((89 * (v0 ^ 0x263)) ^ 0x5FA) * v2) ^ (v0 + 96))))(v4);
}

uint64_t sub_1BCAC54F0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X7>, int a4@<W8>)
{
  *(unsigned char *)(a3 + (a4 - 41179197)) = *(unsigned char *)(a2 + v5 - 1584496196) ^ 0x80;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((558 * (((11 * (v4 ^ 0x284) - 165) | 0x4Au) + a1 + a4 < 0x40)) ^ (11 * (v4 ^ 0x284)))))();
}

uint64_t sub_1BCAC5560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int32x4_t a43,int32x4_t a44,int32x4_t a45,int32x4_t a46)
{
  int v52 = BYTE4(a36) ^ 0x5F;
  if (v52 == 1)
  {
    WORD2(a31) = __PAIR16__((8 * a33) >> 24, 8 * a33) ^ 0x2F08;
    BYTE6(a31) = (a33 >> 13) ^ 0xF3;
    int v54 = a4 + a6 + 1159;
    HIBYTE(a31) = (a33 >> (a4 + a6 - 71)) ^ 0x81;
    HIDWORD(v57) = HIDWORD(a32) ^ 0x1B;
    LODWORD(v57) = a33 ^ 0x20000000;
    LOBYTE(a32) = (v57 >> 29) ^ 0x80;
    BYTE1(a32) = (HIDWORD(a32) >> 5) ^ 0xD4;
    BYTE2(a32) = (HIDWORD(a32) >> 13) ^ 0xA0;
    int v56 = (HIDWORD(a32) >> 21) ^ 0x5A;
  }
  else
  {
    unsigned int v53 = 1609763359;
    if (v52 != 2) {
      goto LABEL_6;
    }
    BYTE4(a31) = (HIDWORD(a32) >> 21) ^ 0x5A;
    BYTE5(a31) = (HIDWORD(a32) >> 13) ^ 0xA0;
    BYTE6(a31) = (HIDWORD(a32) >> 5) ^ 0xD4;
    int v54 = a4 + a6 + 1159;
    HIDWORD(v55) = (a4 + a6 - 1) ^ HIDWORD(a32);
    LODWORD(v55) = a33 ^ 0x20000000;
    HIBYTE(a31) = (v55 >> 29) ^ 0x80;
    LOBYTE(a32) = (a33 >> 21) ^ 0x81;
    BYTE1(a32) = (a33 >> 13) ^ 0xF3;
    BYTE2(a32) = (a33 >> 5) ^ 0x2F;
    LOBYTE(v56) = (8 * a33) ^ 8;
  }
  unsigned int v53 = (v54 + 1610306364) & 0xFFF7AFFF;
  BYTE3(a32) = v56;
LABEL_6:
  HIDWORD(v112) = HIDWORD(a13) + 1867841724;
  LODWORD(v112) = -533875057;
  v108.i64[0] = 0x8080808080808080;
  v108.i64[1] = 0x8080808080808080;
  int8x16_t v109 = (int8x16_t)vdupq_n_s32(0x3AB4555Fu);
  int32x4_t v110 = vdupq_n_s32(0x3AB4554Du);
  HIDWORD(a21) = (a6 + 80130846) & 0x9B4646FF;
  uint64_t v115 = v51 - 16;
  int8x16_t v111 = (int8x16_t)vdupq_n_s32(0x3AB4554Fu);
  uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (int)(a4 + v53 - 553));
  uint64_t v59 = HIDWORD(a34);
  uint64_t v60 = a35;
  int v61 = BYTE4(a36) ^ 0x5F;
  HIDWORD(a16) = BYTE4(a36) ^ 0x5F;
  if (v61 == 2)
  {
    unint64_t v113 = __PAIR64__(a34, HIDWORD(a33));
    unint64_t v114 = __PAIR64__(a35, HIDWORD(a34));
    int8x16x4_t v117 = vld4q_s8((const char *)&a24 + 4);
    uint8x16_t v87 = (uint8x16_t)veorq_s8(v117.val[0], v108);
    uint16x8_t v88 = vmovl_u8(*(uint8x8_t *)v87.i8);
    uint16x8_t v89 = vmovl_high_u8(v87);
    uint8x16_t v90 = (uint8x16_t)veorq_s8(v117.val[1], v108);
    _Q21 = vmovl_u8(*(uint8x8_t *)v90.i8);
    _Q20 = vmovl_high_u8(v90);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v95 = (uint8x16_t)veorq_s8(v117.val[2], v108);
    uint16x8_t v96 = vmovl_high_u8(v95);
    uint16x8_t v97 = vmovl_u8(*(uint8x8_t *)v95.i8);
    v117.val[0] = veorq_s8(v117.val[3], v108);
    v117.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v117.val[0]);
    v117.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v117.val[1]);
    v117.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v117.val[1].i8);
    v117.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v117.val[0].i8);
    v117.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v117.val[0]);
    v117.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v117.val[0].i8);
    int32x4_t v98 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v97.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v88.i8), 0x18uLL)), v117.val[0]);
    int32x4_t v99 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v97, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v88), 0x18uLL)), v117.val[3]);
    int32x4_t v100 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v96.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v89.i8), 0x18uLL)), v117.val[1]);
    int32x4_t v101 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v96, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v89), 0x18uLL)), v117.val[2]);
    v117.val[0] = veorq_s8(vandq_s8((int8x16_t)v98, v109), (int8x16_t)(*(_OWORD *)v117.val & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v117.val[3] = veorq_s8(vandq_s8((int8x16_t)v99, v109), (int8x16_t)(*(_OWORD *)&v117.val[3] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v117.val[1] = veorq_s8(vandq_s8((int8x16_t)v100, v109), (int8x16_t)(*(_OWORD *)&v117.val[1] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v117.val[2] = veorq_s8(vandq_s8((int8x16_t)v101, v109), (int8x16_t)(*(_OWORD *)&v117.val[2] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    a45 = vaddq_s32(vsubq_s32(v100, vaddq_s32((int32x4_t)v117.val[1], (int32x4_t)v117.val[1])), v110);
    a46 = vaddq_s32(vsubq_s32(v101, vaddq_s32((int32x4_t)v117.val[2], (int32x4_t)v117.val[2])), v110);
    a43 = vaddq_s32(vsubq_s32(v98, vaddq_s32((int32x4_t)v117.val[0], (int32x4_t)v117.val[0])), v110);
    a44 = vaddq_s32(vsubq_s32(v99, vaddq_s32((int32x4_t)v117.val[3], (int32x4_t)v117.val[3])), v110);
    int v102 = (_DWORD *)&a43 + v50 + 102173229;
    int v103 = *(v102 - 8) ^ *(v102 - 3);
    uint64_t v104 = *(v102 - 16);
    int v105 = v104 ^ *(v102 - 14) ^ (v103 + v48 - ((((HIDWORD(a21) - 898) | 0x404) + 1969792475) & (2 * v103)));
    HIDWORD(v106) = v105 ^ v48;
    LODWORD(v106) = v105;
    _DWORD *v102 = (v106 >> 31) + v48 - ((2 * (v106 >> 31)) & 0x7568AA9A);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (((2 * (v51 == 102173166)) | ((v51 == 102173166) << 7)) ^ HIDWORD(a21))))(v104, a2, v60, a4, &off_1F16F9FD0, a6, a7, v59, a9, a10, a11, a12, a13, a14, a15, a16, v112, v113, v114,
             v58,
             a21,
             v115,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
  else if (v61 == 1)
  {
    int8x16x4_t v116 = vld4q_s8((const char *)&a24 + 4);
    uint64_t v62 = a6 ^ (a6 + 209);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v116.val[0], v108);
    uint16x8_t v64 = vmovl_u8(*(uint8x8_t *)v63.i8);
    int8x16_t v65 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v64.i8);
    int8x16_t v66 = (int8x16_t)vmovl_high_u16(v64);
    uint16x8_t v67 = vmovl_high_u8(v63);
    int8x16_t v68 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v67.i8);
    int8x16_t v69 = (int8x16_t)vmovl_high_u16(v67);
    uint8x16_t v70 = (uint8x16_t)veorq_s8(v116.val[1], v108);
    uint16x8_t v71 = vmovl_high_u8(v70);
    uint16x8_t v72 = vmovl_u8(*(uint8x8_t *)v70.i8);
    uint8x16_t v73 = (uint8x16_t)veorq_s8(v116.val[2], v108);
    _Q25 = (int8x16_t)vmovl_high_u8(v73);
    _Q24 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v73.i8);
    int8x16_t v76 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q24.i8, 0x10uLL);
    __asm { SHLL2           V24.4S, V24.8H, #0x10 }
    int8x16_t v81 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v116.val[0] = veorq_s8(v116.val[3], v108);
    v116.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v116.val[0]);
    v116.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v116.val[1]);
    v116.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v116.val[0].i8);
    v116.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v116.val[0]);
    v116.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v116.val[0].i8), 0x18uLL), v76), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v72.i8, 8uLL), v65));
    v116.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v116.val[3], 0x18uLL), _Q24), vorrq_s8((int8x16_t)vshll_high_n_u16(v72, 8uLL), v66));
    v116.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v116.val[1].i8), 0x18uLL), v81), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v71.i8, 8uLL), v68));
    v116.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v116.val[2], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v71, 8uLL), v69));
    int32x4_t v82 = (int32x4_t)veorq_s8(vandq_s8(v116.val[0], v111), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v83 = (int32x4_t)veorq_s8(vandq_s8(v116.val[3], v111), (int8x16_t)(*(_OWORD *)&v66 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v84 = (int32x4_t)veorq_s8(vandq_s8(v116.val[1], v111), (int8x16_t)(*(_OWORD *)&v68 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v85 = (int32x4_t)veorq_s8(vandq_s8(v116.val[2], v111), (int8x16_t)(*(_OWORD *)&v69 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a45 = vaddq_s32(vsubq_s32((int32x4_t)v116.val[1], vaddq_s32(v84, v84)), v110);
    a46 = vaddq_s32(vsubq_s32((int32x4_t)v116.val[2], vaddq_s32(v85, v85)), v110);
    a43 = vaddq_s32(vsubq_s32((int32x4_t)v116.val[0], vaddq_s32(v82, v82)), v110);
    a44 = vaddq_s32(vsubq_s32((int32x4_t)v116.val[3], vaddq_s32(v83, v83)), v110);
    return (*(uint64_t (**)(char *, uint64_t, void, uint64_t, _UNKNOWN **, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (int)v62))((char *)*(&off_1F16F9FD0 + (int)v62 - 196) - 8, v62, a35, 102173229, &off_1F16F9FD0, *((unsigned int *)*(&off_1F16F9FD0 + (int)v62 - 143)+ ((v62 + 1157) ^ (unint64_t)(v50 - 1356))+ v51- 18), a34, HIDWORD(a34), a9, a10, a11, a12, a13, a14, a15, a16,
             v112,
             __PAIR64__(a34, HIDWORD(a33)),
             __PAIR64__(a35, HIDWORD(a34)),
             v58,
             a21,
             v51 - 16,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
  else
  {
    uint64_t v107 = HIDWORD(a34);
    HIDWORD(a33) = 2 * (HIDWORD(a33) ^ v46) + v46 - (v49 & (4 * (HIDWORD(a33) ^ v46)));
    LODWORD(a34) = 2 * (a34 ^ v46) + v46 - (v49 & (4 * (a34 ^ v46)));
    HIDWORD(a34) = 2 * (HIDWORD(a34) ^ v46) + v46 - (v49 & (4 * (HIDWORD(a34) ^ v46)));
    LODWORD(a35) = 2 * (a35 ^ v46) + v46 - (v49 & (4 * (a35 ^ v46)));
    return v58(a1, a2, v60, a4, &off_1F16F9FD0, a6, v107, v59, a9, a10, a11, a12, a13, a14, a15, a16, v112, a18, a19,
             a20,
             a21,
             v115,
             a23,
             a24,
             a25,
             a26);
  }
}

uint64_t sub_1BCAC569C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = a1 + 1;
  unsigned char *v2 = (v6 ^ (v3 + v8) ^ 0xFB) * (v4 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 91) * v5) ^ v1)))();
}

uint64_t sub_1BCAC56A4(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = **(unsigned __int8 **)(a2 + 8) + ((90 * (v4 ^ 0x133)) ^ 0xFFFFFED8);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1232 * ((v2 & (2 * v6)) + (v6 ^ v3) == v3)) ^ v4)))();
}

uint64_t sub_1BCAC56F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((a9 ^ 0xEF7E6EFF) + v9 + ((2 * a9) & 0xDEFCDDFE) + 276925728 < 0x7FFFFFFE)
                                * (19 * (v9 ^ 0x3F7) - 700)) ^ v9)))();
}

uint64_t sub_1BCAC576C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v25 + 8 * v24))(a1, a24 & 0x20000000, (v26 - 1567));
}

uint64_t sub_1BCAC5780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * ((((((a6 ^ 0x136) + 84) | 0x183)
                                                                         + (((a6 ^ 0x136) + 193) | 0x102)
                                                                         - 1789)
                                                                        * (v6 < 0x10)) ^ a6 ^ 0x136)))(a1, a2, a3, 0);
}

uint64_t sub_1BCAC57C8@<X0>(int a1@<W8>)
{
  unsigned int v3 = (a1 + 2032086704) & 0x86E0CEFE;
  unsigned int v4 = v3 + 486;
  *(_DWORD *)uint64_t v1 = -1011556398;
  (*(void (**)(unint64_t))(v2 + 8 * (int)(v3 + 1990)))(STACK[0x400]);
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32((const float *)v1);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  v7.i64[0] = *(void *)(v1 + 4);
  v7.i32[2] = *(_DWORD *)(v1 + 12);
  int8x16_t v8 = vextq_s8(v5, v7, 0xCuLL);
  int8x16_t v9 = v7;
  v9.i32[3] = *(_DWORD *)(v1 + 16);
  int32x4_t v10 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v9, *(int8x16_t *)&STACK[0x340]), vandq_s8(v8, v6)), 1uLL), *(int8x16_t *)&STACK[0x330]);
  v11.i32[0] = *((_DWORD *)&STACK[0x1908] + (*(_DWORD *)(v1 + 4) & 1));
  v11.i32[1] = *((_DWORD *)&STACK[0x1908] + (*(_DWORD *)(v1 + 8) & 1));
  v11.i32[2] = *((_DWORD *)&STACK[0x1908] + (*(_DWORD *)(v1 + 12) & 1));
  v11.i32[3] = *((_DWORD *)&STACK[0x1908] + (v9.i8[12] & 1));
  *(int8x16_t *)uint64_t v1 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v1 + 1588), v11), *(int8x16_t *)&STACK[0x300]), (int8x16_t)vaddq_s32(vsubq_s32(v10, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v10, v10), *(int8x16_t *)&STACK[0x320])), *(int32x4_t *)&STACK[0x310]));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v2
                                                                                           + 8
                                                                                           * (int)((v4 - 126) ^ 0x3EA)))(2271854500, 1135927250, 2586602028, 1619, &STACK[0x1908]);
}

uint64_t sub_1BCAC5940@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v2 - 0x7EC954F575262799) + 4 * (v5 - 843764936)) = *(_DWORD *)(*(void *)(v3 - 0x7EC954F575262799)
                                                                                           + 4 * (v5 - 843764936));
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((7 * (((v5 - 1 == v1) ^ ((_BYTE)v4 + 31) & 0xDF) & 1)) ^ (v4 - 1995280097) & 0x76ED8EDFu)))();
}

uint64_t sub_1BCAC59BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + (int)(*(_DWORD *)a1 - 1225351577 * (a1 ^ 0x7EFF9A32) - 1163))
                              + 8
                              * (int)((177 * (*(void *)(a1 + 8) != 0x5B51E979A7EFF0CDLL)) ^ (*(_DWORD *)a1
                                                                                             - 1225351577
                                                                                             * (a1 ^ 0x7EFF9A32)))
                              - 4))();
}

uint64_t sub_1BCAC5A2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = (335 - v1);
  long long v7 = *(_OWORD *)(a1 + v6 - 15);
  long long v8 = *(_OWORD *)(a1 + v6 - 31);
  uint64_t v9 = v4 + v6;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v1 == 288) * ((v3 + 276) ^ v2)) | v3)))();
}

void sub_1BCAC5A74(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0x8E29127E) - a1 + (a1 & 0x71D6ED81)) ^ 0x84DD1C51);
  __asm { BRAA            X14, X17 }
}

_DWORD *sub_1BCAC5B30(_DWORD *result)
{
  *uint64_t result = 810746373;
  return result;
}

uint64_t sub_1BCAC5B3C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1983
                                * ((((*(unsigned __int8 *)(a2 + 6) - 44) << (((a3 - 98) | 0x80) ^ (v3 - 1))) & v5)
                                 + ((*(unsigned __int8 *)(a2 + 6) - 44) ^ v6) == v6)) ^ a3)))();
}

uint64_t sub_1BCAC5B98(__n128 a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  v22.n128_u64[0] = 0x8080808080808080;
  v22.n128_u64[1] = 0x8080808080808080;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128))(v21 + 8 * (int)(((((v20 ^ 0x52) + 1739599700) & 0x984FD67F ^ ((v20 ^ 0x52) + 174)) * (a14 < 0xFFFFFFFE)) ^ v20 ^ 0x52)))(2709511297, 1610916785, 780687131, a20, 339437936, 2737123671, 3514280165, a1, a2, v22);
}

uint64_t sub_1BCAC5C50()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 == 1474669043) ^ (v2 + 80)) & 1) * ((v2 + 283) ^ 0x6C4)) | v2)))();
}

uint64_t sub_1BCAC5C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + (v3 - 242191471) + 4) = ((2 * **(unsigned char **)(a2 + 8)) & 0xE4)
                                                      + (**(unsigned char **)(a2 + 8) ^ 0x72);
  unsigned int v4 = *(_DWORD *)(a2 + 4) + 86118417;
  BOOL v5 = v4 < 0x73AB8A97;
  BOOL v6 = v4 > 0x73AB8A98;
  if (v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((60 * v6) ^ 0x31E)))();
}

uint64_t sub_1BCAC5D50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (108757529 * (((a1 | 0x6BA2B686) - (a1 & 0x6BA2B686)) ^ 0x8B3ED4AD));
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + (v1 ^ 0x215))
                              + 8
                              * ((50 * (((*(void *)a1 == *(void *)(a1 + 8)) ^ (v1 - 84)) & 1)) ^ v1)
                              - 4))();
}

uint64_t sub_1BCAC5DD4(uint64_t a1)
{
  v7.i64[0] = 0x9696969696969696;
  v7.i64[1] = 0x9696969696969696;
  uint64_t v8 = (v3 + v2);
  int8x16_t v9 = *(int8x16_t *)(v1 + v8 - 15);
  int8x16_t v10 = *(int8x16_t *)(v1 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(int8x16_t *)(v11 - 15) = vaddq_s8(v9, v7);
  *(int8x16_t *)(v11 - 31) = vaddq_s8(v10, v7);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((49 * (((v5 - 805) | 0x101) - 225 != (((v5 - 17) ^ 0xFFFFFCF4) & v4))) ^ (v5 - 17))))();
}

void sub_1BCAC5E4C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x7EC954F57526279DLL);
  int v4 = v2 - 874675926;
  BOOL v3 = v2 - 874675926 < 0;
  int v5 = 874675926 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 4) - 460628867 * ((a1 & 0x873FB66C | ~(a1 | 0x873FB66C)) ^ 0x3456CBEE) - 583;
  __asm { BRAA            X21, X17 }
}

uint64_t sub_1BCAC5FA0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a4 + 1244) | 0x41) ^ 0x5D1) * (v5 == a3)) ^ a4)))(0);
}

uint64_t sub_1BCAC5FD4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((262 * (v5 ^ 0x304)) ^ 0x702) * ((a4 + a3 - 2143271934) < 8)) | v5)))();
}

uint64_t sub_1BCAC6044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((*(_DWORD *)(*(void *)(a10 - 0x7EC954F575262799)
                                                           + 4
                                                           * (int)(((v10 - 850812225) & 0x32B65F7D ^ 0xB2CC5BE5)
                                                                 + 1295229563)) != v11)
                                              * ((((v10 - 850812225) & 0x32B65F7D) - 794) ^ 0x3BF)) ^ (v10 - 850812225) & 0x32B65F7D)))(a1);
}

uint64_t sub_1BCAC6148@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0x7EC954F57526279DLL);
  int v5 = v4 - 874675926;
  if (v4 - 874675926 < 0) {
    int v5 = 874675926 - v4;
  }
  *(_DWORD *)(v1 - 0x7EC954F57526279DLL) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((((v5 ^ 0xF2EBD5E7) + 1063190240 + ((2 * v5) & 0xE5D7ABCE) != 843764935)
                                     * (((v3 + 730413467) & 0xD476C7BF) - 538)) ^ v3)))();
}

void sub_1BCAC61E4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1BCAC6228@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((445
                                              * (v1 - a1 >= (unint64_t)((2 * (v3 ^ 0x1E4) + 1098314509) ^ 0x4176F79Bu)
                                                          - 580)) ^ (2 * (v3 ^ 0x1E4)))))(v2);
}

uint64_t sub_1BCAC6274@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(v1 - 0x5B51E979A7EFF0BDLL) == (((a1 ^ 0x387) - 84) ^ 0x2161047))
                                * ((((a1 ^ 0x387) - 1482708826) & 0x586057FD) - 1727)) ^ a1 ^ 0x387)))();
}

uint64_t sub_1BCAC62DC(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (25 * (((v4 + a3 - (v3 & 3) + 9) & 0xFFFFFFFC) > v4 + a3 + 12)))))();
}

uint64_t sub_1BCAC6338@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned int v13 = ((((v6 + v7 + a2 - v8) >> 30) ^ 1) + a2 - 4 * ((v6 + v7 + a2 - v8) >> 31)) ^ (v6 + v7 + a2 - v8);
  *(_DWORD *)(v11 + 4 * a3) = a3 + v12 + v13 * a1 - ((v3 + 2 + v13 * v4) & v5) - 1;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a3 < 0x26F) | (2 * (a3 < 0x26F))) ^ v9)))();
}

uint64_t sub_1BCAC634C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a14 + 4 * (v17 - 521138062)) = v14;
  int v19 = v15 - 1878 + v17 + 281742580;
  BOOL v21 = v19 < -1344602869 || v19 >= v16;
  return (*(uint64_t (**)(void))(v18 + 8 * (v15 | (8 * v21))))();
}

uint64_t sub_1BCAC639C@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W8>)
{
  int v7 = *(unsigned __int8 **)(a3 + 8 * (a5 ^ (a1 + 3)));
  uint64_t v8 = (a2 + a5 + 932) | 0xC8u;
  BOOL v10 = ((**(unsigned __int8 **)(a4 + 80) - (*v7 ^ 0x80)) ^ 0x7AD7EC3E)
      + (((**(unsigned __int8 **)(a4 + 80) - (*v7 ^ 0x80)) << (((a2 + a5 - 92) | 0xC8) + 9)) & 0xF5AFD87C)
      - 578832418 != v6
     || (v8 ^ 0x5B695B74598E89E9) == 0x5B695B74598E8D08;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (int)((800 * v10) ^ v8)))(200);
}

uint64_t sub_1BCAC63EC@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v8 = v2 + ((v3 - 589) | v4) - 1523;
  *(unsigned char *)(a1 + v8) = ((a2 + 1) ^ v5) * (a2 + 18);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 0) * v6) ^ v3)))();
}

uint64_t sub_1BCAC63F4()
{
  return ((uint64_t (*)(void))STACK[0x4F8])();
}

uint64_t sub_1BCAC6428(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5, char a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((v8 == ((v7 ^ a5) * a6 + 107)) * (((v7 + a7) & a4) - 359)) ^ v7)))();
}

uint64_t sub_1BCAC645C(unint64_t a1)
{
  STACK[0x510] = STACK[0x370] - 176;
  STACK[0x4C8] = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 - 185) ^ 0x359) * (v2 > a1)) ^ v1)))();
}

void sub_1BCAC64EC()
{
}

uint64_t sub_1BCAC6500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 112) = (v16 + 236) ^ (108757529
                                        * ((((v17 - 128) | 0x3E78ACD8) - (v17 - 128) + ((v17 - 128) & 0xC1875320)) ^ 0xDEE4CEF3));
  *(void *)(v17 - 128) = a14;
  *(void *)(v17 - 120) = &STACK[0x7EC954F5752627D1];
  (*(void (**)(uint64_t))(v14 + 8 * (v16 ^ 0x989)))(v17 - 128);
  *(void *)(v17 - 120) = v15;
  *(void *)(v17 - 112) = a14;
  *(_DWORD *)(v17 - 128) = (v16 + 99) ^ (1374699841
                                       * ((((v17 - 128) | 0xC863ADDB) + (~(v17 - 128) | 0x379C5224)) ^ 0xA597B5D3));
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 + 1704)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((100
                                              * (*(_DWORD *)(v17 - 124) > ((((v16 - 264847862) & 0xFC9427C) + 1002) ^ 0x14CED208u))) ^ v16)))(v18);
}

uint64_t sub_1BCAC6630@<X0>(int a1@<W8>)
{
  unsigned int v5 = ((((2 * &v7) | 0x2769EF96) - &v7 + 1816856629) ^ 0x732895E0) * a1;
  uint64_t v9 = v3;
  uint64_t v7 = 0x3F8123127DDA1A64;
  unsigned int v10 = 1453518680 - v5;
  int v11 = v1 - v5 - 1211;
  unsigned int v8 = v5 ^ 0xD762CC78;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v4 + 8 * (v1 ^ 0xE3F)))(&v7);
  *(_DWORD *)(v2 + 4) = *(_DWORD *)(v3 - 0x5B51E979A7EFF0B5);
  return result;
}

uint64_t sub_1BCAC66BC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)((((a1 + 954681289) & 0xC718B767 ^ (a1 - 290)) * (v2 != v1)) ^ a1)))(-1316140873);
}

uint64_t sub_1BCAC6708(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 32) = a4;
  return result;
}

uint64_t sub_1BCAC6710@<X0>(int a1@<W8>)
{
  *v2 ^= STACK[0x400];
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + a1 - 480 == 1051671111) * v1) ^ (a1 + 444))))();
}

uint64_t sub_1BCAC6770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  BOOL v23 = v21 != 1977941023 || a19 != 1772733382;
  return (*(uint64_t (**)(void))(v20 + 8 * ((v23 * (((v19 - 11) | 4) + 597)) ^ v19)))();
}

uint64_t sub_1BCAC67B8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((47 * (*(unsigned __int8 *)(a1 + v2) != ((v1 + 1) ^ (2 * v1) ^ 0x44))) ^ v1)))();
}

uint64_t sub_1BCAC67F0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v3 + v0 + 2) > 0x7FFFFFFE) * (((v2 ^ 0x200) + 95) ^ 0x135)) ^ (v2 + 407))))();
}

uint64_t sub_1BCAC6838@<X0>(uint64_t a1@<X1>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * ((742 * (a3 + 1 == v6 + 20)) ^ a2)))(v4, a1, v3);
}

uint64_t sub_1BCAC6914()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v3 ^ (v0 + 111)) & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v1) == v1)
                                * ((v4 - 61) ^ 0x3C0)) ^ v4)))();
}

uint64_t sub_1BCAC6960(int a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v10 = (a2 + a1 + a3);
  unint64_t v11 = v10 + v9 + 1;
  uint64_t v12 = (((a5 - 1821086591) & 0x6C8B9777) - 1352) & v10;
  uint64_t v13 = v12 - v10;
  unint64_t v14 = v6 + v13;
  uint64_t v15 = v12 + ((6 * (a5 ^ 0x1F8u)) ^ 0x3E5);
  unint64_t v16 = v6 + v15;
  unint64_t v17 = v7 + v13;
  unint64_t v18 = v7 + v15;
  unint64_t v19 = v5 + v13;
  unint64_t v20 = v5 + v15;
  BOOL v22 = v16 > v9 && v14 < v11;
  if (v18 > v9 && v17 < v11) {
    BOOL v22 = 1;
  }
  int v25 = v20 > v9 && v19 < v11 || v22;
  return (*(uint64_t (**)(void))(v8 + 8 * (v25 | a5)))();
}

uint64_t sub_1BCAC6A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((a8 - 1238) | 0x344) - 751) * (v8 == a5)) ^ a8)))();
}

uint64_t sub_1BCAC6A2C()
{
  STACK[0x3B0] = v0;
  int v4 = (v1 - 474) | 0x240;
  STACK[0x400] = (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8 * (v1 + 1469)))(STACK[0x2B0], 2965982036);
  int v5 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 1488)))();
  unsigned int v6 = v4 + 1135927250 + v5 - ((2 * v5) & 0x8769BFA4) - 714;
  unsigned int *v2 = v6;
  int v7 = (((v6 >> 30) ^ 1) + 1135927250 - 4 * (v6 >> 31)) ^ v6;
  v2[1] = 1812433253 * v7 - ((2 - 670100790 * v7) & ((v4 + 822) ^ 0x8769B9A4)) + 1135927251;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 ^ 0x26)))();
}

uint64_t sub_1BCAC6B14()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1504)))();
  return (*(uint64_t (**)(void))(v1 + 8 * (((32 * (STACK[0x588] != 0)) | ((STACK[0x588] != 0) << 6)) ^ (v0 + 78))))();
}

uint64_t sub_1BCAC6B50@<X0>(int a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X6>, int a6@<W7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v37 = 4 * (a7 + 1 + a4);
  unint64_t v38 = (*(_DWORD *)(a24 + v37) ^ v24)
      + (a6 ^ v33 ^ (unint64_t)(a3 - 838) ^ HIDWORD(v28))
      + v26 * (unint64_t)(*(_DWORD *)(*a5 + v37) ^ v24);
  unint64_t v39 = HIDWORD(v31)
      + v30 * (unint64_t)(*(_DWORD *)(*v35 + v37) ^ v24)
      + ((v38 + a1 - (v29 & (2 * v38))) ^ a2);
  *(_DWORD *)(a24 + 4 * (a7 + a4)) = v39 + v24 - (v25 & (2 * v39));
  BOOL v41 = a7 + v34 < v27 && a7 + v34 >= v36;
  return (*(uint64_t (**)(void))(v32 + 8 * ((63 * v41) ^ a6)))();
}

uint64_t sub_1BCAC6BF4@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x5B51E979A7EFF0BDLL) + 1368103267;
  unsigned int v4 = *(_DWORD *)(v1 - 0x5B51E979A7EFF0C1) - 352772273;
  BOOL v5 = v3 < 0x53A1AFA1;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x53A1AFA1) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v6 * (((v2 ^ 0x1AF) + 1067) ^ (v2 + 687))) | v2)))();
}

uint64_t sub_1BCAC6C90@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v20 = a1 + 93;
  int v21 = (((~(v19 - 144) & 0x34F71EA) - (~(v19 - 144) | 0x34F71EB)) ^ 0x4FD9F396) * v14;
  *(_DWORD *)(v19 - 128) = v21 + a13 + ((a1 + 93) ^ 0xE4002EFB);
  *(_DWORD *)(v19 - 136) = v21 + a1 - 435;
  *(void *)(v19 - 120) = v13;
  *(void *)(v19 - 144) = v18;
  uint64_t v22 = v13;
  (*(void (**)(uint64_t))(v16 + 8 * (a1 + 82)))(v19 - 144);
  *(void *)(v19 - 144) = v15;
  *(void *)(v19 - 136) = a9;
  *(_DWORD *)(v19 - 128) = (v20 - 788) ^ (235795823
                                        * ((((v19 - 144) | 0xB1470161) - (v19 - 144) + ((v19 - 144) & 0x4EB8FE98)) ^ 0x25EA4838));
  (*(void (**)(uint64_t))(v16 + 8 * (v20 ^ 0xFCD)))(v19 - 144);
  *(_DWORD *)(v19 - 120) = v20
                         + 1374699841 * (((v19 - 144) & 0x8FF7030B | ~((v19 - 144) | 0x8FF7030B)) ^ 0x1DFCE4FD)
                         - 419;
  *(void *)(v19 - 112) = a9;
  *(void *)(v19 - 104) = a8;
  *(void *)(v19 - 144) = v15;
  *(void *)(v19 - 136) = a10;
  *(void *)(v19 - 128) = v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v20 + 40)))(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((((((v20 - 1014) | 0x220) ^ 0xFEB) + (v20 ^ 0x1D6)) * (v17 == 0)) ^ v20)))(v23);
}

uint64_t sub_1BCAC6D14()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v0 & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                      + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v1) == v1)
                                     * (((v2 + 1755926686) & 0x9756AF3F) + 1772)) ^ v2)))();
}

uint64_t sub_1BCAC6D64@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((49 * (v2 + 1 == v3 + 32)) ^ a2)))(a1);
}

uint64_t sub_1BCAC6E2C(uint64_t result)
{
  *(_DWORD *)(result + 4) = ((v2 + 329) ^ 0x299DAA32) - v1;
  return result;
}

uint64_t sub_1BCAC6E48(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xEBEFFF5F)
                       + 385603565
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xBE);
  return 0;
}

uint64_t sub_1BCAC6E80@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((14 * (a1 + 1 != v3 + 16)) ^ v1)))();
}

uint64_t sub_1BCAC6F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * (((a19 == 36307424) * (v19 + 376)) ^ v19)))();
}

void sub_1BCAC6F9C(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 + 535753261 * ((a1 & 0x658A5D69 | ~(a1 | 0x658A5D69)) ^ 0x9081ACB9);
  uint64_t v4 = *(void *)(a1 + 8);
  v3[0] = v1 + 235795823 * ((v3 & 0xC687DC9D | ~(v3 | 0xC687DC9D)) ^ 0xADD56A3B) - 26;
  uint64_t v2 = (char *)*(&off_1F16F9FD0 + v1 - 303) - 4;
  (*(void (**)(_DWORD *))&v2[8 * (v1 ^ 0x991)])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAC70E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = (v2 + 1031143535) & 0xC289FF8F;
  unint64_t v5 = ((2 * (void)&STACK[0x530]) & 0x3BFBD7EDFDFCFFF0)
     + ((unint64_t)&STACK[0x530] ^ 0x1DFDEBF6FEFE7FFFLL)
     + (v4 ^ 0xE367749F93B1AC7BLL);
  unint64_t v6 = a2 - 1;
  STACK[0x530] = v6;
  *(unsigned char *)(a1 + v6) = ((v5 + 3) ^ 0xBA) * (v5 + ((v4 + 67) ^ 0xDC));
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((STACK[0x530] != 0) | (2 * (STACK[0x530] != 0))) ^ v4)))();
}

uint64_t sub_1BCAC7194@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(int8x16_t *)(a1 + (a2 - 41179197 + v24)) = veorq_s8(*(int8x16_t *)(a23 + v24), v27);
  return (*(uint64_t (**)(void))(v26 + 8 * ((37 * ((((v23 - 724) | 0x41u) ^ 0x59) + v24 == v25)) ^ v23)))();
}

uint64_t sub_1BCAC719C@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = ((36 * (v1 ^ 0x182)) ^ 0xCBDD834D) + *(_DWORD *)(a1 + 532) < 0x7FFFFFFF;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (8 * v3)) ^ v1)))();
}

uint64_t sub_1BCAC71E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  int v18 = ((v9 ^ a1) + v15 - (v12 & (2 * (v9 ^ a1)))) ^ v8;
  int v19 = *(_DWORD *)(v16 + 4 * (*(unsigned char *)(a2 + v10 + v13) - 3)) ^ v17;
  int v20 = (a7 ^ v15)
      + v7
      + v18
      + *(_DWORD *)(a3 + 4 * (v10 + v13))
      + v19
      + v15
      - (v12 & (2 * ((a7 ^ v15) + v7 + v18 + *(_DWORD *)(a3 + 4 * (v10 + v13)) + v19)));
  unsigned int v21 = (((v20 ^ v15) << (*(unsigned char *)(a4 + v10 + v13) - 36)) | ((v20 ^ v15) >> (36 - *(unsigned char *)(a4 + v10 + v13))))
      + (a1 ^ v15);
  return (*(uint64_t (**)(void))(v11 + 8 * ((465 * (v10 + 1 != v14 + 48)) ^ a5)))(v21 + v15 - (v12 & (2 * v21)));
}

uint64_t sub_1BCAC72A0@<X0>(int a1@<W0>, int a2@<W6>, int a3@<W7>, int a4@<W8>, int8x16_t a5@<Q2>)
{
  *(int8x16_t *)(v6 + v5) = veorq_s8(*(int8x16_t *)(v7 + (a4 + v5)), a5);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 == 48) * a3) ^ (a2 + a1 + 1629))))();
}

uint64_t sub_1BCAC72D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v16 - 136) = (v14 - 742) ^ (1374699841
                                        * ((2 * ((v16 - 136) & 0x4A0D4328) - (v16 - 136) - 1242383148) ^ 0xD806A4DD));
  *(void *)(v16 - 128) = a9;
  *(void *)(v16 - 120) = a14;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 863)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((59
                                              * ((v14 ^ 0x9D ^ (*(_DWORD *)(v16 - 132) > ((v14 + 436) ^ 0x14CED284u))) & 1)) ^ (v14 - 1045))))(v17);
}

uint64_t sub_1BCAC72E0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * ((56 * (((v5 == v6) ^ (a3 - 125 - v4 + 1)) & 1)) | a3)))(0);
}

void sub_1BCAC7318()
{
}

uint64_t sub_1BCAC7328()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((-29 * (v0 ^ 0x22) - 1) & 1) * ((227 * (v0 ^ 0x722)) ^ 0x56C)) ^ (227 * (v0 ^ 0x722)))))();
}

uint64_t sub_1BCAC737C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((137 * (v3 + v2 + 1212416657 < ((v1 + 857) ^ 0x417u))) ^ (v1 + 370))))();
}

uint64_t sub_1BCAC73D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((89 * (v0 < 0xF2628EFA)) | (v2 - 2033988086))))();
}

uint64_t sub_1BCAC7420(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v2 = 1759421093 * (((a1 | 0x72C27792) - (a1 & 0x72C27792)) ^ 0xC1BFC7C6);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  int v4 = *(_DWORD *)(a1 + 16) ^ v2;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 24);
  int v7 = 1374699841 * ((&v10 + 1172917496 - 2 * ((unint64_t)&v10 & 0x45E94CF8)) ^ 0x281D54F1);
  unsigned int v8 = ((432548285 * (*(_DWORD *)a1 + v2) + 1839140840) ^ 0x5DFFEFFE)
     + v7
     + ((2 * (432548285 * (*(_DWORD *)a1 + v2) + 1839140840)) & 0xBBFFDFFC)
     - 219414644;
  int v13 = v3 - v7 + 2024873695;
  unsigned int v14 = v8;
  unsigned int v15 = v4 - ((2 * v4 - 118536294) & 0xE908D056) - v7 - 251917320;
  uint64_t v12 = v6;
  uint64_t v10 = v5;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F16F9FD0 + (int)(v3 ^ 0x874EE31D))
                                                + 8 * (int)(v3 ^ 0x874EEBDC)
                                                - 4))(&v10);
  *(_DWORD *)(a1 + 4) = v11;
  return result;
}

uint64_t sub_1BCAC75C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (((a5 + (v9 ^ 0x2AA) + 579 == 984897561) * (((v9 ^ 0x2AA) - 1222116171) & 0x6DFDBFF3 ^ (v10 + 495))) ^ v9 ^ 0x2AA)))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1BCAC7634@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8 * ((51 * (*(_DWORD *)(*v4 + 4 * a1) == (((v3 - 955) | 0xC0) ^ (v2 + 200)))) ^ v3)))();
}

uint64_t sub_1BCAC766C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1BCAC7684@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((458 * (v1 + 1 == v2)) ^ a1)))();
}

uint64_t sub_1BCAC7698(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1BCAC76B0()
{
  BOOL v5 = v0 - 1698979492 > 1395422870 || v0 - 1698979492 < v3;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((v5 * (((v2 + 49810338) & 0xFD07F1F6) - 452)) ^ v2)))();
}

uint64_t sub_1BCAC7714(unsigned int a1, int a2, int a3)
{
  int v10 = a3 - 1;
  *(_DWORD *)(*v5 + 4 * (v3 + v10 + 379)) = v4;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v6 & v7 ^ v3) + v10 > a1) * a2) ^ v8)))();
}

void sub_1BCAC771C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1BCAC77B8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v7 = (v3 + 295) ^ (108757529
                   * ((-201153669 - (&v5 | 0xF402A37B) + (&v5 | 0xBFD5C84)) ^ 0xEB613EAF));
  uint64_t v5 = a1;
  uint64_t v6 = v2;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (v3 ^ 0x94E)))(&v5);
}

uint64_t sub_1BCAC7828@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v4)) = *(unsigned char *)(v3 + (v7 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * ((127 * (v5 + v7 != v2)) ^ v6)))(0);
}

uint64_t sub_1BCAC7830()
{
  *(_DWORD *)(v3 - 104) = (v1 + 524) ^ (108757529
                                      * ((2 * ((v3 - 120) & 0x5A3F7D90) - (v3 - 120) - 1514110358) ^ 0x455CE041));
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 112) = v5;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0x8A9)))(v3 - 120);
}

uint64_t sub_1BCAC78D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 128) = (v14 - 671) ^ (1374699841 * ((v18 - 128) ^ 0x6DF41809));
  *(void *)(v18 - 120) = v17;
  *(void *)(v18 - 112) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 ^ 0xCEA)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((29
                                              * ((((v14 - 770) ^ 0x51F ^ (*(_DWORD *)(v18 - 124) > (v16 + 1555))) & 1) == 0)) ^ v14)))(v19);
}

uint64_t sub_1BCAC7960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  uint64_t v5 = v2;
  unsigned int v6 = v3 - 535753261 * ((((2 * &v5) | 0x54F3A148) - &v5 + 1434857308) ^ 0xA08DDE8B) + 135;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 + 158)))(&v5);
}

uint64_t sub_1BCAC79E8(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  *(_DWORD *)(v64 - 124) = v58;
  *(_DWORD *)(v64 - 120) = v63;
  *(_DWORD *)(v64 - 128) = v58 & 0xFFFFFFF8;
  int v66 = -8 - a5;
  char v67 = a2 + a1 + v62;
  uint64_t v68 = (a2 + a1 + a3 + v66 + 8);
  v70.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 + (_BYTE)v66 + 8) & 0xF;
  v70.val[0].i64[1] = (v67 + 97 + (_BYTE)v66 + 8) & 0xF;
  v70.val[1].i64[0] = (v67 + 96 + (_BYTE)v66 + 8) & 0xF;
  v70.val[1].i64[1] = (v67 + (_BYTE)v66 + (a7 ^ 0x19) + 8) & 0xF;
  v70.val[2].i64[0] = (v67 + 94 + (_BYTE)v66 + 8) & 0xF;
  v70.val[2].i64[1] = (v67 + 93 + (_BYTE)v66 + 8) & 0xF;
  v70.val[3].i64[0] = (v67 + 92 + (_BYTE)v66 + 8) & 0xF;
  v70.val[3].i64[1] = (v67 + 91 + (_BYTE)v66 + 8) & 0xF;
  *(int8x8_t *)(v65 - 7 + v68) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v60 + (v68 & 0xF) - 7), *(int8x8_t *)(v65 - 7 + v68)), veor_s8(*(int8x8_t *)(v61 + (v68 & 0xF) - 7), *(int8x8_t *)(v59 + (v68 & 0xF) - 7))), vrev64_s8(vorr_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v70, (int8x16_t)xmmword_1BCB19A40), (int8x8_t)0x505050505050505), (int8x8_t)0x8080808080808080)));
  return (*(uint64_t (**)(__n128))(a58 + 8 * ((13 * (-(v58 & 0xFFFFFFF8) == v66)) ^ a7)))((__n128)xmmword_1BCB19A40);
}

uint64_t sub_1BCAC7B38(uint64_t a1, int a2)
{
  unsigned int v5 = v4 + 825494549 + ((a2 + 1033663082) & 0xC2638E7A);
  BOOL v6 = v5 < 0xC11AC172;
  BOOL v7 = v5 > v2 + 1122385588;
  if (v2 + 1122385588 < ((a2 - 499) | 5u) - 1055211547 != v6) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((229 * v7) ^ a2)))();
}

uint64_t sub_1BCAC7BCC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>)
{
  v19.val[1].i64[0] = (v9 + 13) & 0xF;
  v19.val[1].i64[1] = (v9 + 12) & 0xF;
  v19.val[2].i64[0] = (v9 + 11) & 0xF;
  v19.val[2].i64[1] = (v9 + 10) & 0xF;
  v19.val[3].i64[0] = (v9 + 9) & 0xF;
  v19.val[3].i64[1] = (v9 + 8) & 0xF;
  v20.val[0].i64[0] = (v9 + 7) & 0xF;
  v20.val[0].i64[1] = (v9 + 6) & 0xF;
  v20.val[1].i64[0] = (v9 + 5) & 0xF;
  v20.val[1].i64[1] = (v9 + 4) & 0xF;
  v20.val[2].i64[0] = (v9 + 3) & 0xF;
  v20.val[2].i64[1] = (v9 + 2) & 0xF;
  v20.val[3].i64[0] = (v9 + 1) & 0xF;
  v20.val[3].i64[1] = v9 & 0xF;
  v12.i64[0] = 0x6161616161616161;
  v12.i64[1] = 0x6161616161616161;
  unsigned int v13 = a3 + a1 + a2;
  v14.i64[0] = 0x8080808080808080;
  v14.i64[1] = 0x8080808080808080;
  v19.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a1 + (_BYTE)a2) & 0xF;
  v19.val[0].i64[1] = (v9 + 14) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_1BCB19A20).u64[0];
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_1BCB19A20).u64[0];
  int8x16_t v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 - 15 + v13), *(int8x16_t *)(v7 + v19.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v6 + v19.val[0].i64[0] - 15), *(int8x16_t *)(v8 + v19.val[0].i64[0] - 15))));
  int8x16_t v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v14), vmulq_s8(v15, v12)));
  *(int8x16_t *)(a5 - 15 + v13) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v10 & 0xFFFFFFF0) == 16) * (a4 + 115)) ^ a4)))();
}

uint64_t sub_1BCAC7D28@<X0>(uint64_t a1@<X0>, char a2@<W5>, char a3@<W6>, char a4@<W7>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  unint64_t v58 = STACK[0x5F8];
  uint64_t v59 = (v56 + 326685916);
  int v60 = *(_DWORD *)(a5 + a1 + v59);
  *(unsigned char *)(v58 + v59) = v60 ^ 0x46;
  *(unsigned char *)(v58 + (v56 + 326685917)) = a4 ^ BYTE1(v60);
  *(unsigned char *)(v58 + (v56 + 326685918)) = ((a55 - 85) | 0x64) ^ BYTE2(v60) ^ a3;
  *(unsigned char *)(v58 + (v56 + 326685919)) = a2 ^ HIBYTE(v60);
  LODWORD(v59) = *v55 - 136450400;
  BOOL v61 = v59 < 0x39FE2BDD;
  BOOL v62 = v59 > 0x39FE2BE1;
  if (v61) {
    BOOL v62 = v61;
  }
  return (*(uint64_t (**)(void))(v57 + 8 * ((1925 * v62) ^ (a55 + 124))))();
}

uint64_t sub_1BCAC7DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24)
{
  unsigned int v28 = (((a22 ^ v27) + a23) ^ 0x6FFF3FF6) - 768090564 + ((((a22 ^ v27) + a23) << a16) & 0xDFFE7FEC);
  BOOL v29 = a17 < 0xF0A27CF4;
  if (v29 == v28 - 1368695102 < 0xF0A27CF4) {
    LOBYTE(v29) = v28 - 1368695102 < a17;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)((((((v26 ^ 0xE9) - 1) ^ v29) & 1) * (((v26 ^ 0x7E9) + 1041185287) & 0xC1F0C41B ^ 0x15)) ^ v26 ^ 0x7E9)))(((a24 + (v24 ^ v27)) ^ 0x7FF3FDFB) - 553851144 + ((2 * (a24 + (v24 ^ v27))) & 0xFFE7FBF6), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1BCAC7EE0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v6 + (v2 + v4)) = *(unsigned char *)(a1 + (v2 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v2 - 1 == v5) * ((v1 ^ v3) - 742)) ^ v1)))();
}

uint64_t sub_1BCAC7F14@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((1010 * (v3 == ((v2 + a1 - 966 - 1089) ^ (a1 + 9)))) ^ a1)))();
}

uint64_t sub_1BCAC7F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v27 + ((v25 - 1354) | 0x10) - 601) = 0x8080808080808080;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((4 * ((v26 & 0xFFFFFFFFFFFFFFF8) == 8)) | (32 * ((v26 & 0xFFFFFFFFFFFFFFF8) == 8)) | v25)))();
}

uint64_t sub_1BCAC7F98@<X0>(int a1@<W8>)
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v4 + v8) = ((v1 + 1) ^ v3) * (v1 + 18);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == v5) * v6) ^ a1)))();
}

uint64_t sub_1BCAC7FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v31 - 136) = v26;
  *(void *)(v31 - 128) = v29;
  *(_DWORD *)(v31 - 120) = v28
                         + 535753261
                         * ((((v31 - 144) ^ 0xF2E36FB1 | 0xAD039F8D) - (((v31 - 144) ^ 0xF2E36FB1) & 0xAD039F8D)) ^ 0x5514FE13)
                         + 1587;
  *(void *)(v31 - 112) = v26;
  *(void *)(v31 - 144) = v30;
  (*(void (**)(uint64_t))(v27 + 8 * (v28 + 1893)))(v31 - 144);
  int v32 = 1225351577 * ((v31 - 144) ^ 0x7EFF9A32);
  *(_DWORD *)(v31 - 128) = (v25 - 810746374) ^ v32;
  *(_DWORD *)(v31 - 140) = (v28 - 43) ^ v32;
  *(void *)(v31 - 136) = a25;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v28 + 1892)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((44
                                              * (*(_DWORD *)(v31 - 144) != ((43 * (v28 ^ 0xCA) - 1723790718) & 0x66BEF7F6 ^ 0x37C76FD))) ^ v28)))(v33);
}

void sub_1BCAC80C8(uint64_t a1)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1BCAC815C@<X0>(unint64_t a1@<X0>, int a2@<W3>, int a3@<W6>, int a4@<W8>)
{
  *(void *)(v6 + 1516) = v4;
  *(void *)(v6 + 1524) = v4;
  *(_DWORD *)(v6 + 1532) = v5;
  *(void *)(a1 + 96) = v6;
  STACK[0x268] = v6;
  *(_DWORD *)(v6 + 476) = 1517586989;
  unint64_t v9 = STACK[0x510];
  int v10 = (char *)&STACK[0x670] + STACK[0x510] + (a4 ^ 0x325u) - 0x265CB198B5761BC1;
  STACK[0x370] = STACK[0x510];
  STACK[0x368] = v9 + 432;
  STACK[0x3E0] = STACK[0x5E0];
  STACK[0x280] = (unint64_t)(v10 - 391);
  STACK[0x208] = a1;
  STACK[0x380] = a1;
  int v11 = a4 ^ 0xC2;
  STACK[0x3C0] = *(void *)(v8 + 8 * a4);
  STACK[0x510] = STACK[0x368];
  LODWORD(STACK[0x4D0]) = 36307408;
  LODWORD(STACK[0x474]) = 1854503558;
  STACK[0x458] = 0;
  LODWORD(STACK[0x578]) = -1880706817;
  *(_DWORD *)(v10 - 783) = a2;
  LODWORD(STACK[0x3B8]) = 1263548;
  LODWORD(STACK[0x400]) = (a4 ^ 0xC2) - 178695024;
  LODWORD(STACK[0x3E8]) = -431293830;
  LODWORD(STACK[0x3A8]) = -237289448;
  LODWORD(STACK[0x3B0]) = 315767394;
  BOOL v13 = *(_DWORD *)(v10 - 783) != (((a4 ^ 0xC2) + 1223) ^ (a2 + 939)) || a3 + 1 != a3 + (a4 ^ 0xC2) - 232;
  int8x16_t v14 = *(uint64_t (**)(void))(v8 + 8 * ((1072 * v13) ^ v11));
  LODWORD(STACK[0x3C8]) = v7;
  return v14();
}

uint64_t sub_1BCAC82E4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v1 - 531) | 0x260) - 597) | 0x208) ^ 0x35B ^ ((v1 - 531) | 0x260))))();
}

uint64_t sub_1BCAC8368@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((a3 == ((a2 + a1 + 781) ^ (v4 + 873))) * ((a1 + 2020260273) & 0xC7EE77FE ^ 0x11F)) ^ (a2 + a1 + 147))))();
}

uint64_t sub_1BCAC83B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, unint64_t *a16, unint64_t *a17)
{
  a14 = (v18 + 1627) ^ (1374699841
                      * ((2 * (&a14 & 0x7EABDED0) - &a14 + 22290732) ^ 0x6CA03925));
  a16 = &STACK[0x5FA3F43A3B4E8F06];
  a17 = a11;
  (*(void (**)(unsigned int *))(v19 + 8 * (v18 ^ 0x97F)))(&a14);
  a14 = (v18 + 1627) ^ (1374699841 * ((&a14 + 10095937 - 2 * (&a14 & 0x9A0D41)) ^ 0x6D6E1548));
  a16 = &STACK[0x5FA3F43A3B4E8EFE];
  a17 = a11;
  (*(void (**)(unsigned int *))(v19 + 8 * (v18 ^ 0x97F)))(&a14);
  a14 = (v18 + 1627) ^ (1374699841
                      * ((&a14 & 0xC1F6A691 | ~(&a14 | 0xC1F6A691)) ^ 0x53FD4167));
  a16 = &STACK[0x5FA3F43A3B4E8F02];
  a17 = a11;
  (*(void (**)(unsigned int *))(v19 + 8 * (v18 ^ 0x97F)))(&a14);
  a16 = a11;
  a14 = v18
      + 1225351577
      * ((1283525641 - (&a14 ^ 0xE62902AC | 0x4C810C09) + (&a14 ^ 0xE62902AC | 0xB37EF3F6)) ^ 0x2BA86B68)
      + 987;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v19 + 8 * (v18 + 1802)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((1393 * (a15 == ((v17 + v18 + 1675) ^ 0x1546D83))) ^ v18)))(v20);
}

uint64_t sub_1BCAC859C@<X0>(int a1@<W8>)
{
  int v7 = (2 * a1) ^ 0xE6A;
  int v8 = STACK[0x57C];
  unsigned int v9 = (v7 + 2 * LODWORD(STACK[0x57C]) - 133148348) & 0x86430662;
  unsigned int v10 = 1224239923 * (((v4 | 0xBD76D905) - (v4 & 0xBD76D905)) ^ 0x4FC524D2);
  *(void *)(v6 - 192) = STACK[0x5D0];
  *(void *)(v6 - 168) = STACK[0x360];
  *(void *)(v6 - 160) = v1;
  *(_DWORD *)(v6 - 152) = -1224239923 * (((v4 | 0xBD76D905) - (v4 & 0xBD76D905)) ^ 0x4FC524D2)
                        + 1117622293 * v2
                        + 1179212284;
  *(void *)(v6 - 144) = v3;
  *(_DWORD *)(v6 - 180) = (a1 + 1695025640) ^ v10;
  *(_DWORD *)(v6 - 176) = v8 - v10 - v9 + 1059695604;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (a1 ^ 0xF6B)))(v6 - 192);
  int v12 = *(_DWORD *)(v6 - 184);
  LODWORD(STACK[0x54C]) = v12;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (((v12 == (v7 ^ 0x3AB4550F)) * ((v7 + 546) ^ 0x586)) ^ v7)))(v11);
}

uint64_t sub_1BCAC86B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,int a40)
{
  if (a18 == 2) {
    return (*(uint64_t (**)(void))(v40 + 8 * (((a40 == 1109409085) * (a7 + 2113031567)) ^ (a7 + 2113031963))))();
  }
  if (a18 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40
  }
                                                                + 8 * ((59 * (a40 != 1109409085)) ^ (a7 + 2113032632))))(2113031579, 2113031579, a10);
  unint64_t v42 = ((unint64_t)&a23 ^ 0xFF7BBFEFFBEBF23FLL)
      + ((2 * (void)&a23) & 0xFEF77FDFF7D7E470)
      + 0x2EA7E9FFF53E00C1;
  a39 = (v42 ^ 0xBA) * (v42 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 2848))(2113031579, 2113031579, a10);
}

uint64_t sub_1BCAC885C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 4) = a5;
  return result;
}

uint64_t sub_1BCAC8864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((1425 * (a11 - 84381013 < a5 + 2147482346 + ((a5 - 121) | 0x12u))) ^ a5)))();
}

uint64_t sub_1BCAC88BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == ((10 * (v4 ^ 0x14F)) ^ (a4 + 994))) * ((v4 ^ 0x3B) - 424)) ^ v4)))();
}

uint64_t sub_1BCAC8900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((193 * (a4 + 1 != v6 + 16)) ^ v5)))();
}

void g9eargdzvoj3()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1F16F9FD0
       + ((qword_1E9FB7E30 - dword_1E9FB89C0) ^ 0x74u ^ byte_1BCB166A0[byte_1BCB12450[(qword_1E9FB7E30 - dword_1E9FB89C0) ^ 0x74] ^ 0x82])
       - 164);
  uint64_t v1 = (char *)off_1F16FA268 - 12;
  int v2 = (char *)off_1F16FA130 - 4;
  uint64_t v3 = *(&off_1F16F9FD0
       + (*((unsigned char *)off_1F16FA130
          + (*((unsigned __int8 *)off_1F16FA268 + ((qword_1E9FB7E30 + *v0) ^ 0x74u) - 12) ^ 0xBCu)
          - 4) ^ (qword_1E9FB7E30 + *v0) ^ 0x74u)
       - 33);
  uint64_t v4 = (*v3 ^ *v0) - (void)&v6;
  void *v0 = 267049729 * (v4 - 0x733E1D47A735574);
  void *v3 = 267049729 * (v4 ^ 0x733E1D47A735574);
  v7[0] = 108757529 * ((1554552142 - (v7 | 0x5CA8954E) + (v7 | 0xA3576AB1)) ^ 0x43CB089A)
        - 504207030;
  LOBYTE(v3) = (*(_DWORD *)v3 - *(_DWORD *)v0) ^ 0x74;
  int v5 = (char *)*(&off_1F16F9FD0
               + ((qword_1E9FB7E30 + dword_1E9FB89C0) ^ 0x74u ^ byte_1BCB165A0[byte_1BCB12350[(qword_1E9FB7E30 + dword_1E9FB89C0) ^ 0x74] ^ 0xDD])
               + 99)
     - 4;
  (*(void (**)(_DWORD *))&v5[8
                                      * (v3 ^ v2[v1[v3] ^ 0xC8])
                                      + 16008])(v7);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAC8C00()
{
  STACK[0x510] = 0xB15989C628513919;
  uint64_t v2 = *off_1F16FA080;
  uint64_t v3 = 1178560073 * ((v1 + 0x29E3EB6E453D5901 - 2 * ((v1 - 144) & 0x29E3EB6E453D5991)) ^ 0x321FBB86FFA921F3);
  *(void *)(v1 - 128) = 389704071 - v3;
  *(_DWORD *)(v1 - 120) = v3 ^ 0xA67E17AC;
  *(_DWORD *)(v1 - 112) = v3 ^ 0x9C4C3134;
  *(_DWORD *)(v1 - 108) = v3 ^ 0x9C4C314D;
  *(void *)(v1 - 144) = v2 ^ v3;
  *(_DWORD *)(v1 - 136) = v3 - 1672728230;
  *(_DWORD *)(v1 - 132) = -1178560073 * ((v1 + 1161648385 - 2 * ((v1 - 144) & 0x453D5991)) ^ 0xFFA921F3);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v0 + 17112))(v1 - 144);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * *(int *)(v1 - 116)))(v4);
}

uint64_t sub_1BCAC8EFC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a3 ^ 0x5F6 ^ (74 * (v3 > 1)))))();
}

void sub_1BCAC8FE0()
{
  unint64_t v0 = STACK[0x268];
  *(void *)(v0 + 1560) = *(void *)STACK[0x528];
  *(_DWORD *)(v0 + 1552) = *(_DWORD *)STACK[0x440];
  unint64_t v1 = STACK[0x208];
  *(void *)(*(void *)(STACK[0x208] + 96) + 488) = *(void *)(STACK[0x208] + 8);
  *(_DWORD *)(*(void *)(v1 + 96) + 480) = *(_DWORD *)v1;
  JUMPOUT(0x1BCAC9030);
}

void sub_1BCAC9068(uint64_t a1)
{
  int v1 = (*(_DWORD *)(a1 + 16) ^ (235795823 * ((a1 + 1866794728 - 2 * (a1 & 0x6F4506E8)) ^ 0xFBE84FB1))) + 635;
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1BCAC91D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((113 * (STACK[0x478] == 0)) ^ (v0 + 464))))();
}

uint64_t sub_1BCAC9200(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v12 + 8 * (int)((22 * (v11 == ((a2 + 939301973) & 0xC80365F6) - 1072)) ^ a2)))(a1, a2, a3, a4, a5, a6, a7, a8, *a1, a10, a11);
}

uint64_t sub_1BCAC9258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int8x16_t a19, int32x4_t a20,int8x16_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int32x4_t a56,int32x4_t a57,int32x4_t a58,int32x4_t a59)
{
  uint64_t v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * v59);
  uint64_t v69 = a52;
  uint64_t v70 = a52;
  HIDWORD(a29) = BYTE4(a53) ^ 0x5F;
  int v71 = BYTE4(a53) ^ 0x5F;
  if (v71 == 2)
  {
    int8x16x4_t v119 = vld4q_s8((const char *)&a41 + 4);
    int v96 = a3 + 1390;
    uint8x16_t v97 = (uint8x16_t)veorq_s8(v119.val[0], v67);
    uint16x8_t v98 = vmovl_u8(*(uint8x8_t *)v97.i8);
    uint16x8_t v99 = vmovl_high_u8(v97);
    uint8x16_t v100 = (uint8x16_t)veorq_s8(v119.val[1], v67);
    _Q17 = vmovl_u8(*(uint8x8_t *)v100.i8);
    _Q16 = vmovl_high_u8(v100);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    uint8x16_t v105 = (uint8x16_t)veorq_s8(v119.val[2], v67);
    uint16x8_t v106 = vmovl_high_u8(v105);
    uint16x8_t v107 = vmovl_u8(*(uint8x8_t *)v105.i8);
    v119.val[0] = veorq_s8(v119.val[3], v67);
    v119.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v119.val[0]);
    v119.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v119.val[1]);
    v119.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v119.val[1].i8);
    v119.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v119.val[0].i8);
    v119.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v119.val[0]);
    v119.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v119.val[0].i8);
    int32x4_t v108 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v107.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v98.i8), 0x18uLL)), v119.val[0]);
    int32x4_t v109 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v107, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v98), 0x18uLL)), v119.val[3]);
    int32x4_t v110 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v106.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v99.i8), 0x18uLL)), v119.val[1]);
    int32x4_t v111 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v106, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v99), 0x18uLL)), v119.val[2]);
    v119.val[0] = veorq_s8(vandq_s8((int8x16_t)v108, a21), (int8x16_t)(*(_OWORD *)v119.val & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v119.val[3] = veorq_s8(vandq_s8((int8x16_t)v109, a21), (int8x16_t)(*(_OWORD *)&v119.val[3] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v119.val[1] = veorq_s8(vandq_s8((int8x16_t)v110, a21), (int8x16_t)(*(_OWORD *)&v119.val[1] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v119.val[2] = veorq_s8(vandq_s8((int8x16_t)v111, a21), (int8x16_t)(*(_OWORD *)&v119.val[2] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    a58 = vaddq_s32(vsubq_s32(v110, vaddq_s32((int32x4_t)v119.val[1], (int32x4_t)v119.val[1])), a20);
    a59 = vaddq_s32(vsubq_s32(v111, vaddq_s32((int32x4_t)v119.val[2], (int32x4_t)v119.val[2])), a20);
    a56 = vaddq_s32(vsubq_s32(v108, vaddq_s32((int32x4_t)v119.val[0], (int32x4_t)v119.val[0])), a20);
    a57 = vaddq_s32(vsubq_s32(v109, vaddq_s32((int32x4_t)v119.val[3], (int32x4_t)v119.val[3])), a20);
    uint64_t v112 = (_DWORD *)(v60 + 4 * (v64 + 965353148));
    int v113 = *(v112 - 8) ^ *(v112 - 3);
    int v114 = *(v112 - 16) ^ *(v112 - 14) ^ (v113 + v62 - ((2 * v113) & 0x7568AA9A));
    HIDWORD(v115) = v96 ^ 0x1A ^ (v62 - 1107) ^ v114;
    LODWORD(v115) = v114;
    *uint64_t v112 = (v115 >> 31) + v62 - ((2 * (v115 >> 31)) & 0x7568AA9A);
    return (*(uint64_t (**)(uint64_t))(v61 + 8 * ((26 * (v65 == 965353085)) ^ v96)))(v70);
  }
  else if (v71 == 1)
  {
    HIDWORD(a30) = a52;
    int8x16x4_t v118 = vld4q_s8((const char *)&a41 + 4);
    uint8x16_t v72 = (uint8x16_t)veorq_s8(v118.val[0], v67);
    uint16x8_t v73 = vmovl_u8(*(uint8x8_t *)v72.i8);
    int8x16_t v74 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v73.i8);
    int8x16_t v75 = (int8x16_t)vmovl_high_u16(v73);
    uint16x8_t v76 = vmovl_high_u8(v72);
    int8x16_t v77 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v76.i8);
    int8x16_t v78 = (int8x16_t)vmovl_high_u16(v76);
    uint8x16_t v79 = (uint8x16_t)veorq_s8(v118.val[1], v67);
    uint16x8_t v80 = vmovl_high_u8(v79);
    uint16x8_t v81 = vmovl_u8(*(uint8x8_t *)v79.i8);
    uint8x16_t v82 = (uint8x16_t)veorq_s8(v118.val[2], v67);
    _Q21 = (int8x16_t)vmovl_high_u8(v82);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v82.i8);
    int8x16_t v85 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    int8x16_t v90 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v118.val[0] = veorq_s8(v118.val[3], v67);
    v118.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v118.val[0]);
    v118.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v118.val[1]);
    v118.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v118.val[0].i8);
    v118.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v118.val[0]);
    v118.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v118.val[0].i8), 0x18uLL), v85), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v81.i8, 8uLL), v74));
    v118.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v118.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v81, 8uLL), v75));
    v118.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v118.val[1].i8), 0x18uLL), v90), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v80.i8, 8uLL), v77));
    v118.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v118.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v80, 8uLL), v78));
    int32x4_t v91 = (int32x4_t)veorq_s8(vandq_s8(v118.val[0], a19), (int8x16_t)(*(_OWORD *)&v74 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v92 = (int32x4_t)veorq_s8(vandq_s8(v118.val[3], a19), (int8x16_t)(*(_OWORD *)&v75 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v93 = (int32x4_t)veorq_s8(vandq_s8(v118.val[1], a19), (int8x16_t)(*(_OWORD *)&v77 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v94 = (int32x4_t)veorq_s8(vandq_s8(v118.val[2], a19), (int8x16_t)(*(_OWORD *)&v78 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a58 = vaddq_s32(vsubq_s32((int32x4_t)v118.val[1], vaddq_s32(v93, v93)), a20);
    a59 = vaddq_s32(vsubq_s32((int32x4_t)v118.val[2], vaddq_s32(v94, v94)), a20);
    a56 = vaddq_s32(vsubq_s32((int32x4_t)v118.val[0], vaddq_s32(v91, v91)), a20);
    a57 = vaddq_s32(vsubq_s32((int32x4_t)v118.val[3], vaddq_s32(v92, v92)), a20);
    return (*(uint64_t (**)(void, void, void, char *, char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * (int)a30))(*(void *)(v61 + 8 * (int)a30), a51, *(&off_1F16F9FD0 + (int)a30 - 420), (char *)*(&off_1F16F9FD0 + (int)a33) - 8, (char *)*(&off_1F16F9FD0 + (int)a30 - 543) - 8, v65 - 15, &off_1F16F9FD0, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19.i64[0],
             a19.i64[1],
             a20.i64[0],
             a20.i64[1],
             a21.i64[0],
             a21.i64[1],
             a22,
             a23,
             a24,
             a2,
             a26,
             a27,
             a28,
             a29,
             a30,
             v68,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55);
  }
  else
  {
    uint64_t v116 = HIDWORD(a51);
    HIDWORD(a50) = 2 * (HIDWORD(a50) ^ v63) + v63 - (v66 & (4 * (HIDWORD(a50) ^ v63)));
    LODWORD(a51) = 2 * (a51 ^ v63) + v63 - (v66 & (4 * (a51 ^ v63)));
    HIDWORD(a51) = 2 * (HIDWORD(a51) ^ v63) + v63 - (v66 & (4 * (HIDWORD(a51) ^ v63)));
    LODWORD(a52) = 2 * (a52 ^ v63) + v63 - (v66 & (4 * (a52 ^ v63)));
    return v68(v70, v116, a3, a4, v68, v69, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19.i64[0],
             a19.i64[1],
             a20.i64[0],
             a20.i64[1],
             a21.i64[0],
             a21.i64[1],
             a22,
             a23,
             a24,
             a2,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43);
  }
}

uint64_t sub_1BCAC9268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                                         + 8
                                                                                         * ((219
                                                                                           * (v5 >= v4 + v6 - 908391363)) ^ (v4 + v6 + 27))))(a1, a2, a3, 2260980123, 2147483638, 1135927250);
}

uint64_t sub_1BCAC92C0(uint64_t a1)
{
  int v4 = v2 + 1442433228 < (v1 + 1149650827);
  if (v1 + 1149650827 < 200 * (v2 ^ 0x73Au) + 1442434083 != (v2 + 1442433228) < 0x55F9D00B) {
    int v4 = v1 + 1149650827 < 200 * (v2 ^ 0x73Au) + 1442434083;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                                + 8 * (((32 * v4) | (v4 << 7)) ^ v2)))(a1, 1224, 1709, 403, 2418586885);
}

uint64_t sub_1BCAC92CC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + a1) = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((v4 ^ 0xE6) - 810) & v3) != 8) * ((((v4 ^ 0xE6) - 785) | 0x82) + 19)) ^ v4 ^ 0xE6)))();
}

uint64_t sub_1BCAC9324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  return (*(uint64_t (**)(void))(v55 + 8 * (int)(((a55 & 0x9DC83BBF) + 41) ^ (STACK[0x408] + 1275))))();
}

uint64_t sub_1BCAC9398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((76 * (v9 >= ((a7 - v8 + 1935857633) & 0x5FF19FFD) - 909)) ^ a7)))();
}

uint64_t sub_1BCAC93DC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((2 * ((((v1 - 740814136) < 0xFFFFFFFE) ^ (v2 - 1)) & 1)) & 0xBF | (((((v1 - 740814136) < 0xFFFFFFFE) ^ (v2 - 1)) & 1) << 6) | v2)))();
}

uint64_t sub_1BCAC9418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  return (*(uint64_t (**)(void))(v44
                              + 8
                              * ((57
                                * ((LODWORD(STACK[0x604]) ^ (v42 + 476) ^ (v43 - 2061690462) & 0x7AE2E3FE) == (((v43 - 1105) | 0x488) ^ 0xAF14148C) + a42)) ^ v43)))();
}

uint64_t sub_1BCAC9484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t))(v46 + 8 * ((((v45 + 783) ^ v45 ^ 0x1FB) * (v43 == v44)) ^ v45)))(a1, a2, 3098759969, a4, a5, a6, &a43, -836639572);
}

uint64_t sub_1BCAC94D8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((STACK[0x5B0] != 0) | (8 * (STACK[0x5B0] != 0)) | (v0 + 66))))();
}

uint64_t sub_1BCAC94FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((((a8 + 192) | 0x507) - 1999) & v8) == 0) * ((a8 - 1080367637) & 0x40651D2E ^ 0x525)) ^ a8)))();
}

uint64_t sub_1BCAC9550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v53 = *((_DWORD *)&a35 + ((v51 + v47) >> (v50 ^ v49 ^ (a8 - 2))) + 18);
  *(unsigned char *)(a1 + (v51 + v47)) = HIBYTE(v53) ^ 0xB5;
  *(unsigned char *)(a1 + (v51 + v47 + 1)) = BYTE2(v53) ^ 0xDA;
  *(unsigned char *)(a1 + (v51 + v47 + 2)) = BYTE1(v53) ^ 0x8A;
  *(unsigned char *)(a1 + (v51 + v47 + 3)) = v53 ^ 0x46;
  BOOL v54 = v51 - 778061802 < (a47 - 1635262934);
  if (v51 - 778061802 < v48 != a47 - 1635262934 < v48) {
    BOOL v54 = a47 - 1635262934 < v48;
  }
  return (*(uint64_t (**)(void))(v52 + 8 * ((1996 * v54) ^ v50)))();
}

uint64_t sub_1BCAC9608()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 + 189) ^ 0x168) * (v1 == 1453518680)) ^ v0)))();
}

uint64_t sub_1BCAC9638@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((119 * (a1 < ((v1 + 384651720) & 0x2912AEED ^ 0x244))) ^ v1)))();
}

uint64_t sub_1BCAC9680(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v9 = v4 == a4 || LODWORD(STACK[0x578]) - v6 != ((v5 + 712) | 0x146) + 559755411;
  return (*(uint64_t (**)(void))(v7 + 8 * ((59 * v9) ^ v5)))();
}

uint64_t sub_1BCAC96CC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, char a8@<W7>, int a9@<W8>)
{
  int v17 = a5 + 1;
  unsigned int v18 = ((2 * (a6 & a7 ^ (v10 + 976) ^ *(_DWORD *)(*a4 + 4 * (v17 + a9 + a3 + 1)))) << a8) | ((*(_DWORD *)(*a4 + 4 * (v17 + a9 + a3)) ^ v10) >> v9);
  *(_DWORD *)(*a4 + 4 * (v17 + v14)) = v18 + v10 - (v11 & (2 * v18));
  BOOL v19 = v17 + v15 < a2;
  if (a2 < v12 != v17 + v15 < v12) {
    BOOL v19 = a2 < v12;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v19 * v16) ^ (a1 + 833))))();
}

uint64_t sub_1BCAC96D4@<X0>(char a1@<W2>, int a2@<W4>, int a3@<W5>, int a4@<W7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,unsigned int a37)
{
  unsigned int v40 = ((*v39 & 0x7FFFFFFE | v39[623] & 0x80000000) >> ((a1 + a5 - 95) & 0xBF ^ (a1 - 1))) ^ a3;
  v39[623] = v39[396] ^ v37 ^ *((_DWORD *)&STACK[0x518] + (*v39 & 1)) ^ (v40 + a4 - (a2 & (2 * v40)));
  return (*(uint64_t (**)(void))(v38 + 8 * ((813 * (a37 > 0x26F)) ^ a5)))();
}

uint64_t sub_1BCAC9764()
{
  *(_DWORD *)(v3 - 192) = 1225351577
                        * ((66761614 - (v1 ^ 0x9B624D1B | 0x3FAB38E) + (v1 ^ 0x9B624D1B | 0xFC054C71)) ^ 0x19989B58)
                        + 2138962864
                        + v0
                        + 137;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1798)))(v3 - 192);
  LODWORD(STACK[0x2C0]) += (v0 - 293) ^ 0x43;
  unsigned int v4 = 1224239923 * ((v1 + 1813222731 - 2 * (v1 & 0x6C13954B)) ^ 0x9EA0689C);
  *(_DWORD *)(v3 - 192) = (v0 + 959) ^ v4;
  *(unsigned char *)(v3 - 160) = v4 ^ 0x26;
  *(void *)(v3 - 184) = STACK[0x278];
  *(void *)(v3 - 168) = STACK[0x270];
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x948)))(v3 - 192);
  int v6 = *(_DWORD *)(v3 - 176);
  LODWORD(STACK[0x54C]) = v6;
  LODWORD(STACK[0x2C4]) = 392823276;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((224 * (v6 == ((v0 - 1611304563) & 0x600A8F6F) + 984896233)) ^ (v0 - 293))))(v5);
}

uint64_t sub_1BCAC98C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14)
{
  int v20 = *(_DWORD *)(a1 + 24) + v18 + *(_DWORD *)(v14 - 0x5B51E979A7EFF0BDLL) - 1453518672;
  int v21 = 1178560073 * ((&a11 + 1663869989 - 2 * ((unint64_t)&a11 & 0x632CA425)) ^ 0xD9B8DC47);
  a14 = (v19 + 1443) ^ v21;
  a12 = v21 + v20 + (v19 ^ 0x1A) + 1931647316;
  a11 = v21 + 1582792080;
  a13 = v14;
  uint64_t v22 = (*(uint64_t (**)(int *))(v17 + 8 * (v19 + 1796)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * (((*v16 == v15) * (((v19 + 974) | 0x210) ^ 0x3A)) ^ v19)))(v22);
}

uint64_t sub_1BCAC99B8()
{
  int v8 = v4 ^ v7;
  BOOL v9 = v3 < v0;
  unsigned __int8 v10 = (v4 ^ v7) + 124;
  if (v9 == v2 + v6 < v0) {
    LOBYTE(v9) = v3 > v2 + v6;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v9 ^ v10) & 1) * v1) ^ v8)))();
}

uint64_t sub_1BCAC9A08@<X0>(uint64_t a1@<X8>)
{
  unint64_t v6 = v1 + v4;
  *(unsigned char *)(v6 + a1 - 1) = v3;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v6 < 0x38) * (((44 * (v2 ^ 0x366)) ^ 0x114) - 610)) ^ (44 * (v2 ^ 0x366)))))();
}

uint64_t sub_1BCAC9A50@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v35 = 4 * (v30 + 1 + v31);
  unsigned int v36 = *(_DWORD *)(v33 + 4 * (v30 + v31));
  int v37 = (a1 + ((v36 >> 30) ^ 1) + 2 * (((v36 >> 30) ^ 1 | v29) ^ (v36 >> 30)) + 18) ^ v36;
  int v38 = ((a1 + 1566083941 * v37 - ((-1162799414 * v37) & 0x8769BFA4)) ^ *(_DWORD *)(v33 + v35)) - v30;
  *(_DWORD *)(v33 + v35) = v38 - ((2 * v38 - 1790250696) & 0x8769BFA4) - 1906681746;
  *(_DWORD *)(v34 - 104) = a27 + a2 - 1826511437 + 36;
  *(void *)(v34 - 112) = (v30 - 1480780193) ^ a27;
  *(_DWORD *)(v34 - 120) = ((a2 - 1826511437) ^ 0x7F) + a27;
  *(_DWORD *)(v34 - 116) = a27;
  *(void *)(v34 - 128) = a29;
  *(_DWORD *)(v34 - 140) = (a2 - 1826511437) ^ a27;
  *(_DWORD *)(v34 - 136) = a27 + a2 - 239616346;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v32 + 8 * (a2 + 2033989280)))(v34 - 144);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * *(int *)(v34 - 144)))(v39);
}

uint64_t sub_1BCAC9B6C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((952 * (v1 + 1 == v3 + 4)) ^ v0)))();
}

uint64_t sub_1BCAC9C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v11 = a6 + v6 + 798;
  int v12 = v6 - v7 + 137;
  int v13 = a6 + v6 + 1763;
  BOOL v14 = v10 - 427580408 < (v9 + 132176513);
  if ((v10 - 427580408) < 0x766A5507 != (v9 + 132176513) < 0x766A5507) {
    BOOL v14 = (v9 + 132176513) < 0x766A5507;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((v14 * ((v11 ^ 0xFFFFFC2C) + v12)) ^ v13)))();
}

void sub_1BCAC9CCC()
{
  STACK[0x488] = *(void *)(v0 + 8 * (int)(STACK[0x408] - 588));
  JUMPOUT(0x1BCAD6D3CLL);
}

void sub_1BCAC9CF0()
{
}

uint64_t sub_1BCAC9CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = STACK[0x238];
  int v70 = LODWORD(STACK[0x238]) - 374;
  STACK[0x540] = 0;
  LODWORD(STACK[0x508]) = 1854503558;
  STACK[0x5B0] = 0;
  LODWORD(STACK[0x434]) = 1854503558;
  BOOL v71 = (*(unsigned char *)(a68 - 0x22BD6E97930F2962)
                        + ((v70 + 46) ^ 0x61)
                        - *(unsigned char *)*(&off_1F16F9FD0 + v69 - 1623)) != ((v70 + 118) ^ 0xD3);
  return (*(uint64_t (**)(void))(v68 + 8 * (((16 * v71) | (32 * v71)) ^ v70)))();
}

uint64_t sub_1BCAC9DD4()
{
  *uint64_t v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1BCAC9DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  *(void *)(*(void *)(a16 + 96) + 504) = v44 + 1;
  *(_DWORD *)(*(void *)(a16 + 96) + 496) = a18 - 1;
  int v47 = 628203409 * ((((v46 - 160) | 0xE511188F) + (~(v46 - 160) | 0x1AEEE770)) ^ 0x679914BD);
  *(_DWORD *)(v46 - 152) = v47 - 940730567;
  *(_DWORD *)(v46 - 160) = v47 - 1882357464;
  STACK[0x320] = (unint64_t)&STACK[0x781B11C067844066];
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v45 + 16112))(v46 - 160);
  return (*(uint64_t (**)(uint64_t))(v45
                                            + 8
                                            * ((35
                                              * (a18
                                               - 442596038
                                               + ((2 * (a44 & 0x3F)) ^ 0x62)
                                               + (a44 & 0x3F ^ 0xABD7FFCE) < 0xFFFFFFC0)) ^ 0x15Bu)))(v48);
}

uint64_t sub_1BCACA03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  unsigned int v12 = v9 - 2004663802;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((23
                                * (a7 - v7 - v8 + v12 >= 328
                                                       * (((v11 + 1193281599) | 0x18D30018) ^ (a6 - 4))
                                                       - 1297)) ^ v11)))();
}

uint64_t sub_1BCACA0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(int8x16_t *)(a8 + v10) = veorq_s8(*(int8x16_t *)(v12 + (v8 + v11 + v10)), v14);
  return (*(uint64_t (**)(void))(v13 + 8 * ((2046 * (v10 == 48)) ^ v9)))();
}

uint64_t sub_1BCACA104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  return (*(uint64_t (**)(void))(v38
                              + 8
                              * ((((5 * (v37 ^ 0xA4)) ^ (v37 + 1054))
                                * ((unint64_t)(&a35 + ~a18 + (v36 + v35 - 1)) > 0xF)) ^ v37)))();
}

uint64_t sub_1BCACA154()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == 0x67E8D0DC3237B438) * (((v1 - 614) | 0x5D0) - 1980)) ^ v1)))();
}

uint64_t sub_1BCACA194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v27 + ((v26 - 635) ^ (unint64_t)(a3 - 45))) = 0x8080808080808080;
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((88 * ((((v26 - 88) - 808) & v25) != 8)) | (v26 - 88))))(8);
}

uint64_t sub_1BCACA1F0@<X0>(int a1@<W5>, int a2@<W8>)
{
  if ((a2 - 36307395) <= 0x19 && ((1 << (a2 + 61)) & 0x2000A03) != 0) {
    return (*(uint64_t (**)(void))(v4
  }
                                + 8
                                * (int)((((*(_DWORD *)(v3 + v2 * (uint64_t)a1 + 40) & 1) == 0)
                                       * (((STACK[0x408] - 612) | 0x217) - 469)) ^ (STACK[0x408] + 436))))();
  int v5 = ((STACK[0x408] - 604) & *(_DWORD *)(v3 + v2 * (uint64_t)a1 + 40)) == 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((16 * v5) | (v5 << 6)) ^ (STACK[0x408] - 428))))();
}

uint64_t sub_1BCACA298(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v2 = 1224239923 * (((a1 | 0x54F5E249) - a1 + (a1 & 0xAB0A1DB6)) ^ 0xA6461F9E);
  int v3 = *(_DWORD *)(a1 + 12) ^ v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)a1;
  unsigned int v8 = 1224239923 * ((&v10 & 0x3D29F54D | ~(&v10 | 0x3D29F54D)) ^ 0x3065F765);
  int v11 = ((*(_DWORD *)(a1 + 16) + v2) ^ 0x6EDF5CCE)
      - v8
      - 4198482
      + ((2 * (*(_DWORD *)(a1 + 16) + v2)) & 0x5BFDBFFE ^ 0x2410662);
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  uint64_t v10 = v7;
  int v16 = v3 - 1695027300 + v8 + 844;
  uint64_t v14 = v6;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F16F9FD0 + v3 - 1695027300) + 8 * (v3 ^ 0x6508187A)
                                                                                              - 4))(&v10);
  *(_DWORD *)(a1 + 8) = v15;
  return result;
}

void sub_1BCACA3FC(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 1759421093 * ((((2 * a1) | 0x1851ADD4) - a1 - 204003050) ^ 0xBF5566BE);
  unsigned int v2 = 628203409 * ((2063153396 - (v5 | 0x7AF938F4) + (v5 | 0x8506C70B)) ^ 0x78ECB38);
  v5[0] = v1 + v2 - 1882357480;
  void v5[2] = v2 - 940730567;
  uint64_t v6 = &STACK[0x781B11C06784425E];
  int v3 = (char *)*(&off_1F16F9FD0 + v1 + 136) - 4;
  (*(void (**)(_DWORD *))&v3[8 * (v1 ^ 0x7CE)])(v5);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1BCACA6FC(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int32x4_t a6, int8x16_t a7, int8x16_t a8)
{
  a8.i32[0] = *(_DWORD *)(v14 + ((4 * v12) | 4));
  a8.i32[1] = *(_DWORD *)(v14 + ((4 * v12) | 8));
  a8.i32[2] = *(_DWORD *)(v14 + ((4 * v12) | 0xC));
  int8x16_t v15 = vextq_s8(a1, a8, 0xCuLL);
  int8x16_t v16 = a8;
  v16.i32[3] = *(_DWORD *)(v14 + 4 * (v12 + 4));
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a2), vandq_s8(v15, a3)), 1uLL), a4);
  v18.i32[0] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v14 + ((4 * v12) | 4)) & 1));
  v18.i32[1] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v14 + ((4 * v12) | 8)) & 1));
  v18.i32[2] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v14 + ((4 * v12) | 0xC)) & 1));
  v18.i32[3] = *(_DWORD *)(v10 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)(v14 + 4 * v12) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 + 4 * (v9 + v12)), v18), a7), (int8x16_t)vaddq_s32(vaddq_s32(v17, a6), (int32x4_t)vmvnq_s8(vandq_s8((int8x16_t)vaddq_s32(v17, v17), a5))));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v12 == 220) * v11) ^ v8)))();
}

uint64_t sub_1BCACA708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((11 * (v3 > 0xAD6CB883)) ^ (v6 + v4 - 675))))(a1, a2, a3, 2260980123);
}

uint64_t sub_1BCACA74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v17 = 1224239923 * ((((v16 - 128) | 0x20D4BCCD) - ((v16 - 128) & 0x20D4BCCD)) ^ 0xD267411A);
  *(void *)(v16 - 120) = a12;
  *(_DWORD *)(v16 - 112) = (((a14 << 6) & 0xDEA77280) - 1140857092 + ((a14 << (v15 ^ 0xA4)) ^ 0x6F53B94E)) ^ v17;
  *(_DWORD *)(v16 - 128) = v15 - v17 + 978;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x92F)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8 * ((1935 * ((*a10 - 874675927) < 0x7FFFFFFF)) ^ v15)))(v18);
}

void sub_1BCACA834()
{
}

uint64_t sub_1BCACA840()
{
  return (*(uint64_t (**)(void))(v4 + 8
                                   * ((1382 * ((5 * v3) + 4 == v0 + v2 + (v1 ^ 0x36C) - 612)) ^ v1)))();
}

uint64_t sub_1BCACA87C@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a5 + (a1 + a4)) = *(unsigned char *)(v5 + (a1 + a4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 == a2) * a3) ^ (v6 - 424))))();
}

uint64_t sub_1BCACA8B0(int a1)
{
  unsigned int v5 = ((a1 + 1176845265) & 0xB9DABFB0 ^ 0xFFFFFE4A) + *(unsigned __int8 *)(v3 + 1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((565 * ((((a1 - 1286) ^ (v1 + 88)) & (2 * v5)) + (v5 ^ v2) == v2)) ^ a1)))();
}

uint64_t sub_1BCACA910()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1241
                                * (((v0 + ((v3 - 147) | 7) - 151) & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_1BCACA960(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int32x4_t a6, int8x16_t a7, int8x16_t a8)
{
  a8.i64[0] = *(void *)(v12 + 4);
  a8.i32[2] = *(_DWORD *)(v12 + 12);
  int8x16_t v14 = vextq_s8(a1, a8, 0xCuLL);
  int8x16_t v15 = a8;
  v15.i32[3] = *(_DWORD *)(v12 + 16);
  int32x4_t v16 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v15, a3), vandq_s8(v14, a2)), 1uLL), a4);
  v14.i32[0] = *(_DWORD *)(v8 + 4 * (*(_DWORD *)(v12 + 4) & 1));
  v14.i32[1] = *(_DWORD *)(v8 + 4 * (*(unsigned int *)(v12 + 8) & ((v9 + 907) ^ v11)));
  v14.i32[2] = *(_DWORD *)(v8 + 4 * (*(_DWORD *)(v12 + 12) & 1));
  v14.i32[3] = *(_DWORD *)(v8 + 4 * (v15.i8[12] & 1));
  *(int8x16_t *)uint64_t v12 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v12 - 908), v14), a7), (int8x16_t)vaddq_s32(vaddq_s32(v16, a6), (int32x4_t)vmvnq_s8(vandq_s8((int8x16_t)vaddq_s32(v16, v16), a5))));
  return (*(uint64_t (**)(void))(v13 + 8 * ((15 * (v10 != 4)) ^ v9)))();
}

uint64_t sub_1BCACA96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((((v9 - a7) ^ (v10 - 611)) - 1188) * (v7 != v8)) ^ v9)))();
}

uint64_t sub_1BCACA998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v33 = (v31 - 870) | 0x48D;
  BOOL v34 = a7 > 0x4D214437;
  unint64_t v35 = (*(_DWORD *)(v26 + a8) ^ v23) + HIDWORD(v32);
  *(_DWORD *)(v26 + 4 * a4) = v35 + ((6 * ((v33 - 1982689264) & 0x762D6EC8 ^ v27)) ^ (v23 + 614)) - (v24 & (2 * v35));
  *(_DWORD *)(a23 + a8) = HIDWORD(v35) + v23 - 2 * HIDWORD(v35);
  if (v34 == v28 - 487049761 < -1294025784) {
    BOOL v34 = v28 - 487049761 < v25;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * ((v33 - 959) ^ (v34 * v30))))();
}

uint64_t sub_1BCACA9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(void *)(v23 - 120) = v22;
  *(void *)(v23 - 112) = a19;
  *(_DWORD *)(v23 - 104) = v20 + 1759421093 * ((v23 - 120) ^ 0xB37DB054) + 447;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 + 668)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((v21 != (((v20 - 1275) | 8) ^ 0x4AEA045D)) * ((v20 - 1267) ^ 0x30E)) ^ v20)))(v24);
}

uint64_t sub_1BCACAA34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = v3 + (((v4 + 51) | 0x11) ^ (v2 - 79));
  *(_DWORD *)(a1 - 3 + v7) = *(_DWORD *)(v1 - 3 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1959 * (v5 == 4)) ^ (v4 + 895))))();
}

void sub_1BCACAA8C()
{
  _DWORD *v0 = v1;
}

uint64_t sub_1BCACAA94@<X0>(int a1@<W2>, int a2@<W8>, int8x16_t a3@<Q2>)
{
  *int v4 = veorq_s8(*(int8x16_t *)(v5 + (a2 + a1)), a3);
  return (*(uint64_t (**)(void))(v6 + 8 * (v3 + 1629)))();
}

uint64_t sub_1BCACAAD4()
{
  int v4 = v0 ^ v1;
  BOOL v6 = v2[7] != 0x335F4D7B17DD4E17 && (v2[3] | v2[6]) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v6 * (v4 - 1638)) ^ v0)))();
}

uint64_t sub_1BCACAB20@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unint64_t *a7, char a8, unsigned int a9, unint64_t *a10, unint64_t *a11, int a12, uint64_t a13)
{
  int v16 = (v13 - 1251943449) & 0x4A9F247F;
  unsigned int v17 = 1374699841 * ((((2 * &a6) | 0xEF076246) - &a6 + 142364381) ^ 0x9A77A92A);
  a13 = *v14;
  a8 = 65 * ((((2 * &a6) | 0x46) - &a6 - 35) ^ 0x2A) - 17;
  a10 = &STACK[0x3F786DCCE8121A29];
  a11 = &STACK[0x12A1E18019D396E5];
  a12 = v16 - v17 + 1172345319;
  a9 = (a1 ^ 0xE589EDD) + ((2 * a1) & 0xAFFEB8FA ^ 0xA34E8040) - v17 - 21038080;
  a7 = &STACK[0x685C86573AC75C7E];
  uint64_t v18 = (*(uint64_t (**)(int *))(v15 + 8 * (v16 ^ 0x83Cu)))(&a6);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((a6 == v16 + 984896729) * ((v16 - 103) ^ 0x72E)) ^ v16)))(v18);
}

uint64_t sub_1BCACAC78()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((35
                                              * (v1
                                               + v0
                                               + ((v3 - 967863204) & 0x39B06BF7)
                                               + ((v3 + 328412319) & 0xEC6CD5FD)
                                               - 1694471588 > 7)) | v3)))(v2);
}

uint64_t sub_1BCACACF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  *(_DWORD *)(*(void *)(v33 + 96) + 1428) = 201956077;
  return sub_1BCAC1EBC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1BCACAD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_DWORD *a38)
{
  int v44 = v38 - 2033987387;
  uint64_t v45 = (*(uint64_t (**)(uint64_t, void))(v41 + 8 * (v38 + 1909)))(a11, 0);
  int v46 = LODWORD(STACK[0x558]) + 1135927250 - (v39 & (2 * LODWORD(STACK[0x558])));
  LODWORD(STACK[0x548]) = LODWORD(STACK[0x550])
                        + 1135927250
                        - (((v38 - 2033987387) ^ 0x1AA6E3F) & (2 * LODWORD(STACK[0x550])));
  LODWORD(STACK[0x544]) = v46;
  uint64_t v47 = 8 * (v38 + 1886);
  int v48 = (*(uint64_t (**)(uint64_t))(v41 + v47))(v45);
  LODWORD(STACK[0x54C]) = v48 + 1135927250 - (v39 & (2 * v48));
  int v49 = (*(uint64_t (**)(void))(v41 + v47))();
  LODWORD(STACK[0x540]) = v49 + 1135927250 - (v39 & (2 * v49));
  uint64_t v50 = 4 * (v40 + 1252358302);
  unsigned int v51 = *(_DWORD *)(v42 + 4 * (v40 + 1252358301));
  int v52 = (((v51 >> 30) ^ 1) + 1135927250 + 2 * (((v51 >> 30) ^ 1 | 0x7FFFFFFA) ^ (v51 >> 30)) + 10) ^ v51;
  unsigned int v53 = (*a38 ^ 0x43B4DFD2) + ((1664525 * v52 + 1135927250 - ((3329050 * v52) & 0x8769BFA4)) ^ *(_DWORD *)(v42 + v50));
  *(_DWORD *)(v42 + v50) = v53 + 1135927250 - ((2 * v53) & 0x8769BFA4);
  unint64_t v54 = 235795823 * ((0xCC48545AF8458D64 - ((v43 - 144) | 0xCC48545AF8458D64) + a37) ^ 0x3B07115B93173BC2);
  *(_DWORD *)(v43 - 104) = ((v44 - 2112275257) ^ 0x2A) + v54;
  *(_DWORD *)(v43 - 120) = v54 + v44 - 2112275257 - 48;
  *(_DWORD *)(v43 - 116) = v54;
  *(void *)(v43 - 112) = v54 ^ 0xDB75D903;
  *(void *)(v43 - 128) = v54 + 3681933569u;
  *(_DWORD *)(v43 - 140) = (v44 - 2112275257) ^ v54;
  *(_DWORD *)(v43 - 136) = v54 + v44 - 239616346;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(a34 + 8 * (int)(v44 ^ 0x86C3D9A0)))(v43 - 144);
  return (*(uint64_t (**)(uint64_t))(a34 + 8 * *(int *)(v43 - 144)))(v55);
}

uint64_t sub_1BCACAF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_DWORD *a38)
{
  uint64_t v42 = (*(uint64_t (**)(uint64_t, void))(v39 + 8 * (v38 ^ 0xAEBu)))(a26, 0);
  unsigned int v43 = a38[4] + 1135927250 - ((2 * a38[4]) & 0x8769BFA4);
  a38[1] = a38[6] + 1135927250 - ((2 * a38[6]) & 0x8769BFA4);
  a38[2] = v43;
  int v44 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v38 ^ 0xA94u)))(v42);
  a38[3] = v44 + 1135927250 - ((v44 << (v38 ^ 0xA1)) & 0x8769BFA4);
  int v45 = (*(uint64_t (**)(void))(v39 + 8 * (v38 ^ 0xA94u)))();
  *a38 = v45 + 1135927250 - ((2 * v45) & 0x8769BFA4);
  unint64_t v46 = 235795823
      * ((-2 - ((~(v41 - 144) | 0xA9468BF570ADA91DLL) + ((v41 - 144) | 0x56B9740A8F5256E2))) ^ 0xA1F6310BE400E044);
  int v47 = (((*v40 >> 30) ^ 1) + 1135927250 + 2 * (((*v40 >> 30) ^ 1 | 0x7FFFFFFE) ^ (*v40 >> 30)) + 2) ^ *v40;
  unsigned int v48 = (*a38 ^ 0x43B4DFD2) + ((1664525 * v47 + 1135927250 - ((3329050 * v47) & 0x8769BFA4)) ^ v40[1]);
  v40[1] = v48 + 1135927250 - ((2 * v48) & 0x8769BFA4);
  *(void *)(v41 - 112) = v46 ^ 0xA4A2F8D;
  *(_DWORD *)(v41 - 140) = ((v38 ^ 0x86C3D33B) + 601052127) ^ v46;
  *(_DWORD *)(v41 - 136) = v46 + (v38 ^ 0x86C3D33B) - 239616346;
  *(_DWORD *)(v41 - 104) = v46 + (v38 ^ 0x86C3D33B) + 601052127 - 11;
  *(void *)(v41 - 128) = v46 + 172633995;
  *(_DWORD *)(v41 - 120) = (((v38 ^ 0x86C3D33B) + 601052127) ^ 0x5D) + v46;
  *(_DWORD *)(v41 - 116) = v46;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v38 ^ 0xA9B)))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v39 + 8 * *(int *)(v41 - 144)))(v49);
}

uint64_t sub_1BCACB1FC()
{
  STACK[0x278] = (unint64_t)&STACK[0x5BA13F8D952276BB];
  *(void *)(v2 - 184) = &STACK[0x5BA13F8D952276BB];
  STACK[0x270] = (unint64_t)&STACK[0x5FC20BA571565C6];
  *(void *)(v2 - 168) = &STACK[0x5FC20BA571565C6];
  *(_DWORD *)(v2 - 192) = ((v0 ^ 0x2BA) + 1096) ^ (1224239923
                                                 * ((v2 - 192 - 2 * ((v2 - 192) & 0x45CC53C4) + 1171018692) ^ 0xB77FAE13));
  *(unsigned char *)(v2 - 160) = (51 * ((v2 + 64 - 2 * ((v2 + 64) & 0xC4) - 60) ^ 0x13)) ^ 0x25;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v0 ^ 0x2BA) + 1873)))(v2 - 192);
  int v4 = *(_DWORD *)(v2 - 176);
  LODWORD(STACK[0x54C]) = v4;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((46 * (v4 == ((3 * (v0 ^ 0x252)) ^ 0x3AB4541F ^ (124 * (v0 ^ 0x260))))) ^ v0 ^ 0x2BA)))(v3);
}

uint64_t sub_1BCACB304()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((4 * v1 - v2 == (((v0 - 403) | 0x264) ^ 0xB0A03E48))
                                     * ((v0 + 2011242978) & 0x881EDEEE ^ 0x4F3)) ^ v0)))();
}

uint64_t sub_1BCACB368(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((4 * (((v4 - 86) | 0x488) ^ 0x47A)) ^ 0x658) * (a3 == 0)) ^ v4)))();
}

uint64_t sub_1BCACB3A4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * (v1 | ((((v4 - v3) & 0x1F) == 0xB) << 6))))(a1, (v1 + 1916043149) & 0x8DCB7BDE);
}

uint64_t sub_1BCACB410(uint64_t a1, int a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((*(_DWORD *)(*v4 + 4 * v5) == (((a3 - 596) | v6) ^ v7)) * a2) ^ a3)))();
}

uint64_t sub_1BCACB448(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((229
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 2) - 38)))
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ v6) == ((v3 + a3 - 99) ^ 0x6676AFFA))) ^ a3)))();
}

uint64_t sub_1BCACB494()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v2 ^ 0x5FF) - 871) * ((v3 + v0 - 1) > 0x7FFFFFFE)) ^ v2)))();
}

uint64_t sub_1BCACB4CC@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v1 + 1428);
  if (v4 == 201956065 || v4 == 201956061) {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * (int)(((*(_DWORD *)(a1 + 476) == 1517586989) * (((STACK[0x408] - 340) | 0x83) ^ 0x485)) ^ (STACK[0x408] - 209))))();
  STACK[0x510] = STACK[0x380];
  return v2();
}

uint64_t sub_1BCACB5D4()
{
  *(_DWORD *)(v5 - 112) = v0
                        + 1759421093
                        * ((-1639370089 - ((v5 - 128) | 0x9E493297) + ((v5 - 128) | 0x61B6CD68)) ^ 0xD2CB7D3C)
                        + 279;
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 120) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xE74)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((188 * (v4 == (((v0 ^ 0x2F4) - 27) ^ 0x3E048B41))) ^ v0)))(v6);
}

uint64_t sub_1BCACB684@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  int v11 = v4 - 744630104;
  uint64_t v12 = 4 * (v8 + v5);
  unsigned int v13 = (a1 ^ 0xCDC84A86)
      + 842511417
      + (*(_DWORD *)(*(void *)(v10 - 0x7EC954F575262799) + v12) ^ v7)
      - (*(_DWORD *)(*(void *)(a4 - 0x7EC954F575262799) + v12) ^ v7);
  *(_DWORD *)(*(void *)(a2 - 0x7EC954F575262799) + v12) = v13 + v7 - (v9 & (2 * v13));
  BOOL v15 = v8 - 1377038633 < 1402853544 && v8 - 1377038633 >= v11;
  return (*(uint64_t (**)(void))(v6 + 8 * ((29 * v15) ^ (a1 + 107))))();
}

uint64_t sub_1BCACB790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  int v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * (int)(a8 ^ (63 * (a19 < 2))));
  return v20(a1, a2, a3, a4, v20, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1BCACB7B0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((269 * (v1 + 1 == v2 + 24)) ^ v0)))();
}

uint64_t sub_1BCACB87C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x580]) == v2 + a1 - 1870 - 66) * ((33 * (a1 ^ 0x794)) ^ 0xB1)) ^ a1)))();
}

uint64_t sub_1BCACB8BC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, unsigned int a3@<W8>, int8x16_t a4@<Q1>, int8x16_t a5@<Q4>, int8x16_t a6@<Q5>, int8x16_t a7@<Q6>, int8x16_t a8@<Q7>)
{
  uint64_t v12 = (const float *)(v8 + 908);
  int8x16_t v13 = (int8x16_t)vld1q_dup_f32(v12);
  uint64_t v14 = a3 + 704;
  a4.i64[0] = *(void *)(v8 + 912);
  a4.i32[2] = *(_DWORD *)(v8 + 4 * (v14 ^ a1));
  int8x16_t v15 = vextq_s8(v13, a4, 0xCuLL);
  int8x16_t v16 = a4;
  v16.i32[3] = *(_DWORD *)(v8 + 924);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a5), vandq_s8(v15, a6)), 1uLL), a7);
  v18.i32[0] = *(_DWORD *)(a2 + 4 * (*(_DWORD *)(v8 + 912) & 1));
  v18.i32[1] = *(_DWORD *)(a2 + 4 * (*(_DWORD *)(v8 + 916) & 1));
  v18.i32[2] = *(_DWORD *)(a2 + 4 * (*(_DWORD *)(v8 + 4 * (v14 ^ a1)) & 1));
  v18.i32[3] = *(_DWORD *)(a2 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)(v8 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v8, v18), v11), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a8)), v10));
  return (*(uint64_t (**)(void))(v9 + 8 * a3))();
}

uint64_t sub_1BCACB984(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * ((95
                                * ((unint64_t)(&a25 + a14 + v25 + ((a1 - a4 - 1226) ^ (a1 - 887) ^ 0xD7704BB5)) < 0x10)) ^ a1)))();
}

void sub_1BCACB9D4()
{
}

void sub_1BCACB9E0(int a1@<W8>)
{
  if (*(_DWORD *)(v3 - 0x7EC954F57526279DLL) - 874675927 >= (a1 + 2147482707)) {
    int v4 = v2;
  }
  else {
    int v4 = v2 + 2;
  }
  *(_DWORD *)(v1 + 16) = v4;
}

void sub_1BCACBA50(int a1@<W8>)
{
  *(void *)(v5 - 0x10AB3F3F18D17CD1) = *v2;
  *(_DWORD *)(v6 - 0x181849F3B30904BALL) = a1;
  void *v2 = 0;
  *(void *)(v9 - 0x5B51E979A7EFF0C5) = 0x68A8905268A89052;
  *int v4 = 35001926;
  unsigned int v3 = ((2 * (*(_DWORD *)(v9 - 0x5B51E979A7EFF0B9) & 0xFFFFFFFE ^ 0x113A3A38)) | 0x6A3D562A)
     - (*(_DWORD *)(v9 - 0x5B51E979A7EFF0B9) & 0xFFFFFFFE ^ 0x113A3A38)
     - 891202325;
  *(_DWORD *)(v9 - 0x5B51E979A7EFF0B9) = (((v3 & (((v1 + 1) | 0x605) ^ 0xD72FAE9F) ^ 0x4090001) - 1) | v3 & 0x28D0577E) ^ 0x202D912D;
  *(_DWORD *)(v8 + 48) = *v7;
}

uint64_t sub_1BCACBB9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,int a40)
{
  if (a17 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v40
  }
                                                       + 8
                                                       * ((458 * (a40 != ((a6 + 73547784) & 0x9BAAB7FF ^ 0x42203F1A))) ^ (a4 + a6 - 53))))(a10, -1609763351);
  if (a17 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v40
  }
                                                       + 8
                                                       * ((927 * (a40 == (a6 ^ (a6 + 392) ^ 0x42203C85))) ^ (a4 + a6 - 164))))(a10, -1609763351);
  unint64_t v42 = ((2 * (void)&a24) & 0xEFE35FFB7F7FDBB0)
      + ((unint64_t)&a24 ^ 0x77F1AFFDBFBFEDDFLL)
      + ((a6 - 193) ^ 0x8EBEDFCBA022B79ELL);
  a39 = ((a6 + ((a6 + 63) ^ 0x1F) + v42 - 23 + 24) ^ 0xBA) * (v42 + 114);
  return (*(uint64_t (**)(void, uint64_t))(v40 + 8 * ((a6 - 193) ^ 0x5FF30A1F)))(0, -1609763351);
}

uint64_t sub_1BCACBD50()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1009
                                * (((*(_DWORD *)(v0 - 128) == *(_DWORD *)(v0 - 136)) ^ (*(_DWORD *)(v0 - 144) - 23)) & 1)) ^ *(_DWORD *)(v0 - 144))))();
}

uint64_t sub_1BCACBD8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, unsigned int a18)
{
  if (a18 < a17 != (v19 - 734786441) < 0xE02DB68F) {
    BOOL v20 = (v19 - 734786441) < 0xE02DB68F;
  }
  else {
    BOOL v20 = v19 - 734786441 > a18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 8 * ((21 * v20) ^ (a4 + a6 + 816))))(a1, a2, 4094055848);
}

uint64_t sub_1BCACBE04(uint64_t result)
{
  uint64_t v2 = *v1;
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0x68A8905268A89052;
  *(void *)(result + 16) = 0xF797D6F002161646;
  *(_DWORD *)(result + 24) = 984896845;
  *(void *)(v2 - 0x5224DE3D6C39C413) = result + 0x5B51E979A7EFF0CDLL;
  *((_DWORD *)v1 + 2) = 984896845;
  return result;
}

uint64_t sub_1BCACBE78()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 ^ 0xEDC) + (v0 ^ 0xD2A) - 494 + 781) * (v2 == v1)) ^ v0 ^ 0xD2A)))();
}

uint64_t sub_1BCACBEC4@<X0>(int a1@<W8>)
{
  uint64_t v5 = (_DWORD *)STACK[0x3C0];
  int v6 = LODWORD(STACK[0x560])++;
  _DWORD *v5 = v6 + 196928542;
  uint64_t v7 = (*v1 + 580719876);
  *(void *)(v4 - 176) = STACK[0x2E8];
  unint64_t v8 = STACK[0x2F8];
  *(void *)(v4 - 160) = v7 ^ STACK[0x2F8];
  int v9 = v8 + a1 + 231121835;
  *(_DWORD *)(v4 - 152) = v9 + 1;
  *(_DWORD *)(v4 - 168) = v9 + 109;
  *(_DWORD *)(v4 - 164) = v8;
  *(_DWORD *)(v4 - 188) = (a1 + 231121835) ^ v8;
  *(_DWORD *)(v4 - 184) = v8 + v2 + a1;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a1 + 1495)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 192)))(v10);
}

uint64_t sub_1BCACBF68@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  STACK[0x510] = a2 - 16;
  BOOL v5 = a1 == ((v2 - 741) ^ (v4 + 476));
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 | (4 * v5)) ^ v2)))();
}

uint64_t sub_1BCACBFA8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 + 1382 + v0 + 1315 - 3004) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1BCACBFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v29 - 136) = v24;
  *(void *)(v29 - 128) = a23;
  *(_DWORD *)(v29 - 120) = v26
                         - 1167
                         + 535753261 * (((~(v29 - 144) & 0xC6F98890) - (~(v29 - 144) | 0xC6F98891)) ^ 0xCC0D86BE)
                         + 1587;
  *(void *)(v29 - 112) = v24;
  *(void *)(v29 - 144) = v28;
  (*(void (**)(uint64_t))(v25 + 8 * ((v26 - 1167) ^ 0x89B)))(v29 - 144);
  *(void *)(v29 - 144) = a23;
  *(void *)(v29 - 136) = a17;
  *(void *)(v29 - 128) = v28;
  *(void *)(v29 - 120) = v24;
  *(_DWORD *)(v29 - 104) = (v26 + 645) ^ (1759421093
                                        * ((((v29 - 144) | 0x21D1FB86) - (v29 - 144) + ((v29 - 144) & 0xDE2E0478)) ^ 0x92AC4BD2));
  *(void *)(v29 - 112) = v24;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * ((v26 - 1167) ^ 0x898)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((((v27 + v23 + v26 - 655 - 733 + 2) > 0x7FFFFFFE)
                                              * ((((v26 - 655) ^ 0x200) + 95) ^ 0x135)) ^ (v26 - 248))))(v30);
}

void sub_1BCACC0FC()
{
}

uint64_t sub_1BCACC140(int a1)
{
  int v4 = ((a1 + 1348072079) ^ (a1 + 1292)) + v2;
  int v5 = (v3 > 0x9F44090) ^ (v4 < -167002257);
  BOOL v6 = v4 < (int)(v3 + 1980481391);
  if (v5) {
    BOOL v6 = v3 > 0x9F44090;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((2025 * v6) ^ a1)))();
}

uint64_t sub_1BCACC1B4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v16 = (v9 - 599) | 0x2E8;
  uint64_t v17 = 4 * (v13 + v10);
  int v18 = v5 + v12 + (*(_DWORD *)(*(void *)(a5 - 0x7EC954F575262799) + v17) ^ v14);
  *(_DWORD *)(*(void *)(a1 - 0x7EC954F575262799) + v17) = v18 + v14 - ((v18 << (((v16 - 104) | 0xA) + 103)) & v11);
  int v19 = v13 + 1 + v6;
  BOOL v21 = v19 > v7 || v19 < v8;
  return (*(uint64_t (**)(void))(v15 + 8 * ((1544 * v21) ^ v16)))();
}

uint64_t sub_1BCACC288@<X0>(int a1@<W2>, int a2@<W4>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((104 * (((((a1 ^ 0x3E5) - 1342) ^ 0x400000C1) & a2) == 0)) ^ a1)))();
}

void sub_1BCACC33C(_DWORD *a1@<X8>)
{
  unint64_t v4 = 0x29E156233850BB1DLL * (*(void *)(v1 + 8) - v2)
     - (((((v3 - 1175) | 0x504u) ^ 0x53C2AC4670A1730ELL) * (*(void *)(v1 + 8) - v2) + 0x2CF2A05F1FA8C224) & 0xD122E1957637654CLL)
     + 0x7F0AC0FA4AF013B8;
  unsigned char *v5 = HIBYTE(v4) ^ 0x68;
  v5[1] = BYTE6(v4) ^ 0x11;
  void v5[2] = BYTE5(v4) ^ 0xF0;
  v5[3] = BYTE4(v4) ^ 0x4A;
  _DWORD v5[4] = BYTE3(v4) ^ 0x3B;
  v5[5] = BYTE2(v4) ^ 0x9B;
  v5[6] = BYTE1(v4) ^ 0x32;
  v5[7] = v4 ^ 0x26;
  *(_DWORD *)uint64_t v1 = *a1;
}

uint64_t sub_1BCACC460()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((11 * (((v0 == 63) ^ (v1 - 1)) & 1)) ^ v1)))();
}

uint64_t sub_1BCACC490(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  int v7 = a5 - 296;
  unsigned int v8 = a4 + a3 + 322462076;
  unsigned int v9 = v5 + 619351997;
  BOOL v10 = v8 < a5 - 1558245861;
  int v11 = (v9 < 0xA31F127B) ^ v10;
  BOOL v12 = v8 > v9;
  if (v11) {
    BOOL v12 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((104 * !v12) ^ v7)))();
}

uint64_t sub_1BCACC50C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v2 + 567568484) & 0xDE2B97F9 ^ 0x108 ^ (338 * (v2 ^ 0x340))) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1BCACC55C(_DWORD *a1)
{
  unsigned int v1 = 1374699841 * ((-2 - ((a1 | 0xA88133EE) + (~a1 | 0x577ECC11))) ^ 0x3A8AD418);
  int v2 = *a1 ^ v1;
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + v2 - 1775)
                              + 8
                              * (((((v2 - 124) ^ ((a1[4] ^ v1 ^ 0x3AB4554D) - 1 < 0x63)) & 1)
                                * (((v2 - 1559832458) & 0x5CF927EF) - 2011)) ^ v2)
                              - 4))();
}

uint64_t sub_1BCACC610()
{
  int v3 = *(_DWORD *)(v0 - 0x5B51E979A7EFF0BDLL)
     - ((2 * *(_DWORD *)(v0 - 0x5B51E979A7EFF0BDLL) + 2077479796) & 0x53F3651E)
     + 669228105;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((246
                                * (((2 * v3) & 0x3EFFABFA ^ 0x12F3211A)
                                 + 1960574976
                                 + (((v2 - 857) | 0x230) ^ v3 ^ 0xB6866503) == 341562877)) ^ (v2 + 984))))();
}

uint64_t sub_1BCACC6B8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  BOOL v15 = a1 == 1772733382 || a11 - v13 != 559756921;
  return (*(uint64_t (**)(void))(v12
                              + 8 * ((v15 * (((346 * (v11 ^ 0x5DA) - 163) | 0x4A8) - 1601)) ^ (346 * (v11 ^ 0x5DA)))))();
}

uint64_t sub_1BCACC718@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int8x16_t *a14)
{
  v19.i64[0] = 0x8080808080808080;
  v19.i64[1] = 0x8080808080808080;
  *(int8x16_t *)(v17 + (a1 + v14)) = veorq_s8(*a14, v19);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((((v16 + 1) & 0x1FFFFFFF0) == 16) * (v15 - 888)) ^ v15)))(((v16 + 1) & 0x1FFFFFFF0) - 32);
}

uint64_t sub_1BCACC76C(int a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v37 = v27 + a4;
  int v38 = v27 + 1;
  uint64_t v39 = 4 * (v38 + a4);
  unint64_t v40 = (*(_DWORD *)(a23 + v39) ^ v24) + (a3 ^ HIDWORD(a8));
  unint64_t v41 = HIDWORD(v23)
      + v29 * (unint64_t)(*(_DWORD *)(*v34 + v39) ^ v24)
      + ((a1 + (v33 ^ v26) + v40 - (v32 & (2 * v40)) - 498) ^ a2);
  *(_DWORD *)(a23 + 4 * v37) = v41 + v24 - (v25 & (2 * v41));
  BOOL v43 = v38 + v28 > v31 || v38 + v28 < v35;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v43 * v36) ^ v33)))();
}

uint64_t sub_1BCACC7FC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1331
                                * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v1) == v1
                                                                              + ((v3 + 2143335868) & 0x803F49B7)
                                                                              - 151)) ^ v3)))();
}

uint64_t sub_1BCACC85C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 == v2) * v5) ^ v7)))(0);
}

void sub_1BCACC88C()
{
}

uint64_t sub_1BCACC990()
{
  BOOL v6 = v2 < 0x39D77E8B;
  unint64_t v7 = STACK[0x3B8];
  int v8 = STACK[0x3C8];
  if (v6) {
    int v9 = 389704071;
  }
  else {
    int v9 = *v4 + 1;
  }
  *int v4 = v9;
  int v10 = (((v1 >> 11) ^ 0x8769B)
       + 1135927250
       - 2 * (((v1 >> 11) ^ 0x8769B) & 0x14DFD6 ^ (v1 >> 11) & 4)
       + v3
       + 1032
       - 1644) ^ v1;
  unsigned int v11 = (((v10 << 7) & 0x9D2C5680 ^ v10) << 15) & 0xEFC60000 ^ (v10 << 7) & 0x9D2C5680 ^ v10;
  uint64_t v12 = (unsigned char *)(v7 + (v8 - 1377131518));
  unsigned int v13 = ((*(_DWORD *)(*(void *)STACK[0x3E8] + (*(int *)STACK[0x3E0] & 0xFFFFFFFFCB2609E8)) ^ v12) & 0x7FFFFFFF)
      * ((v3 - 548) ^ 0xA28A782F);
  unint64_t v14 = (v13 ^ HIWORD(v13)) * ((34 * ((v3 + 1032) ^ 0x674)) ^ 0xA28A7B5F);
  char v15 = *(unsigned char *)(*(void *)(v0 + 8 * ((v3 + 1032) ^ 0x60E)) + (v14 >> 24) - 8) ^ v11 ^ 0x8A ^ (v11 >> 18) ^ 0x8A ^ *(unsigned char *)(*(void *)(v0 + 8 * (v3 - 521)) + (v14 >> 24) - 8) ^ *(unsigned char *)((v14 >> 24) + *(void *)(v0 + 8 * (v3 - 566)) + 6) ^ v14 ^ (-93 * BYTE3(v14));
  unsigned char *v12 = v15;
  return (*(uint64_t (**)(__n128))(v5 + 8 * ((28 * (v8 - (v15 != 0) != 1377131517)) ^ (v3 + 1032))))((__n128)0);
}

uint64_t sub_1BCACC9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = (v16 - 746) ^ (108757529
                                        * ((1238286458 - ((v17 - 136) | 0x49CEC07A) + ((v17 - 136) | 0xB6313F85)) ^ 0x56AD5DAE));
  *(void *)(v17 - 136) = v14;
  *(void *)(v17 - 128) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xD5F)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((((v16 - 1263) | 0x462) ^ (v16 - 375)) * (a11 > 0)) ^ v16)))(v18);
}

uint64_t sub_1BCACCA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54)
{
  int v62 = a7 + 1290;
  int v56 = a7 ^ 0x6D;
  int v57 = 3804331 * ((2 * ((v55 - 168) & 0x1FC2CEE8) - (v55 - 168) - 532860654) ^ 0x1AA3C244);
  STACK[0x310] = a26;
  *(_DWORD *)(v55 - 168) = v57 + a7 + 982;
  *(_DWORD *)(v55 - 164) = v57 ^ a12;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (a7 + 2063)))(v55 - 168);
  uint64_t v59 = a54 & 0x3F;
  *(&a45 + (v59 ^ 0x31)) = 0;
  return (*(uint64_t (**)(uint64_t))(v54
                                            + 8
                                            * ((((v59 ^ 0x31) > (v62 ^ 0x56Bu)) * (v56 + 1779)) ^ a7)))(v58);
}

void sub_1BCACCB5C()
{
}

uint64_t sub_1BCACCB68@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  unsigned int v13 = ((&a3 & 0xED653AED | ~(&a3 | 0xED653AED)) ^ 0xF206A739) * a1;
  a4 = v13 ^ 0xD762CC78;
  a3 = v7;
  a6 = v10 - v13 + ((v11 - 1355291475) & 0x50C81FCD ^ 0x3CD69E1B);
  a7 = v11 - v13 - 389;
  a5 = v8;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v9 + 8 * (v11 + 1383)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((1986
                                              * (*(_DWORD *)(v8 - 0x5B51E979A7EFF0B5) == (((v11 + 819) | 3) ^ (v12 + 1028)))) ^ v11)))(v14);
}

uint64_t sub_1BCACCC44(int a1)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((43 * (((((a1 ^ 0x4D7) - 223) ^ ((v1 & 0x18) == 0)) & 1) == 0)) ^ ((a1 ^ 0x4D7) - 1069))))((v2 - v3));
}

uint64_t sub_1BCACCC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v7 + v8) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 == v8) * a5) ^ v5)))();
}

uint64_t sub_1BCACCCB0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 + v3 - 1) < 0x7FFFFFFF) * ((v0 - 427204865) & 0x19769FD2 ^ 0x57F)) ^ (v0 - 749))))();
}

uint64_t sub_1BCACCCBC(uint64_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36)
{
  *(int8x16_t *)(&a36 + v39) = veorq_s8(*v36, a2);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * (((a1 == 0) * v38) ^ v37)))(a1 - 16);
}

uint64_t sub_1BCACCCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v7 = STACK[0x408] ^ 0x271;
  unint64_t v8 = STACK[0x5C0];
  STACK[0x4F8] = *(void *)(v6 + 8 * (int)(STACK[0x408] - 563));
  STACK[0x570] = v8;
  STACK[0x5F8] = STACK[0x3C8];
  unsigned int v9 = *(_DWORD *)(v8 - 0x781B11C067843F56) & 0x3F ^ (v7 + 28);
  *(unsigned char *)(v8 - 0x781B11C067843F9ALL + v9) = 0;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * ((1555 * (v9 > ((v7 - 1830464360) & 0x6D1AAFFBu) - 1138)) ^ v7)))(0x87E4EE3F987BC0AELL, 107, 3310030484, 443, a5, a6, 348488620, 4290563228);
}

uint64_t sub_1BCACCDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = v9 != (((v8 ^ a7) + 137) ^ v7);
  return (*(uint64_t (**)(void))(v10 + 8 * (((2 * v11) | (16 * v11)) ^ v8)))();
}

uint64_t sub_1BCACCE10@<X0>(uint64_t a1@<X0>, int a2@<W2>, unsigned int a3@<W3>, uint64_t a4@<X5>, int a5@<W8>)
{
  unsigned int v8 = v6 - 1;
  uint64_t v9 = v8 & 0xF;
  *(unsigned char *)(v5 + v8) = (a5 - 46) ^ *(unsigned char *)(a4 + v8) ^ (99 * v9) ^ *(unsigned char *)(v9
                                                                               + *(void *)(a1 + 8 * (a5 - 60))
                                                                               + 2) ^ *(unsigned char *)(*(void *)(a1 + 8 * (a5 ^ a2))
                                                                                               + v9
                                                                                               - 8) ^ *(unsigned char *)(*(void *)(a1 + 8 * (a5 & a3)) + v9 - 9) ^ 7;
  return (*(uint64_t (**)(void))(v7 + 8 * ((424 * (v8 != 0)) ^ a5)))();
}

void sub_1BCACCE18(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 24) != 0x5B51E979A7EFF0CDLL
    && *(void *)(a1 + 8) != 0x10AB3F3F18D17CD1
    && *(void *)(a1 + 40) != 0x181849F3B30904BALL;
  int v1 = *(_DWORD *)a1 - 1224239923 * ((-2 - ((~a1 | 0x50890EB9) + (a1 | 0xAF76F146))) ^ 0xA23AF36E);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCACCF3C(uint64_t result)
{
  *(_DWORD *)(result + 24) = 1985607903;
  return result;
}

uint64_t sub_1BCACCF4C@<X0>(int a1@<W8>)
{
  int v4 = 306 * (a1 ^ 0x4F8);
  LODWORD(STACK[0x54C]) = v1 + 127;
  uint64_t v5 = LODWORD(STACK[0x54C]);
  unint64_t v6 = 1178560073
     * ((((v3 - 192) | 0x576FD5F7CC5860D8) - (v3 - 192) + ((v3 - 192) & 0xA8902A0833A79F20)) ^ 0x4C93851F76CC18BALL);
  int v7 = (v4 + 1473597177) ^ v6;
  *(_DWORD *)(v3 - 168) = (v4 - 1501686456) ^ v6;
  *(_DWORD *)(v3 - 160) = v7;
  *(_DWORD *)(v3 - 156) = v7 ^ 0x15;
  *(void *)(v3 - 176) = v5 - v6;
  *(_DWORD *)(v3 - 184) = v6 + v4 + 1473597177 - 83;
  *(_DWORD *)(v3 - 180) = -1178560073
                        * ((((v3 - 192) | 0xCC5860D8) - (v3 - 192) + ((v3 - 192) & 0x33A79F20)) ^ 0x76CC18BA);
  *(void *)(v3 - 192) = v6 ^ 0xC54B0E97;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0xA3F)))(v3 - 192);
  STACK[0x360] = 0;
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 164));
  LODWORD(STACK[0x2E4]) = 66574141;
  return v9(v8);
}

void sub_1BCACCF68()
{
}

uint64_t sub_1BCACD318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (v11 | (2 * (v9 & ~((v11 + 22) ^ (v10 == ((v11 + 22) ^ a7) + v8)))))))();
}

uint64_t sub_1BCACD348@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((19 * (v1 <= 3)) ^ a1)))(3273856930);
}

uint64_t sub_1BCACD3C8@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((v2 - 105) ^ (*(unsigned __int8 *)(v3 + (a2 + 611)) == ((v2 - 106) ^ 3))) & 1) == 0)
                                * a1) ^ v2)))();
}

uint64_t sub_1BCACD418()
{
  int v2 = (v0 - 633331845) & 0x25BFDFE4;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v2 + 1117)))(1576, 2940923044);
  STACK[0x478] = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v3 != 0) * (((v2 - 960) | 0x260) - 610)) ^ v2)))();
}

uint64_t sub_1BCACD470()
{
  return 4294925278;
}

uint64_t sub_1BCACD478(int a1, unint64_t a2, uint64_t a3, int a4, unsigned int a5, uint64_t a6, void *a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  BOOL v38 = v27 > v26;
  unint64_t v39 = (v37 ^ v34 ^ (v24 - 953) ^ *(_DWORD *)(a23 + 4 * (v30 + 1 + a4)))
      + (a3 ^ HIDWORD(a8))
      + a5 * (unint64_t)(*(_DWORD *)(*a7 + 4 * (v30 + 1 + a4)) ^ v24);
  unint64_t v40 = HIDWORD(v23)
      + v31 * (unint64_t)(*(_DWORD *)(*v35 + 4 * (v30 + 1 + a4)) ^ v24)
      + ((v39 + a1 - (v33 & (2 * v39))) ^ a2);
  *(_DWORD *)(a23 + 4 * (v30 + a4)) = v40 + v24 - (v25 & (2 * v40));
  if (v38 != v30 + v28 < v29) {
    BOOL v41 = v38;
  }
  else {
    BOOL v41 = v30 + v28 < v36;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * (((8 * v41) | (16 * v41)) ^ v37)))();
}

uint64_t sub_1BCACD544()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v0 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v1) == v1)
                                * (((v3 - 290) | 0x96) + 897)) | v3)))();
}

uint64_t sub_1BCACD590()
{
  BOOL v5 = v2 + 956736419 > 691676823 || v2 + 956736419 < v0 - 1455806824;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v5 ^ v1) & 1) * (((v1 - 630) | 0x202) - 836)) ^ v1)))();
}

uint64_t sub_1BCACD614(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((197 * ((a7 + 1 + v7) > 0x1F)) ^ a3)))();
}

uint64_t sub_1BCACD700(uint64_t a1)
{
  unsigned int v3 = (v2 + 1986595946) & 0x8996F345;
  BOOL v4 = ((5 * (((v3 + 79) | 1) ^ 0x160)) ^ 0x129) != 32;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (int)(((4 * v4) | (8 * v4)) ^ v3)))(a1, 1398272894);
}

void sub_1BCACD798()
{
}

uint64_t sub_1BCACD7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v16 - 120) = (v15 - 605) ^ (108757529
                                        * ((((2 * (v16 - 136)) | 0xAAF27EC8) - (v16 - 136) + 713474204) ^ 0x35E55D4F));
  *(void *)(v16 - 136) = a14;
  *(void *)(v16 - 128) = a12;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0xCC2)))(v16 - 136);
  int v17 = 535753261 * ((2 * ((v16 - 136) & 0x2859B5B8) - (v16 - 136) - 676967872) ^ 0xDD52446F);
  *(_DWORD *)(v16 - 128) = v17 + 2095248719;
  *(_DWORD *)(v16 - 124) = v17 + v15 - 139;
  *(void *)(v16 - 136) = a13;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0xCAD)))(v16 - 136);
  *(_DWORD *)(v16 - 136) = (v15 - 742) ^ (1374699841
                                        * (((v16 - 136) & 0x5473D2EE | ~((v16 - 136) | 0x5473D2EE)) ^ 0xC6783518));
  *(void *)(v16 - 128) = a13;
  *(void *)(v16 - 120) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0xCA3)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v16 - 132) > 0x14CED41Au)
                                              * ((72 * (v15 ^ 0x4E8) + 796) ^ (v15 - 267))) ^ (v15 - 824))))(v18);
}

uint64_t sub_1BCACD928()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v0 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                      + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v1) == v1)
                                     * ((v2 + 1491547792) & 0xA718C9F7 ^ 0x229)) ^ v2)))();
}

uint64_t sub_1BCACD978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (v67) {
    BOOL v69 = a67 == 0;
  }
  else {
    BOOL v69 = 1;
  }
  char v70 = v69;
  return (*(uint64_t (**)(void))(v68
                              + 8
                              * (int)((436 * ((STACK[0x408] ^ 0x71 ^ v70) & 1)) ^ (STACK[0x408] - 361))))();
}

uint64_t sub_1BCACD990@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W4>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X7>, int a7@<W8>)
{
  *(unsigned char *)(a6 + (a7 + a2)) = *(unsigned char *)(v8 + v12 + v10);
  return (*(uint64_t (**)(void))(v11 + 8 * (((a7 + a3 >= ((v7 + a4) & a5 ^ a1)) * v9) ^ v7)))();
}

uint64_t sub_1BCACD9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, unsigned int a14, uint64_t a15, int a16)
{
  char v23 = *(unsigned char *)(v16 + 28) - v21 - 6;
  unsigned int v24 = ((((2 * &a11) | 0xDC826EDC) - &a11 + 297715858) ^ 0x5D3C873A) * v19;
  a12 = &STACK[0x74676349722739F0];
  a15 = v20;
  a14 = v24 + (v22 ^ 0x8684B05A ^ (v18 + 1064)) + ((2 * v22) & 0xF7DD7EAE ^ 0xF2D41222) - 323366661;
  a16 = v18 - v24 - 344;
  a13 = v23 ^ (((((2 * &a11) | 0xDC) - &a11 - 110) ^ 0x3A) * v19);
  uint64_t v25 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 + 1594)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1767 * (a11 == 984896845)) ^ v18)))(v25);
}

uint64_t sub_1BCACDB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = v3 < ((v4 - 1803) | 0x180u) - 405;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v5 + 8 * ((v6 | (2 * v6)) ^ v4)))(a1, a2, a3, 0);
}

void sub_1BCACDB34(_DWORD *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_1BCACDB58()
{
  unint64_t v4 = STACK[0x378];
  int v5 = *(_DWORD *)(STACK[0x378] + 52) - 136928589;
  unsigned int v6 = 1759421093 * (((v1 | 0xC3111573) - v1 + (v1 & 0x3CEEEA88)) ^ 0x706CA527);
  int v7 = LODWORD(STACK[0x2A4]) ^ v6;
  *(_DWORD *)(v3 - 184) = v0 - v6 - 50;
  *(_DWORD *)(v3 - 180) = v7;
  *(void *)(v3 - 192) = v4 + 0x198EA10384B0653;
  *(void *)(v3 - 176) = &STACK[0x1910];
  int v8 = v5 ^ v6;
  *(void *)(v3 - 152) = STACK[0x360];
  int v9 = LODWORD(STACK[0x2E4]) - v6 + 2076651373;
  *(_DWORD *)(v3 - 168) = v8;
  *(_DWORD *)(v3 - 160) = v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x87B)))(v3 - 192);
  int v11 = *(_DWORD *)(v3 - 164);
  LODWORD(STACK[0x54C]) = v11;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((v11 == (v0 ^ 0x226) + 984896233) * ((v0 ^ 0x17E) + 113)) ^ v0)))(v10);
}

uint64_t sub_1BCACDC6C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8
                                                              + 8
                                                              * (((((a4 - 906332917) & 0x3605879F) - 908)
                                                                * ((a5 + a8 - 16) < 0xFFFFFFF0)) ^ (a4 - 484))))(a1, a2, a3);
}

uint64_t sub_1BCACDCB8@<X0>(unsigned int a1@<W0>, uint64_t a2@<X2>, int a3@<W8>)
{
  unint64_t v4 = ((((a3 - 1313751053) & 0x4E4E3EEFu) - 811) ^ (unint64_t)(a2 + 345)) + a1;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((14 * (v4 - a1 + 1730004587 < 8)) ^ a3)))();
}

uint64_t sub_1BCACDD24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int8x16_t *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(int8x16_t *)(a5 + (((v30 + 235) + v31) & (v29 + 3298688176))) = veorq_s8(*a4, v33);
  int v34 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((702 * (((a8 + 1) & 0x1FFFFFFF0) == 16)) ^ v30));
  return v34(v34, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1BCACDD90()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v0 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v1) == v1)
                                * ((v3 - 1807037324) & 0x6BB532FF ^ 0x417)) ^ v3)))();
}

uint64_t sub_1BCACDDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (int)(((~a18 + v20 - (unint64_t)(v18 + v21) >= (unint64_t)(a8 + v19 - 1346) - 159272638)
                                     * (v23 + ((v19 + 469662397) & 0xED7FCECE) - 170)) ^ v19)))();
}

void sub_1BCACDE54()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  if (*(void *)v0) {
    BOOL v2 = *(void *)(v0 + 16) == 0x38DF4D133EEC7284;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 24) + 1374699841 * ((~v0 & 0x2CB30A96 | v0 & 0xD34CF569) ^ 0x4147129F);
  __asm { BRAA            X8, X17 }
}

void sub_1BCACDF78()
{
  *(_DWORD *)(v0 + 4) = *(_DWORD *)(v1 - 0x5B51E979A7EFF0B5);
}

void sub_1BCACDFC4(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x685C86573AC75C5FLL) = v1;
  JUMPOUT(0x1BCB024B4);
}

uint64_t sub_1BCACDFDC()
{
  return 4294925273;
}

void sub_1BCACDFE8()
{
  if (v0 == 1239842714) {
    int v1 = 984896845;
  }
  else {
    int v1 = -984936811;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_1BCACE04C(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((a1 ^ 0x234) + 292 * (a1 ^ 0x34B) - 770) * ((v2 + v1 - 2020516853) < 8)) ^ a1)))();
}

uint64_t sub_1BCACE0C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  unsigned int v24 = (a21 ^ v23) - ((2 * (a21 ^ v23)) & 0xE861D1B6) + ((v22 - 208) ^ 0xF430ED94);
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((11
                                * (((v24 << ((v22 + 42) ^ 0x48)) & 0xF0DD47EA ^ 0xE04141A2)
                                 + (v24 ^ 0x8C5E4B2E)
                                 - 409600068 != a2)) ^ (v22 - 312))))();
}

uint64_t sub_1BCACE178@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = v3 - 535753261 * (((&v5 | 0xEF9B9182) - (&v5 & 0xEF9B9182)) ^ 0xE56F9FAD) + 1674;
  uint64_t v5 = v2;
  uint64_t v7 = a1;
  uint64_t v8 = v2;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (v3 ^ 0x961)))(&v5);
}

void sub_1BCACE1DC()
{
}

uint64_t sub_1BCACE1E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  if (a17 < a16 != a29 + 480628268 < ((43 * (a3 ^ v30)) ^ 0x7B174A07u)) {
    BOOL v31 = a29 + 480628268 < ((43 * (a3 ^ v30)) ^ 0x7B174A07u);
  }
  else {
    BOOL v31 = a29 + 480628268 > a17;
  }
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((!v31 * (((a3 + 201) | 0x210) - 547)) ^ (a3 + 317))))(4253788026);
}

void sub_1BCACE1F4()
{
  _DWORD *v0 = -984936807;
}

uint64_t sub_1BCACE204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  int v37 = a13 + ((2 * LODWORD(STACK[0x308])) & 0x78 ^ 0x60) + (STACK[0x308] & 0x3F ^ 0xFBFA1FCD) < a19 - 2004;
  return (*(uint64_t (**)(void))(v36 + 8 * (((2 * v37) | (v37 << 6)) ^ (a36 + 1163))))();
}

uint64_t sub_1BCACE2AC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(a1 + 4 * (v4 + v3 + 1)) != (v6 ^ v1))
                                * (((v2 - 857) | 0x108) ^ 0x305)) ^ (v2 - 629))))();
}

uint64_t sub_1BCACE2F4@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (a1 + v4)) = (a2 + 87) ^ *(unsigned char *)(v5 + (a1 + v4)) ^ 0x87;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1425 * (a1 - 1 == a3)) ^ a2)))();
}

uint64_t sub_1BCACE334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a8 + v9) = *(unsigned char *)(v12 + (v8 + v11)) ^ 0x80;
  return (*(uint64_t (**)(void))(v13 + 8 * (((v9 == 63) * (v10 - 1397)) ^ v10)))();
}

uint64_t sub_1BCACE370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_DWORD *a25)
{
  int v28 = v26 + 22;
  *a25 = 1840987181;
  BOOL v29 = v25 <= 0x79228DCF && (int)(v25 + 115175984) < 115175985;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8 * ((v29 * (v28 + 1388)) ^ v28)))(a1, 2262659632);
}

uint64_t sub_1BCACE438()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((62 * (v2 ^ 0x70) + 726) ^ (v2 + 893)) * (v1 == 402653184)) ^ v2)))();
}

uint64_t sub_1BCACE470(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (a7 ^ (8
                                     * (v7 + ((a7 + 448) ^ (a3 + 268)) < ((35 * (a7 ^ 0x22E)) ^ 0xFFFFFEAE))))))();
}

void sub_1BCACE4B4()
{
}

uint64_t sub_1BCACE4C8@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v2 + 4 * (v6 + v5)) = *(_DWORD *)(*v3 + 4 * (v6 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * ((7 * (((v6 - 1 == v1) ^ v4) & 1)) ^ v4)))();
}

uint64_t sub_1BCACE50C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((43 * (v1 + 1 == v2 + 44)) ^ a1)))();
}

uint64_t sub_1BCACE5E0(uint64_t a1, int a2)
{
  BOOL v6 = v2 - 2009846758 > 1012312815 || v2 - 2009846758 < a2 - 1135170832;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((v6 * (((v4 - 2049470880) & 0x7A287667) - 1619)) ^ (v4 - 2049470880) & 0x7A287667)))(0x11614C8CC42BE45CLL);
}

uint64_t sub_1BCACE6E8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((v2 - 551) ^ 0x6A0) - 1879)
                                     * (((v3 - 874675926) * (v1 - 874675926)) >> 31)) ^ (v2 + 343))))();
}

uint64_t sub_1BCACE728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((59
                                * (*(_DWORD *)(v7 + 48 * (v9 + a7)) == (((v10 + 536945991) | 0x5249512) ^ 0x475925B))) ^ v10)))();
}

uint64_t sub_1BCACE780()
{
  unsigned int v9 = (v0 + 659) ^ (1374699841
                   * (((&v9 ^ 0x134432AE) & 0x95A0AE03 | ~(&v9 ^ 0x134432AE | 0x95A0AE03)) ^ 0x14EF7B5B));
  int v11 = &STACK[0x5FA3F43A3B4E8E4E];
  uint64_t v12 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v0 ^ 0xD27)))(&v9);
  int v11 = v6;
  unsigned int v9 = v0 + 1225351577 * (((&v9 | 0x4BC931BB) + (~&v9 | 0xB436CE44)) ^ 0x3536AB88) + 19;
  (*(void (**)(unsigned int *))(v2 + 8 * (v0 + 834)))(&v9);
  if (v10 == ((v0 - 589) ^ (v1 + 577))) {
    unsigned int v4 = v8;
  }
  else {
    unsigned int v4 = v10;
  }
  int v11 = v6;
  unsigned int v10 = v0 + (&v9 ^ 0xAF40E2F) * v3 - 667;
  (*(void (**)(unsigned int *))(v2 + 8 * (v0 ^ 0xD25)))(&v9);
  int v11 = v7;
  unsigned int v10 = v0 - 589 + (((&v9 | 0x2E820EE1) - (&v9 & 0x2E820EE1)) ^ 0x247600CE) * v3 - 78;
  (*(void (**)(unsigned int *))(v2 + 8 * (v0 + 805)))(&v9);
  return v4 ^ v1;
}

uint64_t sub_1BCACE948()
{
  int v5 = (v2 + 438306498) | 0x21C030C4;
  unint64_t *v0 = ((unint64_t)(v10 ^ v3) << (((v2 - 62) | 0xC4u) + 82)) | v9 ^ v3;
  uint64_t v13 = v8;
  int v12 = 535753261 * ((v11 - 369372444 - 2 * ((unint64_t)v11 & 0xE9FBD2E4)) ^ 0xE30FDCCB)
      - 1004549721
      + v5;
  (*(void (**)(unsigned char *))(v4 + 8 * (v5 ^ v1)))(v11);
  uint64_t v13 = v7;
  int v12 = v5
      - 1004549721
      + 535753261 * ((v11 + 957040592 - 2 * ((unint64_t)v11 & 0x390B47D0)) ^ 0x33FF49FF);
  (*(void (**)(unsigned char *))(v4 + 8 * (v5 - 1004548249)))(v11);
  return v3 ^ 0x3AB4554D;
}

uint64_t sub_1BCACEA98(uint64_t a1, int a2)
{
  BOOL v5 = v2 < v3;
  unint64_t v6 = ((a2 + 1533327918) & 0xA49B3FA9 ^ ((a2 - 1513) | 0x204) ^ 0xA496A48BA67170AALL) + a1;
  uint64_t v7 = a1 + 1;
  int v8 = v5 ^ (v6 < v3);
  BOOL v9 = v6 < v2;
  if (!v8) {
    BOOL v5 = v9;
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((14 * v5) ^ a2)))(v7);
}

void sub_1BCACEB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12)
{
  int v12 = LOBYTE(STACK[0x324]) ^ 0x5F;
  if (v12 == 1)
  {
    unsigned int v16 = STACK[0x308];
    unsigned int v17 = STACK[0x304];
    LOBYTE(STACK[0x2FC]) = (8 * LOBYTE(STACK[0x308])) ^ 8;
    LOBYTE(STACK[0x2FD]) = (v16 >> 5) ^ 0x2F;
    LOBYTE(STACK[0x2FE]) = a12 & 0xEB ^ (v16 >> 13) ^ 0x7A;
    LOBYTE(STACK[0x2FF]) = (v16 >> 21) ^ 0x81;
    HIDWORD(v18) = v17 ^ 0x1B;
    LODWORD(v18) = v16 ^ 0x20000000;
    LOBYTE(STACK[0x300]) = (v18 >> 29) ^ 0x80;
    LOBYTE(STACK[0x301]) = (v17 >> 5) ^ 0xD4;
    LOBYTE(STACK[0x302]) = (v17 >> 13) ^ 0xA0;
    unsigned int v15 = (v17 >> 21) ^ 0x5A;
  }
  else
  {
    if (v12 != 2) {
      goto LABEL_6;
    }
    unsigned int v15 = STACK[0x304];
    unsigned int v13 = STACK[0x308];
    LOBYTE(STACK[0x2FC]) = (LODWORD(STACK[0x304]) >> 21) ^ 0x5A;
    LOBYTE(STACK[0x2FD]) = (v15 >> 13) ^ 0xA0;
    LOBYTE(STACK[0x2FE]) = (v15 >> 5) ^ 0xD4;
    HIDWORD(v14) = a11 ^ v15;
    LODWORD(v14) = v13 ^ 0x20000000;
    LOBYTE(STACK[0x2FF]) = (v14 >> 29) ^ 0x80;
    LOBYTE(STACK[0x300]) = (v13 >> 21) ^ 0x81;
    LOBYTE(STACK[0x301]) = (v13 >> 13) ^ 0xF3;
    LOBYTE(STACK[0x302]) = (v13 >> 5) ^ 0x2F;
    LOBYTE(v15) = (8 * v13) ^ 8;
  }
  LOBYTE(STACK[0x303]) = v15;
LABEL_6:
  JUMPOUT(0x1BCAE01B8);
}

uint64_t sub_1BCACEC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * (((a18 - *(_DWORD *)(a2 + 4) + 1773708277 == v18 - 1961502238)
                                * (((v18 + 1396) | 0x48) - 1543)) | v18)))();
}

uint64_t sub_1BCACECAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((v3 - 878819043) & 0x3461B0DF ^ (51
                                                                                                * (v4 > 0)))))(a1, a2, a3);
}

uint64_t sub_1BCACED30(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  return (*(uint64_t (**)(void))(v36
                              + 8 * ((117 * (((a3 - 8) ^ (a4 + 134)) + a36 > 0xFFFFFFFA)) ^ (a3 + 1016))))();
}

uint64_t sub_1BCACED80(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((398 * (a1 + ((v7 - 129256878) & 0x89C207D2 ^ 0x98E23E55) < 0x38)) ^ (v7 + a7))))();
}

uint64_t sub_1BCACEDDC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((44 * (((((v2 + 16776443) | 0x87E4E8C) ^ (v0 == v1)) & 1) == 0)) ^ v2)))();
}

void sub_1BCACEE20()
{
}

_DWORD *sub_1BCACEE48(_DWORD *result)
{
  *uint64_t result = 58487721;
  return result;
}

uint64_t sub_1BCACEE58@<X0>(uint64_t a1@<X2>, int a2@<W4>, int a3@<W8>)
{
  *(unsigned char *)(v5 + v3) = *(unsigned char *)(a1 + (v4 + v6)) ^ 0x80;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 == 63) * a2) ^ (v8 + a3 - 40))))();
}

void sub_1BCACEE98(int a1@<W5>, uint64_t a2@<X8>)
{
  *(_DWORD *)(v4 - 136) = v3;
  *(void *)(v4 - 120) = v2 - 7;
  *(void *)(v4 - 128) = a2 - 7;
  *(_DWORD *)(v4 - 144) = v3 & 0xFFFFFFF8;
  *(_DWORD *)(v4 - 152) = a1 ^ 0x6B6;
  JUMPOUT(0x1BCACEF08);
}

uint64_t sub_1BCACEFE4(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a2 + (((a4 ^ 0x7F) + 1150) ^ 0x6EC) == 32) * ((((a4 ^ 0x7F) - 597) | 0x208) ^ 0x35B)) ^ a4 ^ 0x7F)))();
}

uint64_t sub_1BCACF02C()
{
  *(_DWORD *)(v6 - 136) = (v4 + 372) ^ (((486019166 - ((v6 - 136) | 0x1CF8105E) + ((v6 - 136) | 0xE307EFA1)) ^ 0x8EF3F7A8)
                                      * v3);
  *(void *)(v6 - 128) = v1;
  *(void *)(v6 - 120) = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1977)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((*(_DWORD *)(v6 - 132) > v0 + 3 * (v4 ^ 0x5Eu) - 618)
                                              * (((v4 ^ 0x5E) - 87) ^ 0x39D)) ^ v4)))(v7);
}

uint64_t sub_1BCACF0E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((37 * ((v6 ^ 0xEu) < ((a4 + (v7 ^ (a6 - 274)) + 137) ^ 0x2ED))) ^ v7)))();
}

void sub_1BCACF11C()
{
}

uint64_t sub_1BCACF128()
{
  int v4 = (v2 + 256) | 0x48A;
  int v5 = v1 - 1069745693 + v4 - 707;
  BOOL v6 = v5 < ((v4 - 1418) ^ 0x745F7F80);
  BOOL v7 = v3 - 1069744466 < v5;
  if (v3 - 1069744466 < 1952415108 != v6) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * (((2 * !v7) | (32 * !v7)) ^ v4)))();
}

uint64_t sub_1BCACF1AC@<X0>(int a1@<W8>)
{
  int v5 = (a1 - 686224369) & (v4 + 104469860);
  int v6 = 1178560073 * ((&v8 - 1463346072 - 2 * ((unint64_t)&v8 & 0xA8C71C68)) ^ 0x1253640A);
  int v8 = a1 - v6 + 1652;
  uint64_t v9 = v3;
  int v10 = v1 + v6 - v5 - 290877059;
  return (*(uint64_t (**)(int *))(v2 + 8 * (a1 ^ 0x98B)))(&v8);
}

uint64_t sub_1BCACF244(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 1481)))(a1);
  _DWORD *v2 = 1468831131;
  return result;
}

uint64_t sub_1BCACF278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                        + 8
                                                                                        * ((179
                                                                                          * (((((a8 - 764407169) & 0x2D8FEBEE)
                                                                                             - 988) & v8) == ((a8 - 266615568) & 0xFE437DF ^ 0x246))) ^ (a8 - 504))))(a1, a2, a3, a4, a5, (a4 - a5));
}

uint64_t sub_1BCACF2E0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  int8x16x4_t v53 = vld4q_s8(a5);
  uint8x16_t v41 = (uint8x16_t)veorq_s8(v53.val[2], v40);
  _Q21 = vmovl_high_u8(v41);
  _Q20 = vmovl_u8(*(uint8x8_t *)v41.i8);
  __asm
  {
    SHLL2           V20.4S, V20.8H, #0x10
    SHLL2           V21.4S, V21.8H, #0x10
  }
  unsigned int v48 = (v32 ^ v37)
      + v29
      + ((a29 ^ 0x600 ^ (v37 + 528) ^ v30) & (a1 ^ 0xCAA5F539) | (v31 ^ v37) & (a1 ^ v37))
      + *((_DWORD *)*(&off_1F16F9FD0 + a29 + 80) + v35 + 137543417)
      + (*(_DWORD *)(v38 + 4 * (*((unsigned char *)*(&off_1F16F9FD0 + a29 + 150) + v35 + 137543419) - 3)) ^ v39);
  uint64_t v49 = (char *)*(&off_1F16F9FD0 + (a29 ^ 0x3B)) - 8;
  unsigned int v50 = (v48 + v37 - (v34 & (2 * v48))) ^ v37;
  int v51 = ((v50 << (v49[v35 + 137543419] - 36)) | (v50 >> (36 - v49[v35 + 137543419]))) + (a1 ^ v37);
  return (*(uint64_t (**)(void))(v33 + 8 * ((995 * (v36 == 137543404)) ^ (a29 + 1507))))(v51 + v37 - (v34 & (2 * v51)));
}

uint64_t sub_1BCACF410@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((254 * (a1 != ((v2 + v1 - 1068368820) & 0x3FADFF3A ^ 0x2525BD32))) ^ v1)))();
}

void sub_1BCACF45C()
{
}

uint64_t sub_1BCACF464(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + v8 + v10) = v9;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((unint64_t)(v8 + v10 + v7 - 15) < 0x38) * a1) ^ v6)))();
}

uint64_t sub_1BCACF494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, unsigned int a11, uint64_t a12, int a13, int a14)
{
  int v17 = 108757529 * ((&a10 + 1471139878 - 2 * ((unint64_t)&a10 & 0x57AFD026)) ^ 0xB733B20D);
  a10 = &STACK[0x3F8123127DDA1A64];
  a12 = v15;
  a11 = v17 ^ 0xD7C615A8;
  a13 = 1453518688 - v17;
  a14 = v14 - v17 - 891;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v14 + 881)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((985 * (*(_DWORD *)(v15 - 0x5B51E979A7EFF0B5) == v14 + 984895622)) ^ v14)))(v18);
}

uint64_t sub_1BCACF56C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 == 64) ^ (v1 - 1)) & 1) * (v1 ^ 0x56C)) ^ v1)))();
}

void sub_1BCACF5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v26 = ((((2 * (v25 - 144)) | 0xFCF84B5C) - (v25 - 144) + 25418322) ^ 0x1EE04785) * v21;
  *(void *)(v25 - 128) = v24;
  *(_DWORD *)(v25 - 136) = v20 - v26 - 1413;
  *(_DWORD *)(v25 - 116) = a20 - v26 + ((v20 + 93) ^ 0xF4DE4F94);
  *(void *)(v25 - 144) = v22;
  (*(void (**)(uint64_t))(v23 + 8 * (v20 ^ 0xFEE)))(v25 - 144);
  JUMPOUT(0x1BCACF630);
}

uint64_t sub_1BCACF750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34)
{
  int v37 = 3804331 * ((~((v36 - 168) | 0x6760E8E7) + ((v36 - 168) & 0x6760E8E7)) ^ 0x6201E44E);
  *(void *)(v36 - 160) = a24;
  *(_DWORD *)(v36 - 168) = v37 + v34 + 1014;
  *(_DWORD *)(v36 - 164) = v37 ^ a15;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 ^ 0x853)))(v36 - 168);
  uint64_t v39 = STACK[0x308] & 0x3F;
  *((unsigned char *)&STACK[0x2C4] + (v39 ^ 0x31)) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v35
                                                                      + 8
                                                                      * ((1561
                                                                        * ((v39 ^ 0x31) > ((2 * v34) ^ 0x53u))) ^ v34)))(v38, a34, 3778698075, 25);
}

uint64_t sub_1BCACF85C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W7>, uint64_t a7@<X8>)
{
  unsigned int v17 = (a6 ^ v14)
      + v7
      + ((v8 ^ v14) & (a1 ^ v14) | (v8 ^ 0xCAA5F539) & (v9 ^ v14))
      + *(_DWORD *)(a3 + 4 * (a7 + v12))
      + (*(_DWORD *)(v15 + 4 * (*(unsigned char *)(a2 + a7 + v12) + ((a5 - 50) & 0xFB ^ 0x27))) ^ v16);
  unsigned int v18 = (v17 + v14 - (v11 & (2 * v17))) ^ v14;
  int v19 = ((v18 << (*(unsigned char *)(a4 + a7 + v12) - 36)) | (v18 >> (36 - *(unsigned char *)(a4 + a7 + v12)))) + (a1 ^ v14);
  return (*(uint64_t (**)(void))(v10 + 8 * ((342 * (a7 + 1 == v13 + 32)) ^ a5)))(v19 + v14 - (v11 & (2 * v19)));
}

uint64_t sub_1BCACF944@<X0>(int a1@<W1>, int a2@<W5>, _DWORD **a3@<X6>, int a4@<W7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v24 = 4 * (a4 - 1295230010 + (v21 ^ v16) * a5);
  unsigned int v25 = (v23 ^ 0x807CFA78) + (v22 ^ v12) * (**a3 ^ v12) + (*(_DWORD *)(a11 + v24) ^ v12);
  *(_DWORD *)(a11 + v24) = (v25 + v15 - (v17 & (2 * v25))) ^ v13;
  BOOL v26 = a1 + 1 < a2;
  if (v11 > v14 != a1 + 1 < v19) {
    BOOL v26 = v11 > v14;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((!v26 * v20) ^ v21)))();
}

uint64_t sub_1BCACFA00@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (v5 + v4)) = *(unsigned char *)(v2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 - 1 == v3) * (((a1 + 987) | 7) + 1030)) ^ (a1 + 777))))();
}

uint64_t sub_1BCACFA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  BOOL v52 = (((_BYTE)a25 + 3) & 0xF) != (v49 ^ 0x40E) - 1508 || a25 == ((v49 + 1705901321) & 0x9A5201CF) + 767479530;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((1019 * v52) ^ v49)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1BCACFAA8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  unsigned int v21 = (a1 + 1353703172) & 0xAF5022FB;
  *(void *)(v20 - 120) = a18;
  *(void *)(v20 - 112) = a18;
  *(_DWORD *)(v20 - 104) = (a1 + 1812) ^ (((v20 - 144) ^ 0xB37DB054) * v18);
  *(void *)(v20 - 144) = a17;
  *(void *)(v20 - 136) = a7;
  *(void *)(v20 - 128) = a16;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (a1 + 1896)))(v20 - 144);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (int)((((a15 - 810746374) > 0x7FFFFFFE)
                                                   * (((v21 ^ 0x200) + 95) ^ 0x135)) ^ (v21 + 407))))(v22);
}

uint64_t sub_1BCACFB5C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  unint64_t v21 = (v18 ^ a3 ^ v9) + a1 + (v12 ^ 0x6DBB3C2Du);
  *(_DWORD *)(v19 + 4 * v20) = v21 + v12 - ((v21 << (((v18 - 80) | a8) ^ v13)) & v11);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v14 ^ HIDWORD(v21)) + (v15 & (v21 >> 31)) + v16 != v10) * v17) ^ v18)))();
}

uint64_t sub_1BCACFB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,int a34,int a35,int a36)
{
  int v39 = v37 + v36 - 1993867358;
  unsigned int v40 = v39 + ((a36 - 138) | 0x20);
  if (v40 <= 0x40) {
    unsigned int v40 = 64;
  }
  BOOL v41 = !__CFADD__(v39 + 95, a35 + 1993867060 + a33 + v40 + 202);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (int)((v41 * ((a36 + 2122615458) & 0x817B75FF ^ 0x17A)) ^ a36)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1BCACFC0C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v2 != v1) * (((a1 ^ 0xDB) + 440) ^ 0x1C7)) ^ a1)))(195);
}

uint64_t sub_1BCACFC54()
{
  int v4 = v0 ^ 0xCF;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xA25)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((424 * (((*v2 == 0) ^ (v4 + 1)) & 1)) ^ v4)))(v5);
}

uint64_t sub_1BCACFCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  HIDWORD(a17) = -1880706817;
  unsigned int v31 = 628203409 * (((&a20 | 0x2EE5369D) + (~&a20 | 0xD11AC962)) ^ 0xAC6D3AAF);
  a25 = a18;
  a26 = a14;
  LODWORD(a12) = HIDWORD(a19);
  a20 = a15;
  a21 = a13;
  a23 = a16;
  LODWORD(a22) = v26 - v31 + 649;
  HIDWORD(a22) = 262867000 - v31 + HIDWORD(a19);
  uint64_t v32 = (*(uint64_t (**)(uint64_t *))(v30 + 8 * (v26 ^ 0x957)))(&a20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((58 * (a24 == v26 + 984896374)) ^ v26)))(v32, v29, 3215380798, 1079586638, 1854503561, &off_1F16F9FD0, v28, v27, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1BCACFDB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37)
{
  BOOL v41 = &a31 + v38;
  uint64_t v61 = &a33 + v38;
  uint64_t v60 = &a27 + v38;
  uint64_t v59 = &a23 + v38;
  uint64_t v58 = &a29 + v38;
  int v57 = &a37 + v38;
  int v56 = &a21 + v38;
  unint64_t v42 = &a35 + v38;
  int v43 = v37 + 407;
  uint64_t v44 = *a1;
  uint64_t v65 = a1[5];
  uint64_t v45 = *(void *)(a1[3] - 0x1C6D093801E6EF69);
  uint64_t v46 = a1[3];
  int v62 = v43 + 893;
  *(void *)(v40 - 128) = *a1;
  *(void *)(v40 - 120) = v45;
  *(_DWORD *)(v40 - 104) = (v43 + 893) ^ (1759421093
                                        * ((((v40 - 144) | 0x90533A3F) + (~(v40 - 144) | 0x6FACC5C0)) ^ 0x232E8A6A));
  *(void *)(v40 - 144) = v46;
  *(void *)(v40 - 136) = a3;
  uint64_t v47 = v46;
  *(void *)(v40 - 112) = &a31 + v38;
  int v48 = (v43 - 920) | 1;
  uint64_t v49 = 8 * (v43 ^ 0xC31);
  int v50 = (2 * v43) ^ 0x9DE;
  (*(void (**)(uint64_t))(v39 + v49))(v40 - 144);
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v41;
  *(void *)(v40 - 128) = v47;
  *(void *)(v40 - 112) = v42;
  int v63 = v43;
  *(_DWORD *)(v40 - 120) = v43
                         + 535753261 * (((v40 - 144) & 0xC0CD3BC0 | ~((v40 - 144) | 0xC0CD3BC0)) ^ 0x35C6CA10)
                         + 668;
  (*(void (**)(uint64_t))(v39 + 8 * (v43 ^ 0xC32)))(v40 - 144);
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 120) = v41;
  *(void *)(v40 - 112) = v61;
  *(void *)(v40 - 128) = v44;
  *(_DWORD *)(v40 - 104) = (v43 + 893) ^ (1759421093
                                        * ((2042783795 - ((v40 - 144) | 0x79C26833) + ((v40 - 144) | 0x863D97CC)) ^ 0x35402798));
  (*(void (**)(uint64_t))(v39 + v49))(v40 - 144);
  *(_DWORD *)(v40 - 104) = (v43 + 893) ^ (1759421093
                                        * ((-1338916292 - ((v40 - 144) | 0xB031C23C) + ((v40 - 144) | 0x4FCE3DC3)) ^ 0xFCB38D97));
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 120) = v61;
  *(void *)(v40 - 112) = v60;
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v39 + v49))(v40 - 144);
  *(void *)(v40 - 120) = v60;
  *(void *)(v40 - 112) = v59;
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  uint64_t v51 = v47;
  *(_DWORD *)(v40 - 104) = v62 ^ (1759421093
                                * ((((v40 - 144) ^ 0xE55F5312 | 0x3F0CA017)
                                  - ((v40 - 144) ^ 0xE55F5312)
                                  + (((v40 - 144) ^ 0xE55F5312) & 0xC0F35FE8)) ^ 0x692E4351));
  *(void *)(v40 - 128) = v44;
  uint64_t v52 = 8 * (v63 + 977);
  (*(void (**)(uint64_t))(v39 + v52))(v40 - 144);
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 120) = v59;
  *(void *)(v40 - 112) = v58;
  *(_DWORD *)(v40 - 104) = v62 ^ (1759421093
                                * (((((v40 - 144) ^ 0x4410A060 | 0xB8EC0A9A) ^ 0xFFFFFFFE)
                                  - ((v40 - 144) ^ 0xB068020A | 0x4713F565)) ^ 0xB8FAEDC1));
  *(void *)(v40 - 144) = v51;
  *(void *)(v40 - 136) = v42;
  uint64_t v53 = v51;
  (*(void (**)(uint64_t))(v39 + v49))(v40 - 144);
  LODWORD(v51) = 2 * (v40 - 144);
  *(_DWORD *)(v40 - 104) = v62 ^ (1759421093 * (((v51 | 0x61EEB7B6) - (v40 - 144) + 1325966373) ^ 0x38AEB8F));
  *(void *)(v40 - 144) = v53;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 120) = v58;
  *(void *)(v40 - 112) = v57;
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v39 + v52))(v40 - 144);
  *(_DWORD *)(v40 - 104) = v62 ^ (1759421093 * (((v51 | 0xFE53413A) - (v40 - 144) - 2133434525) ^ 0xCC5410C9));
  *(void *)(v40 - 144) = v53;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 120) = v57;
  *(void *)(v40 - 112) = v56;
  (*(void (**)(uint64_t))(v39 + v52))(v40 - 144);
  *(void *)(v40 - 120) = v56;
  *(void *)(v40 - 112) = v42;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  *(_DWORD *)(v40 - 104) = v62 ^ (1759421093 * (((v40 - 144) & 0xE555CBF3 | ~((v40 - 144) | 0xE555CBF3)) ^ 0xA9D78458));
  *(void *)(v40 - 144) = v53;
  (*(void (**)(uint64_t))(v39 + v52))(v40 - 144);
  *(void *)(v40 - 144) = *(void *)(v53 - 0x1C6D093801E6EF71);
  *(void *)(v40 - 136) = a2;
  *(_DWORD *)(v40 - 128) = (v63 - 485) ^ (108757529
                                        * ((((v40 - 144) | 0x21D9D694) - (v40 - 144) + ((v40 - 144) & 0xDE262968)) ^ 0xC145B4BF));
  (*(void (**)(uint64_t))(v39 + 8 * (v63 + 950)))(v40 - 144);
  *(void *)(v40 - 136) = v65;
  *(_DWORD *)(v40 - 140) = v63 + 460628867 * ((v40 - 522470134 - 2 * ((v40 - 144) & 0xE0DBBD9A)) ^ 0xAC4D3FE7) + 141;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v63 ^ 0xC1D)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v39
                                            + 8
                                            * ((15
                                              * (*(_DWORD *)(v40 - 144) + ((v48 - 810746907) ^ v50) > 0x7FFFFFFE)) ^ v63)))(v54);
}

void sub_1BCAD0368()
{
  int v5 = 535753261 * ((((v4 - 136) | 0xC0C5D7C1) + (~(v4 - 136) | 0x3F3A283E)) ^ 0xCA31D9EF);
  *(void *)(v4 - 136) = v0;
  *(_DWORD *)(v4 - 128) = v5 + v3 + 727399745;
  *(_DWORD *)(v4 - 124) = v5 + v2 - 139;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 + 861)))(v4 - 136);
  JUMPOUT(0x1BCAD03D8);
}

void sub_1BCAD04A4()
{
}

uint64_t sub_1BCAD04B4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((*(_DWORD *)(*v2 + 4 * v5) ^ (v1 + 839)) > ((v4 - 1273898436) & 0x4BEE26FB ^ v1 ^ *(_DWORD *)(*v3 + 4 * v5)))
                                * ((v4 - 399) ^ 0x200)) | v4)))();
}

void sub_1BCAD0518()
{
}

uint64_t sub_1BCAD0524(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((196 * (**(unsigned char **)(a2 + 8) == 0)) ^ v3)))();
}

uint64_t sub_1BCAD0550@<X0>(uint64_t a1@<X3>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 ^ 0x6EC) - 1910) * ((unint64_t)(a3 - a1 - 1452) < 0x20)) ^ a2)))();
}

uint64_t sub_1BCAD058C@<X0>(int a1@<W6>, _DWORD *a2@<X8>)
{
  int v4 = *a2 + 732743375;
  BOOL v5 = v2 + 732743375 < 3 * (a1 ^ 0x6D3) - 540064758;
  int v6 = (v4 < -540064347) ^ v5;
  BOOL v7 = v2 + 732743375 > v4;
  if (!v6) {
    BOOL v5 = v7;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((450 * v5) ^ a1)))();
}

uint64_t sub_1BCAD05F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  *(void *)(&a35 + v37 - 1540596941) = 0x8080808080808080;
  return (*(uint64_t (**)(void))(v38
                              + 8
                              * (((((((2 * (v36 - 875)) ^ 0x64Eu) - 546) & v35) != 8)
                                * (((((2 * (v36 - 875)) ^ 0x64E) - 1352438443) & 0x509C93D7) - 791)) ^ (2 * (v36 - 875)) ^ 0x64E)))();
}

uint64_t sub_1BCAD0670(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((60 * ((v1 ^ 0xC7AF7CDA) == ((a1 + 1963303247) & 0x8AFA5FBB) - 1681)) ^ a1)))(656385878);
}

uint64_t sub_1BCAD06D0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v2 + 8 * (v1 - 459)) - 4) == 0) * (v1 + 532)) ^ v1)))();
}

uint64_t sub_1BCAD0700(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 - v5 - 766190592 == ((a4 + 774) ^ 0xA756DD);
  return (*(uint64_t (**)(void))(v6 + 8 * (((8 * v7) | (16 * v7)) ^ a4)))();
}

uint64_t sub_1BCAD077C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  a3.i32[0] = *(_DWORD *)(a2 + a1 + 1);
  *(_DWORD *)(a2 - 3 + (v4 + v3)) = vmovn_s16((int16x8_t)vmovl_u8(a3)).u32[0];
  return (*(uint64_t (**)(void))(v7 + 8 * ((208 * (((3 * ((v5 + 1091) ^ 0x44B)) ^ 0x55) == v6)) ^ (v5 + 1091))))();
}

uint64_t sub_1BCAD07DC(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, unsigned int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unint64_t v34 = (*(_DWORD *)(a25 + 4 * (v33 + 1 + v28)) ^ v25)
      + HIDWORD(v31)
      + v32 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (v33 + 1 + v28)) ^ v25);
  *(_DWORD *)(a25 + 4 * (v33 + v28)) = v34 + ((v30 + 1081) ^ (v25 - 266)) - (v27 & (2 * v34));
  if (v26 > a6 != v33 + a7 < a8) {
    BOOL v35 = v26 > a6;
  }
  else {
    BOOL v35 = v33 + a7 < a3;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * (((2 * v35) | (8 * v35)) ^ v30)))();
}

uint64_t *sub_1BCAD0868@<X0>(uint64_t *result@<X0>, int a2@<W2>, int a3@<W3>, _DWORD *a4@<X8>)
{
  int v9 = v6 - ((2 * v5) & 0x1A0);
  uint64_t v10 = result[6];
  uint64_t v12 = *result;
  uint64_t v11 = result[1];
  *a4 = v7;
  *(_DWORD *)(v12 - 0x8DE5192BDC53166) = v9;
  *(_DWORD *)(v10 - 0x5BFD90C18C6562B2) = a3;
  *(void *)(v11 - 0x5CF9E3AABE5369CCLL) = v4 + a2 + 140 * (v8 ^ 0x1E4u) - 559758041;
  *((_DWORD *)result + 8) = 984896845;
  return result;
}

uint64_t sub_1BCAD08E8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1924 * (v4 - 874675927 >= 0)) ^ a3)))();
}

void sub_1BCAD0928()
{
  *(_DWORD *)(v0 + 12) = 984896845;
}

uint64_t sub_1BCAD0974@<X0>(unsigned int a1@<W0>, uint64_t a2@<X5>, int a3@<W8>)
{
  uint64_t v8 = v3 + 1;
  *(unsigned char *)(a2 + v8 + v5) = v4;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a3 ^ a1 ^ (unint64_t)(v5 + 17)) + v8 < 0x40) * v6) ^ a3)))();
}

uint64_t sub_1BCAD0980@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((397 * (**(unsigned char **)(a1 + 8) == 0)) ^ a2)))();
}

uint64_t sub_1BCAD09A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  unsigned int v25 = a19 + 205053515 + ((v24 + a8 + 95) | 0x448);
  BOOL v26 = v25 < 0x79F0957F;
  BOOL v27 = v25 > a23;
  if (a23 < 0x79F0957F != v26) {
    BOOL v28 = v26;
  }
  else {
    BOOL v28 = v27;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23
                                                                                + 8
                                                                                * ((v28
                                                                                  * (((v24 + a8 - 146) | 0x205) ^ 0x2E7)) ^ (v24 + a8 + 1448))))(a1, a2, a3, a4, 1119);
}

uint64_t sub_1BCAD09B4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 & 0x1F) != 0x19) * (((v1 - 71) | 0x108) ^ 0x1F7)) ^ v1)))();
}

void sub_1BCAD09F4()
{
}

uint64_t sub_1BCAD0A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v27 = 3804331 * ((v26 - 168) ^ 0xFA9EF356);
  *(_DWORD *)(v26 - 168) = v27 + v24 + 1048;
  *(_DWORD *)(v26 - 164) = v27 ^ 0x6BC5EFCF;
  *(void *)(v26 - 160) = a24;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 2129)))(v26 - 168);
  return a20(v28);
}

uint64_t sub_1BCAD0A80()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 + 914736882) & 0xC97A33AF ^ ((v1 - 1645) | 0x607) ^ 0x517)
                                     * ((v0 - 100) > 0x9B)) ^ v1)))();
}

uint64_t sub_1BCAD0AD8@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((1607 * (v3 - 1 + (a1 | 0x88) >= 0)) ^ v2)))();
}

uint64_t sub_1BCAD0B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((*(_DWORD *)(v6 + 48 * (v7 + a5) + 36) == v7) ^ (v5 - 73)) & 1)
                                * (v5 ^ 0x1B9)) ^ v5)))();
}

uint64_t sub_1BCAD0B68(int a1, uint64_t a2, uint64_t a3, int a4)
{
  *(int8x8_t *)(v4 - 7 + v8 - 2020517169 + v7 - a1 + ((a4 - 952944801) & 0x38CCC93Bu)) = veor_s8(*(int8x8_t *)(v5 - 7 + v8 - 2020517169 + v7 - a1 + ((a4 - 952944801) & 0x38CCC93Bu)), v10);
  return (*(uint64_t (**)(void))(v9 + 8 * ((1309 * (a1 - (v6 & 0xFFFFFFF8) == -8)) ^ a4)))();
}

uint64_t sub_1BCAD0BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15)
{
  int v21 = 628203409 * ((v20 - 160) ^ 0x82880C33);
  STACK[0x258] = a15;
  STACK[0x270] = a13;
  STACK[0x248] = a12;
  STACK[0x240] = a14;
  *(_DWORD *)(v20 - 144) = v16 - v21 + 983;
  *(_DWORD *)(v20 - 140) = v19 - v21 + 262867000;
  STACK[0x268] = v18;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v16 ^ 0x809)))(v20 - 160);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v20 - 128) == 984896845)
                                              * (((v15 + v16 - 137) ^ (v15 + 697)) - 651)) ^ v16)))(v22);
}

uint64_t sub_1BCAD0CB4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((v3 + (a3 ^ 0xAC) + 1450 - 1454) & (2 * (*(unsigned __int8 *)(v5 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v5 + 2) - 72) ^ v4) == v4)
                                * (76 * (a3 ^ 0xAC) + 487)) | a3)))();
}

uint64_t sub_1BCAD0D04()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 ^ 0x608) - 105) * (v1 != v0)) ^ v3)))();
}

uint64_t sub_1BCAD0D44@<X0>(int a1@<W2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,int a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,unsigned int a43,uint64_t a44,uint64_t a45)
{
  unsigned int v50 = v48 ^ 0xE0AD1BA7;
  unsigned int v51 = v46 ^ 0xE386040A;
  int v52 = v47 ^ 0x73987C33;
  unsigned int v53 = v45 ^ 0xBF821EA1;
  int v54 = *(_DWORD *)(v49 - 120);
  uint64_t v55 = a1 & (((v54 - 1733) | 0x4C9) - 1507) ^ 0x36F545AFu;
  *(void *)(v49 - 200) = v55;
  uint64_t v56 = *(unsigned __int8 *)(a2 + v55);
  uint64_t v57 = a1 & 0xFFFFFFF3 ^ 0x36F545AE;
  *(void *)(v49 - 168) = v57;
  int v58 = *(unsigned __int8 *)(a14 + (v56 ^ 0x41));
  uint64_t v59 = *(unsigned __int8 *)(a2 + v57) ^ 0x60;
  uint64_t v60 = a1 & 0xFFFFFFF7 ^ 0x36F545AA;
  *(void *)(v49 - 152) = v60;
  uint64_t v61 = a1 & 0xFFFFFFFE ^ 0x36F545AB;
  *(void *)(v49 - 128) = v61;
  unsigned int v62 = *(unsigned __int8 *)(a12 + v59) ^ 0xAAAAAAAA;
  int v63 = *(unsigned __int8 *)(a12 + (*(unsigned __int8 *)(a2 + v60) ^ 0xC1)) ^ 0x1E;
  LODWORD(v59) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a2 + v61) ^ 0x66)) ^ 0xAE;
  uint64_t v64 = a1 & 0xFFFFFFF0 ^ 0x36F545AF;
  *(void *)(v49 - 136) = v64;
  int v65 = v59 << 16;
  LODWORD(v59) = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v64) ^ 0xE9));
  uint64_t v66 = a1 & 0xFFFFFFF4 ^ 0x36F545AB;
  *(void *)(v49 - 160) = v66;
  LODWORD(v59) = v59 ^ 0x37;
  int v67 = v59 | (v62 << 24);
  int v68 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v66) ^ 0xC3));
  uint64_t v69 = a1 ^ 0x36F545AAu;
  *(void *)(v49 - 176) = v69;
  int v70 = v65 | ((*(unsigned __int8 *)(a12 + (*(unsigned __int8 *)(a2 + v69) ^ 0x30)) ^ 0x9A) << 24);
  int v71 = v68 ^ 0xFD;
  uint64_t v72 = a1 & 0xFFFFFFFD ^ 0x36F545AA;
  *(void *)(v49 - 144) = v72;
  unsigned int v73 = v70 & 0xFFFF00FF | (((*(unsigned char *)(a15 + (*(unsigned __int8 *)(a2 + v72) ^ 0xC0))
                                             + (*(unsigned char *)(a2 + v72) ^ 0xCF)
                                             + 119) ^ 0xF9) << 8);
  uint64_t v74 = a1 & 0xFFFFFFFB ^ 0x36F545AE;
  uint64_t v75 = a1 & 0xFFFFFFFA ^ 0x36F545AF;
  *(void *)(v49 - 232) = v75;
  *(void *)(v49 - 224) = v74;
  uint64_t v76 = a1 & 0xFFFFFFF6 ^ 0x36F545AB;
  *(void *)(v49 - 208) = v76;
  int v77 = (*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a2 + v76) ^ 0x5DLL)) ^ 0x7D) << 16;
  uint64_t v78 = a1 & 0xFFFFFFF5 ^ 0x36F545AA;
  *(void *)(v49 - 192) = v78;
  unsigned int v79 = v77 & 0xFFFF00FF | (((*(unsigned char *)(a15 + (*(unsigned __int8 *)(a2 + v78) ^ 0xD5))
                                             + (*(unsigned char *)(a2 + v78) ^ 0xDA)
                                             + 119) ^ 0xCF) << 8) | v71 | (v63 << 24);
  uint64_t v80 = a1 & 0xFFFFFFF1 ^ 0x36F545AE;
  *(void *)(v49 - 184) = v80;
  int v81 = (*(unsigned char *)(a15 + (*(unsigned __int8 *)(a2 + v80) ^ 0xE4)) + (*(unsigned char *)(a2 + v80) ^ 0xEB) - 9) << 8;
  uint64_t v82 = a1 & 0xFFFFFFFC ^ 0x36F545AB;
  *(void *)(v49 - 216) = v82;
  uint64_t v83 = a1 & 0xFFFFFFF2 ^ 0x36F545AF;
  *(void *)(v49 - 240) = v83;
  int v84 = v58 ^ 0xE7 | ((*(unsigned __int8 *)(a12 + (*(unsigned __int8 *)(a2 + v74) ^ 0xFCLL)) ^ 0x24) << 24);
  int v85 = v81 | ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a2 + v83) ^ 0x92)) ^ 0x40) << 16) | v67;
  int v86 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v82) ^ 0xDCLL)) ^ 0x23;
  int v87 = v86 | v73;
  uint64_t v88 = a1 & 0xFFFFFFF9 ^ 0x36F545AE;
  *(void *)(v49 - 248) = v88;
  LODWORD(v55) = v79 - 2 * (v79 & 0x7974BCC6 ^ v71 & 4);
  int v89 = v87 & 0x703381AF ^ v86 & 1;
  int v90 = v55 - 109790014;
  LODWORD(v55) = ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a2 + v75) ^ 0xA9)) ^ 0x93) << 16) | (((*(unsigned char *)(a15 + (*(unsigned __int8 *)(a2 + v88) ^ 0x4FLL)) + (*(unsigned char *)(a2 + v88) ^ 0x40) + 119) ^ 0xB7) << 8) | v84;
  unsigned int v91 = v50 ^ a41 ^ (v87 + 1882423726 - 2 * v89);
  LODWORD(v55) = v53 ^ a42 ^ (v55 - 2 * (v55 & 0x311AF62F ^ (v58 ^ 0xE7) & 4) - 1323633109);
  unsigned int v92 = v51 ^ a38 ^ (v85 + 1070242422 - 2 * (v85 & 0x3FCA9A7F ^ v59 & 9));
  unsigned int v93 = v52 ^ a37 ^ v90;
  uint64_t v94 = (uint64_t)*(&off_1F16F9FD0 + v54 - 1833);
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v93) ^ 0x3F));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v96 = (char *)*(&off_1F16F9FD0 + (int)a11) - 4;
  int v97 = (v95 >> 1) ^ *(_DWORD *)&v96[4 * (BYTE2(v92) ^ 0x34)] ^ ((BYTE2(v92) ^ 0x68)
                                                               - 1627937640
                                                               - 2 * ((HIWORD(v92) ^ 0xB768) & 0x9D ^ HIWORD(v92) & 5));
  uint16x8_t v98 = (char *)*(&off_1F16F9FD0 + v54 - 1850) - 8;
  unsigned int v99 = *(_DWORD *)&v98[4 * (v93 ^ 0xC6)] ^ ((BYTE2(v91) ^ 0xD5)
                                                            - 1627937640
                                                            - 2 * ((HIWORD(v91) ^ 0x6CD5) & 0x9A ^ HIWORD(v91) & 2)) ^ *(_DWORD *)&v96[4 * (BYTE2(v91) ^ 0x89)] ^ ((v93 ^ 0xAB) + 429875899 + ((2 * (v93 ^ 0xAB) + 126) & 0x76 ^ 0xFFFEFFFF));
  unsigned int v100 = *(_DWORD *)&v96[4 * (BYTE2(v55) ^ 0x8C)] ^ *(_DWORD *)&v98[4 * (v92 ^ 0xB6)] ^ ((v92 ^ 0xDB) + 429875899 + ((2 * (v92 ^ 0xDB) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ ((BYTE2(v55) ^ 0xD0) - 1627937640 - 2 * ((WORD1(v55) ^ 0xC8D0) & 0x9E ^ WORD1(v55) & 6));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (BYTE3(v55) ^ 0xC8));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v101 = v100 - 1094979934 - ((2 * v100) & 0x7D77DD44);
  int v102 = v97 - 1094979934 - ((2 * v97) & 0x7D77DD44);
  int v103 = ((BYTE2(v93) ^ 0xAD) - 1627937640 - ((2 * (HIWORD(v93) ^ 0x3FAD)) & 0x130)) ^ *(_DWORD *)&v98[4 * (v91 ^ 0x1C)] ^ ((v91 ^ 0x71) + 429875899 + ((2 * (v91 ^ 0x71) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ *(_DWORD *)&v96[4 * (BYTE2(v93) ^ 0xF1)] ^ (v95 >> 1);
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v91) ^ 0x6C));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v59) = v95 >> 1;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v92) ^ 0xB7));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  uint64_t v104 = (char *)*(&off_1F16F9FD0 + SHIDWORD(a10)) - 8;
  LODWORD(v82) = *(_DWORD *)&v104[4 * (BYTE1(v91) ^ 0xDE)] ^ a34 ^ ((v55 ^ 0x10)
                                                                  + 429875898
                                                                  - ((2 * (v55 ^ 0x10) + 99582) & 0x10076)) ^ *(_DWORD *)&v98[4 * (v55 ^ 0x7D)];
  LODWORD(v55) = (v99 - 1094979934 - ((2 * v99) & 0x7D77DD44)) ^ *(_DWORD *)&v104[4 * (BYTE1(v55) ^ 0x2F)] ^ (v95 >> 1);
  int v105 = v55 - ((2 * v55) & 0x505D4EBA);
  unsigned int v106 = *(_DWORD *)&v104[4 * (BYTE1(v93) ^ 0x29)] ^ a36 ^ v59 ^ v101;
  unsigned int v107 = *(_DWORD *)&v104[4 * (BYTE1(v92) ^ 0x66)] ^ a35 ^ (v103 - 1094979934 - ((2 * v103) & 0x7D77DD44));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * ((v82 ^ ~v102) >> 24));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v108 = v95 >> 1;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v106) ^ 0x91));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v55) = v95 >> 1;
  int v109 = ((v82 ^ v102) >> 16) ^ 0x49;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v107) ^ 0xA3));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v110 = v55 ^ *(_DWORD *)&v96[4 * (BYTE2(v107) ^ 0xF0)] ^ ((BYTE2(v107) ^ 0xAC)
                                                          - 1627937640
                                                          - ((2 * (HIWORD(v107) ^ 0xA3AC)) & 0x130));
  int v111 = (v95 >> 1) ^ *(_DWORD *)&v96[4 * (v109 ^ 0x5C)] ^ *(_DWORD *)&v98[4 * (v106 ^ 0x7B)] ^ (v109 - 1627937640 - ((2 * (((v82 ^ v102) >> 16) ^ 0xFF49)) & 0x130)) ^ ((v106 ^ 0x16) + 429875898 - ((2 * (v106 ^ 0x16) + 99582) & 0x10076));
  *(_DWORD *)(v49 - 252) = -1094979933;
  int v112 = v111 - 1094979933 + ~((2 * v111) & 0x7D77DD44);
  unsigned int v113 = (v105 - 1473337507) ^ a33;
  int v114 = (v110 - 1094979934 - ((2 * v110) & 0x7D77DD44)) ^ *(_DWORD *)&v104[4
                                                                          * ((BYTE1(v82) ^ BYTE1(v102)) ^ 0x2C)];
  unsigned int v115 = v108 ^ *(_DWORD *)&v98[4 * (v107 ^ 3)] ^ ((v107 ^ 0x6E)
                                                                  + 429875899
                                                                  + ((2 * (v107 ^ 0x6E) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ ((BYTE2(v113) ^ 0x17) - 1627937640 - ((2 * (HIWORD(v113) ^ 0xC617)) & 0x130)) ^ *(_DWORD *)&v96[4 * (BYTE2(v113) ^ 0x4B)];
  int v116 = *(_DWORD *)&v96[4 * (BYTE2(v106) ^ 0x2E)] ^ ((BYTE2(v106) ^ 0x72)
                                                    - 1627937640
                                                    - ((2 * (HIWORD(v106) ^ 0x9172)) & 0x130));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v113) ^ 0xC6));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v117 = (((v82 ^ v102) ^ 0xFC)
        + 429875899
        + ((2 * ((v82 ^ v102) ^ 0xFC) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ *(_DWORD *)&v98[4 * ((v82 ^ v102) ^ 0x91)] ^ *(_DWORD *)&v104[4 * (BYTE1(v107) ^ 0xBD)] ^ (v116 - 1094979934 - ((2 * v116) & 0x7D77DD44)) ^ (v95 >> 1);
  int v118 = *(_DWORD *)&v104[4 * (BYTE1(v113) ^ 0x3C)];
  LODWORD(v59) = ((v113 ^ 0x10) - 1726037377) ^ a32 ^ *(_DWORD *)&v98[4
                                                                                     * (v113 ^ 0x7D)];
  int v119 = *(_DWORD *)&v104[4 * (BYTE1(v106) ^ 0x57)];
  unsigned int v120 = v59 ^ (v114 - 2139054021 - ((2 * v114) & 0x1014076));
  LODWORD(v59) = v119 ^ HIDWORD(a28) ^ (v115 - 1094979934 - ((2 * v115) & 0x7D77DD44));
  unsigned int v121 = (v117 - ((2 * v117) & 0xB6D4DB64) + 1533701554) ^ a30;
  unsigned int v122 = v118 ^ a31 ^ v112;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v121) ^ 0xB6));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  unsigned int v123 = ((v122 ^ 0xA1) + 429875899 + ((2 * (v122 ^ 0xA1) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ *(_DWORD *)&v98[4 * (v122 ^ 0xCC)];
  int v124 = *(_DWORD *)&v96[4 * (BYTE2(v120) ^ 0xDB)] ^ ((BYTE2(v120) ^ 0x87)
                                                    - 1627937640
                                                    - ((2 * (HIWORD(v120) ^ 0x3A87)) & 0x130)) ^ (v95 >> 1);
  int v125 = (v123 - 1094979934 - ((2 * v123) & 0x7D77DD44)) ^ *(_DWORD *)&v104[4 * (BYTE1(v120) ^ 0xDE)];
  int v126 = ((v120 ^ 0x9E) + 429875898 - ((2 * (v120 ^ 0x9E) + 99582) & 0x10076)) ^ *(_DWORD *)&v98[4 * (v120 ^ 0xF3)];
  int v127 = v126 - 1094979934 - ((2 * v126) & 0x7D77DD44);
  int v128 = (v124 - 1094979934 - ((2 * v124) & 0x7D77DD44)) ^ *(_DWORD *)&v104[4 * (BYTE1(v122) ^ 0x57)];
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (BYTE3(v59) ^ 0x37));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v129 = v95 >> 1;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v120) ^ 0x3A));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v130 = *(_DWORD *)&v104[4 * ((unsigned __int16)(v59 ^ 0xBC3A) >> 8)] ^ BYTE2(v122) ^ *(_DWORD *)&v96[4 * (BYTE2(v122) ^ 0xF6)] ^ (v95 >> 1);
  unsigned int v131 = ((v121 ^ 0xA2) - 1726037377) ^ HIDWORD(a29) ^ *(_DWORD *)&v98[4
                                                                                      * (v121 ^ 0xCF)] ^ ((v130 ^ 0x204C4A90) - 2139054021 - 2 * ((v130 ^ 0x204C4A90) & 0x80A03F ^ v130 & 4));
  unsigned int v132 = ((v59 ^ 0x3A) - 1726037377) ^ HIDWORD(a27) ^ *(_DWORD *)&v98[4 * (v59 ^ 0x57)] ^ (v128 - 2139054021 - ((2 * v128) & 0x1014076));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v122) ^ 0x7C));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  unsigned int v133 = *(_DWORD *)&v96[4 * (BYTE2(v121) ^ 0xEC)] ^ a28 ^ BYTE2(v121) ^ v129 ^ (v125
                                                                               - 1627937640
                                                                               - ((2 * v125) & 0x3DEF4930));
  unsigned int v134 = *(_DWORD *)&v104[4 * (BYTE1(v121) ^ 0x8D)] ^ a29 ^ (((v59 ^ 0x740CBC3A) >> 16)
                                                           - 1627937640
                                                           - (((v59 ^ 0x740CBC3A) >> 15) & 0x130)) ^ *(_DWORD *)&v96[4 * (((v59 ^ 0x740CBC3A) >> 16) ^ 0x5C)] ^ (v95 >> 1) ^ v127;
  int v135 = *(_DWORD *)&v98[4 * (v133 ^ 0x1E)];
  *(_DWORD *)(v49 - 256) = 429875898;
  int v136 = ((v133 ^ 0x73) + 429875898 - ((2 * (v133 ^ 0x73) + 99582) & 0x10076)) ^ v135;
  LODWORD(v82) = v136 - 1094979934 - ((2 * v136) & 0x7D77DD44);
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v131) ^ 0x5B));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v137 = (v95 >> 1) ^ *(_DWORD *)&v98[4 * (v132 ^ 0x1F)] ^ ((v132 ^ 0x72)
                                                                           + 429875899
                                                                           + ((2 * (v132 ^ 0x72) + 126) & 0x76 ^ 0xFFFEFFFF));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v132) ^ 0x28));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v138 = v95 >> 1;
  int v139 = v137 - 1094979934 - ((2 * v137) & 0x7D77DD44);
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v133) ^ 0xB9));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v140 = v95 >> 1;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v134) ^ 0xB4));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v141 = v140 ^ *(_DWORD *)&v98[4 * (v134 ^ 0x8B)] ^ ((v134 ^ 0xE6)
                                                                     + 429875898
                                                                     - ((2 * (v134 ^ 0xE6) + 99582) & 0x10076));
  LODWORD(v60) = (HIWORD(v131) ^ 0x5B95) & 0xB8 ^ HIWORD(v131) & 0x20;
  LODWORD(v88) = BYTE2(v131) ^ 0x95;
  int v142 = v131;
  LODWORD(v69) = (v131 ^ 0xF4)
               + 429875899
               + ((2 * (v131 ^ 0xF4) + 126) & 0x76 ^ 0xFFFEFFFF);
  unsigned int v143 = ((BYTE2(v132) ^ 0x14) - 1627937640 - 2 * ((HIWORD(v132) ^ 0x2814) & 0x9A ^ HIWORD(v132) & 2)) ^ a26 ^ *(_DWORD *)&v104[4 * (BYTE1(v131) ^ 0x1F)] ^ (v141 - 1094979934 - ((2 * v141) & 0x7D77DD44)) ^ *(_DWORD *)&v96[4 * (BYTE2(v132) ^ 0x48)];
  LODWORD(v59) = ((v133 ^ 0xFA64A573) >> 16);
  unsigned int v144 = *(_DWORD *)&v104[4 * ((unsigned __int16)(v133 ^ 0xA573) >> 8)] ^ a27 ^ ((BYTE2(v134) ^ 0x59)
                                                                                                - 1627937640
                                                                                                - ((2
                                                                                                  * (HIWORD(v134) ^ 0xB459)) & 0x130)) ^ *(_DWORD *)&v96[4 * (BYTE2(v134) ^ 5)] ^ v139;
  LODWORD(v55) = (v59 - 1627937640 - ((v133 >> 15) & 0x130)) ^ HIDWORD(a26) ^ ((v95 >> 1)
                                                                             - 1094979934
                                                                             - ((2 * (v95 >> 1)) & 0x7D77DD44)) ^ *(_DWORD *)&v104[4 * (BYTE1(v132) ^ 0x12)];
  LODWORD(v59) = *(_DWORD *)&v98[4 * (v142 ^ 0x99)] ^ v69 ^ *(_DWORD *)&v96[4 * (v59 ^ 0x5C)];
  LODWORD(v69) = *(_DWORD *)&v104[4 * (BYTE1(v134) ^ 0x34)];
  unsigned int v145 = v55 ^ v59;
  unsigned int v146 = v69 ^ HIDWORD(a25) ^ *(_DWORD *)&v96[4 * (v88 ^ 0x5C)] ^ v82 ^ (v88 - 1627937640 - 2 * v60) ^ v138;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v146) ^ 0xEB));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v59) = (v95 >> 1) - 1094979934 - ((2 * (v95 >> 1)) & 0x7D77DD44);
  LODWORD(v55) = ((BYTE2(v145) ^ 0x81) - 1627937640 - 2 * ((HIWORD(v145) ^ 0x1481) & 0x9C ^ HIWORD(v145) & 4)) ^ *(_DWORD *)&v96[4 * (BYTE2(v145) ^ 0xDD)];
  unsigned int v147 = ((v145 ^ 0x51) + 429875899 + ((2 * (v145 ^ 0x51) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ *(_DWORD *)&v98[4 * (v145 ^ 0x3C)];
  LODWORD(v60) = *(_DWORD *)&v96[4 * (BYTE2(v143) ^ 0xDB)] ^ ((BYTE2(v143) ^ 0x87)
                                                            - 1627937640
                                                            - ((2 * (HIWORD(v143) ^ 0x7787)) & 0x130));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v145) ^ 0x14));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v148 = v95 >> 1;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v144) ^ 0x9A));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v88) = *(_DWORD *)&v96[4 * (((v146 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v146 ^ 0xA87CE98B) >> 16) ^ (v147 - 1627937640 - ((2 * v147) & 0x3DEF4930));
  LODWORD(v69) = *(_DWORD *)&v98[4 * (v146 ^ 0xE6)] ^ *(_DWORD *)&v104[4 * (BYTE1(v143) ^ 0xDE)] ^ ((v146 ^ 0x8B) + 429875899 + ((2 * (v146 ^ 0xA87CE98B) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ (v55 - 1094979934 - ((2 * v55) & 0x7D77DD44)) ^ (v95 >> 1);
  LODWORD(v82) = *(_DWORD *)(v49 - 256);
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v143) ^ 0x77));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v55) = *(_DWORD *)&v104[4 * (BYTE1(v145) ^ 0x34)] ^ a24 ^ ((BYTE2(v144) ^ 0xE9)
                                                                   - 1627937640
                                                                   - ((2 * (HIWORD(v144) ^ 0x9AE9)) & 0x130)) ^ *(_DWORD *)&v96[4 * (BYTE2(v144) ^ 0xB5)] ^ ((v143 ^ 0x9E) + v82 - ((2 * (v143 ^ 0x9E) + 99582) & 0x10076)) ^ v59 ^ *(_DWORD *)&v98[4 * (v143 ^ 0xF3)];
  unsigned int v149 = *(_DWORD *)&v104[4 * (BYTE1(v146) ^ 0xB)] ^ a23 ^ ((v144 ^ 0xA8)
                                                          + v82
                                                          - ((2 * (v144 ^ 0xA8) + 99582) & 0x10076)) ^ *(_DWORD *)&v98[4 * (v144 ^ 0xC5)] ^ v148 ^ (v60 - 1094979934 - ((2 * v60) & 0x7D77DD44));
  unsigned int v150 = *(_DWORD *)&v104[4 * (BYTE1(v144) ^ 0x2D)] ^ HIDWORD(a24) ^ (v95 >> 1) ^ (v88
                                                                                 + *(_DWORD *)(v49 - 252)
                                                                                 + ~((2 * v88) & 0x7D77DD44));
  LODWORD(v88) = v69 + 1807390555 - ((2 * v69) & 0xD7752EB6);
  LODWORD(v69) = ((v149 ^ 0x2E0E654A) >> 16);
  LODWORD(v60) = v69 - 1627937640 - (((v149 ^ 0x2E0E654A) >> 15) & 0x130);
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v149) ^ 0x6D));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v151 = v95 >> 1;
  unsigned int v152 = v88 ^ a25;
  LODWORD(v88) = *(_DWORD *)&v96[4 * (v69 ^ 0x5C)];
  LODWORD(v69) = *(_DWORD *)(v94 + 4 * (HIBYTE(v152) ^ 0xFD));
  LODWORD(v88) = v88 ^ (v69 << 31) ^ (v69 >> 1) ^ v60 ^ 0x3398FF2A;
  LODWORD(v69) = ((v149 ^ 0x4A) + 429875899 + ((2 * (v149 ^ 0x2E0E654A) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ *(_DWORD *)&v98[4 * (v149 ^ 0x27)];
  int v153 = v88 - 1094979934 - ((2 * v88) & 0x7D77DD44);
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v150) ^ 0xAE));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v88) = (v95 >> 1) ^ *(_DWORD *)&v104[4 * (BYTE1(v152) ^ 0xA4)] ^ (v69 - 1094979934 - ((2 * v69) & 0x7D77DD44));
  int v154 = v88 - 1627937640 - ((2 * v88) & 0x3DEF4930);
  LODWORD(v88) = *(_DWORD *)&v96[4 * (BYTE2(v150) ^ 0x3A)] ^ v151 ^ *(_DWORD *)&v98[4 * (v152 ^ 0x4D)] ^ ((v152 ^ 0x20) + v82 - ((2 * (v152 ^ 0x20) + 99582) & 0x10076)) ^ ((BYTE2(v150) ^ 0x66) - 1627937640 - ((v150 >> 15) & 0x130));
  LODWORD(v59) = ((v150 ^ 0xB3)
                + 1473949986
                + ((2 * (v150 ^ 0xB3) + 254) & 0x144 ^ 0xCFCA7BFF)) ^ *(_DWORD *)&v104[4 * (BYTE1(v149) ^ 0x65)];
  LODWORD(v59) = (v59 - 2139054021 - ((2 * v59) & 0x1014076)) ^ *(_DWORD *)&v98[4 * (v150 ^ 0xDE)];
  LODWORD(v60) = *(_DWORD *)&v96[4 * (BYTE2(v152) ^ 0x40)] ^ ((BYTE2(v152) ^ 0x1C)
                                                            - 1627937640
                                                            - ((2 * (HIWORD(v152) ^ 0xFD1C)) & 0x130));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * ((v55 ^ 0x3F162902) >> 24));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  unsigned int v155 = ((v55 ^ 0x3F162902) >> 16) ^ a22 ^ *(_DWORD *)&v96[4 * (((v55 ^ 0x3F162902) >> 16) ^ 0x5C)] ^ v154;
  LODWORD(v69) = *(_DWORD *)&v104[4 * (BYTE1(v150) ^ 0x7C)];
  unsigned int v156 = (v95 >> 1) ^ HIDWORD(a21) ^ ((v60 ^ 0xD9E215AF ^ -(v60 ^ 0xD9E215AF) ^ ((v60 ^ v59 ^ 0x431D28D3)
                                                                               + (v59 ^ 0x6500C283)
                                                                               + 1))
                                    + (v59 ^ 0x6500C283));
  unsigned int v157 = *(_DWORD *)&v104[4 * (BYTE1(v55) ^ 0xCB)] ^ HIDWORD(a22) ^ (v88 - 1094979934 - ((2 * v88) & 0x7D77DD44));
  LODWORD(v55) = v69 ^ HIDWORD(a23) ^ ((v55 ^ 2)
                                     + 429875899
                                     + ((2 * (v55 ^ 0x3F162902) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ *(_DWORD *)&v98[4 * (v55 ^ 0x6F)] ^ v153;
  LODWORD(v59) = ((BYTE2(v55) ^ 0xE9) - 1627937640 - 2 * ((WORD1(v55) ^ 0xB8E9) & 0x9A ^ WORD1(v55) & 2)) ^ *(_DWORD *)&v96[4 * (BYTE2(v55) ^ 0xB5)];
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v155) ^ 0x9D));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v158 = v95 >> 1;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v157) ^ 0x61));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v88) = *(_DWORD *)&v98[4 * (v55 ^ 0xC5)] ^ *(_DWORD *)&v96[4 * (BYTE2(v155) ^ 0x28)] ^ ((v55 ^ 0xA8) + 429875899 + ((2 * (v55 ^ 0xA8) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ ((BYTE2(v155) ^ 0x74) - 1627937640 - 2 * ((HIWORD(v155) ^ 0x9D74) & 0x9A ^ HIWORD(v155) & 2)) ^ (v95 >> 1);
  LODWORD(v69) = v158 ^ ((BYTE2(v156) ^ 0xE6) - 1627937640 - ((2 * (HIWORD(v156) ^ 0xB0E6)) & 0x130)) ^ *(_DWORD *)&v96[4 * (BYTE2(v156) ^ 0xBA)];
  int v159 = v155;
  int v160 = (v155 ^ 0xD9) + v82 - ((2 * (v155 ^ 0xD9) + 99582) & 0x10076);
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (BYTE3(v55) ^ 0xB8));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v60) = ((BYTE2(v157) ^ 8) - 1627937640 - 2 * ((HIWORD(v157) ^ 0x6108) & 0x9A ^ HIWORD(v157) & 2)) ^ *(_DWORD *)&v96[4 * (BYTE2(v157) ^ 0x54)] ^ *(_DWORD *)&v98[4 * (v156 ^ 0x29)] ^ ((v156 ^ 0x44) + 429875899 + ((2 * (v156 ^ 0x44) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ (v95 >> 1);
  unsigned int v161 = *(_DWORD *)&v104[4 * (BYTE1(v156) ^ 0xDD)] ^ HIDWORD(a20) ^ (v88 - 1094979934 - ((2 * v88) & 0x7D77DD44));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v156) ^ 0xB0));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  unsigned int v162 = *(_DWORD *)&v104[4 * (BYTE1(v155) ^ 0xBD)] ^ a21 ^ (v60 - 1094979934 - ((2 * v60) & 0x7D77DD44));
  unsigned int v163 = *(_DWORD *)&v104[4 * (BYTE1(v157) ^ 0x8F)] ^ HIDWORD(a19) ^ v160 ^ *(_DWORD *)&v98[4 * (v159 ^ 0xB4)] ^ (v95 >> 1) ^ (v59 - 1094979934 - ((2 * v59) & 0x7D77DD44));
  LODWORD(v59) = ((v157 ^ 0x85) + v82 - ((2 * (v157 ^ 0x85) + 99582) & 0x10076)) ^ a20 ^ *(_DWORD *)&v98[4 * (v157 ^ 0xE8)] ^ *(_DWORD *)&v104[4 * (BYTE1(v55) ^ 0x2D)] ^ (v69 - 1094979934 - ((2 * v69) & 0x7D77DD44));
  int v164 = BYTE2(v162);
  LODWORD(v88) = ((BYTE2(v59) ^ 0x66) - 1627937640 - ((v59 >> 15) & 0x130)) ^ *(_DWORD *)&v96[4 * (BYTE2(v59) ^ 0x3A)];
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v163) ^ 0x18));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v55) = ((v95 >> 1) - 1627937640 - ((2 * (v95 >> 1)) & 0x3DEF4930)) ^ *(_DWORD *)&v96[4 * (BYTE2(v162) ^ 0x40)];
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v162) ^ 0xEF));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v69) = (v95 >> 1) ^ *(_DWORD *)&v98[4 * (v163 ^ 0x90)] ^ ((v163 ^ 0xFD)
                                                                                   + 429875899
                                                                                   + ((2
                                                                                     * (v163 ^ 0xFD)
                                                                                     + 126) & 0x76 ^ 0xFFFEFFFF));
  LODWORD(v60) = *(_DWORD *)&v98[4 * (v161 ^ 0x27)] ^ ((v161 ^ 0x4A)
                                                                      + v82
                                                                      - ((2 * (v161 ^ 0x4A) + 99582) & 0x10076));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (BYTE3(v59) ^ 0xAE));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v60) = (v95 >> 1) ^ *(_DWORD *)&v96[4 * (BYTE2(v163) ^ 0xF)] ^ (v60 - 1627937640 - ((2 * v60) & 0x3DEF4930));
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v161) ^ 0xDC));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v165 = v55 - 1094979934 - ((2 * v55) & 0x7D77DD44);
  LODWORD(v55) = ((BYTE2(v161) ^ 0xE) - 1627937640 - ((2 * (HIWORD(v161) ^ 0xDC0E)) & 0x130)) ^ a19 ^ *(_DWORD *)&v104[4 * (BYTE1(v59) ^ 0x7C)] ^ *(_DWORD *)&v96[4 * (BYTE2(v161) ^ 0x52)] ^ (v69 - 1094979934 - ((2 * v69) & 0x7D77DD44));
  unsigned int v166 = *(_DWORD *)&v104[4 * (BYTE1(v163) ^ 0x1B)] ^ HIDWORD(a18) ^ *(_DWORD *)&v98[4 * (v162 ^ 0x4D)] ^ ((v162 ^ 0x20) + 429875899 + ((2 * (v162 ^ 0x20) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ (v95 >> 1) ^ (v88 - 1094979934 - ((2 * v88) & 0x7D77DD44));
  LODWORD(v88) = HIWORD(v163);
  LODWORD(v69) = BYTE1(v162) ^ 0xA4;
  unsigned int v167 = ((v59 ^ 0xB3) + v82 - ((2 * (v59 ^ 0xB3) + 99582) & 0x10076)) ^ HIDWORD(a17) ^ *(_DWORD *)&v104[4 * (BYTE1(v161) ^ 0x65)] ^ *(_DWORD *)&v98[4 * (v59 ^ 0xDE)] ^ v165;
  LOBYTE(v163) = ((v59 ^ 0xB3) + v82 - ((2 * (v59 ^ 0xB3) - 2) & 0x76)) ^ BYTE4(a17) ^ v104[4 * (BYTE1(v161) ^ 0x65)] ^ v98[4 * (v59 ^ 0xDE)] ^ v165 ^ v164;
  LODWORD(v59) = *(_DWORD *)&v104[4 * v69] ^ a18 ^ (v60 - 1094979934 - ((2 * v60) & 0x7D77DD44));
  unsigned int v168 = v167 ^ v164 ^ 0x7641388B;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * HIBYTE(v168));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v169 = v95 >> 1;
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * ((v55 ^ 0xF7E9CFA8) >> 24));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v170 = v95 >> 1;
  int v171 = (BYTE2(v168) - 1627937640 - ((v167 >> 15) & 0x130)) ^ *(_DWORD *)&v96[4 * (BYTE2(v168) ^ 0x5C)];
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (BYTE3(v59) ^ 0xE7));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  int v172 = v95 >> 1;
  LODWORD(v88) = v169 ^ *(_DWORD *)&v98[4 * ((v59 ^ v88) ^ 0x18)] ^ (((v55 ^ 0xF7E9CFA8) >> 16)
                                                                                    - 1627937640
                                                                                    - (((v55 ^ 0xF7E9CFA8) >> 15) & 0x130)) ^ *(_DWORD *)&v96[4 * (((v55 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ (((v59 ^ v88) ^ 0x75) + 429875899 + ((2 * ((v59 ^ v88) ^ 0x75) + 126) & 0x76 ^ 0xFFFEFFFF));
  LODWORD(v88) = (v88 - 1094979934 - ((2 * v88) & 0x7D77DD44)) ^ *(_DWORD *)&v104[4 * (BYTE1(v166) ^ 0xEC)];
  LODWORD(v69) = v170 ^ *(_DWORD *)&v96[4 * (BYTE2(v166) ^ 0xA7)] ^ ((BYTE2(v166) ^ 0xFB)
                                                                   - 1627937640
                                                                   - ((2 * (HIWORD(v166) ^ 0x57FB)) & 0x130)) ^ (v82 + v168 - ((2 * v168 + 99582) & 0x10076)) ^ *(_DWORD *)&v98[4 * (v163 ^ 0xE6)];
  HIDWORD(v95) = *(_DWORD *)(v94 + 4 * (HIBYTE(v166) ^ 0x57));
  LODWORD(v95) = HIDWORD(v95) ^ 0x6731FE54;
  LODWORD(v60) = WORD1(v59);
  unsigned int v173 = WORD1(v59) ^ 0xE731;
  int v174 = BYTE2(v59) ^ 0x31;
  LODWORD(v96) = *(_DWORD *)&v96[4 * (BYTE2(v59) ^ 0x6D)];
  LODWORD(v59) = (v69 - 1094979934 - ((2 * v69) & 0x7D77DD44)) ^ *(_DWORD *)&v104[4 * (BYTE1(v59) ^ 0x6D)];
  LODWORD(v69) = ((v55 ^ 0xA8) + 429875899 + ((2 * (v55 ^ 0xF7E9CFA8) + 126) & 0x76 ^ 0xFFFEFFFF)) ^ *(_DWORD *)&v98[4 * (v55 ^ 0xC5)] ^ (v174 - 1627937640 - 2 * (v173 & 0x9C ^ v60 & 4));
  LODWORD(v60) = *(_DWORD *)&v104[4 * (BYTE1(v55) ^ 0x2D)];
  LODWORD(v55) = a10 ^ *(_DWORD *)&v104[4 * (BYTE1(v167) ^ 0xDA)] ^ ((v69 ^ (v95 >> 1) ^ v96)
                                                                   - 1094979934
                                                                   - ((2 * (v69 ^ (v95 >> 1) ^ v96)) & 0x7D77DD44));
  unsigned int v175 = (v59 - 1126434652 - ((2 * v59) & 0x79B7F148)) ^ a17;
  LODWORD(v59) = (v88 + 654453822 - ((2 * v88) & 0x4E04587C)) ^ HIDWORD(a16);
  LODWORD(v104) = v60 ^ a16 ^ ((v166 ^ 0x2F)
                             + v82
                             - ((2 * (v166 ^ 0x2F) + 99582) & 0x10076)) ^ v172 ^ *(_DWORD *)&v98[4 * (v166 ^ 0x42)] ^ (v171 - 1094979934 - ((2 * v171) & 0x7D77DD44));
  LODWORD(v96) = v59 ^ 0x351D74B9;
  uint64_t v176 = *(unsigned int *)(v49 - 120);
  int v177 = (char *)*(&off_1F16F9FD0 + (int)v176 - 1934) - 8;
  int v178 = (char *)*(&off_1F16F9FD0 + SHIDWORD(a9)) - 8;
  int v179 = (char *)*(&off_1F16F9FD0 + (int)a9) - 4;
  LODWORD(v69) = (*(_DWORD *)&v179[4 * (BYTE2(v175) ^ 0x9E)] - 1160016327) ^ (*(_DWORD *)&v177[4
                                                                                             * (v104 ^ 0xC9)]
                                                                            - 1146507460);
  int v180 = *(_DWORD *)&v177[4 * (v55 ^ 0xC8)];
  uint64_t v181 = v180 - ((2 * v180 + 391339640) & 0x1FCABE64u);
  LODWORD(v88) = (*(_DWORD *)&v179[4 * (BYTE2(v104) ^ 0x38)] - 1160016327) ^ (*(_DWORD *)&v178[4
                                                                                             * ((v55 ^ 0x898C5DC8) >> 24)]
                                                                            + 147417561);
  uint64_t v182 = *(unsigned int *)&v177[4 * (v175 ^ 0xA2)];
  int v183 = *(_DWORD *)&v177[4 * (v59 ^ 0xB9)];
  int v184 = *(_DWORD *)&v178[4 * (HIBYTE(v175) ^ 0xE7)];
  LODWORD(v177) = *(_DWORD *)&v178[4 * ((v104 >> 24) ^ 0xB8)];
  LODWORD(v59) = *(_DWORD *)&v178[4 * (BYTE3(v59) ^ 0x65)];
  int v185 = (char *)*(&off_1F16F9FD0 + (int)v176 - 1856) - 12;
  int v186 = *(_DWORD *)&v185[4 * (BYTE1(v175) ^ 0xA0)];
  int v187 = *(_DWORD *)&v185[4 * (BYTE1(v104) ^ 0xE9)];
  LODWORD(v59) = (v69 + 266690354 - ((2 * v69) & 0x1FCABE64)) ^ *(_DWORD *)&v185[4 * (BYTE1(v55) ^ 0x61)] ^ (v59 + 147417561);
  int v188 = *(_DWORD *)&v179[4 * (BYTE2(v55) ^ 0x8C)];
  LODWORD(v55) = *(_DWORD *)&v185[4 * BYTE1(v96)] ^ HIDWORD(a11) ^ ((v88 ^ (v182 - 1146507460))
                                                                  + 266690354
                                                                  - ((2 * (v88 ^ (v182 - 1146507460))) & 0x1FCABE64));
  unsigned int v189 = HIDWORD(a6) ^ HIDWORD(a16) ^ (v59 + 654453822 - ((2 * v59) & 0x4E04587C));
  LODWORD(v104) = v186 ^ HIDWORD(a6) ^ (v181 - 879817106) ^ (v177 + 147417561) ^ (*(_DWORD *)&v179[4 * BYTE2(v96)]
                                                                                        - 1160016327);
  unsigned int v190 = (char *)*(&off_1F16F9FD0 + (int)a8) - 8;
  *(unsigned char *)(a5 + *(void *)(v49 - 248)) = v190[BYTE1(v55) ^ 0x99] ^ 0xA3;
  int v191 = (char *)*(&off_1F16F9FD0 + (int)v176 - 1897) - 12;
  *(unsigned char *)(a5 + *(void *)(v49 - 240)) = (v191[BYTE2(v189) ^ 0xADLL] - 58) ^ 0xC5;
  uint64_t v192 = (uint64_t)*(&off_1F16F9FD0 + SHIDWORD(a7));
  *(unsigned char *)(a5 + *(void *)(v49 - 200)) = *(unsigned char *)(v192 + (v55 ^ 0xFCLL)) ^ 0x19;
  *(unsigned char *)(a5 + *(void *)(v49 - 208)) = (v191[BYTE2(v104) ^ 0x8CLL] - 58) ^ 0x47;
  int v193 = (char *)*(&off_1F16F9FD0 + (int)a7) - 12;
  *(unsigned char *)(a5 + *(void *)(v49 - 224)) = (v193[BYTE3(v55) ^ 0xDELL] - 26) ^ 0x1B;
  *(unsigned char *)(a5 + *(void *)(v49 - 232)) = ((v191[BYTE2(v55) ^ 0x15] + ((v191[BYTE2(v55) ^ 0x15] - 58) ^ 0xDA) - 57) ^ 0xFE)
                                          + v191[BYTE2(v55) ^ 0x15]
                                          - 58;
  unsigned int v194 = HIDWORD(a8) ^ v187 ^ (v188 - 1160016327) ^ (v183 - 1146507460) ^ (v184
                                                                         - ((2 * v184 + 294835122) & 0x1FCABE64)
                                                                         + 414107915);
  *(unsigned char *)(a5 + *(void *)(v49 - 216)) = *(unsigned char *)(v192 + (v194 ^ 5)) ^ 0xEB;
  *(unsigned char *)(a5 + *(void *)(v49 - 168)) = (v193[HIBYTE(v189) ^ 0x4ELL] - 26) ^ 0xE6;
  *(unsigned char *)(a5 + *(void *)(v49 - 152)) = (v193[(v104 >> 24) ^ 0x9CLL] - 26) ^ 0xB8;
  uint64_t v195 = *(void *)(v49 - 176);
  *(unsigned char *)(a5 + v195) = (v193[HIBYTE(v194) ^ 0x67] - 26) ^ 0x91;
  *(unsigned char *)(a5 + *(void *)(v49 - 160)) = *(unsigned char *)(v192 + (v104 ^ 0xF2)) ^ 0xE1;
  *(unsigned char *)(a5 + *(void *)(v49 - 192)) = v190[BYTE1(v104) ^ 0x1ELL];
  *(unsigned char *)(a5 + *(void *)(v49 - 144)) = v190[BYTE1(v194) ^ 0x33] ^ 0x19;
  *(unsigned char *)(a5 + *(void *)(v49 - 184)) = v190[BYTE1(v189) ^ 0xBCLL] ^ 0xD7;
  *(unsigned char *)(a5 + *(void *)(v49 - 136)) = *(unsigned char *)(v192 + (v189 ^ 0x9FLL)) ^ 0x19;
  *(unsigned char *)(a5 + *(void *)(v49 - 128)) = (v191[BYTE2(v194) ^ 0xDLL] - 58) ^ 0x8E;
  uint64_t v196 = v195 + 922043818 - ((2 * v195 + 32) & 0x6DEA8B54u) + 16;
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a45 + 8 * ((127 * ((v196 ^ 0x36F545AA) >= a43)) ^ ((int)v176 - 699))))(414107915, &off_1F16F9FD0, v196, v176, 25, v179, v181, v182, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1BCAD0D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  a20 = a9 - 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((89 * (((v21 + ((v20 - 1120569884) & 0x42CA83EBu) - 137 + 0xFFFFFFFDADA42CCLL) & (*(&a20 + 6 * (a9 - 1772733383) + 2) + (int)a7)) == 2)) ^ v20)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1BCAD0E34()
{
  return v0();
}

uint64_t sub_1BCAD0E3C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((62 * (v1 != 1854503558)) ^ 0x154u)))();
}

uint64_t sub_1BCAD0E68@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if (a2 + v2 - 1 >= (((v5 + 801) | 0xCE) ^ 0x7FFFFA11u)) {
    int v6 = 1749351852 - v4;
  }
  else {
    int v6 = v4;
  }
  _DWORD *v3 = v6;
  *(_DWORD *)(result + 12) = 105670834;
  return result;
}

uint64_t sub_1BCAD0EBC()
{
  BOOL v4 = v2 + 128907482 < (int)(v1 + 2011331535);
  if (v1 > 0x81D8430 != v2 + 128907482 < -136152113) {
    BOOL v4 = v1 > 0x81D8430;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v0 + 25) ^ v4) & 1) * ((v0 + 1276389657) & 0xB3EBD76F ^ 0x482)) ^ v0)))();
}

uint64_t sub_1BCAD0F4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 585960180) & 0x870B6BFC) + 1425816440;
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((52
                                             * (((2 * v4) & 0xFF7F77FC ^ 0x870B63FC) + (v4 ^ 0xBC3A0E00) - 35731856 == 2107540078)) ^ 0x391u)))(0);
}

uint64_t sub_1BCAD0FEC@<X0>(int a1@<W2>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W6>, unsigned int a5@<W7>, int a6@<W8>)
{
  *(unsigned char *)(a3 + v6) = *(unsigned char *)(a2 + (a6 + a1)) ^ 0x80;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v6 + 1 != ((v7 + a4) & a5 ^ v8)) * v9) ^ v7)))();
}

uint64_t sub_1BCAD1030(int a1, int a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v9 = a4 - 32 + (a1 ^ (v6 + 720));
  int8x16_t v10 = *(int8x16_t *)(v7 + v9 - 15);
  int8x16_t v11 = *(int8x16_t *)(v7 + v9 - 31);
  uint64_t v12 = v5 + v9;
  *(int8x16_t *)(v12 - 15) = veorq_s8(v10, a5);
  *(int8x16_t *)(v12 - 31) = veorq_s8(v11, a5);
  return (*(uint64_t (**)(void))(v8 + 8 * ((2 * (a2 == 32)) | (8 * (a2 == 32)) | a3)))();
}

uint64_t sub_1BCAD103C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 | (32 * (v2 + 1 != v4 + 32)))))();
}

uint64_t sub_1BCAD111C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>, int8x16_t a6@<Q0>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v53 + 8 * (v54 + a5 - 140));
  HIDWORD(a24) = HIDWORD(a41);
  int v56 = BYTE4(a44) ^ 0x5F;
  if (v56 == 2)
  {
    int8x16x4_t v71 = vld4q_s8(v51);
    uint8x16_t v65 = (uint8x16_t)veorq_s8(v71.val[1], a6);
    _Q21 = vmovl_u8(*(uint8x8_t *)v65.i8);
    _Q20 = vmovl_high_u8(v65);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    return sub_1BCAD14D0(a1, a2, a3, a4, a42);
  }
  else if (v56 == 1)
  {
    HIDWORD(a21) = a42;
    int8x16x4_t v70 = vld4q_s8(v51);
    uint8x16_t v57 = (uint8x16_t)veorq_s8(v70.val[2], a6);
    _Q25 = vmovl_high_u8(v57);
    _Q24 = vmovl_u8(*(uint8x8_t *)v57.i8);
    __asm
    {
      SHLL2           V24.4S, V24.8H, #0x10
      SHLL2           V25.4S, V25.8H, #0x10
    }
    HIDWORD(a20) = BYTE4(a44) ^ 0x5F;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * ((2026 * (a27 + 1 != v52)) ^ a1)))(a1, a2, a3, a4, a42, a43, HIDWORD(a42), *(void *)(v50 + 8 * HIDWORD(a26)), a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             __PAIR64__(a43, HIDWORD(a42)),
             v55,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50);
  }
  else
  {
    return v55(a1, a2, a3, a4, a42);
  }
}

uint64_t sub_1BCAD14D0()
{
  uint64_t v7 = (_DWORD *)(v6 + 4 * (v0 + v3));
  int v8 = *(v7 - 8) ^ *(v7 - 3);
  int v9 = *(_DWORD *)(v6 + 4 * ((v1 ^ (v3 + 597)) + v0)) ^ *(v7 - 14) ^ (v8 + v2 - ((2 * v8) & 0x7568AA9A));
  HIDWORD(v10) = v9 ^ v2;
  LODWORD(v10) = v9;
  *uint64_t v7 = (v10 >> 31) + v2 - ((2 * (v10 >> 31)) & 0x7568AA9A);
  return (*(uint64_t (**)(void))(v5 + 8 * ((49 * (v0 + 1 == v4 + 64)) ^ 0x6DAu)))();
}

void sub_1BCAD1564()
{
}

uint64_t sub_1BCAD1650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 8 * (int)((v3 + 1331687295) & 0xB0A00F55)))(a1, v2 - 0x7EC954F575262799, 3681974362);
}

uint64_t sub_1BCAD1694(uint64_t a1, int a2, int a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,unsigned int a42)
{
  unsigned int v47 = a3 ^ ((*v45 & 0x7FFFFFFE | ((v42 - v44 + 1208) ^ 0x6C3D19B) & v45[623]) >> 1);
  v45[623] = v45[396] ^ a6 ^ *(_DWORD *)(v46 + 4 * (*v45 & 1)) ^ (v47 + a5 - (a2 & (2 * v47)));
  return (*(uint64_t (**)(void))(v43 + 8 * ((1473 * (a42 > 0x26F)) ^ v42)))();
}

void sub_1BCAD170C()
{
}

uint64_t sub_1BCAD1830(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35,unsigned int a36)
{
  unsigned int v38 = ((a2 + 911) ^ 0x18AB93) + v37;
  BOOL v39 = v38 < a2 + 517885025;
  BOOL v40 = v38 > a36;
  if (a36 < a35 != v39) {
    BOOL v41 = v39;
  }
  else {
    BOOL v41 = v40;
  }
  return (*(uint64_t (**)(void))(v36 + 8 * ((161 * v41) ^ (a2 + 1066))))();
}

uint64_t sub_1BCAD18A8@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(a3 + (a4 + v6)) = *(unsigned char *)(a1 + (v5 + a2));
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((31 * (((v4 - 1) ^ (((v5 + 1) & 0xFFFFFFFC) == v7)) & 1)) ^ v4)))();
}

uint64_t sub_1BCAD18B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (((3 * ((v7 - 194) ^ 0x28) + 878) * (v5 == v6)) ^ v7)))(72, a2, a3, a4, a5, 1096242143, 3198725064);
}

uint64_t sub_1BCAD1908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14
                                                              + 8
                                                              * ((124
                                                                * (a14 - 836639513 < (((a2 + 1521) | 0x94) ^ 0xFFFFF96E))) ^ ((int)a2 + 1188))))(a1, a2, a3);
}

uint64_t sub_1BCAD191C@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  unsigned int v55 = (v52 ^ 0x21F ^ a2) + v53;
  int v56 = *(_DWORD *)(&a39 + (v55 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v55) = HIBYTE(v56) ^ 0xB5;
  *(unsigned char *)(a1 + (a2 + v53 + 60)) = BYTE2(v56) ^ 0xDA;
  *(unsigned char *)(a1 + (a2 + v53 + 61)) = BYTE1(v56) ^ 0x8A;
  *(unsigned char *)(a1 + (a2 + v53 + 62)) = v56 ^ 0x46;
  BOOL v57 = v53 - 670710097 < (a51 + 249094129);
  if (v53 - 670710097 < v51 != a51 + 249094129 < v51) {
    BOOL v57 = a51 + 249094129 < v51;
  }
  return (*(uint64_t (**)(void))(v54 + 8 * (((2 * !v57) | (4 * !v57)) ^ v52)))();
}

void sub_1BCAD19DC(int a1@<W8>, int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v9 = (((~&a2 & 0x74D3750E) - (~&a2 | 0x74D3750F)) ^ 0x7E277B20) * v7;
  a4 = v6;
  a2 = a1 - v9 + 64;
  a3 = v9 - v4 - ((2043013788 - v8) & 0x67D7E3F2) + ((a1 - 1488820616) & 0x58BD9C5F ^ 0xB0CEE318);
  (*(void (**)(int *))(v5 + 8 * (a1 + 1792)))(&a2);
  JUMPOUT(0x1BCAD1A78);
}

uint64_t sub_1BCAD1AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (int)(((v5 ^ 0x6C8 ^ (v5 + 701359072) & 0xD63215DD)
                                                                              * (v3 != 2048063208)) ^ v5)))(a1, a2, a3, 3330937409);
}

uint64_t sub_1BCAD1AF4()
{
  BOOL v9 = v2 < v3;
  if (v9 == v0 + 1879569538 < ((v8 + 1175 + v6) & v4) + 1879568363) {
    BOOL v9 = v0 + 1879569538 < v2;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 * ((5 * ((v8 + 1175) ^ v7)) ^ v1)) ^ (v8 + 1175))))();
}

void sub_1BCAD1F48(int a1@<W8>)
{
  BOOL v7 = *(_DWORD *)(*v4 + 4 * (a1 + v2)) == v3;
  *int v6 = (a1 - v7 + (((v5 - 1688) | 0x91) ^ (v2 + 144))) * v1 - 869762700 * (a1 - v7) - 495263426;
}

uint64_t sub_1BCAD1F98()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((14 * (v4 + 1 != v3 + 44)) ^ v1)))(v0);
}

uint64_t sub_1BCAD2068()
{
  return 4294925273;
}

uint64_t sub_1BCAD2080()
{
  unsigned int v5 = (((v4 - v3) >> 4) & 0xBAFF736 ^ 0x32EB716)
     + (((v4 - v3) >> 5) ^ 0xFC48A414)
     - 1151390901;
  int v6 = (v2 > 0x46C8D919) ^ (v5 < 0xB93726E6);
  BOOL v7 = v5 < v2 - 1187567898;
  if (v6) {
    BOOL v7 = v2 > 0x46C8D919;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 ^ 0x2DD) - 255) * v7) | v0)))();
}

uint64_t sub_1BCAD2114()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v2 ^ (v2 + 787)) - 379) * (v3 < v0)) ^ (v2 + 2033988506))))();
}

uint64_t sub_1BCAD2158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_OWORD *)(a6 + v9) = *v6;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 == 0) * v8) ^ v7)))();
}

uint64_t sub_1BCAD2184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  int v41 = 5 * (v40 ^ 0x6DD);
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v40 ^ 0xE2F)))(16);
  uint64_t v43 = *(&off_1F16F9FD0 + v40 - 1582);
  *(void *)((char *)v43 - 4) = v42;
  uint64_t v43 = (void *)((char *)v43 - 4);
  (*(void (**)(void))(v39 + 8 * (v40 ^ 0xE46)))();
  int v44 = (void *)(*(uint64_t (**)(uint64_t))(v39 + 8 * (v40 ^ 0xE2F)))(8);
  uint64_t v45 = (uint64_t)*(&off_1F16F9FD0 + (v40 ^ 0x6BB));
  *(void *)(v45 - 4) = v44;
  *int v44 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v46 = (uint64_t)*(&off_1F16F9FD0 + v40 - 1455);
  *(_DWORD *)(v46 - 8) = 0;
  uint64_t v64 = *(&off_1F16F9FD0 + (v40 ^ 0x65E));
  *uint64_t v64 = 0;
  unsigned int v47 = (unsigned char *)*v43;
  int v48 = *(unsigned char **)(v45 - 4);
  v48[6] = 26;
  *unsigned int v47 = -77;
  v48[4] = -34;
  uint64_t v49 = *(&off_1F16F9FD0 + (v40 ^ 0x6AC));
  v49[2] = 88;
  v49[9] = 119;
  *(unsigned char *)(v46 + 17) = 68;
  v49[14] = -81;
  v47[4] = 73;
  v49[4] = 6;
  *(unsigned char *)(v46 + 16) = 83;
  *(unsigned char *)*(&off_1F16F9FD0 + (v40 ^ 0x680)) = -113;
  v47[1] = 80;
  uint64_t v66 = *(&off_1F16F9FD0 + v40 - 1448);
  *uint64_t v66 = 88;
  v49[13] = 56;
  *(unsigned char *)*(&off_1F16F9FD0 + (v40 ^ 0x63E)) = 1;
  v47[2] = -44;
  uint8x16_t v65 = *(&off_1F16F9FD0 + v40 - 1521);
  *uint8x16_t v65 = 51;
  v48[2] = 80;
  v47[6] = -11;
  uint64_t v50 = *(&off_1F16F9FD0 + (v40 ^ 0x609));
  unsigned char *v50 = 25;
  *(unsigned char *)*(&off_1F16F9FD0 + v40 - 1430) = 39;
  v47[5] = -22;
  v47[3] = -15;
  v49[8] = 113;
  *(unsigned char *)(v46 + 2) = -52;
  v49[15] = -46;
  unsigned int v51 = *(&off_1F16F9FD0 + (v40 ^ 0x60E));
  *unsigned int v51 = -109;
  v47[13] = 99;
  unsigned int v52 = *(&off_1F16F9FD0 + v40 - 1566);
  *unsigned int v52 = 119;
  v48[7] = -80;
  *int v48 = -122;
  v47[8] = 34;
  v49[7] = -112;
  v47[11] = 54;
  *(unsigned char *)(v46 + 3) = 3;
  v48[1] = 73;
  v48[5] = -5;
  *(unsigned char *)(v46 - 12) = 23;
  *(unsigned char *)(v46 + 4) = -36;
  v48[3] = 59;
  int v53 = (unsigned char *)*v43;
  v53[10] = 45;
  v53[15] = -87;
  *uint64_t v49 = 51;
  v49[11] = -101;
  *(unsigned char *)(v46 + 13) = -92;
  v49[5] = -50;
  v49[10] = 55;
  *(unsigned char *)(v46 + 15) = 52;
  *(v49 - 4) = -26;
  uint64_t v54 = v49 - 4;
  *(_WORD *)(v46 - 2) = -3774;
  *(unsigned char *)(v46 + 10) = -121;
  *(unsigned char *)(v46 + 8) = 77;
  *(unsigned char *)(v46 + 14) = 113;
  v53[9] = 31;
  v49[16] = 24;
  v49[6] = -25;
  *(unsigned char *)(v46 - 4) = -85;
  v54[2] = 126;
  v49[1] = -50;
  *(unsigned char *)(v46 - 10) = 34;
  v49[12] = 26;
  v53[12] = -86;
  v54[3] = -27;
  v53[7] = -90;
  v53[14] = -33;
  *(unsigned char *)(v46 - 9) = -98;
  *(unsigned char *)(v46 + 9) = -105;
  v49[3] = 55;
  *(unsigned char *)(v46 + 12) = -119;
  *(unsigned char *)(v46 + 18) = 58;
  *(unsigned char *)uint64_t v46 = 73;
  *(unsigned char *)(v46 - 11) = -15;
  v54[1] = 95;
  uint64_t v55 = (*(unsigned char *)(v46 + 4) ^ (v41 - 101));
  *(unsigned char *)(v46 + 7) = 120;
  *(unsigned char *)(v46 + 1) = 69;
  *(_WORD *)(v46 + 5) = -4168;
  *(unsigned char *)(v46 - 3) = -105;
  *(unsigned char *)(v46 + 11) = 79;
  uint64_t v56 = (uint64_t)*(&off_1F16F9FD0 + v40 - 1404);
  LODWORD(v53) = *(unsigned __int8 *)(v56 + 793 + ((*(unsigned char *)(*v43 + 8) - 36) ^ 0x77));
  BOOL v57 = *(unsigned __int8 **)(v45 - 4);
  unint64_t v58 = (((unint64_t)*(unsigned __int8 *)(v46 + 2) << 40) | ((unint64_t)(((*(unsigned char *)(v56 + 2 + v55) ^ 0x94) >> 6) | (4 * (*(unsigned char *)(v56 + 2 + v55) ^ 0x94))) << 32) | ((unint64_t)*(unsigned __int8 *)(v46 + 3) << 24) | (unsigned __int16)(v57[5] << 8) | (v49[15] ^ 0x17) & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)(((((v53 >> 6) | (4 * (_BYTE)v53)) ^ 0x7F) >> 2) | ((((v53 >> 6) | (4 * (_BYTE)v53)) ^ 0x7F) << 6)) << 16)) ^ ((unint64_t)v57[1] << 48);
  unint64_t v59 = (((unint64_t)v57[3] << 56) ^ (0xFF00000000000000 * v57[3]) ^ (v58
                                                                             - (v58 ^ ((unint64_t)v57[3] << 56))))
      + v58;
  int v60 = (*v65 >> 4) | (16 * *v65);
  uint64_t v61 = ((*v65 >> 4) | (16 * *v65)) ^ 0xFELL;
  uint64_t v63 = v56 + 274;
  LODWORD(a14) = ((2 * *(_DWORD *)(v46 - 8)) & 0xC277E9F6) + (*(_DWORD *)(v46 - 8) ^ 0xE13BF4FB);
  LODWORD(a11) = a39;
  return (*(uint64_t (**)(unint64_t, void, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, void, uint64_t, uint64_t, unsigned char *, uint64_t, _DWORD *, unsigned char *, unsigned char *, unsigned char *, void *))(v39 + 8 * v41))(*(unsigned __int8 *)(*v43 + 5) | ((unint64_t)((((((v60 ^ 0xDE) + (v60 ^ 0x4B)) & 0xA8)+ ((*(unsigned char *)(v63 + v61) ^ 0xA1) & 0xA8)- 2* (((v60 ^ 0xDE) + (v60 ^ 0x4B)) & 0xA8 & (*(unsigned char *)(v63 + v61) ^ 0xA1))) ^ (((v60 ^ 0xDE) + (v60 ^ 0x4B)) ^ *(unsigned char *)(v63 + v61) ^ 0xA1) & 0x57)- 122) << 8) | ((unint64_t)*v66 << 24), (v41 - 495521068) & 0x1D890FB6, 3799446228, v59 - ((2 * v59) & 0x509ED25EBFAFD87ALL) - 0x57B096D0A02813C3, 495521718, 1425, 3778802939, 1879568363, a9, a10, a11, (a14 + 516164357), v56 + 537, a14, v56 + 793,
           a16,
           a17,
           a18,
           v56 + 274,
           a20,
           v57,
           a22,
           *v43,
           a24,
           v56 + 2,
           v49 - 4,
           v46 - 12,
           v64,
           v52,
           v51,
           v50,
           v43);
}

uint64_t sub_1BCAD2A84@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((63
                                * (((a1 == 198 * ((v2 + 1397) ^ 0x799) + 701981768) ^ (15 * ((v2 + 117) ^ 0x9B) + 1)) & 1)) ^ (v2 + 1397))))();
}

uint64_t sub_1BCAD2AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a11 + v13) = v15;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((3732 * ((v12 & 0xFFFFFFFFFFFFFFF8) - (v11 - 1449) == -229)) ^ v11)))();
}

uint64_t sub_1BCAD2B44@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>)
{
  v17.val[1].i64[0] = ((_BYTE)a3 + 9) & 0xF;
  v17.val[1].i64[1] = ((_BYTE)a3 + 8) & 0xF;
  v17.val[2].i64[0] = ((_BYTE)a3 + 7) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)a3 + 6) & 0xF;
  v17.val[3].i64[0] = ((_BYTE)a3 + 5) & 0xF;
  v17.val[3].i64[1] = ((_BYTE)a3 + 4) & 0xF;
  unsigned int v11 = a1 + v9 + a2;
  v12.i64[0] = 0x7777777777777777;
  v12.i64[1] = 0x7777777777777777;
  uint64_t v13 = v11 & ((a4 - 151) ^ 0x149);
  v17.val[0].i64[0] = v13;
  v17.val[0].i64[1] = ((_BYTE)a3 + 10) & 0xF;
  v14.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_1BCB19A20).u64[0];
  v18.val[0].i64[1] = ((_BYTE)a3 + 2) & 0xF;
  v18.val[1].i64[1] = a3 & 0xF;
  v18.val[2].i64[1] = (a3 + 14) & 0xF;
  v18.val[3].i64[1] = (a3 + 12) & 0xF;
  v18.val[0].i64[0] = ((_BYTE)a3 + 3) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)a3 + 1) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)a3 - 1) & 0xF;
  v18.val[3].i64[0] = (a3 + 13) & 0xF;
  v14.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_1BCB19A20).u64[0];
  int8x16_t v15 = vrev64q_s8(vmulq_s8(v14, v12));
  *(int8x16_t *)(a5 - 15 + v11) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + v13 - 15), *(int8x16_t *)(a5 - 15 + v11)), veorq_s8(*(int8x16_t *)(v13 + v7 - 13), *(int8x16_t *)(v13 + v6 - 11))), vextq_s8(v15, v15, 8uLL));
  return (*(uint64_t (**)(void))(v10 + 8 * ((1822 * ((v8 & 0xFFFFFFF0) == 16)) ^ a4)))();
}

uint64_t sub_1BCAD2C98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 11016))(0);
}

uint64_t sub_1BCAD2CF0@<X0>(uint64_t a1@<X2>, unsigned int a2@<W4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  *(unsigned char *)(a3 + (((5 * (v6 ^ a2)) ^ (unint64_t)(v9 + 590)) & (a6 + a1))) = *(unsigned char *)(v7 + a4 + a5);
  return (*(uint64_t (**)(void))(v10 + 8 * ((((a1 + a6 + 1) > 0x3F) * v8) ^ v6)))();
}

uint64_t sub_1BCAD2D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((14
                                              * (((a17 - 1854503558) ^ 0x6FEFF73FF9F977F6)
                                               - 0x6FEFF73FF270E236
                                               + ((2 * (a17 - 1854503558)) & 0x1F3F2EFECLL) != v18)) | v17)))(0x5B695B74611722D2);
}

uint64_t sub_1BCAD2DEC()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((v2 + v1 + ((v0 - 370) | 0x24u) + 1619010527 < 8)
                                              * (((v0 - 1871388793) & 0x6F8B1FFF) - 828)) ^ (v0 - 1460))))(v3);
}

uint64_t sub_1BCAD2E68@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6, int a7)
{
  unsigned int v13 = ((&a3 & 0xC14D88F | ~(&a3 | 0xC14D88F)) ^ 0x1377455B) * v7;
  a3 = v8;
  a4 = v13 ^ a1;
  a6 = ((v12 - 1430518602 + v11 + 59) ^ 0x57E3FF5E)
     - v13
     + ((2 * (v12 - 1430518602 + v11 + 59)) & 0xAFC7FEBC)
     - 21041158;
  a7 = v11 - v13 - 182;
  a5 = v9;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v10 + 8 * (v11 ^ 0xA3A)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((1857 * (*(_DWORD *)(v9 - 0x5B51E979A7EFF0B5) == 984896845)) ^ v11)))(v14);
}

uint64_t sub_1BCAD2F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v24 - 104) = v19
                         + 1759421093 * ((~((v24 - 120) | 0x7D6057C6) + ((v24 - 120) & 0x7D6057C6)) ^ 0x31E2186D)
                         + 1544;
  *(void *)(v24 - 120) = v23;
  *(void *)(v24 - 112) = a19;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v19 + 1765)))(v24 - 120);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((215 * (v20 == v22 + ((v19 + 1344621124) & 0xAFDAB7E2) - 896)) ^ v19)))(v25);
}

void sub_1BCAD304C()
{
}

uint64_t sub_1BCAD305C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((a2 + 152) | 0x220) - 488) ^ 0x1D8) * (v2 < 0x20)) ^ a2)))();
}

uint64_t sub_1BCAD3094()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v2 + 2033988506) ^ 0x68F) * (v3 > v0 + 623)) ^ (v2 + 2033988506))))();
}

uint64_t sub_1BCAD30DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23)
{
  signed int v25 = a7 + 658459479;
  int v26 = a7 > 0x58C0B4A8;
  *a23 = 1840987181;
  signed int v27 = ((v23 + 2027898483) & 0x8720B7F4) + 658458996;
  int v28 = v27 < -1489024169;
  BOOL v29 = v27 > v25;
  if (v26 != v28) {
    BOOL v30 = v28;
  }
  else {
    BOOL v30 = v29;
  }
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1361 * v30) ^ v23)))(a1);
}

uint64_t sub_1BCAD31C4@<X0>(int a1@<W3>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21,uint64_t (*a22)(uint64_t))
{
  *(unsigned char *)(a2 + (a3 + 2)) = *(unsigned char *)(v26 + (v22 ^ (a1 + 54)) + v23);
  int v27 = 3804331 * ((2 * ((v25 - 168) & 0x80D3920) - (v25 - 168) + 2012399321) ^ 0x8D6C358F);
  *(_DWORD *)(v25 - 168) = v27 + v22 + 1001;
  *(_DWORD *)(v25 - 164) = v27 ^ 0x6BC5EFCF;
  STACK[0x310] = a21;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v22 ^ 0x85E)))(v25 - 168);
  return a22(v28);
}

uint64_t sub_1BCAD3260@<X0>(int a1@<W8>)
{
  unint64_t v4 = v2 + v1 + (a1 ^ 0x7CBu) + 594 - 1791;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((228 * (v4 - v1 + 2086557330 < 8)) ^ a1)))();
}

uint64_t sub_1BCAD32BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v5 + 84) ^ 0x5B7) - 469) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1BCAD32E8(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 + 365) | 0x160) ^ (a1 + 698)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1BCAD3318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3 - (**(unsigned char **)(a2 + 8) == 0);
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 75341232;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 874675926;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v5 = *(void *)(a1 + 96) + 0x7EC954F575262AC1;
  uint64_t v6 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  unsigned int v7 = 108757529 * (((&v9 | 0x23923E10) - (&v9 & 0x23923E10)) ^ 0xC30E5C3B);
  int v13 = v4 - v7 - 1152520206;
  uint64_t v9 = v5;
  uint64_t v11 = v6;
  unsigned int v10 = 540 - v7;
  (*(void (**)(uint64_t *))(a3 + 17016))(&v9);
  return (v12 - 1985649921);
}

uint64_t sub_1BCAD3334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8 + 8 * (((((v7 - 59) | 0x2C0) ^ 0x80) * (*(_DWORD *)(v9 - 124) == *(_DWORD *)(v9 - 128))) ^ v7)))(a1, a2, a3, a4, a5, a6, a7, (v7 + 645));
}

uint64_t sub_1BCAD3370@<X0>(int a1@<W8>)
{
  BOOL v4 = v2 - 462757525 < (int)(v1 + 1231714997);
  if (v1 > 0x3695854A != v2 - 462757525 < (int)((8 * a1) ^ 0xC96A73CD)) {
    BOOL v4 = v1 > 0x3695854A;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * !v4) | (16 * !v4)) ^ a1)))();
}

uint64_t sub_1BCAD33F4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7)
{
  int v9 = (v8 - 1345328686) & 0x50301799;
  a4 = (v9 + 27) ^ (1374699841 * (((&a4 | 0x31DA41DC) - (&a4 & 0x31DA41DC)) ^ 0x5C2E59D5));
  a6 = a1;
  a7 = a3;
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(v7 + 8 * (v9 + 175)))(&a4);
  BOOL v11 = a5 == ((v9 - 1428) ^ 0x3AB4554D ^ (v9 + 1122684014) & 0xBD152DFD);
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((4 * v11) | (16 * v11) | v9)))(v10);
}

uint64_t sub_1BCAD34C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,unint64_t a28,int a29,int a30)
{
  int v34 = a3 + v31 - 387;
  LODWORD(STACK[0x2E8]) = a4;
  LODWORD(STACK[0x2EC]) = a29;
  STACK[0x2F0] = a28;
  LODWORD(STACK[0x2F8]) = a30 - a25 + 1893250515;
  STACK[0x300] = a1 + (a25 + v31 + 1880706430);
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48 * v33 + 8))(a12, a23);
  return (*(uint64_t (**)(void))(v32 + 8
                                    * ((2040 * (v35 + (v34 ^ 0x33CA1B83) - ((2 * v35) & 0x7568AA9A) == v30)) ^ v31)))();
}

uint64_t sub_1BCAD3598@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1626));
  return v3(v1);
}

uint64_t sub_1BCAD35C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, unsigned int a11, uint64_t a12, unsigned int a13, int a14)
{
  unsigned int v17 = 108757529
      * (((&a10 | 0x5B589B14) - &a10 + (&a10 & 0xA4A764E8)) ^ 0xBBC4F93F);
  a12 = v15;
  a10 = &STACK[0x3F8123127DDA1A64];
  a13 = 1453518684 - v17;
  a14 = v14 - v17 - 886;
  a11 = v17 ^ 0xD7C615A8;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v14 + 886)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v15 - 0x5B51E979A7EFF0B5) == (v14 ^ 0x6BA) + 984896213)
                                              * (303 * (v14 ^ 0x4C6) - 190)) ^ v14)))(v18);
}

void sub_1BCAD36BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  if (v12 < v11 != v10 + 360764444 < 34 * (v7 ^ (v7 + 521) ^ 0x23Au) + 728809131) {
    BOOL v9 = v10 + 360764444 < 34 * (v7 ^ (v7 + 521) ^ 0x23Au) + 728809131;
  }
  else {
    BOOL v9 = v10 + 360764444 > v12;
  }
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCAD3D08@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(_DWORD *)(*(void *)(v4 - 0x7EC954F575262799) + 4 * (v3 + a2)) = a1;
  int v6 = v3 + (v5 ^ 0x6BC) - 254;
  *(_DWORD *)(v4 - 0x7EC954F57526279DLL) = v6;
  int v8 = v6 + a2;
  if (v6 + a2 < 0) {
    int v8 = -v8;
  }
  int v7 = (v5 ^ 0x6BC) + 94;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((47
                                * ((((v7 + 21) ^ ((int)(a2
                                                      + (v7 ^ 0xA2)
                                                      + v7
                                                      + (v8 ^ 0x7D23FEF6)
                                                      + ((2 * v8) & 0xFA47FDEC)
                                                      - 1224835453
                                                      - 512) >= 0)) & 1) == 0)) ^ v7)))();
}

uint64_t sub_1BCAD3DE0@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((458 * (v1 + 1 == v2 + 44)) ^ a1)))();
}

uint64_t sub_1BCAD3EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, unsigned int a17, uint64_t a18)
{
  unsigned int v24 = 628203409
      * (((&a14 ^ 0x8A2ABAE8) & 0xC01153FA | ~(&a14 ^ 0x8A2ABAE8 | 0xC01153FA)) ^ 0x374C1ADE);
  a14 = v23 - v24 + 238;
  a16 = v19;
  a18 = a10;
  a17 = (v20 ^ 0x7BEF5E2D) + ((2 * v20) & 0xF7DEBC5A) - 1646463020 + v24;
  (*(void (**)(int *))(v22 + 8 * (v23 ^ 0xD9D)))(&a14);
  unsigned int v25 = 1225351577 * ((&a14 - 1814971634 - 2 * (&a14 & 0x93D1BB0E)) ^ 0xED2E213C);
  a16 = a10;
  a14 = ((((v23 - 281) | 0x104) ^ 0x3EE9BEB5) + v23 + 1004549045) * v18 - v25 + 151888883;
  a15 = (v23 - 93) ^ v25;
  uint64_t v26 = (*(uint64_t (**)(int *))(v22 + 8 * (v23 ^ 0xD62)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((171 * (a17 == v21)) ^ v23)))(v26);
}

uint64_t sub_1BCAD4020@<X0>(int a1@<W0>, int a2@<W8>)
{
  BOOL v9 = *(uint64_t (**)(void))(v4 + 8 * (v6 - 1472));
  unsigned int v10 = a2 + 4 + a1;
  uint64_t v11 = *v8;
  *(unsigned char *)(*v8 + v10) = v2 ^ 0xDB;
  *(unsigned char *)(v11 + v10 + 1) = v3 ^ 0xBA;
  *(unsigned char *)(v11 + v10 + 2) = v7 ^ 0xD1;
  *(unsigned char *)(v11 + v10 + 3) = v5 ^ 0xDA;
  return v9();
}

uint64_t sub_1BCAD407C@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v4 = a1 + a2 + 63 < (((v2 - 350) | 4) ^ (a1 - 573)) + a2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((16 * v4) | (v4 << 6)) ^ v2)))();
}

uint64_t sub_1BCAD40C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, int a13, uint64_t a14, uint64_t a15)
{
  int v21 = (v15 - 1564) | 0x306;
  *(_DWORD *)(a15 + 4 * v19) = (v20 ^ 0x807CFA78) + v16 - (((v20 ^ 0x807CFA78) << (v21 - 69)) & 0xDB76785A);
  BOOL v22 = v18 > a12;
  if (v22 == a8 - 745402734 < -1597656820) {
    BOOL v22 = a8 - 745402734 < a13;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * (((v21 ^ 0x416) * v22) ^ v21)))();
}

uint64_t sub_1BCAD40E0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v11 = v8 + v7;
  int v12 = v11 + v9;
  if ((v11 + v9) <= 0x40) {
    int v12 = a1;
  }
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (v6 | (8
                                     * ((v6 ^ 0x767 ^ (a6 + 50)) - v11 < a2
                                                                                     + ((29 * (v6 ^ 0x6E9)) ^ a6)
                                                                                     + v12)))))();
}

uint64_t sub_1BCAD4138()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xE25)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v0
                              + 8 * ((v2 * (((v1 - 237752101) ^ 0xE2BCFA2) + ((v1 - 237752101) & 0xE2BCFB4))) ^ v1)))();
}

uint64_t sub_1BCAD41B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((a5 - 2115921347) & 0x7E1E630E) + 577) ^ 0x542) * (v5 != a1)) ^ a5)))();
}

void sub_1BCAD420C()
{
}

uint64_t sub_1BCAD4224@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v5 + (v4 ^ 0x1E6 ^ (a1 - 1083)) + 532) * ((a2 ^ 0x22A01D0) == v2 - 1626428566)) ^ v4 ^ 0x1E6)))();
}

uint64_t sub_1BCAD4278@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  int v36 = *(_DWORD *)(&a19 + ((v33 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(v34 + (v33 + a2)) = HIBYTE(v36) ^ 0xB5;
  *(unsigned char *)(v34 + (v32 - a1 - 1053 + v33 + 935968773)) = BYTE2(v36) ^ 0xDA;
  *(unsigned char *)(v34 + (v33 + a2 + 2)) = BYTE1(v36) ^ 0x8A;
  *(unsigned char *)(v34 + (v33 + a2 + 3)) = v36 ^ 0x46;
  BOOL v37 = v33 - 756871010 < (a31 - 620313154);
  if (v33 - 756871010 < v31 != a31 - 620313154 < v31) {
    BOOL v37 = a31 - 620313154 < v31;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((665 * v37) ^ v32)))();
}

uint64_t sub_1BCAD4338(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((578
                                * (((v2 - 1023) ^ 0xBFDD2C42)
                                 + (v3 & 0xF84DA71C)
                                 + (v5 ^ 0x7C26D38E)
                                 + ((v2 - 28) ^ 0xC3FBFA88 ^ a2) < ((v2 - 28) ^ 0x19Cu) + 2147482485)) ^ (v2 - 28))))();
}

uint64_t sub_1BCAD43C0@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  int v5 = v3 + 233;
  BOOL v6 = (*(uint64_t (**)(void, char *, void, uint64_t))(v4 + 8 * (v3 + 1362)))(**(unsigned int **)(v2 + 8 * ((v3 + 233) ^ 0x348)), va, ((v3 - 494) | 0x28A)- 2092688273+ ((((v3 - 694) | 0x280) - 4808) & (a1 - 1966645479) ^ 0x7CBBDFF7)+ ((2 * (a1 - 1966645479)) & 0xF977A000), 1) == 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((21 * v6) ^ v5)))();
}

uint64_t sub_1BCAD4468(int a1)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((50 * ((v1 & 0x18) == ((a1 - 218) ^ 0x4B7) + ((a1 - 644) | 0x218) - 2485)) ^ (a1 - 218))))((v2 - v3));
}

uint64_t sub_1BCAD44B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * (((a14 + v16 - v15 >= (v14 ^ (v17 - 749) ^ 0x7DF24D8BuLL))
                                * (a7 + (v14 ^ (v17 - 749)) - 137)) ^ v14)))();
}

uint64_t sub_1BCAD44F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (a8 ^ (7 * ((unint64_t)(v9 - a1 - 4) < 0x20)))))();
}

uint64_t sub_1BCAD4530()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((89 * (v0 > 0xF2629169)) ^ (v2 - 2033988086))))();
}

uint64_t sub_1BCAD4590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  int v43 = *(_DWORD *)(&a25 + ((v41 + v37) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v41 + v37)) = (a6 + v39 + 72) ^ 0x59 ^ v43;
  *(unsigned char *)(a1 + (v41 + v37 + 1)) = BYTE1(v43) ^ 0x8A;
  *(unsigned char *)(a1 + (v41 + v37 + 2)) = BYTE2(v43) ^ 0xDA;
  *(unsigned char *)(a1 + (v41 + v37 + 3)) = HIBYTE(v43) ^ 0xB5;
  BOOL v44 = v41 + 124762538 < (a37 + 125967003);
  if (v41 + 124762538 < v38 != a37 + 125967003 < v38) {
    BOOL v44 = a37 + 125967003 < v38;
  }
  return (*(uint64_t (**)(void))(v42 + 8 * ((!v44 * v40) ^ v39)))();
}

uint64_t sub_1BCAD4648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  *(_DWORD *)(a39 + 4 * v39) ^= a32;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v40
                                                     + 8
                                                     * ((50
                                                       * ((a30 & 0x58EE7CDF)
                                                        - 2033987387
                                                        + v41
                                                        + ~(((a30 & 0x58EE7CDF) + 100847803) | 0x80C1000A) == 1902929356)) ^ a30 & 0x58EE7CDF)))(a1, 1135927250);
}

uint64_t sub_1BCAD46E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * (((*(_DWORD *)(a14 + 4 * (v17 + v16 + 1)) != ((v14 - 83) ^ (v15 - 803)))
                                * (((v14 - 857) | 0x108) ^ 0x305)) ^ (v14 - 629))))();
}

uint64_t sub_1BCAD473C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  BOOL v38 = ((BYTE4(a10) + 11) & 0xF) != 0 || HIDWORD(a10) == 1919853877;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((((v35 ^ 0x5F9) - 872) * v38) ^ v35)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1BCAD4788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v42 = v36 - v39;
  *uint64_t v40 = v40[623];
  int v43 = v36 - v39 - 1251777233;
  unint64_t v44 = 1224239923 * ((0x9FD103D0BD7B41ADLL - ((v41 - 144) | 0x9FD103D0BD7B41ADLL) + a36) ^ 0x48744946B0374385);
  *(_DWORD *)(v41 - 140) = (v43 ^ 0x76) + v44;
  *(_DWORD *)(v41 - 120) = v44 + v42 - 156347733;
  *(_DWORD *)(v41 - 116) = 1 - v44;
  *(_DWORD *)(v41 - 112) = (v43 ^ 0x1F) + v44;
  *(_DWORD *)(v41 - 108) = v43 + v44;
  *(void *)(v41 - 136) = v44 ^ 3;
  *(void *)(v41 - 128) = (v37 + 1) ^ v44;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v39 + v42 + 737)))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v38 + 8 * *(int *)(v41 - 144)))(v45);
}

uint64_t sub_1BCAD4868(uint64_t a1, int a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 - 1040 + a2 - 711 - 675) * (v5 < a4)) ^ a2)))();
}

uint64_t sub_1BCAD4894(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a4 + (v8 - v9)) = *(void *)(a8 + (v8 - v9));
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * (a5 + v9 != a1)) | (16 * (a5 + v9 != a1))) ^ v10)))();
}

void sub_1BCAD48C4()
{
}

void sub_1BCAD4D1C()
{
}

uint64_t sub_1BCAD4DE4(uint64_t a1, int a2, int a3, int a4, int a5, int a6)
{
  int v13 = (unsigned int *)(v11 + 4 * v8);
  uint64_t v14 = v8 + 1;
  int v15 = *(_DWORD *)(v11 + 4 * v14);
  unsigned int v16 = a3 ^ ((v15 & 0x7FFFFFFE | (a4 + v6 + 327 - 1328) & v7) >> 1);
  *int v13 = v13[397] ^ a6 ^ *(_DWORD *)(v12 + 4 * (v15 & 1)) ^ (v16 + a5 - (a2 & (2 * v16)));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v14 == 227) * v9) ^ v6)))();
}

uint64_t sub_1BCAD4E54@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W6>, int a5@<W8>)
{
  *(unsigned char *)(v6 + v5) = *(unsigned char *)(v7 + (a5 + a2)) ^ 0x80;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 == 63) * a3) ^ (a4 + a1 + 305))))();
}

uint64_t sub_1BCAD4E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v9 + 176) ^ v9 ^ 0x653) * (a9 > 0)) ^ v9)))();
}

uint64_t sub_1BCAD4EEC(__n128 a1)
{
  a1.n128_u16[0] = -26986;
  a1.n128_u8[2] = -106;
  a1.n128_u8[3] = -106;
  a1.n128_u8[4] = -106;
  a1.n128_u8[5] = -106;
  a1.n128_u8[6] = -106;
  a1.n128_u8[7] = -106;
  return sub_1BCAD4F14(a1);
}

uint64_t sub_1BCAD4F14(int8x8_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(int8x8_t *)(a5 + (v8 + v7 - v9)) = vadd_s8(*(int8x8_t *)(v11 + (v8 + v7 - v9)), a1);
  return (*(uint64_t (**)(void))(v12 + 8 * (((a6 + v9 == a3) * a7) ^ v10)))();
}

uint64_t sub_1BCAD4F48(uint64_t a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  v69.val[1].i64[0] = ((_BYTE)v62 - 1) & 0xF;
  v69.val[1].i64[1] = ((_BYTE)v62 + 14) & 0xF;
  v69.val[2].i64[0] = ((_BYTE)v62 + 13) & 0xF;
  v69.val[2].i64[1] = ((_BYTE)v62 + 12) & 0xF;
  v69.val[3].i64[0] = ((_BYTE)v62 + 11) & 0xF;
  v69.val[3].i64[1] = ((_BYTE)v62 + 10) & 0xF;
  unsigned int v64 = a3 + a2 + a5;
  v65.i64[0] = 0xF1F1F1F1F1F1F1F1;
  v65.i64[1] = 0xF1F1F1F1F1F1F1F1;
  v69.val[0].i64[0] = v64 & 0xF;
  v69.val[0].i64[1] = v62 & 0xF;
  v66.i64[0] = vqtbl4q_s8(v69, (int8x16_t)xmmword_1BCB19A20).u64[0];
  v70.val[0].i64[1] = ((_BYTE)v62 + 8) & 0xF;
  v70.val[1].i64[1] = ((_BYTE)v62 + 6) & 0xF;
  v70.val[2].i64[1] = (v62 + 4) & 0xF;
  v70.val[3].i64[1] = ((_BYTE)v62 + 2) & 0xF;
  v70.val[0].i64[0] = ((_BYTE)v62 + 9) & 0xF;
  v70.val[1].i64[0] = ((_BYTE)v62 + 7) & 0xF;
  v70.val[2].i64[0] = ((_BYTE)v62 + 5) & 0xF;
  v70.val[3].i64[0] = (v62 + 3) & 0xF;
  v66.i64[1] = vqtbl4q_s8(v70, (int8x16_t)xmmword_1BCB19A20).u64[0];
  int8x16_t v67 = vrev64q_s8(vmulq_s8(v66, v65));
  *(int8x16_t *)(a55 - 15 + v64) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v61 + v69.val[0].i64[0] - 15), *(int8x16_t *)(v58 - 15 + v64)), veorq_s8(*(int8x16_t *)(v69.val[0].i64[0] + v59 - 13), *(int8x16_t *)(v60 + v69.val[0].i64[0] - 15))), vextq_s8(v67, v67, 8uLL));
  return (*(uint64_t (**)(void))(a58 + 8 * ((((v63 & 0xFFFFFFF0) == 16) * (((a8 - 293) | 0x122) - 278)) ^ (a8 + 438))))();
}

uint64_t sub_1BCAD50A8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((109
                                * ((((*(unsigned __int8 *)(v3 + 3) - 134) << (v2 + 83)) & v0)
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v1) == ((2 * v2) ^ 0xA6C ^ (v1 + 208)))) ^ v2)))();
}

uint64_t sub_1BCAD5140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  unsigned int v11 = a5 - 32;
  uint64_t v12 = v9 + v11;
  long long v13 = *(_OWORD *)(v12 - 31);
  uint64_t v14 = v10 + v11;
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(v12 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 == 32) * a8) ^ a7)))();
}

uint64_t sub_1BCAD514C()
{
  return 0;
}

uint64_t sub_1BCAD518C(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x6D40EE9100C99969) = v1;
  return result;
}

uint64_t sub_1BCAD51A8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  int v5 = a3 == ((3 * (a1 ^ (a1 - 305))) ^ (v4 + 873));
  return (*(uint64_t (**)(void))(v3 + 8 * (((32 * v5) | (v5 << 6)) ^ (a2 + a1 + 781))))();
}

uint64_t sub_1BCAD51E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(*(void *)(a7 + 96) + 1568) = 0;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((*(_DWORD *)(a7 + 72) == a5 + 7)
                                     * ((a3 + 307 * (v7 ^ 0x2ED) - 921) ^ (307 * (v7 ^ 0x2ED) - 598939) & 0xBFAFF13F ^ 0x646)) ^ (307 * (v7 ^ 0x2ED)))))();
}

uint64_t sub_1BCAD5248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  (*(void (**)(uint64_t, uint64_t))(v24 + 8 * (v25 + v26 + 748)))(a12, 2965982036);
  int v29 = (*(uint64_t (**)(void))(v24 + 8 * (v26 ^ (v26 + 2068))))();
  unsigned int v30 = v29 + (HIDWORD(a10) ^ 0x43B4DE90) - ((2 * v29) & 0x8769BFA4);
  *int v27 = v30;
  int v31 = ((((v30 >> 30) ^ 1) + 1135927250 + 2 * (((v30 >> 30) ^ 1 | 0x7FFFFFFA) ^ (v30 >> 30)) + 10) ^ v30)
      * ((HIDWORD(a10) - 108) ^ 0x6C0789B3);
  v27[1] = v28 + v31 - ((2 * (v31 + 1)) & 0x8769BFA4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * HIDWORD(a10)))(59, HIDWORD(a10), v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1BCAD5338(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned char *a18)
{
  int v21 = *(unsigned char **)(a7 + 96);
  v21[1167] = a18[19];
  v21[1166] = a18[18];
  v21[1165] = a18[17];
  v21[1164] = a18[16];
  v21[1163] = a18[15];
  v21[1162] = a18[14];
  v21[1161] = a18[13];
  v21[1160] = a18[12];
  v21[1159] = a18[11];
  v21[1158] = a18[10];
  v21[1157] = a18[9];
  v21[1156] = a18[8];
  v21[1155] = a18[7];
  v21[1154] = a18[6];
  v21[1153] = a18[5];
  v21[1152] = a18[4];
  v21[1151] = a18[3];
  v21[1150] = a18[2];
  v21[1149] = a18[1];
  v21[1148] = *a18;
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (int)(((*(_DWORD *)(a7 + 72) == a5 + 7)
                                                   * (a4
                                                    + ((((67 * (v18 ^ 0x1CF) + 574118309) & 0xDDC7A5BE) - 221) ^ (a3 + 1203))
                                                    + 751)) ^ (67 * (v18 ^ 0x1CF) + 574118309) & 0xDDC7A5BE)))(v20);
}

uint64_t sub_1BCAD5460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * (((((v5 - 785) ^ 0x65C) - 1016)
                                                                                 * (v4 < 0x10)) ^ v5)))(a1, a2, a3, a4, 0);
}

void sub_1BCAD5490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  char v30 = v27 ^ (v27 + 59);
  int v31 = v27 + 2033988506;
  (*(void (**)(uint64_t, uint64_t))(v28 + 8 * (v31 + 748)))(a27, 2965982036);
  int v32 = (*(uint64_t (**)(void))(v28 + 8 * (v31 + 767)))();
  *int v29 = v32 + 1135927250 - ((v32 << (v30 ^ 0x4C)) & 0x8769BFA4);
  JUMPOUT(0x1BCAD5538);
}

uint64_t sub_1BCAD5594()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ (1062 * ((v1 + v2) < 0x7FFFFFFF)))))();
}

uint64_t sub_1BCAD55D4(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  HIDWORD(v18) = v17 ^ v9;
  LODWORD(v18) = v17 ^ 0x30000000;
  int v19 = (v18 >> 27)
      + (a2 ^ v11)
      + ((v11 + v10 + 226 + (a8 ^ a1) - (v14 & (2 * (a8 ^ a1))) - 789) ^ a6)
      + (*(_DWORD *)(v8 + 4 * (a4 + v15)) ^ v13);
  return (*(uint64_t (**)(void, uint64_t))(v12 + 8 * ((1185 * (a4 + 1 == v16 + 64)) ^ v10)))(v19 - ((2 * v19 + 348488620) & v14) - 4404068, a6);
}

uint64_t sub_1BCAD5694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unint64_t v29 = ((a8 >> (a5 + 46)) ^ a3) + HIDWORD(v25) + (*(_DWORD *)(a25 + a12) ^ v26);
  *(_DWORD *)(a25 + 4 * a13) = v26 + a5 + 574 + v29 - (v27 & (2 * v29)) - 1072;
  *(_DWORD *)(a25 + a12) = HIDWORD(v29) + v26 - ((2 * HIDWORD(v29)) & 0x5B76785A);
  BOOL v31 = a22 + 1855015008 > 1048038984 || a22 + 1855015008 < a18;
  return (*(uint64_t (**)(void))(v28 + 8 * (a5 ^ (1563 * v31))))();
}

void sub_1BCAD5748()
{
}

uint64_t sub_1BCAD5754(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8 * ((994 * (v4 + 1 == v6 + 32)) ^ a4)))(a1, a2, v5);
}

uint64_t sub_1BCAD5824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(*(void *)(a7 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(a7 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return a8 ^ v8;
}

uint64_t sub_1BCAD587C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(void *)(v33 - 128) = v32;
  *(void *)(v33 - 144) = v31;
  *(_DWORD *)(v33 - 136) = v30
                         - 3804331 * ((((v33 - 144) | 0x544C886D) + (~(v33 - 144) | 0xABB37792)) ^ 0xAED27B3A)
                         - 578;
  (*(void (**)(uint64_t))(v29 + 8 * (v30 ^ 0xBD9u)))(v33 - 144);
  *(_DWORD *)(v33 - 104) = (v30 + 1095) ^ (1759421093
                                         * ((((v33 - 144) | 0x21EF9EB5) - (v33 - 144) + ((v33 - 144) & 0xDE106148)) ^ 0x92922EE1));
  *(void *)(v33 - 128) = v32;
  *(void *)(v33 - 120) = a29;
  *(void *)(v33 - 112) = v31;
  *(void *)(v33 - 144) = a22;
  *(void *)(v33 - 136) = v31;
  (*(void (**)(uint64_t))(v29 + 8 * (v30 + 1179)))(v33 - 144);
  *(_DWORD *)(v33 - 104) = (v30 + 1095) ^ (1759421093 * ((v33 - 144) ^ 0xB37DB054));
  *(void *)(v33 - 120) = v31;
  *(void *)(v33 - 112) = v31;
  *(void *)(v33 - 144) = a22;
  *(void *)(v33 - 136) = a16;
  *(void *)(v33 - 128) = v32;
  (*(void (**)(uint64_t))(v29 + 8 * (v30 + 1179)))(v33 - 144);
  *(void *)(v33 - 144) = a21;
  *(_DWORD *)(v33 - 136) = v30
                         + 1755732067 * (((~(v33 - 144) & 0xFCEE7674) - (~(v33 - 144) | 0xFCEE7675)) ^ 0x2228CBAE)
                         + 426522081;
  *(void *)(v33 - 128) = v31;
  (*(void (**)(uint64_t))(v29 + 8 * (v30 + 1218)))(v33 - 144);
  *(_DWORD *)(v33 - 136) = v30
                         - 3804331
                         * ((((v33 - 144) ^ 0x51617891) - 134039118 - 2 * (((v33 - 144) ^ 0x51617891) & 0xF802B9B2)) ^ 0x53FD3275)
                         - 578;
  *(void *)(v33 - 144) = v31;
  *(void *)(v33 - 128) = a23;
  (*(void (**)(uint64_t))(v29 + 8 * (v30 ^ 0xBD9)))(v33 - 144);
  *(_DWORD *)(v33 - 128) = (v30 - 283) ^ (108757529
                                        * ((((v33 - 144) | 0x9729A46D) + (~(v33 - 144) | 0x68D65B92)) ^ 0x77B5C647));
  *(void *)(v33 - 144) = v31;
  *(void *)(v33 - 136) = a23;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v30 + 1152)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (int)((((v30 + 1734786647) & 0x98993FF3 ^ 0x1FB) * (a20 == 0)) | (v30 + 761))))(v34);
}

uint64_t sub_1BCAD58E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  BOOL v16 = a13 < 0xB340A3B5;
  unsigned int v17 = v13 + (v14 ^ 0x54CF2669);
  int v18 = v16 ^ (v17 < 0xB340A3B5);
  BOOL v19 = v17 < a13;
  if (!v18) {
    BOOL v16 = v19;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8 * ((52 * v16) ^ v14)))(a1, 2710471100);
}

uint64_t sub_1BCAD5950()
{
  int v3 = v0 | 0x612;
  BOOL v4 = ((2 * v1) & 0xFAFFFDFC ^ 0x602D8484) + (v1 ^ 0x4F693DBD) + 1055703008 != (v3 ^ 0x3C6CBC5F ^ ((v3 - 1535) | 0x480));
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (32 * v4)) ^ v3)))();
}

uint64_t sub_1BCAD59D0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v8 = a2 + 1;
  *(unsigned char *)(v3 + v8 + a1) = v4;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v5 + v8) < 0x38) * v6) ^ v2)))();
}

uint64_t sub_1BCAD59D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v8 + (v6 ^ v9) + v10) = v12;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v7 != v10) * a5) ^ v5)))();
}

uint64_t sub_1BCAD5A04@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  unsigned int v17 = (v9 ^ v14)
      + v6
      + *(_DWORD *)(a3 + 4 * (a6 + v12))
      + (((v7 ^ 0xCAA5F539 | a1 ^ v14) + ((a5 - 714) ^ (v14 + 16)) - (v11 & (2 * (v7 ^ 0xCAA5F539 | a1 ^ v14)))) ^ v8)
      + (*(_DWORD *)(v15 + 4 * (*(unsigned char *)(a2 + a6 + v12) - 3)) ^ v16);
  unsigned int v18 = (v17 + v14 - (v11 & (2 * v17))) ^ v14;
  int v19 = ((v18 << (*(unsigned char *)(a4 + a6 + v12) - 36)) | (v18 >> (36 - *(unsigned char *)(a4 + a6 + v12)))) + (a1 ^ v14);
  return (*(uint64_t (**)(void))(v10 + 8 * ((1991 * (a6 + 1 == v13 + 64)) ^ a5)))(v19 + v14 - (v11 & (2 * v19)));
}

uint64_t sub_1BCAD5AD4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23)
{
  int v30 = (7 * (a2 ^ 0x13F) - 1404) | 0x30C;
  uint64_t v31 = *(_DWORD *)(*(void *)(v26 - 0x7EC954F575262799) + 4 * (int)(((v30 + 204) ^ 0xB0197E4F) + v27)) ^ v23;
  unint64_t v32 = (*a23 ^ v23) + (**(_DWORD **)(v24 - 0x7EC954F575262799) ^ v23) * (unint64_t)v31;
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (v30 ^ ((8 * (v25 > 1)) | (16 * (v25 > 1)))));
  return v33(0x7CDEC3CFDDB39D1BLL, 3719535899, 2094973903, 3348048580, v31, v33, v24 - 0x7EC954F575262799, v32 + 0x7CDEC3CFDDB39D1BLL - ((2 * v32) & 0xF9BD879FBB673A36), a9, a10, a11, 4 * v28);
}

uint64_t sub_1BCAD5C90@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  unsigned int v7 = (v6 ^ v3) + v4 + ((a2 + 389382970) & 0xE8CA7E3D ^ (a1 + 577));
  unsigned int v8 = ((2 * v7) & 0x446C2D9C) + (v7 ^ 0x223616CE) - 1662553715;
  unsigned int v9 = v5 + 1450506249;
  int v10 = (v9 < 0xBF1D885B) ^ (v8 < 0xBF1D885B);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0xBF1D885B;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((45 * v11) ^ a2)))();
}

uint64_t sub_1BCAD5D34(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a4 ^ 0x357) + ((a4 - 1355) | 0x82) - 1929) * (v5 != a3)) ^ a4)))();
}

uint64_t sub_1BCAD5D6C(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(int8x16_t *)(v7 + v5) = veorq_s8(*(int8x16_t *)(a4 + (v6 + v8 + v5)), a1);
  return (*(uint64_t (**)(void))(v9 + 8 * (((32 * (v5 == 48)) | ((v5 == 48) << 6)) ^ v4)))();
}

uint64_t sub_1BCAD5DA4@<X0>(int a1@<W3>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v22 = a3 + 1;
  *(unsigned char *)(v20 + (v22 + v16)) = v19 ^ *(unsigned char *)(a2 + a16 + v18);
  return (*(uint64_t (**)(void))(v21 + 8 * ((127 * ((a1 + v22 + 1) < 0x40)) ^ v17)))();
}

void sub_1BCAD5DAC()
{
}

void sub_1BCAD5DC4()
{
}

uint64_t sub_1BCAD5DE0@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v6 + v5) = *(unsigned char *)(v8 + (v4 + a1)) ^ 0x80;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 63) * a3) ^ (a2 + a4 + 1304))))();
}

uint64_t sub_1BCAD5E20(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((209 * (((a2 == a3) ^ (v4 - 17) ^ 0x47) & 1)) ^ (v4 - 1234))))();
}

uint64_t sub_1BCAD5E9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (((((v4 == a4) ^ v5 ^ 0x39) & 1) * ((v5 + 1207) ^ 0x64C)) ^ v5)))();
}

uint64_t sub_1BCAD5EDC(uint64_t a1)
{
  int v1 = 108757529 * ((((2 * a1) | 0xF677E1C4) - a1 - 2067525858) ^ 0x9BA792C9);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 4) + v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x7EC954F57526279DLL);
  unsigned int v6 = v4 - 874675926;
  BOOL v5 = v4 - 874675926 < 0;
  unsigned int v7 = 874675926 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  BOOL v8 = (v3 - 1474669043) < 4 * (unint64_t)v7;
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + (v2 ^ 0x67C))
                              + 8
                              * ((((v2 - 27) ^ v8) & 1 | (2 * (((v2 - 27) ^ v8) & 1))) ^ v2)
                              - 4))();
}

uint64_t sub_1BCAD5FA8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (a2 ^ (13
                                     * (((((a2 - 1112540946) & 0x42500595 ^ 0xFFBAD21A) + a2 - 120) & (2 * v2) ^ 0x8F1AD920)
                                      + (v2 ^ 0x3872124E)
                                      + 1864889324 != 1862623872)))))();
}

uint64_t sub_1BCAD6028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v7 + (v5 ^ a4)) = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((v6 == 0) * a5) ^ v5)))();
}

void sub_1BCAD6054(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAD60DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v14 = v11 < v7;
  int v15 = v8 + 1;
  *(unsigned char *)(*v13 + (v15 + a7)) = 0x80;
  if (v14 == v15 + v9 < (((v10 - 375) | 1) ^ (v7 - 25))) {
    BOOL v14 = v15 + v9 < v11;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((30 * !v14) ^ v10)))();
}

uint64_t sub_1BCAD6144(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 - 1867560240) & 0x6F50B7DA ^ 0x398) * (v3 == a1)) ^ a3)))();
}

uint64_t sub_1BCAD6184()
{
  int v5 = 535753261 * (((~(v4 - 120) & 0x71E37D66) - (~(v4 - 120) | 0x71E37D67)) ^ 0x7B177348);
  *(void *)(v4 - 120) = v3;
  *(_DWORD *)(v4 - 112) = v2 + ((v0 + 1020471600) & 0xC32CD6FF ^ 0x31F8F082) + v5;
  *(_DWORD *)(v4 - 108) = v5 + v0 + 944;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1944)))(v4 - 120);
  return sub_1BCAD6210(v6);
}

uint64_t sub_1BCAD6210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v25 - 112) = a19;
  *(void *)(v25 - 104) = a21;
  *(_DWORD *)(v25 - 120) = (v23 + 293) ^ (((((v25 - 120) | 0x33721CEE) - (v25 - 120) + ((v25 - 120) & 0xCC8DE310)) ^ 0x5E8604E7)
                                        * v24);
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v23 ^ 0x896)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((*(_DWORD *)(v25 - 116) <= v21) * (((v23 - 221) | 0x601) ^ 0x7F1)) ^ v23)))(v26);
}

uint64_t sub_1BCAD62B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (v3 ^ (2
                                     * (((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 1880706817))
                                        + ((v3 - 553) ^ 0x22A02AB)) & ((v3 - 324) ^ 0x47F)) == 15)))))();
}

uint64_t sub_1BCAD6308(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a8 + 1) = *(unsigned char *)(v12 + v9 + a4 + 7 * (v8 ^ 0x2E8u));
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v9 & 0xFFFFFFFC) == 532908892) * v11) ^ v8)))();
}

uint64_t sub_1BCAD6370@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 1755877459;
  int v11 = v2 - 1;
  if (*(unsigned __int8 *)(v6 + v10) == 128) {
    __asm { BRAA            X11, X17 }
  }
  if (*(unsigned char *)(v6 + v10))
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 + 1960)))();
    int v12 = -984936812;
  }
  else
  {
    int v12 = 984896845;
    uint64_t v13 = *(void *)(v4 + 8);
    int v14 = *(unsigned __int8 *)(v4 + 16) ^ v5;
    *(void *)uint64_t result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v11;
    if (v14 == 62) {
      int v15 = -141043981;
    }
    else {
      int v15 = -141043982;
    }
    *(_DWORD *)(result + 16) = 35001926;
    *(_DWORD *)(result + 20) = v15;
    *(_DWORD *)(result + 24) = 984896845;
    *(void *)(v13 - 0x74676349722739E8) = a2;
  }
  *(_DWORD *)uint64_t v4 = v12;
  return result;
}

uint64_t sub_1BCAD6450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((867 * (v9 + 1 == v10 + 4)) ^ a7)))(v7);
}

uint64_t sub_1BCAD6528@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  *(unsigned char *)(a5 + (v6 + v8)) = *(unsigned char *)(a4 + (a6 + a3)) ^ 0x80;
  unsigned int v11 = a1 + a6 + 1;
  int v12 = (a2 < v9) ^ (v11 < v9);
  BOOL v13 = v11 < a2;
  if (v12) {
    BOOL v13 = a2 < v9;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (v7 ^ (32 * v13))))();
}

uint64_t sub_1BCAD658C(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((108 * (*(_DWORD *)(a7 + 72) == ((a5 + 982) ^ 0x4CF))) ^ (a4 + a3 + 1312))))();
}

uint64_t sub_1BCAD65D0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((((v2 - 496) | 0x150) ^ 0xFFFFFB4B) + v2 - 1048) * (v0 != v1)) ^ v2)))();
}

void sub_1BCAD660C()
{
}

uint64_t sub_1BCAD667C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((771
                                * ((((*(unsigned __int8 *)(a2 + 3) - 137) << (a3 - 98)) & v4)
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v5) == v5)) ^ a3)))();
}

uint64_t sub_1BCAD66BC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v6 = *(unsigned __int8 *)(a2 + 5) + (a3 ^ 0xFFFFFF6D);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1543 * ((v4 & (2 * v6)) + (v6 ^ v5) == v5)) ^ a3)))();
}

uint64_t sub_1BCAD66FC@<X0>(int a1@<W8>)
{
  int v8 = STACK[0x578];
  unsigned int v9 = &v4[6 * v3];
  v9[2] = v6;
  v9[3] = v5;
  *((void *)v9 + 2) = STACK[0x3E0];
  v9[6] = v8;
  *int v4 = v1 + 1;
  BOOL v11 = v2 - 1274654075 > (((a1 - 711) | 0x91) ^ 0x71DB3F68) || v2 - 1274654075 < SLODWORD(STACK[0x3A8]);
  return (*(uint64_t (**)(void))(v7 + 8 * ((v11 * (((a1 - 619) | 0x204) + 1240)) ^ a1)))();
}

void sub_1BCAD6778()
{
}

uint64_t sub_1BCAD6784(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((LODWORD(STACK[0x3D4]) + (v3 ^ 0x620)) * (v2 > v4 + 3)) | (v3 + 515))))(a1, a2, 2271854500);
}

uint64_t sub_1BCAD67C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,unsigned int a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  *(_DWORD *)(v68 - 124) = a61 ^ 0x2B9E451A;
  *(_DWORD *)(v68 - 136) = a63 ^ 0x9D04B287;
  *(_DWORD *)(v68 - 128) = a64 ^ 0xCA8092CE;
  *(_DWORD *)(v68 - 132) = a62 ^ 0x670739AA;
  int v70 = *(_DWORD *)(v68 - 120);
  uint64_t v71 = ((377 * (v70 ^ 0x3E0)) ^ 0xFFFFFA16) & v64 ^ 0x92507E6F;
  *(void *)(v68 - 168) = v71;
  unsigned __int8 v72 = *(unsigned char *)(a47 + (*(unsigned __int8 *)(v69 + v71) ^ 0xF3)) + 117;
  uint64_t v73 = v64 & 0xFFFFFFFE ^ 0x92507E63;
  *(void *)(v68 - 144) = v73;
  uint64_t v74 = *(unsigned __int8 *)(v69 + v73) ^ 0x57;
  uint64_t v75 = v64 & 0xFFFFFFF5 ^ 0x92507E6B;
  *(void *)(v68 - 152) = v75;
  uint64_t v76 = *(unsigned __int8 *)(v69 + v75) ^ 0xB6;
  int v77 = ((*(unsigned char *)(a47 + v74) + 117) ^ 0xF6) << 16;
  uint64_t v78 = v64 & 0xFFFFFFFB ^ 0x92507E67;
  *(void *)(v68 - 184) = v78;
  LODWORD(v74) = *(unsigned __int8 *)(a48 + v76) ^ 0xA;
  uint64_t v79 = *(unsigned __int8 *)(v69 + v78);
  int v80 = *(unsigned __int8 *)(a49 + (v79 ^ 0x9A));
  int v81 = v74 << 8;
  uint64_t v82 = v64 & 0xFFFFFFF8 ^ 0x92507E67;
  *(void *)(v68 - 224) = v82;
  LODWORD(v74) = v80 ^ (v79 - ((2 * v79) & 0x8A) + 69) ^ 0xFFFFFFCF;
  uint64_t v83 = *(unsigned __int8 *)(v69 + v82) ^ 0xD6;
  uint64_t v84 = v64 & 0xFFFFFFFD ^ 0x92507E63;
  *(void *)(v68 - 208) = v84;
  LODWORD(v74) = *(unsigned __int8 *)(a46 + v83) ^ 0x1E | (v74 << 24);
  LODWORD(v83) = *(unsigned __int8 *)(a48 + *(unsigned __int8 *)(v69 + v84)) ^ 0x18;
  uint64_t v85 = v64 & 0xFFFFFFFC ^ 0x92507E63;
  *(void *)(v68 - 176) = v85;
  LODWORD(v83) = v77 | (v83 << 8);
  int v86 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v69 + v85) ^ 0x74));
  uint64_t v87 = v64 & 0xFFFFFFF3 ^ 0x92507E6F;
  *(void *)(v68 - 160) = v87;
  int v88 = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v69 + v87) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(v69 + v87)
                                                                                - ((2 * *(unsigned __int8 *)(v69 + v87)) & 0x8A)
                                                                                + 69) ^ 0x51;
  uint64_t v89 = v64 ^ 0x92507E63;
  *(void *)(v68 - 200) = v89;
  int v90 = ((v72 ^ 2) << 16) | (v88 << 24);
  uint64_t v91 = *(unsigned __int8 *)(v69 + v89);
  int v92 = *(unsigned __int8 *)(a49 + (v91 ^ 0x15));
  uint64_t v93 = v64 & 0xFFFFFFF7 ^ 0x92507E6B;
  *(void *)(v68 - 256) = v93;
  LODWORD(v91) = v92 ^ (v91 + (~(2 * v91) | 0x75) + 70) ^ 0xAE;
  uint64_t v94 = *(unsigned __int8 *)(v69 + v93);
  LODWORD(v93) = v83 | v86 ^ 0xDC | (v91 << 24);
  unsigned int v95 = v81 | ((*(unsigned __int8 *)(a49 + (v94 ^ 0x46)) ^ (v94 - ((2 * v94) & 0x8A) + 69) ^ 0xFFFFFFE7) << 24);
  uint64_t v96 = v64 & 0xFFFFFFF1 ^ 0x92507E6F;
  *(void *)(v68 - 192) = v96;
  LODWORD(v91) = *(unsigned __int8 *)(a48 + (*(unsigned __int8 *)(v69 + v96) ^ 0xD5)) ^ 0x90;
  uint64_t v97 = v64 & 0xFFFFFFFA ^ 0x92507E67;
  *(void *)(v68 - 232) = v97;
  LODWORD(v91) = v90 | (v91 << 8);
  uint64_t v98 = *(unsigned __int8 *)(v69 + v97);
  uint64_t v99 = v64 & 0xFFFFFFF4 ^ 0x92507E6B;
  LODWORD(v74) = v74 & 0xFF00FFFF | (((*(unsigned char *)(a47 + (v98 ^ 0x9D)) + 117) ^ 0xF7) << 16);
  int v100 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v69 + v99) ^ 0xC2)) ^ 0xF9 | v95;
  uint64_t v101 = v64 & 0xFFFFFFF6 ^ 0x92507E6B;
  *(void *)(v68 - 248) = v101;
  *(void *)(v68 - 240) = v99;
  uint64_t v234 = v64 & 0xFFFFFFF9 ^ 0x92507E67;
  uint64_t v102 = *(unsigned __int8 *)(v69 + v234) ^ 0xA4;
  unsigned int v103 = v100 & 0xFF00FFFF | (((*(unsigned char *)(a47 + (*(unsigned __int8 *)(v69 + v101) ^ 0x3ELL)) + 117) ^ 0xDF) << 16);
  uint64_t v104 = v64 & 0xFFFFFFF0 ^ 0x92507E6F;
  *(void *)(v68 - 216) = v104;
  int v233 = v74 | ((*(unsigned __int8 *)(a48 + v102) ^ 0xC0) << 8);
  uint64_t v105 = *(void *)(v65 + 8 * SHIDWORD(a28));
  unsigned int v106 = *(_DWORD *)(v105 + 4 * (((unsigned __int16)(v233 ^ a51) >> 8) ^ 0x21u)) ^ ((((unsigned __int16)(v233 ^ a51) >> 8) ^ 0x4C) + v67 - ((2 * (((v233 ^ a51) >> 8) ^ 0xB71C4C)) & 0x15E));
  uint64_t v107 = *(void *)(v65 + 8 * (v70 - 847)) - 8;
  LODWORD(v94) = v93 ^ HIDWORD(a51) ^ 0x730032AA;
  unsigned int v108 = (v106 - 129892452 - ((2 * v106) & 0xF083FF38)) ^ *(_DWORD *)(v107
                                                                    + 4
                                                                    * ((v93 ^ BYTE4(a51)) ^ 0xAAu));
  int v232 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v69 + v104) ^ 0x47)) ^ 0xDC | v91;
  unsigned int v109 = ((((unsigned __int16)(a50 ^ v232) >> 8) ^ 0x87)
        + v67
        - 2 * ((((a50 ^ v232) >> 8) ^ 0x270987) & 0xBF ^ ((a50 ^ v232) >> 8) & 0x10)) ^ *(_DWORD *)(v105 + 4 * (((unsigned __int16)(a50 ^ v232) >> 8) ^ 0xEAu));
  unsigned int v110 = v109 - 41052770 - ((2 * v109) & 0xFB1B2B3C);
  LODWORD(v91) = v108 - 41052770 - ((2 * v108) & 0xFB1B2B3C);
  int v111 = (char *)*(&off_1F16F9FD0 + SHIDWORD(a27)) - 4;
  int v112 = *(_DWORD *)&v111[4 * (((v103 ^ HIDWORD(a50)) >> 16) ^ 0x68)];
  HIDWORD(v114) = v112 ^ 0x42;
  LODWORD(v114) = v112 ^ v66;
  int v113 = v114 >> 12;
  int v115 = *(_DWORD *)&v111[4 * (BYTE2(v93) ^ BYTE6(a51))];
  HIDWORD(v114) = v115 ^ 0x42;
  LODWORD(v114) = v115 ^ v66;
  int v116 = (char *)*(&off_1F16F9FD0 + (int)a28) - 4;
  int v117 = *(_DWORD *)&v116[4 * (((v233 ^ a51) >> 24) ^ 0xB7)] ^ (v114 >> 12);
  int v118 = *(_DWORD *)&v111[4 * (((a50 ^ v232) >> 16) ^ 9)];
  HIDWORD(v114) = v118 ^ 0x42;
  LODWORD(v114) = v118 ^ v66;
  int v119 = v110 ^ v117;
  int v120 = *(_DWORD *)(v107 + 4 * ((v233 ^ a51) ^ 0xFBu)) ^ ((unsigned __int16)(v103 ^ WORD2(a50)) >> 8) ^ *(_DWORD *)(v105 + 4 * (((unsigned __int16)(v103 ^ WORD2(a50)) >> 8) ^ 0x23u)) ^ 0xEE2F337D ^ (v114 >> 12);
  LODWORD(v98) = *(_DWORD *)&v111[4 * (((v233 ^ a51) >> 16) ^ 0x1C)];
  HIDWORD(v114) = v98 ^ 0x42;
  LODWORD(v114) = v98 ^ v66;
  LODWORD(v98) = *(_DWORD *)&v116[4 * (((v103 ^ HIDWORD(a50)) >> 24) ^ 0xF6)] ^ (BYTE1(v94)
                                                                               + v67
                                                                               - ((v94 >> 7) & 0x15E)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v94) ^ 0x6Du)) ^ ((v114 >> 12) - 41052770 - ((2 * (v114 >> 12)) & 0xFB1B2B3C));
  LODWORD(v91) = HIDWORD(a45) ^ v113 ^ *(_DWORD *)&v116[4 * (((a50 ^ v232) >> 24) ^ 0x27)] ^ v91;
  LODWORD(v98) = a45 ^ *(_DWORD *)(v107 + 4 * ((a50 ^ v232) ^ 0x64u)) ^ (v98
                                                                                          - 129892452
                                                                                          - ((2 * v98) & 0xF083FF38));
  unsigned int v121 = HIDWORD(a44) ^ *(_DWORD *)(v107 + 4 * ((v103 ^ BYTE4(a50)) ^ 0x5Fu)) ^ (v119
                                                                                                  - 129892452
                                                                                                  - ((2 * v119) & 0xF083FF38));
  unsigned int v122 = a29 ^ *(_DWORD *)&v116[4 * BYTE3(v94)] ^ (v120 - 41052770 - ((2 * v120) & 0xFB1B2B3C));
  LODWORD(v94) = v91 ^ 0xF9388C2F;
  int v123 = *(_DWORD *)&v111[4 * ((v91 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v114) = v123 ^ 0x42;
  LODWORD(v114) = v123 ^ v66;
  int v124 = v114 >> 12;
  int v125 = *(_DWORD *)&v111[4 * (BYTE2(v98) ^ 0xDB)];
  HIDWORD(v114) = v125 ^ 0x42;
  LODWORD(v114) = v125 ^ v66;
  int v126 = v114 >> 12;
  int v127 = *(_DWORD *)&v111[4 * (BYTE2(v121) ^ 0x66)];
  HIDWORD(v114) = v127 ^ 0x42;
  LODWORD(v114) = v127 ^ v66;
  int v128 = (v114 >> 12) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v122) ^ 5u)) ^ ((BYTE1(v122) ^ 0x68)
                                                                      + v67
                                                                      - 2
                                                                      * (((v122 >> 8) ^ 0x42BD68) & 0xBF ^ (v122 >> 8) & 0x10));
  unsigned int v129 = (v124 - 129892452 - ((2 * v124) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4 * (v121 ^ 0xB6u));
  LODWORD(v91) = (v128 - 129892452 - ((2 * v128) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4
                                                                                   * (v91 ^ 0x61u));
  LODWORD(v99) = (BYTE1(v94) + v67 - ((v94 >> 7) & 0x15E)) ^ 0xD678EAEF ^ *(_DWORD *)(v105
                                                                                                  + 4 * (BYTE1(v94) ^ 0x6Du));
  int v130 = *(_DWORD *)&v116[4 * (HIBYTE(v121) ^ 0x43)] ^ 0x5F97CE20;
  LODWORD(v99) = v99 + v130 - 2 * (v99 & v130);
  int v131 = *(_DWORD *)&v111[4 * (BYTE2(v122) ^ 0xBD)];
  HIDWORD(v114) = v131 ^ 0x42;
  LODWORD(v114) = v131 ^ v66;
  LODWORD(v94) = *(_DWORD *)&v116[4 * BYTE3(v94)] ^ (v126 - 41052770 - ((2 * v126) & 0xFB1B2B3C));
  LODWORD(v94) = (v94 - 129892452 - ((2 * v94) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4 * (v122 ^ 0xABu));
  unsigned int v132 = *(_DWORD *)&v116[4 * (HIBYTE(v122) ^ 0x42)] ^ HIDWORD(a54) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v98) ^ 0xDFu)) ^ ((BYTE1(v98) ^ 0xB2) + v67 - ((2 * ((v98 >> 8) ^ 0x2BDBB2)) & 0x15E)) ^ (v129 - 41052770 - ((2 * v129) & 0xFB1B2B3C));
  unsigned int v133 = a44 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v121) ^ 0x39u)) ^ (v94 + v67 - ((2 * v94) & 0x2CDD995E));
  int v134 = *(_DWORD *)&v116[4 * (BYTE3(v98) ^ 0x2B)];
  LODWORD(v94) = a43 ^ *(_DWORD *)(v107 + 4 * (v98 ^ 0x42u)) ^ ((v99 ^ (v114 >> 12))
                                                                                 - 129892452
                                                                                 - ((2 * (v99 ^ (v114 >> 12))) & 0xF083FF38));
  LODWORD(v98) = *(_DWORD *)&v111[4 * (BYTE2(v94) ^ 0x79)];
  int v135 = HIDWORD(a43) ^ v134 ^ (v91 - 41052770 - ((2 * v91) & 0xFB1B2B3C));
  HIDWORD(v114) = v98 ^ 0x42;
  LODWORD(v114) = v98 ^ v66;
  BYTE1(v98) = BYTE1(v135) ^ 0x68;
  LODWORD(v91) = ((v114 >> 12) - 41052770 - ((2 * (v114 >> 12)) & 0xFB1B2B3C)) ^ *(_DWORD *)&v116[4
                                                                                                * ((v135 ^ 0x2261685Eu) >> 24)];
  LODWORD(v99) = ((BYTE1(v94) ^ 0xD0) + v67 - ((2 * ((v94 >> 8) ^ 0x679D0)) & 0x15E)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v94) ^ 0xBDu));
  LODWORD(v99) = (v99 - 129892452 - ((2 * v99) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4 * (v132 ^ 0x76u));
  int v136 = ((BYTE1(v133) ^ 0xEC) + v67 - ((2 * ((v133 >> 8) ^ 0xE5FEC)) & 0x15E)) ^ *(_DWORD *)(v105
                                                                                            + 4
                                                                                            * (BYTE1(v133) ^ 0x81u));
  int v137 = *(_DWORD *)&v111[4 * (BYTE2(v133) ^ 0x5F)];
  HIDWORD(v114) = v137 ^ 0x42;
  LODWORD(v114) = v137 ^ v66;
  int v138 = v114 >> 12;
  HIDWORD(v114) = *(_DWORD *)(v107 + 4 * (v135 ^ 0x5Eu)) ^ 0x1156D814;
  LODWORD(v114) = HIDWORD(v114);
  int v139 = (v114 >> 28) ^ __ROR4__(*(_DWORD *)&v116[4 * (BYTE3(v94) ^ 6)] ^ 0x7462B151 ^ (v136- 41052770- ((2 * v136) & 0xFB1B2B3C)), 28);
  unsigned int v140 = (v138 - 41052770 - ((2 * v138) & 0xFB1B2B3C)) ^ *(_DWORD *)&v116[4 * (HIBYTE(v132) ^ 0xD2)];
  int v141 = *(_DWORD *)&v111[4 * (BYTE2(v135) ^ 0x1B)];
  LODWORD(v94) = (v140 - 129892452 - ((2 * v140) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4
                                                                                   * (v94 ^ 0x4Cu));
  HIDWORD(v114) = v141 ^ 0x42;
  LODWORD(v114) = v141 ^ v66;
  int v142 = v114 >> 12;
  int v143 = BYTE1(v132) ^ 0xC0;
  int v144 = v143 + v67 - ((2 * ((v132 >> 8) ^ 0xD2CCC0)) & 0x15E);
  int v145 = *(_DWORD *)&v111[4 * (BYTE2(v132) ^ 0xCC)];
  HIDWORD(v114) = v145 ^ 0x42;
  LODWORD(v114) = v145 ^ v66;
  int v146 = HIDWORD(a42) ^ (v114 >> 12) ^ __ROR4__(v139 ^ 0x78071371, 4);
  unsigned int v147 = a42 ^ *(_DWORD *)&v116[4 * (HIBYTE(v133) ^ 0xE)] ^ v142 ^ (v99 - 41052770 - ((2 * v99) & 0xFB1B2B3C));
  LODWORD(v99) = BYTE1(v98);
  LODWORD(v98) = HIDWORD(a41) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v98) ^ 0x6Du)) ^ (v94 + v67 - ((2 * v94) & 0x2CDD995E));
  LODWORD(v94) = a41 ^ v144 ^ *(_DWORD *)(v107 + 4 * ((v133 ^ BYTE1(v121) ^ 0x54) ^ 0xCAu)) ^ *(_DWORD *)(v105 + 4 * (v143 ^ 0x6Du)) ^ (v91 - 129892452 - ((2 * v91) & 0xF083FF38));
  LODWORD(v99) = v99 ^ 0x4552953C ^ v98;
  LODWORD(v91) = *(_DWORD *)&v111[4 * BYTE2(v99)];
  HIDWORD(v114) = v91 ^ 0x42;
  LODWORD(v114) = v91 ^ v66;
  LODWORD(v91) = v114 >> 12;
  BYTE1(v133) = BYTE1(v146) ^ 0xE7;
  int v148 = *(_DWORD *)&v111[4 * ((v146 ^ 0x99FEE750) >> 16)];
  HIDWORD(v114) = v148 ^ 0x42;
  LODWORD(v114) = v148 ^ v66;
  LODWORD(v104) = (BYTE1(v99) + v67 - ((v99 >> 7) & 0x15E)) ^ *(_DWORD *)(v107
                                                                                      + 4
                                                                                      * (v147 ^ 0x72u)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v99) ^ 0x6Du)) ^ ((v114 >> 12) - 129892452 - ((2 * (v114 >> 12)) & 0xF083FF38));
  int v149 = *(_DWORD *)&v111[4 * (BYTE2(v94) ^ 2)];
  HIDWORD(v114) = v149 ^ 0x42;
  LODWORD(v114) = v149 ^ v66;
  int v150 = *(_DWORD *)(v107 + 4 * v99) ^ *(_DWORD *)&v116[4 * (HIBYTE(v147) ^ 0xA7)] ^ (v114 >> 12);
  LODWORD(v99) = *(_DWORD *)&v111[4 * (BYTE2(v147) ^ 0x3B)];
  HIDWORD(v114) = v99 ^ 0x42;
  LODWORD(v114) = v99 ^ v66;
  LODWORD(v99) = HIDWORD(a40) ^ ((BYTE1(v94) ^ 0xD9) + v67 - ((2 * ((v94 >> 8) ^ 0x9802D9)) & 0x15E)) ^ *(_DWORD *)(v107 + 4 * (v146 ^ 0x1Eu)) ^ *(_DWORD *)&v116[4 * (BYTE3(v98) ^ 0x61)] ^ *(_DWORD *)(v105 + 4 * (BYTE1(v94) ^ 0xB4u)) ^ (v114 >> 12);
  unsigned int v151 = a40 ^ *(_DWORD *)&v116[4 * (BYTE3(v94) ^ 0x98)] ^ (v104 - 41052770 - ((2 * v104) & 0xFB1B2B3C));
  unsigned int v152 = HIDWORD(a39) ^ ((BYTE1(v147) ^ 0x29) + v67 - ((2 * ((v147 >> 8) ^ 0xA73B29)) & 0x15E)) ^ *(_DWORD *)(v107 + 4 * (v94 ^ 0x3Du)) ^ *(_DWORD *)&v116[4 * ((v146 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)(v105 + 4 * (BYTE1(v147) ^ 0x44u)) ^ v91;
  unsigned int v153 = a39 ^ *(_DWORD *)(v105 + 4 * (((unsigned __int16)(v146 ^ 0xE750) >> 8) ^ 0x6Du)) ^ ((v150 ^ 0x5CC6A02) + v67 + 1 + ~((2 * (v150 ^ 0x5CC6A02)) & 0x2CDD995E));
  LODWORD(v104) = *(_DWORD *)&v111[4 * (BYTE2(v99) ^ 0x89)];
  HIDWORD(v114) = v104 ^ 0x42;
  LODWORD(v114) = v104 ^ v66;
  LODWORD(v104) = v114 >> 12;
  int v154 = *(_DWORD *)&v111[4 * (BYTE2(v152) ^ 0x24)];
  HIDWORD(v114) = v154 ^ 0x42;
  LODWORD(v114) = v154 ^ v66;
  int v155 = BYTE1(v152) ^ 0x95;
  LODWORD(v91) = v155 + v67 - ((2 * ((v152 >> 8) ^ 0xD02495)) & 0x15E);
  LOBYTE(v143) = v99 ^ 0x88;
  int v156 = *(_DWORD *)(v107 + 4 * ((v153 ^ BYTE1(v133)) ^ 0x41u)) ^ (((unsigned __int16)(v99 ^ 0xDB88) >> 8)
                                                                                    + v67
                                                                                    - (((v99 ^ 0x6DF3DB88) >> 7) & 0x15E)) ^ *(_DWORD *)(v105 + 4 * (((unsigned __int16)(v99 ^ 0xDB88) >> 8) ^ 0x6Du)) ^ ((v114 >> 12) - 129892452 - ((2 * (v114 >> 12)) & 0xF083FF38));
  int v157 = *(_DWORD *)&v111[4 * (BYTE2(v153) ^ 0x81)];
  HIDWORD(v114) = v157 ^ 0x42;
  LODWORD(v114) = v157 ^ v66;
  int v158 = ((v114 >> 12) - 41052770 - ((2 * (v114 >> 12)) & 0xFB1B2B3C)) ^ *(_DWORD *)&v116[4
                                                                                        * ((v99 ^ 0x6DF3DB88) >> 24)];
  unsigned int v159 = (v158 - 129892452 - ((2 * v158) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4 * (v152 ^ 7u));
  LODWORD(v104) = ((BYTE1(v153) ^ 0xA0) + v67 - 2 * (((v153 >> 8) ^ 0x6881A0) & 0xBF ^ (v153 >> 8) & 0x10)) ^ (v104 - 129892452 - ((2 * v104) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4 * (v151 ^ 0xFCu)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v153) ^ 0xCDu));
  LODWORD(v99) = *(_DWORD *)&v111[4 * (BYTE2(v151) ^ 0xC6)];
  LODWORD(v114) = __ROR4__((v99 >> 12) ^ 0x260533F, 17) ^ 0xEE910136;
  HIDWORD(v114) = v114;
  unsigned int v160 = HIDWORD(a38) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v151) ^ 0x75u)) ^ (v159 + v67 - ((2 * v159) & 0x2CDD995E));
  unsigned int v161 = a38 ^ *(_DWORD *)&v116[4 * (HIBYTE(v152) ^ 0xD0)] ^ (v104 - 41052770 - ((2 * v104) & 0xFB1B2B3C));
  LODWORD(v94) = HIDWORD(a37) ^ *(_DWORD *)&v116[4 * (HIBYTE(v151) ^ 0x5A)] ^ (v156
                                                                             - 41052770
                                                                             - ((2 * v156) & 0xFB1B2B3C));
  unsigned int v162 = a37 ^ v91 ^ *(_DWORD *)(v107 + 4 * v143) ^ *(_DWORD *)(v105 + 4 * (v155 ^ 0x6Du)) ^ *(_DWORD *)&v116[4 * (HIBYTE(v153) ^ 0x68)] ^ ((v114 >> 15) + (v99 << 20));
  LODWORD(v104) = ((BYTE1(v160) ^ 0x9D) + v67 - ((2 * ((v160 >> 8) ^ 0xC2489D)) & 0x15E)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v160) ^ 0xF0u));
  unsigned int v163 = *(_DWORD *)&v111[4 * (BYTE2(v161) ^ 0x8F)];
  int v164 = *(_DWORD *)(v107 + 4 * (v162 ^ 0x88u)) ^ (v163 << 20) ^ (v163 >> 12) ^ 0x42D8E1D;
  int v165 = *(_DWORD *)&v111[4 * ((v94 ^ 0xCFB8D782) >> 16)];
  LODWORD(v104) = v164 ^ (v104 - 129892452 - ((2 * v104) & 0xF083FF38));
  HIDWORD(v114) = v165 ^ 0x42;
  LODWORD(v114) = v165 ^ v66;
  int v166 = ((v114 >> 12) - 129892452 - ((2 * (v114 >> 12)) & 0xF083FF38)) ^ *(_DWORD *)(v107
                                                                                    + 4
                                                                                    * ((v160 ^ BYTE1(v151)) ^ 0x3Fu));
  LODWORD(v91) = v104 - 41052770 - ((2 * v104) & 0xFB1B2B3C);
  unsigned int v167 = v166 - 41052770 - ((2 * v166) & 0xFB1B2B3C);
  int v168 = BYTE1(v161) ^ 0xD9;
  LODWORD(v104) = v168 + v67 - ((2 * ((v161 >> 8) ^ 0xC78FD9)) & 0x15E);
  int v169 = *(_DWORD *)&v111[4 * (BYTE2(v160) ^ 0x48)];
  HIDWORD(v114) = v169 ^ 0x42;
  LODWORD(v114) = v169 ^ v66;
  int v170 = ((BYTE1(v162) ^ 0xA) + v67 - 2 * (((v162 >> 8) ^ 0x27670A) & 0xBF ^ (v162 >> 8) & 0x10)) ^ *(_DWORD *)(v107 + 4 * (v94 ^ 0xCCu)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v162) ^ 0x67u)) ^ ((v114 >> 12) - 129892452 - ((2 * (v114 >> 12)) & 0xF083FF38));
  LODWORD(v99) = *(_DWORD *)&v111[4 * (BYTE2(v162) ^ 0x67)];
  HIDWORD(v114) = v99 ^ 0x42;
  LODWORD(v114) = v99 ^ v66;
  unsigned int v171 = HIDWORD(a36) ^ (((unsigned __int16)(v94 ^ 0xD782) >> 8)
                       + v67
                       - (((v94 ^ 0xCFB8D782) >> 7) & 0x15E)) ^ *(_DWORD *)(v107
                                                                                        + 4
                                                                                        * (v161 ^ 0x50u)) ^ *(_DWORD *)(v105 + 4 * (((unsigned __int16)(v94 ^ 0xD782) >> 8) ^ 0x6Du)) ^ (v114 >> 12) ^ *(_DWORD *)&v116[4 * (HIBYTE(v160) ^ 0xC2)];
  unsigned int v172 = a36 ^ *(_DWORD *)&v116[4 * (HIBYTE(v161) ^ 0xC7)] ^ (v170 - 41052770 - ((2 * v170) & 0xFB1B2B3C));
  unsigned int v173 = HIDWORD(a35) ^ *(_DWORD *)&v116[4 * ((v94 ^ 0xCFB8D782) >> 24)] ^ v91;
  unsigned int v174 = a35 ^ v104 ^ *(_DWORD *)&v116[4 * (HIBYTE(v162) ^ 0x27)] ^ *(_DWORD *)(v105 + 4 * (v168 ^ 0x6Du)) ^ v167;
  LODWORD(v91) = *(_DWORD *)&v111[4 * (BYTE2(v172) ^ 0xE6)];
  HIDWORD(v114) = v91 ^ 0x42;
  LODWORD(v114) = v91 ^ v66;
  LODWORD(v91) = v114 >> 12;
  unsigned int v175 = (((unsigned __int16)(v174 ^ 0xCCA2) >> 8) + v67 - (((v174 ^ 0x33C8CCA2) >> 7) & 0x15E)) ^ *(_DWORD *)(v105 + 4 * (((unsigned __int16)(v174 ^ 0xCCA2) >> 8) ^ 0x6Du));
  LODWORD(v99) = *(_DWORD *)&v111[4 * (BYTE2(v173) ^ 0x1C)];
  HIDWORD(v114) = v99 ^ 0x42;
  LODWORD(v114) = v99 ^ v66;
  LODWORD(v104) = (v114 >> 12) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v172) ^ 0xD9u)) ^ ((BYTE1(v172) ^ 0xB4)
                                                                                  + v67
                                                                                  - ((2 * ((v172 >> 8) ^ 0x4FE6B4)) & 0x15E));
  LODWORD(v104) = (v104 - 129892452 - ((2 * v104) & 0xF083FF38)) ^ *(_DWORD *)(v107
                                                                             + 4 * (v171 ^ 0xE8u));
  unsigned int v176 = (v175 - 129892452 - ((2 * v175) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4 * (v173 ^ 0x3Au));
  LODWORD(v99) = *(_DWORD *)(v107 + 4 * (v174 ^ 0xA2u)) ^ (((unsigned __int16)(v171 ^ 0x7EE8) >> 8)
                                                                            + v67
                                                                            - (((v171 ^ 0x1CFF7EE8) >> 7) & 0x15E)) ^ *(_DWORD *)(v105 + 4 * (((unsigned __int16)(v171 ^ 0x7EE8) >> 8) ^ 0x6Du)) ^ (v91 - 129892452 - ((2 * v91) & 0xF083FF38));
  LODWORD(v91) = *(_DWORD *)(v107 + 4 * (v172 ^ 0x96u));
  HIDWORD(v114) = v91 ^ 0x1841FF9C;
  LODWORD(v114) = ~v91;
  HIDWORD(v114) = (v114 >> 29) ^ 0x6615DA09;
  LODWORD(v114) = HIDWORD(v114);
  int v177 = (v114 >> 3) + v67 + 1 + ~((2 * (v114 >> 3)) & 0x2CDD995E);
  unsigned int v178 = v176 - 41052770 - ((2 * v176) & 0xFB1B2B3C);
  int v179 = v99 - 41052770 - ((2 * v99) & 0xFB1B2B3C);
  int v180 = *(_DWORD *)&v111[4 * ((v171 ^ 0x1CFF7EE8) >> 16)];
  HIDWORD(v114) = v180 ^ 0x42;
  LODWORD(v114) = v180 ^ v66;
  int v181 = v114 >> 12;
  LODWORD(v99) = *(_DWORD *)&v111[4 * ((v174 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v114) = v99 ^ 0x42;
  LODWORD(v114) = v99 ^ v66;
  LODWORD(v94) = HIDWORD(a34) ^ *(_DWORD *)&v116[4 * (HIBYTE(v174) ^ 0x17)] ^ (v104
                                                                             - 41052770
                                                                             - ((2 * v104) & 0xFB1B2B3C));
  LODWORD(v104) = v177 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v173) ^ 0xD1u)) ^ (v114 >> 12);
  unsigned int v182 = HIDWORD(a33) ^ *(_DWORD *)&v116[4 * (HIBYTE(v173) ^ 0x1B)] ^ v179;
  int v183 = *(_DWORD *)&v111[4 * (BYTE2(v182) ^ 0x7E)];
  HIDWORD(v114) = v183 ^ 0x42;
  LODWORD(v114) = v183 ^ v66;
  int v184 = v114 >> 12;
  unsigned int v185 = a34 ^ *(_DWORD *)&v116[4 * (HIBYTE(v172) ^ 0x4F)] ^ v181 ^ v178;
  LODWORD(v99) = *(_DWORD *)&v111[4 * (BYTE2(v185) ^ 1)];
  unsigned int v186 = *(_DWORD *)&v116[4 * (HIBYTE(v171) ^ 0x38)] ^ a54 ^ (v104 - 41052770 - ((2 * v104) & 0xFB1B2B3C));
  HIDWORD(v114) = v99 ^ 0x42;
  LODWORD(v114) = v99 ^ v66;
  LODWORD(v104) = ((v114 >> 12) - 129892452 - ((2 * (v114 >> 12)) & 0xF083FF38)) ^ *(_DWORD *)(v107
                                                                                             + 4
                                                                                             * (v94 ^ 0xC6u));
  unsigned int v187 = ((BYTE1(v94) ^ 0x71) + v67 - ((2 * ((v94 >> 8) ^ 0xF25B71)) & 0x15E)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v94) ^ 0x1Cu));
  unsigned int v188 = (v187 - 41052770 - ((2 * v187) & 0xFB1B2B3C)) ^ *(_DWORD *)&v116[4 * (HIBYTE(v185) ^ 0x1F)];
  LODWORD(v99) = *(_DWORD *)&v111[4 * (BYTE2(v94) ^ 0x5B)];
  HIDWORD(v114) = v99 ^ 0x42;
  LODWORD(v114) = v99 ^ v66;
  LODWORD(v99) = v114 >> 12;
  LODWORD(v91) = BYTE1(v173) ^ 0x73F4E0AF ^ v186;
  int v189 = *(_DWORD *)&v111[4 * BYTE2(v91)];
  HIDWORD(v114) = v189 ^ 0x42;
  LODWORD(v114) = v189 ^ v66;
  int v190 = v114 >> 12;
  HIDWORD(v114) = v184 ^ ((BYTE1(v185) ^ 0x81) + v67 - ((2 * ((v185 >> 8) ^ 0x1F0181)) & 0x15E)) ^ 0xD678EAEF ^ *(_DWORD *)(v105 + 4 * (BYTE1(v185) ^ 0xECu));
  LODWORD(v114) = HIDWORD(v114);
  LODWORD(v114) = (v114 >> 11) ^ __ROR4__(*(_DWORD *)&v116[4 * (BYTE3(v94) ^ 0xF2)] ^ 0x5F97CE20, 11) ^ 0xD490839A;
  HIDWORD(v114) = v114;
  LODWORD(v94) = a33 ^ *(_DWORD *)(v107 + 4 * (v185 ^ 0xB8u)) ^ ((BYTE1(v182) ^ 0xAA)
                                                                                  + v67
                                                                                  - ((2 * ((v182 >> 8) ^ 0x967EAA)) & 0x15E)) ^ *(_DWORD *)&v116[4 * (HIBYTE(v186) ^ 0x57)] ^ v99 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v182) ^ 0xC7u));
  unsigned int v191 = HIDWORD(a32) ^ *(_DWORD *)&v116[4 * (HIBYTE(v182) ^ 0x96)] ^ (BYTE1(v91)
                                                                     + v67
                                                                     - ((v91 >> 7) & 0x15E)) ^ (v104 - 41052770 - ((2 * v104) & 0xFB1B2B3C)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v91) ^ 0x6Du));
  LODWORD(v104) = a32 ^ *(_DWORD *)(v107 + 4 * (v182 ^ 0x88u)) ^ v190 ^ (v188
                                                                                          - 129892452
                                                                                          - ((2 * v188) & 0xF083FF38));
  unsigned int v192 = HIDWORD(a31) ^ *(_DWORD *)(v107 + 4 * (BYTE1(v173) ^ 0xAFu ^ v186)) ^ ((v114 >> 21)
                                                                                                 - 129892452
                                                                                                 - ((2 * (v114 >> 21)) & 0xF083FF38));
  BYTE2(v91) = BYTE2(v104) ^ 0x4A;
  LODWORD(v99) = *(_DWORD *)&v111[4 * (BYTE2(v94) ^ 0x27)];
  HIDWORD(v114) = v99 ^ 0x42;
  LODWORD(v114) = v99 ^ v66;
  LODWORD(v99) = v114 >> 12;
  LODWORD(v98) = *(_DWORD *)(v105 + 4 * (BYTE1(v191) ^ 0x96u)) ^ ((BYTE1(v191) ^ 0xFB)
                                                                  + v67
                                                                  + 1
                                                                  + (~(2 * ((v191 >> 8) ^ 0x3EA2FB)) | 0xFFFFFEA1));
  LODWORD(v98) = (v98 - 129892452 - ((2 * v98) & 0xF083FF38)) ^ *(_DWORD *)(v107 + 4 * (v104 ^ 0x75u));
  int v193 = *(_DWORD *)&v111[4 * (BYTE2(v191) ^ 0xA2)];
  HIDWORD(v114) = v193 ^ 0x42;
  LODWORD(v114) = v193 ^ v66;
  int v194 = (((unsigned __int16)(v104 ^ 0xF075) >> 8)
        + v67
        - (((v104 ^ 0xB54AF075) >> 7) & 0x15E)) ^ (v114 >> 12) ^ *(_DWORD *)(v105
                                                                                         + 4
                                                                                         * (((unsigned __int16)(v104 ^ 0xF075) >> 8) ^ 0x6Du));
  unsigned int v195 = (v194 - 41052770 - ((2 * v194) & 0xFB1B2B3C)) ^ *(_DWORD *)&v116[4 * (HIBYTE(v192) ^ 0xED)];
  LODWORD(v104) = *(_DWORD *)&v116[4 * (BYTE3(v104) ^ 0x91)];
  int v196 = *(_DWORD *)&v116[4 * (HIBYTE(v191) ^ 0x3E)];
  LODWORD(v116) = *(_DWORD *)&v116[4 * (BYTE3(v94) ^ 0xC2)];
  v192 ^= 0xC9AF1D8F;
  int v197 = *(_DWORD *)(v107 + 4 * v192);
  int v198 = BYTE1(v192);
  int v199 = BYTE1(v192) + v67 - ((v192 >> 7) & 0x15E);
  int v200 = *(_DWORD *)(v107 + 4 * (v191 ^ 0x9Au));
  int v201 = *(_DWORD *)(v107 + 4 * (v94 ^ 0x6Du));
  unsigned int v202 = *(_DWORD *)&v111[4 * BYTE2(v192)];
  LODWORD(v107) = *(_DWORD *)&v111[4 * BYTE2(v91)];
  HIDWORD(v114) = v107 ^ 0x42;
  LODWORD(v114) = v107 ^ v66;
  LODWORD(v107) = (v94 >> 8) ^ 0xC227AA;
  LODWORD(v91) = *(_DWORD *)(v105 + 4 * (v198 ^ 0x6Du));
  LODWORD(v94) = BYTE1(v94) ^ 0xAA;
  LODWORD(v105) = *(_DWORD *)(v105 + 4 * (v94 ^ 0x6D));
  LODWORD(v94) = v94 + v67 - ((2 * v107) & 0x15E);
  LODWORD(v107) = a31 ^ v200 ^ v99 ^ v104 ^ v199 ^ v91;
  LODWORD(v111) = HIDWORD(a30) ^ v94 ^ v196 ^ v105 ^ v197 ^ (v114 >> 12);
  LODWORD(v94) = a30 ^ v201 ^ (v195 - 129892452 - ((2 * v195) & 0xF083FF38));
  LODWORD(v98) = HIDWORD(a29) ^ v116 ^ (v202 >> 12) ^ (v202 << 20) ^ (v98
                                                                                  - 41052770
                                                                                  - ((2 * v98) & 0xFB1B2B3C));
  uint64_t v203 = *(unsigned int *)(v68 - 120);
  int v204 = (char *)*(&off_1F16F9FD0 + (int)a27) - 12;
  unint64_t v205 = (char *)*(&off_1F16F9FD0 + (int)v203 - 981) - 8;
  unsigned int v206 = *(_DWORD *)&v204[4 * (v94 ^ 7)] ^ *(_DWORD *)&v205[4 * (BYTE1(v98) ^ 0xAD)] ^ 0x8D96C3BF;
  LODWORD(v116) = *(_DWORD *)&v205[4 * (BYTE1(v107) ^ 0x1B)];
  int v207 = *(_DWORD *)&v205[4 * ((unsigned __int16)(v94 ^ 0x6F07) >> 8)];
  int v208 = *(_DWORD *)&v205[4 * (BYTE1(v111) ^ 6)];
  int v209 = (char *)*(&off_1F16F9FD0 + (int)v203 - 893) - 8;
  LODWORD(v105) = *(_DWORD *)&v209[4 * (BYTE3(v94) ^ 0xEF)];
  int v210 = *(_DWORD *)&v209[4 * ((v111 >> 24) ^ 5)];
  int v211 = *(_DWORD *)&v209[4 * (BYTE3(v98) ^ 0x99)];
  LODWORD(v209) = *(_DWORD *)&v209[4 * (BYTE3(v107) ^ 0x34)];
  int v212 = v210 ^ (v206 + 246923982 - ((2 * v206) & 0x1D6F859C));
  uint64_t v213 = (uint64_t)*(&off_1F16F9FD0 + (int)v203 - 930);
  int v214 = *(_DWORD *)(v213 + 4 * (BYTE2(v98) ^ 0x91u));
  uint64_t v215 = *(unsigned int *)(v213 + 4 * (BYTE2(v94) ^ 0x2Au));
  uint64_t v216 = *(unsigned int *)(v213 + 4 * (BYTE2(v111) ^ 0xE5u));
  int v217 = *(_DWORD *)(v213 + 4 * (BYTE2(v107) ^ 0x47u)) ^ (v212 + 216442546 - ((2 * v212) & 0x19CD4D64));
  int v218 = *(_DWORD *)&v204[4 * (v107 ^ 0xDE)];
  LODWORD(v213) = *(_DWORD *)&v204[4 * (v111 ^ 0xF)];
  uint64_t v219 = *(unsigned int *)&v204[4 * (v98 ^ 0xC6)];
  uint64_t v220 = *(_DWORD *)(v68 - 136) ^ a52 ^ (v217 - ((2 * v217) & 0x4CBBA650) + 643683112);
  uint64_t v221 = (uint64_t)*(&off_1F16F9FD0 + SHIDWORD(a26));
  *(unsigned char *)(a55 + *(void *)(v68 - 256)) = *(unsigned char *)(v221 + (BYTE3(v220) ^ 0xD7)) ^ 0xEB;
  LODWORD(v209) = ((v214 ^ 0x83401997 ^ v207) + 246923982 - ((2 * (v214 ^ 0x83401997 ^ v207)) & 0x1D6F859C)) ^ v209;
  LODWORD(v209) = (v209 + 36732058 - ((2 * v209) & 0x460F934)) ^ v213;
  LODWORD(v209) = *(_DWORD *)(v68 - 132) ^ HIDWORD(a52) ^ (v209 - ((2 * v209) & 0x3CB74D6C) - 1638160714);
  unsigned int v222 = (char *)*(&off_1F16F9FD0 + (int)a26) - 4;
  *(unsigned char *)(a55 + *(void *)(v68 - 224)) = (v222[v209 ^ 0xC7] - 59) ^ 0x5F;
  int v223 = (char *)*(&off_1F16F9FD0 + SHIDWORD(a25)) - 8;
  int v224 = v223[BYTE1(v209) ^ 0x13];
  HIDWORD(v114) = v224 ^ 0x3E;
  LODWORD(v114) = (v224 ^ 0x40) << 24;
  *(unsigned char *)(a55 + v234) = (v114 >> 30) ^ 0x40;
  int v225 = ((v215 ^ v218 ^ 0xED6DA28) + 246923982 - 2 * ((v215 ^ v218 ^ 0xED6DA28) & 0xEB7C2DE ^ (v215 ^ v218) & 0x10)) ^ v211;
  int v226 = (v225 - ((2 * v225) & 0x1F4D7E4A) - 1884897499) ^ v208;
  unsigned int v227 = *(_DWORD *)(v68 - 128) ^ a53 ^ (v226 - ((2 * v226) & 0x7D2CB66C) - 1097442506);
  int v228 = v223[(unsigned __int16)(*(_WORD *)(v68 - 128) ^ a53 ^ (v226 - ((2 * v226) & 0xB66C) + 23350)) >> 8];
  HIDWORD(v114) = v228 ^ 0x3E;
  LODWORD(v114) = (v228 ^ 0x40) << 24;
  *(unsigned char *)(a55 + *(void *)(v68 - 208)) = (v114 >> 30) ^ 0x7E;
  int v229 = (char *)*(&off_1F16F9FD0 + (int)v203 - 910) - 12;
  *(unsigned char *)(a55 + *(void *)(v68 - 248)) = v229[BYTE2(v220) ^ 0xFBLL] ^ 0x4B;
  LODWORD(v116) = ((v116 ^ 0x81117DEB ^ v105)
                 + 216442546
                 - ((2 * (v116 ^ 0x81117DEB ^ v105)) & 0x19CD4D64)) ^ v216;
  LODWORD(v116) = v219 ^ (v116 + 36732058 - ((2 * v116) & 0x460F934));
  LODWORD(v116) = *(_DWORD *)(v68 - 124) ^ HIDWORD(a53) ^ (v116 - ((2 * v116) & 0xE1583C6C) - 257155530);
  *(unsigned char *)(a55 + *(void *)(v68 - 168)) = v229[BYTE2(v116) ^ 0xB8] ^ 0x98;
  *(unsigned char *)(a55 + *(void *)(v68 - 240)) = (v222[v220 ^ 0x1BLL] - 59) ^ 0x7D;
  *(unsigned char *)(a55 + *(void *)(v68 - 232)) = v229[BYTE2(v209) ^ 3] ^ 0xE6;
  *(unsigned char *)(a55 + *(void *)(v68 - 184)) = *(unsigned char *)(v221 + ((v209 >> 24) ^ 0x6DLL)) ^ 0x13;
  LODWORD(v209) = v223[BYTE1(v220) ^ 0x92];
  HIDWORD(v114) = v209 ^ 0x3E;
  LODWORD(v114) = (v209 ^ 0x40) << 24;
  *(unsigned char *)(a55 + *(void *)(v68 - 152)) = (v114 >> 30) ^ 0xD2;
  uint64_t v230 = *(void *)(v68 - 200);
  *(unsigned char *)(a55 + v230) = ~*(unsigned char *)(v221 + (HIBYTE(v227) ^ 0x53));
  *(unsigned char *)(a55 + *(void *)(v68 - 176)) = (v222[v227 ^ 0x95] - 59) ^ 0xAF;
  *(unsigned char *)(a55 + *(void *)(v68 - 216)) = (v222[v116 ^ 0x64] - 59) ^ 0x27;
  *(unsigned char *)(a55 + *(void *)(v68 - 160)) = *(unsigned char *)(v221 + ((v116 >> 24) ^ 0x6ELL)) ^ 0x69;
  LODWORD(v209) = v223[BYTE1(v116) ^ 0x1FLL];
  HIDWORD(v114) = v209 ^ 0x3E;
  LODWORD(v114) = (v209 ^ 0x40) << 24;
  *(unsigned char *)(a55 + *(void *)(v68 - 192)) = (v114 >> 30) ^ 0x58;
  *(unsigned char *)(a55 + *(void *)(v68 - 144)) = v229[BYTE2(v227) ^ 0xC8] ^ 0xC9;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a59 + 8 * ((1984 * (((v230 - 1840218525 - ((2 * v230 + 32) & 0x24A0FCC6) + 16) ^ 0x92507E63) < a57)) ^ ((int)v203 - 467))))(432885092, v223, v203, 109, v215, v220, v216, v219, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1BCAD6878()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((221
                                * (((((v1 + 233800093) & 0xF2107BED) - 988) & v0) == ((v1 + 1565596046) & 0xA2AEE1BD)
                                                                                   - 421)) ^ v1)))();
}

uint64_t sub_1BCAD68D8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a3 == v4 + 134 * (a1 ^ (a1 - 12)) - 1608) * ((a1 ^ (a1 + 116)) - 94)) ^ (a2 + a1 + 885))))();
}

uint64_t sub_1BCAD6928@<X0>(int a1@<W8>)
{
  *(void *)(v2 - 0x3F8123127DDA1A64) = (*v3 + a1) + *(void *)(v4 - 0x5B51E979A7EFF0CDLL) + 8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((*v6 == v5) * (166 * (v1 ^ 0x154) + 651)) ^ v1)))();
}

void sub_1BCAD6994()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1BCAD6A00);
}

void sub_1BCAD6AB8()
{
}

void sub_1BCAD6B28(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1BCAD6C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  LODWORD(STACK[0x4A4]) = 1854503558;
  unint64_t v42 = STACK[0x4F0];
  STACK[0x468] = 335;
  *(unsigned char *)(v42 + 335) = ((a40 + 27) ^ 0xBA) * (a40 + 44);
  return (*(uint64_t (**)(void))(v41 + 8 * (((8 * (STACK[0x468] == 0)) | (32 * (STACK[0x468] == 0))) ^ (v40 + 121))))();
}

uint64_t sub_1BCAD6C98(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v12 = ((a4 << (((2 * v11) ^ 0xF6) - 88)) + 1988459008) | *(unsigned __int8 *)(v8 + (a7 + a3 + 1120));
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v9 + 8 * ((338 * (v10 - 1 == a8 + 1739)) ^ v11)))(a1, a2, (a3 + 1), (v12 ^ 0x6FEBFFFE) - 23233912 + ((2 * v12) & 0xDFD7FFFC));
}

void sub_1BCAD6D18()
{
  STACK[0x488] = *(void *)(v0 + 8 * (int)(STACK[0x408] - 578));
  JUMPOUT(0x1BCAD6D34);
}

uint64_t sub_1BCAD6DD0@<X0>(uint64_t a1@<X8>)
{
  int v5 = v2 + 661;
  int v6 = (v1 + 1107496917) | 0x24780430;
  *(_DWORD *)(*(void *)(v3 + 96) + 528) = 75341232;
  *(_DWORD *)(*(void *)(v3 + 96) + 532) = 874675926;
  *(void *)(*(void *)(v3 + 96) + 536) = *(void *)(v3 + 96) + 544;
  uint64_t v7 = *(void *)(v3 + 96) + 0x7EC954F5752629B1;
  uint64_t v8 = *(void *)(v4 + 8) + (*(_DWORD *)(v4 + 4) - (v2 + 661));
  unsigned int v9 = 108757529 * ((&v12 & 0xE05670F8 | ~(&v12 | 0xE05670F8)) ^ 0xFF35ED2C);
  int v13 = v1 - v9 + 361;
  int v16 = v2 + 661 - v9 - 1152520206;
  uint64_t v14 = v8;
  uint64_t v12 = v7;
  (*(void (**)(uint64_t *))(a1 + 8 * (v1 ^ 0x8FC)))(&v12);
  int v10 = v15;
  *(void *)(*(void *)(v3 + 96) + 512) = *(void *)(v4 + 8) + (*(_DWORD *)(v4 + 4) - v5);
  return (v6 + v10 + 589975111);
}

uint64_t sub_1BCAD6DD8()
{
  int v4 = v3 - 2;
  unsigned int v10 = (v3 + 349) ^ (1374699841 * (&v10 ^ 0x6DF41809));
  uint64_t v12 = &STACK[0x5FA3F43A3B4E8E56];
  int v13 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 ^ 0xE71u)))(&v10);
  unsigned int v10 = v3 + 1225351577 * ((&v10 & 0x201E3399 | ~(&v10 | 0x201E3399)) ^ 0xA11E5654) - 291;
  uint64_t v12 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 + 524)))(&v10);
  if (v11 == v0 + v3 - 2 - 1604) {
    unsigned int v5 = v8;
  }
  else {
    unsigned int v5 = v11;
  }
  unsigned int v11 = v3 + (((&v10 | 0x648109B1) - (&v10 & 0x648109B1)) ^ 0x6E75079E) * v2 - 977;
  uint64_t v12 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 + 495)))(&v10);
  uint64_t v12 = v9;
  unsigned int v11 = v4 + ((2 * (&v10 & 0x7163F060) - &v10 + 245108637) ^ 0x46801B2) * v2 - 975;
  (*(void (**)(unsigned int *))(v1 + 8 * (v4 ^ 0xE71)))(&v10);
  return v5 ^ v0;
}

uint64_t sub_1BCAD6F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v18 = v14 - 1319097419 <= ((v15 + 1344) ^ 0x4F282D55) && v14 - 1319097419 >= a14 - 819451164;
  return (*(uint64_t (**)(void))(v16 + 8 * ((240 * v18) ^ v15)))();
}

uint64_t sub_1BCAD7004@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1548 * (a3 == v4 + a2 + a1 + 331 - 471)) ^ (a2 + a1 + 331))))();
}

uint64_t sub_1BCAD7040@<X0>(int a1@<W8>)
{
  int v9 = v5 + 1;
  BOOL v10 = v1 < v2;
  *(_DWORD *)(*v4 + 4 * (v9 + v6)) = *(_DWORD *)(*v4 + 4 * (a1 + v9));
  if (v10 == v9 + v7 < v2) {
    BOOL v10 = v9 + v7 < v1;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v10 | (8 * v10)) ^ v3)))();
}

uint64_t sub_1BCAD7048(uint64_t a1, int32x4_t a2, int32x4_t a3, int32x4_t a4, int32x4_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  return sub_1BCB02780(a1, (int)a11 + v48 - 207, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a2,
           a3,
           a4,
           a5);
}

uint64_t sub_1BCAD7054@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v8 = (v3 ^ 0x7DF24D9A) + a1;
  *(unsigned char *)(v2 + v8 + v6) = v4;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v8 + v6 + 1) < 0x40) * v5) ^ a2)))();
}

uint64_t sub_1BCAD706C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, uint64_t a16, unsigned int a17, int a18, unint64_t *a19)
{
  unsigned int v22 = 1759421093 * (&a14 ^ 0xB37DB054);
  a19 = &STACK[0x38DF4D133EEC728C];
  a14 = -549621875 - v22;
  a17 = v22 ^ 0x86F8B78A;
  a18 = v22 + v21 - 2024874689;
  a16 = a12;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * (v21 ^ 0xE77)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((407 * (a15 == (v21 ^ 2 ^ (v19 - 580)))) ^ v21)))(v23);
}

void sub_1BCAD7124()
{
}

uint64_t sub_1BCAD7130()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8 * (int)((((v3 + 207112729) & 0xF3A7B3FF ^ 0x44D) * (v1 == v2)) ^ v3)))(v0);
}

uint64_t sub_1BCAD7174()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((43
                                * ((((v1 + v3 - 133) < 0x7FFFFF7D) ^ ((v0 ^ 0xF7) + 30)) & 1)) ^ v0 ^ 0x3F7)))();
}

uint64_t sub_1BCAD71C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)((((((a11 - 2069483689) < 0x7FFFFFFF) ^ (v12 - 30)) & 1)
                                     * ((v12 + 1056003250) & 0xC10EA9FF ^ 0x9E)) ^ v12)))();
}

uint64_t sub_1BCAD721C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 + 1402) * (v2 != 1430518029)) ^ v1)))();
}

uint64_t sub_1BCAD7258()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((7 * ((v1 ^ 0xF94FA34F) == 53 * ((v0 + 1141) ^ 0x4E2) - 1007)) ^ (v0 + 1141))))();
}

uint64_t sub_1BCAD72B0()
{
  int v5 = *(unsigned __int8 *)(v1 + v3 + v0 - 0x73084E6187BC9D43 + ((v0 - 200) | 0x248u) - 4)
     - (*(unsigned char *)(v2 + v3 + v0 - 0x73084E6187BC9D43 + ((v0 - 200) | 0x248u) - 4) - 82);
  return (*(uint64_t (**)(void))(v4 + 8
                                   * (int)((2015 * ((v5 ^ 0xF6DF753) + ((2 * v5) & 0x1EDBEEA6) == 258864979)) ^ v0)))();
}

uint64_t sub_1BCAD72BC(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (((a4 + a6 + v15 - 984 - 547)
                                * (a14 + v16 - (unint64_t)(v14 + a3) < 0x10)) ^ v15)))();
}

uint64_t sub_1BCAD72FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1BCAD7334(((a5 ^ 0x4B7) + 1369333953) & 0xAE619B6D, a2, 0, (a5 ^ 0x4B7u) - 1246, ((a5 ^ 0x4B7) + 1369333953) & 0xAE619B6D ^ 0x308, 1533);
}

uint64_t sub_1BCAD7334(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  uint64_t v11 = (v7 + v8 - a3 + 1525);
  long long v12 = *(_OWORD *)(a2 + v11 - 15);
  long long v13 = *(_OWORD *)(a2 + v11 - 31);
  uint64_t v14 = v6 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a5 + a3 == v9) * a6) ^ a4)))();
}

uint64_t sub_1BCAD7378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((52 * (v7 + 1 != v8 + 64)) ^ a7)))();
}

uint64_t sub_1BCAD743C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1583 * (a5 + 1 == v6 + 48)) ^ v5)))();
}

uint64_t sub_1BCAD7528@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(void *)(&a28 + a1 - 1540596941) = 0x8080808080808080;
  return (*(uint64_t (**)(uint64_t))(v30
                                            + 8
                                            * ((494
                                              * ((v28 & 0x38) - (unint64_t)(v29 + 1492) == -1710)) ^ v29)))((v29 + 1492) - 1710);
}

uint64_t sub_1BCAD7580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8 * (((a5 + ((v5 + 198377219) | 0x54200A0E) - 14) * (v6 == 57)) ^ v5)))(4294925278);
}

uint64_t sub_1BCAD75C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (int)((((v2 + 1315494282) & 0xB19727D5 ^ 0x3CF)
                                                                     * (v3 == 984896845)) ^ (v2 - 206))))(a1, a2, 3310030484);
}

uint64_t sub_1BCAD7618()
{
  int v3 = v1 - (((v1 << ((v2 - 69) ^ 6)) + 1281840126) & 0x5CBD204A) + 345127460;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((29
                                * (((((v2 - 1788) | 0x30C) - 906029926) & (2 * v3) ^ 0x48BD0042)
                                 + (v3 ^ 0x4AA11BDE)
                                 - 1151861032 == 542608083)) ^ v2)))();
}

uint64_t sub_1BCAD76BC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 155470857) & 0x9444DBF) - 1017) ^ 0x1BE) * (v1 == 0xB216C343)) ^ (v0 - 124))))();
}

uint64_t sub_1BCAD7720@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W6>, int a5@<W7>, int a6@<W8>, int8x16_t a7@<Q2>)
{
  uint64_t v11 = a3 - 32 + (((a1 ^ a6) * a4) ^ v9);
  int8x16_t v12 = *(int8x16_t *)(v8 + v11 - 15);
  int8x16_t v13 = *(int8x16_t *)(v8 + v11 - 31);
  uint64_t v14 = v7 + v11;
  *(int8x16_t *)(v14 - 15) = veorq_s8(v12, a7);
  *(int8x16_t *)(v14 - 31) = veorq_s8(v13, a7);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a2 == 32) * a5) ^ a1)))();
}

uint64_t sub_1BCAD772C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v8 = 4 * (v3 - 583743006);
  unsigned int v9 = *(_DWORD *)(v5 + 4 * (v3 - 583743007));
  int v10 = (((v9 >> 30) ^ 1) + 1135927250 - 4 * (v9 >> 31)) ^ v9;
  int v11 = ((1566083941 * v10 + 1135927250 - ((-1162799414 * v10) & a3)) ^ *(_DWORD *)(v5 + v8)) - v3;
  *(_DWORD *)(v5 + v8) = v11 - ((2 * v11 + 1167486012) & a3) + 1719670256;
  unint64_t v12 = 1224239923
      * ((~((v7 - 192) | 0x46B32B4FA429D983) + ((v7 - 192) & 0x46B32B4FA429D983)) ^ 0x911661D9A965DBABLL);
  *(void *)(v7 - 184) = (v3 - 1400727434) ^ v12;
  *(void *)(v7 - 176) = v12 ^ 0xCF4DCE93;
  *(_DWORD *)(v7 - 168) = v12 + v4 + 2104631778;
  *(_DWORD *)(v7 - 164) = 1 - v12;
  int v13 = ((v4 - 1518279339) & 0xE5E6FF82) + v12;
  LODWORD(v12) = v4 - 1518279339 + v12;
  *(_DWORD *)(v7 - 160) = v13;
  *(_DWORD *)(v7 - 156) = v12;
  *(_DWORD *)(v7 - 188) = v12 + 35;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 + 1458)))(v7 - 192);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v7 - 192)))(v14);
}

uint64_t sub_1BCAD788C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11)
{
  if (v12 + a9 >= 0) {
    unsigned int v14 = v12 + a9;
  }
  else {
    unsigned int v14 = -(v12 + a9);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8 * ((46 * (v14 > ((v11 - 1813836257) & 0x6C1CF7DF ^ 0x78Cu))) ^ v11)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1BCAD78D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8 * ((60 * (((v13 - 148626407) & 0x8DBDAFF ^ 0x1E8022C7u) + a12 < 0x7FFFFFFE)) ^ v13)))();
}

uint64_t sub_1BCAD7938(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8
                                                              + 8
                                                              * (((a4 + a6 + ((v7 - 1924072209) & 0x72AF0372) - 786 - 593)
                                                                * (v6 == 63)) ^ v7)))(a1, a2, -2103820122);
}

uint64_t sub_1BCAD7984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v13 = ((unint64_t)&a10 ^ 0xDFFFFDF7F5B5FFFFLL)
      + 0x7A6FA79F3F6FC801
      + ((2 * (void)&a10) & 0xBFFFFBEFEB6BFFF0);
  a10 = v11 + 37 * (v10 ^ 0x17Au) - 630;
  *(unsigned char *)(a2 + a10) = (v13 ^ 0xBA) * (v13 + 17);
  unsigned int v14 = *(uint64_t (**)(void, uint64_t))(v12 + 8 * ((233 * (a10 == 0)) ^ v10));
  return v14(v14, a2);
}

uint64_t sub_1BCAD7A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((1589 * (a19 - 1772733383 + ((v19 + a6 - 136) | 0x88u) - 136 < 0x10)) ^ (v19 + a6))))();
}

uint64_t sub_1BCAD7A60(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v10 = (int8x16_t *)((char *)&STACK[0x670] + STACK[0x370] - 0x265CB198B5761BC1);
  v10[-12] = veorq_s8(*v8, (int8x16_t)xmmword_1BCB19A10);
  STACK[0x610] += 32;
  STACK[0x620] = a1;
  STACK[0x618] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (int)(((((v7 - 301) ^ 0xFFFFFEC3) + v7 + 4) * (&v10[-12] != (int8x16_t *)a1)) | v7)))(a1, 91, a3, a4, a5, a6, a7);
}

void sub_1BCAD7AE0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1759421093 * ((-870162447 - (a1 | 0xCC225FF1) + (a1 | 0x33DDA00E)) ^ 0x80A0105A);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1BCAD7BA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unsigned int a9)
{
  BOOL v11 = a9 < 0x6FF7F2FB;
  if (v11 == (a1 + 1362251350) < 0x6FF7F2FB) {
    BOOL v11 = a1 + 1362251350 < a9;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (int)((v11 * (((v9 + 411092213) & 0xE77F3A77) - 18)) ^ v9)))();
}

void sub_1BCAD7C18()
{
  if (v0 == 1076394663) {
    int v1 = 984896845;
  }
  else {
    int v1 = -984936811;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_1BCAD7C7C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((239 * (a3 + v4 + v3 - 1534524098 >= ((v3 + 1321337499) & 0xB13DFD2D ^ 0x120))) ^ v3)))();
}

uint64_t sub_1BCAD7CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * (v5 ^ (98 * (v4 != 0)))))(a1, a2, a3, a4);
}

uint64_t sub_1BCAD7D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  int v27 = v23 - 1845491596 + v25 + 1527;
  BOOL v28 = v27 + 874373699 < (a23 + 839371773);
  if (a23 + 839371773 < (((v24 ^ 0x350) + a5) & 0xEBC491FF ^ 0x90F8B17F) != v27 + 874373699 < (v24 ^ 0x350u)
                                                                                             - 1862751535)
    BOOL v28 = a23 + 839371773 < (((v24 ^ 0x350) + a5) & 0xEBC491FF ^ 0x90F8B17F);
  return (*(uint64_t (**)(void))(v26 + 8 * ((114 * !v28) ^ ((v24 ^ 0x350) - 876))))();
}

uint64_t sub_1BCAD7D40()
{
  LODWORD(STACK[0x580]) = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((89 * (v0 ^ 0x263)) ^ 0x5FA) * v2) ^ (v0 + 96))))();
}

uint64_t sub_1BCAD7D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v20 = a18 - 874675926;
  if (a18 - 874675926 < 0) {
    int v20 = 874675926 - a18;
  }
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (int)(((((v20 ^ (v18 + 1948941494))
                                                     + ((2 * v20) & 0xE854FDBC)
                                                     - 1074266120
                                                     + ((v18 + 861) ^ 0xCBDD84AC)) >> 31)
                                                   * (((v18 + 32) | 0x81) ^ 0x28A)) ^ (v18 + 861))))(1840987181);
}

uint64_t sub_1BCAD7E1C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(&a28 + a1 - 1540596941) = 0x80;
  return (*(uint64_t (**)(void))(v29 + 8 * ((1439 * ((unint64_t)(a1 - 1540596940) < 0x38)) ^ (v30 + v28 + 593))))();
}

uint64_t sub_1BCAD7E64(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1723 * (v3 + 1 == v4 + 48)) ^ a3)))();
}

uint64_t sub_1BCAD7F40@<X0>(uint64_t a1@<X1>, int a2@<W3>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + a3 + a1) = 0x80;
  return (*(uint64_t (**)(void))(v21 + 8 * ((1777 * ((unint64_t)(a3 + 1 + a1) < 0x38)) ^ (v20 + a2))))();
}

uint64_t sub_1BCAD7F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = STACK[0x380];
  unint64_t v8 = STACK[0x268];
  unint64_t v9 = STACK[0x540];
  STACK[0x4D8] = *(void *)(v6 + 8 * (v5 - 574));
  STACK[0x510] = v7 + ((v5 + 733) | 0x1Au) - 1259;
  STACK[0x5E0] = v9;
  if (v9) {
    BOOL v10 = v8 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  int v11 = v10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * ((44 * v11) ^ (v5 + 890))))(a1, a2, a3, a4, a5, 48, 1037364600, 2296066754);
}

void sub_1BCAD7FD0(uint64_t a1)
{
  int v1 = 1178560073 * ((2 * (a1 & 0x78F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x5B51E979A7EFF0C1) + 846865658;
  unsigned int v3 = *(_DWORD *)(a1 + 4) - v1 + 636093542;
  int v4 = (v3 < 0x9B22B54C) ^ (v2 < 0x9B22B54C);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = v3 < 0x9B22B54C;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1BCAD80DC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v6 = a1 + 2007714815;
  int v7 = a1 - 823;
  uint64_t v8 = 4 * (int)((v6 & 0x8854AEF6) - 742);
  unsigned int v9 = (*(_DWORD *)(*(void *)(a2 - 0x7EC954F575262799) + v8) ^ 0x9244C3D2) + 1;
  *(_DWORD *)(*(void *)(a2 - 0x7EC954F575262799) + v8) = v9 + v3 - (v5 & (2 * v9));
  BOOL v10 = v4 - 1038660089 > -406251558;
  if (v4 - 1038660089 >= 1741232089) {
    BOOL v10 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((437 * v10) ^ v7)))(2287251190);
}

uint64_t sub_1BCAD81BC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((((v3 - 1715) ^ 0xCBDD804C) + v2) * (v1 - 874675926)) >> 31)
                                     * (((2 * v3) ^ 0x1154) - 352)) ^ v3)))();
}

uint64_t sub_1BCAD8200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((a7 + ((v8 + 151) ^ 0x50D) + ((v8 + 2113621726) & 0xFFF6FDBF) - 1389) * (v7 == 63)) ^ (v8 + 151))))();
}

uint64_t sub_1BCAD825C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1008 * (v1 == ((v0 - 606) ^ (v3 - 2)))) ^ (v0 - 576))))();
}

uint64_t sub_1BCAD828C(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

void sub_1BCAD82B0()
{
}

uint64_t sub_1BCAD82BC()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0xA20)))();
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((v0 + 1315494282) & 0xB19727D5 ^ 0x3CF) * (v1 == 984896845)) ^ (v0 - 206))))(v3);
}

uint64_t sub_1BCAD8324@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v4 = 4 * (a2 ^ 0x147);
  LODWORD(STACK[0x54C]) = v2 + 14;
  unint64_t v5 = STACK[0x608];
  unint64_t v6 = LODWORD(STACK[0x558]);
  STACK[0x530] = v6;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * ((116 * (v6 == ((v4 - 54) ^ v4 ^ 0xB5 ^ 0x8F))) ^ v4)))(a1, v5);
}

uint64_t sub_1BCAD8554()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((446
                                * ((((*(unsigned __int8 *)(v3 + 8) - 5) << (v2 + 89)) & v0)
                                 + ((v2 + 102) ^ (v1 + 242) ^ (*(unsigned __int8 *)(v3 + 8) - 5)) == v1)) ^ v2)))();
}

uint64_t sub_1BCAD85A0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (qword_1E9FB7E30 + qword_1E9FB8848) ^ (unint64_t)&v7;
  qword_1E9FB8848 = 267049729 * (v2 - 0x733E1D47A735574);
  qword_1E9FB7E30 = 267049729 * (v2 ^ 0x733E1D47A735574);
  int v3 = *(_DWORD *)(a2 + 4);
  uint64_t v4 = (char *)*(&off_1F16F9FD0
               + ((v2 - 116) ^ 0x74 ^ v2 ^ 0x74u ^ byte_1BCB164A0[byte_1BCB12250[(v2 - 116) ^ 0x74 ^ v2 ^ 0x74] ^ 0x2D])
               + 121)
     - 4;
  if (v3 == 1854503561) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 1854503568)
  {
    int v5 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X2, X17 }
  }
  return 4294925278;
}

void sub_1BCAD8760()
{
}

uint64_t sub_1BCAD87C0@<X0>(int a1@<W2>, char a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v14 = (v11 + a5);
  *(unsigned char *)(a6 + v14 + 4) = *(unsigned char *)(v12 + v14) ^ *(unsigned char *)(v7 + ((v10 ^ 0x3E) & v14)) ^ *(unsigned char *)(((v10 ^ 0x3E) & v14) + v8 + 1) ^ *(unsigned char *)(a7 + ((v10 ^ 0x3E) & v14)) ^ (((v10 ^ 0x3E) & v14) * a2) ^ 0x80;
  return (*(uint64_t (**)(void))(v13 + 8 * (((v11 - 1 == (((v10 ^ a1 ^ a4) + 46) ^ v9)) * a3) ^ ((v10 ^ a1) + 566))))();
}

void sub_1BCAD8838()
{
}

void sub_1BCAD884C()
{
}

uint64_t sub_1BCAD88B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  if (a33 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v57
  }
                                                       + 8
                                                       * (((a57 == 1109409085) * ((a3 - 1256436111) & 0x4AE3B36F ^ 0x226)) | (a3 + 481))))(a18, a13);
  if (a33 != 1) {
    JUMPOUT(0x1BCAD8A0CLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v57
                                                     + 8 * ((a3 + 618) | (4 * (a57 == ((a3 + 487) ^ 0x42203F1B))))))(a18, a13);
}

uint64_t sub_1BCAD8A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((197 * (a2 + 1 == v7 + 24)) ^ a7)))();
}

uint64_t sub_1BCAD8B18()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((494
                                * (((((v0 - 126) | 0x48) ^ 0x2C9) & *(_DWORD *)(v1 - 0x5B51E979A7EFF0B9)) == v0 - 766)) ^ v0)))();
}

uint64_t sub_1BCAD8B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v21 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((v20 - 1549) ^ (1427 * ((a19 & 0x20000000) == 0))));
  return v21(a1, v21, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

void sub_1BCAD8B98()
{
}

uint64_t sub_1BCAD8D40(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1804 * ((v1 - 1717572373) < 0x28)) | (a1 - 1030))))();
}

uint64_t sub_1BCAD8E18@<X0>(int a1@<W1>, int a2@<W5>, int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v9 = (*(unsigned __int8 *)(a5 + 1128) ^ 0x80) - *(unsigned __int8 *)(v6 + 1148);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((v9 ^ a2) + a4 + (a3 & (2 * v9)) != ((((((v5 - 1825495657) & 0x6CCEDA67)
                                                                              + 2146587005) & 0x800DAF57)
                                                                            - 243) | 0x40)
                                                                          + v7)
                                     * a1) ^ (((v5 - 1825495657) & 0x6CCEDA67) + 2146587005) & 0x800DAF57)))();
}

uint64_t sub_1BCAD8E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((59 * (((v18 - 1854503555) & 0xFFFFFFFC) - a16 != ((v16 - 1448) | 0x284) - 1854504250)) ^ v16)))();
}

uint64_t sub_1BCAD8ED8(char a1, int8x16_t a2, int8x8_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v57 = a7 - 8;
  uint64_t v58 = (a6 + v57);
  v60.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)v57) & 0xF;
  v60.val[0].i64[1] = (v55 + (_BYTE)v57) & 0xF;
  v60.val[1].i64[0] = (v54 + (_BYTE)v57) & 0xF;
  v60.val[1].i64[1] = (v53 + (_BYTE)v57) & 0xF;
  v60.val[2].i64[0] = (v49 + (_BYTE)v57) & 0xF;
  v60.val[2].i64[1] = (v52 + (_BYTE)v57) & 0xF;
  v60.val[3].i64[0] = (a1 + (_BYTE)v57) & 0xF;
  v60.val[3].i64[1] = (v50 + (_BYTE)v57) & 0xF;
  *(int8x8_t *)(a5 + v58) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v46 + (v58 & 0xF) - 7), *(int8x8_t *)(a5 + v58)), veor_s8(*(int8x8_t *)((v58 & 0xF) + v48 - 5), *(int8x8_t *)((v58 & 0xF) + v47 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, a2), a3)));
  return (*(uint64_t (**)(void))(a46 + 8 * (((v51 == v57) * v56) ^ a9)))();
}

uint64_t sub_1BCAD8EE0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((47 * (v0 > ((4 * v1) ^ 0x1CC0u) - 762)) ^ (v1 - 430))))();
}

void sub_1BCAD8F10(int a1@<W8>)
{
  int v2 = a1 + 1660534271;
  if (*v1 + 1272807722 < 0) {
    int v2 = 1588180277 - a1;
  }
  *int v1 = *v1 - 1624357274 + v2;
  JUMPOUT(0x1BCAD8FB0);
}

uint64_t sub_1BCAD9000@<X0>(int a1@<W8>)
{
  BOOL v6 = a1 + 547082970 > 9 * (v3 ^ 0x515) + 190052220 || a1 + 547082970 < v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v6 * v4) ^ v3)))();
}

void sub_1BCAD9054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  *int v39 = -361.75;
  (*(void (**)(uint64_t))(v38 + 8 * (v37 ^ 0x81E)))(a37);
  vld1q_dup_f32(v39);
  JUMPOUT(0x1BCAD9134);
}

uint64_t sub_1BCAD91FC(int a1, int a2, int a3)
{
  int v6 = v3 - 1037752191;
  if ((v6 + 1) > 0x40) {
    int v7 = v6 + 1;
  }
  else {
    int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 - 564) * ((a3 - a1 - a2 + v7) > 0xE)) ^ v4)))();
}

uint64_t sub_1BCAD929C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((1557
                                                       * (*(void *)(v2 + 8 * (v1 - 164))
                                                        - 8
                                                        - a1
                                                        - (((v1 - 271) | 0x386u) ^ 0x288uLL)
                                                        + 335 < 0x20)) ^ v1)))(3282763923, 1012203519);
}

uint64_t sub_1BCAD9318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v52 = *(void *)(a1 + 24);
  *(int8x16_t *)(v50 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 16) - 0x31BC703A95C2A15CLL), (int8x16_t)xmmword_1BCB19A50);
  if (v51) {
    BOOL v53 = v52 == 0x198EA10384B062FLL;
  }
  else {
    BOOL v53 = 1;
  }
  int v54 = v53;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((((((5 * (a5 ^ 0x5F9)) ^ v54) & 1) == 0) * ((a5 ^ 0x7F) - 1473)) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

void sub_1BCAD93A0()
{
}

uint64_t sub_1BCAD93AC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (v2 ^ (407
                                     * ((v3 - 535412524 + ~(a2 + LODWORD(STACK[0x3B8]) - 201956045)) > 2)))))();
}

uint64_t sub_1BCAD9450()
{
  int v5 = v0 + 1515349835;
  int v6 = 3804331 * ((~((v4 - 192) | 0xF6131147) + ((v4 - 192) & 0xF6131147)) ^ 0xF3721DEE);
  *(_DWORD *)(v4 - 192) = v6 + v1 + 452;
  *(_DWORD *)(v4 - 188) = v5 ^ v6;
  *(void *)(v4 - 184) = v2;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0xA05)))(v4 - 192);
  return ((uint64_t (*)(uint64_t))STACK[0x488])(v7);
}

uint64_t sub_1BCAD94E0@<X0>(int8x16_t *a1@<X7>, int a2@<W8>)
{
  *a1 = veorq_s8(*(int8x16_t *)(v3 + v2), v5);
  return (*(uint64_t (**)(void))(v4 + 8 * (a2 + 884)))();
}

uint64_t sub_1BCAD9520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * ((((v5 + 893) ^ 0x1CD) * (v6 == v8)) ^ (v5 - 534))))(14209774, 4294964085, a3, a4, a5, 4294960874, 1124, 1511);
}

uint64_t sub_1BCAD9574()
{
  BOOL v2 = ((LODWORD(STACK[0x474]) - 1854503558) ^ 0x6DC7FBADEEEFFE36)
     - 0x6DC7FBADC2DDF467
     + (((3 * ((v0 - 2) ^ 0x3C1u)) ^ 0x1DDDFF884) & (2 * (LODWORD(STACK[0x474]) - 1854503558))) == 739379663;
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * v2) | (8 * v2)) ^ (v0 - 2))))();
}

uint64_t sub_1BCAD9618()
{
  BOOL v4 = v0 < 0x2C1209CF;
  if (v4 == (unint64_t)(v1 - 0x73084E615BAA9028) < 0x2C1209CF) {
    BOOL v4 = v1 - 0x73084E615BAA9028 < v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ (1512 * v4))))();
}

uint64_t sub_1BCAD9674()
{
  unint64_t v2 = STACK[0x298];
  unint64_t v3 = STACK[0x3E0];
  STACK[0x3C0] = STACK[0x298] + 2353;
  STACK[0x3B8] = v3 + 49;
  STACK[0x3B0] = v2 + 2333;
  STACK[0x3A8] = v3 + 29;
  STACK[0x380] = v2 + 2313;
  STACK[0x370] = v3 + 9;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 ^ 0x689) - 564)))();
}

uint64_t sub_1BCAD96D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,void *a26,unint64_t a27,uint64_t a28,int *a29)
{
  if (v30 <= 0x4EC19D48) {
    int v34 = *a29 + 1;
  }
  else {
    int v34 = v32;
  }
  *a29 = v34;
  int v35 = (((v29 >> 11) ^ 0x8769B) + 1135927250 - ((((v29 >> 11) ^ 0x8769B) << (a25 - 85)) & 0x29BFA4)) ^ v29;
  unsigned int v36 = (((v35 << 7) & 0x9D2C5680 ^ v35) << 15) & 0xEFC60000 ^ (v35 << 7) & 0x9D2C5680 ^ v35;
  *(_DWORD *)(*a26 + a27) ^= v36 ^ (v36 >> 18);
  return (*(uint64_t (**)(void))(v31 + 8 * ((v33 - 2033986655) ^ (89 * (a27 < 0x1FC)))))();
}

uint64_t sub_1BCAD9854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                + 8
                                                                                * ((940
                                                                                  * (*(_DWORD *)(a17
                                                                                               - 0x5B51E979A7EFF0B5) == ((v18 - 1184) ^ 0x3AB4522D ^ (v18 - 104973920) & 0x641C65F))) ^ (v18 - 1542))))(a1, a2, a3, a4, a5);
}

uint64_t sub_1BCAD98C8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((((59 * (((a2 - 1193) | 0x409) ^ 0x549)) ^ 0x19)
                                              * ((unint64_t)(v4 - v2) < 0x20)) ^ a2)))(v3);
}

uint64_t sub_1BCAD9934(uint64_t result)
{
  unint64_t v1 = 1224239923
     * ((-2 - ((~result | 0xA9794F52C0023E71) + (result | 0x5686B0AD3FFDC18ELL))) ^ 0x8123FA3B32B1C3A6);
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v3 = *(void *)(result + 16);
  unint64_t v4 = v2 ^ v1;
  BOOL v5 = v3 == v2;
  BOOL v6 = (v3 ^ v1) > v4;
  if ((*(_DWORD *)(result + 28) + v1)) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 32;
  if (!v7) {
    uint64_t v8 = 36;
  }
  *(_DWORD *)uint64_t result = (*(_DWORD *)(result + v8) - v1) ^ (*(_DWORD *)(result + 4) - v1);
  return result;
}

void sub_1BCAD99E0(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 108757529 * (((a1 ^ 0x1E96025E | 0x16634A81) - ((a1 ^ 0x1E96025E) & 0x16634A81)) ^ 0xE8692AF4);
  uint64_t v2 = (char *)*(&off_1F16F9FD0 + (v1 ^ 0x342)) - 4;
  uint64_t v3 = *(void *)(a1 + 8);
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0xBBA)])((char *)*(&off_1F16F9FD0 + (v1 & 0x7F375C18)) - 4, sub_1BCAF639C);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1BCAD9AD0()
{
  uint64_t v3 = (unsigned int *)STACK[0x2C8];
  (*(void (**)(void, unint64_t *, uint64_t))(v2 + 8 * (v0 + 1274)))(*(unsigned int *)STACK[0x2C8], &STACK[0x5B8], 2048);
  unint64_t v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((126
                             * ((((v0 - 814) ^ ((*(unsigned int (**)(void, unint64_t *, void, uint64_t))(v2 + 8 * (v0 + 1310)))(*v3, &STACK[0x428], LODWORD(STACK[0x5AC])+ ((v0 - 814) ^ 0x44C ^ (v1 - 1096)), 1) == 0)) & 1) == 0)) ^ v0));
  return v4();
}

uint64_t sub_1BCAD9B84(uint64_t a1, unsigned int a2)
{
  BOOL v3 = (*(uint64_t (**)(void, uint64_t))(v2 + 16648))(a2, 1252601147) == 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((79 * v3) ^ 0x282u)))(4294925268);
}

uint64_t sub_1BCAD9BC8(uint64_t a1)
{
  int v1 = 3804331 * (((a1 ^ 0x9A32C815 | 0x394EC663) - ((a1 ^ 0x9A32C815) & 0x394EC663)) ^ 0x59E2FD20);
  int v2 = *(_DWORD *)a1 - v1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = (*(_DWORD *)(a1 + 4) ^ v1) - 1808134091;
  int v5 = v4
     + (*(_DWORD *)(v3 - 0x781B11C067843F56) ^ 0x202E75F1)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0x781B11C067843F56) ^ 0x202E75F1))) & 0x405CEBE2)
     + 539915761;
  *(_DWORD *)(v3 - 0x781B11C067843F56) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + (v2 ^ 0x4B0))
                              + 8 * ((728 * ((v5 ^ 0x202E75F1u) < v4)) ^ v2)
                              - 4))();
}

void mm0Euuzhc()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v0 = *(&off_1F16F9FD0
       + (dword_1E9FB8A08 ^ 0x74u ^ qword_1E9FB7E30 ^ byte_1BCB19710[byte_1BCB163A0[dword_1E9FB8A08 ^ 0x74 ^ qword_1E9FB7E30] ^ 0x29])
       - 40);
  int v1 = (char *)off_1F16FA268 - 12;
  int v2 = (char *)off_1F16FA130 - 4;
  uint64_t v3 = *(&off_1F16F9FD0
       + (*((unsigned char *)off_1F16FA130
          + (*((unsigned __int8 *)off_1F16FA268 + ((qword_1E9FB7E30 + *v0) ^ 0x74u) - 12) ^ 0x23u)
          - 4) ^ (qword_1E9FB7E30 + *v0) ^ 0x74u)
       - 92);
  unint64_t v4 = (*v3 + *v0) ^ (unint64_t)&v6;
  void *v0 = 267049729 * v4 - 0x733E1D47A735574;
  void *v3 = 267049729 * (v4 ^ 0x733E1D47A735574);
  v7[0] = 108757529 * ((2 * (v7 & 0x3E399E8) - v7 - 65247726) ^ 0x1C800439) - 504207030;
  LOBYTE(v3) = (*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0x74;
  int v5 = (char *)*(&off_1F16F9FD0
               + (dword_1E9FB8A08 ^ 0x74u ^ qword_1E9FB7E30 ^ byte_1BCB166A0[byte_1BCB12450[dword_1E9FB8A08 ^ 0x74 ^ qword_1E9FB7E30] ^ 0xC8])
               + 40)
     - 4;
  (*(void (**)(_DWORD *))&v5[8
                                      * (v3 ^ v2[v1[v3] ^ 0x23])
                                      + 15448])(v7);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAD9EB0@<X0>(uint64_t a1@<X2>, int a2@<W3>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + a3 + a1) = 0x80;
  return (*(uint64_t (**)(void))(v21 + 8 * ((1472 * ((unint64_t)(a3 + 1 + a1) < 0x40)) ^ (a2 + v20 + 95))))();
}

uint64_t sub_1BCAD9EF0@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  uint64_t v5 = a1 - 1540596941;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v3 + ((v1 + 151665785) | 0x740CC0) - 142)
                                * ((unint64_t)(v6 - v4 + 1540596941) > 7)) ^ v1)))();
}

uint64_t sub_1BCAD9F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, int a17, int a18, unint64_t *a19)
{
  int v22 = 1759421093 * ((&a14 + 291676884 - 2 * ((unint64_t)&a14 & 0x1162A2D4)) ^ 0xA21F1280);
  a16 = a10;
  a14 = -549621875 - v22;
  a19 = &STACK[0x38DF4D133EEC7294];
  a17 = v22 ^ 0x4DFC9E82;
  a18 = v22 + v21 - 2024874367;
  uint64_t v23 = (*(uint64_t (**)(int *))(v20 + 8 * (v21 + 813)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((a15 != v19) * (2 * (v21 ^ 0x5A0) - 299)) ^ v21)))(v23);
}

uint64_t sub_1BCADA040()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 + 1317) | (32 * (STACK[0x4B0] == 0)))))();
}

uint64_t sub_1BCADA070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((21 * (((v8 == v6) ^ (v7 ^ (a6 - 99))) & 1)) ^ v7)))();
}

void sub_1BCADA0A4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) - 235795823 * (((a1 | 0xEB3D4C35) - (a1 | 0x14C2B3CA) + 348304330) ^ 0x7F90056C);
  __asm { BRAA            X9, X17 }
}

void sub_1BCADA1F4()
{
  int v3 = *v9;
  if (((unint64_t)*v9 & 3) == (v8 ^ 0x774B77E1 ^ ((v8 - 2001433646) | 0x41u) ^ 0x3DELL))
  {
    uint64_t v4 = *(&off_1F16F9FD0 + v8 - 2001433823);
    if (!*v4)
    {
      int v5 = 11 * (v8 ^ 0x774B753F);
      *uint64_t v4 = v3;
      *(_DWORD *)*(&off_1F16F9FD0 + (v8 ^ 0x774B75FE)) = 255;
      *v3 |= ~v3[*v3 & 0x3ELL] << 16;
      v3[4] |= ~v3[v3[4] & 0x3ELL] << 16;
      v3[8] |= ~v3[v3[8] & (v5 - 1093)] << 16;
      v3[12] |= ~v3[v3[12] & 0x3ELL] << 16;
      v3[16] |= ~v3[v3[16] & 0x3ELL] << 16;
      v3[20] |= ~v3[v3[20] & 0x3ELL] << 16;
      v3[24] |= ~v3[v3[24] & 0x3ELL] << 16;
      v3[28] |= ~v3[v3[28] & 0x3ELL] << 16;
      v3[32] |= ~v3[v3[32] & 0x3ELL] << 16;
      v3[36] |= ~v3[v3[36] & 0x3ELL] << 16;
      v3[40] |= ~v3[v3[40] & 0x3ELL] << 16;
      v3[44] |= ~v3[v3[44] & 0x3ELL] << 16;
      v3[48] |= ~v3[v3[48] & 0x3ELL] << 16;
      v3[52] |= ~v3[v3[52] & 0x3ELL] << 16;
      v3[56] |= ~v3[v3[56] & 0x3ELL] << 16;
      v3[60] |= ~v3[v3[60] & 0x3ELL] << 16;
      (*(void (**)(unsigned char *, void, uint64_t))(v0 + 8 * (v8 ^ 0x774B7D22)))(v10, 0, 1024);
      *(void *)(v2 - 152) = v10;
      BOOL v6 = (((v5 + 100858760) | 0x80C0D190) ^ (v1 - 1704)) + v5 - 460 == 32;
      __asm { BRAA            X12, X17 }
    }
  }
  *int v7 = -984936718;
}

uint64_t sub_1BCADA538(uint64_t a1, uint64_t a2, unsigned int a3, int a4, int a5, int a6)
{
  unint64_t v15 = v7
      + a1
      + (v9 ^ 0x6DBB3C2Du)
      + v11
      * (unint64_t)(((v12 - 394) | 0x20) ^ (v9 - 928) ^ *(_DWORD *)(*v10 + 4
                                                                                              * (a6 + (v12 ^ 0x69))))
      + 168;
  *(_DWORD *)(v13 + 4 * v14) = v15 + v9 - (v8 & (2 * v15));
  unint64_t v16 = (HIDWORD(v15) ^ 0xDF734F8DF5BFF4FFLL) + ((v15 >> 31) & 0x1EB7FE9FELL) + 0x31EDFCFECE6BEF5DLL;
  LODWORD(v15) = a6 + 1 + a4 + 1635;
  int v17 = (a3 > 0x35637E06) ^ ((int)v15 < -895712775);
  BOOL v18 = (int)v15 < a5;
  if (v17) {
    BOOL v18 = a3 > 0x35637E06;
  }
  return (*(uint64_t (**)(unint64_t))(v6 + 8 * (v12 ^ (v18 | (4 * v18)))))(v16);
}

uint64_t sub_1BCADA544(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  int v2 = 1755732067 * (a1 ^ 0xDEC6BDDB);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = *(_DWORD *)(a1 + 16) - v2;
  unsigned int v9 = 235795823 * ((&v11 & 0x3A4B01DF | ~(&v11 | 0x3A4B01DF)) ^ 0x5119B779);
  int v16 = v9 ^ (v3 - 368398170);
  uint64_t v11 = v7;
  uint64_t v17 = v5;
  uint64_t v13 = v6;
  uint64_t v14 = v4;
  unsigned int v12 = v9 + (v8 ^ 0xF6FA5BB2) - 26286152 + ((2 * v8) & 0xE7FF7AFA ^ 0x20B489A);
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F16F9FD0 + (v3 ^ 0x15F557A9))
                                                + 8 * (v3 ^ 0x15F55F77)
                                                - 4))(&v11);
  *(_DWORD *)(a1 + 40) = v15;
  return result;
}

uint64_t sub_1BCADA698(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v4 < 0x20) ^ (a4 - 48)) & 1) * (a4 - 1128)) ^ a4)))();
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCADA708@<X0>(int a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  BOOL v31 = a2 != (v27 ^ (a1 - 457)) + 1731558650 && a27 - v29 == ((v27 + 2068011536) & 0x84BCA7FE) + 559755423;
  return (*(uint64_t (**)(void))(v28 + 8 * ((1987 * v31) ^ v27)))();
}

uint64_t sub_1BCADA774@<X0>(int a1@<W3>, unsigned int a2@<W6>, int a3@<W7>, unsigned int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q1>, int8x16_t a7@<Q4>, int8x16_t a8@<Q5>, int8x16_t a9@<Q6>, int8x16_t a10@<Q7>)
{
  a6.i64[0] = *(void *)(v11 + 4);
  a6.i32[2] = *(_DWORD *)(v11 + 12);
  int8x16_t v16 = vextq_s8(a5, a6, 0xCuLL);
  int8x16_t v17 = a6;
  v17.i32[3] = *(_DWORD *)(v11 + 16);
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, a8), vandq_s8(v16, a7)), 1uLL), a9);
  v19.i32[0] = *(_DWORD *)(v13 + 4 * (*(_DWORD *)(v11 + 4) & 1));
  v19.i32[1] = *(_DWORD *)(v13 + 4 * (*(_DWORD *)(v11 + 8) & 1));
  v19.i32[2] = *(_DWORD *)(v13 + 4 * (*(_DWORD *)(v11 + 12) & (((a4 + a1) & a2) - 124)));
  v19.i32[3] = *(_DWORD *)(v13 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)uint64_t v11 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v11 - 908), v19), v15), (int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), a10)), v14));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v10 == 4) * a3) ^ a4)))();
}

void sub_1BCADA780(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 235795823 * ((-969832657 - (a1 | 0xC631872F) + (a1 | 0x39CE78D0)) ^ 0xAD633189);
  int v2 = (char *)*(&off_1F16F9FD0 + v1 - 337) - 4;
  uint64_t v3 = *(void *)(a1 + 8);
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * v1 + 13240])((char *)*(&off_1F16F9FD0 + (v1 ^ 0x1F1)) - 4, sub_1BCAF639C);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCADA84C(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((63
                                * ((((v4 + 1303) ^ (((v6 << (((v4 + 97) & 0x37) - 47)) & v2) + (v6 ^ v3) == v3)) & 1) == 0)) ^ v4)))();
}

uint64_t sub_1BCADA8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v42 = 7 * (v38 ^ 0xF5);
  *(unsigned char *)(a6 + (v37 - 996279120)) = *(unsigned char *)((v42 - 170) + a37 + a5 + v39) ^ 0x80;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * ((((v37 - 996279119) < 0x40) * v40) ^ v42)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1BCADA918@<X0>(int a1@<W3>, int a2@<W4>, unsigned int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  BOOL v12 = v6 < v7;
  *(unsigned char *)(v9 - 0x781B11C067843F9ALL + (v5 + v10)) = *(unsigned char *)(STACK[0x5A0]
                                                                              + (a2 + a5 + 612));
  unsigned int v13 = a4 + a5 + 613;
  int v14 = v12 ^ (v13 < a3);
  BOOL v15 = v13 < v6;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((!v12 * a1) ^ ((v8 - 1000) | 0x6AC))))();
}

uint64_t sub_1BCADA998(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v9 = v3 - 8 + ((3 * (v7 ^ 0x25A)) ^ (a3 + 1127));
  *(void *)(v6 + v9) = *(void *)(v5 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * ((23 * (v4 == -8)) ^ v7)))();
}

void sub_1BCADA9A0()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t *)*(&off_1F16F9FD0
                  + ((qword_1E9FB7E30 - dword_1E9FB8A10) ^ 0x74u ^ byte_1BCB165A0[byte_1BCB12350[(qword_1E9FB7E30 - dword_1E9FB8A10) ^ 0x74] ^ 0xDD])
                  + 2);
  int v1 = (char *)off_1F16FA268 - 12;
  int v2 = (char *)off_1F16FA130 - 4;
  int v3 = (uint64_t *)*(&off_1F16F9FD0
                  + (*((unsigned char *)off_1F16FA130
                     + (*((unsigned __int8 *)off_1F16FA268 + ((qword_1E9FB7E30 - *v0) ^ 0x74u) - 12) ^ 0xBCu)
                     - 4) ^ (qword_1E9FB7E30 - *v0) ^ 0x74u)
                  - 33);
  uint64_t v4 = *v0 - (void)&v9 + *v3;
  uint64_t v5 = 267049729 * v4 - 0x733E1D47A735574;
  uint64_t v6 = 267049729 * (v4 ^ 0x733E1D47A735574);
  uint64_t *v0 = v5;
  uint64_t *v3 = v6;
  *(_DWORD *)*(&off_1F16F9FD0
             + (*((unsigned char *)off_1F16FA1C8
                + (*((unsigned __int8 *)off_1F16FA430
                   + (*(_DWORD *)v0 ^ 0x74u ^ v6)
                   - 12) ^ 0x3Au)) ^ *(_DWORD *)v0 ^ 0x74u ^ v6)
             - 135) = 984896845;
  LOBYTE(v6) = (*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0x74;
  int v7 = (char *)*(&off_1F16F9FD0
               + (dword_1E9FB8A10 ^ 0x74u ^ qword_1E9FB7E30 ^ byte_1BCB164A0[byte_1BCB12250[dword_1E9FB8A10 ^ 0x74 ^ qword_1E9FB7E30] ^ 0x2D])
               + 121)
     - 4;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))&v7[8
                                                      * (*((unsigned char *)off_1F16FA508
                                                                          + (*((unsigned __int8 *)off_1F16FA1F0
                                                                             + v6
                                                                             - 12) ^ 0xE8u)
                                                                          - 4) ^ v6)
                                                      + 16312])(512, 1509315540);
  *(void *)*(&off_1F16F9FD0
             + (*(_DWORD *)v0 ^ 0x74u ^ *(_DWORD *)v3 ^ v2[v1[*(_DWORD *)v0 ^ 0x74 ^ *(_DWORD *)v3] ^ 0xBC])
             + 46) = v8;
  __asm { BRAA            X8, X17 }
}

void sub_1BCADAC04(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x5C210B0457DF3177) = v2;
  *(_DWORD *)(v1 + 40) = 984896845;
}

uint64_t sub_1BCADAC60(uint64_t result)
{
  return sub_1BCAD518C(result);
}

uint64_t sub_1BCADACB0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((v2 ^ v0 ^ ((v3 - 128) | 0x430u)) >> 31) | (8
                                                                                  * ((v2 ^ v0 ^ ((v3 - 128) | 0x430u)) >> 31))) ^ ((v3 - 128) | 0x430))))();
}

uint64_t sub_1BCADACF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(void *)(a1 + (a2 - v7)) = *(void *)(v8 + (a2 - v7));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 + v11 - 746 == v9) * a7) ^ v10)))();
}

void sub_1BCADAD28()
{
  *(_DWORD *)(v1 + 8) = v0 - 4;
}

uint64_t sub_1BCADAD30()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((v1 - 1676 + ((v1 - 77222652) & 0x49A4F7F) - 499) * ((v0 ^ 0xEu) < 8)) ^ v1)))();
}

uint64_t sub_1BCADAD74@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((79 * (*(_DWORD *)(v1 + 4 * (((v3 + 1579468496) & 0xA1DB33FE ^ a1) + v4)) == v2)) ^ (v3 - 1329))))();
}

uint64_t sub_1BCADADC4@<X0>(int a1@<W7>, _OWORD *a2@<X8>)
{
  *(_OWORD *)(v3 + (v2 + v7)) = *a2;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v5 + v4 - 1654) & 0x1FFFFFFF0) - (v6 + 32) == -561) * a1) ^ (v6 + 201))))();
}

uint64_t sub_1BCADAE28()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((457
                                * ((((2 * v3) ^ 0xC2 ^ (v0 + 208)) & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v1) != ((30 * (v3 ^ 0xF0)) ^ (v1 + 242)))) ^ v3)))();
}

uint64_t sub_1BCADAE80@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8 * (int)(((a1 == 24) * (((v1 + 1535433909) & 0xA47B227E) - 606)) | v1));
  STACK[0x3E8] = *(void *)(v2 + 8 * (v1 - 697));
  STACK[0x3E0] = *(void *)(v2 + 8 * (v1 ^ 0x398));
  return v4();
}

uint64_t sub_1BCADAE88@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, unint64_t a4@<X8>)
{
  int v9 = a3 + 401;
  int v10 = a3 - 701;
  uint64_t v11 = v10 ^ 0x13Eu;
  int v12 = v10 | 0x550;
  uint64_t v13 = (a1 + v7 + a2);
  unint64_t v14 = v13 + a4 + 1;
  uint64_t v15 = (v12 ^ 0x7D8) & v13;
  unint64_t v16 = v4 + v15 - v13;
  unint64_t v17 = v15 + v4 + 1;
  unint64_t v18 = v15 + v6 + (v11 ^ 0x3BB) - v13;
  unint64_t v19 = v15 + v6 + 3;
  uint64_t v20 = v15 + v5;
  unint64_t v21 = v20 - v13 + 4;
  unint64_t v22 = v20 + 5;
  BOOL v24 = v17 > a4 && v16 < v14;
  if (v19 > a4 && v18 < v14) {
    BOOL v24 = 1;
  }
  int v27 = v22 > a4 && v21 < v14 || v24;
  return (*(uint64_t (**)(void))(v8 + 8 * (v9 | (8 * (v27 ^ 1)))))();
}

uint64_t sub_1BCADAF34@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((1202
                                * (*(_DWORD *)(a18
                                             + 4 * (((((v21 + 1808759888) & 0x943083EE) - 397) ^ (a1 + 48)) + v19)) == v18)) ^ (v21 + 63))))();
}

void sub_1BCADAF90(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 4) = -984936840;
}

uint64_t sub_1BCADAFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((v12 + ((a8 + v9 - 142496636) | 0x87E4CC6) - 82) * (v10 == v8)) ^ v9)))();
}

uint64_t sub_1BCADAFE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (a3 | (4 * (a8 + 1 == v9 + 80)))))();
}

uint64_t sub_1BCADB098@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  int v9 = (a3 - 245) | 0x141;
  *(unsigned char *)(*(void *)(a1 + 24) + (v4 + a4)) = *(_DWORD *)(*v8 + 4 * (int)((v9 ^ 0xACA80DD7) + a2)) ^ v7;
  return (*(uint64_t (**)(void))(v5 + 8 * (v9 ^ (2 * (v4 - 1 == v6)))))();
}

uint64_t sub_1BCADB0CC()
{
  int v6 = ((((v5 - 144) ^ 0x2B1E29FD) - 2094765727 - 2 * (((v5 - 144) ^ 0x2B1E29FD) & 0x83246961)) ^ 0xD6C5DAAE) * v4;
  *(void *)(v5 - 136) = v1;
  *(_DWORD *)(v5 - 128) = (v0 - 810746376) ^ v6;
  *(_DWORD *)(v5 - 140) = (v3 - 555) ^ v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 1380)))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((*(_DWORD *)(v5 - 144) == 58487721) * (v3 - 484)) ^ (v3 + 145))))(v7);
}

uint64_t sub_1BCADB17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v33 = v30 + v29 + 67493478;
  unsigned int v34 = v33 + ((HIDWORD(a17) - 1706) ^ 0x175);
  if (v34 <= 0x40) {
    unsigned int v34 = 64;
  }
  BOOL v35 = __CFADD__(v33 + 414, v31 + v34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((38 * v35) ^ (HIDWORD(a17) - 774))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1BCADB1F0@<X0>(int a1@<W8>)
{
  unsigned int v4 = a1 & 0xA00E173D;
  unsigned int v5 = (v4 + 1968925749) & 0x8AA492BF;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(v4 + 1303)))(v1 - 0x1A8FA111108FB322);
  STACK[0x510] -= 16;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)(((v2 == ((v5 + 66) ^ 0x3AB45729)) | (4
                                                                                       * (v2 == ((v5 + 66) ^ 0x3AB45729)))) ^ (v5 + 807))))(v6);
}

uint64_t sub_1BCADB284@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8 * ((((a2 ^ (a2 + 1592) ^ 0x698) + a2 + a3) * (a4 == v5)) ^ (a2 + a3))))(a1);
}

uint64_t sub_1BCADB2C8()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1776
                                * (((v0 + v3 - 151) & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v1) == v1)) ^ v4)))();
}

uint64_t sub_1BCADB310(__n128 a1)
{
  *(__n128 *)(v4 + v3) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == 1500) * v2) | v1)))();
}

uint64_t sub_1BCADB334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v30 - 144) = v29;
  *(void *)(v30 - 136) = v26;
  *(_DWORD *)(v30 - 120) = v28
                         + 1075
                         + 535753261 * ((~((v30 - 144) | 0x88122DC0) + ((v30 - 144) & 0x88122DC0)) ^ 0x7D19DC10);
  *(void *)(v30 - 112) = v26;
  *(void *)(v30 - 128) = a23;
  (*(void (**)(uint64_t))(v27 + 8 * ((v28 + 822) ^ 0xE51)))(v30 - 144);
  *(_DWORD *)(v30 - 120) = v28
                         + 1075
                         + 535753261 * ((~((v30 - 144) | 0xCF8D00E6) + ((v30 - 144) & 0xCF8D00E6)) ^ 0x3A86F136);
  *(void *)(v30 - 136) = v26;
  *(void *)(v30 - 128) = a23;
  *(void *)(v30 - 112) = v26;
  *(void *)(v30 - 144) = v29;
  (*(void (**)(uint64_t))(v27 + 8 * ((v28 + 822) ^ 0xE51)))(v30 - 144);
  int v31 = 1225351577 * ((~((v30 - 144) | 0xB703867A) + ((v30 - 144) & 0xB703867A)) ^ 0x3603E3B7);
  *(void *)(v30 - 136) = a25;
  *(_DWORD *)(v30 - 128) = (v25 - 810746375) ^ v31;
  *(_DWORD *)(v30 - 140) = (v28 - 555) ^ v31;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v28 + 1380)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((*(_DWORD *)(v30 - 144) != ((3 * ((v28 + 822) ^ 0x658)) ^ 0x37C7372))
                                              * (((v28 - 651) | 0x8B) ^ 0xF7)) ^ (v28 + 822))))(v32);
}

void sub_1BCADB4E0()
{
}

uint64_t sub_1BCADB4EC@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x430]) = 2;
  STACK[0x480] = 0;
  LODWORD(STACK[0x50C]) = 0;
  LODWORD(STACK[0x5EC]) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 & 2) != (((a1 - 555) | 0x220) ^ 0x264)) * (a1 - 423)) ^ a1)))();
}

uint64_t sub_1BCADB548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((v6 - 836031502) & 0x31D4D7FF) + 260) ^ 0x1E) * (v5 == a5)) ^ v6)))();
}

void sub_1BCADB588()
{
  char v5 = v2 + 33;
  *(_DWORD *)(v4 - 120) = v2 + 801;
  int v6 = v2;
  uint64_t v7 = *(void *)(v3 + 8 * (v2 ^ 0xB3)) - 4;
  uint64_t v8 = *v1 ^ 0xB1;
  uint64_t v9 = *(void *)(v3 + 8 * (v6 ^ 0xE9)) - 12;
  uint64_t v10 = *(void *)(v3 + 8 * (v6 ^ 0xAE)) - 8;
  int v11 = *(unsigned __int8 *)(v10 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0622) ^ 0x49));
  int v12 = ((*(unsigned __int8 *)(v9 + v8) ^ 0xBD) << (v5 ^ 0xFC)) | ((*(unsigned __int8 *)(v7
                                                                                       + (*(unsigned __int8 *)(v0 - 0x198EA10384B062DLL) ^ 0xD7)) ^ 0x73) << 8);
  HIDWORD(v14) = v11 ^ 1;
  LODWORD(v14) = (v11 ^ 0x66666666) << 24;
  unsigned __int8 v13 = v14 >> 26;
  uint64_t v15 = *(void *)(v3 + 8 * (v6 ^ 0xA0)) - 12;
  LODWORD(v8) = *(unsigned __int8 *)(v9 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0623) ^ 0xB8));
  int v16 = *(unsigned __int8 *)(v10 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0626) ^ 0x6BLL));
  HIDWORD(v14) = v16 ^ 1;
  LODWORD(v14) = (v16 ^ 0x66666666) << 24;
  int v17 = ((v14 >> 26) ^ 0x53) << 16;
  LOBYTE(v11) = *(unsigned char *)(v7 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0621) ^ 0x2ELL));
  int v18 = *(unsigned __int8 *)(v10 + (*(unsigned __int8 *)(v0 - 0x198EA10384B062ELL) ^ 0x47));
  HIDWORD(v14) = v18 ^ 1;
  LODWORD(v14) = (v18 ^ 0x66666666) << 24;
  int v19 = v12 | (*(unsigned char *)(v15 + (*(unsigned __int8 *)(v0 - 0x198EA10384B062CLL) ^ 0xECLL)) + 79) ^ 9 | (((v14 >> 26) ^ 0x1E) << 16);
  int v20 = v17 | ((*(unsigned __int8 *)(v7 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0625) ^ 0x77)) ^ 0xBC) << 8);
  LODWORD(v10) = *(unsigned __int8 *)(v10 + (*(unsigned __int8 *)(v0 - 0x198EA10384B062ALL) ^ 0xCBLL));
  unsigned int v21 = ((v13 ^ 0xFB) << 16) | ((v8 ^ 5) << 24) | ((v11 ^ 0xB6) << 8);
  HIDWORD(v14) = v10 ^ 1;
  LODWORD(v14) = (v10 ^ 0x66666666) << 24;
  int v22 = *(unsigned __int8 *)(v15 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0620) ^ 0x36));
  LOBYTE(v10) = *(unsigned char *)(v15 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0624) ^ 0xB5));
  unsigned int v23 = ((*(unsigned char *)(v15 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0628) ^ 0xA9)) + 79) | ((*(unsigned __int8 *)(v7 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0629) ^ 0x30)) ^ 0x46) << 8)) & 0xFF00FFFF | (((v14 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v9 + (*(unsigned __int8 *)(v0 - 0x198EA10384B062BLL) ^ 0x35)) ^ 0x72) << 24);
  LODWORD(v9) = *(unsigned __int8 *)(v9 + (*(unsigned __int8 *)(v0 - 0x198EA10384B0627) ^ 0xBFLL)) ^ 0x6B;
  LODWORD(v15) = v22 + 79;
  uint64_t v24 = *(void *)(v3 + 8 * (v6 ^ 0x8D));
  unsigned int v25 = v20 & 0xFFFFFF00 | (v10 + 79) ^ 0xA8 | (v9 << 24);
  uint64_t v26 = *(void *)(v3 + 8 * (v6 ^ 0x55));
  int v27 = *(_DWORD *)(v24 + 4 * ((v22 + 79) ^ 0xFDu)) ^ 0xB542FC6 ^ *(_DWORD *)(v26
                                                                                               + 4 * (v13 ^ 0x61u));
  uint64_t v28 = *(void *)(v3 + 8 * (int)(v6 & 0x9B782728)) - 4;
  unsigned int v29 = (v27 - ((2 * v27) & 0xC7AD3A3E) + 1675009311) ^ *(_DWORD *)(v28 + 4 * (v8 ^ 0x90u));
  int v30 = v29 - 58990838 + (~(2 * v29) | 0x70841EB);
  uint64_t v31 = *(void *)(v3 + 8 * (v6 ^ 0x8B));
  int v32 = *(_DWORD *)(v31 + 4 * (v11 ^ 0x8Eu)) ^ v19 ^ (v30 + 1);
  int v33 = (v21 & 0xFFFFFF00 | v15 ^ 0x2A)
      - 2 * ((v21 & 0x55BF5C00 | (v15 ^ 0x2A) & 0xDF) ^ (v15 ^ 0x2A) & 0xA)
      + 1438604501;
  int v34 = v32 ^ v23;
  int v76 = v32;
  LODWORD(v15) = v32 ^ v23 ^ 0x4D;
  *(_DWORD *)(v4 - 160) = v15 ^ v25;
  int v35 = v15;
  LODWORD(v15) = v15 ^ v25 ^ v33;
  int v36 = *(_DWORD *)(v26 + 4 * (BYTE2(v15) ^ 1u)) ^ *(_DWORD *)(v31 + 4 * (BYTE1(v15) ^ 0xA6u));
  unsigned int v37 = v15 ^ 0xEF48717C;
  LODWORD(v15) = ((v36 ^ 0x6A664F69) - 2 * ((v36 ^ 0x6A664F69) & 0x1D49BFA7 ^ v36 & 2) - 1656111195) ^ *(_DWORD *)(v24 + 4 * (v15 ^ 0xFCu));
  *(_DWORD *)(v4 - 176) = HIBYTE(v37);
  int v38 = v32 ^ *(_DWORD *)(v28 + 4 * (HIBYTE(v37) ^ 0x65)) ^ (v15 - ((2 * v15) & 0xC7AD3A3E) + 1675009311);
  *(_DWORD *)(v4 - 152) = v34;
  LOWORD(v32) = v38 ^ 0xFB45;
  int v39 = v38;
  *(_DWORD *)(v4 - 144) = v38;
  int v40 = v38 ^ 0x448FB45 ^ (v25 - ((2 * v25) & 0x891F68A) + 71891781);
  *(_DWORD *)(v4 - 124) = v40;
  __int16 v77 = v32 ^ ((v34 ^ 0x2DE4) - 2 * ((v34 ^ 0x2DE4) & 0xFB47 ^ v34 & 2) - 1211);
  LODWORD(v15) = *(_DWORD *)(v26 + 4 * (((v40 ^ v37) >> 16) ^ 0x2Eu)) ^ *(_DWORD *)(v31 + 4 * (((unsigned __int16)(v40 ^ v37) >> 8) ^ 0x9Bu)) ^ 0x6A664F69;
  LODWORD(v15) = (v15 - ((2 * v15) & 0x3A937F4A) - 1656111195) ^ *(_DWORD *)(v24
                                                                           + 4
                                                                           * ((v40 ^ v37) ^ 0xD2u));
  *(_DWORD *)(v4 - 184) = (v40 ^ v37) >> 24;
  int v41 = (v15 - ((2 * v15) & 0xC7AD3A3E) + 1675009311) ^ *(_DWORD *)(v28 + 4 * (((v40 ^ v37) >> 24) ^ 0x69));
  LODWORD(v15) = v41 ^ v35 ^ 0x9C760083;
  unsigned __int8 v78 = BYTE1(v41) ^ BYTE1(v35);
  int v42 = v15 ^ v40 ^ 0x3BE627E7;
  int v43 = ((v15 ^ v40 ^ 0x6F00D69) - 2 * (v42 & 1 ^ (v15 ^ v40 ^ 0x6F00D69) & 0x1967566D) + 426202732) ^ v40 ^ v37 ^ 0x6DC0F725;
  unsigned int v44 = v43 ^ 0x9547167F;
  int v45 = *(_DWORD *)(v26 + 4 * (((v43 ^ 0x9547167F) >> 16) ^ 0x89u)) ^ *(_DWORD *)(v31 + 4 * (((unsigned __int16)(v43 ^ 0x167F) >> 8) ^ 0x3Au)) ^ 0x6A664F69;
  int v46 = (v45 - ((2 * v45) & 0x3A937F4A) - 1656111195) ^ *(_DWORD *)(v24
                                                                  + 4
                                                                  * ((((v15 ^ v40 ^ 0x69)
                                                                                      - 2
                                                                                      * (v42 & 1 ^ (v15 ^ v40 ^ 0x69) & 0x6D)
                                                                                      + 108) ^ v40 ^ v37 ^ 0x25) ^ 0xE4u));
  unsigned int v47 = (v46 - ((2 * v46) & 0xC7AD3A3E) + 1675009311) ^ *(_DWORD *)(v28 + 4 * (HIBYTE(v44) ^ 0x1D));
  int v80 = (v47 - ((2 * v47) & 0x2FC61D14) - 1746727286) ^ v41 ^ v39;
  unsigned int v48 = v80 ^ 0x97E30E8A ^ v41 ^ v35;
  *(_DWORD *)(v4 - 216) = v80 ^ 0x97E30E8A;
  *(_DWORD *)(v4 - 248) = v48;
  unsigned int v49 = ((v48 ^ 0xFE25CD6D) - ((2 * (v48 ^ 0xFE25CD6D)) & 0x32CEACD8) + 426202732) ^ v40 ^ v37 ^ 0x6DC0F725;
  *(_DWORD *)(v4 - 192) = BYTE1(v49);
  int v50 = *(_DWORD *)(v31 + 4 * (BYTE1(v49) ^ 0x6Fu));
  *(_DWORD *)(v4 - 200) = BYTE2(v49);
  int v51 = v50 ^ *(_DWORD *)(v26 + 4 * (BYTE2(v49) ^ 0xA8u)) ^ 0x6A664F69;
  *(_DWORD *)(v4 - 224) = HIBYTE(v49);
  unsigned int v52 = (v51 - ((2 * v51) & 0xC7AD3A3E) + 1675009311) ^ *(_DWORD *)(v28 + 4 * (HIBYTE(v49) ^ 0x85));
  *(_DWORD *)(v4 - 240) = (((v48 ^ 0x6D) - ((2 * (v48 ^ 0x6D)) & 0xD8) + 108) ^ v40 ^ v37 ^ 0x25);
  int v53 = (v52 - ((2 * v52) & 0x3A937F4A) - 1656111195) ^ *(_DWORD *)(v24
                                                                  + 4
                                                                  * ((((v48 ^ 0x6D)
                                                                                      - ((2 * (v48 ^ 0x6D)) & 0xD8)
                                                                                      + 108) ^ v40 ^ v37 ^ 0x25) ^ 0x25u));
  *(_DWORD *)(v4 - 256) = v48 ^ v42;
  int v54 = (v53 - ((2 * v53) & 0x4D025A54) + 645999914) ^ v15 ^ v48 ^ v42;
  int v55 = (v53 - ((2 * v53) & 0x4D025A54) + 645999914) ^ v15;
  LOBYTE(v15) = v49 ^ v54;
  int v56 = v54;
  *(_DWORD *)(v4 - 232) = v49;
  unsigned int v57 = v49 ^ v54 ^ 0x2A629D8D;
  unsigned int v58 = *(_DWORD *)(v28 + 4 * (HIBYTE(v57) ^ 0x1D)) ^ *(_DWORD *)(v26 + 4 * (BYTE2(v57) ^ 0x89u)) ^ 0xF5CB0D7C;
  LODWORD(v8) = (v58 - ((2 * v58) & 0xF8F7BE14) - 58990838) ^ *(_DWORD *)(v31 + 4 * (BYTE1(v57) ^ 0x3Au));
  *(_DWORD *)(v4 - 168) = v80 ^ 0x97E30E8A ^ v53;
  int v59 = v80 ^ 0x97E30E8A ^ v53 ^ *(_DWORD *)(v24 + 4 * (v15 ^ 0x16u)) ^ (v8
                                                                                          - ((2 * v8) & 0x3A937F4A)
                                                                                          - 1656111195);
  int v60 = v59 ^ v55 ^ 0x7C166C11;
  int v61 = v59;
  unsigned int v62 = (v60 ^ v49) >> 24;
  *(_DWORD *)(v4 - 208) = v62;
  int v63 = *(_DWORD *)(v24 + 4 * ((v60 ^ v49) ^ 0x31u)) ^ *(_DWORD *)(v28 + 4 * (v62 ^ 0x9B));
  unsigned int v64 = ((v63 ^ 0xFE9F22BA) - 2 * ((v63 ^ 0xFE9F22BA) & 0x7C7BDF0E ^ v63 & 4) - 58990838) ^ *(_DWORD *)(v31 + 4 * (((unsigned __int16)(v60 ^ v49) >> 8) ^ 0xA0u));
  int v65 = (v64 - ((2 * v64) & 0x2C3B20C6) - 1776447389) ^ *(_DWORD *)(v26
                                                                  + 4 * (((v60 ^ v49) >> 16) ^ 0xAu));
  LODWORD(v8) = (v65 - ((2 * v65) & 0x5C4DB18A) - 1373185851) ^ v61;
  *(_DWORD *)(v4 - 128) = v8;
  LODWORD(v15) = v8 ^ 0x53A5426F ^ v60;
  LODWORD(v8) = v60 ^ v56 ^ 0x7F4E916B;
  *(_DWORD *)(v4 - 136) = v8;
  *(_DWORD *)(v4 - 132) = ((v15 ^ 0x5A137D54) - 2 * ((v15 ^ 0x5A137D54) & 0x7F4B33AB ^ v15 & 2) + 2135634857) ^ v8;
  int v66 = (char *)*(&off_1F16F9FD0 + (v6 ^ 0xBE)) - 12;
  int v67 = (char *)*(&off_1F16F9FD0 + (v6 ^ 0xD3)) - 8;
  LODWORD(v24) = v6;
  int v79 = v6;
  uint64_t v68 = (char *)*(&off_1F16F9FD0 + (v6 ^ 0x88)) - 8;
  uint64_t v69 = (uint64_t)*(&off_1F16F9FD0 + (int)(v24 ^ 0xE2));
  LODWORD(v24) = *(_DWORD *)(v4 - 124) ^ 0x31676F78;
  LODWORD(v26) = *(_DWORD *)&v66[4 * (BYTE2(v24) ^ 0x7B)] ^ ((BYTE2(v24) ^ 0x56)
                                                           - ((2 * (BYTE2(v24) ^ 0x56) + 824408) & 0x8949E)
                                                           - 2031347589);
  LODWORD(v24) = (v26 - ((2 * v26) & 0xD7033386) - 343828029) ^ *(_DWORD *)&v68[4 * BYTE3(v24)];
  int v70 = *(_DWORD *)(v4 - 160);
  *(_DWORD *)(v4 - 240) = 181304767 * *(_DWORD *)(v69 + 4 * (v70 ^ 0x57u)) + 657843362;
  *(_DWORD *)(v4 - 224) = (BYTE2(v70) ^ 0xA7) - ((2 * (BYTE2(v70) ^ 0xA7) + 824408) & 0x8949E) - 2031347589;
  LODWORD(v26) = *(_DWORD *)(v4 - 200);
  *(_DWORD *)(v4 - 200) = *(_DWORD *)&v66[4 * (BYTE2(v70) ^ 0x8A)];
  LODWORD(v31) = ((*(_DWORD *)(v4 - 232) >> 15) & 0x58 ^ 0x48) + (v26 ^ 0x4C64A1B);
  *(_DWORD *)(v4 - 232) = v31 - 2111451568 + ((2 * v31) & 0x9E ^ 0xFFF76BFF);
  *(_DWORD *)(v4 - 248) = *(_DWORD *)&v67[4 * (BYTE1(*(_DWORD *)(v4 - 124)) ^ 0x85)];
  *(_DWORD *)(v4 - 256) = *(_DWORD *)&v67[4 * (HIBYTE(v77) ^ 0xB4)];
  *(_DWORD *)(v4 - 144) = *(_DWORD *)&v67[4 * (BYTE1(v70) ^ 0xF5)];
  *(_DWORD *)(v4 - 152) = *(_DWORD *)&v67[4 * (BYTE1(*(_DWORD *)(v4 - 152)) ^ 0xD6)];
  *(_DWORD *)(v4 - 168) = *(_DWORD *)&v67[4 * (v78 ^ 0xB9)];
  *(_DWORD *)(v4 - 192) = *(_DWORD *)&v67[4 * (*(_DWORD *)(v4 - 192) ^ 0x84)];
  *(_DWORD *)(v4 - 184) = *(_DWORD *)&v68[4 * (*(_DWORD *)(v4 - 184) ^ 7)];
  *(_DWORD *)(v4 - 216) = v24 - ((2 * v24) & 0x2A4561D2) + 354595049;
  *(_DWORD *)(v4 - 160) = *(_DWORD *)&v68[4 * ((v76 ^ 0x2BEAE26Bu) >> 24)];
  *(_DWORD *)(v4 - 176) = *(_DWORD *)&v68[4 * (*(_DWORD *)(v4 - 176) ^ 0x4B)];
  *(_DWORD *)(v4 - 208) = *(_DWORD *)&v68[4 * ((v60 ^ 0xEEA2BFA8) >> 24)];
  uint64_t v71 = (char *)*(&off_1F16F9FD0 + (v79 ^ 0xDF)) - 4;
  unsigned __int8 v72 = (char *)*(&off_1F16F9FD0 + (v79 ^ 0xAB)) - 4;
  uint64_t v73 = (char *)*(&off_1F16F9FD0 + v79 - 51) - 8;
  uint64_t v74 = (char *)*(&off_1F16F9FD0 + v79 - 107) - 4;
  unsigned int v75 = (v74[*(unsigned __int8 *)(v4 - 109) ^ 0x41] ^ 0x7B) & 0xFF00FFFF | (((v73[*(unsigned __int8 *)(v4 - 111) ^ 0x40] + 117) ^ 0x5A) << 16) | ((v72[*(unsigned __int8 *)(v4 - 110) ^ 0xBBLL] ^ 0x85) << 8) | ((v71[*(unsigned __int8 *)(v4 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v4 - 112) - ((2 * *(unsigned __int8 *)(v4 - 112)) & 0x8A) + 69) ^ 0x84) << 24);
  LODWORD(v26) = (v74[*(unsigned __int8 *)(v4 - 105) ^ 0xE4] ^ 0x4D) & 0xFF00FFFF | ((v71[*(unsigned __int8 *)(v4 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v4 - 108) - ((2 * *(unsigned __int8 *)(v4 - 108)) & 0x8A) + 69) ^ 0xFFFFFFE1) << 24) | (((v73[*(unsigned __int8 *)(v4 - 107) ^ 0x27] + 117) ^ 0x96) << 16) | ((v72[*(unsigned __int8 *)(v4 - 106) ^ 9] ^ 0x80) << 8);
  LODWORD(v24) = (v74[*(unsigned __int8 *)(v4 - 101) ^ 0xF2] ^ 0xF4) & 0xFF00FFFF | ((v71[*(unsigned __int8 *)(v4 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v4 - 104) - ((2 * *(unsigned __int8 *)(v4 - 104)) & 0x8A) + 69) ^ 0xE0) << 24) | ((v72[*(unsigned __int8 *)(v4 - 102) ^ 0xBELL] ^ 0x27) << 8) & 0xFF00FFFF | (((v73[*(unsigned __int8 *)(v4 - 103) ^ 0xE9] + 117) ^ 0x8A) << 16);
  *(_DWORD *)(v4 - 124) = (v74[*(unsigned __int8 *)(v4 - 97) ^ 0x74] ^ 0xDC | (((v73[*(unsigned __int8 *)(v4 - 99) ^ 0xF3] + 117) ^ 2) << 16) | ((v72[*(unsigned __int8 *)(v4 - 98) ^ 0x20] ^ 0x6F) << 8) | ((v71[*(unsigned __int8 *)(v4 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v4 - 100) - ((2 * *(unsigned __int8 *)(v4 - 100)) & 0x8A) + 69) ^ 0x85) << 24)) ^ 0x722E9C17;
  *(_DWORD *)(v4 - 128) = v75 ^ 0x3C14D9B4;
  *(_DWORD *)(v4 - 132) = v26 ^ 0x1CD92434;
  *(_DWORD *)(v4 - 136) = v24 ^ 0xA4DF51AA;
  JUMPOUT(0x1BCADE020);
}

void sub_1BCADFC60()
{
}

uint64_t sub_1BCADFD00@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((43 * (v2 ^ 0x690) + 73 * (v2 ^ 0x682) - 928) * (a1 == 58487721)) | v2)))();
}

uint64_t sub_1BCADFD54@<X0>(uint64_t a1@<X1>, int a2@<W5>, unsigned int a3@<W8>)
{
  uint64_t v5 = a1 + a3;
  uint64_t v6 = 56;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((29
                                * (v6 - (unint64_t)a3 + 2103820122 >= (unint64_t)((v3 + 1335) ^ (a2 + 877))
                                                                           - 1609763351)) ^ (v3 + 970))))();
}

uint64_t sub_1BCADFDB8()
{
  STACK[0x360] = 0;
  unint64_t v1 = STACK[0x408];
  int v2 = 33 * (STACK[0x408] ^ 0x266);
  int v3 = *(_DWORD *)(STACK[0x378] + 56);
  *(_DWORD *)(STACK[0x378] + 56) = v3 + 1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8 * ((1216 * (v3 - 84136181 < (v2 ^ 0xFFFFFFB8))) ^ ((int)v1 - 546)));
  LODWORD(STACK[0x2E4]) = 66574141;
  return v4();
}

void sub_1BCADFE24()
{
}

uint64_t sub_1BCADFF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  int v15 = v12 + 4;
  uint64_t v16 = (v15 + v13);
  int v17 = *(_DWORD *)(v11 + v16);
  *(unsigned char *)(v10 + v16) = a6 ^ HIBYTE(v17);
  *(unsigned char *)(v10 + (v16 + 1)) = (18 * (v9 ^ 9)) ^ BYTE2(v17) ^ a7;
  *(unsigned char *)(v10 + (v16 + 2)) = a8 ^ BYTE1(v17);
  *(unsigned char *)(v10 + (v16 + 3)) = v17 ^ 0x46;
  LODWORD(v16) = *v8 - 371441542;
  BOOL v18 = v16 < 0x2BFC7DB7;
  BOOL v19 = v15 - 79774093 < v16;
  if ((v15 - 79774093) < 0x2BFC7DB7 != v18) {
    BOOL v19 = v18;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((78 * v19) ^ v9)))();
}

uint64_t sub_1BCADFF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * ((((((32 * (a6 ^ 0x30B)) ^ 0xB8) & v6) == 0)
                                                      * (((a6 - 1624870287) & 0x60D98BFD) - 329)) ^ a6)))(a1, (v7 - a1));
}

uint64_t sub_1BCADFF74(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (v6 + 855)))(a1, 0);
  if (result == 16)
  {
    int v4 = 38130524;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 ^ 0xD45)))(a1);
    goto LABEL_8;
  }
  if (result)
  {
    int v4 = -605800521;
    goto LABEL_7;
  }
  void *v3 = a1;
  int v4 = 1227088733;
LABEL_8:
  *(_DWORD *)(v1 + 12) = 901239853 * v4 - 1544747865;
  return result;
}

uint64_t sub_1BCAE000C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((((v7 + 300) ^ 0xB ^ (3 * (v7 ^ 0x4FE))) * (v9 != 0)) ^ (v7 - 1173))))(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1BCAE0058()
{
}

uint64_t sub_1BCAE0060@<X0>(int a1@<W8>)
{
  int v6 = v3 ^ 0x198;
  *(_DWORD *)(*(void *)(v5 - 0x7EC954F575262799) + 4 * (a1 + v6 + v1 - 1339911027)) = *(_DWORD *)(*(void *)(v5 - 0x7EC954F575262799) + 4 * ((((v6 - 1280) | 0x121) ^ v2) + v1));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * (v6 ^ (4 * (v2 + v1 + 302 > 0x7FFFFFFE)))))(289, 2955056269, 2147483646);
}

void sub_1BCAE00D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,unsigned __int8 a25,int a26,int a27,unsigned __int8 a28,__int16 a29,unsigned __int8 a30,int a31,int a32,int a33,int a34,unsigned __int8 a35,int a36,int a37,int a38)
{
  LODWORD(STACK[0x370]) = (a25 | (((((a38 - 1031) | 0x14A) - 66) ^ a34) << 24) | ((a30 ^ 0xEF) << 8) | ((a35 ^ 0x92) << 16)) ^ 0x1A8A62A8;
  LODWORD(STACK[0x268]) = a32 ^ 0xD80E57DA;
  LODWORD(STACK[0x3A8]) = ((a33 << 8) | (a27 << 24) | ((a36 ^ 0x18) << 16) | a31) ^ 0xEB633D3E;
  LODWORD(STACK[0x3C0]) = ((((a37 ^ 0xC1) << 16) + ((a26 ^ a6) << 24)) | a28 | ((LODWORD(STACK[0x400]) ^ v38) << 8)) ^ 0xE9C7FF86;
  JUMPOUT(0x1BCAC3418);
}

void sub_1BCAE0294(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  unsigned int v5 = ((v4 + ((a2 + 1201585642) & 0xB8613EBB) - 16) ^ a3) + (a1 ^ v4);
  LODWORD(STACK[0x31C]) = v5 + v4 - (v3 & (2 * v5));
  JUMPOUT(0x1BCAE0300);
}

uint64_t sub_1BCAE0388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v7 + v4 - 0x781B11C0E349AE93 + (v6 ^ a4)) = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((1047 * ((v5 & 0x38) == 8)) ^ v6)))();
}

void sub_1BCAE03DC()
{
}

uint64_t sub_1BCAE0404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  BOOL v37 = v26 > v29;
  unint64_t v38 = (((v36 ^ v30) + 393) ^ (v25 + 878) ^ *(_DWORD *)(a25 + v32)) + HIDWORD(v35);
  *(_DWORD *)(a25 + 4 * a4) = v38 + v25 - (v27 & (2 * v38));
  *(_DWORD *)(a25 + v32) = v25 + HIDWORD(v38) - 2 * HIDWORD(v38);
  if (v37 == v31 - 462757524 < -915768651) {
    BOOL v37 = v31 - 462757524 < v28;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((v36 - 1495) ^ (v37 * v34))))();
}

uint64_t sub_1BCAE040C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((45
                                * (*(_DWORD *)(v9 + v8 * (uint64_t)a6 + 32) == ((a7 + ((v7 - 1056) | 0xC8) - 1319) ^ (v7 + 1)))) ^ v7)))();
}

uint64_t sub_1BCAE0450@<X0>(uint64_t a1@<X0>, char a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(void *)(&a19 + v19 + 1) = 0x8080808080808080;
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((a2 & 0x38) == 8) * ((v20 - 1038684767) & 0x3DE9127E ^ 0x21C)) ^ v20)))((a2 & 0x38) + a1);
}

uint64_t sub_1BCAE04AC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v6 = v3 - 1;
  STACK[0x5D8] = v6;
  *(unsigned char *)(a1 + v6) = ((v2 - 81) ^ v4) * (v2 - 64);
  return (*(uint64_t (**)(void))(v5 + 8 * ((15 * (((a2 - 1) ^ (STACK[0x5D8] == 0)) & 1)) ^ a2)))();
}

void sub_1BCAE0500()
{
}

uint64_t sub_1BCAE053C()
{
  BOOL v4 = v3 == ((v0 + 2109209718) & 0xA76DBDF6) - v1 + 1977941023;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 | (16 * v4)) ^ v0)))();
}

uint64_t sub_1BCAE059C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((57 * (a3 + v6 + 63 < a3 + v6 + (a6 ^ (a6 - 88)) - 984)) ^ 0x7DAu)))();
}

void sub_1BCAE05EC()
{
}

void sub_1BCAE0A34()
{
}

uint64_t sub_1BCAE0B04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,int a42,char a43)
{
  unint64_t v47 = *a1;
  int v48 = 235795823 * ((379724816 - ((v46 - 168) | 0x16A22410) + ((v46 - 168) | 0xE95DDBEF)) ^ 0x7DF092B6);
  STACK[0x308] = (unint64_t)&a43;
  STACK[0x330] = (unint64_t)&STACK[0x7764D5933262C28F];
  STACK[0x318] = (unint64_t)&a40;
  STACK[0x320] = v47;
  *(_DWORD *)(v46 - 160) = v48 + 1919853893;
  *(_DWORD *)(v46 - 132) = (v43 + 1942) ^ v48;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v44 + 8 * (v43 + 2053)))(v46 - 168);
  return (*(uint64_t (**)(uint64_t))(v44
                                            + 8
                                            * (((*(_DWORD *)(v46 - 136) == ((94 * (v43 ^ 0x4E)) ^ (v45 - 1150)))
                                              * ((v43 - 1506550850) & 0x59CC243F ^ 0x5FC)) ^ v43)))(v49);
}

void sub_1BCAE0C34(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * (((a1 | 0x882D0BB0) - a1 + (a1 & 0x77D2F44F)) ^ 0x82D9059F);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAE0CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  return (*(uint64_t (**)(unint64_t))(v35
                                                     + 8
                                                     * ((176
                                                       * ((((a35 ^ 0x25) + v37) ^ ((a35 ^ 0x725 ^ v36) != 0)) & 1)) ^ a35 ^ 0x725)))(0x857FADEEBDD29AE6);
}

uint64_t sub_1BCAE0DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((((*(unsigned __int8 *)(v5 + v7 + a4) == *(unsigned __int8 *)(v6 + v7 + a4)) ^ ((v8 ^ v9) + a5)) & 1)
                                * ((v8 ^ v9) - 558)) ^ v8 ^ v9)))();
}

uint64_t sub_1BCAE0DA8()
{
  unsigned int v3 = LODWORD(STACK[0x578]) + (v0 ^ 0x4C780938);
  unsigned int v4 = v0 - 1722 + v1 + 1842693163;
  int v5 = (v4 < 0xDC5EBF99) ^ (v3 < 0xDC5EBF99);
  BOOL v6 = v3 < v4;
  if (v5) {
    BOOL v6 = v4 < 0xDC5EBF99;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((4015 * v6) ^ v0)))();
}

void sub_1BCAE0E14()
{
  LODWORD(STACK[0x560]) = 0;
  JUMPOUT(0x1BCACBEC8);
}

uint64_t sub_1BCAE0E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v18 - 128) = v15;
  *(void *)(v18 - 120) = v14;
  *(void *)(v18 - 144) = v16;
  *(void *)(v18 - 136) = a11;
  *(void *)(v18 - 112) = v14;
  *(_DWORD *)(v18 - 104) = (v17 + 1099) ^ (1759421093
                                         * ((~((v18 - 144) | 0x757597B1) + ((v18 - 144) & 0x757597B1)) ^ 0x39F7D81A));
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v17 + 1183)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * ((((((v17 + 679) | 0x10) ^ 0x5FF) - 871)
                                              * ((v13 + v11 - 1) > 0x7FFFFFFE)) ^ ((v17 + 679) | 0x10))))(v19);
}

uint64_t sub_1BCAE0ED4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1BCAE0EEC()
{
  return 4294925278;
}

void sub_1BCAE0EF4()
{
}

uint64_t sub_1BCAE0EFC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 + 127962867 - 2 * (a1 & 0x7A08EF3)) ^ 0xD9663328));
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + v1 - 1392)
                              + 8
                              * ((31 * (((*(void *)(a1 + 8) == 0x5B51E979A7EFF0CDLL) ^ (v1 + 49)) & 1)) ^ v1)
                              - 4))();
}

uint64_t sub_1BCAE0F8C()
{
  int v3 = (4 * ((v0 - 697) | 0x100)) ^ 0x17EC;
  unsigned int v4 = ((v3 - 677) & v1) - ((2 * ((v3 - 677) & v1)) & 0x870B6BFC) + ((v3 + 364) | 0x280) - 1014648978;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((119
                                * (((2 * v4) & 0xFF7F77FC ^ 0x870B63FC) + (v4 ^ 0xBC3A0E00) - 35731856 != 2107540078)) ^ v3)))();
}

uint64_t sub_1BCAE1040()
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((((((v3 + 136200478) & 0xF7E1B97D ^ 0x60) & v1) == 0) * (v3 ^ 0x69B)) ^ v3)))((v0 - v2));
}

uint64_t sub_1BCAE108C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  int v39 = a7 + ((a5 + 488784877) | 0x60D00980);
  int v36 = 3804331 * ((((v35 - 128) | 0x332C2F75) - ((v35 - 128) & 0x332C2F75)) ^ 0xC9B2DC23);
  *(_DWORD *)(v35 - 128) = v36 + a5 + 1018;
  *(_DWORD *)(v35 - 124) = (a13 - 85116424) ^ v36;
  *(void *)(v35 - 120) = a11;
  (*(void (**)(uint64_t))(v34 + 8 * (a5 + 2099)))(v35 - 128);
  uint64_t v37 = a34 & 0x3F;
  *(&a25 + (v37 ^ 0x31)) = 0;
  return (*(uint64_t (**)(void))(v34 + 8 * ((1258 * ((v37 ^ 0x31) > v39 - 198)) ^ a5)))((v37 ^ 0x31) + 1730004588);
}

uint64_t sub_1BCAE1194@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  *(&a21 + (a4 + v21)) = *(unsigned char *)(v25 + ((v23 - a3 + 59) ^ 0xFFFFFFFFF4065593) + v22) ^ 0x80;
  return (*(uint64_t (**)(void))(v24 + 8 * ((149 * ((a2 + a4 + 1) < 0x40)) ^ (a1 + v23 + 1287))))();
}

void sub_1BCAE11FC()
{
}

uint64_t sub_1BCAE1218()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1951 * (v1 == (LODWORD(STACK[0x238]) ^ (v3 - 541)))) ^ (v0 - 206))))();
}

uint64_t sub_1BCAE124C@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  BOOL v7 = v2 < a1;
  *(unsigned char *)(a2 + (v3 - 703487551)) = (3 * (v6 ^ 0xBD) + 67) ^ *(unsigned char *)(v5
                                                                                      + (v3 - 703487551));
  if (v7 == v3 - 1293408894 < a1) {
    BOOL v7 = v3 - 1293408894 < v2;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((1916 * v7) ^ v6)))();
}

uint64_t sub_1BCAE12C4@<X0>(unsigned int a1@<W8>)
{
  uint64_t v6 = (v1 + v3 + 15);
  int v7 = *(_DWORD *)((char *)&STACK[0x2C4] + v6 + 72);
  *(unsigned char *)(v4 + v6) = v7 ^ 0x46;
  *(unsigned char *)(v4 + (v1 + v3 + v2 - 1031)) = BYTE1(v7) ^ 0x8A;
  *(unsigned char *)(v4 + (v1 + v3 + 17)) = BYTE2(v7) ^ 0xDA;
  *(unsigned char *)(v4 + (v1 + v3 + 18)) = HIBYTE(v7) ^ 0xB5;
  unsigned int v8 = LODWORD(STACK[0x320]) - 2078728675;
  BOOL v9 = v3 + 1188442158 < v8;
  if (v3 + 1188442158 < a1 != v8 < a1) {
    BOOL v9 = v8 < a1;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((851 * v9) ^ v2)))();
}

uint64_t sub_1BCAE1374(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int *a5)
{
  STACK[0x518] = 0x5DF286E6C4FA3639;
  unint64_t v9 = 1178560073
     * (((~(v8 - 144) | 0x176F98EB730DDAFELL) + ((v8 - 144) | 0xE89067148CF22501)) ^ 0xF36C37FC36665D62);
  *(void *)(v8 - 128) = *a5 - v9;
  *(_DWORD *)(v8 - 108) = (v5 - 1962242246) & 0x3FCEF196 ^ v9;
  *(void *)(v8 - 144) = v9 ^ v7;
  *(_DWORD *)(v8 - 136) = ((v5 - 1962242246) ^ 0x1B) + v9;
  *(_DWORD *)(v8 - 132) = -1178560073 * (((~(v8 - 144) | 0x730DDAFE) + ((v8 - 144) | 0x8CF22501)) ^ 0x36665D62);
  *(_DWORD *)(v8 - 120) = (v5 + 532301329) ^ v9;
  *(_DWORD *)(v8 - 112) = (v5 - 1962242246) ^ v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v5 ^ (a4 + 2085))))(v8 - 144);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v8 - 116)))(v10);
}

uint64_t sub_1BCAE14C4()
{
  STACK[0x370] = v1;
  STACK[0x380] = v1 - 112;
  STACK[0x510] = v1 - 112;
  return v0();
}

uint64_t sub_1BCAE14E4@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3, int a4)
{
  *(_DWORD *)(a1 - 0xC8F409392290867) = a4;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((107
                                * (((*(void *)(v5 + 32) == 0x5C210B0457DF3177) ^ ((v4 ^ 0xF1) + 1)) & 1)) ^ v4 ^ 0x79E)))();
}

uint64_t sub_1BCAE1554()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1054
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((54 * (v2 ^ 0x135)) ^ (v1 + 242) ^ (*(unsigned __int8 *)(v3 + 7) - 1)) == v1)) ^ v2)))();
}

uint64_t sub_1BCAE15A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(v7
                                                                              + 8
                                                                              * (((((a7 - 1727) | 0x406) - 581)
                                                                                * ((v8 & 0x18) == 0)) ^ a7)))(a1, a2, a3, (v9 - a3), (a7 - 10));
}

void sub_1BCAE15D4()
{
}

uint64_t sub_1BCAE17A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 136) = (v16 + 57) ^ (1374699841 * ((v17 - 136) ^ 0x6DF41809));
  *(void *)(v17 - 128) = v14;
  *(void *)(v17 - 120) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1662)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((((*(_DWORD *)(v17 - 132) - 349099036) < 0xEC1DF981)
                                              * (((v16 - 449) | 0x4E0) + 538)) ^ v16)))(v18);
}

uint64_t sub_1BCAE1838()
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1100));
  return v3(v1);
}

void sub_1BCAE1868(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (uint64_t *)*(&off_1F16F9FD0
                  + ((qword_1E9FB7E30 - dword_1E9FB8838) ^ 0x74u ^ byte_1BCB19710[byte_1BCB163A0[(qword_1E9FB7E30 - dword_1E9FB8838) ^ 0x74] ^ 0x14])
                  - 18);
  uint64_t v4 = *(&off_1F16F9FD0
       + (*((unsigned char *)off_1F16FA130
          + (*((unsigned __int8 *)off_1F16FA268 + ((qword_1E9FB7E30 + *v3) ^ 0x74u) - 12) ^ 0x69u)
          - 4) ^ (qword_1E9FB7E30 + *v3) ^ 0x74u)
       + 83);
  uint64_t v5 = (*v4 ^ *v3) - (void)&v7;
  uint64_t *v3 = (267049729 * v5) ^ 0x733E1D47A735574;
  *uint64_t v4 = 267049729 * (v5 ^ 0x733E1D47A735574);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v5) = 628203409 * (((v9 | 0x75E43ED) + (~v9 | 0xF8A1BC12)) ^ 0x85D64FDF);
  v9[0] = v5 - 1882357464;
  uint64_t v10 = &STACK[0x781B11C067844016];
  v9[2] = v5 - 940730567;
  LODWORD(v4) = 267049729 * ((*(_DWORD *)v4 - *(_DWORD *)v3) ^ 0x7A735574);
  uint64_t v6 = (char *)*(&off_1F16F9FD0
               + ((qword_1E9FB7E30 + dword_1E9FB8838) ^ 0x74u ^ byte_1BCB166A0[byte_1BCB12450[(qword_1E9FB7E30 + dword_1E9FB8838) ^ 0x74] ^ 0xBC])
               + 29)
     - 4;
  (*(void (**)(_DWORD *))&v6[8
                                      * (*((unsigned char *)off_1F16FA1A0
                                                          + ((*off_1F16FA008)[v4] ^ 0x4Fu)
                                                          - 8) ^ v4)
                                      + 14288])(v9);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCAE1B74(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return sub_1BCACC490(a1, a2, v5 + (int)a2 + v6 - 1694784115, a4, a5);
}

uint64_t sub_1BCAE1B8C@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 1534)))(*v4);
  _DWORD *v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1848436554;
  *(_DWORD *)(v1 + 56) = 84136176;
  return result;
}

uint64_t sub_1BCAE1BD8@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v3 + (v6 + v5)) = *(unsigned char *)(v2 + (v6 + v5));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 != a1) * v7) ^ v4)))();
}

uint64_t sub_1BCAE1C04@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

void sub_1BCAE1C1C()
{
  _DWORD *v0 = 874675926;
}

void sub_1BCAE1C28(uint64_t a1@<X1>, int a2@<W8>)
{
  int v4 = a2 + 274;
  (*(void (**)(void, uint64_t, void))(v2 + 8 * (a2 + 1870)))(*(unsigned int *)STACK[0x2C8], a1, ((a2 + 274) ^ 0xFC082933) + LODWORD(STACK[0x2E4]));
  *(_DWORD *)(v3 - 192) = 1225351577
                        * ((2 * (((v3 - 192) ^ 0x50DF5AAB) & 0x4A25CCB0) - ((v3 - 192) ^ 0x50DF5AAB) - 1243991221) ^ 0x9BFAF3D2)
                        + 2138962864
                        + v4;
  (*(void (**)(uint64_t))(v2 + 8 * (v4 + 1661)))(v3 - 192);
  JUMPOUT(0x1BCAE1CCCLL);
}

uint64_t sub_1BCAE1D14@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X7>, int a4@<W8>)
{
  *(unsigned char *)(v5 + a1 + a3 + 62) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v5 + a1 + v4) < 0x40) * v6) ^ a4)))();
}

uint64_t sub_1BCAE1E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 136) = v16;
  *(void *)(v17 - 128) = a13;
  *(_DWORD *)(v17 - 120) = v14 + 1759421093 * ((v17 - 136) ^ 0xB37DB054) + 1770;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 ^ 0x849)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((231 * (v15 != (((v14 + 457) | 0x2A) ^ 0x15F18E3C))) ^ v14)))(v18);
}

uint64_t sub_1BCAE1EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 535753261 * ((((2 * (v18 - 136)) | 0xEA0F4E8C) - (v18 - 136) - 1963435846) ^ 0x7FF3A969);
  *(void *)(v18 - 136) = v17;
  *(_DWORD *)(v18 - 128) = v19 + v16 - 184 + v15 + 1727096647;
  *(_DWORD *)(v18 - 124) = v19 + v16 + 501;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 ^ 0xA2D)))(v18 - 136);
  *(_DWORD *)(v18 - 136) = (v16 - 102) ^ (1374699841 * ((v18 + 1047381673 - 2 * ((v18 - 136) & 0x3E6DC731)) ^ 0x5399DF38));
  *(void *)(v18 - 128) = a13;
  *(void *)(v18 - 120) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v14 + 8 * ((v16 - 184) ^ 0x9FB)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) > 0x14CED41Au)
                                              * ((v16 + 373) ^ 0x33C ^ ((v16 - 602) | 0x80))) ^ (v16 - 184))))(v20);
}

uint64_t sub_1BCAE2014@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 | (32 * (v2 != v1)))))();
}

void sub_1BCAE2044()
{
  STACK[0x488] = *(void *)(v0 + 8 * (int)(STACK[0x408] - 607));
  JUMPOUT(0x1BCAD6D3CLL);
}

uint64_t sub_1BCAE2060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  *int v42 = STACK[0x5EC];
  v42[85] = STACK[0x55C];
  v42[86] = STACK[0x504];
  v42[87] = STACK[0x4E4];
  v42[88] = STACK[0x4C4];
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * (((((a42 - 59) ^ (STACK[0x480] == 0)) & 1)
                                * ((22 * (a42 ^ 0x23C)) ^ 0x792)) | (a42 + 1008))))();
}

uint64_t sub_1BCAE2090@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((487 * (a2 - 1540596941 >= ((v2 - a1 + 1429) ^ 0x5ADu))) ^ (v4 + v2 + 562))))();
}

uint64_t sub_1BCAE20D4()
{
  int v5 = 1224239923 * ((2 * (v2 & 0x491B9980) - v2 - 1226545543) ^ 0x44579BAE);
  *(_DWORD *)(v4 - 160) = v5 + LODWORD(STACK[0x254]);
  *(_DWORD *)(v4 - 176) = v0 - v5 - 1009741716;
  *(void *)(v4 - 152) = STACK[0x258];
  *(void *)(v4 - 184) = STACK[0x260];
  *(void *)(v4 - 168) = STACK[0x2B8];
  *(_DWORD *)(v4 - 192) = v5 + v1 + 1501;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 2128)))(v4 - 192);
  int v7 = *(_DWORD *)(v4 - 144);
  LODWORD(STACK[0x54C]) = v7;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((347 * (v7 == ((v1 - 62) | 0x80) + 984896713)) ^ v1)))(v6);
}

uint64_t sub_1BCAE21B0(__n128 a1)
{
  a1.n128_u16[0] = -32640;
  a1.n128_u8[2] = 0x80;
  a1.n128_u8[3] = 0x80;
  a1.n128_u8[4] = 0x80;
  a1.n128_u8[5] = 0x80;
  a1.n128_u8[6] = 0x80;
  a1.n128_u8[7] = 0x80;
  return sub_1BCAE21D4(1179, a1);
}

uint64_t sub_1BCAE21D4@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)(v7 + a3 + a2 + v4) = a4;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + v4 == v6) * a1) ^ v5)))();
}

uint64_t sub_1BCAE2200()
{
  int v6 = (v0 - 207) | 0x240;
  _DWORD *v3 = v3[623];
  unint64_t v7 = 235795823 * ((0xA7685A14EB39D82BLL - ((v5 - 192) | 0xA7685A14EB39D82BLL) + STACK[0x3F0]) ^ 0x50271F15806B6E8DLL);
  *(_DWORD *)(v5 - 188) = (v6 + 2034272915) ^ v7;
  *(_DWORD *)(v5 - 184) = v7 + v2 + v6;
  *(void *)(v5 - 176) = v7 + 3058435446u;
  *(void *)(v5 - 160) = (v1 - 1738362328) ^ v7;
  *(_DWORD *)(v5 - 152) = ((v6 + 2034272915) & 0x795C8CBE) + v7;
  *(_DWORD *)(v5 - 168) = v7 + v6 + 2034272915 - 85;
  *(_DWORD *)(v5 - 164) = v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v6 ^ 0xA5F)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 192)))(v8);
}

uint64_t sub_1BCAE22EC()
{
  int v5 = ((v2 - 290) ^ 0xF7) + *(unsigned __int8 *)(v3 + 4) - 496;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1563 * (((v5 << (v2 - 47)) & v0) + (v5 ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1BCAE2340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, unsigned int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, _DWORD *a19)
{
  int v23 = v19 - 590;
  int v24 = (*(_DWORD *)(*a11 - 0x1C6D093801E6EF61) - 1793899650) * (*a19 ^ 0x6DBB3C2D);
  int v25 = 1225351577 * ((((v22 - 128) | 0x3C75FBC3) - ((v22 - 128) & 0x3C75FBC3)) ^ 0x428A61F1);
  *(_DWORD *)(v22 - 104) = v25 + 874675926;
  *(void *)(v22 - 120) = a12;
  *(void *)(v22 - 112) = a15;
  *(_DWORD *)(v22 - 128) = (v24 ^ 0xEFBDFCBE) - v25 + (((v19 - 590) ^ 0xDF7BFC14) & (2 * v24)) + 536596466;
  *(_DWORD *)(v22 - 124) = v25 + v19 - 590 - 973;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 + 205)))(v22 - 128);
  BOOL v27 = (int)(a14 + 202098696 + v21) > 202099114;
  if (a14 > 0x73F43656) {
    BOOL v27 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (v23 ^ (16 * !v27))))(v26);
}

uint64_t sub_1BCAE24BC()
{
  unsigned int v5 = *(_DWORD *)(v2 + 16) - v0 - 432821826;
  BOOL v7 = (*(unsigned char *)(v3 - 0x5B51E979A7EFF0B9) & 1) == 0 && v5 < 0xFFFFFFBF;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * (v1 ^ 0x602)) ^ v1)))();
}

uint64_t sub_1BCAE2538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v51 = (_DWORD *)(a29 + 24 * v45);
  *int v51 = v47;
  v51[1] = v46;
  *(void *)(v49 + 24 * v45 + 16) = a1;
  v51[4] = HIDWORD(a32);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (int)(((*(_DWORD *)(a2 + 48 * v50 + 32) + ((v44 - 16492500) & 0xFBA7F6 ^ 0x4CFC3768u) < 0x80000003) * (((v44 + 6031549) | 0x922448E) ^ (a8 - 242))) ^ v44)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

void sub_1BCAE25E0()
{
}

uint64_t sub_1BCAE25F8@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  *(unsigned char *)(v5 + (v7 + a1 + 706)) = *(unsigned char *)(v6 + (v7 + a1 + 706)) ^ 0x80;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 - 1 == a5) * (((a2 ^ a3) * v8) ^ a4)) ^ a2)))();
}

void sub_1BCAE2638()
{
  STACK[0x510] = STACK[0x400];
  LODWORD(STACK[0x54C]) = v0;
  JUMPOUT(0x1BCAE2650);
}

uint64_t sub_1BCAE2698@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((43 * (a1 + 1 != v3 + 48)) ^ v1)))();
}

uint64_t sub_1BCAE2770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = ((((v29 - 144) | 0x6A2ACEE0) - ((v29 - 144) & 0x6A2ACEE0)) ^ 0x14D554D2) * v28;
  *(_DWORD *)(v29 - 128) = v30;
  *(_DWORD *)(v29 - 140) = (v26 - 1210) ^ v30;
  *(void *)(v29 - 136) = a25;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 + 725)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((((v26 - 107) ^ (*(_DWORD *)(v29 - 144) == v27)) & 1)
                                              * (v26 - 1159)) ^ v26)))(v31);
}

uint64_t sub_1BCAE2820(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((59 * (*(_DWORD *)(a7 + 72) == ((a4 + 74) ^ 0x6E89787F))) ^ (a4 - 389))))();
}

uint64_t sub_1BCAE2890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((945 * (v6 + 1 == v8 + 60)) ^ a5)))(v5);
}

uint64_t sub_1BCAE2958()
{
  *(_DWORD *)(v5 - 120) = v0 + 1759421093 * ((((v5 - 136) | 0xF2355271) - ((v5 - 136) & 0xF2355271)) ^ 0x4148E225) + 179;
  *(void *)(v5 - 136) = v2;
  *(void *)(v5 - 128) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 400)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((v4 == ((v0 - 1251) ^ 0x5187B9C5)) * (((v0 - 1580) | 0x468) ^ 0x52C)) ^ v0)))(v6);
}

uint64_t sub_1BCAE2A00(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (int)((((a2 ^ 0x5C) + ((a2 + 936577950) & 0xC82CF7FF) - 985) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_1BCAE2A44(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((*(_DWORD *)(v10 + v9 * (uint64_t)a6 + 36) == a7 + (v7 ^ a1) - 380 - 232) * v8) ^ v7)))();
}

uint64_t sub_1BCAE2A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v54
                                                     + 8
                                                     * (((a16 + ((2 * (a33 & a54)) ^ 0x62) + (a33 & a54 ^ 0x1E767D0Eu) < 0xFFFFFFC0)
                                                       * ((a33 + 729) ^ 0x383)) ^ (a33 + 317))))(4253788026, a29);
}

uint64_t sub_1BCAE2B10@<X0>(char a1@<W1>, char a2@<W2>, int a3@<W3>, int a4@<W7>, char a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  *(_DWORD *)(v62 - 124) = v61;
  unsigned int v64 = v61 & 0xFFFFFFF8;
  *(void *)(v62 - 120) = v63 - 7;
  *(_DWORD *)(v62 - 128) = v64;
  int v65 = -8 - a3;
  char v66 = a5 + a2 + a1;
  char v67 = v66 + 10;
  char v68 = v66 + 11;
  char v69 = v66 + 12;
  char v70 = v66 + 13;
  char v71 = v66 + 14;
  char v72 = v66 + 15;
  int v73 = v60 + v65 + 8;
  uint64_t v74 = v73 + (((a4 + 1119) | 0x80) ^ (v57 + 1668));
  v76.val[0].i64[0] = ((_BYTE)v73 + (((a4 + 95) | 0x80) ^ (v57 - 124))) & 0xF;
  v76.val[0].i64[1] = v73 & 0xF;
  v76.val[1].i64[0] = (v72 + (_BYTE)v65 + 8) & 0xF;
  v76.val[1].i64[1] = (v71 + (_BYTE)v65 + 8) & 0xF;
  v76.val[2].i64[0] = (v70 + (_BYTE)v65 + 8) & 0xF;
  v76.val[2].i64[1] = (v69 + (_BYTE)v65 + 8) & 0xF;
  v76.val[3].i64[0] = (v68 + (_BYTE)v65 + 8) & 0xF;
  v76.val[3].i64[1] = (v67 + (_BYTE)v65 + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v62 - 120) + v74) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v59 + (v74 & 0xF) - 7), *(int8x8_t *)(v55 - 7 + v74)), veor_s8(*(int8x8_t *)((v74 & 0xF) + v56 - 5), *(int8x8_t *)(v58 + (v74 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v76, (int8x16_t)xmmword_1BCB19A40), (int8x8_t)0xF1F1F1F1F1F1F1F1)));
  return (*(uint64_t (**)(__n128))(a55 + 8 * ((1324 * (-v64 == v65)) ^ a4)))((__n128)xmmword_1BCB19A40);
}

uint64_t sub_1BCAE2C64()
{
  LODWORD(STACK[0x580]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((3 * (v0 ^ 0x32u) - 1848436554 + *(_DWORD *)(STACK[0x378] + 360) - 614 < 0xFFFFFFFE)
                                * (((v0 + 294) | 0x40) - 164)) ^ v0)))();
}

void sub_1BCAE2CB8()
{
}

void sub_1BCAE2D1C()
{
}

void sub_1BCAE2D28()
{
  *(_DWORD *)(v1 - 120) = v0 + 1073;
  JUMPOUT(0x1BCAE3B54);
}

uint64_t sub_1BCAE5C78()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 + 26) | 0x350) ^ ((v0 - 1092) | 0x2A4) ^ 0x569)
                                * ((v1 + v3 - 1) < 0x7FFFFFFF)) ^ (v0 + 51))))();
}

uint64_t sub_1BCAE5CC8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((973
                                * ((v0 ^ 0x22A01D0) == (((v2 + v4 - 592 - 556011707) | 0x21241032) ^ 0xF88A6DA5) + v1)) ^ (v4 - 592))))();
}

uint64_t sub_1BCAE5D2C()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0xA20)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((19 * (STACK[0x540] == 0)) ^ (v0 + 897))))();
}

uint64_t sub_1BCAE5D6C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  *(unsigned char *)(a4 + (v6 + a3) + 20) = *(unsigned char *)(a5 + (v6 + a3));
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((((a6 + v8) & v9) + v7) & a1) + 41) * (((a6 + v8) & v9 ^ v10) + v6 != a2)) ^ (((a6 + v8) & v9) + 1275))))();
}

uint64_t sub_1BCAE5DC0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 - 59) ^ (STACK[0x480] == 0)) & 1)
                                * ((22 * (v0 ^ 0x23C)) ^ 0x792)) | (v0 + 1008))))();
}

uint64_t sub_1BCAE5E10()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 - 252) | 0x224) ^ 0x7EE) * ((v0 - 1848436556) < 0xFFFFFFFE)) ^ v1)))();
}

uint64_t sub_1BCAE5E50()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((124 * (((v3 < 0xA4A2F8B) ^ (v1 + v2 + 38)) & 1)) ^ (v1 + v2 - 527))))();
}

uint64_t sub_1BCAE5EA0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((853 * (*(_DWORD *)(v1 - 0x5B51E979A7EFF0B5) == v2 + 984895530)) ^ v2)))();
}

void sub_1BCAE5EE8()
{
}

uint64_t sub_1BCAE5EF8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (1975 * ((a1 + v2 + 664) < 0x7FFFFFFF)))))();
}

void sub_1BCAE5F3C()
{
}

uint64_t sub_1BCAE5F50@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 4) = -984936840;
  return result;
}

void sub_1BCAE5F64()
{
  uint64_t v0 = (unint64_t *)STACK[0x498];
  STACK[0x380] = STACK[0x2D0];
  STACK[0x3E0] = *v0;
  JUMPOUT(0x1BCAC81ECLL);
}

uint64_t sub_1BCAE5FB8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F16FA490 - 4 + 8 * ((*(_DWORD *)(a2 + 4) == 1854503571) | 0x40Cu)))(4294925278);
}

uint64_t sub_1BCAE5FF4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v2 + v0 + v1 + 1966353) < 8)
                                     * ((v1 + 235236687) & 0xF1FA90BF ^ 0x99)) ^ v1)))();
}

uint64_t sub_1BCAE605C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((119 * (v0 + 1 == v2 + 4)) ^ v1)))();
}

uint64_t sub_1BCAE612C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v1 - 57) | 0x408) + ((v1 - 79790755) & 0x4C183FF) - 1061)
                                * (*(_DWORD *)(v2 - 0x5B51E979A7EFF0B5) == 984896845)) ^ v1)))();
}

uint64_t sub_1BCAE6194(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v10 = (v7 & (2 * (*(unsigned __int8 *)(a2 + 9) - 1))) + ((*(unsigned __int8 *)(a2 + 9) - 1) ^ v8) == v8
     && (v3 + v4 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v10 * (v6 + ((a3 + 522025276) & 0x1B0570E1) + 1018)) ^ a3)))();
}

void sub_1BCAE61F8()
{
  STACK[0x488] = *(void *)(v0 + 8 * (int)(STACK[0x408] - 595));
  JUMPOUT(0x1BCAD6D3CLL);
}

uint64_t sub_1BCAE6218(uint64_t a1, int a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 > 0x34868CCD;
  int v8 = (a4 ^ 0xF8217EBD) + a2;
  int v9 = v7 ^ (v8 < -881233102);
  BOOL v10 = v8 < v6;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1371 * v7) ^ a4)))(a1);
}

uint64_t sub_1BCAE628C@<X0>(int a1@<W0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v7 = a3 + v5;
  *(unsigned char *)(a2 + v7) = v4;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v7 + (unint64_t)(v3 - 1776) - 15 < 0x38) * a1) ^ (v3 - 214))))();
}

uint64_t sub_1BCAE62C4@<X0>(int a1@<W8>)
{
  *int v1 = (v5 ^ v2) * (v5 + 17);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v3) ^ a1)))();
}

uint64_t sub_1BCAE62F8(uint64_t a1, uint64_t a2, int a3)
{
  STACK[0x360] = v4;
  LODWORD(STACK[0x54C]) = a3 + 14;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 - 152438116) & 0x91605FF ^ 0xCF) * (STACK[0x360] == 0)) ^ (v3 + 1921))))();
}

uint64_t sub_1BCAE630C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((478 * (v0 + 1 != v2 + 4)) ^ v1)))();
}

uint64_t sub_1BCAE63D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 273)))();
}

uint64_t sub_1BCAE64A0(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((730 * (*(_DWORD *)(v1 + 4 * v3) == ((3 * (v2 ^ 0x411)) ^ 0x74C ^ (a1 + 695)))) ^ v2)))();
}

uint64_t sub_1BCAE64E0(double a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__n128 a23,__n128 a24,__n128 a25)
{
  __n128 v26 = (__n128)vld1q_dup_f32(v25);
  v27.n128_u64[0] = 0x8000000080000000;
  v27.n128_u64[1] = 0x8000000080000000;
  return sub_1BCAF5FBC(2260980123, 2271854500, 567963625, 2147483638, 1135927250, 1810228939, 307, 1010, v26, a2, a3, a4, v27, a25, a24, a23);
}

uint64_t sub_1BCAE64F4@<X0>(int a1@<W7>, int a2@<W8>)
{
  if ((a2 - 36307395) <= 0x19 && ((1 << (a2 + 61)) & 0x2000A03) != 0) {
    __asm { BRAA            X10, X17 }
  }
  return v3 ^ 0xC54B0E93;
}

void sub_1BCAE6588(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (1225351577 * ((-2 - ((~a1 | 0x83317A5F) + (a1 | 0x7CCE85A0))) ^ 0xFDCEE06D));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAE6678(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(unsigned __int8 *)(v5 + 1) == (((v6 - 99) | 0x81) ^ 0x85))
                                * ((v6 - a3) ^ (v3 + 1117))) ^ v6)))();
}

uint64_t sub_1BCAE66C4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((103 * (v1 <= v0 + STACK[0x408] - 369 + 380)) ^ (STACK[0x408] - 464))))();
}

uint64_t sub_1BCAE66FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 120) = a25;
  *(void *)(v28 - 112) = a25;
  *(_DWORD *)(v28 - 104) = (v26 + 1300) ^ (((392634972 - ((v28 - 144) | 0x1767225C) + ((v28 - 144) | 0xE898DDA3)) ^ 0x5BE56DF7)
                                         * v25);
  *(void *)(v28 - 144) = a24;
  *(void *)(v28 - 136) = a10;
  *(void *)(v28 - 128) = a23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v26 + 1384)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((((a22 - 810746374) > 0x7FFFFFFE)
                                              * (((v26 ^ 0x200) + 95) ^ 0x135)) ^ (v26 + 407))))(v29);
}

uint64_t sub_1BCAE67C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F16FA490
                                            - 4
                                            + 8 * ((14 * (*(_DWORD *)(a2 + 4) == 1854503571)) ^ 0x265u)))(4294925278);
}

void sub_1BCAE6804()
{
}

uint64_t sub_1BCAE680C(uint64_t result)
{
  unint64_t v1 = 1759421093 * ((result - 2 * (result & 0xCE10C030FCF42454) - 0x31EF3FCF030BDBACLL) ^ 0xE0AE01604F899400);
  int v2 = *(_DWORD *)result - v1;
  int v3 = *(_DWORD *)(result + 16) ^ v1;
  uint64_t v4 = *(void *)(result + 24);
  unint64_t v5 = v4 + v1;
  int v6 = *(_DWORD *)(result + 12) + v1;
  int v7 = *(_DWORD *)(result + 4) + v1;
  uint64_t v8 = *(void *)(result + 40);
  BOOL v9 = v4 != v8;
  BOOL v10 = v5 >= v8 + v1;
  if ((v2 & 1) == 0) {
    BOOL v10 = v9;
  }
  if (v10) {
    int v11 = v6;
  }
  else {
    int v11 = v3;
  }
  *(_DWORD *)(result + 32) = v11 ^ v7;
  return result;
}

void sub_1BCAE689C()
{
  STACK[0x488] = *(void *)(v0 + 8 * (int)(STACK[0x408] - 608));
  JUMPOUT(0x1BCAD6D3CLL);
}

uint64_t sub_1BCAE68C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a11 - 0x1C6D093801E6EF61) = 2082290519 - v14;
  int v20 = 460628867 * ((((v19 - 136) | 0x6316D9D1) - (v19 - 136) + ((v19 - 136) & 0x9CE92628)) ^ 0x2F805BAC);
  *(void *)(v19 - 128) = v15;
  *(_DWORD *)(v19 - 120) = v20 + v17 + 384;
  *(_DWORD *)(v19 - 136) = 102968941 - v20;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 1947)))(v19 - 136);
  int v21 = 535753261 * ((2 * ((v19 - 136) & 0x59E62C60) - (v19 - 136) + 639226782) ^ 0x2CEDDDB1);
  *(void *)(v19 - 136) = v15;
  *(_DWORD *)(v19 - 128) = v21 + ((32 * v18) ^ 0xFCF6FF5F) + ((v17 ^ 0xF9EDFE40) & (v18 << 6)) + 2146170351;
  *(_DWORD *)(v19 - 124) = v21 + v17 + 906;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0x892)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = (v17 + 440) ^ (108757529
                                        * ((((v19 - 136) | 0x8BBB1853) - ((v19 - 136) & 0x8BBB1853)) ^ 0x6B277A78));
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 128) = &STACK[0x7EC954F5752627D1];
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 1875)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = (v17 + 303) ^ (1374699841
                                        * (((v19 - 136) & 0x864C299C | ~((v19 - 136) | 0x864C299C)) ^ 0x1447CE6A));
  *(void *)(v19 - 128) = v15;
  *(void *)(v19 - 120) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0x89C)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((59
                                              * ((v17 ^ (*(_DWORD *)(v19 - 132) > 0x14CED41Au)) & 1)) ^ v17)))(v22);
}

uint64_t sub_1BCAE6B2C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((((v1 ^ 0xEu) < (((a1 ^ 0xE8) + 707) ^ 0x2E8u)) * (7 * (a1 ^ 0xE8) + 186)) ^ a1)))();
}

void sub_1BCAE6B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v14 - 112) = a10;
  *(_DWORD *)(v14 - 120) = v13 - 399 + 535753261 * ((v14 - 120) ^ 0xAF40E2F);
  (*(void (**)(uint64_t))(v12 + 8 * (v13 + 813)))(v14 - 120);
  *(_DWORD *)(v14 - 120) = v13
                         - 399
                         + 535753261 * ((2 * ((v14 - 120) & 0x10A332D0) - (v14 - 120) - 279130835) ^ 0xE5A8C302);
  *(void *)(v14 - 112) = a11;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 + 813)))(v14 - 120);
  *(_DWORD *)(v14 - 104) = (v13 - 666) ^ (108757529 * ((v14 - 120) ^ 0xE09C622B));
  *(void *)(v14 - 120) = v11;
  *(void *)(v14 - 112) = a11;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 + 769)))(v14 - 120);
  JUMPOUT(0x1BCAE6C7CLL);
}

void sub_1BCAE6CB8(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1BCAE6DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((((v8 - 433) ^ 0xFFFFFB59) + (v8 ^ 0x20D)) * (v7 != a7)) ^ v8)))();
}

uint64_t sub_1BCAE6E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((*(_DWORD *)(v9 + (v7 + a5) * (uint64_t)a6) != v6)
                                * (((((v8 - 184) | 0x146) + 142) | 0x60) - 380)) ^ ((v8 - 184) | 0x146))))();
}

uint64_t sub_1BCAE6E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((67 * (a4 + 1 != v9 + 48)) ^ a8)))();
}

uint64_t sub_1BCAE6F5C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 - 263885779 < (v2 ^ 0x6C8 ^ v1)) * (26 * (v2 ^ 0x172) - 582)) ^ v2)))();
}

uint64_t sub_1BCAE6FB0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (a3 ^ (8
                                                   * (a2 - v6 - v4 < (unint64_t)(a3 - 982) - 558)))))(v3);
}

uint64_t sub_1BCAE6FE0()
{
  uint64_t v4 = *(void *)(v6 + 8);
  *(_DWORD *)(v3 - 112) = (v0 - 60) ^ (108757529 * ((2 * ((v3 - 128) & 0x3146E90) - (v3 - 128) - 51670674) ^ 0x1C77F345));
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xAE1)))(v3 - 128);
}

uint64_t sub_1BCAE70A4()
{
  uint64_t v6 = *(void *)(v9 + 8);
  int v7 = 460628867 * ((((v5 - 144) | 0x329A340E) - ((v5 - 144) & 0x329A340E)) ^ 0x7E0CB673);
  *(_DWORD *)(v5 - 128) = v7 + v1 - 1030;
  *(void *)(v5 - 136) = v10;
  *(_DWORD *)(v5 - 144) = 102968941 - v7;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 533)))(v5 - 144);
  *(void *)(v5 - 144) = v4;
  *(void *)(v5 - 136) = v10;
  *(void *)(v5 - 120) = v2;
  *(void *)(v5 - 112) = v2;
  *(void *)(v5 - 128) = v3;
  *(_DWORD *)(v5 - 104) = (v1 + 404) ^ (1759421093
                                      * ((2 * ((v5 - 144) & 0x7AB93DF8) - (v5 - 144) + 88523270) ^ 0xB63B7252));
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 488)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = (v1 - 974) ^ (108757529
                                      * ((((v5 - 144) | 0x1013C975) - (v5 - 144) + ((v5 - 144) & 0xEFEC3688)) ^ 0xF08FAB5E));
  *(void *)(v5 - 144) = v2;
  *(void *)(v5 - 136) = v6;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xE73)))(v5 - 144);
}

uint64_t sub_1BCAE7218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a16 = 870 - 460628867 * (((&a14 | 0xD3E63AA1) + (~&a14 | 0x2C19C55E)) ^ 0x9F70B8DD);
  a14 = &STACK[0x5224DE3D6C39C42B];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v17 + 16872))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((95 * (a15 != v16)) ^ 0x61Bu)))(v18);
}

void sub_1BCAE72AC()
{
}

uint64_t sub_1BCAE72B8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v8 = a2 - 465;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((*(unsigned char *)(v6 + v5)
                                                   - *(unsigned char *)(*(void *)(a1 + 8 * (v8 ^ 0x229)) - 4)
                                                   + 84) != (((v8 - 98) | v4) + 32))
                                * (((v8 + v2) & v3) - 806)) ^ (v8 + 1060))))();
}

uint64_t sub_1BCAE7440(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((137 * (v2 ^ 0x743)) ^ 0x236) * ((a2 + a1 + 1220829567) > 7)) ^ v2)))();
}

uint64_t sub_1BCAE74C0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((7
                                     * (*(unsigned char *)(v4
                                                 + (v0 ^ 0xFFFFFFFFAABC05E9)
                                                 + v2
                                                 + ((unint64_t)(v2 < v1) << 32)) == 0)) ^ v0)))();
}

uint64_t sub_1BCAE7568(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((7 * (v4 == ((a4 + 982) ^ 0x6DFFF78A))) | (a4 + 767))))();
}

uint64_t sub_1BCAE75A8@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W7>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((*(unsigned char *)(v5 + v4)
                                                   - *(unsigned char *)(*(void *)(a1 + 8 * (a4 ^ 0x251)) - 8)
                                                   + 84) == (a4 ^ a3))
                                * a2) ^ (a4 - 471))))();
}

uint64_t sub_1BCAE7600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  int v12 = (*(_DWORD *)(v10 + (v9 + a5) * (uint64_t)a6 + 40) & 8) == ((v8 + a8) & 0x7724CF7E) + (v8 ^ 0xFFFFFDBF);
  return (*(uint64_t (**)(void))(v11 + 8 * (((32 * v12) | (v12 << 6)) ^ v8)))();
}

uint64_t sub_1BCAE7650(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *uint64_t v6 = veorq_s8(*(int8x16_t *)(a4 + v4), a1);
  return (*(uint64_t (**)(void))(v7 + 8 * (v8 + v5 - 11)))();
}

void sub_1BCAE7698(_DWORD *a1@<X8>)
{
  unsigned int v4 = (*v1 + v2) * (v3 + 194103559) - ((388208382 * (*v1 + v2) - 953290010) & 0xB775A3BC) + 1062325073;
  unsigned char *v5 = HIBYTE(v4) ^ 0x5B;
  v5[1] = BYTE2(v4) ^ 0x3A;
  void v5[2] = BYTE1(v4) ^ 0x51;
  v5[3] = v4 ^ 0x5E;
  v1[4] = *a1;
}

uint64_t sub_1BCAE7754@<X0>(char a1@<W1>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v7 = a3 + v4;
  *(unsigned char *)(v7 + a2 + 62) = a1;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v7 + (unint64_t)(3 * (v3 ^ 0x15Au) - 174) < 0x38) * v5) ^ (3 * (v3 ^ 0x15A)))))();
}

uint64_t sub_1BCAE7794@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((79 * (*(_DWORD *)(a16 + 4 * (((v17 + 1579468496) & 0xA1DB33FE ^ a1) + v18)) == v16)) ^ (v17 - 1329))))();
}

uint64_t sub_1BCAE77E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  STACK[0x5B8] = STACK[0x428];
  unsigned int v6 = LODWORD(STACK[0x5AC]) - ((2 * LODWORD(STACK[0x5AC]) + 585960180) & 0x870B6BFC) + 1425816440;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((11
                                * (((((((v4 - 587783370) & 0x2308DAE5) - 467) | 0xC) ^ 0xFF7F7761) & (2 * v6) ^ 0x870B63FC)
                                 + (v6 ^ 0xBC3A0E00)
                                 - 35731856 == a4)) ^ (((v4 - 587783370) & 0x2308DAE5) + 1071))))();
}

uint64_t sub_1BCAE7810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8 * ((231 * (a11 + 4 < a11)) ^ v11)))(a1, a2);
}

uint64_t sub_1BCAE7878()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v1 - 2125950958) & 0x7EB76F3F) + 214) ^ 0x100) * (v0 != v2)) ^ v1)))();
}

void sub_1BCAE78C0(int a1@<W8>)
{
  uint64_t v3 = 4 * (v2 - 501830478);
  int v4 = (int *)(STACK[0x400] + v3);
  int v5 = *v4;
  LODWORD(v4) = -1567983505
              * ((*(_DWORD *)(*(void *)STACK[0x3E8]
                            + (int)(*(_DWORD *)STACK[0x3E0] & (((a1 + 1963563552) & 0x8AF6679B) - 884149692))) ^ v4) & 0x7FFFFFFF);
  LODWORD(v4) = v4 ^ (v4 >> 16);
  unsigned int v6 = -1567983505 * v4;
  *(_DWORD *)(v1 + v3) ^= v5 ^ *((_DWORD *)*(&off_1F16F9FD0 + a1 - 1060) + HIBYTE(v6) - 2) ^ *((_DWORD *)*(&off_1F16F9FD0 + (a1 ^ 0x403))
                                                                                             + HIBYTE(v6)
                                                                                             + 3) ^ *((_DWORD *)*(&off_1F16F9FD0 + a1 - 963) + HIBYTE(v6) + 2) ^ (2020540416 * v4) ^ v6 ^ (100222787 * HIBYTE(v6));
  JUMPOUT(0x1BCAC672CLL);
}

void sub_1BCAE79BC()
{
  (*(void (**)(void, unint64_t, void))(v1 + 8 * (v0 ^ 0xBE4)))(*(unsigned int *)STACK[0x2C8], STACK[0x608], LODWORD(STACK[0x558]));
  JUMPOUT(0x1BCAE79ECLL);
}

uint64_t sub_1BCAE7ADC()
{
  return sub_1BCAE7B38();
}

void sub_1BCAE7B38(int a1@<W8>)
{
  uint64_t v6 = *(void *)(v4 - 0x5B51E979A7EFF0CDLL);
  int v7 = *v3;
  unsigned int v8 = *v3 + a1;
  *(unsigned char *)(v6 + v8) = HIBYTE(v1) ^ 0x57;
  *(unsigned char *)(v6 + v7 + ((v2 - 10) ^ (a1 - 195))) = BYTE2(v1) ^ 0xBD;
  *(unsigned char *)(v6 + v8 + 2) = BYTE1(v1) ^ 0x8C;
  *(unsigned char *)(v6 + v8 + 3) = v1 ^ 0x70;
  uint64_t v9 = *(void *)(v4 - 0x5B51E979A7EFF0CDLL);
  int v10 = v5 - 2 * ((v5 + 693964968) & 0x5BBAD1DF ^ v5 & 1) - 2062032250;
  unsigned int v11 = ((2 * (a1 + *v3 + 4)) & 0xFF9AC6FE) + ((a1 + *v3 + 4) ^ 0x7FCD637F) - 2144166783;
  *(unsigned char *)(v9 + v11) = HIBYTE(v10) ^ 0x5B;
  *(unsigned char *)(v9 + v11 + 1) = BYTE2(v10) ^ 0x3A;
  *(unsigned char *)(v9 + v11 + 2) = BYTE1(v10) ^ 0x51;
  *(unsigned char *)(v9 + v11 + 3) = (v5 - 2 * ((v5 - 88) & 0xDF ^ v5 & 1) - 122) ^ 0x5E;
  int *v3 = v12;
}

uint64_t sub_1BCAE7C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  int v48 = 3804331 * ((((v47 - 160) | 0x75EBD8D4) - (v47 - 160) + ((v47 - 160) & 0x8A142728)) ^ 0x8F752B82);
  *(_DWORD *)(v47 - 160) = v48 + v46 + 1034;
  *(_DWORD *)(v47 - 156) = (a18 - 46369468) ^ v48;
  STACK[0x318] = a15;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v46 + 2115)))(v47 - 160);
  unsigned int v50 = ((v46 + 17436266) | 0x8744046) ^ a45 & 0x3F ^ 0x97E4EFF;
  *(&a36 + v50) = 0;
  return (*(uint64_t (**)(uint64_t))(v45 + 8 * (((v50 > 0x37) * ((v46 + 164) ^ 0x62)) | v46)))(v49);
}

void sub_1BCAE7D5C()
{
  STACK[0x488] = *(void *)(v0 + 8 * (int)(STACK[0x408] - 575));
  JUMPOUT(0x1BCAD6D3CLL);
}

uint64_t sub_1BCAE7D7C@<X0>(int a1@<W5>, int a2@<W6>, unsigned int a3@<W8>)
{
  int v6 = *(_DWORD *)(v4 + v3 * (uint64_t)a1 + 36);
  BOOL v8 = v6 - 1216059419 > (int)(a3 + 1968787195) || v6 - 1216059419 < SLODWORD(STACK[0x400]);
  BOOL v9 = v6 != a2 + ((a3 - 1254633709) & 0x4AC82EAB) - 1057 && v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((224 * v9) ^ a3)))();
}

uint64_t sub_1BCAE7DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * ((78
                                                                        * (v8 < 3 * (a8 ^ 0x326)
                                                                              + ((a8 + 58087873) & 0xFC89A7AF)
                                                                              - 1783)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_1BCAE7E40()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((226 * (v0 + v2 + ((v1 - 1100) | 0x404u) - 1813 > 1)) ^ v1)))();
}

uint64_t sub_1BCAE7E78()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((497
                                * (((v2 ^ (*(_DWORD *)(v0 + 4 * (v3 + v5 - 1)) == ((v2 + 17) ^ v1))) & 1) == 0)) ^ v2)))();
}

void sub_1BCAE7EBC()
{
}

uint64_t sub_1BCAE7EDC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 2135840843) & 0x7F4E55EF) - 24) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1BCAE7F28(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 + ((v7 - 640 + v6) & a1) == 1924) * a2) ^ (v7 - 640))))();
}

uint64_t sub_1BCAE7F64(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v5 = v4 + (((a3 + 603) | 0x400) ^ (a3 + 1635)) != ((5 * (((a3 - 1) | 1) ^ 0x160)) ^ 0x129);
  return (*(uint64_t (**)(void))(v3 + 8 * (((4 * v5) | (8 * v5)) ^ (a3 - 80))))();
}

uint64_t sub_1BCAE7FBC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((22
                                * (((673 * (v0 ^ 0x56B)) ^ (v2 - 639)) + v1 < ((v0 - v4 - 1191) ^ 0x9B36033B)
                                                                                          + v1)) ^ v0)))();
}

void sub_1BCAE8018()
{
  STACK[0x418] = v0;
  STACK[0x5C8] = STACK[0x400];
  STACK[0x4D8] = *(void *)(v2 + 8 * v1);
  JUMPOUT(0x1BCAE80B8);
}

void sub_1BCAE80F4()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1BCAE8118);
}

uint64_t sub_1BCAE81CC@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  int v7 = (char *)&STACK[0x670] + v4 + (v2 - 890) - 0x265CB198B5761E25;
  *(_DWORD *)int v7 = 1893250515;
  *((void *)v7 + 1) = 0;
  *((_DWORD *)v7 + 4) = 49010508;
  *((_DWORD *)v7 + 6) = 1854503558;
  *((void *)v7 + 4) = 0;
  *(_DWORD *)((char *)&STACK[0x670] + v4 + (v2 - 890) - 0x265CB198B5761DFDLL) = 1854503558;
  STACK[0x410] = (unint64_t)&STACK[0x670] + v4 + (v2 - 890) - 0x265CB198B5761DFDLL;
  *(unint64_t *)((char *)&STACK[0x670] + v4 + (v2 - 890) - 0x265CB198B5761DF5) = 0;
  *((_DWORD *)v7 + 14) = 1854503558;
  STACK[0x4A8] = (unint64_t)&STACK[0x670] + v4 + (v2 - 890) - 0x265CB198B5761DF5;
  STACK[0x598] = (unint64_t)(v7 + 56);
  *((void *)v7 + 8) = 0;
  STACK[0x498] = (unint64_t)(v7 + 64);
  *((_DWORD *)v7 + 18) = 1854503558;
  *((void *)v7 + 10) = 0;
  STACK[0x440] = (unint64_t)(v7 + 72);
  STACK[0x528] = (unint64_t)(v7 + 80);
  v7[88] = v3;
  *(_DWORD *)uint64_t v5 = 1893250515;
  *(__n128 *)(v5 + 4) = a2;
  *(_DWORD *)(v5 + 20) = 0;
  *(_DWORD *)(v5 + 24) = 1854503558;
  *(_DWORD *)(v5 + 28) = 242191471;
  STACK[0x2D8] = v5 + 28;
  *(__n128 *)(v5 + 436) = a2;
  *(__n128 *)(v5 + 452) = a2;
  *(void *)(v5 + 468) = 0;
  *(_DWORD *)(v5 + 232) = 242191471;
  STACK[0x2D0] = v5 + 232;
  *(void *)(v5 + 1128) = 0x8080808080808080;
  *(void *)(v5 + 1136) = 0x8080808080808080;
  *(void *)(v5 + 1144) = 2155905152;
  *(void *)(v5 + 1152) = 0;
  *(void *)(v5 + 1160) = 0;
  *(__n128 *)(v5 + 1168) = a2;
  *(__n128 *)(v5 + 1184) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((145 * ((a1 ^ 0x37B) == 1344)) ^ a1)))();
}

void sub_1BCAE830C(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = 1224239923 * (((a1 | 0x53DFEB40) - (a1 & 0x53DFEB40)) ^ 0xA16C1697);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = (*(unsigned char *)(a1 + 32) ^ v1);
  uint64_t v4 = (char *)*(&off_1F16F9FD0 + (v2 ^ 0x5BE)) - 4;
  (*(void (**)(void, uint64_t (*)()))&v4[8 * v2 + 6608])(*(&off_1F16F9FD0 + (v2 & 0x4BA4C0BB)), sub_1BCB01F40);
  uint64_t v6 = *(void *)((char *)*(&off_1F16F9FD0 + (v2 ^ 0x55D)) - 4);
  unsigned int v5 = v2
     + 235795823 * ((1116804802 - (&v5 | 0x429116C2) + (&v5 | 0xBD6EE93D)) ^ 0x29C3A064)
     - 829;
  (*(void (**)(unsigned int *))&v4[8 * v2 + 6696])(&v5);
  __asm { BRAA            X8, X17 }
}

void sub_1BCAE847C()
{
}

void sub_1BCAE8484(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 3804331 * ((a1 & 0x618DD5DA | ~(a1 | 0x618DD5DA)) ^ 0x64ECD973);
  BOOL v2 = *(_DWORD *)(*(void *)(a1 + 16) - 0x7EC954F57526279DLL) == 874675926;
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1BCAE8540(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  v70.val[1].i64[0] = ((_BYTE)a4 + 12) & 0xF;
  v70.val[1].i64[1] = ((_BYTE)a4 + 11) & 0xF;
  v70.val[2].i64[0] = ((_BYTE)a4 + 10) & 0xF;
  v70.val[2].i64[1] = ((_BYTE)a4 + 9) & 0xF;
  v70.val[3].i64[0] = ((_BYTE)a4 + 8) & 0xF;
  v70.val[3].i64[1] = ((_BYTE)a4 + 7) & 0xF;
  v71.val[0].i64[0] = ((_BYTE)a4 + 6) & 0xF;
  v71.val[0].i64[1] = ((_BYTE)a4 + 5) & 0xF;
  v71.val[1].i64[0] = ((_BYTE)a4 + 4) & 0xF;
  v71.val[1].i64[1] = (a4 + 3) & 0xF;
  v71.val[2].i64[0] = (a4 + 2) & 0xF;
  v71.val[2].i64[1] = ((_BYTE)a4 + 1) & 0xF;
  v71.val[3].i64[0] = a4 & 0xF;
  v71.val[3].i64[1] = ((_BYTE)a4 - 1) & 0xF;
  v64.i64[0] = 0x505050505050505;
  v64.i64[1] = 0x505050505050505;
  v65.i64[0] = 0x8080808080808080;
  v65.i64[1] = 0x8080808080808080;
  uint64_t v66 = (a4 + v59);
  v70.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v59) & 0xF;
  v70.val[0].i64[1] = ((_BYTE)a4 + 13) & 0xF;
  v67.i64[0] = vqtbl4q_s8(v70, (int8x16_t)xmmword_1BCB19A20).u64[0];
  v67.i64[1] = vqtbl4q_s8(v71, (int8x16_t)xmmword_1BCB19A20).u64[0];
  int8x16_t v68 = vrev64q_s8(vorrq_s8(vmulq_s8(v67, v64), v65));
  *(int8x16_t *)(v63 - 15 + v66) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v61 + (v66 & 0xF) - 15), *(int8x16_t *)(v63 - 15 + v66)), veorq_s8(*(int8x16_t *)(v62 + (v66 & 0xF) - 15), *(int8x16_t *)(v60 + (v66 & 0xF) - 15))), vextq_s8(v68, v68, 8uLL));
  return (*(uint64_t (**)(void))(a58 + 8
                                    * ((468 * (((a6 + 695560549) & 0xD68A97F6) - 1382 == (v58 & 0xFFFFFFF0))) ^ a6)))();
}

uint64_t sub_1BCAE86AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((211 * (a4 + 1 == v5 + 24)) ^ a1)))();
}

uint64_t sub_1BCAE8770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, uint64_t a16, unsigned int a17, int a18, unint64_t *a19)
{
  unsigned int v22 = 1759421093
      * (((&a14 | 0x805BE6CF) - &a14 + (&a14 & 0x7FA41930)) ^ 0x3326569B);
  a14 = 1518258466 - v22;
  a19 = &STACK[0x38DF4D133EEC728C];
  a16 = a11;
  a17 = v22 ^ 0x86F8B78A;
  a18 = v22 + v21 + 20 - 2024874379;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * ((v21 + 20) ^ 0xD21)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8 * ((609 * (a15 == v19 + ((v21 + 20) ^ 0x7D3) - 707)) ^ (v21 + 20))))(v23);
}

uint64_t sub_1BCAE8850(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(void *)(v7 - 7 + (v10 + v9 + v12 - a3)) = *(void *)(v6 - 7 + (v10 + v9 + v12 - a3));
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v5
                                                                     + 8
                                                                     * (((a3 - (v8 & 0xFFFFFFF8) == -8) * (a5 - 1384)) ^ a5)))(a1, a2, a3 - (v8 & 0xFFFFFFF8) + 16, v11 - (v8 & 0xFFFFFFF8));
}

void sub_1BCAE88A4(_DWORD *a1, int a2, uint64_t a3, int a4)
{
  *((unsigned char *)a1 + v7 + 4) = v10;
  int v11 = v9 + v6;
  *a1 = v11 - 1283035719;
  int v12 = a1 + 1;
  *((unsigned char *)v12 + (a2 + v6)) = v8;
  *((unsigned char *)v12 + (v4 + v6 - 2)) = -95;
  *((unsigned char *)v12 + ((a4 - 453341214) ^ (v5 + 97)) + v11 - 1978568504) = -81;
  *((unsigned char *)v12 + (v11 - 1525227190)) = 114;
  JUMPOUT(0x1BCAD8754);
}

uint64_t sub_1BCAE8920(uint64_t a1)
{
  int v1 = 535753261 * ((((2 * a1) | 0x48BC2786) - a1 - 610145219) ^ 0x2EAA1DEC);
  int v2 = *(_DWORD *)a1 - v1;
  int v3 = *(_DWORD *)(a1 + 16) + v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x7EC954F57526279DLL);
  unsigned int v6 = v4 - 874675926;
  BOOL v5 = v4 - 874675926 < 0;
  unsigned int v7 = 874675926 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + (v2 ^ 0x728))
                              + 8
                              * ((((v3 - 2048063208) < 4 * (unint64_t)v7)
                                * (((v2 - 1178) | 0x481) ^ 0x79B)) | v2)
                              - 4))();
}

uint64_t sub_1BCAE89F8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * ((962 * (v1 - 1316140811 < (v3 ^ 7u))) ^ (v3 + 174))))(a1, 128);
}

uint64_t sub_1BCAE8A3C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BCAE8A80((32 - v5), (a2 - 19), 3681974360, v6 - 0x7EC954F575262799, a5, (a2 + 1411584801), 2883382906, 21);
}

uint64_t sub_1BCAE8A80(char a1, int a2, int a3, void *a4, int a5, int a6, int a7, int a8)
{
  unsigned int v14 = *(_DWORD *)(*a4 + 4 * (v12 + v11)) ^ v9;
  *(_DWORD *)(*a4 + 4 * (v10 + v8)) = ((v14 >> a1) | (v9 + (a6 & a7) - 570) ^ a5)
                                      + v9
                                      - ((a3 + 2) & (2 * ((v14 >> a1) | (v9 + (a6 & a7) - 570) ^ a5)));
  return (*(uint64_t (**)(void))(v13 + 8 * (int)((((v12 - 1 + v11) >> 31) * a8) ^ a2)))();
}

uint64_t sub_1BCAE8AF4()
{
  if (v2 < 0) {
    int v2 = -v2;
  }
  if (v0 >= 0) {
    unsigned int v4 = v0;
  }
  else {
    unsigned int v4 = -v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 224) ^ 0x3AD) + ((v1 - 224) | 0x3AD) - 4044) * (v2 > v4)) ^ v1)))();
}

uint64_t sub_1BCAE8B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                                         + 8
                                                                                         * ((219
                                                                                           * (v5 <= v4 + v6 - 908391360)) ^ (v4 + v6 + 27))))(a1, a2, a3, 2260980123, 2147483638, 1135927250);
}

uint64_t sub_1BCAE8B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((((a8 + ((v9 + 1856) | 0xC) - 2062) ^ (a8 - 162)) - 208) * ((v8 ^ 0xEu) < 8)) ^ ((v9 + 1856) | 0xC))))();
}

void sub_1BCAE8BD0(uint64_t a1)
{
  (*(uint64_t (**)(void))(v1 + 17184))();
  (*(void (**)(uint64_t))(v1 + 16928))(a1);
  JUMPOUT(0x1BCAD206CLL);
}

uint64_t sub_1BCAE8C18@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x52u));
  return v3(v1);
}

void sub_1BCAE8C4C()
{
}

uint64_t sub_1BCAE8C58(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 67;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

void sub_1BCAE8C78()
{
}

void sub_1BCAE8D20()
{
}

uint64_t sub_1BCAE8D80(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  __int16 v2 = *(_DWORD *)(result + 8) - -24687 * (((result | 0xEC2B) - (result & 0xEC2B)) ^ 0xE018);
  *(_DWORD *)(v1 - 0x781B11C067843F3ALL) = v2 & 0x1FF ^ 0xD70D4364;
  *(void *)(v1 - 0x781B11C067843F5ALL) = 0x202E75F1DB440A9BLL;
  *(_DWORD *)(v1 - 0x781B11C067843F3ELL) = 1109409085;
  int v3 = v2 ^ 0x3B;
  if (v3 == 1)
  {
    int v4 = 1109409101;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x781B11C067843F42) = -158799050;
    int v4 = 1109409105;
LABEL_5:
    *(void *)(v1 - 0x781B11C067843F52) = 0xDA97A14F521F29C7;
    *(void *)(v1 - 0x781B11C067843F4ALL) = 0x25685EB0ADE0D638;
    *(_DWORD *)(v1 - 0x781B11C067843F3ELL) = v4;
  }
  *(_DWORD *)(result + 4) = 1919114006;
  return result;
}

uint64_t sub_1BCAE8EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v12
                                                                      + 8
                                                                      * ((118 * ((a8 + 1 + v8) < 0x30)) ^ v9)))(v9 + 676, v10, v10, v11 + 48);
}

uint64_t sub_1BCAE8F94(uint64_t a1)
{
  int v1 = 108757529 * (a1 ^ 0xE09C622B);
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + ((*(_DWORD *)(a1 + 8) + v1) ^ 0x284))
                              + 8
                              * ((((*(_DWORD *)(a1 + 28) + v1 - 701983609) > 0xFFFFFEFE)
                                * (*(_DWORD *)(a1 + 8) + v1 - 495)) ^ (*(_DWORD *)(a1 + 8) + v1))
                              - 4))();
}

uint64_t sub_1BCAE9004()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((98
                                * ((((v0 + 77) ^ (*(void *)(v1 + 8) == 0x685C86573AC75C5FLL)) & 1) == 0)) ^ v0)))();
}

void sub_1BCAE9050()
{
}

void sub_1BCAE9078()
{
}

uint64_t sub_1BCAE9080(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = 82;
  }
  else {
    char v2 = 80;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0xF3) + v2;
  return 0;
}

uint64_t sub_1BCAE90B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (v8 - 1197) | 0x48Au;
  *(void *)(a6 + v7 + ((v12 - 266) ^ (unint64_t)(v9 + 385))) = v11;
  return (*(uint64_t (**)(void))(v10 + 8 * (int)((37 * (((v12 ^ 0xFFFFFFFFFFFFFB73) & v6) != 8)) ^ v12)))();
}

uint64_t sub_1BCAE9118(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  int v16 = (unsigned int *)(v14 + 4 * v10);
  uint64_t v17 = v10 + 1;
  int v18 = *(_DWORD *)(v14 + 4 * v17);
  unsigned int v19 = v13 ^ ((v18 & 0x7FFFFFFE | v9 & 0x80000000) >> 1);
  *int v16 = v16[397] ^ a3 ^ *(_DWORD *)(a5 + 4 * (v18 & 1)) ^ (v19 + a2 - ((v19 << ((v8 + a7) & a8 ^ v12)) & a1));
  return (*(uint64_t (**)(void))(v15 + 8 * (((v17 == 227) * v11) ^ v8)))();
}

void sub_1BCAE918C()
{
}

uint64_t sub_1BCAE919C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1564
                                * ((((*(unsigned __int8 *)(v3 + 6) - 1) << (6 * (v2 ^ 0x1D) - 13)) & v0)
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)) ^ v2)))();
}

void sub_1BCAE91E8()
{
}

uint64_t sub_1BCAE9260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v14 = *v12;
  *(_DWORD *)(a9 - 0x335F4D7B17DD4E17) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8 * (((v14 == 0x7EC954F5752627A1) * (57 * ((v11 - 1014) ^ 0x262) - 303)) ^ (v11 - 1014))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

void sub_1BCAE9338(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 - 535753261 * ((a1 + 317168069 - 2 * (a1 & 0x12E799C5)) ^ 0x181397EA);
  uint64_t v2 = *(void *)(a1 + 8);
  v4[0] = v1 + 235795823 * (((v4 | 0xCFB44D7) - (v4 & 0xCFB44D7)) ^ 0x98560D8E) - 491;
  uint64_t v5 = v2;
  uint64_t v3 = (char *)*(&off_1F16F9FD0 + (v1 & 0x295CF49E)) - 4;
  (*(void (**)(_DWORD *))&v3[8 * (v1 ^ 0xBCE)])(v4);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCAE9460@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a3 + 8 * ((11 * (v3 != 0)) ^ a2)))(a1, 50 * (a2 ^ 0x304u));
}

void sub_1BCAE9490()
{
}

void sub_1BCAE95E8()
{
}

uint64_t sub_1BCAE979C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 - 1854503558 + ((v0 - 1647389696) & 0x623129D9) - 469) & ((v0 ^ 0x226) - 476))
                                - LODWORD(STACK[0x3C8]) != -1854503558) | v0)))();
}

void sub_1BCAE97F8(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x18D77CDD39E8CCF6) - 879331565;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 - 582441645;
  BOOL v4 = v2 < 0x5B7D2811;
  BOOL v5 = v2 > v3;
  if (v3 < 0x5B7D2811 != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCAE98EC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * (((a5 == a1 + 1854502143)
                                                                                  * (((a1 - 588369) & 0x5FFBFEDF)
                                                                                   - 1609762526)) ^ a1)))(4294925278, a2, a3, a4, 2685204541);
}

uint64_t sub_1BCAE997C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58,int a59)
{
  return (*(uint64_t (**)(void))(v59
                              + 8
                              * (a59 ^ (14
                                      * (((2 * (a25 - ((2 * a57) & 0x9D3464B2) + 551248556)) & 0x6E773D02 ^ 0xC342402)
                                       + ((a25 - ((2 * a57) & 0x9D3464B2) + 551248556) ^ 0xF9A1ACD8)
                                       + 1811709484 == 590879917)))))();
}

uint64_t sub_1BCAE9A40(uint64_t a1, double a2)
{
  *(double *)(v5 + (v3 ^ v6) + a1) = a2;
  BOOL v9 = v4 == a1;
  uint64_t v10 = a1 + 8;
  int v11 = !v9;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((v11 * v7) | v2)))(v10);
}

uint64_t sub_1BCAE9A6C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void, void))(v2
                                                   + 8
                                                   * (int)(((((a2 | 0x118) + 1667479217) & 0x9C9C4DF1 ^ 0x333)
                                                          * ((v3 & 0x18) == 0)) ^ (a2 | 0x118))))((a2 | 0x118u) + 655, (v4 - v5));
}

void sub_1BCAE9AB8()
{
}

void sub_1BCAE9AC4()
{
}

uint64_t sub_1BCAE9ACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1 + 1;
  unsigned char *v3 = (v2 ^ v1 ^ (v4 + v7) ^ 0xAA) * (v5 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * (((16 * (v7 == 91)) | (32 * (v7 == 91))) ^ v2)))();
}

uint64_t sub_1BCAE9AD4()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((597 * (v3 + v2 - 2 < (v0 ^ v1) + 2147482381)) ^ v0)))();
}

uint64_t sub_1BCAE9B18()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((424 * (((*v2 == 0) ^ (v0 + 66)) & 1)) ^ (v0 + 65))))();
}

uint64_t sub_1BCAE9B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((a10 != v10 + ((v12 + 304638147) & 0xEDD797F7) - 1179) | v12)))();
}

void sub_1BCAE9B94(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a6 = v8 + 460628867 * ((2 * (&a3 & 0x3CFA7870) - &a3 + 1124435849) ^ 0xF9305F4) + 1033;
  a4 = a1;
  a5 = v7;
  a3 = v7;
  (*(void (**)(uint64_t *))(v6 + 8 * (v8 ^ 0x950)))(&a3);
  JUMPOUT(0x1BCAE9BF8);
}

uint64_t sub_1BCAE9C20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F16FA490 + 8 * ((1891 * (*(_DWORD *)(a2 + 4) == 1854503559)) ^ 0x1B5u) - 4))();
}

uint64_t sub_1BCAE9C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v19 - 120) = v18
                         + 535753261 * ((((v19 - 144) | 0x256726A7) + (~(v19 - 144) | 0xDA98D958)) ^ 0x2F932889)
                         + 874;
  *(void *)(v19 - 112) = v15;
  *(void *)(v19 - 144) = v16;
  *(void *)(v19 - 136) = v15;
  *(void *)(v19 - 128) = v17;
  (*(void (**)(uint64_t))(v13 + 8 * (v18 ^ 0xBE4)))(v19 - 144);
  int v20 = 1225351577 * ((v19 - 144) ^ 0x7EFF9A32);
  *(void *)(v19 - 136) = a12;
  *(_DWORD *)(v19 - 140) = (v18 - 756) ^ v20;
  *(_DWORD *)(v19 - 128) = (v12 + v14) ^ v20;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v18 + 1179)))(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((13 * (*(_DWORD *)(v19 - 144) != (((v18 + 109) | 0x24A) ^ 0x37C75F2))) ^ v18)))(v21);
}

void sub_1BCAE9D4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = (*(_DWORD *)(a2 + 4) - 1854503558) < 5;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCAE9DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8 * ((1266 * ((v18 ^ 0x90CE512F) + a18 - *(_DWORD *)(a2 + 4) == -1305768480)) ^ v19)))();
}

void sub_1BCAE9DF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X13, X17 }
}

void sub_1BCAE9F04()
{
}

uint64_t sub_1BCAE9F0C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 + v2 - 1209) * (v3 <= 0xA4A31FA)) ^ (v1 + v2 - 527))))();
}

uint64_t sub_1BCAE9F54()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((22 * (v0 == 1)) ^ v1)))();
}

uint64_t sub_1BCAE9F60(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((862
                                * ((((*(unsigned __int8 *)(a2 + 8) - 1) << (v5 + (a3 ^ (v3 + 97)) - 98)) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v7) == v7)) ^ a3)))();
}

uint64_t sub_1BCAE9FAC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + v0 + 1619012099 >= (v2 ^ 0x60Fu) - 604) * (v2 - 911)) ^ v2)))();
}

uint64_t sub_1BCAE9FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v23 - 104) = (v21 + 430) ^ (108757529
                                        * ((-889115136 - ((v23 - 120) | 0xCB012E00) + ((v23 - 120) | 0x34FED1FF)) ^ 0xD462B3D4));
  *(void *)(v23 - 120) = a21;
  *(void *)(v23 - 112) = a17;
  (*(void (**)(uint64_t))(v22 + 8 * (v21 ^ 0x8F7)))(v23 - 120);
  *(void *)(v23 - 104) = a21;
  *(void *)(v23 - 112) = a19;
  *(_DWORD *)(v23 - 120) = (v21 + 293) ^ (1374699841
                                        * ((((v23 - 120) | 0x4D2E3E7F) + (~(v23 - 120) | 0xB2D1C180)) ^ 0x20DA2677));
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 ^ 0x896)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((498 * (*(_DWORD *)(v23 - 116) <= 0x14CED41Au)) ^ v21)))(v24);
}

void sub_1BCAEA130(unint64_t a1)
{
  STACK[0x568] = a1;
  LODWORD(STACK[0x44C]) = v1;
  JUMPOUT(0x1BCAEA154);
}

uint64_t sub_1BCAEA1C8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v10 = (a3 + a1 + a2) + a5;
  uint64_t v11 = ((_BYTE)a3 + (_BYTE)a1 + (_BYTE)a2) & 0xF;
  unint64_t v12 = v11 + v7 - v10;
  unint64_t v13 = (v11 | v6) - v10;
  unint64_t v14 = (v11 | v8) - v10;
  BOOL v18 = (unint64_t)(v5 - a5) < 0x10 || v12 < 0x10 || v13 < 0x10 || v14 < 0x10;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((2 * ((v18 ^ (-99 * (a4 ^ 0xF9))) & 1)) & 0xFB | (4 * ((v18 ^ (-99 * (a4 ^ 0xF9))) & 1))) ^ a4)))();
}

uint64_t sub_1BCAEA240(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v2 ^ (((unint64_t)(v1 - a1) < 0x20) | (2 * ((unint64_t)(v1 - a1) < 0x20))))))();
}

uint64_t sub_1BCAEA2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * (v4 - 568)))(a1, a2, a3, 13832, 889516850);
}

uint64_t sub_1BCAEA2D0@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W7>, int a4@<W8>, int8x16_t a5@<Q0>)
{
  *(int8x16_t *)(v7 + v6) = veorq_s8(*(int8x16_t *)(v9 + (v5 + a1 + v6)), a5);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == 48) * a3) ^ (a2 + a4 - 280))))();
}

uint64_t sub_1BCAEA30C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((LODWORD(STACK[0x5AC]) - 1854505607) < 0xFFFFF7FF)
                                     * (((v0 + 2064065272) & 0x84F8DB7E) - 416)) ^ v0)))();
}

uint64_t sub_1BCAEA358()
{
  uint64_t v6 = v1;
  int v7 = (v0 - 1118580319) & 0x42AC2FFF;
  int v8 = 460628867 * ((((v5 - 144) | 0x2522441F) - ((v5 - 144) & 0x2522441F)) ^ 0x69B4C662);
  *(_DWORD *)(v5 - 128) = v8 + v0 + 283;
  *(_DWORD *)(v5 - 144) = 102968941 - v8;
  *(void *)(v5 - 136) = v11;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1846)))(v5 - 144);
  *(void *)(v5 - 120) = v6;
  *(void *)(v5 - 112) = v6;
  *(void *)(v5 - 144) = v3;
  *(void *)(v5 - 136) = v11;
  *(_DWORD *)(v5 - 104) = (v0 + 1717) ^ (1759421093
                                       * ((((v5 - 144) | 0x5FD26FEB) + (~(v5 - 144) | 0xA02D9014)) ^ 0xECAFDFBE));
  *(void *)(v5 - 128) = v4;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1801)))(v5 - 144);
  *(void *)(v5 - 144) = v6;
  *(void *)(v5 - 136) = v10;
  *(_DWORD *)(v5 - 128) = (v7 - 78) ^ (108757529
                                     * ((2 * ((v5 - 144) & 0x10B13918) - (v5 - 144) + 1867433699) ^ 0x8FD2A4C8));
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v7 + 1357)))(v5 - 144);
}

uint64_t sub_1BCAEA454(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 - 904) & v1) == 0) * (((a1 - 350) | 0x190) ^ 0x3D8)) | a1)))();
}

void sub_1BCAEA490(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6, int a7)
{
  unsigned int v11 = ((((&a3 | 0x5F7CCEDC) ^ 0xFFFFFFFE) - (~&a3 | 0xA0833123)) ^ 0x401F5308) * v7;
  a5 = v9;
  a4 = v11 ^ a1;
  a3 = 0x3F8123127DDA1A64;
  a6 = 1453518680 - v11;
  a7 = v8 - v11 - 182;
  (*(void (**)(uint64_t *))(v10 + 8 * (v8 ^ 0xA3A)))(&a3);
  sub_1BCACDF78();
}

uint64_t sub_1BCAEA518()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)((((STACK[0x3DC] & 0x7758DAF3) - 140) * (v1 >= v0)) ^ (STACK[0x408] - 464))))();
}

uint64_t sub_1BCAEA554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v12 = *(unsigned __int8 *)(v9 + v10 - 0x18DAD9BDBC8366E5) - *(unsigned __int8 *)(v7 + v10 - 0x18DAD9BDBC8366E5);
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * (int)(((((v12 << ((v8 - 60) & 0x7F ^ 0x5F)) & 0x3FEE7BDA) + (v12 ^ v6) == v6)
                                                   * ((v8 + 1609825829) & 0xFFFF0ADF ^ (a6 + 1289))) ^ v8)))(4294925278);
}

uint64_t sub_1BCAEA5E8()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 1469)))(1576, 3012117910);
  STACK[0x588] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * (((v0 + 1280) ^ 0x500) - 577)) ^ (v0 - 403))))();
}

uint64_t sub_1BCAEA644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  *uint64_t v9 = v7 - 1;
  int v12 = v7 - 1983471865;
  uint64_t v13 = (uint64_t)&v9[6 * (v7 - 1983470355) + 2];
  int v14 = *(_DWORD *)v13;
  STACK[0x3E0] = *(void *)(v13 + 8);
  LODWORD(STACK[0x578]) = v9[6 * v12 + 6 + 6 * (v8 ^ 0x405)];
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((*(_DWORD *)(v10 + (v14 + a5) * (uint64_t)a6 + 36) == (v8 ^ 0x328 ^ (a7 + 571)))
                                * ((((v8 ^ 0x405) - 638416368) & 0x260D77AB) - 963)) ^ v8 ^ 0x405)))();
}

uint64_t sub_1BCAEA71C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35)
{
  int v39 = *(unsigned __int8 *)(a1 + a2 + v36 + 3) ^ 0x80;
  int v40 = ((*(unsigned __int8 *)(a1 + a2 + v36) ^ 0x80) << 24) | ((*(unsigned __int8 *)(a2
                                                                                    + v36
                                                                                    + a1
                                                                                    + ((a35 - 1132088117) & 0x437A47FA)
                                                                                    - 15) ^ 0x80) << 16) | ((*(unsigned __int8 *)(a1 + a2 + v36 + 2) ^ 0x80) << 8) | v39;
  *(_DWORD *)(v37 + ((a2 + v36) & 0xFFFFFFFFFFFFFFFCLL)) = v40 + v38 - 2 * (v40 & (v38 + 18) ^ v39 & 0x12);
  return (*(uint64_t (**)(void))(v35 + 8 * ((30 * ((unint64_t)(a2 + 4 + v36) < 0x40)) ^ a35)))();
}

uint64_t sub_1BCAEA7C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v10 + v11 + a8 + 62) = a2;
  return (*(uint64_t (**)(void))(v13 + 8 * ((((unint64_t)(v10 + v11 + v9) < 0x38) * v12) ^ v8)))();
}

uint64_t sub_1BCAEA8FC@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W7>, uint64_t a4@<X8>)
{
  *(_OWORD *)(v4 + (a1 + a2)) = *(_OWORD *)(a4 + a2);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == a2) * a3) ^ v5)))();
}

uint64_t sub_1BCAEA980(uint64_t result)
{
  return sub_1BCAD518C(result);
}

uint64_t sub_1BCAEA9A4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((890 * (v1 == v3 + (v0 ^ 0x240) - 36)) ^ (v0 - 576))))();
}

void sub_1BCAEA9D8()
{
}

void sub_1BCAEA9E0()
{
}

uint64_t sub_1BCAEAA7C()
{
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((8 * (v1 ^ 0x1AC)) | (16
                                                                  * ((((8 * (v1 ^ 0x1AC) - 776) | 0x1D0) ^ 0xFDD7F849)
                                                                   + v0 < 0x7FFFFFFF)))))(8 * (v1 ^ 0x1ACu));
}

uint64_t sub_1BCAEAAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (int)(((*(_DWORD *)(a7 + 72) == a5) * ((a3 + ((67 * (v8 ^ 0x94) + 1810575735) & 0x9414CDEC) - 1375) ^ ((67 * (v8 ^ 0x94) - 1912472854) | 0x31A4D00C))) | (67 * (v8 ^ 0x94)))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1BCAEAB64()
{
}

uint64_t sub_1BCAEAC34()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 1994) | 0x264) + 943) ^ (v0 - 407)) * (*(_DWORD *)(v1 + 1424) != 535412524)) ^ v0)))();
}

uint64_t sub_1BCAEAC74()
{
  BOOL v4 = v1 - 1468658457 > (int)(((v0 + 1154327940) & 0xBB325BF7) + 1716189179)
    || v1 - 1468658457 < SLODWORD(STACK[0x3E8]);
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v0 - 1872920298) & 0x6FA27F77) + 701)) ^ v0)))();
}

void sub_1BCAEACE4(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  int v1 = 3804331 * ((a1 & 0x499EDE0F | ~(a1 | 0x499EDE0F)) ^ 0x4CFFD2A6);
  int v2 = *(_DWORD *)(a1 + 32) + v1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 68) - v1;
  int v9 = 75341232;
  int v10 = 874675926;
  uint64_t v11 = &v18;
  int v14 = 75341169;
  int v15 = 874675926;
  uint64_t v16 = &v8;
  uint64_t v12 = 0x34227ED6047D9DF2;
  uint64_t v13 = &v17;
  if (v4 | v3) {
    BOOL v6 = v5 == 888742414;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  __asm { BRAA            X8, X17 }
}

void sub_1BCAEAE40()
{
}

uint64_t sub_1BCAEAE5C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v2 - 1 + (v3 ^ 0x43 ^ (a2 + 965))) >> 31)
                                     * (((v3 - 829) | 0x81) ^ 0x28A)) ^ v3)))();
}

uint64_t sub_1BCAEAEA4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((504 * (*(void *)(qword_1F16FA0C0 - 4) != 0)) ^ 0x4F5u)))();
}

uint64_t sub_1BCAEAED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = 0;
  *int v1 = a1;
  return result;
}

uint64_t sub_1BCAEAEE8@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + a1) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v4 & 0x38) == 8) * (v3 + 1054)) ^ v3)))();
}

uint64_t sub_1BCAEAF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v25 = v18 ^ 0x200;
  *(_DWORD *)(v24 - 104) = (v18 + 1812) ^ (1759421093
                                         * ((2 * ((v24 - 144) & 0x24ACE240) - (v24 - 144) - 615309894) ^ 0x682EADEE));
  *(void *)(v24 - 144) = v19;
  *(void *)(v24 - 136) = a16;
  *(void *)(v24 - 120) = v20;
  *(void *)(v24 - 112) = v20;
  *(void *)(v24 - 128) = v23;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v18 ^ 0x898)))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((v22 + a18 + 2) > 0x7FFFFFFE)
                                              * (((v25 ^ 0x200) + 95) ^ 0x135)) ^ (v25 + 407))))(v26);
}

uint64_t sub_1BCAEAFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((a6 + ((v9 - 310379214) & 0x37A5BD33) + 1322) ^ (v9 - 302388303) & 0x120615FB)
                                * (v7 - v8 + (v6 ^ 0xEC991192) == 729933178)) ^ v9)))();
}

uint64_t sub_1BCAEB05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 136) = (v17 + 179) ^ (((~((v19 - 136) | 0xB0449EB5) + ((v19 - 136) & 0xB0449EB5)) ^ 0x224F7943) * v14);
  *(void *)(v19 - 128) = v18;
  *(void *)(v19 - 120) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1784)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((1972
                                              * (*(_DWORD *)(v19 - 132) > ((3 * (v17 ^ 0x13F)) ^ (v15 + 311)))) ^ v17)))(v20);
}

uint64_t sub_1BCAEB0F4@<X0>(uint64_t a1@<X8>)
{
  v6[1] = v4 + 535753261 * (((v6 | 0xB540C2BC) - (v6 & 0xB540C2BC)) ^ 0xBFB4CC93) + 129;
  uint64_t v7 = a1;
  uint64_t result = (*(uint64_t (**)(_DWORD *))(v3 + 8 * (v4 + 1601)))(v6);
  *(_DWORD *)(v1 + 4) = v2;
  return result;
}

uint64_t sub_1BCAEB18C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((35 * ((((v1 ^ 0x61) + 1) ^ ((a1 ^ 0x5E6 ^ v1 ^ 0x171u) < 8)) & 1)) ^ v1)))();
}

void sub_1BCAEB1D4()
{
}

uint64_t sub_1BCAEB1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(&a25 + (a1 + a8)) = *(unsigned char *)(a16 + v26 - 368044921) ^ 0x80;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((356 * ((int)a4 + (int)a1 + 1 < ((((v25 ^ 0x2DE) - 1641) | 0x20) ^ 0x6Bu))) ^ v25 ^ 0x2DE)))(a1, ((v25 ^ 0x2DE) - 1641) | 0x20u, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1BCAEB248(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  return (*(uint64_t (**)(void))(v30
                              + 8 * ((117 * (((a3 - 8) ^ (a4 + 134)) + a30 > 0xFFFFFFFA)) ^ (a3 + 1016))))();
}

void sub_1BCAEB294(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) ^ (1759421093 * ((-746607788 - (a1 | 0xD37FAB54) + (a1 | 0x2C8054AB)) ^ 0x9FFDE4FF));
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1BCAEB3D4(_DWORD *a1)
{
  *((unsigned char *)a1 + ((v2 + 1408138636) & 0xFEBDB7BB ^ 0xA33C4429) + v1 + 4) = 114;
  *a1 = v1;
  return 0;
}

uint64_t sub_1BCAEB424(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((((v2 & 0x18) == a2 - 136) * (((a2 - 2012265099) & 0x77F0BB3F) + 1402)) ^ a2)))();
}

uint64_t sub_1BCAEB46C@<X0>(int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,char a32)
{
  BOOL v39 = v32 < v33;
  *(&a32 + (a5 + a1)) = *(unsigned char *)(a3 + (v34 + v37)) ^ 0x80;
  unsigned int v40 = v34 + 1 + a4;
  int v41 = v39 ^ (v40 < a2);
  BOOL v42 = v40 < v32;
  if (!v41) {
    BOOL v39 = v42;
  }
  return (*(uint64_t (**)(void))(v38 + 8 * ((!v39 * v35) ^ v36)))();
}

void sub_1BCAEB4E0()
{
}

uint64_t sub_1BCAEB54C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  return sub_1BCAEB5C0(a3 - 0x7EC954F575262799, a1 - 0x7EC954F575262799, 715, 0x98172F23CDC84BC8, (v3 - 898), 0x77FAFFDEF7F7BF78, 0x1EFEF7EF0, 0xEFEDD0FD3A3FF4C0);
}

uint64_t sub_1BCAEB5C0(void *a1, void *a2, int a3, int a4, int a5)
{
  uint64_t v16 = 4 * (v14 + v12);
  int v17 = v5 + a4 + (*(_DWORD *)(*a1 + v16) ^ v8);
  *(_DWORD *)(*a2 + v16) = v17 + (v10 ^ a3 ^ a5) - (v15 & (2 * v17));
  BOOL v19 = v14 + v6 > v7 || v14 + v6 < v9;
  return (*(uint64_t (**)(void))(v13 + 8 * ((v19 * v11) ^ v10)))();
}

uint64_t sub_1BCAEB630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  BOOL v36 = a33 + 2079521496 < (v35 - 1655688879);
  if ((a33 + 2079521496) < 0xBD9ABD7 != v35 - 1655688879 < ((((v33 + 1473208869) & 0xA8309BCB) - 549) ^ 0xBD9AA71)) {
    BOOL v36 = v35 - 1655688879 < ((((v33 + 1473208869) & 0xA8309BCB) - 549) ^ 0xBD9AA71);
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((19 * v36) ^ (v33 - 404))))();
}

uint64_t sub_1BCAEB644(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((204 * (v4 + 1 != v5 + 16)) ^ a4)))();
}

uint64_t sub_1BCAEB714()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 - 521 + v0 + 1078 - 1523) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_1BCAEB740()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((38 * (v2 - 810746376 < ((v1 - 633) ^ 0x1D6u) + v0)) | (v1 + 516))))();
}

uint64_t sub_1BCAEB78C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((32 * (STACK[0x588] != 0)) | ((STACK[0x588] != 0) << 6)) ^ (v0 + 78))))();
}

uint64_t sub_1BCAEB7B8(int a1, int8x16_t a2)
{
  int8x16_t *v2 = veorq_s8(*(int8x16_t *)(v5 + v3), a2);
  return (*(uint64_t (**)(void))(v4 + 8 * (a1 - 280)))();
}

uint64_t sub_1BCAEB7F4()
{
  STACK[0x450] = v0;
  int v2 = (uint64_t (*)(void))STACK[0x4D8];
  STACK[0x380] = v1 - 112;
  STACK[0x510] = v1 - 112;
  return v2();
}

uint64_t sub_1BCAEB810@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  unsigned int v10 = (unsigned int *)(v9 + 4 * v5);
  uint64_t v11 = v5 + 1;
  int v12 = *(_DWORD *)(v9 + 4 * v11);
  unsigned int v13 = a2 ^ ((v12 & 0x7FFFFFFE | (a5 ^ 0x5CD ^ (a3 + 293)) & v6) >> 1);
  *unsigned int v10 = v10[397] ^ v7 ^ *((_DWORD *)&STACK[0x518] + (v12 & 1)) ^ (a4 + v13 - (a1 & (2 * v13)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((55 * (v11 == 227)) ^ a5)))();
}

uint64_t sub_1BCAEB88C()
{
  int v4 = 628203409
     * ((((2 * ((v3 - 192) ^ 0xE396D6A7)) | 0x6984F9C8) - ((v3 - 192) ^ 0xE396D6A7) + 1262322460) ^ 0xD5DCA670);
  *(void *)(v3 - 168) = STACK[0x3A0];
  unint64_t v5 = STACK[0x390];
  *(void *)(v3 - 152) = STACK[0x3E0];
  *(void *)(v3 - 144) = v5;
  *(_DWORD *)(v3 - 176) = v1 - v4 + 888;
  *(_DWORD *)(v3 - 172) = v0 - v4 + 262867000;
  unint64_t v6 = STACK[0x388];
  *(void *)(v3 - 192) = STACK[0x398];
  *(void *)(v3 - 184) = v6;
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 1944)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, __n128))(v2
                                                    + 8
                                                    * ((765
                                                      * (*(_DWORD *)(v3 - 160) == ((v1 - 2010756731) & 0x77D9B7F6)
                                                                                + 984896233)) ^ v1)))(162, (__n128)0);
}

uint64_t sub_1BCAEB9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,int a45,int a46)
{
  int v47 = a11 - ((2 * a44) & 0x68399AAC) + (((a46 - 469) | 0x3D1) ^ 0x41AE2FF6);
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * ((990
                                * (((2 * v47) & 0xF2DFBBEC ^ 0x60199AAC) + (v47 ^ 0x4D7310A0) + 1610491547 != 1500382353)) ^ a46)))();
}

uint64_t sub_1BCAEBA7C()
{
  STACK[0x298] = v0;
  STACK[0x4B0] = 0;
  unsigned int v5 = 235795823 * ((2 * (v2 & 0xED72FD0) - v2 + 1898500137) ^ 0xE5859970);
  *(_DWORD *)(v4 - 168) = v5 + v1 - 1250;
  *(_DWORD *)(v4 - 184) = 1487389350 - v5;
  *(void *)(v4 - 192) = 0xD7CDE9D8B19902BLL;
  *(void *)(v4 - 176) = STACK[0x288];
  *(void *)(v4 - 160) = STACK[0x290];
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 812)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)(((*(_DWORD *)(v4 - 152) == 984896845)
                                                   * ((v1 + 578822608) & 0xDD7FDDFB ^ 0x562)) ^ v1)))(v6);
}

uint64_t sub_1BCAEBB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * ((((v7 + v6 - 2143271934) > 7)
                                                                                           * ((v5 + 455) ^ 0x229)) ^ v5)))(v4, a2, a3, a4, 93, 2187427217);
}

uint64_t sub_1BCAEBBB0()
{
  STACK[0x510] += (v0 - 35) + ((6 * (v0 ^ 0x2E1u)) ^ 0xFFFFFFFFFFFFFFE8);
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x6F2)))();
}

uint64_t sub_1BCAEBBF8(uint64_t a1, int a2, int a3, unsigned int a4, int a5)
{
  uint64_t v11 = (a3 + a2 + a5);
  uint64_t v12 = v11 + v10;
  uint64_t v13 = (16 * (a4 ^ 0x3EE) - 1825) & v11;
  uint64_t v14 = v8 - v12;
  uint64_t v15 = (v13 | v6) - v12;
  unint64_t v16 = (v13 | v7) - v12;
  unint64_t v17 = v14 + v13;
  BOOL v21 = (unint64_t)(v5 - v10) < 0x10 || v17 < 0x10 || (unint64_t)(v15 + 2) < 0x10 || v16 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((51 * v21) ^ a4)))();
}

uint64_t sub_1BCAEBC74@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((2648 * (a3 - 2103820122 < (v4 + a2 - 548))) ^ (v4 + a2))))(a1, -2103820122);
}

uint64_t sub_1BCAEBCB0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((228 * (((*v1 == 0) ^ ((v0 ^ 0x89) + 66)) & 1)) ^ v0 ^ 0x689)))();
}

uint64_t sub_1BCAEBCF0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((29 * (v1 == 1854503558)) ^ 0x288)))();
}

void sub_1BCAEBD48(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a8 + (v9 + a1 - 1146 - 642)) = v8;
  JUMPOUT(0x1BCAD6324);
}

void sub_1BCAEBD80()
{
}

uint64_t sub_1BCAEBD8C@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((47
                                * (((((v4 ^ a1) + 21) ^ (a2 + (v4 ^ a1 ^ 0xA2) + v3 + (v4 ^ a1) - 350 - 512 >= 0)) & 1) == 0)) ^ v4 ^ a1)))();
}

uint64_t sub_1BCAEBDDC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, unsigned int a6, int a7)
{
  unsigned int v12 = (((&a3 | 0x33B65DEC) - (&a3 & 0x33B65DEC)) ^ 0xD32A3FC7) * a1;
  a6 = 1453518692 - v12;
  a7 = v10 - v12 - 389;
  a3 = v7;
  a5 = v8;
  a4 = v12 ^ 0xF762CC78;
  uint64_t v13 = (*(uint64_t (**)(uint64_t *))(v9 + 8 * (v10 ^ 0xAE9)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((300 * (*(_DWORD *)(v8 - 0x5B51E979A7EFF0B5) == v10 + v11 + 822)) | v10)))(v13);
}

uint64_t sub_1BCAEBE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v7
                                                             + 8
                                                             * (((v8 >= ((((a7 - 2040665880) & 0x17D9) + 679375337) | 0x4181802Cu)
                                                                      - 1778383053)
                                                               * (((((a7 - 2040665880) & 0x17D9) - 526) | 0x204) - 1264)) ^ (a7 - 2040665880) & 0x17D9)))(a1, a2, 0);
}

uint64_t sub_1BCAEBEFC@<X0>(uint64_t a1@<X8>)
{
  int v5 = v4 ^ 0x6AA;
  unsigned int v6 = 1178560073 * (&v8 ^ 0xBA947862);
  int v8 = v5 - v6 + 1058;
  unsigned int v10 = v6 - v1 - (((v5 + 410) ^ 0xD71908E5) & (1453801620 - v3)) - 1763694827;
  uint64_t v9 = a1;
  return (*(uint64_t (**)(int *))(v2 + 8 * (v5 ^ 0xBD5)))(&v8);
}

void sub_1BCAEBF84()
{
}

uint64_t sub_1BCAEBF90@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1987 * (a2 != ((v2 - 939) ^ (a1 - 965)))) ^ (v2 - 939))))();
}

uint64_t sub_1BCAEBFDC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v3)) = *(unsigned char *)(v2 + (v5 + v3)) - 106;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 - 1 == a2) * ((v4 + 770) ^ 0x7F7)) ^ v4)))();
}

void sub_1BCAEC018()
{
}

void sub_1BCAEC024()
{
}

uint64_t sub_1BCAEC038@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((84 * (v1 != 1854503558)) ^ 0x69Du)))();
}

uint64_t sub_1BCAEC068()
{
  *(void *)(v5 - 136) = v4;
  *(void *)(v5 - 128) = v3;
  *(_DWORD *)(v5 - 120) = v0
                        + 1759421093 * ((~((v5 - 136) | 0x92D7BE90) + ((v5 - 136) & 0x92D7BE90)) ^ 0xDE55F13B)
                        + 1723;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x898)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((822 * (v2 == (((v0 ^ 0x1F7) + 49602813) ^ v0 ^ 0x1F7))) ^ v0)))(v6);
}

void sub_1BCAEC110()
{
}

void sub_1BCAEC118(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  if (*(_DWORD *)(*(void *)a1 - 0x7EC954F57526279DLL) - 874675926 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)a1 - 0x7EC954F57526279DLL) - 874675926;
  }
  else {
    unsigned int v3 = 874675926 - *(_DWORD *)(*(void *)a1 - 0x7EC954F57526279DLL);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x7EC954F57526279DLL) - 874675926 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x7EC954F57526279DLL) - 874675926;
  }
  else {
    unsigned int v4 = 874675926 - *(_DWORD *)(v2 - 0x7EC954F57526279DLL);
  }
  uint64_t v8 = *(void *)a1;
  unsigned int v7 = v1 + 535753261 * (((&v7 | 0x96489038) - (&v7 & 0x96489038)) ^ 0x9CBC9E17) - 1112;
  uint64_t v5 = (char *)*(&off_1F16F9FD0 + v1 - 1880) - 4;
  (*(void (**)(unsigned int *))&v5[8 * v1 + 800])(&v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1BCAEC298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v29 - 104) = (v24 + 1812) ^ (1759421093
                                         * ((2 * ((v29 - 144) & 0x47498390) - (v29 - 144) + 951483500) ^ 0x8BCBCC38));
  *(void *)(v29 - 128) = v28;
  *(void *)(v29 - 120) = v25;
  *(void *)(v29 - 144) = a24;
  *(void *)(v29 - 136) = a20;
  *(void *)(v29 - 112) = v25;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v24 + 1896)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((((v27 + a22 + 2) > 0x7FFFFFFE)
                                              * ((((17 * (v24 ^ 0xF0)) ^ 0x200) + 95) ^ 0x135)) ^ (17 * (v24 ^ 0xF0)
                                                                                                 + 407))))(v30);
}

uint64_t sub_1BCAEC358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))(v68 + 16048))(a1, a2, a3, a4, a5, 3671737175, 2317026272, 2147483652, a9, &a68);
}

uint64_t sub_1BCAEC47C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ (109 * LODWORD(STACK[0x3B0])))))();
}

uint64_t sub_1BCAEC498@<X0>(int a1@<W5>, unsigned int a2@<W7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  if (!a3) {
    return (*(uint64_t (**)(void))(v61
  }
                                + 8
                                * ((1589 * (((v58 + a1 - 136) | 0x88) - 1772733383 + a14 - 136 < 0x10)) ^ (v58 + a1))))();
  if (a3 != 3) {
    return (*(uint64_t (**)(void))(v61
  }
                                + 8
                                * (((*(_DWORD *)(v60 + 48 * v59 + 36) + 169542624 < a2) * (a1 + 623230803)) ^ (a1 + 623230258))))();
  int v62 = a1 + v58 + 579;
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 48 * v59 + 8))(a6, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((2047 * (v63 + 984896845 - ((2 * v63) & 0x7568AA9A) == 984896845)) ^ v62)))(v63, v64, v65, v66, 984896845, 3671737175, 2317026272, 2147483652, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

void sub_1BCAEC604()
{
}

uint64_t sub_1BCAEC610()
{
  BOOL v4 = v1[1] == 0x13AAEC8A5CF1D160 || (*v1 | v1[5]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v0 - 1751) | 0x2A0) ^ 0xC7C)) ^ v0)))();
}

uint64_t sub_1BCAEC668(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1418 * ((a6 + 1 + v6) < 0x10)) ^ (a1 + 281))))();
}

uint64_t sub_1BCAEC780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v70 = STACK[0x5A0] + a4 - 1876380411 + ((v65 - 1950298318) & 0x743F32FDu);
  unint64_t v71 = STACK[0x638];
  STACK[0x4B8] = *(void *)(v69 + 8 * v65);
  STACK[0x648] = v71;
  STACK[0x650] = v70;
  unint64_t v76 = STACK[0x510];
  __int16 v77 = (char *)&a5 + STACK[0x510] - 0x265CB198B5761551;
  STACK[0x658] = (unint64_t)v77;
  STACK[0x510] = v76 + 320;
  int v78 = *(_DWORD *)(v71 + a1);
  LODWORD(STACK[0x564]) = v78;
  int v79 = *(_DWORD *)(v71 - 0x781B11C067843F4ELL);
  LODWORD(STACK[0x51C]) = v79;
  int v80 = *(_DWORD *)(v71 - 0x781B11C067843F4ALL);
  LODWORD(STACK[0x584]) = v80;
  int v81 = *(_DWORD *)(v71 - 0x781B11C067843F46);
  LODWORD(STACK[0x4D4]) = v81;
  int v82 = *(unsigned __int8 *)(v71 - 0x781B11C067843F3ALL) ^ 0x5F;
  if (v82 == 2)
  {
    int v88 = STACK[0x408] - 100;
    LODWORD(STACK[0x420]) = *(_DWORD *)(v71 - 0x781B11C067843F42);
    LODWORD(STACK[0x53C]) = 1717572394;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69
                                                                                           + 8
                                                                                           * ((13
                                                                                             * (((v88 - 94) | 8) ^ 0x1A8)
                                                                                             + 466) ^ v88)))(431, 269, a2, 13832, a3, 2577394902);
  }
  else if (v82 == 1)
  {
    STACK[0x400] = v76 + 320;
    unint64_t v83 = STACK[0x408];
    int v84 = STACK[0x408] + 1116;
    LODWORD(STACK[0x53C]) = v68;
    BOOL v86 = v70 < a65 + v76 && (unint64_t)v77 < v70 + 64;
    return (*(uint64_t (**)(void))(v69
                                + 8
                                * (int)((((v86 ^ LODWORD(STACK[0x224])) & 1) * (v83 - 593)) | v84)))();
  }
  else
  {
    int v72 = (*(_DWORD *)(v71 + a1) ^ v67) + (v78 ^ v67);
    *(_DWORD *)(v71 + a1) = v72 + v67 - (v66 & (2 * v72));
    int v73 = (*(_DWORD *)(v71 - 0x781B11C067843F4ELL) ^ v67) + (v79 ^ v67);
    *(_DWORD *)(v71 - 0x781B11C067843F4ELL) = v73 + v67 - (v66 & (2 * v73));
    int v74 = (*(_DWORD *)(v71 - 0x781B11C067843F4ALL) ^ v67) + (v80 ^ v67);
    *(_DWORD *)(v71 - 0x781B11C067843F4ALL) = v74 + v67 - (v66 & (2 * v74));
    int v75 = (*(_DWORD *)(v71 - 0x781B11C067843F46) ^ v67) + (v81 ^ v67);
    *(_DWORD *)(v71 - 0x781B11C067843F46) = v75 + v67 - (v66 & (2 * v75));
    STACK[0x510] = v76;
    return ((uint64_t (*)(void))STACK[0x4B8])();
  }
}

uint64_t sub_1BCAEC7CC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * (((*(_DWORD *)(v3 - 0x5B51E979A7EFF0C1)
                                                       + ((v1 + 166) ^ 0x97576DDB) == 0)
                                                      * (((v1 - 396) | 0x128) ^ 0x13C)) ^ (v1 + 336))))(a1, *(void *)(v3 - 0x5B51E979A7EFF0CDLL));
}

uint64_t sub_1BCAEC844@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v8 = (unsigned char *)STACK[0x4F0];
  int v9 = -608513569 - ((1 << ((a1 ^ 0x89) + 20)) & 0x1775A3BC);
  a7[12] = HIBYTE(v9) ^ 0x5B;
  a7[13] = BYTE2(v9) ^ 0x3A;
  a7[14] = BYTE1(v9) ^ 0x51;
  a7[15] = v9 ^ 0x5E;
  v8[16] ^= *a7 ^ 0x80;
  v8[17] ^= a7[1] ^ 0x80;
  v8[18] ^= a7[2] ^ 0x80;
  v8[19] ^= a7[3] ^ 0x80;
  v8[20] ^= a7[4] ^ 0x80;
  v8[21] ^= a7[5] ^ 0x80;
  v8[22] ^= a7[6] ^ 0x80;
  v8[23] ^= a7[7] ^ 0x80;
  v8[24] ^= a7[8] ^ 0x80;
  v8[25] ^= a7[9] ^ 0x80;
  v8[26] ^= a7[10] ^ 0x80;
  v8[27] ^= a7[11] ^ 0x80;
  v8[28] ^= a7[12] ^ 0x80;
  v8[29] ^= a7[13] ^ 0x80;
  v8[30] ^= a7[14] ^ 0x80;
  v8[31] ^= a7[15] ^ 0x80;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8 * ((a1 - 377) ^ 0x1A)))(393585596, 3686453726, 91);
}

uint64_t sub_1BCAECA2C(int a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + (v7 - v8)) = *(void *)(a5 + (v7 - v8));
  return (*(uint64_t (**)(void))(v6 + 8 * (a1 | (16 * (v8 + a4 - 156 == a3)))))();
}

uint64_t sub_1BCAECA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * (int)(((v5 >= (a5 ^ 0x26Eu)) * ((a5 + 1892885616) & 0x8F2CDBFD ^ 0x2A6)) ^ a5)))();
}

uint64_t sub_1BCAECAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v23 - 112) = v21;
  *(void *)(v23 - 104) = a18;
  *(_DWORD *)(v23 - 120) = (v18 + 171) ^ ((((((v23 - 120) | 0x21165438) ^ 0xFFFFFFFE) - (~(v23 - 120) | 0xDEE9ABC7)) ^ 0xB31DB3CE)
                                        * v22);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v18 ^ 0x910)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((1599 * (*(_DWORD *)(v23 - 116) > v19 + ((8 * v18) ^ 0x948u) - 896)) ^ v18)))(v24);
}

uint64_t sub_1BCAECB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  HIDWORD(a17) = -1880706817;
  int v28 = *(_DWORD *)(a2 + 4);
  unsigned int v29 = 628203409
      * (((&a20 | 0xD1FC9D84) - &a20 + (&a20 & 0x2E036278)) ^ 0x537491B7);
  a25 = *(void *)(a2 + 8);
  a26 = a14;
  a20 = a15;
  a21 = a13;
  LODWORD(a22) = v26 - v29 + 649;
  HIDWORD(a22) = 262867000 - v29 + v28;
  a23 = a16;
  uint64_t v33 = (*(uint64_t (**)(uint64_t *))(v27 + 8 * (v26 + 1705)))(&a20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((1210 * (a24 == ((v26 + 367840788) & 0xEA13365C) + 984895237)) ^ v26)))(v33, a2, 3215380798, 1079586638, 1854503561, &off_1F16F9FD0, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1BCAECC54@<X0>(char a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a1 & 0x18) == ((v1 + 873637258) & 0xCBED5BBF ^ 0x323)) * ((v1 + 139) ^ 0x266)) | v1)))();
}

void sub_1BCAECCA4()
{
}

uint64_t sub_1BCAECD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v26
                                                             + 8
                                                             * ((610
                                                               * (((*(_DWORD *)(a25
                                                                              + 24 * (a4 - 1890831305))
                                                                  + a3) & 0xFFFFFFFFFFFFFFDLL) == 0)) ^ v25)))(a1, a2, *(void *)(v27 + 24 * (a4 - 1890831305) + 16));
}

uint64_t sub_1BCAECDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v26 - 120) = (v21 + 341) ^ (((((v26 - 120) | 0xA95C0B48) - (v26 - 120) + ((v26 - 120) & 0x56A3F4B0)) ^ 0xC4A81341)
                                        * v25);
  *(void *)(v26 - 112) = v24;
  *(void *)(v26 - 104) = a21;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v21 + 1946)))(v26 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v26 - 116) > (v22 + 1))
                                              * ((v21 - 1387403952) & 0x52B21ADF ^ 0xB0)) ^ v21)))(v27);
}

void sub_1BCAECE84()
{
}

uint64_t sub_1BCAECEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8 * ((45 * (((v13 - 1) ^ (v15 + 11 * (v13 ^ 0x530) - 1101 < 0x7FFFFFFD)) & 1)) ^ v13)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1BCAECF40()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1921
                                * (((v0 + ((v2 - 1198) | 0x30) - 304) & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v1) == v1)) ^ (v2 - 1286))))();
}

uint64_t sub_1BCAECF88(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_1BCAECFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15)
{
  a14 = 108757529 * (&a14 ^ 0xE09C622B) - 504207030;
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v16 + 16904))(&a14);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1022 * (a15 == ((v15 + 130) ^ 0x82))) ^ 0xBDu)))(v17);
}

uint64_t sub_1BCAED01C()
{
  *(_DWORD *)(v6 - 136) = (v0 + 350) ^ (((1659477659 - ((v6 - 136) | 0x62E99E9B) + ((v6 - 136) | 0x9D166164)) ^ 0xF0E2796D)
                                      * v1);
  *(void *)(v6 - 128) = v4;
  *(void *)(v6 - 120) = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0x8EF)))(v6 - 136);
  BOOL v8 = *(_DWORD *)(v6 - 132) > (((v0 + 106) | 0x41) ^ (v2 + 305));
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((2 * v8) | (8 * v8)) ^ v0)))(v7);
}

uint64_t sub_1BCAED0D4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 + 1601177165) | 0x83020A) - 1609761652) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1BCAED124(uint64_t a1)
{
  uint64_t v6 = v2 - 32 + (v1 ^ 0x632u);
  long long v7 = *(_OWORD *)(v4 + v6 - 15);
  long long v8 = *(_OWORD *)(v4 + v6 - 31);
  uint64_t v9 = a1 + v6;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((37 * (v3 == 32)) ^ (v1 + 889))))();
}

uint64_t sub_1BCAED130()
{
  STACK[0x510] = STACK[0x370];
  return ((uint64_t (*)(void))STACK[0x3C0])();
}

uint64_t sub_1BCAED148(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25,unsigned int a26,uint64_t a27,int a28)
{
  unsigned int v30 = 1178560073 * (((&a25 | 0x713482D) + (~&a25 | 0xF8ECB7D2)) ^ 0xBD87304E);
  a25 = v30 + a1 - a13 + 24948451;
  a26 = v30 + ((a1 - 1592845555) & 0xFFFFFFF0) + 1966649590;
  a27 = a18;
  a28 = (v28 + 1760) ^ v30;
  uint64_t v31 = (*(uint64_t (**)(unsigned int *))(v29 + 8 * (v28 + 2113)))(&a25);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((4 * (*a14 == 984896845)) | ((*a14 == 984896845) << 9) | v28)))(v31);
}

void sub_1BCAED218()
{
}

void sub_1BCAED298()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  int v1 = *(_DWORD *)(v0 + 16) ^ (3804331 * (v0 ^ 0xFA9EF356));
  __asm { BRAA            X13, X17 }
}

void sub_1BCAED3EC()
{
}

uint64_t sub_1BCAED3FC()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (v3 ^ (8
                                     * ((((*(unsigned __int8 *)(v4 + 3) - 134) << (v2 ^ 0xF)) & v0)
                                      + ((*(unsigned __int8 *)(v4 + 3) - 134) ^ v1) == v1)))))();
}

uint64_t sub_1BCAED434(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v12 = v9 + v8;
  int v13 = v12 + v10;
  if ((v12 + v10) <= 0x40) {
    int v13 = a2;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((a4 + v7 + 518 + ((v7 + 1499659506) | 0x690080D) - 2423)
                                * (a7 - v12 >= (a3 + v13))) | v7)))();
}

uint64_t sub_1BCAED490@<X0>(int a1@<W8>)
{
  BOOL v5 = *(_DWORD *)(v2 + 16) + a1 == 1917787284 || (*(void *)(v2 + 56) | *(void *)(v2 + 32)) == 0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + 47) ^ v5) & 1 | (4 * (((v1 + 47) ^ v5) & 1)) | v1)))();
}

void sub_1BCAED4E0()
{
}

uint64_t sub_1BCAED500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v21 = 535753261 * ((v20 - 136) ^ 0xAF40E2F);
  *(void *)(v20 - 136) = v18;
  *(_DWORD *)(v20 - 128) = v21 + 2095248719;
  *(_DWORD *)(v20 - 124) = v21 + v17 + 359;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0xABF)))(v20 - 136);
  *(_DWORD *)(v20 - 120) = (v17 - 107) ^ (108757529
                                        * ((((v20 - 136) | 0x33FA9591) + (~(v20 - 136) | 0xCC056A6E)) ^ 0xD366F7BB));
  *(void *)(v20 - 136) = a14;
  *(void *)(v20 - 128) = v19;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0xAD0)))(v20 - 136);
  *(void *)(v20 - 128) = v18;
  *(void *)(v20 - 120) = a14;
  *(_DWORD *)(v20 - 136) = (v17 - 244) ^ (((1825418699 - ((v20 - 136) | 0x6CCDADCB) + ((v20 - 136) | 0x93325234)) ^ 0xFEC64A3D)
                                        * v14);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0xAB1)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v20 - 132) > (((v17 - 294) | 0x20D) ^ (v15 + 939)))
                                              * (((2 * v17) ^ 0x556) + 160)) ^ v17)))(v22);
}

uint64_t sub_1BCAED658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v62 = (*(uint64_t (**)(void, void, uint64_t))(v60 + 8 * (v56 + 1528)))(LODWORD(STACK[0x5EC]), (v57 + v58), a49);
  int v69 = ((2 * v62) & 0xDDBFF1FE) + (v62 ^ 0x6EDFF8FF);
  if (v69 == 1860172031)
  {
    unint64_t v70 = STACK[0x370];
    unint64_t v71 = (char *)&STACK[0x670] + STACK[0x370] - 0x265CB198B5761BC1;
    STACK[0x5F0] = (unint64_t)(v71 - 1824);
    STACK[0x3C8] = (unint64_t)(v71 - 1596);
    LODWORD(STACK[0x424]) = 1917787412;
    STACK[0x510] = v70 - 192;
    STACK[0x568] = 0;
    LODWORD(STACK[0x44C]) = 1854503558;
    STACK[0x3E0] = (unint64_t)(v71 - 1824);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((v59 + 400) ^ (1943 * (v71 == (char *)1576)))))(v62, v63, 3310030484, v64, v65, v66, v67, v68);
  }
  else
  {
    if (v69 == 2128607490)
    {
      LODWORD(STACK[0x580]) = -984936843;
    }
    else
    {
      int v73 = 1374699841 * ((659369905 - ((v61 - 192) | 0x274D2FB1) + ((v61 - 192) | 0xD8B2D04E)) ^ 0xB546C847);
      *(_DWORD *)(v61 - 192) = (v59 + 1315) ^ v73;
      *(void *)(v61 - 184) = a56;
      *(_DWORD *)(v61 - 176) = (v69 - ((2 * v69 + 574623234) & 0x7568AA9A) - 875275186) ^ v73;
      uint64_t v62 = (*(uint64_t (**)(uint64_t))(v60 + 8 * (v59 ^ 0xA37)))(v61 - 192);
    }
    return (*(uint64_t (**)(uint64_t))(v60
                                              + 8
                                              * (((((v59 - 59) ^ (STACK[0x480] == 0)) & 1)
                                                * ((22 * (v59 ^ 0x23C)) ^ 0x792)) | (v59 + 1008))))(v62);
  }
}

uint64_t sub_1BCAED83C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 ^ 0x6C) + 614) ^ 0x229) + 2 * (v2 ^ 0x6C)) * (v0 == v1)) ^ v2)))();
}

void sub_1BCAED87C()
{
}

uint64_t sub_1BCAED9CC()
{
  STACK[0x4E8] = v0;
  return sub_1BCAC94D8();
}

uint64_t sub_1BCAED9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((11
                                                                         * (v3 < ((v4 - 1245785268) & 0xC37D5BFB)
                                                                               - 1385384655)) ^ (v6 + v4 - 675))))(a1, a2, a3, 2260980123);
}

uint64_t sub_1BCAEDA34@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unint64_t v7 = a2 + v5;
  *(unsigned char *)(v7 + v2 + (((v3 ^ 0x142) - 929) | 0x14u) - 22) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 > 0x3F) * a1) ^ v3 ^ 0x142)))();
}

void sub_1BCAEDA78()
{
  unsigned int v5 = v3 - ((2 * v3 - 865643522) & 0xB775A3BC) - 1041335331;
  *unint64_t v7 = HIBYTE(v5) ^ 0x5B;
  v7[1] = (v4 + 105) ^ BYTE2(v5);
  v7[2] = ((unsigned __int16)(v3 - ((2 * v3 + 21502) & 0xA3BC) + 31709) >> 8) ^ 0x51;
  v7[3] = v5 ^ 0x5E;
  unint64_t v6 = v2 - ((2 * v2) & 0xD122E1957637654CLL) - 0x176E8F3544E44D5ALL;
  v7[4] = HIBYTE(v6) ^ 0x68;
  v7[5] = BYTE6(v6) ^ 0x11;
  v7[6] = BYTE5(v6) ^ 0xF0;
  v7[7] = BYTE4(v6) ^ 0x4A;
  _DWORD v7[8] = ((v2 - ((2 * v2) & 0x7637654C) - 1155812698) >> 24) ^ 0x3B;
  v7[9] = BYTE2(v6) ^ 0x9B;
  v7[10] = BYTE1(v6) ^ 0x32;
  v7[11] = v6 ^ 0x26;
  *(_DWORD *)(v0 + 4) = *(_DWORD *)(v1 - 0x5B51E979A7EFF0B5);
}

void sub_1BCAEDB70()
{
}

uint64_t sub_1BCAEDBD4(uint64_t a1, int32x4_t a2, int32x4_t a3, int32x4_t a4, int32x4_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v49 = BYTE4(a40) ^ 0x5F;
  if (v49 == 1)
  {
    int v51 = 7 * (v48 ^ (v48 - 225));
    BYTE4(a35) = (a37 << (7 * (v48 ^ (v48 + 31)) + 28)) ^ 8;
    BYTE5(a35) = (a37 >> 5) ^ 0x2F;
    BYTE6(a35) = (a37 >> 13) ^ 0xF3;
    HIBYTE(a35) = (a37 >> 21) ^ 0x81;
    HIDWORD(v54) = HIDWORD(a36) ^ 0x1B;
    LODWORD(v54) = a37 ^ 0x20000000;
    LOBYTE(a36) = (v54 >> 29) ^ 0x80;
    BYTE1(a36) = (HIDWORD(a36) >> 5) ^ 0xD4;
    BYTE2(a36) = (HIDWORD(a36) >> 13) ^ 0xA0;
    int v53 = (HIDWORD(a36) >> 21) ^ 0x5A;
    goto LABEL_5;
  }
  unsigned int v50 = 2113031579;
  if (v49 == 2)
  {
    int v51 = 2023;
    BYTE4(a35) = (HIDWORD(a36) >> 21) ^ 0x5A;
    BYTE5(a35) = (HIDWORD(a36) >> 13) ^ 0xA0;
    BYTE6(a35) = (HIDWORD(a36) >> 5) ^ 0xD4;
    HIDWORD(v52) = HIDWORD(a36) ^ 0x1B;
    LODWORD(v52) = a37 ^ 0x20000000;
    HIBYTE(a35) = (v52 >> 29) ^ 0x80;
    LOBYTE(a36) = (a37 >> 21) ^ 0x81;
    BYTE1(a36) = (a37 >> 13) ^ 0xF3;
    BYTE2(a36) = (a37 >> 5) ^ 0x2F;
    LOBYTE(v53) = (8 * a37) ^ 8;
LABEL_5:
    unsigned int v50 = (v51 + 2113107448) & 0xFFFECFBB;
    BYTE3(a36) = v53;
  }
  return sub_1BCB02780(a1, a11 + v50 - 169, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a2,
           a3,
           a4,
           a5);
}

uint64_t sub_1BCAEDD14(uint64_t a1)
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 103)))(a1, 4182676990) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 * ((((v1 - 1625905087) & 0x60E955DD) - 885) ^ 0x20E)) ^ v1)))();
}

void sub_1BCAEDD78(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 32) - 0x38DF4D133EEC7284) = a1;
  JUMPOUT(0x1BCAEB14CLL);
}

void sub_1BCAEDDA0()
{
}

uint64_t sub_1BCAEDDC0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36)
{
  if (a36 == 2) {
    return (*(uint64_t (**)(unint64_t *))(v36
  }
                                                         + 8
                                                         * (((LODWORD(STACK[0x320]) == 1109409085) * (a2 + 9)) ^ (a2 + 1022))))(&STACK[0x2B4]);
  if (a36 != 1) {
    JUMPOUT(0x1BCAEDEE4);
  }
  return (*(uint64_t (**)(unint64_t *))(v36
                                                       + 8
                                                       * (((2 * (LODWORD(STACK[0x320]) == a2 + 1109409069)) | (4 * (LODWORD(STACK[0x320]) == a2 + 1109409069))) ^ (a2 + 1128))))(&STACK[0x2B4]);
}

void sub_1BCAEDF20()
{
}

uint64_t sub_1BCAEE004@<X0>(int a1@<W7>, int a2@<W8>)
{
  BOOL v4 = a2 + 8 == (((v2 + 100858760) | 0x80C0D190) ^ a1) + v2 - 460;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (16 * v4)) ^ v2)))();
}

uint64_t sub_1BCAEE048(_DWORD *a1)
{
  unsigned int v1 = 460628867 * ((2 * (a1 & 0x1FF5D3B4) - a1 - 536204213) ^ 0xAC9CAE36);
  unsigned int v2 = a1[4] - v1;
  unsigned int v3 = v1 + *a1;
  unsigned int v5 = v3 - 102968940;
  BOOL v4 = (int)(v3 - 102968940) < 0;
  LODWORD(v6) = 102968940 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + (int)(v2 ^ 0x2CD))
                              + 8 * (int)(((v6 == ((2 * v6) & 0x77D21472)) * ((v2 ^ 0x347) - 50)) ^ v2)
                              - 4))();
}

void sub_1BCAEE108()
{
}

void sub_1BCAEE178(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_1BCAEE1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 *a10)
{
  int v13 = (v12 - 69) ^ a10[3] ^ 0x17;
  int v14 = ((*a10 ^ 0x80) << 24) | ((a10[1] ^ 0x80) << 16) | ((a10[2] ^ 0x80) << 8) | v13;
  *(_DWORD *)(*(void *)(v10 + 8) - 0x5FA3F43A3B4E8EE2) = v14 + v11 - 2 * (v14 & (v11 + 18) ^ v13 & 0x12);
  JUMPOUT(0x1BCAEE268);
}

uint64_t sub_1BCAEE2A4()
{
  LODWORD(STACK[0x3C8]) = v2;
  STACK[0x1908] = 0x40900521D998B5FELL;
  unsigned int v5 = *(_DWORD **)(v1 + 8 * (v0 - 452));
  STACK[0x3C0] = (unint64_t)v5;
  LODWORD(STACK[0x560]) = *v5 - 196928541;
  uint64_t v6 = **(unsigned int **)(v1 + 8 * (v0 - 590));
  unint64_t v7 = STACK[0x358];
  int v8 = -LODWORD(STACK[0x358]);
  int v9 = (v0 + 1779911576) ^ STACK[0x358];
  *(_DWORD *)(v4 - 168) = (v0 - 1501686456) ^ STACK[0x358];
  *(_DWORD *)(v4 - 160) = v9;
  *(void *)(v4 - 192) = STACK[0x2F0];
  *(void *)(v4 - 176) = v6 - v7;
  *(_DWORD *)(v4 - 156) = v9 ^ 0x26;
  *(_DWORD *)(v4 - 184) = ((v0 + 1779911576) & 0x7B17DFA7) + v7;
  *(_DWORD *)(v4 - 180) = v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 1527)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 164)))(v10);
}

void sub_1BCAEE38C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,int a25,unsigned char *a26,unsigned char *a27,_DWORD *a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  a26[3] = (BYTE3(v36) ^ 0x6E) - ((((v36 >> 24) ^ 0x6E) << (((a29 + 42) ^ 0x92) & 0xF7)) & 0x2E) + 23;
  a23[9] = BYTE5(v34) ^ 0x86;
  a23[15] = BYTE1(v36) ^ 0x9E;
  a27[8] = v36 ^ 0x58;
  a26[9] = (BYTE2(v36) ^ 0x82) - ((2 * (BYTE2(v36) ^ 0x82)) & 0x2E) + 23;
  a27[26] = BYTE4(v34) ^ 0x20;
  char v37 = (a8 ^ 0x54) - ((2 * (a8 ^ 0x54) - 6) & 0xCC) - 29;
  if ((a8 ^ 0xA8D24F416A6CF054) < 0x8134422366A90F03) {
    char v37 = v33;
  }
  char v38 = v37 ^ 0xE6;
  if ((a8 ^ 0xA8D24F416A6CF054) >= 0x8134422366A90F03) {
    char v39 = 3;
  }
  else {
    char v39 = 0;
  }
  char v40 = *(unsigned char *)(a33 + 531 + (BYTE6(v34) ^ 0xDLL));
  a23[7] = HIBYTE(v34) ^ 0x5C;
  a27[27] = BYTE1(a8) ^ 0xF0;
  a26[10] = 7 * (v40 ^ 0x9C) - ((16 * v40 - 2 * (v40 ^ 0x9C)) & 0x2E) + 23;
  a23[10] = v38 + v39;
  HIDWORD(v41) = *(unsigned __int8 *)(a33 + (((BYTE2(a8) ^ 0x6C) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v41) = (HIDWORD(v41) << 26) ^ (HIDWORD(v41) << 24);
  a27[10] = BYTE4(a8) ^ 0x41;
  a26[14] = (BYTE3(a8) ^ 0x6A) - ((2 * (BYTE3(a8) ^ 0x6A)) & 0x2E) + 23;
  a26[20] = (v41 >> 25) ^ 0xB;
  a26[4] = (BYTE6(a8) ^ 0xD2) - ((2 * (BYTE6(a8) ^ 0xD2)) & 0x2E) + 23;
  a26[16] = (BYTE5(a8) ^ 0x4F) - ((2 * (BYTE5(a8) ^ 0x4F)) & 0x2E) + 23;
  unsigned int v42 = *(unsigned __int8 *)(a33 + (((HIBYTE(a8) ^ 0xA8) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a27[20] = a4 ^ 0x42;
  HIDWORD(v41) = v42;
  LODWORD(v41) = (v42 << 26) ^ (v42 << 24);
  a26[15] = (v41 >> 25) ^ 0xB;
  unsigned int v43 = *(unsigned __int8 *)(a21 + (((a4 >> 1) & 0x80 | ((unsigned __int16)a4 >> 9)) ^ 0xE1));
  a27[17] = BYTE3(a4) ^ 0x48;
  a23[14] = BYTE4(a4) ^ 0xCC;
  *a26 = BYTE5(a4) - ((2 * BYTE5(a4)) & 0x2E) - 105;
  a27[21] = HIBYTE(a4) ^ 0x1F;
  a27[13] = BYTE2(a4) ^ 0x50;
  a27[3] = (v43 ^ 0x8A ^ (v43 >> 2) & 0x17) + 32;
  a23[12] = BYTE6(a4) ^ 6;
  char v44 = *(unsigned char *)(a33 + 531 + (a5 ^ 0x35) + 2 * (a5 & 0xD5 ^ 0x15) - 4 * (a5 & 0xD5 ^ 0x15) + 213) ^ 0x9C;
  a27[11] = BYTE2(a5) ^ 0xB6;
  a26[5] = (~(14 * v44) | 0xD1) - v44 + 8 * v44 + 24;
  a26[2] = (BYTE3(a5) ^ 0xE4) - ((2 * (BYTE3(a5) ^ 0xE4)) & 0x2E) + 23;
  a27[25] = BYTE1(a5) ^ 0x76;
  unsigned int v45 = *(unsigned __int8 *)(a21 + (((a5 >> 25) & 0x80 | (a5 >> 33) & 0x7F) ^ 0xB1));
  a27[22] = BYTE5(a5) ^ 0xD3;
  a27[18] = HIBYTE(a5) ^ 0x50;
  a27[2] = BYTE1(v35) ^ 0x56;
  a26[1] = v35 ^ 0x47;
  a27[30] = BYTE3(a3) ^ 0x5F;
  a27[9] = BYTE2(v35) ^ 0xBE;
  a27[19] = (v45 ^ 0x8A ^ (v45 >> 2) & 0x17) + 32;
  a26[7] = (BYTE6(a5) ^ 0x2B) - ((2 * (BYTE6(a5) ^ 0x2B)) & 0x2E) + 23;
  unsigned int v46 = *(unsigned __int8 *)(a33 + (((BYTE4(a3) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a27[24] = BYTE6(a3) ^ 0x81;
  a27[12] = BYTE5(a3) ^ 0xFD;
  HIDWORD(v41) = v46;
  LODWORD(v41) = (v46 << 26) ^ (v46 << 24);
  a27[1] = HIBYTE(a3) ^ 0x9D;
  a27[23] = (v41 >> 25) ^ 0x1C;
  *a28 = a25 - 2066971070;
  JUMPOUT(0x1BCAEE7CCLL);
}

uint64_t sub_1BCAEE808@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((497
                                * (((v1 ^ 0x230 ^ (*(_DWORD *)(*(void *)(a1 - 0x7EC954F575262799)
                                                             + 4 * (v2 + v5 - 1)) == (((v1 ^ 0x230) + 17) ^ (v4 - 767)))) & 1) == 0)) ^ v1 ^ 0x230)))();
}

uint64_t sub_1BCAEE870@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v3 ^ 0xA59)))(**(unsigned int **)(a2 + 8 * (v3 ^ 0x2DA)), a1, (v3 ^ 0x1A0u) + v2 + *(_DWORD *)(v5 - 0x5B51E979A7EFF0C5));
  return sub_1BCAEE8B8(v6);
}

uint64_t sub_1BCAEE8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v12 = ((unint64_t)&a9 ^ 0x3BEFF6F7B75FFEDFLL)
      - 0x312B863120188DDFLL
      + ((2 * (void)&a9) & 0x77DFEDEF6EBFFDB0);
  *(unsigned char *)(v10 - 0x5B51E979A7EFF0AELL) = ((((v11 + 42) & 0x7B) + 63) ^ v12) * (v12 + 17);
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * v11))(v10 - 0x5B51E979A7EFF0CDLL);
}

void sub_1BCAEE97C()
{
}

void sub_1BCAEEAB8(uint64_t a1@<X8>, int a2, int a3, uint64_t a4)
{
  unsigned int v8 = v7 & 0xC276EBF9;
  unsigned int v9 = 535753261 * ((2 * (&a2 & 0x19DC95B8) - &a2 + 1713596992) ^ 0x6CD7646F);
  a4 = a1;
  a2 = v8 - v9 - 530;
  a3 = v4 + v9 - ((((v8 - 1148737122) & 0x447857FB ^ 0x2958BA1F) + v6) & 0x67D7E3F2) + 144200111;
  (*(void (**)(int *))(v5 + 8 * (int)(v8 ^ 0xB5E)))(&a2);
  JUMPOUT(0x1BCAEEB70);
}

uint64_t sub_1BCAEEB98()
{
  *(_DWORD *)(*v2 + 4 * (v4 - 1 + v0)) = v1;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((((v3 - 317539132) & 0x12ED479B ^ (v0 - 412)) + v4) >> 31) * v5) ^ v3)))();
}

uint64_t sub_1BCAEEBE4@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a2 - 1500383669);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v4 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v6 + 2) ^ *(unsigned char *)((v8 & 0xF) + v5 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((a2 - 1 != v3) | (a1 - 1865))))();
}

uint64_t sub_1BCAEEC48@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = *(_DWORD *)(a1 + 1424) == 997 * (v1 ^ 0x417) + 535410530;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (8 * v3)) ^ v1)))();
}

uint64_t sub_1BCAEEC88()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)(v2 - 0x5B51E979A7EFF0B9) & 1) == ((v0 + 1884690952) & 0x8FA9E7FD ^ 0x3D5))
                                * (v0 + 1549)) ^ v0)))();
}

void sub_1BCAEECE0()
{
}

void sub_1BCAEECE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v45 = 12 * (v44 ^ 0x1Bu);
  unint64_t v46 = STACK[0x370];
  STACK[0x3E8] = (unint64_t)&STACK[0x670] + STACK[0x370] + v45 - 0x265CB198B5761E95;
  STACK[0x400] = a44 + v46 + v45;
  JUMPOUT(0x1BCAEED50);
}

uint64_t sub_1BCAEED94(uint64_t a1, uint64_t a2)
{
  unsigned int v7 = ((3 * (v3 ^ 0x4A0) + 720774988) & 0xD509D6CF ^ 0x53F36799) & v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((45
                                                                         * ((-(v4 + 2 * v7) & 0x3EFFABFA ^ 0x12F3211A)
                                                                          + ((v2 - v7 - 1150273527) ^ 0xB6866772)
                                                                          + 1960574976 == 341562877)) ^ v3)))(a1, a2, 497, 131);
}

void sub_1BCAEEE4C()
{
}

uint64_t sub_1BCAEEE58(uint64_t a1, uint64_t a2)
{
  int v4 = v2 + 871;
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 ^ 0xC05)))(*(unsigned int *)STACK[0x2C8], a2, LODWORD(STACK[0x50C]));
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((LODWORD(STACK[0x580]) == v4 + 984894909) * ((33 * (v4 ^ 0x794)) ^ 0xB1)) ^ v4)))(v5);
}

uint64_t sub_1BCAEEECC@<X0>(int a1@<W3>, int a2@<W8>)
{
  _DWORD *v3 = v3[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v4 - 1 != ((((a2 - 562) | 0x83) + 539482392) & 0xDFD8265E ^ 0x11F3961E))
                                     * (((((a2 - 562) | 0x83) + 46153776) | 0x84039088) ^ (a1 - 10))) ^ ((a2 - 562) | 0x83))))();
}

void sub_1BCAEEF5C()
{
}

uint64_t sub_1BCAEF024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v77 = v72 ^ 0xEDC;
  int v78 = (v72 ^ 0xEDC) - 388;
  unsigned int v79 = 235795823 * (((v74 | 0x28B6F3B6) - (v74 & 0x28B6F3B6)) ^ 0xBC1BBAEF);
  *(void *)(v76 - 192) = v73;
  *(_DWORD *)(v76 - 168) = v79 + (v72 ^ 0xEDC) - 445;
  *(void *)(v76 - 160) = STACK[0x200];
  *(void *)(v76 - 176) = a72;
  *(_DWORD *)(v76 - 184) = 1487389345 - v79;
  uint64_t v80 = (*(uint64_t (**)(uint64_t))(v75 + 8 * ((v72 ^ 0xEDC) + 1617)))(v76 - 192);
  return (*(uint64_t (**)(uint64_t))(v75
                                            + 8
                                            * ((1014 * (((v78 ^ (*(_DWORD *)(v76 - 152) == 984896845)) & 1) == 0)) ^ v77)))(v80);
}

uint64_t sub_1BCAEF104@<X0>(unsigned __int8 a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((60 * (v2 == (((a2 - 12 + v3) ^ a1) & 0xFE))) ^ (a2 + 500))))();
}

uint64_t sub_1BCAEF134@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v34 = 96 * (a1 ^ 0x56C);
  uint64_t v35 = 4 * (v31 - 1772036184);
  unsigned int v36 = -1567983505 * ((*(_DWORD *)(*a26 + (*a28 & (v34 + 1120742496))) ^ (a30 + v35)) & 0x7FFFFFFF);
  int v37 = v36 ^ HIWORD(v36);
  unsigned int v38 = -1567983505 * v37;
  *(_DWORD *)(a31 + v35) ^= *(_DWORD *)(a30 + v35) ^ *((_DWORD *)*(&off_1F16F9FD0 + (a1 ^ 0x5DC)) + HIBYTE(v38) - 3) ^ *((_DWORD *)*(&off_1F16F9FD0 + (a1 ^ 0x5D5)) + HIBYTE(v38) - 1) ^ *((_DWORD *)*(&off_1F16F9FD0 + a1 - 1386) + HIBYTE(v38)) ^ (2020540416 * v37) ^ v38 ^ (-938003259 * HIBYTE(v38));
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * (int)(((v33 - 1 == ((v34 - 2033987845) ^ 0xF98F630E))
                                     * (((v34 - 136850657) & 0x8EEBFBDB) + 2033987271)) ^ v34)))();
}

uint64_t sub_1BCAEF298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(v9 - 0x7EC954F575262799) + 4 * (v7 + v5)) = a5;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((117 * ((v7 + v5 - 1) >> 31)) ^ v6)))();
}

uint64_t sub_1BCAEF2F0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (949 * (v1 == v3)))))();
}

uint64_t sub_1BCAEF318@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(a12 + 4 * (v12 + a2)) = a1;
  int v19 = v12 + 1 + v15;
  BOOL v21 = v19 > v16 || v19 < v17;
  return (*(uint64_t (**)(void))(v18 + 8 * ((240 * (((v14 ^ v21) & 1) == 0)) ^ v13)))();
}

uint64_t sub_1BCAEF35C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((4075 * ((a4 + 1 + v4) > 0x3F)) ^ a1)))();
}

uint64_t sub_1BCAEF440()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((47 * ((((v1 - 557) ^ ((v0 ^ 0xEu) < (((v1 - 1457) | 0x1C0) ^ 0x1C8u))) & 1) == 0)) ^ (v1 + 343))))();
}

uint64_t sub_1BCAEF490()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((**(_DWORD **)(v2 + 8 * (v0 ^ 0x4F9)) == ((v0 + 68) ^ 0x522))
                                * (((v0 + 68) | 4) ^ 0x503)) ^ v0)))();
}

uint64_t sub_1BCAEF4E0@<X0>(unsigned int a1@<W7>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 + 102 * (v2 ^ a1) - 611 == (((v2 ^ a1) + 72) ^ 0x5ALL)) * v3) ^ v2)))();
}

uint64_t sub_1BCAEF51C@<X0>(void *a1@<X1>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  *(_DWORD *)(*a1 + 4 * (v5 + v4 + a3)) = v7;
  return (*(uint64_t (**)(void))(a4 + 8 * (((a2 == ((a3 - 809) ^ (v6 + 1335))) * (a3 - 1367)) ^ a3)))();
}

uint64_t sub_1BCAEF56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                + 8
                                                                                * ((a8
                                                                                  + ((v8 - 916) | 0x183)
                                                                                  + (((((v8 - 916) | 0x183) + 1150) | 0x2E) ^ (v10 + 1313))
                                                                                  - 387) ^ ((v8 - 916) | 0x183))))(a1, a2, a3, a4, 3439081166);
}

uint64_t sub_1BCAEF618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v23 - 112) = v20;
  *(void *)(v23 - 104) = a17;
  *(_DWORD *)(v23 - 120) = (v17 - 1023) ^ (((v23 + 1961557361 - 2 * ((v23 - 120) & 0x74EAFDE9)) ^ 0x191EE5E0) * v21);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v17 ^ 0xE4A)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((*(_DWORD *)(v23 - 116) > v18)
                                              * (((v17 + 833333219) & (v22 + 1274))
                                               + ((v17 + 833333219 + v22) | 8)
                                               - 1281)) ^ v17)))(v24);
}

void sub_1BCAEF6C4()
{
}

uint64_t sub_1BCAEF6CC@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a3 + 1813890859 + v3 - a2 - 322 < (a3 + a1))
                                * (((v3 + 758) | 0x200) - 1776)) ^ v3)))();
}

uint64_t sub_1BCAEF714()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1012 * (v1 == (v0 ^ 0x24C ^ (v3 + 24)))) ^ (v0 - 534))))();
}

uint64_t sub_1BCAEF74C()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 1504)))();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)(((((v0 - 117) ^ (STACK[0x438] == 0x1A8FA111108FB322)) & 1)
                                                   * (((v0 + 1357043995) & 0xAF1D26A2) - 438)) ^ (v0 + 803))))(v2);
}

void sub_1BCAEF7D0()
{
}

uint64_t sub_1BCAEF7DC(char a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v10 = (*(unsigned __int8 *)(STACK[0x478] + 1516) ^ 0x80) - (*(unsigned char *)STACK[0x4E8] - 49);
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v10 << (((v7 + 105) | 4) - 109 + ((((v7 + 105) | 4) + v8) & a1) - 68)) & a6)
                                 + (v10 ^ a2) == -3211)
                                * a7) ^ ((v7 - 1431) | 4))))();
}

uint64_t sub_1BCAEF84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v25 = v18 + 512;
  *(void *)(v24 - 144) = v19;
  *(void *)(v24 - 136) = a15;
  *(_DWORD *)(v24 - 104) = (v18 + 1812) ^ (1759421093
                                         * ((2 * ((v24 - 144) & 0x6DB5B008) - (v24 - 144) - 1840623626) ^ 0x2137FFA2));
  *(void *)(v24 - 128) = v23;
  *(void *)(v24 - 120) = v20;
  *(void *)(v24 - 112) = v20;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v18 ^ 0x898)))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((v22 + a18 + 2) > 0x7FFFFFFE)
                                              * (((v25 ^ 0x200) + 95) ^ 0x135)) ^ (v25 + 407))))(v26);
}

uint64_t sub_1BCAEF908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  if (a23 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * (((a47 == 1109409085)
                                                                           * ((a8 ^ (a8 - 315)) - 740)) ^ (v48 + a8 + 248))))(a14, a2, a3, 1854503558);
  if (a23 != 1) {
    JUMPOUT(0x1BCAEFA74);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
                                                                       + 8
                                                                       * (((2 * (a47 == 1109409085)) | (8 * (a47 == 1109409085))) ^ (v48 + a8 + 661))))(a14, a2, a3, 1854503558);
}

uint64_t sub_1BCAEFAA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v11 = v6 < v8;
  if (v11 == v7 + 1 > v9) {
    BOOL v11 = v5 + v7 + 404 < v6;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((!v11 * a4) ^ v4)))();
}

uint64_t sub_1BCAEFB1C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (v4 ^ 0x52F ^ ((LODWORD(STACK[0x3C8]) == 201956045) * a4))))();
}

uint64_t sub_1BCAEFB6C(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v4 = STACK[0x408];
  STACK[0x510] -= 1616;
  LODWORD(STACK[0x580]) = a3 - 26;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v4 - 59) ^ (STACK[0x480] == 0)) & 1)
                                     * ((22 * (v4 ^ 0x23C)) ^ 0x792)) | (v4 + 1008))))();
}

uint64_t sub_1BCAEFB90@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v5 = *(_DWORD *)(v3 + v2 * (uint64_t)a1 + 36) - 721597233;
  BOOL v7 = v5 > -1831716281 && v5 < SLODWORD(STACK[0x3B0]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * ((((a2 - 960) ^ 0x2E5) - 107) ^ ((a2 - 960) | 0x24A))) | a2)))();
}

uint64_t sub_1BCAEFC00(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ (61 * (a2 == 201956045)))))();
}

uint64_t sub_1BCAEFC54()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 16) == 0xC8F409392290867) * ((((v0 - 1007) | 0x285) + 662) ^ 0x2D2)) ^ v0)))();
}

void sub_1BCAEFC9C()
{
}

uint64_t sub_1BCAEFCB4()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((v2 - 881) ^ 0x4D9) * (v0 == v1)) ^ v2)))(298);
}

uint64_t sub_1BCAEFCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                                  + 8 * (int)((((v3 + 2104190868) & 0x82949687 ^ 0x49) * (a3 == v4)) ^ v3)))(a1, a2, 497, 131, 341562877, 3953404418, 4294966648);
}

uint64_t sub_1BCAEFD4C(int a1, uint64_t a2, int a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((49 * ((a4 ^ (a3 + a1 + (a4 ^ 0x5D1) + 2265451 - 195 < 8)) & 1)) ^ a4)))();
}

uint64_t sub_1BCAEFDA0()
{
  unsigned int v7 = (v0 + 46271798) | 0x8401C10B;
  _DWORD *v5 = v5[623];
  unint64_t v8 = 235795823 * ((0x5FBD65E0DA019E8ALL - ((v6 - 144) | 0x5FBD65E0DA019E8ALL) + v3) ^ 0xA8F220E1B153282CLL);
  int v9 = v8 + v7 - 1741098885;
  *(_DWORD *)(v6 - 104) = v9 + 205;
  *(_DWORD *)(v6 - 140) = (v7 - 1741098885) ^ v8;
  *(_DWORD *)(v6 - 136) = v8 + v7 - 239616346;
  *(void *)(v6 - 112) = (v2 + 1614541082) ^ v8;
  *(_DWORD *)(v6 - 120) = v9 + 80;
  *(_DWORD *)(v6 - 116) = v8;
  *(void *)(v6 - 128) = v8 + 3386577266u;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (int)(v7 ^ (v1 + 2053))))(v6 - 144);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v6 - 144)))(v10);
}

uint64_t sub_1BCAEFE94()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((107
                                * (((*(void *)(v1 + 32) == 0x5C210B0457DF3177) ^ ((v0 ^ 0x6F) + 1)) & 1)) ^ v0)))();
}

uint64_t sub_1BCAEFEE4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((*(_DWORD *)(v0 - 152) - 1277) | 0x601) - 760)
                                * (*(_DWORD *)(v0 - 136) == *(_DWORD *)(v0 - 144))) ^ *(_DWORD *)(v0 - 152))))();
}

uint64_t sub_1BCAEFF24()
{
  int v4 = ((v0 - 383682749) & 0x16DE86FF ^ 0x76AD6F3D) + v2;
  BOOL v6 = v4 > 476001662 || v4 < v3 - 1671481985;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v6 * (3 * (v0 ^ 0x7CF) - 1126)) | v0)))();
}

uint64_t sub_1BCAEFF94()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1504)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((113 * (STACK[0x478] == 0)) ^ (v0 + 464))))();
}

uint64_t sub_1BCAEFFD4(void *a1)
{
  uint64_t v4 = v8[2];
  uint64_t v5 = *v8;
  *a1 = 0x8080808080808080;
  a1[1] = 0x8080808080808080;
  int v6 = 235795823 * (((v3 - 168) & 0x4A404AB8 | ~((v3 - 168) | 0x4A404AB8)) ^ 0x2112FC1E);
  *(void *)(v3 - 128) = &STACK[0x7764D5933262C07B];
  *(_DWORD *)(v3 - 160) = v6 + 1919853893;
  *(void *)(v3 - 168) = v4;
  *(_DWORD *)(v3 - 132) = (v1 + 1991) ^ v6;
  *(void *)(v3 - 152) = &v9;
  *(void *)(v3 - 144) = v5;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 2102)))(v3 - 168);
  *((_DWORD *)v8 + 7) = *(_DWORD *)(v3 - 136);
  return result;
}

uint64_t sub_1BCAF00C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  unsigned int v11 = v7 + a7 + (a6 ^ 0x868);
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  BOOL v12 = -v9 - v8 + ((a6 - 1854) ^ 0x76D7FF34) + v11 < 0xF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                                                  + 8 * (((8 * v12) | (16 * v12)) ^ a6)))(72, a2, a3, 3762058340, 2850553958, 1096242143, 3198725064);
}

void sub_1BCAF0168()
{
}

unsigned int *sub_1BCAF0174@<X0>(unsigned int *result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4 = ((*(_DWORD *)(*(void *)(a2 - 0x7EC954F575262799) + 4 * v3) ^ 0x6DBB3C2Du) >> v2) ^ 0x905FB574;
  unsigned int v5 = (((2 * (v4 & 0xC87E4259)) | 0x8F9079D2) - (v4 & 0xC87E4259) - 1204305129) ^ v4 & 0xC87E4258;
  *uint64_t result = ((v5 & 0xD97FF55B ^ 0x1869C142) + (v5 ^ 0xC7963CB9) - ((v5 ^ 0xC7963CB9) & 0xD97FF55B)) ^ 0x5A5D86A2;
  return result;
}

void sub_1BCAF0220()
{
}

uint64_t sub_1BCAF0238()
{
  int v3 = STACK[0x408] - 571;
  LODWORD(STACK[0x628]) = v1;
  return (*(uint64_t (**)(void))(v2 + 8 * v3))();
}

uint64_t sub_1BCAF025C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v24 = v15 | 4;
  int v25 = 25 * ((v15 | 4) ^ 0x31A);
  int v26 = 460628867 * (((v23 - 144) & 0x7117CD99 | ~((v23 - 144) | 0x7117CD99)) ^ 0xC27EB01B);
  *(void *)(v23 - 120) = v20;
  *(_DWORD *)(v23 - 128) = v16 + v26 + (v25 ^ 0xA6AA28C2);
  *(_DWORD *)(v23 - 136) = v26 + v24 + 655;
  *(void *)(v23 - 144) = a1;
  (*(void (**)(uint64_t))(v17 + 8 * (v24 ^ 0x4AC)))(v23 - 144);
  *(_DWORD *)(v23 - 128) = (v25 - 467) ^ ((((v23 - 144) & 0x9C773357 | ~((v23 - 144) | 0x9C773357)) ^ 0xF72585F1) * v18);
  *(void *)(v23 - 144) = a14;
  *(void *)(v23 - 136) = a15;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 ^ 0xE8E)))(v23 - 144);
  *(void *)(v23 - 112) = a14;
  *(_DWORD *)(v23 - 120) = v25
                         - 1012
                         + 1224239923 * ((((v23 - 144) | 0x9417ED12) - ((v23 - 144) & 0x9417ED12)) ^ 0x66A410C5);
  *(void *)(v23 - 136) = v22;
  *(void *)(v23 - 128) = v20;
  *(void *)(v23 - 144) = a15;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 ^ 0xEDB)))(v23 - 144);
  *(_DWORD *)(v23 - 104) = (v25 + 306) ^ (1759421093
                                        * ((1760010739 - ((v23 - 144) | 0x68E7A1F3) + ((v23 - 144) | 0x97185E0C)) ^ 0x2465EE58));
  *(void *)(v23 - 128) = a14;
  *(void *)(v23 - 120) = v19;
  *(void *)(v23 - 112) = v22;
  *(void *)(v23 - 144) = a15;
  *(void *)(v23 - 136) = v22;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 ^ 0xEFE)))(v23 - 144);
  *(_DWORD *)(v23 - 128) = (v25 - 994) ^ (3804331 * ((v23 - 1072966065 - 2 * ((v23 - 144) & 0xC00BD6DF)) ^ 0x3A952589));
  *(void *)(v23 - 144) = a14;
  *(void *)(v23 - 136) = v22;
  *(void *)(v23 - 112) = v22;
  *(void *)(v23 - 104) = a7;
  *(void *)(v23 - 120) = a15;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 ^ 0xEF3)))(v23 - 144);
  *(_DWORD *)(v23 - 128) = (v25 - 467) ^ (235795823 * ((v23 - 144) ^ 0x94AD4959));
  *(void *)(v23 - 144) = a10;
  *(void *)(v23 - 136) = a15;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 + 374)))(v23 - 144);
  *(_DWORD *)(v23 - 120) = v25
                         - 1012
                         + 1224239923
                         * ((341731514 - ((v23 - 144) | 0x145E68BA) + ((v23 - 144) | 0xEBA19745)) ^ 0x19126A92);
  *(void *)(v23 - 136) = v21;
  *(void *)(v23 - 128) = v20;
  *(void *)(v23 - 144) = a15;
  *(void *)(v23 - 112) = a10;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 ^ 0xEDB)))(v23 - 144);
  *(void *)(v23 - 120) = v19;
  *(void *)(v23 - 112) = v21;
  *(_DWORD *)(v23 - 104) = (v25 + 306) ^ (1759421093
                                        * (((v23 - 144) & 0x2EBFC556 | ~((v23 - 144) | 0x2EBFC556)) ^ 0x623D8AFD));
  *(void *)(v23 - 136) = v21;
  *(void *)(v23 - 128) = a10;
  *(void *)(v23 - 144) = a15;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 + 390)))(v23 - 144);
  *(_DWORD *)(v23 - 128) = (v25 - 994) ^ (3804331
                                        * ((((v23 - 144) | 0xA7E21245) - (v23 - 144) + ((v23 - 144) & 0x581DEDB8)) ^ 0x5D7CE113));
  *(void *)(v23 - 112) = v21;
  *(void *)(v23 - 104) = a8;
  *(void *)(v23 - 144) = a10;
  *(void *)(v23 - 136) = v21;
  *(void *)(v23 - 120) = a15;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 ^ 0xEF3)))(v23 - 144);
  *(void *)(v23 - 144) = v22;
  *(void *)(v23 - 136) = v21;
  *(_DWORD *)(v23 - 128) = v25
                         + 1759421093 * (((v23 - 144) & 0xE1564B03 | ~((v23 - 144) | 0xE1564B03)) ^ 0xADD404A8)
                         + 164;
  (*(void (**)(uint64_t))(v17 + 8 * (v25 ^ 0xE83)))(v23 - 144);
  *(void *)(v23 - 136) = v21;
  *(_DWORD *)(v23 - 144) = v25
                         + 535753261 * (((~(v23 - 144) & 0x3699B15C) - (~(v23 - 144) | 0x3699B15D)) ^ 0x3C6DBF72)
                         - 805;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v25 ^ 0xEE9)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((369
                                              * (*(_DWORD *)(v23 - 128) < ((12 * (v25 ^ 0x6F3) - 1160485801) & 0x452B9BA8u)
                                                                        + 869761764)) ^ v25)))(v27);
}

void sub_1BCAF02F0()
{
}

void sub_1BCAF075C()
{
}

uint64_t sub_1BCAF0844()
{
  unint64_t v4 = STACK[0x5C0];
  int v5 = 628203409 * ((((2 * (v3 - 192)) | 0x6F8FF076) - (v3 - 192) - 935852091) ^ 0xB54FF408);
  *(_DWORD *)(v3 - 192) = v1 - 1882357475 + v5 + 8;
  *(_DWORD *)(v3 - 184) = v5 - 940730567;
  *(void *)(v3 - 176) = v4;
  (*(void (**)(uint64_t))(v2 + 8 * (int)(v1 ^ 0x7DD)))(v3 - 192);
  STACK[0x488] = *(void *)(v2 + 8 * v1);
  unint64_t v6 = STACK[0x3E8];
  STACK[0x638] = v4;
  LODWORD(STACK[0x644]) = 292784273;
  STACK[0x5A0] = v6;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((107
                                     * (((((v1 - 5) & 0xB7 ^ 0xF7) - 2) ^ (((2
                                                                                            * (*(_DWORD *)(v4 - 0x781B11C067843F56) & 0x3F)) ^ 0x62)
                                                                                          + (*(_DWORD *)(v4 - 0x781B11C067843F56) & 0x3F ^ 0x3DDAD74Eu)
                                                                                          - 1037752238 < 0xFFFFFFC0)) & 1)) ^ (v1 + 283250171) & 0xEF1DF2B7)))();
}

uint64_t sub_1BCAF08D0()
{
  return sub_1BCAF08DC();
}

uint64_t sub_1BCAF08DC@<X0>(int a1@<W2>, unsigned int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  *(int8x16_t *)(a4 + v5) = veorq_s8(*(int8x16_t *)(a3 + (a5 + a1 + v5)), v10);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((v6 - 12) | a2) ^ v9) + v5 == 64) * v7) ^ (v6 + 1309))))();
}

uint64_t sub_1BCAF0920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7
                                                     + 8
                                                     * (((((*(_DWORD *)(v5 + 48 * (v6 + a5)) == 1609651350) ^ (v8 - v10)) & 1)
                                                       * (v8 ^ 0x5D7)) ^ v8)))(v9, v5);
}

void sub_1BCAF0978()
{
  int v2 = 628203409 * ((v1 + 31728744 - 2 * ((v1 - 192) & 0x1E42528)) ^ 0x836C291B);
  *(void *)(v1 - 176) = STACK[0x5C0];
  *(_DWORD *)(v1 - 192) = v2 + v0 - 1882357475;
  *(_DWORD *)(v1 - 184) = v2 - 940730567;
  JUMPOUT(0x1BCAF09E8);
}

void sub_1BCAF0C64(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x5FA3F43A3B4E8EE2) = v1 - 1;
  JUMPOUT(0x1BCAEDD90);
}

uint64_t sub_1BCAF0C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8 * (a5 ^ (49 * ((unint64_t)(a19 - v19 - a4 - 0x1706FB9DE6F6FC5CLL) < 0x20)))))();
}

uint64_t sub_1BCAF0CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unint64_t v52 = STACK[0x608];
  unsigned int v53 = LODWORD(STACK[0x558]) - ((2 * LODWORD(STACK[0x558])) & 0xFAD41222) - 43382511;
  int v54 = 1759421093 * ((~(v51 - 192) & 0x553E8987 | (v51 - 192) & 0xAAC17678) ^ 0xE64339D3);
  *(_DWORD *)(v51 - 168) = v54 + 478 * ((v49 + 1404329300) & 0xAC4BA5D7 ^ 0x4C1) - 1107623376 + v47;
  *(unsigned char *)(v51 - 164) = -91 * ((~(v51 + 64) & 0x87 | (v51 + 64) & 0x78) ^ 0xD3) + 69;
  *(_DWORD *)(v51 - 144) = v53 ^ v54;
  *(void *)(v51 - 136) = v46;
  *(void *)(v51 - 160) = a46;
  *(void *)(v51 - 152) = v52;
  *(_DWORD *)(v51 - 192) = (v49 + 93) ^ v54;
  *(void *)(v51 - 184) = v48;
  *(void *)(v51 - 176) = a45;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(v50 + 8 * (v49 + 1736)))(v51 - 192);
  int v56 = *(_DWORD *)(v51 - 188);
  LODWORD(STACK[0x54C]) = v56;
  return (*(uint64_t (**)(uint64_t))(v50 + 8 * ((63 * (v56 != 984896845)) ^ v49)))(v55);
}

uint64_t sub_1BCAF0E00@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v6 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v3) * v5) ^ a1)))();
}

void sub_1BCAF0E34()
{
}

void sub_1BCAF0E3C()
{
}

uint64_t sub_1BCAF0F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  BOOL v21 = v18 + 208855890 < (a18 + 195107542);
  if (a18 + 195107542 < ((v19 + 42872010) & 0xFD71D11E) + 2049611071 != (v18 + 208855890) < 0x7A2A955D) {
    BOOL v21 = a18 + 195107542 < ((v19 + 42872010) & 0xFD71D11E) + 2049611071;
  }
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((11 * !v21) ^ v19)))(3559866497);
}

uint64_t sub_1BCAF0FA8()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0xCA9)))();
  LODWORD(STACK[0x630]) = v1;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v1 == ((v0 - 703575406) & 0x29EFB2E4 ^ 0x3AB45729)) * (v0 ^ 0x5FB)) ^ v0)))(v3);
}

uint64_t sub_1BCAF100C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((45 * (v0 >= ((((v1 & 0xBE890FDC) - 1404) | 0x18) ^ 0x58))) ^ v1 & 0xBE890FDC)))();
}

uint64_t sub_1BCAF1050@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,uint64_t a33)
{
  LODWORD(STACK[0x3E0]) = v35;
  LODWORD(STACK[0x3C8]) = v33;
  LODWORD(STACK[0x3C0]) = v34;
  if (v33 == 201956065)
  {
    int v40 = 15;
  }
  else
  {
    if (v33 != 201956061)
    {
      LODWORD(STACK[0x3B0]) = 0;
      LODWORD(STACK[0x3B8]) = 0;
      goto LABEL_7;
    }
    int v40 = 18;
  }
  LODWORD(STACK[0x3B8]) = v40;
  LODWORD(STACK[0x3B0]) = 1;
LABEL_7:
  uint64_t v41 = a1 + 0x7EC954F5752629B1;
  int v42 = STACK[0x408] + 462;
  int v43 = 3804331 * ((((2 * (v39 - 192)) | 0xAD316B98) - (v39 - 192) - 1452848588) ^ 0xAC06469A);
  *(_DWORD *)(v39 - 160) = STACK[0x408] - v43 + 1041;
  *(_DWORD *)(v39 - 124) = v37 + (v42 ^ 0x150F66D0) + v43;
  *(void *)(v39 - 176) = v36 + 1168;
  *(void *)(v39 - 168) = 0;
  *(void *)(v39 - 192) = a1 + 0x7EC954F575262AC1;
  *(void *)(v39 - 184) = 0;
  unint64_t v44 = STACK[0x3E8];
  *(void *)(v39 - 152) = v41;
  *(void *)(v39 - 144) = v44;
  *(void *)(v39 - 136) = a33;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v38 + 8 * a32))(v39 - 192);
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v38
                                                             + 8
                                                             * ((1638 * (*(_DWORD *)(v39 - 128) == 984896845)) ^ LODWORD(STACK[0x3C0]))))(v45, LODWORD(STACK[0x3C8]), 3310030484);
}

uint64_t sub_1BCAF11C8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((223 * ((a3 + 1 + v4) < 0x3C)) ^ v3)))();
}

uint64_t sub_1BCAF12A0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v3 - 355460723) & 0x152FE7EE ^ 0xFFFFFCDB) + v3 + 856)
                                     * (v1 - v2 + 1151578505 == (a1 ^ 0x3DA845BB))) ^ v3)))();
}

uint64_t sub_1BCAF1304@<X0>(int a1@<W5>, int a2@<W8>)
{
  if ((v2 - 36307395) > 0x19 || ((1 << (v2 + 61)) & 0x2000A03) == 0) {
    JUMPOUT(0x1BCAD3A18);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((31 * ((a2 & 0xFFFFFFFFFFFFFFFuLL) - 1 < 2)) ^ (a1 + 623230931))))();
}

uint64_t sub_1BCAF13A8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((2
                                 * (((*(void *)(v0 - 0x5B51E979A7EFF0CDLL) == 0) ^ (v2 - 1)) & 1)) & 0xFB | (4 * (((*(void *)(v0 - 0x5B51E979A7EFF0CDLL) == 0) ^ (v2 - 1)) & 1))) ^ v2)))();
}

uint64_t sub_1BCAF13FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  return (*(uint64_t (**)(void))(v54
                              + 8
                              * ((((a53 - 1890831304) < 0x10) * ((v53 - v55 - 193) ^ (a8 - 222))) ^ v53)))();
}

void sub_1BCAF1444()
{
}

uint64_t sub_1BCAF146C()
{
  int v3 = STACK[0x408] - 559;
  LODWORD(STACK[0x62C]) = v1;
  return (*(uint64_t (**)(void))(v2 + 8 * v3))();
}

uint64_t sub_1BCAF148C(_DWORD *a1)
{
  unsigned int v2 = *a1 - 108757529 * ((a1 & 0x3E324894 | ~(a1 | 0x3E324894)) ^ 0x2151D540);
  signed int v3 = v2 + 504207147;
  uint64_t result = (*(uint64_t (**)(void, void (*)()))((char *)*(&off_1F16F9FD0 + (int)(v2 ^ 0xE1F269D2))
                                                         + 8 * (int)(v2 + 504209174)
                                                         - 4))(*(&off_1F16F9FD0 + (int)(v2 ^ 0xE1F26917)), sub_1BCADA9A0);
  int v5 = *(_DWORD *)*(&off_1F16F9FD0 + v3);
  if (result) {
    int v5 = -984936461;
  }
  a1[1] = v5;
  return result;
}

void sub_1BCAF155C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(_DWORD *)(STACK[0x378] + 360) = 1848436556;
  int v63 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v61 + 8 * (v56 + 1496)))(v59, 2, &STACK[0x430], STACK[0x5B8], (v58 - 1854503558), v57, &STACK[0x480], &STACK[0x50C]);
  unsigned int v64 = ((2 * v63) & 0xDF9FF1DC) + (v63 ^ 0xEFCFF8EE);
  if (v64 == -3147535)
  {
    LODWORD(STACK[0x580]) = -984936843;
  }
  else
  {
    unint64_t v65 = STACK[0x408];
    if (v64 == -271582994)
    {
      STACK[0x370] = STACK[0x480];
      LODWORD(STACK[0x368]) = STACK[0x50C];
      STACK[0x2A8] = STACK[0x298] + 2304;
      LODWORD(STACK[0x55C]) = 768172578;
      unint64_t v67 = STACK[0x400];
      uint64_t v68 = (char *)&STACK[0x670] + STACK[0x400] + (v65 + 204) - 0x265CB198B5761BC1;
      STACK[0x230] = (unint64_t)(v68 + 1616);
      STACK[0x380] = v67 + 4144;
      STACK[0x510] = v67 + 4144;
      *((void *)v68 + 202) = 0x6370646600;
      v68[1624] = 1;
      STACK[0x400] = STACK[0x5C8];
      STACK[0x3A8] = (unint64_t)&STACK[0x670]
                   + v67
                   + ((16 * ((&STACK[0x670] + v67) + 111) + 16) & 0x20)
                   - 0x265CB198B5760B81;
      STACK[0x3B8] = (unint64_t)(v68 + 1625);
      JUMPOUT(0x1BCAF580CLL);
    }
    unsigned int v66 = 1374699841 * ((159245090 - (v60 | 0x97DE322) + (v60 | 0xF6821CDD)) ^ 0x9B7604D4);
    *(void *)(v62 - 184) = a56;
    *(_DWORD *)(v62 - 176) = (v64 - ((2 * v64 + 543165988) & 0x7568AA9A) + 1256479839) ^ v66;
    *(_DWORD *)(v62 - 192) = (v65 + 1315) ^ v66;
    (*(void (**)(uint64_t))(v61 + 8 * ((int)v65 + 1519)))(v62 - 192);
  }
  JUMPOUT(0x1BCB00EA4);
}

uint64_t sub_1BCAF171C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, uint64_t a16, uint64_t a17)
{
  a14 = 1178560073
      * (((&a14 | 0xC1D5A481) - &a14 + (&a14 & 0x3E2A5B78)) ^ 0x7B41DCE3)
      + 1770;
  a16 = v17;
  a17 = a12;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v19 + 16936))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((952 * (((a15 == v18) ^ 0xBB) & 1)) ^ 0x5FEu)))(v20);
}

void sub_1BCAF17D0(uint64_t a1)
{
  unsigned int v2 = (uint64_t *)*(&off_1F16F9FD0
                  + ((qword_1E9FB7E30 - dword_1E9FB8830) ^ 0x74u ^ byte_1BCB19710[byte_1BCB163A0[(qword_1E9FB7E30 - dword_1E9FB8830) ^ 0x74] ^ 0x29])
                  + 19);
  signed int v3 = (char *)off_1F16FA430 - 12;
  uint64_t v4 = off_1F16FA1C8;
  int v5 = (uint64_t *)*(&off_1F16F9FD0
                  + (*((unsigned char *)off_1F16FA1C8
                                      + (*((unsigned __int8 *)off_1F16FA430
                                         + (*v2 ^ qword_1E9FB7E30 ^ 0x74)
                                         - 12) ^ 0x3Au)) ^ *v2 ^ qword_1E9FB7E30 ^ 0x74)
                  - 162);
  uint64_t v6 = *v2 - (void)&v10 + *v5;
  uint64_t v7 = 267049729 * v6 - 0x733E1D47A735574;
  uint64_t v8 = 267049729 * (v6 ^ 0x733E1D47A735574);
  uint64_t *v2 = v7;
  uint64_t *v5 = v8;
  LODWORD(v5) = *(_DWORD *)v2;
  uint64_t v9 = (char *)*(&off_1F16F9FD0
               + ((qword_1E9FB7E30 - dword_1E9FB8830) ^ 0x74u ^ byte_1BCB165A0[byte_1BCB12350[(qword_1E9FB7E30 - dword_1E9FB8830) ^ 0x74] ^ 0xDD])
               + 99)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v9[8
                                                   * ((v8 - (_BYTE)v5) ^ 0x74 ^ v4[v3[(v8 - (_BYTE)v5) ^ 0x74] ^ 0x3A])
                                                   + 15136])((char *)*(&off_1F16F9FD0+ (*((unsigned char *)off_1F16FA130+ (*((unsigned __int8 *)off_1F16FA268 + ((v8 + (_BYTE)v5) ^ 0x74u) - 12) ^ 0xC8u)- 4) ^ (v8 + (_BYTE)v5) ^ 0x74u)- 88)- 4, sub_1BCAF639C);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1BCAF19C4()
{
  *(_DWORD *)(v3 - 104) = (v1 - 1153) ^ (108757529 * ((v3 - 120) ^ 0xE09C622B));
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 112) = v5;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 282)))(v3 - 120);
}

uint64_t sub_1BCAF1A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v79 = ((v76 + 1293747720 - 2 * (v76 & 0x4D1D0608)) ^ 0xD9B04F51) * v75;
  *(void *)(v78 - 176) = a72;
  *(void *)(v78 - 160) = STACK[0x200];
  *(void *)(v78 - 192) = v72;
  *(_DWORD *)(v78 - 168) = v79 + v73 - 445;
  *(_DWORD *)(v78 - 184) = 1487389347 - v79;
  uint64_t v80 = (*(uint64_t (**)(uint64_t))(v77 + 8 * (v73 + 1617)))(v78 - 192);
  return (*(uint64_t (**)(uint64_t))(v77
                                            + 8
                                            * (((((v73 + 1) ^ (*(_DWORD *)(v78 - 152) == v74)) & 1)
                                              * ((v73 - 380) ^ 0x3B8)) ^ v73)))(v80);
}

uint64_t sub_1BCAF1AF8@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 - 1862623873)) = *(unsigned char *)(v3 + (a1 - 1862623873)) ^ *(unsigned char *)(v5 + ((a1 - 1862623873) & 0xFLL)) ^ *(unsigned char *)(v4 + (((_BYTE)a1 + 127) & 0xF)) ^ *(unsigned char *)(v6 + (((_BYTE)a1 + 127) & 0xF)) ^ (97 * ((a1 + 127) & 0xF)) ^ 0x80;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 - 1 == v7) * (a2 - 16)) ^ (a2 - 1776))))();
}

uint64_t sub_1BCAF1B64(__n128 a1)
{
  *(_DWORD *)(v4 + 1424) = 535412524;
  *(_DWORD *)(v4 + 1428) = 201956045;
  *(void *)(v4 + 1432) = v2;
  *(void *)(v4 + 1440) = v2;
  *(_DWORD *)(v4 + 1448) = v3;
  *(__n128 *)(v4 + 1452) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * v1))();
}

uint64_t sub_1BCAF1BC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BCAF1C48(a1 - 0x7EC954F575262799, 1257322541, 0x7BF6B3F332BFF1E9, 1702880210, 0xBD9D4C8DEFCB9FD8, 3302704350, 3037644754, 87);
}

uint64_t sub_1BCAF1C48(void *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v20 = 4 * (v17 + v14);
  int v21 = v8 + v16 + (*(_DWORD *)(*v12 + v20) ^ v18) + (*(_DWORD *)(*v13 + v20) ^ (v18 + (v11 ^ 0xFF) - 1254));
  *(_DWORD *)(*a1 + v20) = v21 + v18 - (v15 & (2 * v21));
  BOOL v22 = v9 > a2;
  if (v22 == v17 + a6 < a7) {
    BOOL v22 = v17 + a6 < v10;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((v22 * a8) ^ v11)))();
}

void sub_1BCAF1CE4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1BCAF1D4C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((121 * (((v1 - 1528) ^ 0xA18E81C4) + v0 >= v0 - 1584496196)) ^ v1)))();
}

void sub_1BCAF1D90()
{
}

void sub_1BCAF1DF8(uint64_t a1)
{
  int v1 = 1224239923 * (((a1 | 0xC16B5AED) - (a1 & 0xC16B5AED)) ^ 0x33D8A73A);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1BCAF1EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v39 = *(void *)(v36 + 24);
  *(int8x16_t *)(v37 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v36 + 40) - 0x7764D5933262C1A7), (int8x16_t)xmmword_1BCB19A30);
  if (a9) {
    BOOL v40 = v39 == 0x198EA10384B062FLL;
  }
  else {
    BOOL v40 = 1;
  }
  int v41 = v40;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (int)((v41 * (7 * (a6 ^ 0x6F0) + ((a6 - 62) ^ 0xFFFFFC00))) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1BCAF1F50@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v21 = a1 + 512;
  *(void *)(v20 - 120) = a18;
  *(void *)(v20 - 112) = a18;
  *(void *)(v20 - 144) = a17;
  *(void *)(v20 - 136) = a5;
  *(_DWORD *)(v20 - 104) = (a1 + 1812) ^ (((((v20 - 144) | 0x226ABEA9) + (~(v20 - 144) | 0xDD954156)) ^ 0x91170EFC) * v18);
  *(void *)(v20 - 128) = a16;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (a1 ^ 0x898)))(v20 - 144);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((((a15 - 810746374) > 0x7FFFFFFE)
                                              * (((v21 ^ 0x200) + 95) ^ 0x135)) ^ (v21 + 407))))(v22);
}

uint64_t sub_1BCAF2010(uint64_t result)
{
  uint64_t v1 = 1178560073 * (((result | 0x1F8F921A8C67E875) - (result & 0x1F8F921A8C67E875)) ^ 0x473C2F236F39017);
  unint64_t v2 = *(void *)(result + 16) + v1;
  unint64_t v3 = *(void *)result ^ v1;
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 > v3;
  int v6 = v4;
  if (((*(_DWORD *)(result + 12) + v1) & 1) == 0) {
    BOOL v5 = v6;
  }
  BOOL v4 = !v5;
  uint64_t v7 = 36;
  if (!v4) {
    uint64_t v7 = 32;
  }
  *(_DWORD *)(result + 28) = *(_DWORD *)(result + v7) ^ v1 ^ (*(_DWORD *)(result + 8) - v1);
  return result;
}

uint64_t sub_1BCAF20A0()
{
  int v5 = 535753261 * ((((v4 - 144) | 0x96240AC8) - (v4 - 144) + ((v4 - 144) & 0x69DBF530)) ^ 0x9CD004E7);
  *(void *)(v4 - 120) = v7;
  *(_DWORD *)(v4 - 128) = v9 - v5 + (v0 ^ 0x7C3DBA7);
  *(void *)(v4 - 136) = v3;
  *(_DWORD *)(v4 - 144) = v5 + v0 + 1469;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1696)))(v4 - 144);
  *(_DWORD *)(v8 - 0x13AAEC8A5CF1D160) = v9;
  *(_DWORD *)(v1 + 48) = 984896845;
  return result;
}

uint64_t sub_1BCAF2128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unint64_t v33 = ((v30 >> ((3 * (v29 ^ 0x56)) ^ 0xFu)) ^ a3) + HIDWORD(v31) + (*(_DWORD *)(a27 + a12) ^ v27);
  *(_DWORD *)(a27 + 4 * a13) = v33 + v27 - ((v33 << ((9 * (v29 ^ 0xF1)) ^ 0xD3)) & v28);
  *(_DWORD *)(a27 + a12) = HIDWORD(v33) + v27 - ((2 * HIDWORD(v33)) & 0x5B76785A);
  BOOL v35 = a22 + 1268458055 > 815446927 || a22 + 1268458055 < a17;
  return (*(uint64_t (**)(void))(v32 + 8 * (v29 ^ (1874 * v35))))();
}

void sub_1BCAF21EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(v9 - 120) = v8;
  *(_DWORD *)(v9 - 128) = v7;
  *(_DWORD *)(v9 - 136) = v7 & 0xFFFFFFF8;
  *(_DWORD *)(v9 - 144) = a7 - 828;
  JUMPOUT(0x1BCAF2260);
}

uint64_t sub_1BCAF2328(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v8 - a4 + 3) ^ v8 ^ (a6 - 473) ^ 5) * (v6 == v7)) ^ v8)))();
}

void sub_1BCAF2360(uint64_t a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  int v3 = *(_DWORD *)(a1 + 28) + 3804331 * ((((2 * a1) | 0x5B2BA828) - a1 - 764793876) ^ 0xD70B2742);
  int v4 = *(_DWORD *)(a1 + 32) ^ (3804331 * ((((2 * a1) | 0x5B2BA828) - a1 - 764793876) ^ 0xD70B2742));
  int v5 = *(_DWORD *)(a1 + 8);
  unsigned int v6 = 628203409 * ((v38 - 571354846 - 2 * (v38 & 0xDDF1D122)) ^ 0x5F79DD11);
  int v24 = &STACK[0x781B11C0678440B6];
  uint64_t v39 = &STACK[0x781B11C0678440B6];
  v38[0] = v3 + v6 - 1882357527;
  void v38[2] = v6 - 940730567;
  uint64_t v7 = (char *)*(&off_1F16F9FD0 + (v3 ^ 0xA7)) - 4;
  int v8 = *(void (**)(_DWORD *))&v7[8 * (v3 ^ 0x7E1)];
  unint64_t v19 = 3804331 * ((((2 * a1) | 0xC140CD485B2BA828) - a1 + 0x1F5F995BD26A2BECLL) ^ 0x892B1DF1D70B2742);
  int v9 = v5 + 3804331 * ((((2 * a1) | 0x5B2BA828) - a1 - 764793876) ^ 0xD70B2742);
  v8(v38);
  int v10 = v4;
  int v18 = v9 + 1921373564;
  int v16 = v9 - 654832691;
  int v17 = 2065124400;
  int v13 = v9 - 1431360255;
  int v12 = v9 + 1664383255;
  v11[2] = (char *)&v11[-164517566] + 1;
  v11[1] = v36;
  int v30 = v3 ^ 0x275;
  int v31 = v3 ^ 0x5F;
  uint64_t v26 = v3 ^ 0x5Fu;
  uint64_t v28 = v26;
  uint64_t v20 = a1;
  int v29 = v3;
  int32x4_t v22 = vdupq_n_s32(0x3AB4554Du);
  int32x4_t v23 = vdupq_n_s32(0x3AB4555Fu);
  int32x4_t v21 = vdupq_n_s32(0x3AB4554Fu);
  int v14 = v3 ^ 0x837;
  unsigned int v15 = (v3 + 1392934720) & 0xACF987DB;
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v25 = *(void *)&v7[8 * v3];
  unsigned int v1 = v10 - (((v10 << ((v3 ^ 0x37) - 7)) + 1497370722) & 0xB775A3BC) - 2007311857;
  char v32 = (v3 + 64) & 0xDB ^ HIBYTE(v1);
  char v33 = BYTE2(v1) ^ 0x3A;
  char v34 = BYTE1(v1) ^ 0x51;
  char v35 = (v10 - ((((_BYTE)v10 << ((v3 ^ 0x37) - 7)) + 98) & 0xBC) + 15) ^ 0x5E;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1BCAF25EC()
{
  int v6 = v2 + v1 - 2011169240;
  unsigned int v7 = v6 + (((v0 ^ 0xF7D5847F) - 79287174) & 0x4B9CFFE);
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((78
                                     * (v3 + 2011168222 + v4 + v7 <= ((v6 + 1017) ^ ((v0 ^ 0xF7D5847F) - 1569) ^ 0xFFFFFE9F))) | v0 ^ 0xF7D5847F)))();
}

uint64_t sub_1BCAF2688@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 7016))(0);
}

uint64_t sub_1BCAF26E0()
{
  BOOL v7 = *v0 == 128 && LODWORD(STACK[0x628]) == ((STACK[0x408] - 610) ^ 0x5CD0252C) && v1 == v4 - 1;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v7 * v2) ^ (STACK[0x408] + 245))))();
}

uint64_t sub_1BCAF2728()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((v0 >> v3) & 1 | (8 * ((v0 >> v3) & 1))) ^ v1)))();
}

uint64_t sub_1BCAF274C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((*(_DWORD *)(*(void *)(a1 + 8) + v4) == ((v3 - 808) | 0x101) + v2) | v3)))();
}

uint64_t sub_1BCAF2780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v9 ^ 0x277) + 211 * (v9 ^ 0x2B4) - 872) * (v8 == a7)) ^ v9)))();
}

uint64_t sub_1BCAF27BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int32x4_t *a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int32x4_t a56,int8x16_t a57)
{
  int8x16x4_t v84 = vld4q_s8(v57);
  int v58 = LODWORD(STACK[0x224]) - 439;
  v59.i64[0] = 0x8080808080808080;
  v59.i64[1] = 0x8080808080808080;
  uint8x16_t v60 = (uint8x16_t)veorq_s8(v84.val[0], v59);
  uint16x8_t v61 = vmovl_u8(*(uint8x8_t *)v60.i8);
  int8x16_t v62 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v61.i8);
  int8x16_t v63 = (int8x16_t)vmovl_high_u16(v61);
  uint16x8_t v64 = vmovl_high_u8(v60);
  int8x16_t v65 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v64.i8);
  int8x16_t v66 = (int8x16_t)vmovl_high_u16(v64);
  uint8x16_t v67 = (uint8x16_t)veorq_s8(v84.val[1], v59);
  uint16x8_t v68 = vmovl_high_u8(v67);
  uint16x8_t v69 = vmovl_u8(*(uint8x8_t *)v67.i8);
  uint8x16_t v70 = (uint8x16_t)veorq_s8(v84.val[2], v59);
  _Q21 = (int8x16_t)vmovl_high_u8(v70);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v70.i8);
  int8x16_t v73 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v78 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v84.val[0] = veorq_s8(v84.val[3], v59);
  v84.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v84.val[0]);
  v84.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v84.val[1]);
  v84.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v84.val[0].i8);
  v84.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v84.val[0]);
  v84.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.val[0].i8), 0x18uLL), v73), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), v62));
  v84.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v84.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v63));
  v84.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.val[1].i8), 0x18uLL), v78), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), v65));
  v84.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v84.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v66));
  int32x4_t v79 = (int32x4_t)veorq_s8(vandq_s8(v84.val[0], a57), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
  int32x4_t v80 = (int32x4_t)veorq_s8(vandq_s8(v84.val[3], a57), (int8x16_t)(*(_OWORD *)&v63 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
  int32x4_t v81 = (int32x4_t)veorq_s8(vandq_s8(v84.val[1], a57), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
  int32x4_t v82 = (int32x4_t)veorq_s8(vandq_s8(v84.val[2], a57), (int8x16_t)(*(_OWORD *)&v66 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
  a5[2] = vaddq_s32(vsubq_s32((int32x4_t)v84.val[1], vaddq_s32(v81, v81)), a56);
  a5[3] = vaddq_s32(vsubq_s32((int32x4_t)v84.val[2], vaddq_s32(v82, v82)), a56);
  *a5 = vaddq_s32(vsubq_s32((int32x4_t)v84.val[0], vaddq_s32(v79, v79)), a56);
  a5[1] = vaddq_s32(vsubq_s32((int32x4_t)v84.val[3], vaddq_s32(v80, v80)), a56);
  return sub_1BCAEC668(v58, a1, a2, a3, a4, 1717572394);
}

uint64_t sub_1BCAF28FC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 ^ 0x547) + (v2 ^ 0x578 ^ (v1 - 512)) + v0 > 1) ^ v2)))();
}

uint64_t sub_1BCAF2934()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 - 1848436555) < 2) ^ (v0 - 30)) & 1)
                                * ((v0 ^ 0x223) - 54)) | v0)))();
}

uint64_t sub_1BCAF2980()
{
  LODWORD(STACK[0x564]) = v0;
  LODWORD(STACK[0x584]) = v1;
  LODWORD(STACK[0x51C]) = v2;
  LODWORD(STACK[0x4D4]) = v3;
  LODWORD(STACK[0x53C]) = v5 + 64;
  unint64_t v7 = STACK[0x400];
  int v8 = (*(_DWORD *)(v6 - 0x781B11C067843F52) ^ v4) + (v0 ^ v4);
  *(_DWORD *)(v6 - 0x781B11C067843F52) = v8 + v4 - ((2 * v8) & 0x6AB4158C);
  int v9 = (*(_DWORD *)(v6 - 0x781B11C067843F4ELL) ^ v4) + (v2 ^ v4);
  *(_DWORD *)(v6 - 0x781B11C067843F4ELL) = v9 + v4 - ((2 * v9) & 0x6AB4158C);
  int v10 = (*(_DWORD *)(v6 - 0x781B11C067843F4ALL) ^ v4) + (v1 ^ v4);
  *(_DWORD *)(v6 - 0x781B11C067843F4ALL) = v10 + v4 - ((2 * v10) & 0x6AB4158C);
  int v11 = (*(_DWORD *)(v6 - 0x781B11C067843F46) ^ v4) + (v3 ^ v4);
  *(_DWORD *)(v6 - 0x781B11C067843F46) = v11 + v4 - ((2 * v11) & 0x6AB4158C);
  STACK[0x510] = v7 - 320;
  return ((uint64_t (*)(void))STACK[0x4B8])();
}

uint64_t sub_1BCAF29E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  BOOL v9 = v5 > v8;
  if (v9 == a3 - 623867567 < (int)((a5 - 77) ^ 0x808975F0)) {
    BOOL v9 = a3 - 623867567 < v7;
  }
  return (*(uint64_t (**)(uint64_t, void))(v6 + 8 * ((1997 * v9) ^ a5)))(a1, 0);
}

uint64_t sub_1BCAF2A4C()
{
  *(void *)(v1 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 != v4) * v3) ^ v0)))();
}

uint64_t sub_1BCAF2A70@<X0>(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  int8x16_t v59 = *(unsigned int **)(v57 + 8 * (a1 ^ 0x55A));
  uint64_t v60 = *v59;
  uint64_t v61 = *(void *)(v57 + 8 * (a1 ^ 0x518));
  int8x16_t v62 = *(unsigned char **)(v61 - 4);
  a4 = *v62 - 55;
  a5 = v62[1] - 55;
  a6 = v62[2] - 55;
  a7 = v62[3] - 55;
  a8 = v62[4] - 55;
  a9 = v62[5] - 55;
  a10 = v62[6] - 55;
  a11 = v62[7] - 55;
  a12 = v62[8] - 55;
  a13 = v62[9] - 55;
  a14 = v62[10] - 55;
  a15 = v62[11] - 55;
  a16 = v62[12] - 55;
  a17 = v62[13] - 55;
  a18 = v62[14] - 55;
  a19 = v62[15] - 55;
  a20 = v62[16] - 55;
  a21 = v62[17] - 55;
  a22 = v62[18] - 55;
  a23 = v62[19] - 55;
  a24 = v62[20] - 55;
  a25 = v62[21] - 55;
  int8x16_t v63 = *(unsigned char **)(v61 - 4);
  a26 = v63[22] - 55;
  a27 = v63[23] - 55;
  a28 = v63[24] - 55;
  a29 = v63[25] - 55;
  a30 = v63[26] - 55;
  a31 = v63[27] - 55;
  a32 = v63[28] - 55;
  a33 = v63[29] - 55;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v55 + 8 * (a1 ^ 0xD44)))(v60, &a4, v53);
  int v71 = ((2 * v64) & 0xB6AF73FE) + (v64 ^ 0xDB57B9FF);
  if (v71 == -615007745)
  {
    *(_DWORD *)(v58 + 348) |= ((v56 - 1174) | 0x421) ^ 0x4BB;
    *(_DWORD *)(v58 + 48) = 84136176;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (v56 ^ 0xD6C)))(*v53, v58 + 336, v58 + 340, v58 + 344, v54);
    JUMPOUT(0x1BCAD3BCCLL);
  }
  if (v71 == -615006643)
  {
    uint64_t v72 = *v59;
    int8x16_t v73 = **(unsigned char ***)(v57 + 8 * (v56 ^ 0x50F));
    a34 = *v73 - 113;
    a35 = v73[1] - 113;
    a36 = v73[2] - 113;
    a37 = v73[3] - 113;
    a38 = v73[4] - 113;
    a39 = v73[5] - 113;
    a40 = v73[6] - 113;
    a41 = v73[7] - 113;
    a42 = v73[8] - 113;
    a43 = v73[9] - 113;
    a44 = v73[10] - 113;
    a45 = v73[11] - 113;
    a46 = v73[12] - 113;
    a47 = v73[13] - 113;
    a48 = v73[14] - 113;
    a49 = v73[15] - 113;
    a50 = v73[16] - 113;
    a51 = v73[17] - 113;
    a52 = v73[18] - 113;
    a53 = v73[19] - 113;
    uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v55 + 8 * (v56 ^ 0xD44)))(v72, &a34, v53);
    int v74 = (2 * v64) & 0xE8EBDB3E;
    int v71 = (v64 ^ 0xF475ED9F) + 198122496;
  }
  else
  {
    int v74 = 619532192;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55
                                                                                                  + 8 * ((359 * (v71 + v74 == ((v56 + 2117517783) & 0x81C93DB3 ^ 0x450D2E))) ^ (v56 - 117))))(v64, v65, v66, v67, v68, v69, v70);
}

void sub_1BCAF2E44()
{
}

uint64_t sub_1BCAF2E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v21 + 8 * (((a20 == a5 + 17) * (v20 ^ 0xDE)) | (v20 + 885))))();
}

uint64_t sub_1BCAF2E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((4 * (v8 + 1 != v9 + 64)) | (16 * (v8 + 1 != v9 + 64))) ^ a8)))();
}

uint64_t sub_1BCAF2F50@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *uint64_t v4 = v4[623];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * (((v5 - 1 == (((a2 ^ 0x140) - 205) ^ 0x4ED4A3A))
                                                       * (a2 ^ 0x140 ^ (v2 - 28) ^ (v2 + 603))) ^ a2 ^ 0x140)))(a1, 1135927250);
}

uint64_t sub_1BCAF2FB8(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7)
{
  *(unsigned char *)(a1 + (v7 + a6)) = *(unsigned char *)(v9 + (v7 + a6));
  return (*(uint64_t (**)(void))(v10 + 8 * ((((((v8 - 96) | a4) ^ a7) + v7 != a5) * a3) ^ (v8 - 366))))();
}

void sub_1BCAF2FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  LODWORD(STACK[0x540]) ^= a32;
  JUMPOUT(0x1BCAD4678);
}

void sub_1BCAF301C()
{
  unint64_t v4 = STACK[0x5F0] + 0x781B11C06784401ALL;
  STACK[0x5C0] = v4;
  int v5 = 628203409 * ((2 * ((v3 - 192) & 0x7E97C1A0) - (v3 - 192) - 2123874721) ^ 0x3E0326C);
  *(void *)(v3 - 176) = v4;
  *(_DWORD *)(v3 - 184) = v5 - 940730567;
  *(_DWORD *)(v3 - 192) = v1 - 1882357475 + v5 + 9;
  unint64_t v6 = v0;
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 2012)))(v3 - 192);
  STACK[0x488] = *(void *)(v2 + 8 * v1);
  STACK[0x3E8] = v6;
  JUMPOUT(0x1BCAF0A10);
}

uint64_t sub_1BCAF30E8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((38 * (*(char *)(v0 + (v2 + v3 + 927)) > (char)((v4 - 45) ^ 0x9F))) ^ v4)))();
}

uint64_t sub_1BCAF3158@<X0>(uint64_t a1@<X2>, char a2@<W6>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v36 = *((_DWORD *)&a20 + ((v34 + v32) >> (a2 + ((v33 - 10) | 0x19) + 5)) + 18);
  *(unsigned char *)(a1 + (v34 + v32)) = v36 ^ 0x46;
  *(unsigned char *)(a1 + (v34 + v32 + 1)) = BYTE1(v36) ^ 0x8A;
  *(unsigned char *)(a1 + (v34 + v32 + 2)) = BYTE2(v36) ^ 0xDA;
  *(unsigned char *)(a1 + (v34 + v32 + 3)) = HIBYTE(v36) ^ 0xB5;
  BOOL v37 = v34 + 1800451134 < (a32 - 1610267190);
  if (v34 + 1800451134 < a3 != a32 - 1610267190 < a3) {
    BOOL v37 = a32 - 1610267190 < a3;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((1227 * v37) ^ v33)))();
}

uint64_t sub_1BCAF3224@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X5>, int a4@<W8>)
{
  int v12 = (unsigned __int8 *)(*(void *)(a3 + 8 * (a4 ^ (a1 + 73))) - 2);
  uint64_t v13 = (a2 + a4 + 932) | 0xC8u;
  BOOL v15 = ((**v5 - (*v12 ^ 0x80)) ^ v11) + (((**v5 - (*v12 ^ 0x80)) << (((a2 + a4 - 92) | 0xC8) + 9)) & v4) + v7 != v9
     || v10 - 0x5B695B74611722D9 + (v13 ^ 0x5B695B74598E89E9) == 0;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (int)((v15 * v6) ^ v13)))(200);
}

void sub_1BCAF3248()
{
  LODWORD(STACK[0x564]) = v0;
  LODWORD(STACK[0x51C]) = v3;
  LODWORD(STACK[0x584]) = v1;
  LODWORD(STACK[0x4D4]) = v4;
  LODWORD(STACK[0x53C]) = v7 + 80;
  unint64_t v9 = STACK[0x648];
  int v10 = *(_DWORD *)(STACK[0x648] - 0x781B11C067843F42);
  LODWORD(STACK[0x420]) = v2;
  *(_DWORD *)(v9 - 0x781B11C067843F42) = (v10 ^ v6)
                                         + (v2 ^ v6)
                                         + v6
                                         - ((((v10 ^ v6) + (v2 ^ v6)) << ((v5 ^ 0x37) - 99)) & v8);
  JUMPOUT(0x1BCAF32F0);
}

uint64_t sub_1BCAF3578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v15 = (a6 + v10);
  *(unsigned char *)(v14 + v15) = *(unsigned char *)(v12 + (v15 & ((a7 ^ 0x67Fu) - 1420))) ^ *(unsigned char *)(v7 + v15) ^ *(unsigned char *)((v15 & ((a7 ^ 0x67Fu) - 1420)) + v9 + 2) ^ *(unsigned char *)(v11 + (v15 & ((a7 ^ 0x67Fu) - 1420))) ^ (-15 * (v15 & ((a7 ^ 0x7F) + 116)));
  return (*(uint64_t (**)(void))(v13 + 8 * ((15 * (a6 - 1 != v8 + 295)) ^ (a7 + 704))))();
}

uint64_t sub_1BCAF35E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a16 = 870 - 460628867 * ((&a14 & 0x11E81363 | ~(&a14 | 0x11E81363)) ^ 0xA2816EE1);
  a14 = &STACK[0x5224DE3D6C39C423];
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 16872))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * (v18 | (4 * (a15 == ((v16 - 1264) ^ 0x510))))))(v19);
}

uint64_t sub_1BCAF3678@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * ((240 * (v6 - 1 == v2)) ^ v5)))(0);
}

void sub_1BCAF36AC()
{
}

uint64_t sub_1BCAF36B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * ((1449
                                                                                           * (v3 - 2076536201 < ((v4 + 1437218135) & 0xAA55CF75) - 1785)) ^ (v4 + 268))))(a1, a2, a3, 13832, 889516850, 2577394902);
}

uint64_t sub_1BCAF371C(int a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  unsigned int v9 = ((*v7 & 0x7FFFFFFE | ((v5 - 1105) ^ 0x80000264) & v7[623]) >> (v5 ^ 0xB4)) ^ v6;
  v7[623] = v7[396] ^ a3 ^ *(_DWORD *)(a5 + 4 * (*v7 & 1)) ^ (v9 + a2 - (a1 & (2 * v9)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((75 * (LODWORD(STACK[0x560]) > 0x26F)) ^ v5)))();
}

uint64_t sub_1BCAF37A0@<X0>(uint64_t a1@<X8>)
{
  int v7 = STACK[0x57C];
  int v8 = ((LODWORD(STACK[0x57C]) << ((v3 + 34) ^ 0x65)) + 135287174) & 0xA0BCD9E;
  unsigned int v9 = 1755732067
     * (((v4 ^ 0x241E2CAE | 0xED9C265C) - (v4 ^ 0x241E2CAE) + ((v4 ^ 0x241E2CAE) & 0x1263D9A2)) ^ 0x1744B729);
  *(_DWORD *)(v6 - 172) = v9 + v3 + 368400111;
  *(_DWORD *)(v6 - 168) = (488174179 * v2 + 1337423406) ^ v9;
  *(_DWORD *)(v6 - 176) = v9 + v7 - v8 - 2129784942;
  unint64_t v10 = STACK[0x378] + 0x198EA10384B0633;
  *(void *)(v6 - 192) = STACK[0x378] + 0x7764D5933262C1BBLL;
  *(void *)(v6 - 184) = a1;
  *(void *)(v6 - 144) = v10;
  STACK[0x360] = v1;
  *(void *)(v6 - 160) = v1;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 + 2075)))(v6 - 192);
  int v12 = *(_DWORD *)(v6 - 152);
  LODWORD(STACK[0x54C]) = v12;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1107 * (v12 == 984896845)) ^ v3)))(v11);
}

void sub_1BCAF38D4()
{
}

uint64_t sub_1BCAF38F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, int a20,int a21)
{
  BOOL v24 = a18 - a12 == 559756921 && a21 == a5 + 17;
  return (*(uint64_t (**)(void))(v22 + 8 * ((v24 * ((v21 ^ 0x79F) - 296)) ^ v21)))();
}

uint64_t sub_1BCAF3940()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 + 255) | 0x1A1) - 728) ^ ((v2 - 249) | 0x80)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1BCAF3978()
{
  return (*(uint64_t (**)(void))(v0
                              + 8 * (int)((458 * ((STACK[0x408] - 85) & 1)) ^ (STACK[0x408] + 1172))))();
}

uint64_t sub_1BCAF39D8()
{
  return (*(uint64_t (**)(unint64_t))(v3 + 8 * ((((2 * v2) ^ 0x871) * (v0 == v1)) ^ v2)))(0x87E4EE3F987BC0AELL);
}

uint64_t sub_1BCAF3A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  int v43 = *(_DWORD *)(&a25 + ((v41 + v38) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v41 + v38)) = ((v39 ^ (a6 + 25)) - 106) ^ HIBYTE(v43);
  *(unsigned char *)(a1 + (v41 + v38 + 1)) = BYTE2(v43) ^ 0xDA;
  *(unsigned char *)(a1 + (v41 + v38 + 2)) = BYTE1(v43) ^ 0x8A;
  *(unsigned char *)(a1 + (v41 + v38 + 3)) = v43 ^ 0x46;
  BOOL v44 = v41 + 1862404154 < (a37 - 1638202480);
  if (v41 + 1862404154 < v37 != a37 - 1638202480 < v37) {
    BOOL v44 = a37 - 1638202480 < v37;
  }
  return (*(uint64_t (**)(void))(v42 + 8 * ((v44 * v40) ^ v39)))();
}

uint64_t sub_1BCAF3ACC@<X0>(uint64_t a1@<X5>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 + (v3 + v7)) = *(unsigned char *)(v4 + a3 + a1);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 + v3 + 1) < 0x40) * a2) ^ v6 ^ 0x48A)))();
}

uint64_t sub_1BCAF3B18(void *a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((v2 ^ 0x7E) + 1793 + (((v2 ^ 0x7E) + 1660681295) & 0x9D0403FE) - 2389)
                                     * (*(_DWORD *)(*a1 + v4) != v3)) ^ v2 ^ 0x7E)))();
}

uint64_t sub_1BCAF3B64(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F16FA490
                                            - 4
                                            + 8
                                            * ((981 * ((*(_DWORD *)(a2 + 4) - 1854503558) < 0x15)) ^ 0xB4u)))(4294925278);
}

void sub_1BCAF3BAC()
{
  _DWORD *v0 = -984936812;
  JUMPOUT(0x1BCAF3BB8);
}

uint64_t sub_1BCAF3BF4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2020
                                * (*(_DWORD *)(v1
                                             + 48 * (int)((v0 ^ 0xAF3EBD75 ^ (v0 + 2133851159) & 0xA5F5BD73) + v3)
                                             + 36) != v3)) ^ v0)))();
}

uint64_t sub_1BCAF3C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v9 = v7 - 618;
  BOOL v10 = LODWORD(STACK[0x4A4]) != (((v9 ^ a7) + 137) ^ 0x6E89786B);
  return (*(uint64_t (**)(void))(v8 + 8 * (((2 * v10) | (16 * v10)) ^ v9)))();
}

uint64_t sub_1BCAF3CCC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a5 - 406) ^ (a5 + 650) ^ 0x782) * (v5 == a4)) ^ (a5 - 213))))();
}

uint64_t sub_1BCAF3D04@<X0>(uint64_t a1@<X8>)
{
  return sub_1BCAF3D5C(0x98172F24CDC84A86, v1 - 0x7EC954F575262799, a1 - 0x7EC954F575262799, 1903, 0xF7ECFFFC7F77B6FBLL, 4277104118, 0x6FFBD0DFB2BFFD3DLL, 99);
}

uint64_t sub_1BCAF3D5C(int a1, void *a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v20 = v19 > v13;
  uint64_t v21 = 4 * (v17 + v14);
  int v22 = a1 + v8 + (*(_DWORD *)(*a2 + v21) ^ (v16 + (v11 ^ a4) - 1613)) + 321;
  *(_DWORD *)(*a3 + v21) = v22 + v16 - (v18 & (2 * v22));
  int v23 = v10 + v17 + 752;
  LODWORD(v21) = v20 ^ (v23 < v9);
  BOOL v24 = v23 < v12;
  if (!v21) {
    BOOL v20 = v24;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((!v20 * a8) ^ v11)))();
}

uint64_t sub_1BCAF3DF4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3760 * (*(void *)(qword_1F16FA0C0 - 4) == 0)) ^ v0)))();
}

uint64_t sub_1BCAF3E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v66 = STACK[0x520];
  LODWORD(STACK[0x520]) += 64;
  unsigned int v67 = LODWORD(STACK[0x644]) + 1953615228;
  BOOL v68 = v66 + 370019749 > v67;
  if ((v66 + 370019749) < 0x85E555FC != v67 < (a65 & 0x425EFB6D ^ 0x371u) - 2048567864) {
    BOOL v68 = (v66 + 370019749) < 0x85E555FC;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65
                                                                                + 8 * ((22 * v68) ^ a65 & 0x425EFB6D)))(a1, a2, a3, a4, 889516850);
}

void sub_1BCAF3E38()
{
  int v2 = *(unsigned __int8 *)(v0 - 0x781B11C067843F3ALL) ^ 0x5F;
  if (v2 == 1)
  {
    unsigned int v8 = *(_DWORD *)(v0 - 0x781B11C067843F56);
    int v9 = STACK[0x408] + 990;
    *(unsigned char *)(v0 - 0x781B11C067843F62) = (8 * v8) ^ 8;
    int v4 = v9 | 0x38;
    *(unsigned char *)(v0 - 0x781B11C067843F61) = (v8 >> 5) ^ 0x2F;
    *(unsigned char *)(v0 - 0x781B11C067843F60) = v4 ^ (v8 >> 13) ^ 0x89;
    *(unsigned char *)(v0 - 0x781B11C067843F5FLL) = (v8 >> 21) ^ 0x81;
    unsigned int v10 = *(_DWORD *)(v0 - 0x781B11C067843F5ALL);
    HIDWORD(v11) = v10 ^ 0x1B;
    LODWORD(v11) = v8 ^ 0x20000000;
    *(unsigned char *)(v0 - 0x781B11C067843F5ELL) = (v11 >> 29) ^ 0x80;
    *(unsigned char *)(v0 - 0x781B11C067843F5DLL) = (v10 >> 5) ^ 0xD4;
    *(unsigned char *)(v0 - 0x781B11C067843F5CLL) = (v10 >> 13) ^ 0xA0;
    unsigned int v7 = (v10 >> 21) ^ 0x5A;
  }
  else
  {
    unint64_t v3 = STACK[0x408];
    if (v2 != 2)
    {
LABEL_6:
      STACK[0x4B8] = *(void *)(v1 + 8 * ((int)v3 - 600));
      JUMPOUT(0x1BCAF33C4);
    }
    unsigned int v7 = *(_DWORD *)(v0 - 0x781B11C067843F5ALL);
    int v4 = (STACK[0x408] + 964) | 0x52;
    *(unsigned char *)(v0 - 0x781B11C067843F62) = (((STACK[0x408] - 60) | 0x52) - 32) ^ (v7 >> 21);
    *(unsigned char *)(v0 - 0x781B11C067843F61) = (v7 >> 13) ^ 0xA0;
    *(unsigned char *)(v0 - 0x781B11C067843F60) = (v7 >> 5) ^ 0xD4;
    unsigned int v5 = *(_DWORD *)(v0 - 0x781B11C067843F56);
    HIDWORD(v6) = v7 ^ 0x1B;
    LODWORD(v6) = v5 ^ 0x20000000;
    *(unsigned char *)(v0 - 0x781B11C067843F5FLL) = (v6 >> 29) ^ 0x80;
    *(unsigned char *)(v0 - 0x781B11C067843F5ELL) = (v5 >> 21) ^ 0x81;
    *(unsigned char *)(v0 - 0x781B11C067843F5DLL) = (v5 >> 13) ^ 0xF3;
    LOBYTE(v7) = (8 * v5) ^ 8;
    *(unsigned char *)(v0 - 0x781B11C067843F5CLL) = (v5 >> 5) ^ 0x2F;
  }
  LODWORD(v3) = 12 * (v4 ^ 0x649);
  *(unsigned char *)(v0 - 0x781B11C067843F5BLL) = v7;
  goto LABEL_6;
}

void sub_1BCAF40D4()
{
}

uint64_t sub_1BCAF40E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8
                                           * ((((15 * (((a6 + 1743826051) | 0x651) ^ 0x676)) ^ 0x21F) * (v6 > 0x1F)) ^ ((a6 + 1743826051) | 0x651))))(0);
}

void sub_1BCAF4134()
{
}

void sub_1BCAF41A0()
{
  STACK[0x488] = *(void *)(v0 + 8 * (int)(STACK[0x408] - 605));
  JUMPOUT(0x1BCAD6D3CLL);
}

uint64_t sub_1BCAF41C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, char a17)
{
  a17 = 119 - -85 * ((~&a16 & 0x5E | &a16 & 0xA1) ^ 8);
  a16 = (v17 + 16) ^ (3804331 * ((~&a16 & 0x2232EA5E | &a16 & 0xDDCD15A1) ^ 0xD8AC1908));
  (*(void (**)(unsigned int *))(v18 + 8 * (v17 + 820)))(&a16);
  return sub_1BCAEF490();
}

uint64_t sub_1BCAF4238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  BOOL v58 = v54 != a7 || a53 != a6;
  return (*(uint64_t (**)(void))(v55 + 8 * ((v58 * (a8 + v53 + (((v53 + 1150) | 0x2E) ^ (v56 + 1313)) - 387)) ^ v53)))();
}

uint64_t sub_1BCAF4284(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == ((v3 + 23) ^ a3)) * (v3 + 886)) ^ v3)))();
}

void sub_1BCAF42AC(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 24) - 460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86);
  uint64_t v3 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 - 0x7EC954F57526279DLL) - 874675926 >= 0) {
    unsigned int v4 = *(_DWORD *)(*(void *)a1 - 0x7EC954F57526279DLL) - 874675926;
  }
  else {
    unsigned int v4 = 874675926 - *(_DWORD *)(*(void *)a1 - 0x7EC954F57526279DLL);
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v2 - 0x7EC954F57526279DLL) - 874675926 >= 0) {
    unsigned int v5 = *(_DWORD *)(v2 - 0x7EC954F57526279DLL) - 874675926;
  }
  else {
    unsigned int v5 = 874675926 - *(_DWORD *)(v2 - 0x7EC954F57526279DLL);
  }
  unsigned int v8 = v1 + 535753261 * (((&v8 | 0xD1164399) - (&v8 & 0xD1164399)) ^ 0xDBE24DB6) - 471;
  uint64_t v9 = v3;
  unsigned int v6 = (char *)*(&off_1F16F9FD0 + (v1 ^ 0x5F7)) - 4;
  (*(void (**)(unsigned int *))&v6[8 * (v1 ^ 0xD3B)])(&v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1BCAF4454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 136) = (v14 - 102) ^ (1374699841
                                        * ((((v18 - 136) | 0x74A96C87) - ((v18 - 136) & 0x74A96C87)) ^ 0x195D748E));
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v14 + 1503)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((207
                                              * (*(_DWORD *)(v18 - 132) > ((v14 - 1060153004) & 0x3F30A5F3 ^ (v15 + 399)))) ^ v14)))(v19);
}

uint64_t sub_1BCAF4500(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 + ((((v7 - 1666) | a3) + v6) & a1) == 1924) * a2) ^ ((v7 - 1666) | a3))))();
}

uint64_t sub_1BCAF4560@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x4A4]) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((46 * (34 * (((v1 - 638) | 0x281) ^ 0x295u) + a1 < 4)) ^ v1)))();
}

void sub_1BCAF45AC()
{
}

void sub_1BCAF45B4(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF45F8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v7 = v5 - 2143271935 + v4;
  uint64_t v8 = v1 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((v2 & 0xFFFFFFE0) == 32) ^ (5 * ((v3 + 19) & 0x74 ^ 0x28) + 1)) & 1 | (2 * ((((v2 & 0xFFFFFFE0) == 32) ^ (5 * ((v3 + 19) & 0x74 ^ 0x28) + 1)) & 1))) ^ (((v3 - 1636550125) & 0x618BC274) - 259))))();
}

uint64_t sub_1BCAF467C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(void *)(*(void *)(v2 + 8 * (a1 - 944)) - 4) != 0)
                                     * (((a1 + 1880561677) & 0x8FE8E7FE) - 966)) ^ a1)))();
}

void sub_1BCAF46C4(uint64_t a1)
{
  int v1 = 235795823 * (((a1 | 0xDF39865F) - a1 + (a1 & 0x20C679A0)) ^ 0x4B94CF06);
  int v2 = *(_DWORD *)(a1 + 24) - v1;
  int v3 = *(_DWORD *)(a1 + 8) + v1;
  BOOL v5 = (~v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 402653184;
  __asm { BRAA            X11, X17 }
}

void sub_1BCAF47B8(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x7EC954F575262799) + 4 * (v3 + v5 + v2 + 207 - 1598)) = v1
                                                                                          - ((2 * v1 - 1159144322) & v4)
                                                                                          + 1261415020;
  *(_DWORD *)(a1 - 0x7EC954F57526279DLL) = (((v5 + 1 + v3) * (v6 - 869762700)) ^ 0xFFE37EFF)
                                         + 876543959
                                         + ((2 * (v5 + 1 + v3) * (v6 - 869762700)) & 0xFFC6FDFE);
}

void sub_1BCAF4894(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x7EC954F575262799) = (v3 - 699255550) ^ (v2 - 1142355399);
  *(_DWORD *)(v1 - 0x7EC954F57526279DLL) = a1 + 1;
}

uint64_t sub_1BCAF48EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * (int)((((unint64_t)(&a25 + a14 + (v26 + v25 + 1193)) < (v27 ^ 0x4E9uLL))
                                     * (((v27 - 9917711) & 0x14BF) - 1187)) ^ v27)))();
}

void sub_1BCAF4944(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a4 = v6;
  a5 = v7;
  a3 = v7;
  a6 = v8
     + 460628867 * ((261243769 - (&a3 | 0xF924379) + (&a3 | 0xF06DBC86)) ^ 0xBCFB3EFB)
     + 934;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 + 1645)))(&a3);
  JUMPOUT(0x1BCAC79BCLL);
}

uint64_t sub_1BCAF49B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((382 * (v7 ^ 0x62A) - 1844) | 0x598) - 1402) * (v8 == a7)) ^ v7)))();
}

uint64_t sub_1BCAF4A00(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(unsigned __int8 *)(v5 + a1) == (((2 * v4) ^ 0x2B4) & 0xFE ^ a4)) * (v4 + 1278)) ^ v4)))();
}

uint64_t sub_1BCAF4A38()
{
  uint64_t v4 = v0;
  unint64_t v5 = (((v3 ^ 0x6A9u) - 1409) ^ (unint64_t)(v1 + 300)) + v0;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (v5 - v4 + 1316140811 < 8)) ^ v3 ^ 0x476)))();
}

uint64_t sub_1BCAF4A9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v12 = *v9 != ((v7 + 1223) ^ (a4 + 939)) || v8 != a7 + v7 - 232;
  return (*(uint64_t (**)(void))(v10 + 8 * ((1072 * v12) ^ v7)))();
}

uint64_t sub_1BCAF4AE8@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v10 = (v6 + a3);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a4 + (v10 & 0xF)) ^ (*(unsigned char *)(v8 + v10) - 106) ^ *(unsigned char *)(v4 + (v10 & 0xF)) ^ *(unsigned char *)((v10 & 0xF) + v5 + 2) ^ ((v10 & 0xF) * (v7 - 102));
  return (*(uint64_t (**)(void))(v9 + 8 * ((43 * (v6 - 1 == a2)) ^ v7)))();
}

uint64_t sub_1BCAF4B50(int a1, int a2, int a3)
{
  int v5 = v3 + 498;
  int v6 = (v3 - 461) | 0x603;
  int v7 = (v3 - 576) | 0x220;
  int v8 = a2 + a1 - 1037752191;
  if ((v8 + 1) > 0x40) {
    int v9 = v8 + 1;
  }
  else {
    int v9 = 64;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (v5 ^ ((a3 + v9 <= (v7 ^ v8 ^ (v6 - 2201))) << 6))))();
}

uint64_t sub_1BCAF4BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v67 = STACK[0x570];
  int v68 = *(unsigned __int8 *)(STACK[0x570] - 0x781B11C067843F3ALL) ^ 0x5F;
  if (v68 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * (int)((55 * (*(_DWORD *)(v67 - 0x781B11C067843F3ELL) != ((STACK[0x408] - 580) | 0x145) + 1109408728)) ^ (STACK[0x408] + 365))))(a1, 67, a3, 115, 1199, 181, 190, 138);
  }
  unint64_t v69 = STACK[0x408];
  if (v68 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * (int)((STACK[0x408] + 1269) | (4 * (*(_DWORD *)(v67 - 0x781B11C067843F3ELL) == a58 + 1109408232)))))(a1, 67, a3, 115, 1199, 181, 190, 138);
  }
  STACK[0x550] = 91;
  *(unsigned char *)(v67 - 0x781B11C067843F3FLL) = ((a66 + 63) ^ 0xBA) * (a66 + 80);
  return (*(uint64_t (**)(void))(v66 + 8 * (int)((67 * (STACK[0x550] == 0)) ^ ((v69 + 560) | 8))))();
}

void sub_1BCAF4D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,_DWORD *a38)
{
  *a38 ^= a37;
  JUMPOUT(0x1BCAEF228);
}

uint64_t sub_1BCAF4DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  *(&a35 + v35 - 1540596941) = 0x80;
  return (*(uint64_t (**)(void))(v37 + 8 * ((620 * ((unint64_t)(v35 - 1540596940) < 0x40)) ^ (v36 + v38))))();
}

uint64_t sub_1BCAF4DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((93 * ((a5 + 1 + v7) > 0x4F)) ^ v6)))(v5, a4);
}

uint64_t sub_1BCAF4EA0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((19 * (STACK[0x540] == 0)) ^ (v0 + 897))))();
}

uint64_t sub_1BCAF4ECC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((4 * (v0 != v2 + v1 - 795202287)) | (32 * (v0 != v2 + v1 - 795202287))) ^ v1)))();
}

uint64_t sub_1BCAF4F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,_DWORD *a29)
{
  *a28 = 196928542;
  uint64_t v33 = (*a29 - 697725229);
  uint64_t v34 = 1224239923 * ((v32 - 144) ^ 0x285AB569F2B3FDD7);
  *(_DWORD *)(v32 - 140) = ((v29 + 754525360) ^ 0x71) + v34;
  *(_DWORD *)(v32 - 120) = v34 + v29 - 156348916;
  *(_DWORD *)(v32 - 116) = 1 - v34;
  *(void *)(v32 - 136) = v33 ^ v34;
  *(void *)(v32 - 128) = v34 ^ 0xEDA3F85ALL;
  *(_DWORD *)(v32 - 112) = ((v29 + 754525360) ^ 0x15) + v34;
  *(_DWORD *)(v32 - 108) = v29 + 754525360 + v34;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v31 + v29 - 1183 + 737)))(v32 - 144);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * *(int *)(v32 - 144)))(v35);
}

uint64_t sub_1BCAF4FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v26 - 112) = v24;
  *(void *)(v26 - 104) = a21;
  *(_DWORD *)(v26 - 120) = (v23 - 380) ^ (((((2 * (v26 - 120)) | 0x313D44FC) - (v26 - 120) - 413049470) ^ 0x756ABA77)
                                        * v25);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v23 ^ 0xBC9)))(v26 - 120);
  BOOL v28 = *(_DWORD *)(v26 - 116) <= (((v23 ^ 0x12) - 315) ^ (v21 + 562));
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((2 * v28) | (16 * v28)) ^ v23)))(v27);
}

uint64_t sub_1BCAF5080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (int)(((((a9 == 0) ^ (v14 + 124)) & 1) * ((v14 + 2076425088) & 0x843C3FFF ^ 0xB6)) ^ (v14 - 1512))))(v16 + 0x51D68756BB883E12, a2, a3, a4, a5, a6, a7, a8, a10, a1, a12, a13, a14, v16 + 0x51D68756BB884142, v16 + 0x51D68756BB884032);
}

uint64_t sub_1BCAF51AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BCAF51D0(a1, a2, a3, a4, a5, 218, 230);
}

uint64_t sub_1BCAF51D0@<X0>(int a1@<W1>, unint64_t a2@<X5>, int a3@<W6>, uint64_t a4@<X7>, int a5@<W8>)
{
  *(_OWORD *)(a4 + (a5 + a1 + v6)) = *(_OWORD *)(v9 + v6);
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v5 - 162) ^ a2) + v6 == v7) * a3) ^ v5)))();
}

uint64_t sub_1BCAF5208(int a1)
{
  BOOL v6 = (v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1))) + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v2) == v2 + a1 - 151;
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * v6) | (8 * v6)) ^ v4)))();
}

void sub_1BCAF5254()
{
}

uint64_t sub_1BCAF5264@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W4>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v8 = (a3 - 577) | 8;
  uint64_t v9 = a4 + a1 + a2 + ((v8 + 233827924) & 0xF2100F7F);
  long long v10 = *(_OWORD *)(a5 + v9 - 15);
  long long v11 = *(_OWORD *)(a5 + v9 - 31);
  uint64_t v12 = v5 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v7 + 8 * ((532 * ((v6 & 0xFFFFFFE0) == 32)) ^ v8)))();
}

void sub_1BCAF52D0()
{
}

uint64_t sub_1BCAF52E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a23;
  *(_DWORD *)(v28 - 120) = v24
                         + 805
                         + 535753261
                         * (((((v28 - 144) | 0x4194C184) ^ 0xFFFFFFFE) - (~(v28 - 144) | 0xBE6B3E7B)) ^ 0xB49F3054);
  *(void *)(v28 - 144) = a22;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0xBA9)))(v28 - 144);
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 144) = a22;
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a23;
  *(_DWORD *)(v28 - 120) = v24 + 805 + 535753261 * ((v28 - 144) ^ 0xAF40E2F);
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0xBA9)))(v28 - 144);
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a23;
  *(void *)(v28 - 144) = a22;
  *(void *)(v28 - 112) = a24;
  *(_DWORD *)(v28 - 120) = v24
                         + 805
                         + 535753261
                         * ((((2 * ((v28 - 144) ^ 0xD37F90DB)) | 0xFC06ECFC) - ((v28 - 144) ^ 0xD37F90DB) + 33327490) ^ 0x2788E88A);
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0xBA9)))(v28 - 144);
  int v29 = 1225351577 * ((((v28 - 144) | 0xAB4F099) + (~(v28 - 144) | 0xF54B0F66)) ^ 0x744B6AAA);
  *(void *)(v28 - 136) = v26;
  *(_DWORD *)(v28 - 128) = (((15 * (v24 ^ 0x386)) ^ 0xCFACFB78) + v25) ^ v29;
  *(_DWORD *)(v28 - 140) = (v24 - 825) ^ v29;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0xBD6)))(v28 - 144);
  BOOL v30 = *(_DWORD *)(v28 - 144) == 58487721;
  int v31 = 1225351577 * ((v28 + 1401864774 - 2 * ((v28 - 144) & 0x538EC2D6)) ^ 0x2D7158E4);
  *(void *)(v28 - 136) = v26;
  *(_DWORD *)(v28 - 140) = (v24 - 825) ^ v31;
  *(_DWORD *)(v28 - 128) = (v25 - 810746376 + (v24 ^ 0x74E) - 1191) ^ v31;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v24 ^ 0xBD6)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((7 * v30) ^ v24)))(v32);
}

void sub_1BCAF5538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + v3) = 874675926;
  JUMPOUT(0x1BCAC7898);
}

uint64_t sub_1BCAF5548@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  int v12 = (v10 + a1) & a2;
  *(_DWORD *)(*v8 + 4 * (a5 + v6 + v12 - 1024)) = a3;
  return (*(uint64_t (**)(void))(v5 + 8 * (v12 | (2 * (v9 & ~((v12 + 22) ^ (v11 == ((v12 + 22) ^ a4) + v7)))))))();
}

uint64_t sub_1BCAF55A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  BOOL v10 = v8 + ((a8 + 54) ^ (a2 + 54)) < ((a8 + 1811) ^ 0xFFFFF827);
  return (*(uint64_t (**)(void))(v9 + 8 * (((4 * v10) | (32 * v10)) ^ a8)))();
}

uint64_t sub_1BCAF55E4(uint64_t a1, uint64_t a2)
{
  _DWORD *v5 = v5[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * (((v4 - 1 != (((v2 ^ 0xBC) + 946688301) & 0xC792AE67 ^ 0x72A6E04F))
                                                                * v3) ^ v2 ^ 0xBC)))(a1, a2, 2271854500);
}

void sub_1BCAF5648()
{
}

void sub_1BCAF56E0()
{
  LODWORD(STACK[0x368]) = 0;
  STACK[0x370] = 0;
  JUMPOUT(0x1BCAF5714);
}

void sub_1BCAF5860()
{
}

uint64_t sub_1BCAF59C8()
{
  int v5 = *(_DWORD *)(*v1 + 4 * v4) == v0 + 213;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v5) | (v5 << 6)) ^ v3)))();
}

uint64_t sub_1BCAF59FC(_DWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F16FA490
                              - 4
                              + 8
                              * ((1547 * ((*a1 + *(_DWORD *)(a2 + 4) - 2096695028) < 0xC9)) ^ 0x270u)))();
}

void sub_1BCAF5A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + v4) = v3;
  JUMPOUT(0x1BCAF1A08);
}

uint64_t sub_1BCAF5A50(uint64_t a1)
{
  int v1 = 1225351577 * ((-1431559688 - (a1 ^ 0x3E1E26E0 | 0xAAAC21F8) + (a1 ^ 0x3E1E26E0 | 0x5553DE07)) ^ 0x15B262D5);
  int v2 = *(_DWORD *)(a1 + 4) ^ v1;
  int v3 = *(_DWORD *)(a1 + 16) ^ v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x7EC954F57526279DLL);
  unsigned int v6 = v4 - 874675926;
  BOOL v5 = v4 - 874675926 < 0;
  unsigned int v7 = 874675926 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + (v2 ^ 0x28))
                              + 8 * ((1336 * (v3 >> 5 < v7)) ^ v2)
                              - 4))();
}

uint64_t sub_1BCAF5B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,int a21)
{
  int v29 = &a21 + 6 * v22;
  v29[2] = v26;
  v29[3] = v28;
  *((void *)v29 + 2) = v27;
  v29[6] = a19;
  a21 = ((a9 + 1565220714) & 0xA2B4A22F ^ 0x222) + v21;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((1345 * (*(_DWORD *)(v24 + 48 * v23 + 32) + 169542624 < a8)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

void sub_1BCAF5BA8()
{
}

uint64_t sub_1BCAF5BB4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((453
                                * ((v3 & (2 * (*(unsigned __int8 *)(v5 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v5 + 3) - 134) ^ v4) != (((a3 ^ 0x1C5) - 140) ^ (v4 + 107)))) ^ a3)))();
}

uint64_t sub_1BCAF5C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52
                                                              + 8
                                                              * (int)((114
                                                                     * ((((a52 ^ 0x267) + 46) ^ 0x48549F7C) == 1213505373)) ^ (STACK[0x408] + 566))))(a1, a2, 597);
}

void sub_1BCAF5C6C()
{
}

void sub_1BCAF5D1C()
{
}

uint64_t sub_1BCAF5D40(uint64_t result)
{
  uint64_t v1 = 235795823 * ((((2 * result) | 0xAE1C50A9AAB8544) - result - 0x570E2854D55C2A2) ^ 0xDC0587BD9F88BFBLL);
  int v2 = *(_DWORD *)(result + 40) - v1;
  uint64_t v3 = *(void *)(result + 16) - v1;
  int v4 = *(_DWORD *)(result + 4) ^ v1;
  uint64_t v5 = *(void *)(result + 32) ^ v1;
  int v6 = *(_DWORD *)(result + 24) - v1;
  int v7 = *(_DWORD *)(result + 28) ^ v1;
  BOOL v8 = v5 < v3;
  BOOL v9 = v5 < (unint64_t)v3;
  int v10 = v8;
  if (v7) {
    int v11 = v10;
  }
  else {
    int v11 = v9;
  }
  if (v11) {
    int v12 = v4;
  }
  else {
    int v12 = v2;
  }
  *(_DWORD *)uint64_t result = v12 ^ v6;
  return result;
}

void sub_1BCAF5DE0(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1BCAF5E88()
{
}

uint64_t sub_1BCAF5E94@<X0>(void *a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  *(void *)(*a1 - 0x9466003216229CDLL) = v6 + v5 + 8;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((327 * (*v4 == ((((a2 + 887) ^ 0x230) + 1069174833) & 0xC045ABFF ^ (v3 + 551)))) | (a2 + 887) ^ 0x230)))();
}

void sub_1BCAF5F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  *uint64_t v34 = -1011556398;
  (*(void (**)(uint64_t))(v33 + 8 * (v32 + 2093)))(a32);
  JUMPOUT(0x1BCAF5F44);
}

uint64_t sub_1BCAF5FBC@<X0>(unsigned int a1@<W6>, unint64_t a2@<X7>, uint64_t a3@<X8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  uint64_t v16 = 4 * a3;
  uint64_t v17 = v12 + 4 * a3;
  unint64_t v18 = v9 ^ a1 ^ a2 | a3;
  uint64_t v19 = a3 + 4;
  LODWORD(v18) = *(_DWORD *)(v12 + 4 * v18);
  a5.i32[0] = v18;
  a5.i32[1] = *(_DWORD *)(v12 + (v16 | 8));
  a5.i32[2] = *(_DWORD *)(v12 + (v16 | 0xC));
  int8x16_t v20 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v21 = a5;
  v21.i32[3] = *(_DWORD *)(v12 + 4 * v19);
  int32x4_t v22 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v21, a7), vandq_s8(v20, a6)), 1uLL), a8);
  v23.i32[0] = *(_DWORD *)(v13 + 4 * (v18 & 1));
  v23.i32[1] = *(_DWORD *)(v13 + 4 * (*(_DWORD *)(v12 + (v16 | 8)) & 1));
  v23.i32[2] = *(_DWORD *)(v13 + 4 * (*(_DWORD *)(v12 + (v16 | 0xC)) & 1));
  v23.i32[3] = *(_DWORD *)(v13 + 4 * (v21.i8[12] & 1));
  *(int8x16_t *)uint64_t v17 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v17 + 1588), v23), v15), (int8x16_t)vaddq_s32(vsubq_s32(v22, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v22, v22), a9)), v14));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v19 == 224) * v10) ^ v9)))();
}

uint64_t sub_1BCAF608C@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a2 == v2) ^ (a1 - 125)) & 1) * (a1 - 1048)) ^ a1)))();
}

uint64_t sub_1BCAF60D8@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_DWORD *a22,_DWORD *a23)
{
  *a22 = 196928542;
  uint64_t v25 = (*a23 + 931602370);
  *(_DWORD *)(v24 - 140) = ((a2 + 46419240) ^ 0x6B) + a8;
  *(_DWORD *)(v24 - 120) = a8 + a2 - 156347733;
  *(_DWORD *)(v24 - 116) = 1 - a8;
  *(void *)(v24 - 136) = v25 ^ a8;
  *(void *)(v24 - 128) = a7;
  *(_DWORD *)(v24 - 112) = ((a2 + 46419240) ^ 0xEB) + a8;
  *(_DWORD *)(v24 - 108) = a2 + 46419240 + a8;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (a2 ^ (a1 + 2034))))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * *(int *)(v24 - 144)))(v26);
}

uint64_t sub_1BCAF6198()
{
  int v3 = v1 - ((2 * v1 + 49089268) & 0xEE1A60A) + 417814655;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((v2 + 1819) ^ (37
                                              * (((v2 + 247569610 + ((v2 + 1775312708) & 0x962EE29B)) ^ (2 * v3) & 0xFFC3F8BE)
                                               + (v3 ^ 0x78912F5A)
                                               + 1929326590 != 1927359581)))))();
}

void sub_1BCAF62D0()
{
}

void sub_1BCAF6330()
{
  LODWORD(STACK[0x580]) = v0;
  JUMPOUT(0x1BCAE2640);
}

uint64_t sub_1BCAF634C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + (v3 + a1 - v5)) = *(void *)(v2 - 7 + (v3 + a1 - v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1577 * (v5 + ((v6 + 506) | 0x80) - 746 == (v4 & 0xFFFFFFF8))) ^ v6)))();
}

uint64_t sub_1BCAF639C()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v0 = (uint64_t *)*(&off_1F16F9FD0
                  + (*((unsigned char *)off_1F16FA130
                     + (*((unsigned __int8 *)off_1F16FA268
                        + ((qword_1E9FB7E30 + dword_1E9FB8A00) ^ 0x74u)
                        - 12) ^ 0x82u)
                     - 4) ^ (qword_1E9FB7E30 + dword_1E9FB8A00) ^ 0x74u)
                  - 91);
  int v1 = (uint64_t *)*(&off_1F16F9FD0
                  + (*((unsigned char *)off_1F16FA1A0
                     + ((*off_1F16FA008)[(qword_1E9FB7E30 - *v0) ^ 0x74] ^ 0x4Fu)
                     - 8) ^ (qword_1E9FB7E30 - *v0) ^ 0x74u)
                  - 138);
  unint64_t v2 = (*v1 + *v0) ^ (unint64_t)&v6;
  uint64_t v3 = 267049729 * v2 - 0x733E1D47A735574;
  uint64_t v4 = 267049729 * (v2 ^ 0x733E1D47A735574);
  uint64_t *v0 = v3;
  *int v1 = v4;
  uint64_t v7 = (char *)*(&off_1F16F9FD0
               + (*((unsigned char *)off_1F16FA508
                  + (*((unsigned __int8 *)off_1F16FA1F0
                     + (*(_DWORD *)v0 ^ 0x74u ^ v4)
                     - 12) ^ 0x14u)
                  - 4) ^ *(_DWORD *)v0 ^ 0x74u ^ v4)
               - 58)
     - 4;
  unsigned int v8 = 1281
     - 535753261
     * (((&v7 | 0x19ACA3E5) - &v7 + (&v7 & 0xE6535C18)) ^ 0x1358ADCA);
  LOBYTE(v0) = *(_DWORD *)v0 ^ 0x74 ^ *(_DWORD *)v1;
  return (*(uint64_t (**)(char **))((char *)*(&off_1F16F9FD0
                                                      + ((qword_1E9FB7E30 + dword_1E9FB8A00) ^ 0x74u ^ byte_1BCB19710[byte_1BCB163A0[(qword_1E9FB7E30 + dword_1E9FB8A00) ^ 0x74] ^ 0xF8])
                                                      + 75)
                                            + 8
                                            * (*((unsigned char *)off_1F16FA448
                                                                              + ~*((unsigned char *)off_1F16FA220
                                                                                                  + v0
                                                                                                  - 4)) ^ v0)
                                            + 15476))(&v7);
}

void sub_1BCAF65D8()
{
}

uint64_t sub_1BCAF66AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((((v24 - 141) ^ (v24 - 233))
                                              * (*(_DWORD *)(v26 - 124) == *(_DWORD *)(v26 - 128))) ^ v24)))(a24);
}

void sub_1BCAF66EC(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_1F16F9FD0
                + ((qword_1E9FB7E30 - dword_1E9FB8840) ^ 0x74u ^ byte_1BCB165A0[~byte_1BCB12350[(qword_1E9FB7E30 - dword_1E9FB8840) ^ 0x74]])
                - 71);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t *)*(&off_1F16F9FD0
                  + (v3 ^ qword_1E9FB7E30 ^ 0x74 ^ byte_1BCB19710[byte_1BCB163A0[(v3 ^ qword_1E9FB7E30 ^ 0x74)] ^ 0xB4])
                  + 24);
  uint64_t v5 = v3 - (void)&v9 + *v4;
  uint64_t v6 = 267049729 * v5 - 0x733E1D47A735574;
  uint64_t v7 = 267049729 * (v5 ^ 0x733E1D47A735574);
  *(void *)(v2 - 4) = v6;
  *uint64_t v4 = v7;
  LODWORD(v4) = 267049729 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x7A735574);
  unsigned int v8 = (char *)*(&off_1F16F9FD0
               + ((qword_1E9FB7E30 - dword_1E9FB8840) ^ 0x74u ^ byte_1BCB166A0[byte_1BCB12450[(qword_1E9FB7E30 - dword_1E9FB8840) ^ 0x74] ^ 0xC8])
               + 40)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (*((unsigned char *)off_1F16FA508
                                                                       + (*((unsigned __int8 *)off_1F16FA1F0
                                                                          + v4
                                                                          - 12) ^ 0x29u)
                                                                       - 4) ^ v4)
                                                   + 15888])((char *)*(&off_1F16F9FD0+ (*((unsigned char *)off_1F16FA1A0+ ((*off_1F16FA008)[v4] ^ 0xF3u)- 8) ^ v4)- 123)- 4, sub_1BCAF639C);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF68DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((((v6 == 63) ^ (v5 + 76)) & 1 | (4 * (((v6 == 63) ^ (v5 + 76)) & 1))) ^ v5)))(a1, a2, a3, a4, a5, 2577394902);
}

uint64_t sub_1BCAF6924(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((a1 + v2 + 110109194) < 8) ^ (v1 + 33)) & 1)
                                * (((4 * v1) ^ 0x3C4) - 1263)) | v1)))();
}

void sub_1BCAF69B4()
{
  STACK[0x4B8] = *(void *)(v1 + 8 * v0);
  JUMPOUT(0x1BCAF33C4);
}

uint64_t sub_1BCAF69CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int *a29,uint64_t a30,uint64_t a31,int a32,uint64_t a33,uint64_t a34,int *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  int v50 = (v47 - 2033987976) | 0xA5;
  if (v44 >= v45) {
    int v51 = (v50 ^ 0x2B6) + *a29;
  }
  else {
    int v51 = v48;
  }
  *a29 = v51;
  int v52 = (((v43 >> 11) ^ 0x8769B) + 1135927250 - 2 * (((v43 >> 11) ^ 0x8769B) & 0x14DFD6 ^ (v43 >> 11) & 4)) ^ v43;
  unsigned int v53 = (((v52 << 7) & 0x9D2C5680 ^ v52) << 15) & 0xEFC60000 ^ (v52 << 7) & 0x9D2C5680 ^ v52;
  unsigned int v54 = v53 ^ 0x8943BDBA ^ (v53 >> 18);
  uint64_t v55 = &a43 + (a32 - 1295774272);
  unsigned int v56 = -1567983505 * ((*(_DWORD *)(*v49 + (*a35 & 0xFFFFFFFFA233152CLL)) ^ v55) & 0x7FFFFFFF);
  unint64_t v57 = (v56 ^ HIWORD(v56)) * (v50 ^ 0xA28A7AD8);
  char v58 = *((unsigned char *)*(&off_1F16F9FD0 + (v50 ^ 0x2E3)) + (v57 >> 24) - 8);
  char v59 = *((unsigned char *)*(&off_1F16F9FD0 + v50 - 542) + (v57 >> 24) - 4) ^ *((unsigned char *)*(&off_1F16F9FD0 + v50 - 565)
                                                                      + (v57 >> 24)
                                                                      + 5);
  LOBYTE(v57) = v57 ^ (-85 * BYTE3(v57));
  *uint64_t v55 = v58 ^ ((v47 + 120) | 0xA5) ^ 0x85 ^ v54 ^ 0x88 ^ v59 ^ v57;
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * ((1439
                                * (a32
                                 - (((v58 ^ ((v47 + 120) | 0xA5) ^ 0x85 ^ v54 ^ 0x88 ^ v59) ^ v57) != 0) == 1295774271)) ^ ((v47 - 2033987976) | 0xA5))))();
}

uint64_t sub_1BCAF69D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((1466 * (v36 + a4 + ((v35 - 704) | 0x1Eu) < 4)) ^ v35)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1BCAF6A10@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,int a35)
{
  int v39 = (unsigned char *)(a1 + a2 + v36);
  unsigned __int8 v40 = *v39 ^ a34 & 0xF6 ^ 0x90;
  LODWORD(v39) = ((v39[2] ^ 0x80) << 16) | ((v39[3] ^ 0x80) << 24) | v40 | ((v39[1] ^ 0x80) << 8);
  *(_DWORD *)(v37 + ((a2 + v36) & 0xFFFFFFFFFFFFFFFCLL)) = v39
                                                         + v38
                                                         - 2 * (v39 & (v38 + 2) ^ v40 & 2);
  return (*(uint64_t (**)(void))(v35 + 8 * ((1373 * ((unint64_t)(a2 + 4 + v36) < 0x40)) ^ a35)))();
}

void sub_1BCAF6AB8()
{
}

uint64_t sub_1BCAF6ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v51 = 235795823 * ((((v50 - 192) | 0x3DB5E498) - (v50 - 192) + ((v50 - 192) & 0xC24A1B60)) ^ 0xA918ADC1);
  *(void *)(v50 - 168) = a16;
  *(void *)(v50 - 160) = 0;
  *(void *)(v50 - 192) = 0;
  *(void *)(v50 - 184) = a48;
  *(void *)(v50 - 152) = STACK[0x3E0];
  *(void *)(v50 - 136) = a37;
  *(_DWORD *)(v50 - 176) = 1917787412 - v51;
  *(_DWORD *)(v50 - 172) = v51 + v48 - 417;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v48 + 789)))(v50 - 192);
  int v53 = *(_DWORD *)(v50 - 144);
  LODWORD(STACK[0x634]) = v53;
  return (*(uint64_t (**)(uint64_t))(v49
                                            + 8
                                            * ((878 * (v53 == (v48 ^ 0x3AB45260 ^ (v48 - 1698084179) & 0x6536B26D))) ^ v48)))(v52);
}

void sub_1BCAF6BD8()
{
  LODWORD(STACK[0x524]) = v0;
  STACK[0x4B8] = *(void *)(v2 + 8 * v1);
  JUMPOUT(0x1BCAEC7C0);
}

uint64_t sub_1BCAF6C24(uint64_t a1, int a2)
{
  *(unsigned char *)(v3 + v7 + v5 + v4 - 22) = v6;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((unint64_t)(v3 + v7) > 0x3F) * a2) ^ v2)))();
}

void tbttItCTp3MZ(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF6C9C@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38
                                                             + 8
                                                             * ((438
                                                               * ((v37 & 0xFFFFFFFC) == ((a2 - 1685) | 0x10) + 836639556)) ^ a2)))(&a37, a1, 3458327724);
}

uint64_t sub_1BCAF6CFC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 | (26
                                     * (((v0 - 722) ^ 0xB28D4171 ^ (((v0 - 1439) | 0x41) - 1225920165) & (2 * v1))
                                      + (v1 ^ 0xA2395A10)
                                      - 2130008 != 1532393735)))))();
}

void sub_1BCAF6D6C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1224239923 * (((a1 | 0xDD953B90) - (a1 & 0xDD953B90)) ^ 0x2F26C647);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1BCAF6E98@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + (v6 + v4 - v7)) = *(void *)(v3 - 7 + (v6 + v4 - v7));
  return (*(uint64_t (**)(void))(v2 + 8 * (a1 | (16 * (v7 + ((a1 - 781) | 4) - 156 == (v5 & 0xFFFFFFF8))))))();
}

uint64_t sub_1BCAF6EE0()
{
  uint64_t v9 = (v5 - 1405824187);
  uint64_t v10 = v9 & ((v2 + 1017) - 1420);
  *(unsigned char *)(v8 + v9) = *(unsigned char *)(*(void *)(v6 + 8 * (v2 - 362)) + v10 - 4) ^ *(unsigned char *)(v0 + v9) ^ (23 * v10) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v2 - 277)) + v10) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v2 ^ 0x1A4)) + v10 - 11);
  BOOL v11 = v3 > 0xAA130677;
  if (v11 == v5 + 35769550 < v1) {
    BOOL v11 = v5 + 35769550 < v4;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((1875 * v11) ^ v2)))();
}

uint64_t sub_1BCAF6F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, uint64_t a16, uint64_t a17)
{
  a16 = v17;
  a17 = a11;
  a14 = v20
      + 1178560073
      * (((&a14 | 0xD0FE0D10) - &a14 + (&a14 & 0x2F01F2E8)) ^ 0x6A6A7572)
      + 474;
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v19 + 8 * (v20 + 821)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a15 == v18) * (22 * (((v20 - 1166) | 0x241) ^ 0x2F9) - 552)) ^ v20)))(v21);
}

uint64_t sub_1BCAF7044@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a1 + ((v2 - 130103856) & 0x7C13DFF) + ((v2 + 966919786) | 0x44504519) - 1670)
                                * (v3 == a2)) ^ v2)))();
}

void sub_1BCAF709C()
{
}

uint64_t sub_1BCAF70A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(*(void *)(a7 + 96) + 1568) = 1;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((*(_DWORD *)(a7 + 72) == a5 + 7)
                                     * ((a3 + v7 - 921) ^ (v7 - 598939) & 0xBFAFF13F ^ 0x646)) ^ v7)))();
}

uint64_t sub_1BCAF71A0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 - 1339) ^ 0x37 ^ (a1 - 885719343) & 0xFA7A) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1BCAF71E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v52 = *(_DWORD *)(&a35 + ((v50 + v47) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v50 + v47)) = v52 ^ 0x46;
  *(unsigned char *)(a1 + (((v49 + 1983105) | 0x9600A8A) ^ 0xB389D846) + v50) = BYTE1(v52) ^ 0x8A;
  *(unsigned char *)(a1 + (v50 + v47 + 2)) = BYTE2(v52) ^ 0xDA;
  *(unsigned char *)(a1 + (v50 + v47 + 3)) = HIBYTE(v52) ^ 0xB5;
  BOOL v53 = v50 - 727832796 < (a47 - 679062692);
  if (v50 - 727832796 < v48 != a47 - 679062692 < v48) {
    BOOL v53 = a47 - 679062692 < v48;
  }
  return (*(uint64_t (**)(void))(v51 + 8 * ((1119 * v53) ^ v49)))();
}

uint64_t sub_1BCAF72B4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((54 * ((a1 - 756) ^ 0x2E9)) ^ 0x407) * (v2 != 418990867)) ^ (a1 - 756))))();
}

uint64_t sub_1BCAF731C(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((503 * (a3 + a2 + 41943298 < ((a4 - 1036859124) & 0x3DCD33E5u) - 988)) ^ a4)))();
}

uint64_t sub_1BCAF739C(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((-2 - ((a1 | 0x71A11D05) + (~a1 | 0x8E5EE2FA))) ^ 0x50985F21);
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned int v6 = v1
     - 1178560073 * ((((&v5 | 0x67694020) ^ 0xFFFFFFFE) - (~&v5 | 0x9896BFDF)) ^ 0x2202C7BD)
     - 426521615;
  uint64_t v7 = v3;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F16F9FD0 + (v1 ^ 0x196C3911)) + 8 * (v1 ^ 0x196C31F1)
                                                                                              - 4))(&v5);
}

uint64_t sub_1BCAF74B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((*(_DWORD *)(v9 + (v8 + a5) * (uint64_t)a6) != v7) * (((v6 + 142) | 0x60) - 380)) ^ v6)))();
}

uint64_t sub_1BCAF74F0(_DWORD *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  unsigned int v1 = *a1 - 1225351577 * (((a1 | 0x8B357C10) - (a1 & 0x8B357C10)) ^ 0xF5CAE622);
  uint64_t v2 = *(void *)((char *)*(&off_1F16F9FD0 + (int)(v1 - 2138963237)) - 4);
  unsigned int v4 = v1
     - 2138963237
     - 108757529 * ((((&v4 | 0x5D60ED82) ^ 0xFFFFFFFE) - (~&v4 | 0xA29F127D)) ^ 0x42037056)
     + 863;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F16F9FD0 + (int)(v1 ^ 0x7F7DFD38))
                                                   + 8 * (int)(v1 ^ 0x7F7DF5F7)
                                                   - 4))(&v4);
}

uint64_t sub_1BCAF7600()
{
  unsigned int v5 = *(unsigned __int8 *)(v3 + 2) + ((v2 - 34) ^ 0xFFFFFEB6);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1533 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

void sub_1BCAF7640(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 + 1178560073 * ((1579988138 - (a1 | 0x5E2CB4AA) + (a1 | 0xA1D34B55)) ^ 0x1B473337);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x7EC954F57526279DLL);
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned int v4 = v1 + 535753261 * (((~&v4 & 0xB6F64278) - (~&v4 | 0xB6F64279)) ^ 0xBC024C56) - 1123;
  uint64_t v3 = (char *)*(&off_1F16F9FD0 + v1 - 1891) - 4;
  (*(void (**)(unsigned int *))&v3[8 * (v1 ^ 0xFAF)])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF7798@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((3 * (v1 ^ 0x4EE) - 211) * (a1 != 58487721)) | v1)))();
}

void sub_1BCAF77D4()
{
  LODWORD(STACK[0x630]) = -984936807;
  JUMPOUT(0x1BCAEF76CLL);
}

void sub_1BCAF77F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1225351577 * (((a1 | 0x1B35D24) - (a1 | 0xFE4CA2DB) - 28532005) ^ 0x7F4CC716);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1BCAF7950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = *(void *)(v3 - 0x5B51E979A7EFF0CDLL);
  int v6 = *(unsigned __int8 *)(v5 + (v2 - 35001923)) ^ 0x80;
  int v7 = ((*(unsigned __int8 *)(v5 + (v2 - 35001926)) ^ 0x80) << (((v4 - 43) ^ 0xC5) + v4 - 12)) | ((*(unsigned __int8 *)(v5 + (v2 - 35001925)) ^ 0x80) << 16) | ((*(unsigned __int8 *)(v5 + (v2 - 35001924)) ^ 0x80) << 8) | v6;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((45 * (((v7 + v1 - 2 * (v7 & (v1 + 18) ^ v6 & 0x12)) & 0xFFFFFF) != 5196821)) ^ v4)))();
}

uint64_t sub_1BCAF7A04@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  BOOL v27 = v20 < v23;
  *(&a20 + (a3 + v22)) = *(unsigned char *)(v26 + (v21 + a2)) ^ 0x80;
  unsigned int v28 = v21 + 1 + a1;
  int v29 = v27 ^ (v28 < v23);
  BOOL v30 = v28 < v20;
  if (!v29) {
    BOOL v27 = v30;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((v27 * ((14 * (v25 ^ 0x46E)) ^ 0xB0)) ^ v25)))();
}

uint64_t sub_1BCAF7A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * ((&a11 & 0xA96767C1 | ~(&a11 | 0xA96767C1)) ^ 0x885E25E5);
  a15 = v19 ^ 0x69A22386;
  a13 = (v17 + 369) ^ v19;
  a14 = &STACK[0x6FE5CF68CB300711];
  a11 = &STACK[0x9466003216229D5];
  a12 = v18;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 994)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((47
                                              * (*(_DWORD *)(v18 - 0x5B51E979A7EFF0B5) == ((v17 + 864442214) & 0xCC79A7DE ^ (v15 - 1051) ^ (115 * (v17 ^ 0x486))))) ^ v17)))(v20);
}

uint64_t sub_1BCAF7B84(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6 = a3 + *(unsigned __int8 *)(a2 + 7) - 199;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1076 * ((v4 & (2 * v6)) + (v6 ^ v5) == v5)) ^ a3)))();
}

uint64_t sub_1BCAF7BC0@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  uint64_t v55 = (v53 + v51);
  unsigned int v56 = *(_DWORD *)(&a39 + v55 + 72);
  *(unsigned char *)(a1 + v55) = v56 ^ 0x46;
  *(unsigned char *)(a1 + (v55 + 1)) = BYTE1(v56) ^ 0x8A;
  *(unsigned char *)(a1 + (v55 + 2)) = (v56 >> (v52 - 22)) ^ 0xDA;
  *(unsigned char *)(a1 + (v55 + 3)) = HIBYTE(v56) ^ 0xB5;
  BOOL v57 = v53 - 1322493588 < (a51 - 1710980501);
  if (v53 - 1322493588 < a2 != a51 - 1710980501 < a2) {
    BOOL v57 = a51 - 1710980501 < a2;
  }
  return (*(uint64_t (**)(void))(v54 + 8 * ((138 * v57) ^ v52)))();
}

uint64_t sub_1BCAF7C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = 235795823 * ((((v74 - 192) | 0x2895539E) - ((v74 - 192) & 0x2895539E)) ^ 0xBC381AC7);
  *(void *)(v74 - 192) = 0xD7CDE9D8B19902BLL;
  *(void *)(v74 - 160) = STACK[0x200];
  *(_DWORD *)(v74 - 168) = v75 + v72 - 445;
  *(_DWORD *)(v74 - 184) = 1487389347 - v75;
  *(void *)(v74 - 176) = a72;
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(v73 + 8 * (v72 ^ 0x9D1)))(v74 - 192);
  return (*(uint64_t (**)(uint64_t))(v73
                                            + 8
                                            * ((1014
                                              * (*(_DWORD *)(v74 - 152) != 26 * ((v72 + 1815457028) & 0x93CA517F ^ 0x4D)
                                                                         + 984896767)) ^ v72)))(v76);
}

uint64_t sub_1BCAF7DE8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v5 | (2
                                     * (((((v2 + 1258) ^ (2 * a1))
                                        + v4
                                        - ((((2 * v5) ^ 0xFD0) + v2) & (2 * ((v2 + 1258) ^ (2 * a1))))) ^ v4) > v1)))))();
}

uint64_t sub_1BCAF7E24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)(a4 + v6) = *(void *)(v5 + v6);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 0) * v4) | a3)))();
}

uint64_t sub_1BCAF7E54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((378 * (v2 - a1 < ((v1 - 352199805) & 0x14FE21BF ^ 0x18EuLL))) ^ (v1 + 641))))();
}

uint64_t sub_1BCAF7EA4()
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 16592);
  return v2(v0);
}

void sub_1BCAF7ED0(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)a1 - 0x7EC954F57526279DLL) == 874675926
    || *(_DWORD *)(*(void *)(a1 + 16) - 0x7EC954F57526279DLL) == 874675926;
  int v1 = *(_DWORD *)(a1 + 8) + 1178560073 * ((2 * (a1 & 0x4FE31186) - a1 + 807202425) ^ 0x8A88961B);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1BCAF7FD4()
{
  return sub_1BCAF7FDC();
}

uint64_t sub_1BCAF7FDC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = ((v3 + 1778381493) ^ 0xD89FBC48) + v2;
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1BCAF8020@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v6 = ((2 * (a1 ^ 0x135)) ^ 0x4F2 ^ (v3 + 1730)) + v4;
  int v7 = v4 + 1;
  *(_DWORD *)(*(void *)(v2 - 0x7EC954F575262799) + 4 * v6) = v5;
  *(_DWORD *)(v2 - 0x7EC954F57526279DLL) = v7;
  int v8 = v3 + v7;
  int v9 = v8 + 1584;
  if (v8 + 1584 < 0) {
    int v9 = -1584 - v8;
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1607
                                * ((v9 ^ 0x3CE7FFF6)
                                 + ((((2 * (a1 ^ 0x135)) ^ 0x7B7) + 2043673625) & (2 * v9))
                                 - 1021837519
                                 + ((((2 * (a1 ^ 0x135)) ^ 0x7B7) - 899) | 0x88) >= 0)) ^ (2 * (a1 ^ 0x135)) ^ 0x7B7)))();
}

void sub_1BCAF8114()
{
}

uint64_t sub_1BCAF811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v13 = v7 == v11 && v9 != a7 + 11 * ((v8 - 212443308) & 0xCA9A437 ^ 0x460) - 715;
  return (*(uint64_t (**)(void))(v10 + 8 * ((2034 * v13) ^ v8)))();
}

uint64_t sub_1BCAF817C()
{
  if (v2 + 1272807206 + v1 - 711 < 0) {
    int v3 = v2;
  }
  else {
    int v3 = 1749351852 - v2;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((1924 * (v3 - 874675927 >= 0)) ^ (v1 - 711))))();
}

void sub_1BCAF820C()
{
}

uint64_t sub_1BCAF82A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  BOOL v10 = v8 - 1854505451 + ((2 * a8) ^ 0xB0Cu) >= ((a8 + 1094685914) & 0xBEC067FF) - 815;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((2 * v10) | (8 * v10) | a8)))(a1, a2, a3, a4, a5, a6, a7, 3310030441);
}

void sub_1BCAF8300()
{
  _DWORD *v0 = -984936840;
  JUMPOUT(0x1BCAF830CLL);
}

uint64_t sub_1BCAF8310()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((3 * (v1 ^ 0x707) + 103) | 0x56) - 152) * (*v0 != 0x3F8123127DDA1A64)) ^ v1)))();
}

uint64_t sub_1BCAF836C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = (((v2 - 1027) | 0x301) ^ 0xB85FB525) + v6;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(v1 + v8);
  BOOL v9 = v4 > 0x3060526A;
  if (v9 == v6 - 2013305760 < v3) {
    BOOL v9 = v6 - 2013305760 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((7 * !v9) ^ v2)))();
}

void sub_1BCAF83E8()
{
}

uint64_t sub_1BCAF83F0(uint64_t a1)
{
  int v6 = v3 + v2;
  unsigned int v7 = v6 + (((v1 - 748) | 0x4C) ^ 0xE189801E);
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((1018
                                                       * (v4 + v7 > ((((v1 - 882) | 0x81) - 652) ^ (v6 - 511081791)))) ^ (v1 + 87))))(a1, 1584496196);
}

void sub_1BCAF846C()
{
}

uint64_t sub_1BCAF8478(double a1)
{
  *(double *)(v2 + v5) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 != v5) * v4) ^ v1)))();
}

void sub_1BCAF84A0()
{
}

uint64_t sub_1BCAF856C()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 223)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * ((((v1 - 833) | 0x100) + 8) ^ ((v1 - 833) | 0x100))) | v1)))();
}

uint64_t sub_1BCAF85BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  uint64_t v61 = (*(uint64_t (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v59 + 8 * (v56 ^ 0x90C)))(*(unsigned int *)STACK[0x378], (v55 + v54), LODWORD(STACK[0x250]), (*(_DWORD *)(STACK[0x378] + 52) - 419741975), &STACK[0x1910], STACK[0x360], (LODWORD(STACK[0x2E4]) - 66574141), &STACK[0x660]);
  int v63 = (v61 ^ 0xF77B89FD) + 267286508 + (((v56 - 459061704) & 0x1B5CBAEF ^ 0xEEF7119E) & (2 * v61));
  if (v63 == 392823276) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v59
  }
                                                       + 8
                                                       * (int)((460
                                                              * (LODWORD(STACK[0x240]) + LODWORD(STACK[0x2C0]) >= (LODWORD(STACK[0x244]) - 1881))) ^ (STACK[0x408] + 114))))(v61, v62);
  if (v63 == 124387817)
  {
    unint64_t v68 = STACK[0x408];
    int v69 = STACK[0x408] + 620;
    int v70 = STACK[0x408] + 165;
    (*(void (**)(void, unint64_t, void))(v59 + 8 * (int)(STACK[0x408] ^ 0xA48)))(*(unsigned int *)STACK[0x2C8], STACK[0x360], (LODWORD(STACK[0x2E4]) - 66574141));
    int v71 = *(_DWORD *)(STACK[0x378] + 52);
    int v72 = LODWORD(STACK[0x558]) ^ 0x4BF977B6;
    unsigned int v73 = (2 * LODWORD(STACK[0x558])) & 0x97F2EF6C;
    int v74 = 3804331 * ((1442989385 - ((v60 - 192) | 0x56024549) + ((v60 - 192) | 0xA9FDBAB6)) ^ 0x536349E0);
    *(void *)(v60 - 176) = STACK[0x608];
    *(_DWORD *)(v60 - 164) = v68 - v74 - 549;
    *(_DWORD *)(v60 - 160) = ((a51 & 0xFEBFFFBE ^ 0xE808D016) + 1409284080 + ((v69 + 2147482415) & a52 ^ 0xBDB97F4)) ^ v74;
    *(void *)(v60 - 192) = v57;
    *(void *)(v60 - 152) = &STACK[0x660];
    *(_DWORD *)(v60 - 168) = v71 - v74 + 979056312;
    *(_DWORD *)(v60 - 184) = v72 - v74 + v73 - 1130889474;
    uint64_t v75 = (*(uint64_t (**)(uint64_t))(v59 + 8 * (int)(v68 ^ 0xAEE)))(v60 - 192);
    int v76 = *(_DWORD *)(v60 - 180);
    LODWORD(STACK[0x54C]) = v76;
    return (*(uint64_t (**)(uint64_t))(v59 + 8 * (((v76 == 984896845) | (2 * (v76 == 984896845))) ^ v70)))(v75);
  }
  else
  {
    unint64_t v64 = STACK[0x408];
    int v65 = STACK[0x408] - 546;
    LODWORD(STACK[0x2C4]) = v63;
    int v66 = v64 + 1315;
    LODWORD(v64) = 1374699841 * (((v58 | 0x4B4DFF3D) - (v58 & 0x4B4DFF3D)) ^ 0x26B9E734);
    *(_DWORD *)(v60 - 176) = (v63 - ((v65 ^ 0x7568AAD8) & (2 * v63 + 1898708014)) + 860509028) ^ v64;
    *(_DWORD *)(v60 - 192) = v66 ^ v64;
    *(void *)(v60 - 184) = STACK[0x248];
    uint64_t v67 = (*(uint64_t (**)(uint64_t))(v59 + 8 * SLODWORD(STACK[0x23C])))(v60 - 192);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v59
                                                       + 8
                                                       * ((224
                                                         * (LODWORD(STACK[0x54C]) == ((v65 - 1611304270) & 0x600A8F6F)
                                                                                   + 984896233)) ^ v65)))(v67, v52);
  }
}

uint64_t sub_1BCAF8678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25)
{
  return (*(uint64_t (**)(void, void, void))(v26 + 8 * v25))(((a23 - 1110908458) ^ 0xF6FADFB1) + 1874800384 + ((2 * (a23 - 1110908458)) & 0xEDF5BF62), a25 & 0x20000000, (((v25 - 25) | 0x437) ^ 0x220u) - 1567);
}

void sub_1BCAF8778(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 28) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF8850()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1667 * ((((v0 + 553) ^ 0x442) & v1) == ((v0 + 2051342563) & 0x85BAFDED ^ 0xE8))) ^ v0)))();
}

uint64_t sub_1BCAF88A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v13 + 8 * (int)((((v11 + 191571010) & 0xF494DEF9 ^ 0x5EB) * (v12 == 0)) ^ (v11 + 404))))(a1, a2, a3, a4, a5, a6, a7, a8, *(void *)(a1 + 16), a10, a11);
}

void sub_1BCAF891C(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 24) - 1374699841 * ((-2 - ((a1 | 0x5548FCDC) + (~a1 | 0xAAB70323))) ^ 0xC7431B2A);
  uint64_t v2 = *(unint64_t **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(unint64_t **)(a1 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(v4 - 0x1C6D093801E6EF69);
  unsigned int v13 = (1759421093 * ((&v8 - 2090829170 - 2 * (&v8 & 0x83607A8E)) ^ 0x301DCADA)) ^ (v1 + 404);
  uint64_t v8 = v4;
  BOOL v9 = v2;
  uint64_t v10 = v5;
  uint64_t v11 = v6;
  int v12 = &STACK[0x7EC954F5752627D1];
  unsigned int v7 = (char *)*(&off_1F16F9FD0 + v1 - 1475) - 4;
  (*(void (**)(uint64_t *))&v7[8 * v1 + 3904])(&v8);
  uint64_t v8 = *(void *)(v4 - 0x1C6D093801E6EF71);
  BOOL v9 = &STACK[0x7EC954F5752627C1];
  LODWORD(v10) = (108757529
                * ((2090754283 - (&v8 | 0x7C9E60EB) + (&v8 | 0x83619F14)) ^ 0x63FDFD3F)) ^ (v1 - 974);
  (*(void (**)(uint64_t *))&v7[8 * (v1 ^ 0xE73)])(&v8);
  BOOL v9 = v3;
  HIDWORD(v8) = v1
              + 460628867
              * ((-602685872 - (&v8 | 0xDC13BE50) + (&v8 | 0x23EC41AF)) ^ 0x6F7AC3D2)
              - 348;
  (*(void (**)(uint64_t *))&v7[8 * (v1 ^ 0xE34)])(&v8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF8BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8 * ((100 * (v6 + 1 == v7 + 16)) ^ a5)))(a2, v5, a2);
}

void sub_1BCAF8C7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  uint64_t v2 = (char *)*(&off_1F16F9FD0 + (v1 ^ 0x3FE)) - 4;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * v1 + 9688])(32, 0x101004023FF3BD5) == 0)
                      * ((3 * (v1 ^ 0x3CB)) ^ 0x2E8)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF8D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v24 = v22 + 1018;
  if (v24 <= 0x40) {
    unsigned int v24 = 64;
  }
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((1023 * (-v20 - v21 + ((a20 - 137002496) & 0x82A7FFB ^ 0x77DFFE24) + v24 < 0xF)) ^ a20)))();
}

void hZZRqgZwI(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1) {
    BOOL v4 = a4 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF8E3C()
{
  ++*(_DWORD *)(v2 + 52);
  unint64_t v5 = (((v0 - 100) | 0x241u) ^ 0xFFFFFFFFFFFFF4E1) + v1;
  STACK[0x400] = v5;
  STACK[0x510] = v5;
  LODWORD(STACK[0x54C]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * (((STACK[0x5D0] == 0) * ((v0 ^ 0xC6) + 1497)) ^ v0)))();
}

uint64_t sub_1BCAF8E9C(uint64_t result, uint64_t a2, int a3)
{
  if (v4 + 1583 >= (((a3 + 304) | 0x14) ^ 0x7FFFFDE3u)) {
    int v7 = -v3;
  }
  else {
    int v7 = v6;
  }
  int *v5 = v7;
  *(_DWORD *)(result + 24) = 1985649921;
  return result;
}

uint64_t sub_1BCAF8ED4()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 40) + v0 - 0x6BEABFE2B8401B72 + ((v4 - 1332243651) & 0x4F68677F))
     - *(unsigned __int8 *)(v5 + v0 - 0x6BEABFE2B8401B72 + ((v4 - 1332243651) & 0x4F68677F));
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x856FA2DF) + 2078138357 + ((2 * v6) & 0xADF45BE) != 21856980 || v7 == v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((109 * v9) | v4)))();
}

void sub_1BCAF8F70()
{
}

void sub_1BCAF8FD4()
{
}

void sub_1BCAF8FE0()
{
}

uint64_t sub_1BCAF8FE8@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v7 = (__n128 *)(v5 + v3);
  v7[73] = a2;
  v7[74] = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 + 32 == v2 - 1312) * v4) ^ a1)))();
}

uint64_t sub_1BCAF9018()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((522
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v1) == v1 + ((16 * v2) ^ 0xBB0) - 304)) ^ v2)))();
}

uint64_t sub_1BCAF905C()
{
  STACK[0x3E0] = STACK[0x458];
  LODWORD(STACK[0x578]) = -1880706817;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 + ((v0 + 566) ^ 0x223) == 984897077) * (((v0 - 149) | 0x264) + 690)) ^ (v0 + 566))))();
}

void sub_1BCAF911C(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 1755877458;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAF91C4()
{
  *int v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1BCAF91E8@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a1 + (v2 ^ (v3 + 596)) + ((v2 - 923440117) & 0x370A97F9) - 1738) * (a2 == 1772733382)) ^ v2)))();
}

uint64_t sub_1BCAF9240()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(v1 + 8) == 0) * (((v0 - 793) | 0x200) - 400)) ^ v0)))();
}

uint64_t sub_1BCAF92A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v27 + 816) * ((a4 + v28 + 62) < 4)) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1BCAF92DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 535753261 * (((a1 | 0xB23F3C90) - (a1 & 0xB23F3C90)) ^ 0xB8CB32BF);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1BCAF9400@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a1 ^ 0x138) * a3 - 1276) * (v3 == a2)) ^ a1)))();
}

uint64_t sub_1BCAF9448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)(a2 + a1) = a3;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (((v4 == a1) * v6) ^ v3)))(a1 + v5);
}

uint64_t sub_1BCAF946C(double a1)
{
  *(double *)(v4 + (v2 | 0x10)) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((4 * (v3 == 0)) | (32 * (v3 == 0)) | v1)))();
}

void sub_1BCAF949C()
{
}

void sub_1BCAF94BC()
{
}

uint64_t sub_1BCAF94C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v17 = ((v16 - 154319374) & 0x932B5BD ^ 0xBAE410A0) + a14;
  BOOL v18 = v14 + 532880439 < v17;
  if (v17 < 0x2BBCC68F != (v14 + 532880439) < 0x2BBCC68F) {
    BOOL v18 = v17 < 0x2BBCC68F;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((172 * v18) ^ v16)))();
}

void sub_1BCAF954C()
{
}

uint64_t sub_1BCAF9558(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((a4 - 897) | 0x614) ^ 0x75F) * ((a2 + a7 - 16) > 0xFFFFFFEF)) | a4)))();
}

uint64_t sub_1BCAF9594(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v7 = v5 + v6 + 345100225;
  BOOL v8 = v7 < 0x9AF360AD;
  BOOL v9 = v7 > v3 + 482270703;
  if (v8 != v3 + 482270703 < ((a3 - 146) ^ 0x9AF364BF)) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((126 * !v9) ^ a3)))();
}

uint64_t sub_1BCAF9610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * ((1023 * (a19 == ((v19 + 1468) ^ 0x22A079C))) ^ v19)))();
}

uint64_t sub_1BCAF9658()
{
  *(void *)(v3 + v2 - 0x781B11C0E349AD23) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * (v0 - 766)) ^ v0)))();
}

uint64_t sub_1BCAF96A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((452 * (a1 == ((v3 - 567) ^ 0x433u ^ (unint64_t)(v2 - 598)))) ^ v3)))();
}

uint64_t sub_1BCAF96E4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v23 = ((v22 - 144) ^ 0x7EFF9A32) * v21;
  *(_DWORD *)(v22 - 140) = (v20 - 924) ^ v23;
  *(_DWORD *)(v22 - 128) = a1 ^ v23;
  *(void *)(v22 - 136) = a18;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v20 ^ 0xC73)))(v22 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((*(_DWORD *)(v22 - 144) == v19 + v20 - 369 - 731) * ((v20 - 99) ^ 0x3F4)) ^ v20)))(v24);
}

void sub_1BCAF9764()
{
}

uint64_t sub_1BCAF9A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,unint64_t *a40,unint64_t a41,int a42,int a43,int a44,int a45,unint64_t a46,char *a47,unint64_t *a48,uint64_t a49,int a50,int a51,unint64_t *a52,uint64_t a53,int a54,int a55,int a56,int a57,uint64_t a58,int a59,int a60,int a61,int a62,uint64_t a63)
{
  a49 = v82;
  STACK[0x360] = 0;
  a40 = &STACK[0x335F4D7B17DD53AB];
  STACK[0x3A0] = (unint64_t)&STACK[0x18D77CDD39E8D26E];
  STACK[0x398] = (unint64_t)&STACK[0x8DE5192BDC53636];
  STACK[0x390] = (unint64_t)&STACK[0x5BFD90C18C656726];
  STACK[0x388] = (unint64_t)&STACK[0x5CF9E3AABE536E24];
  STACK[0x200] = (unint64_t)&STACK[0x5C210B0457DF36B7];
  a78 = &STACK[0xC8F409392290D6F];
  a77 = &STACK[0x5C210B0457DF3727];
  a76 = &STACK[0xC8F409392290C9B];
  a52 = &STACK[0x13AAEC8A5CF1D584];
  a67 = &STACK[0x335F4D7B17DD52A7];
  STACK[0x290] = (unint64_t)&STACK[0x5C210B0457DF3627];
  STACK[0x288] = (unint64_t)&STACK[0xC8F409392290E13];
  a64 = &STACK[0x6D40EE9100C99EE9];
  STACK[0x248] = (unint64_t)&STACK[0x6D40EE9100C99EB5];
  STACK[0x260] = (unint64_t)&STACK[0x10AB3F3F18D182A1];
  STACK[0x258] = (unint64_t)&STACK[0x181849F3B3090A36];
  a48 = &STACK[0x5FA3F43A3B4E94E6];
  int v84 = *(_DWORD *)(v80 + 28);
  int v85 = *(_DWORD *)(v80 + 32);
  STACK[0x228] = v80;
  a41 = ((unint64_t)&STACK[0x468] ^ 0x7F5EFD7FF7F9DBE7)
      - 0x5518304081408A02
      + (((void)&STACK[0x468] << ((v79 ^ 6u) + 93)) & 0xFEBDFAFFEFF3B7C0);
  a73 = ((unint64_t)&STACK[0x550] ^ 0x35FBEFFDEECFFECFLL)
      - 0x244B0821A4000E0ELL
      + ((2 * (void)&STACK[0x550]) & 0x6BF7DFFBDD9FFD90);
  a46 = ((unint64_t)&STACK[0x5D8] ^ 0x7F6F35366FF5B7F5)
      - 0x540A1020050494A4
      + ((2 * (void)&STACK[0x5D8]) & 0xFEDE6A6CDFEB6FE0);
  a56 = 2 * (v85 + v78);
  LODWORD(STACK[0x2A4]) = ((v85 + v78) ^ 0x6D7F03C5) + 1994389468 + (a56 & 0x33F6D7DC ^ 0x2100D054);
  a44 = v84 - v78;
  STACK[0x218] = ((unint64_t)&STACK[0x450] ^ 0x7137FDD9DFF9154FLL)
               - 0x110095918917FF4FLL
               + ((2 * (void)&STACK[0x450]) & 0xE26FFBB3BFF22A90);
  LODWORD(STACK[0x254]) = 172096345 * (v84 - v78) + 1433471146;
  LODWORD(STACK[0x244]) = 314 * (v81 ^ 0x262);
  unint64_t v86 = 1178560073 * ((2 * (v83 & 0x1E3A8EFD540DC180) - v83 - 0x1E3A8EFD540DC187) ^ 0xFA3921EA1166461BLL);
  *(int32x4_t *)&STACK[0x340] = vdupq_n_s32(0x7FFFFFFEu);
  a68 = vdupq_n_s32(0x3AB4554Du);
  a69 = vdupq_n_s32(0x3AB4554Fu);
  a66 = (v81 + 200250745) & 0xF4106B77;
  LODWORD(STACK[0x214]) = (v81 + 1085388187) & 0xBF4E4F6D;
  STACK[0x2B0] = (unint64_t)&STACK[0x560] % 0x25 + 16;
  a57 = v85 + v78;
  LODWORD(STACK[0x250]) = (v85 + v78) ^ 0xF484682B;
  a75 = (char *)&a9 - 0x265CB198B5761511;
  a47 = (char *)&a9 - 0x265CB198B5761823;
  a55 = (v81 - 1101898018) & 0x41AD9EFF;
  LODWORD(STACK[0x240]) = a55 ^ 0xDC0A50F6;
  STACK[0x3F8] = 235795823 * (((~v83 | 0x74876FD3C00B1862) + (v83 | 0x8B78902C3FF4E79DLL)) ^ 0x83C82AD2AB59AEC5);
  LODWORD(STACK[0x3DC]) = v81 - 2002312293;
  STACK[0x3F0] = v83 | 0x5897A5EB14C627D4;
  LODWORD(STACK[0x3D8]) = v81 - 1159885808;
  LODWORD(STACK[0x3D4]) = v81 ^ 0xFFFFF9B0;
  *(int32x4_t *)&STACK[0x320] = vdupq_n_s32(0x8769BFA4);
  *(int32x4_t *)&STACK[0x330] = vdupq_n_s32(0x21DA6FE9u);
  *(int32x4_t *)&STACK[0x300] = vdupq_n_s32(0x9A2C6A2C);
  *(int32x4_t *)&STACK[0x310] = vdupq_n_s32(0x43B4DFD2u);
  uint64_t v87 = 235795823 * (v83 ^ 0x8B0BAFE94AD4959);
  LODWORD(STACK[0x238]) = v81 ^ 0x419;
  a74 = (16 * v81) ^ 0x2440;
  a72 = v81 - 1113520781;
  a63 = (int)v81 + 1647821287;
  a71 = v81 ^ 0x373;
  a62 = 2 * (v81 ^ 0x23F);
  a61 = v81 + 1960129427;
  a60 = v81 + 1270462449;
  LODWORD(STACK[0x224]) = v81 ^ 0x67F;
  a45 = v81 ^ 0x2574;
  a43 = 51 * (v81 ^ 0x268);
  a38 = v81 ^ 0x26E;
  a39 = v81 ^ 0xA31;
  LODWORD(STACK[0x2C0]) = 603303756;
  STACK[0x400] = 0x265CB198B5761BE1;
  LODWORD(STACK[0x23C]) = v81 ^ 0xA37;
  STACK[0x358] = v86;
  STACK[0x2F0] = v86 ^ 0x173A6987;
  STACK[0x408] = v81;
  a58 = (int)v81;
  a51 = 1723469490;
  STACK[0x2F8] = v87;
  STACK[0x2E8] = v87 + 970423947;
  LODWORD(STACK[0x2C4]) = 124387817;
  LODWORD(STACK[0x2E4]) = 66574141;
  return sub_1BCAFA110(a1, a2, 3310030484);
}

uint64_t sub_1BCAFA110@<X0>(int a1@<W8>)
{
  uint64_t v4 = (char *)&STACK[0x670] + STACK[0x400] - 0x265CB198B5761BC1;
  LODWORD(STACK[0x580]) = v3;
  STACK[0x5B8] = (unint64_t)v4;
  uint64_t v5 = *(void *)(v1 + 8 * (a1 ^ 0x781));
  int v6 = *(uint64_t (**)(void))(v2 + 8 * ((*(_DWORD *)(v5 - 8) != 0) ^ a1));
  STACK[0x2C8] = *(void *)(v1 + 8 * (a1 - 1781));
  STACK[0x378] = v5 - 8;
  return v6();
}

void sub_1BCAFA198()
{
}

uint64_t sub_1BCAFA1A0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 == ((v0 - 295) ^ 0x5E577842)) * ((3 * ((v0 - 295) ^ 0x781)) ^ 0x6C7)) ^ (v0 - 295))))();
}

void sub_1BCAFA1E4()
{
}

void sub_1BCAFA200()
{
}

uint64_t sub_1BCAFA27C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1 + 127 - a1;
  unint64_t v5 = STACK[0x2A8] + 127 - a1;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  int8x16_t v7 = veorq_s8(*(int8x16_t *)(v4 - 31), v6);
  *(int8x16_t *)(v5 - 15) = veorq_s8(*(int8x16_t *)(v4 - 15), v6);
  *(int8x16_t *)(v5 - 31) = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * ((59 * ((((v2 - 224) ^ (a1 == 96)) & 1) == 0)) ^ v2)))();
}

void sub_1BCAFA2E0()
{
  int v7 = (((((v6 - 144) | 0xFFA7A518) ^ 0xFFFFFFFE) - (~(v6 - 144) | 0x585AE7)) ^ 0xE0C438CC) * v3;
  *(void *)(v6 - 144) = v5;
  *(void *)(v6 - 128) = v0;
  *(_DWORD *)(v6 - 136) = v1 - v7 - 323;
  *(_DWORD *)(v6 - 116) = v2 - v7 - 1215805657 + (v1 ^ 0x5E2);
  (*(void (**)(uint64_t))(v4 + 8 * (v1 ^ 0xB10)))(v6 - 144);
  JUMPOUT(0x1BCAFA360);
}

uint64_t sub_1BCAFA7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((7 * (a7 + 1 != v9 + 44)) ^ v7)))();
}

uint64_t sub_1BCAFA868(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((994
                                * (((((a7 - 365) & (a2 + 113) ^ (((a7 - 332) | 0x404) - 159720629))
                                   + ((2 * (a2 + 113)) & 0xDE)) & 0xF67AFFFC) == -159719440)) ^ a7)))();
}

uint64_t sub_1BCAFA8D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v6
                                                             + 8
                                                             * (((((6 * (v5 ^ 0x294)) ^ 0x3DA) + ((2 * v5) ^ 0x780))
                                                               * (v3 == v4)) ^ v5)))((v2 - v4), a2, 3310030484);
}

uint64_t sub_1BCAFA920@<X0>(unsigned int a1@<W8>)
{
  int v6 = *(_DWORD *)((char *)&STACK[0x2C4] + ((v3 + v1) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(v4 + (v3 + v1)) = HIBYTE(v6) ^ 0xB5;
  *(unsigned char *)(v4 + (v2 ^ 0x41E ^ (v1 + 17)) + v3) = BYTE2(v6) ^ 0xDA;
  *(unsigned char *)(v4 + (v3 + v1 + 2)) = BYTE1(v6) ^ 0x8A;
  *(unsigned char *)(v4 + (v3 + v1 + 3)) = v6 ^ 0x46;
  unsigned int v7 = LODWORD(STACK[0x320]) - 1452524726;
  BOOL v8 = v3 - 1732998640 < v7;
  if (v3 - 1732998640 < a1 != v7 < a1) {
    BOOL v8 = v7 < a1;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((25 * !v8) ^ v2)))();
}

uint64_t sub_1BCAFA9E0()
{
  BOOL v4 = v1 - 487049762 < (int)(v2 + 853457864);
  if (v2 > 0x4D214437 != v1 - 487049762 < (int)((((v0 - 416) | 0x2E) + 546) ^ 0xB2DEBF28)) {
    BOOL v4 = v2 > 0x4D214437;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 ^ v0)))();
}

uint64_t sub_1BCAFAA58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((28 * (((v4 == a4) ^ (v5 - 54 + v5 + 1)) & 1)) ^ v5)))();
}

uint64_t sub_1BCAFAA90(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v10 = v5 + v4;
  unsigned int v11 = ((v6 + 2467) ^ 0x4F9) + v10;
  if (v11 <= 0x40) {
    unsigned int v11 = v7;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((25 * (a4 - v10 < v8 + v11)) ^ 0x20Bu)))();
}

uint64_t sub_1BCAFAAE0()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((((v0 - 2086557330) < 0x38) * (((v1 + 21) | 0x340) ^ 0x373)) ^ (v1 + 1562))))(298);
}

uint64_t sub_1BCAFAB30(int8x8_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(int8x8_t *)(a4 + (v4 - 8)) = veor_s8(*(int8x8_t *)(v5 + (v4 - 8)), a1);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == -8) * v7) ^ a3)))();
}

uint64_t sub_1BCAFAB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v10 = v8 + a6 + 1635;
  BOOL v12 = v10 > 1012312815 || v10 < a7;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 * (v9 - 1619)) ^ v9)))();
}

void sub_1BCAFAB84(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 3804331 * (((a1 | 0x841A70C4) - (a1 & 0x841A70C4)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAFAC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1BCAFACD8(a9 - 0x1C6D093801E6EF61, a21 - 0x7EC954F575262799, ((v21 + 488) ^ 0x79E79D63) + a7, (int)a7 - 1, a5, (v22 - 1001), a7, 4 * a7);
}

uint64_t sub_1BCAFACD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((467 * (a7 < 2)) ^ v8)))();
}

uint64_t sub_1BCAFAD38()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 == v2 - 1590) * ((v2 ^ 0x75) - 1486)) ^ v2)))();
}

void sub_1BCAFAD68()
{
}

uint64_t sub_1BCAFAD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v15 = (a6 + v9);
  *(unsigned char *)(v14 + v15) ^= *(unsigned char *)(v11 + (v15 & 0xF)) ^ *(unsigned char *)(v12 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF)) ^ ((5 * (v15 & 0xF)) | 0x80);
  return (*(uint64_t (**)(void))(v13 + 8 * ((1927 * (a6 - 1 == v8)) ^ (a8 - 429))))();
}

uint64_t sub_1BCAFADD4(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 235795823 * ((a1 - 590343418 - 2 * (a1 & 0xDCD01306)) ^ 0x487D5A5F) + 130;
  int v2 = v1 + *(_DWORD *)(*(void *)(a1 + 8) - 0x7EC954F57526279DLL);
  int v4 = v2 - 874676485;
  BOOL v3 = v2 - 874676485 < 0;
  int v5 = 874676485 - v2;
  if (!v3) {
    int v5 = v4;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F16F9FD0 + v1 - 407)
                              + 8
                              * (((((((2 * v1) ^ 0x62A) - 591) | 0x188) - 338)
                                * ((v5 ^ 0x7EBFFB9F) - 2126511008 + ((2 * v5) & 0xFD7FF73E) > 0x7FFFFFFE)) ^ v1)
                              - 4))();
}

uint64_t sub_1BCAFAEEC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((STACK[0x3D8] & 0x452275CF ^ 0x45C) * (v2 < v4)) ^ (v3 + 515))))(a1, a2, 2271854500);
}

uint64_t sub_1BCAFAF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v24 - 104) = (v22 + 54) ^ (108757529
                                       * (((v24 - 120) & 0xB06E4165 | ~((v24 - 120) | 0xB06E4165)) ^ 0xAF0DDCB1));
  *(void *)(v24 - 120) = a21;
  *(void *)(v24 - 112) = v21;
  (*(void (**)(uint64_t))(v23 + 8 * (v22 + 1489)))(v24 - 120);
  *(void *)(v24 - 112) = a19;
  *(void *)(v24 - 104) = a21;
  *(_DWORD *)(v24 - 120) = (v22 - 83) ^ (1374699841
                                       * ((8117679 - ((v24 - 120) | 0x7BDDAF) + ((v24 - 120) | 0xFF842250)) ^ 0x92703A59));
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 ^ 0xA1E)))(v24 - 120);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 ^ (32 * (*(_DWORD *)(v24 - 116) > 0x14CED41Au)))))(v25);
}

uint64_t sub_1BCAFB05C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F16FA490 + 8 * ((2 * (*(_DWORD *)(a2 + 4) == 1854503559)) | 0x175u) - 4))();
}

uint64_t sub_1BCAFB090@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  BOOL v11 = v8 > 0xCB60CBF2;
  uint64_t v12 = (a1 - 656385878);
  *(unsigned char *)(a2 + v12) = *(unsigned char *)(v2 + v12) ^ *(unsigned char *)(v4 + (v12 & 0xF)) ^ *(unsigned char *)(v3 + (v12 & 0xF)) ^ *(unsigned char *)(v5 + (v12 & 0xF)) ^ (97 * (v12 & 0xF)) ^ 0x80;
  LODWORD(v12) = a1 + 226462904;
  uint64_t v13 = (a1 + 1);
  int v14 = v11 ^ (v12 < v6);
  BOOL v15 = v12 < v9;
  if (!v14) {
    BOOL v11 = v15;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((v11 * (((v7 - 1153) | 0x409) ^ 0x657)) | v7)))(v13);
}

void sub_1BCAFB134(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1BCAFB218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v12 = *(unsigned __int8 *)(v6 + ((v11 - 273769881) & 0x105165E6 ^ v9) + v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v7
                                                                     + 8
                                                                     * ((v10 + 2113748956 == ((v11 - 978) | 0x68B)
                                                                                           + 1954027777) | v11)))(a1, a2, (a6 + v8 + 1), (v12 ^ 0xFE8FFBEE) + 1878621848 + ((2 * v12) & 0xDDDDDDDD));
}

uint64_t sub_1BCAFB2B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  unsigned int v10 = v8 + 1411907586;
  if (v10 <= 0x40) {
    unsigned int v10 = 64;
  }
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((-v6 - v7 + ((5 * (a4 ^ 0x5E4)) ^ a6) + v10 < 0xF)
                                * ((((unsigned __int16)a4 + 308) & 0xFFE) - 1759)) ^ a4)))();
}

uint64_t sub_1BCAFB334@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v8 = a2 - 982028739 < (a7 + 1787732963);
  if (a7 + 1787732963 < ((a1 - 170) | 0x2Eu) - 613983864 != (a2 - 982028739) < 0xDB6759B6) {
    int v8 = a7 + 1787732963 < ((a1 - 170) | 0x2Eu) - 613983864;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 << 7) | (v8 << 8)) ^ a1)))();
}

uint64_t sub_1BCAFB3A8(unsigned __int8 a1)
{
  uint64_t v7 = v2 + 1;
  BOOL v9 = v3 == ((((_BYTE)v1 - 16 + v5) & 0x3F ^ a1) & 0x7F) || v7 == v4 + 200;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v9 * ((v1 + 1008) ^ 0x635)) ^ (v1 + 1008))))();
}

uint64_t sub_1BCAFB3F8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v0 - 399877496) & 0x17D5A7AF ^ 0xFFFFFA97) + (v0 ^ 0xD5)) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1BCAFB444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(a6
                                                                      + 8
                                                                      * (((a4 == ((a5 - 809) ^ (v6 + 1335)))
                                                                        * (a5 - 1367)) ^ a5)))(a1, a2, a3, (a5 - 299));
}

void sub_1BCAFB4C8(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0x69ED4642) - a1 - 888578849) ^ 0x7860215C);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1BCAFB558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned int a30,uint64_t a31,unsigned int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  uint64_t v43 = a3 ^ 0x319B83B55817A5D9;
  uint64_t v44 = ((a3 ^ 0x319B83B55817A5D9)
       + v42
       - ((((v40 - 1007) ^ 0x337u) - 0x19170759FFE2B072) & (2 * (a3 ^ 0x319B83B55817A5D9)))) ^ a4;
  uint64_t v45 = __ROR8__(__ROR8__(v38 ^ a31, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v46 = v45 ^ 0x322397601515A6F7;
  unint64_t v47 = ((v45 ^ 0x322397601515A6F7)
       + 0x52D74BEC3703560ELL
       - ((2 * (v45 ^ 0x322397601515A6F7)) & 0xA5AE97D86E06AC1CLL)) ^ a8;
  uint64_t v48 = a5 ^ v43;
  unint64_t v49 = (a5 ^ v43 ^ 0x826511EF1F5715BELL) & (a5 ^ 0x7D9AEE10E0A8EA41);
  uint64_t v50 = v44 ^ 0x68040451F630332FLL;
  unint64_t v51 = v44 ^ 0x68040451F630332FLL ^ (v47 ^ 0xE4C1C31231B4037DLL) & (v45 ^ 0xCDDC689FEAEA5908);
  unint64_t v52 = a5 ^ v43 ^ 0xBE0CEDFACD105958 ^ (((v44 ^ 0x97FBFBAE09CFCCD0) & (v45 ^ 0x322397601515A6F7))
                                         - ((2 * ((v44 ^ 0x97FBFBAE09CFCCD0) & (v45 ^ 0x322397601515A6F7))) & 0x78D3F82BA48E99CCLL)
                                         + 0x3C69FC15D2474CE6);
  unint64_t v53 = v47 ^ 0xE4C1C31231B4037DLL ^ v49;
  uint64_t v54 = __ROR8__(v51, 38);
  *((void *)&v55 + 1) = a5 ^ 0x15BE;
  *(void *)&long long v55 = a5 ^ 0x826511EF1F570000;
  unint64_t v56 = (v47 ^ 0x1B3E3CEDCE4BFC82) & (a5 ^ 0x826511EF1F5715BELL) ^ v46 ^ v51;
  unint64_t v57 = __ROR8__(v54 ^ __ROR8__(v52, 38) ^ 0xB8AB4977971512F1, 26);
  uint64_t v58 = v50 & (v48 ^ 0x7D9AEE10E0A8EA41);
  LODWORD(v47) = *(unsigned __int8 *)(a33 + ((((v56 >> 61) ^ 4) + 241) ^ 0x78));
  int v59 = 4 * (v47 ^ 0xFFFFFFDD) - 16 * ((v47 ^ 0xFFFFFFDD) >> 1) + 122;
  LODWORD(v54) = (v47 ^ 0x5D) - ((2 * (v47 ^ 0xFFFFFFDD)) & 0xFFFFFFF4) - 6;
  int v60 = v47 ^ 0xFFFFFFE5;
  LODWORD(v54) = v60 + (v54 ^ v59 ^ 0xFFFFFFC7) + 1;
  int v61 = v54 & 0xFFFFFFBF;
  int v62 = v54 & 0x40;
  unint64_t v63 = v53 ^ __ROR8__((v55 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v58;
  unsigned int v64 = (v59 ^ 0xFFFFFF85) + 1;
  unsigned int v65 = (v59 ^ 0xFFFFFF85) - 64 - v62 - ((2 * v64) & 0x78);
  if ((v62 & v64) == 0) {
    unsigned int v65 = (v59 ^ 0xFFFFFF85) - 64 - ((2 * (v59 ^ 0x85) + 2) & 0x78) + v62;
  }
  int v66 = (((v65 ^ (-v61 - 65)) - ((2 * (v65 ^ (-v61 - 65))) & 0xFFFFFFF4) + 122) ^ v59) + v60;
  *((void *)&v67 + 1) = ~v53;
  *(void *)&long long v67 = v53 ^ 0x92CFC162FD513142;
  unint64_t v68 = __ROR8__(v53, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v67 + 1) = v53 ^ 0x35B154D848209B97 ^ ((v67 >> 1)
                                                      - ((2 * (v67 >> 1)) & 0x4EFD2B756AE355A8)
                                                      - 0x58816A454A8E552CLL);
  *(void *)&long long v67 = *((void *)&v67 + 1) ^ (v53 << 58) ^ 0xC00000000000000;
  uint64_t v69 = v67 >> 51;
  uint64_t v70 = v56 ^ (v56 >> 39) ^ (8 * v56) ^ (((v66 >> 1) | ((_BYTE)v66 << 7)) | (v56 << 25));
  unint64_t v71 = v70 ^ 0x85084C1DD0B298C6;
  uint64_t v225 = v69 + (v68 ^ 0x8F8AC7F1FBA51795);
  unint64_t v72 = (v52 << 23) ^ 0xFBA827E079000000;
  unint64_t v73 = (((v57 << 45) ^ (v57 << 36)) & 0xFFFFFFF000000000 | (v57 >> 28)) ^ (v57 >> 19) ^ 0xD0A2B87327B31AB3;
  uint64_t v74 = (v73 - ((2 * v73) & 0x4841DC8207C436C4) - 0x5BDF11BEFC1DE49ELL) ^ v57;
  unint64_t v75 = v52 ^ (v52 >> 41) ^ (v52 >> 7) ^ 0x61BC6DC61B0EA2E0 ^ (((v52 << 57) ^ 0xE400000000000000)
                                                               - ((2 * ((v52 << 57) ^ 0xE400000000000000)) & 0xAC00000000000000)
                                                               - 0x2814C7815A459F00);
  uint64_t v76 = (v75 & 0x10000000000000 ^ 0x7EBFFE767FEFFFD5) + 2 * (v75 & 0x10000000000000);
  uint64_t v77 = v76 - 0x62053C3009401C14;
  unint64_t v78 = v75 & 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v79 = v76 - 0x7EBFFE767FEFFFD5;
  uint64_t v80 = __ROR8__(v225 - 2 * (v69 & (v68 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v81 = v63 ^ (v63 >> 10) ^ (v63 << 47) ^ ((v63 >> 17) | (v63 << 54));
  unint64_t v82 = 0x9B7AC0BCF69FE396 - v76;
  if ((v79 & v72) == 0) {
    unint64_t v82 = v77;
  }
  uint64_t v83 = (v72 - 0x1CBAC24676AFE3C1 + v82) ^ v78;
  unint64_t v84 = (v83 - ((2 * v83) & 0x9EDEE2CCF8DB91BELL) - 0x30908E9983923721) ^ v81;
  uint64_t v85 = __ROR8__(__ROR8__(v84 ^ 0xF8074358CF07A766, 23) ^ 0x6C4FE5A873E441B7, 41);
  uint64_t v86 = v71 ^ (v80 - 0x5CAE99E38C16B3D5 - ((2 * v80) & 0x46A2CC38E7D29856));
  uint64_t v87 = v74 ^ v83;
  unint64_t v88 = v85 & (v81 ^ 0x1CAE3FE19723B7B4) ^ v86;
  unint64_t v89 = (v87 ^ 0x6E5CEDD81AF01771 | ~v85)
      + ((v85 - 0x63EC8269DB64A808 - ((2 * v85) & 0x3826FB2C4936AFF0)) ^ v87 ^ 0xF24F904E3E6B4089)
      + 1;
  unint64_t v90 = (v86 ^ 0xBEE74353B47A99EDLL) & (v70 ^ 0xD9A6D5FE5CA42B12);
  uint64_t v91 = (2 * v90) & 0x3826FB2C4936AFF0;
  unint64_t v92 = v87 ^ 0xF24F904E3E6B4089 ^ (v90 - 0x63EC8269DB64A808 - v91);
  unint64_t v93 = v84 ^ (v87 ^ 0x91A31227E50FE88ELL) & (v70 ^ 0x26592A01A35BD4EDLL);
  unint64_t v94 = ((v92 ^ (v86 ^ 0x4118BCAC4B856612) & (v81 ^ 0xE351C01E68DC484BLL))
       - 0x5CAE99E38C16B3D5
       - ((2 * (v92 ^ (v86 ^ 0x4118BCAC4B856612) & (v81 ^ 0xE351C01E68DC484BLL))) & 0x46A2CC38E7D29856)) ^ v71;
  unint64_t v95 = ((v88 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v81 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v88 ^ 0xBEE74353B47A99EDLL) << 37)
                                                                                         - (((v88 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)
                                                                                         - 0x7643747485F20715);
  *((void *)&v97 + 1) = v93 ^ v87 ^ 0x3E6B4089 ^ (v90 + 614160376 - v91) ^ 0x594E577;
  *(void *)&long long v97 = v93 ^ v92 ^ 0x8042BE8C10000000;
  uint64_t v96 = v97 >> 28;
  unint64_t v98 = v89 ^ __ROR8__(v95, 37);
  *(void *)&long long v97 = __ROR8__(v93 ^ v92, 19);
  unint64_t v99 = (v96 ^ v97 ^ 0x9CAEF00857D182B2)
      - ((2 * (v96 ^ v97 ^ 0x9CAEF00857D182B2)) & 0xFAFA6C84FE6BB598)
      + 0x7D7D36427F35DACCLL;
  unint64_t v100 = (v88 ^ 0xD1A234CC1D2559D7) << 58;
  unint64_t v101 = v100 & (v88 ^ 0xD000000000000000);
  unint64_t v102 = v100 | v88 ^ 0xD1A234CC1D2559D7;
  *((void *)&v97 + 1) = v94 ^ 0x1747C156E755AED6;
  *(void *)&long long v97 = v94 ^ 0x4000000000000000;
  uint64_t v103 = v94 ^ __ROR8__(v94, 39) ^ (v97 >> 61);
  uint64_t v104 = v103 ^ 0x4B60A8CEAB91CB9ALL;
  uint64_t v105 = v103 & 0x7C09B5691D153F3ALL;
  uint64_t v106 = ((v93 >> 7) ^ (v93 >> 41) | (v93 << 57)) ^ (v93 << 23) ^ 0x632695E1E9F160ADLL;
  uint64_t v107 = v106 - ((2 * v106) & 0x2CB74CBB89185CDCLL) + 0x165BA65DC48C2E6ELL;
  unint64_t v108 = v93 ^ 0xA05D2BDD51BDDBBFLL ^ v107;
  unint64_t v109 = v99 ^ v92 ^ v107;
  unint64_t v110 = v98 ^ (v98 << 47) ^ (v98 >> 10) ^ (v98 >> 17) ^ (v98 << 54);
  uint64_t v111 = (v108 & 0x100000000 ^ 0x6BB7FDFFF3FBEDF9) + 2 * (v108 & 0x100000000);
  uint64_t v112 = v111 - 0x286205040200019;
  unint64_t v113 = v108 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v114 = ((v88 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v88 >> 1) ^ v102 ^ ((v101 ^ ((v88 ^ 0xD1A234CC1D2559D7) << 63))
                                                                  - 0x4E163D3A1F951532
                                                                  - ((2 * v101) & 0x6000000000000000)) ^ v103 ^ 0x4B60A8CEAB91CB9ALL;
  uint64_t v115 = v114 ^ 0x68D11A660E92ACEBLL;
  uint64_t v116 = v111 - 0x6BB7FDFFF3FBEDF9;
  unint64_t v117 = 0xD4E9DBAFA7D7DBD9 - v111;
  if (((v110 ^ 0xBEE8B63400000000) & v116) == 0) {
    unint64_t v117 = v112;
  }
  unint64_t v118 = ((v110 ^ 0xBEE8B6349A795903) - 0x6931DDAFB3DBEDE0 + v117) ^ v113;
  *((void *)&v119 + 1) = v109 ^ 0x13B1CE404;
  *(void *)&long long v119 = v109 ^ 0x5D62A31200000000;
  uint64_t v120 = (v109 ^ 0x5D62A3133B1CE404) & ~v118;
  char v121 = v118 & 1;
  *(void *)&long long v119 = __ROR8__((v119 >> 33) ^ __ROR8__((v114 ^ 0x68D11A660E92ACEBLL) & (v103 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184, 31);
  uint64_t v122 = v118 & (v110 ^ 0x411749CB6586A6FCLL);
  unint64_t v123 = v118 ^ (((v109 ^ 0xA29D5CECC4E31BFBLL) & (v103 ^ 0xFA896A0B4BFB2154))
               - ((2 * ((v109 ^ 0xA29D5CECC4E31BFBLL) & (v103 ^ 0xFA896A0B4BFB2154))) & 0x18BA6F84FAC1AB50)
               + 0xC5D37C27D60D5A8);
  unint64_t v124 = v114 ^ 0x972EE599F16D5314;
  unint64_t v125 = v122 ^ v115;
  unint64_t v126 = (v110 ^ 0xBEE8B6349A795903) & v124;
  unint64_t v127 = v122 ^ v115 ^ v110 ^ (v120 - ((2 * v120) & 0xA2774EEA1A30BAE4) + 0x513BA7750D185D72);
  unint64_t v128 = v119 ^ v104 ^ (v126 - 0x4E163D3A1F951532 - ((2 * v126) & 0x63D3858BC0D5D59CLL));
  unint64_t v129 = (v122 ^ v115 ^ 0x7955EAEC4D48B80CuLL) >> v121 >> (v121 ^ 1u);
  unint64_t v130 = v128 ^ 0xE3CC87CDDA0075F4 ^ (((v128 >> 61) ^ (v128 >> 39) ^ 0xAFF5F4)
                                      - 2
                                      * (((v128 >> 61) ^ (v128 >> 39) ^ 0xAFF5F4) & 0xDD2DAD ^ ((v128 >> 61) ^ (v128 >> 39)) & v39)
                                      - 0x4BC983034522D25CLL);
  uint64_t v131 = (((v128 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v128 << 25) ^ 0x62C1BAB0A0000000) ^ (v130
                                                                                                  - (v130 ^ (v128 << 25) ^ 0x62C1BAB0A0000000)))
        + v130) ^ (8 * v128);
  uint64_t v132 = ((v123 >> 41) | (v123 << 57)) ^ (v123 >> 7) ^ (((v123 << 23) ^ 0x6D16BF7F5E000000)
                                                      - ((2 * ((v123 << 23) ^ 0x6D16BF7F5E000000)) & 0x9A575CEA8000000)
                                                      + 0x4D2BAE75442A61DLL);
  uint64_t v133 = (v127 >> 10) ^ (v127 << 47) ^ (v127 >> 17) ^ (v127 << 54) ^ 0x53DFE6BE94E537DBLL;
  uint64_t v134 = (v133 - ((2 * v133) & 0x4B1590FACF18FCDELL) + 0x258AC87D678C7E6FLL) ^ v127;
  unint64_t v135 = v134 ^ 0xDCB27554A0DDB128;
  unint64_t v136 = ((v123 ^ (unint64_t)v119) << 36) ^ ((v123 ^ (unint64_t)v119) << 45) ^ ((v123 ^ (unint64_t)v119) >> 19) ^ ((v123 ^ (unint64_t)v119) >> 28) ^ 0xDE74541B030D07E5;
  unint64_t v137 = v132 ^ v123 ^ v134;
  unint64_t v138 = v132 ^ v119 ^ (v136 - ((2 * v136) & 0xCD1168A960E3DF32) - 0x19774BAB4F8E1067);
  unint64_t v139 = (((v125 << 58) ^ (v125 << 63)) & 0xFC00000000000000 | (v125 >> 6)) ^ v129;
  uint64_t v140 = v125 ^ 0x6A0C6B776D3DCD2ELL ^ ((v139 ^ 0x31E557ABB13522E0)
                                      + 0x1359819B20757522
                                      - 2 * ((v139 ^ 0x31E557ABB13522E0) & 0x1359819B20757536 ^ v139 & 0x14));
  uint64_t v141 = v131 ^ 0x3D9AF80A2C4F5877 ^ (v140 - 0x7DB2DE7ED55A6509 - ((2 * v140) & 0x49A4302554B35EELL));
  uint64_t v142 = (v131 ^ 0x40282674F9153D7FLL) & v140;
  uint64_t v143 = ((v135 & ~v141) - 0x7DB2DE7ED55A6509 - ((2 * (v135 & ~v141)) & 0x49A4302554B35EELL)) ^ v131 ^ 0x3D9AF80A2C4F5877;
  unint64_t v144 = (v137 ^ 0x8AFF27906DAE714ALL) & (v134 ^ 0x234D8AAB5F224ED7) ^ v141;
  unint64_t v145 = (v142 - ((v142 + 0x1199493AD2348778 - ((2 * v142) & 0x23329275A4690EF0)) ^ v138 ^ 0xA6875A38596371CDLL)) ^ ((v138 ^ 0x48E1ECFD74A8094ALL) + 1);
  unint64_t v146 = ((v145 + 0x1199493AD2348778 - ((2 * v145) & 0x23329275A4690EF0)) ^ v138 ^ 0xA6875A38596371CDLL) + v142;
  unint64_t v147 = v143 ^ v146;
  unint64_t v148 = (((2 * v137) ^ 0xEA01B0DF24A31D6BLL) + (v137 ^ 0x8AFF27906DAE714ALL)) & (v138 ^ 0xB71E13028B57F6B5);
  unint64_t v149 = (((v131 ^ 0xBFD7D98B06EAC280) & (v138 ^ 0x48E1ECFD74A8094ALL))
        - ((2 * ((v131 ^ 0xBFD7D98B06EAC280) & (v138 ^ 0x48E1ECFD74A8094ALL))) & 0x41BA6E370192B274)
        + 0x20DD371B80C9593ALL) ^ v137;
  unint64_t v150 = v146 ^ v149;
  unint64_t v151 = v146 ^ v149 ^ 0xAA22108BED672870;
  unint64_t v152 = v144 ^ v135 ^ v148;
  *((void *)&v119 + 1) = v143 ^ v146 ^ 0x1877DA25;
  *(void *)&long long v119 = v143 ^ v146 ^ 0x425764BB40000000;
  uint64_t v153 = v119 >> 30;
  *((void *)&v119 + 1) = v146 ^ v149 ^ 0x7DDFA;
  *(void *)&long long v119 = v146 ^ v149 ^ 0x3DD4B76E1B880000;
  uint64_t v154 = ((v143 ^ v146) << 25) ^ 0x76B0EFB44A000000;
  unint64_t v155 = v144 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v144 & 0x2011531CB0A0EE4 | (v144 << 58));
  unint64_t v156 = v153 ^ ((v143 ^ v146) >> 61 << 34) ^ 0x84F57132E3442245;
  uint64_t v157 = (v149 >> 41) ^ 0x6D72DC;
  uint64_t v158 = (v119 >> 19) ^ (v151 << 36) ^ (v151 >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v159 = v150 ^ 0x94056143C9CB9A13 ^ (v158 - ((2 * v158) & 0x53A3AC5BA4888FD2) - 0x562E29D22DBBB817);
  unint64_t v160 = ((v144 >> 1) & 0x80000000000 ^ 0xAC3F3D39A7D375FELL) - 0x200000000001003ALL;
  uint64_t v161 = __ROR8__(v156, 34);
  unint64_t v162 = v155 ^ (v144 << 63);
  *((void *)&v119 + 1) = v149 ^ 0xD;
  *(void *)&long long v119 = v149 ^ 0xDAE5B8581E031580;
  uint64_t v163 = v149 ^ 0x998320DB623363E9 ^ ((v119 >> 7) - ((2 * (v119 >> 7)) & 0x86CD3106F860ECC8) + 0x436698837C307664);
  uint64_t v164 = (v161 ^ (v147 >> 39) ^ 0x84AEC9) + v154;
  uint64_t v165 = v161 & v154;
  uint64_t v166 = v163 & v157;
  uint64_t v167 = v163 + v157;
  uint64_t v168 = v164 - 2 * v165;
  unint64_t v169 = (v162 + 0x4463513E3BB2EF63 - ((2 * v155) & 0x88C6A27C7765DEC6)) ^ v160 ^ 0xC85C64079C609AA7;
  BOOL v170 = v105 == 0x7809200909112110;
  unint64_t v171 = v169 ^ 0x3B9CAEC1C44D109CLL;
  if (v170) {
    unint64_t v171 = v160 ^ 0xC85C64079C609AA7;
  }
  uint64_t v172 = v168 ^ (8 * v147);
  uint64_t v173 = v160 & 0x80000000000;
  uint64_t v174 = v169 + 2 * ((v171 ^ 0x4463513E3BB2EF63) & v155) + 0xF30CC6BA82D53F3;
  uint64_t v175 = v167 - 2 * v166;
  if ((v173 & v162) != 0) {
    unint64_t v176 = ((v162 - v173) ^ 0x9F3FCCFFFE6FDBF3) + 0x6FF0FF6BA9BD7800 + ((2 * (v162 - v173)) & 0x3E7F99FFFCDFB7E6);
  }
  else {
    unint64_t v176 = v174;
  }
  unint64_t v177 = v175 ^ (v149 << 23);
  unint64_t v178 = v152 ^ (v152 >> 10) ^ (v152 >> 17) ^ (v152 << 47) ^ (v152 << 54);
  unint64_t v179 = v177 ^ v178;
  *((void *)&v180 + 1) = v176 + 0x10CF339457D2AC0DLL;
  *(void *)&long long v180 = v176 - 0xF30CC6BA82D53F3;
  unint64_t v181 = __ROR8__(__ROR8__(v144, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v180 >> 61), 3) ^ (v144 >> 6);
  unint64_t v182 = v172 ^ 0xAA6A2D4BA2838D66;
  *(void *)&long long v180 = __ROR8__(__ROR8__(v177, 57) ^ __ROR8__(v159, 57) ^ 0x7979B12A27C8671DLL, 7);
  unint64_t v183 = v181 ^ v172 ^ 0xAA6A2D4BA2838D66;
  unint64_t v184 = v183 ^ 0xC341B7A7BB59AAAALL;
  unint64_t v185 = (v183 ^ 0xC341B7A7BB59AAAALL) & (v172 ^ 0x5595D2B45D7C7299);
  uint64_t v186 = (v183 ^ 0x3CBE485844A65555) & (v178 ^ 0x5156C560131506D7) ^ v182;
  *((void *)&v180 + 1) = v180 ^ 0x16FDF2E892CF90CELL;
  uint64_t v187 = v180 ^ 0x16FDF2E892CF90CELL ^ v185;
  unint64_t v188 = v184 ^ (v177 ^ 0x2C0F018AC6800000) & (v178 ^ 0xAEA93A9FECEAF928);
  unint64_t v189 = (v180 ^ 0x16FDF2E892CF90CELL) & (v179 ^ 0x82A63B152A6AF928);
  unint64_t v190 = (__ROR8__((v180 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v182 ^ v179;
  unint64_t v191 = v190 ^ v187;
  unint64_t v192 = v190 ^ v187 ^ 0x7D59C4EAD59506D7;
  unint64_t v193 = v186 ^ v187;
  unint64_t v194 = v188 ^ 0x6DC4FB0BD4FFFF44;
  uint64_t v195 = v188 ^ 0x616B258C5FF13C26;
  unint64_t v196 = ((v189 ^ v188) - ((2 * (v189 ^ v188)) & 0x886D79762FF5C5CELL) + 0x4436BCBB17FAE2E7) ^ v178;
  *((void *)&v180 + 1) = v191 ^ 0x3D2C8;
  *(void *)&long long v180 = v191 ^ 0x7465E7A9CEE00000;
  unint64_t v197 = __ROR8__(__ROR8__(v195, 27) ^ 0x61D86C4195FBD0F1, 37);
  uint64_t v198 = v193 ^ (v193 >> 39) ^ (8 * v193) ^ (v193 << 25) ^ (v193 >> 61);
  uint64_t v199 = (v180 >> 19) ^ (v192 << 36) ^ (v192 >> 28) ^ 0xB76D41F000000000;
  uint64_t v200 = (v199 - ((2 * v199) & 0x45824892FE30B23ELL) + 0x22C124497F18591FLL) ^ v191;
  *((void *)&v180 + 1) = v190 ^ 0x24552634586;
  *(void *)&long long v180 = v190 ^ 0xF8C29C0000000000 ^ (((v190 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v190 << 57) ^ 0xC00000000000000)) & 0x5000000000000000)
                                                  - 0x57D1106650DCB54ELL);
  uint64_t v201 = ((v198 ^ 0xABCF8FE7C463E5DLL)
        + (v194 ^ (v194 >> 1) ^ (v197 << 58))
        - 2 * ((v198 ^ 0xABCF8FE7C463E5DLL) & (v194 ^ (v194 >> 1) ^ (v197 << 58)))) ^ ((v197 >> 6) | (v197 << 63));
  uint64_t v202 = __ROR8__(__ROR8__(v190, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0xE3EC4CEF68E2B744 ^ (v180 >> 42), 22);
  unint64_t v203 = v196 ^ (v196 >> 10) ^ (((v196 << 54) ^ (v196 << 47)) & 0xFFFF800000000000 | (v196 >> 17));
  uint64_t v204 = v203 ^ 0x1F7778BCE93ADC8CLL;
  if (v225) {
    unint64_t v205 = v202 ^ 0xDD74CA3F78583B7ELL;
  }
  else {
    unint64_t v205 = 0x228B35C087A7C481;
  }
  unint64_t v206 = v202 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v190, 41) ^ v205 & v202;
  unint64_t v207 = v200 ^ v206 ^ 0xA8D5FAC9F8BF0D11;
  unint64_t v208 = ((v206 ^ 0xA8D5FAC9F8BF0D11)
        + 0x2923575A240D351FLL
        - 2 * ((v206 ^ 0xA8D5FAC9F8BF0D11) & 0x2923575A240D353FLL ^ v206 & 0x20)) ^ v204;
  unint64_t v209 = (v206 ^ 0xA8D5FAC9F8BF0D11) & (v203 ^ 0xC9ABD01932C8166CLL);
  unint64_t v210 = v207 ^ 0x56A4C3E02239BFE6 ^ v201 & (v198 ^ 0xF543070183B9C1A2);
  unint64_t v211 = v208 ^ (v207 ^ 0xA95B3C1FDDC64019) & (v198 ^ 0xABCF8FE7C463E5DLL);
  uint64_t v212 = (v203 ^ 0x36542FE6CD37E993) & ~v201;
  unint64_t v213 = v209 ^ v201;
  unint64_t v214 = ((v210 ^ v212) - ((2 * (v210 ^ v212)) & 0x7EB685AC0FA56370) - 0x40A4BD29F82D4E48) ^ v198;
  uint64_t v215 = v213 ^ v204 ^ (((v207 ^ 0x56A4C3E02239BFE6) & ~v208)
                      + 0x2923575A240D351FLL
                      - ((2 * ((v207 ^ 0x56A4C3E02239BFE6) & ~v208)) & 0x5246AEB4481A6A3ELL));
  unint64_t v216 = v213 ^ (v213 << 58) ^ ((v213 >> 1) ^ (v213 >> 6) | ((unint64_t)~v213 << 63));
  unint64_t v217 = v211 ^ 0xA14FE37EBDECC938 ^ (((v211 << 57) ^ 0xAE00000000000000)
                                      - ((2 * ((v211 << 57) ^ 0xAE00000000000000)) & 0xCFFFFFFFFFFFFFFFLL)
                                      - 0x19842DBB5D381E91);
  uint64_t v218 = (v211 >> 41) ^ 0x239A18;
  if (a32 > 0x3C301F98 != (a38 - 1453129052) < 0xC3CFE067) {
    BOOL v219 = a32 > 0x3C301F98;
  }
  else {
    BOOL v219 = a38 - 1453129052 < a30;
  }
  unint64_t v220 = v217 & v218;
  unint64_t v221 = (v211 << 23) ^ (v211 >> 7) ^ (v217 | v218);
  *((void *)&v222 + 1) = v215 ^ 0x149E7;
  *(void *)&long long v222 = v215 ^ 0x29E1AB0124FE0000;
  int v223 = *(uint64_t (**)(void, BOOL, unint64_t, unint64_t, void, unint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (v40 ^ (62 * !v219)));
  return v223(v223, v219, v221, v216, v215 ^ __ROR8__(v215, 10) ^ (v222 >> 17), v220, *((void *)&v222 + 1), v214 ^ (8 * v214) ^ (v214 << 25) ^ (v214 >> 39) ^ (v214 >> 61), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1BCAFCD24@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(v4 + a1 + v5 + ((a3 - 585973506) & 0x22ED3DFDu)) = *(unsigned char *)(a2
                                                                         + a1
                                                                         + v5
                                                                         + ((a3 - 585973506) & 0x22ED3DFDu));
  return (*(uint64_t (**)(void))(v6 + 8 * ((239 * (a1 - 1 == a4)) ^ (a3 + 132))))();
}

void sub_1BCAFCD74()
{
}

uint64_t sub_1BCAFCDFC@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,arg38_1BCAFCDFC a38)
{
  *(_OWORD *)(a3 + (a4 + a2)) = *(_OWORD *)&a38.arr[4];
  return (*(uint64_t (**)(void))(v40 + 8
                                    * (((((a1 + v39 - 1920) & 0x1FFFFFFF0) == 16) * ((v38 + 161) ^ 0x462)) ^ v38)))();
}

uint64_t sub_1BCAFCE48@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return sub_1BCAFCE94(a2 - 0x7EC954F575262799, (a1 - 101), 0x3FD687F1269B902CLL, 1295460334, 0xF9BD788FFBEFFDCALL);
}

uint64_t sub_1BCAFCE94(void *a1, int a2)
{
  BOOL v15 = v10 > v7;
  uint64_t v16 = 4 * (v12 + v8);
  int v17 = v2 + v11 + (*(_DWORD *)(*v5 + v16) ^ v13);
  *(_DWORD *)(*a1 + v16) = v17 + v13 - (v9 & (2 * v17));
  int v18 = v12 + 1 + v4;
  LODWORD(v16) = v15 ^ (v18 < v3);
  BOOL v19 = v18 < v6;
  if (!v16) {
    BOOL v15 = v19;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * (v15 ^ a2 ^ 1)))();
}

uint64_t sub_1BCAFCF18()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1388
                                * ((((*v0 - 42) << ((v1 + 116) ^ 0x96)) & 0xF5AFD87C) + ((*v0 - 42) ^ 0x7AD7EC3E) == 2060971070)) ^ v1)))();
}

uint64_t sub_1BCAFCF80()
{
  LODWORD(STACK[0x54C]) = v1;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 - 152438116) & 0x91605FF ^ 0xCF) * (STACK[0x360] == 0)) ^ (v0 + 1921))))();
}

uint64_t sub_1BCAFCF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10
                                                              + 8
                                                              * ((((*(_DWORD *)(v9 + 48 * v11 + 36)
                                                                                + 1291597518) < 0x80000003)
                                                                * (v8 ^ (a8 - 1083) ^ (a8 + ((v8 - 988) | 0x102) - 483))) | v8)))(a1, a2, v12);
}

uint64_t sub_1BCAFCFF8()
{
  return sub_1BCAFD000();
}

uint64_t sub_1BCAFD000@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)(v4 + (335 - v5)) = *(void *)(a3 + (335 - v5) - 7);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 328) * (((v3 + a1) & a2) - 755)) ^ (v3 - 337))))();
}

uint64_t sub_1BCAFD044@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  uint64_t v8 = 4 * (v4 - 313388984);
  unsigned int v9 = *(_DWORD *)(v6 + 4 * (v4 - 313388985));
  int v10 = (a3 + ((v9 >> 30) ^ 1) + 2 * (((v9 >> 30) ^ 1 | a2) ^ (v9 >> 30)) + 18) ^ v9;
  int v11 = ((a3 + 1566083941 * v10 - ((-1162799414 * v10) & 0x8769BFA4)) ^ *(_DWORD *)(v6 + v8)) - v4;
  *(_DWORD *)(v6 + v8) = v11 - ((2 * v11 + 626777968) & 0x8769BFA4) + 1449316234;
  unint64_t v12 = 235795823
      * ((0x3AE409D8517B98FELL - ((v7 - 144) | 0x3AE409D8517B98FELL) + ((v7 - 144) | 0xC51BF627AE846701)) ^ 0xCDAB4CD93A292E58);
  *(_DWORD *)(v7 - 104) = v12 + a4 - 1272076807 + 62;
  *(_DWORD *)(v7 - 120) = ((a4 - 1272076807) ^ 0x3D) + v12;
  *(_DWORD *)(v7 - 116) = v12;
  *(_DWORD *)(v7 - 140) = (a4 - 1272076807) ^ v12;
  *(_DWORD *)(v7 - 136) = v12 + a4 - 239616346;
  *(void *)(v7 - 128) = v12 + 2909582868u;
  *(void *)(v7 - 112) = (v4 - 1698773411) ^ v12;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (a4 ^ (a1 + 2053))))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v7 - 144)))(v13);
}

uint64_t sub_1BCAFD1C4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((47 * (v0 > ((4 * v1) ^ 0x1CC0u) - 762)) ^ (v1 - 430))))();
}

uint64_t sub_1BCAFD20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unsigned int v33 = v31 + ((HIDWORD(a17) + 1585152858) & 0xA18475FB ^ 0x405E0EF);
  if (v33 <= 0x40) {
    int v34 = 64;
  }
  else {
    int v34 = v33;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((43 * ((-v29 - 67493893 - v30 + v34) > 0xE)) ^ HIDWORD(a17))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1BCAFD29C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a2 + (v6 + a3 + 1)) = *(unsigned char *)(v8
                                                          + (((v3 - 674) ^ 0xFFFFFFC0) & (a1 + v5 + 64)));
  return (*(uint64_t (**)(void))(v7 + 8 * (v3 ^ (1660 * ((a1 + v4 + 65) < 4)))))();
}

uint64_t sub_1BCAFD36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  HIDWORD(a17) = -1880706817;
  int v29 = *(_DWORD *)(a2 + 4);
  unsigned int v30 = 628203409 * ((-866321758 - (&a20 | 0xCC5CFAA2) + (&a20 | 0x33A3055D)) ^ 0xB12B096E);
  a25 = *(void *)(a2 + 8);
  a26 = a14;
  LODWORD(a22) = v27 - v30 + 980;
  HIDWORD(a22) = 262867000 - v30 + v29;
  a20 = a15;
  a21 = a13;
  a23 = a16;
  unint64_t v32 = __PAIR64__(v26, a8);
  (*(void (**)(uint64_t *))(v28 + 8 * (v27 ^ 0x80C)))(&a20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, void, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((a24 == 984896845) * (402 * (v27 ^ 0x88) - 595)) ^ v27)))(200, a2, 3215380798, 1079586638, 1854503561, &off_1F16F9FD0, a7, v32, a9, v32, a2, a7, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_1BCAFD488()
{
}

uint64_t sub_1BCAFD4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  *(unsigned char *)(*v19 + ((v17 - 904012882) & 0x35E222DB ^ (a7 + 23)) + v16) = 0;
  BOOL v20 = v16 - 1338151901 < (a16 - 624038912);
  if ((a16 - 624038912) < 0xDEC5C33D != (v16 - 1338151901) < 0xDEC5C33D) {
    BOOL v20 = (a16 - 624038912) < 0xDEC5C33D;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * (v17 ^ (30 * !v20))))();
}

void sub_1BCAFD540()
{
}

void sub_1BCAFD5F4()
{
  *(_DWORD *)(v2 - 192) = 1225351577 * (((v2 - 192) & 0x57DCECD1 | ~((v2 - 192) | 0x57DCECD1)) ^ 0xD6DC891C)
                        + 2138962864
                        + v0
                        + 430;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 2091)))(v2 - 192);
  *(unsigned char *)(v2 - 160) = (51 * ((~(v2 + 64) & 0xE6 | (v2 + 64) & 0x19) ^ 0x31)) ^ 0x26;
  *(void *)(v2 - 184) = STACK[0x278];
  *(void *)(v2 - 168) = STACK[0x270];
  *(_DWORD *)(v2 - 192) = (v0 + 1252) ^ (1224239923 * ((~(v2 - 192) & 0xC031CAE6 | (v2 - 192) & 0x3FCE3519) ^ 0x32823731));
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x86D)))(v2 - 192);
  STACK[0x360] = 0;
  LODWORD(STACK[0x2E4]) = 66574141;
  JUMPOUT(0x1BCAFD6ECLL);
}

uint64_t sub_1BCAFD738@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((STACK[0x408] - 36) ^ (32 * (((STACK[0x408] - 611) & a1) != 0)))))();
}

uint64_t sub_1BCAFD75C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v71 = (((~v68 & 0x9EB8CD50) - (~v68 | 0x9EB8CD51)) ^ 0xA158408) * v67;
  *(_DWORD *)(v70 - 184) = a1 - v71;
  *(void *)(v70 - 176) = a63;
  *(_DWORD *)(v70 - 168) = v71 + v65 - 65;
  *(void *)(v70 - 160) = a64;
  *(void *)(v70 - 192) = 0xD7CDE9D8B19902BLL;
  uint64_t v72 = (*(uint64_t (**)(uint64_t))(v69 + 8 * (v65 + 1997)))(v70 - 192);
  int v73 = *(_DWORD *)(v70 - 152);
  STACK[0x4E8] = v64;
  return (*(uint64_t (**)(uint64_t, __n128))(v69
                                                    + 8
                                                    * (int)(((v73 == v66) * (((v65 + 1644148655) & 0x9E004A66) + 763)) ^ v65)))(v72, (__n128)0);
}

uint64_t sub_1BCAFD83C(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ (v1 == v2))))();
}

uint64_t sub_1BCAFD854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(_DWORD *)(v19 - 112) = v18
                         + 535753261 * ((((v19 - 136) | 0xA032B86B) - ((v19 - 136) & 0xA032B86B)) ^ 0xAAC6B644)
                         + 1046;
  *(void *)(v19 - 136) = a15;
  *(void *)(v19 - 128) = a14;
  *(void *)(v19 - 120) = a12;
  *(void *)(v19 - 104) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v18 + 1352)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((481
                                              * (((((v18 - 114) | 0x159)
                                                 + v15
                                                 + (((v17 - 1098794535) >> 1) ^ 0xE17FDFBF)
                                                 + ((v17 - 1098794535) & 0xC2FFBF7E)) & a11) != 0)) ^ v18)))(v20);
}

void sub_1BCAFD934(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_1BCAFD9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21)
{
  int v26 = (((v25 - 144) & 0x5969F8ED | ~((v25 - 144) | 0x5969F8ED)) ^ 0x460A6539) * v22;
  *(void *)(v25 - 136) = a21;
  *(void *)(v25 - 128) = v24;
  *(_DWORD *)(v25 - 144) = (v21 + 1265) ^ v26;
  *(_DWORD *)(v25 - 140) = a20 - v26 + ((v21 + 701) ^ 0xE59689EF);
  (*(void (**)(uint64_t))(v23 + 8 * (v21 + 1543)))(v25 - 144);
  JUMPOUT(0x1BCAFDA30);
}

void sub_1BCAFDA90(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  JUMPOUT(0x1BCAFDAA8);
}

void sub_1BCAFDB40(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x781B11C067843F5ALL) = (*(_DWORD *)(a1 - 0x781B11C067843F5ALL) ^ 0xDB440A9B)
                                         - 616297829
                                         - ((2 * (*(_DWORD *)(a1 - 0x781B11C067843F5ALL) ^ 0xDB440A9B) + 2) & 0xB6881536)
                                         + 1;
}

uint64_t sub_1BCAFDB88(uint64_t a1)
{
  return sub_1BCAFDB9C(a1, *v1);
}

uint64_t sub_1BCAFDB9C(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v2 + 1467)))(*v6, a2, *(_DWORD *)(v3 - 0x5B51E979A7EFF0C5) + ((v2 + 87) ^ 0x97576D66));
  *unsigned int v9 = v8;
  *(_DWORD *)(v3 - 0x5B51E979A7EFF0C5) = v7;
  _DWORD *v5 = v7;
  return result;
}

void sub_1BCAFDC18()
{
}

void sub_1BCAFDC9C()
{
}

uint64_t sub_1BCAFDCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 120) = a25;
  *(void *)(v28 - 112) = a25;
  *(_DWORD *)(v28 - 104) = ((v26 ^ 0x47C) + 1812) ^ (((((v28 - 144) | 0xE7E20735)
                                                     - (v28
                                                      - 144)
                                                     + ((v28 - 144) & 0x181DF8C8)) ^ 0x549FB761)
                                                   * v25);
  *(void *)(v28 - 136) = a13;
  *(void *)(v28 - 128) = a23;
  *(void *)(v28 - 144) = a24;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v26 ^ 0xCE4)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((((a22 - 810746374) > 0x7FFFFFFE)
                                              * ((((17 * (v26 ^ 0x48C)) ^ 0x200) + 95) ^ 0x135)) ^ (17 * (v26 ^ 0x48C)
                                                                                                  + 407))))(v29);
}

uint64_t sub_1BCAFDD78@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  *(unsigned char *)(v5 + (a1 - 865724784)) = *(unsigned char *)(v4 + (a1 - 865724784));
  return (*(uint64_t (**)(void))(v3 + 8
                                   * (((a1 - 1 != a3) * ((78 * (a2 ^ 0x412) - 816) ^ 0x72F)) ^ (78 * (a2 ^ 0x412)))))();
}

void sub_1BCAFDDC8(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  a5 = (v8 + 196) ^ (108757529
                   * ((&a3 - 1176851783 - 2 * ((unint64_t)&a3 & 0xB9DAAAB9)) ^ 0x5946C892));
  a3 = v5;
  a4 = v6;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 ^ 0x9E1)))(&a3);
  *int v7 = (v8 ^ 0x6844FC65) - *v7;
  JUMPOUT(0x1BCAC79BCLL);
}

uint64_t sub_1BCAFDE44()
{
  int v5 = 535753261 * ((((v4 - 120) | 0xE290E452) - ((v4 - 120) & 0xE290E452)) ^ 0xE864EA7D);
  *(void *)(v4 - 120) = v3;
  *(_DWORD *)(v4 - 112) = v5 + (v2 ^ 0x1C5) + v0 + 781132786;
  *(_DWORD *)(v4 - 108) = v5 + v2 + 205;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0xBD5)))(v4 - 120);
  return sub_1BCAFDEC4(v6);
}

uint64_t sub_1BCAFDEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v25 - 120) = (v22 - 83) ^ (((2 * (((v25 - 120) ^ 0x83A470D) & 0x166438A5)
                                         - ((v25 - 120) ^ 0x83A470D)
                                         - 375666854) ^ 0x8C55985E)
                                       * v24);
  *(void *)(v25 - 112) = a19;
  *(void *)(v25 - 104) = a21;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 + 1522)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (int)(((*(_DWORD *)(v25 - 116) > v21)
                                                   * (((v22 + 550991164) & 0xDF2888ED ^ 0xFFFFFE46) + 3 * (v22 ^ 0x224))) ^ v22)))(v26);
}

void sub_1BCAFDF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v24 = ((((v23 - 144) | 0x2D06D1B1) - ((v23 - 144) & 0x2D06D1B1)) ^ 0xCD9AB39A) * a11;
  *(void *)(v23 - 136) = a10;
  *(void *)(v23 - 128) = v21;
  *(_DWORD *)(v23 - 144) = (v22 + 188) ^ v24;
  *(_DWORD *)(v23 - 140) = a20 - v24 + 585925236 + v22 - 183;
  (*(void (**)(uint64_t))(v20 + 8 * (v22 ^ 0x1D2)))(v23 - 144);
  JUMPOUT(0x1BCAFE000);
}

uint64_t sub_1BCAFE054@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22)
{
  int v27 = v22 < v23;
  *(&a22 + (a1 - 1779522747)) = *(unsigned char *)(v25 + (a5 + a3)) ^ (a2 - 42);
  unsigned int v28 = a5 + 1 + a4;
  int v29 = v27 ^ (v28 < v24);
  BOOL v30 = v28 < v22;
  if (!v29) {
    int v27 = v30;
  }
  return (*(uint64_t (**)(void))(v26 + 8 * (((v27 << 7) | (v27 << 8)) ^ a2)))((a1 + 1));
}

uint64_t sub_1BCAFE0C8()
{
  STACK[0x268] = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((27 * (((((v1 ^ 0xEF) - 1473) ^ (v0 == 1700775942)) & 1) == 0)) | v1)))();
}

void sub_1BCAFE124()
{
}

uint64_t sub_1BCAFE19C()
{
  return sub_1BCAFE1E4((21 * (v0 ^ 0x2D7)) ^ 0x442u);
}

uint64_t sub_1BCAFE1E4@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(a12 + 4 * (v12 + a2)) = *(_DWORD *)(*v14 + 4 * (v12 + a2));
  BOOL v20 = v12 + v16 > v17 || v12 + v16 < v15;
  return (*(uint64_t (**)(void))(v18 + 8 * ((v20 * a1) ^ (v13 + 32))))();
}

void sub_1BCAFE228()
{
}

uint64_t sub_1BCAFE238()
{
  LODWORD(STACK[0x2E4]) = STACK[0x57C];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 - 1848436555) < 2) ^ (((v0 - 36) | 1) - 30)) & 1)
                                * ((((v0 - 36) | 0x201) ^ 0x223) - 54)) | (v0 - 36) | 0x201)))();
}

void sub_1BCAFE29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned char *a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,unsigned char *a26,uint64_t a27,uint64_t a28,unsigned char *a29,unsigned char *a30,unsigned char *a31,uint64_t a32,unsigned char *a33,uint64_t a34,unsigned char *a35,unsigned char *a36,unsigned char *a37,unsigned char *a38)
{
  uint64_t v43 = ((a4 ^ 0x391F2836E9CAA771)
       - 0x7AEB0F196EFD9DF6
       - (((a4 ^ 0x391F2836E9CAA771) << (((v41 - 62) | 6u) - 93)) & 0xA29E1CD2204C414)) ^ v40;
  unint64_t v44 = v39 ^ (((a11 - 1029509921) | (unint64_t)(a12 << 32))
             - 0x30175C952323D001
             - ((2 * ((a11 - 1029509921) | (unint64_t)(a12 << 32))) & 0x9FD146D5B9B85FFELL));
  unint64_t v45 = v44 ^ 0xA173397C065C8DEALL;
  uint64_t v46 = v44 ^ 0x5E8CC683F9A37215;
  uint64_t v47 = ((v44 ^ 0x5E8CC683F9A37215) + 0xB9F474E266E1188 - ((2 * (v44 ^ 0x5E8CC683F9A37215)) & 0x173E8E9C4CDC2310)) ^ v38;
  uint64_t v48 = v47 ^ 0x629A61E2FE92CDE4;
  unint64_t v49 = v43 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v50 = v43 ^ 0x8ABB7B075CE8A96ELL ^ (v47 ^ 0x629A61E2FE92CDE4) & v45;
  unint64_t v51 = (v47 ^ 0x9D659E1D016D321BLL) & (v42 ^ 0x9A1F437E838A1A17) ^ v46 ^ v50;
  *((void *)&v52 + 1) = v51 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v52 = v51 ^ 0x8000000000000000;
  uint64_t v53 = v51 ^ __ROR8__(v51, 39) ^ (v52 >> 61);
  uint64_t v54 = (v43 ^ 0x754484F8A3175691) & v46;
  uint64_t v55 = v50 ^ 0xF38BFF733C051F6;
  unint64_t v56 = a4 ^ 0x391F2836E9CAA771 ^ v42 ^ 0x9A1F437E838A1A17;
  unint64_t v57 = v54 ^ v56;
  uint64_t v58 = (v54 ^ v56) & 0x200000000;
  BOOL v59 = (v58 & v55) == 0;
  uint64_t v60 = v58 | 0x5F7AC09197EF6F73;
  if (!v59) {
    uint64_t v60 = 0xBEF581232FDEDEE6 - v60;
  }
  unint64_t v61 = ((v55 + v60 - 0x5F7AC09197EF6F73) ^ (0x5F7AC09197EF6F73 - (v55 + v60)) ^ ((v57 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v55 + v60 - 0x5F7AC09197EF6F73) ^ v57 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v57 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v62 = v61 - ((2 * v61) & 0xF9A7894483A23A26) + 0x7CD3C4A241D11D13;
  *((void *)&v63 + 1) = v62 ^ 0x11D13;
  *(void *)&long long v63 = v62 ^ 0x7CD3C4A241D00000;
  uint64_t v64 = ((v63 >> 19) - ((2 * (v63 >> 19)) & 0xF9A7894483A23A26) + 0x7CD3C4A241D11D13) ^ v62;
  uint64_t v65 = (v57 << 23) ^ (v57 >> 7) ^ ((v57 >> 41) | (v57 << 57)) ^ 0x1EC655AF97FB0312;
  unint64_t v66 = v57 ^ 0x9D614AD2E7359E86 ^ (v65 - ((2 * v65) & 0x54B0DA4B6EF4BCE8) + 0x2A586D25B77A5E74);
  unint64_t v67 = v66 ^ (v62 << 36) ^ (v64 & 0x88A7E47BC54E7E29 ^ ((v62 >> 28) ^ 0x7CD3C4A24) & 0xBC54E7E29 | v64 & 0x77581B843AB181D6 ^ ((v62 >> 28) ^ 0x7CD3C4A24) & 0x43AB181D6);
  unint64_t v68 = v49 & ~v56;
  unint64_t v69 = v48 ^ v56 & (v42 ^ 0x65E0BC817C75E5E8);
  unint64_t v70 = v69 ^ v42 ^ 0x9A1F437E838A1A17 ^ v68;
  unint64_t v71 = ((v70 >> 10) ^ (v70 >> 17) | (v70 << 54)) ^ 0xF5EC3F377C10F093;
  unint64_t v72 = (v71 - ((2 * v71) & 0x88C6DDD86BCB2504) + 0x44636EEC35E59282) ^ v70;
  unint64_t v73 = (v72 ^ 0xF5FC8CD81E70F555) & 0x4C1D4E44A4B3031DLL ^ ((v70 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | (v72 ^ 0xF5FC8CD81E70F555) & 0xB3E2B1BB5B4CFCE2 ^ ((v70 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v74 = v73 - 2 * (v73 & 0x6FD718785C6DAC3FLL ^ v72 & 2) - 0x1028E787A39253C3;
  unint64_t v75 = v74 ^ (v66 - ((2 * v66) & 0xDFAE30F0B8DB587ALL) - 0x1028E787A39253C3);
  uint64_t v76 = v67 ^ 0x1D11D13000000000;
  *((void *)&v63 + 1) = ~v69;
  *(void *)&long long v63 = v69 ^ 0x92CFC162FD513142;
  unint64_t v77 = v69 ^ 0xE0385E2EB749E2DFLL ^ (((v69 << 58) ^ 0xC00000000000000) - (v69 >> 2 << 61) + 0x72F79F4C4A18D39CLL);
  uint64_t v78 = (v77 - ((2 * v77) & 0xB4FD1BD840C0300) + 0x5A7E8DEC2060180) ^ (v63 >> 1) ^ ((v69 ^ 0x92CFC162FD513166) >> (v57 & 6 ^ 2) >> (v57 & 6 ^ 4)) ^ v53 ^ 0x7609013B211BB0C5;
  unint64_t v79 = (v74 ^ 0x1028E787A39253C2) & v66 ^ v78;
  unint64_t v80 = v79 ^ v74 ^ (((v67 ^ 0x1D11D13000000000) & ~v75)
                   - 0x1028E787A39253C3
                   + (~(2 * ((v67 ^ 0x1D11D13000000000) & ~v75)) | 0x2051CF0F4724A785)
                   + 1);
  uint64_t v81 = ((v80 >> 10) & 0x2000000000000 ^ 0x72B7FEF7ED4EE3E5) + 2 * ((v80 >> 10) & 0x2000000000000);
  BOOL v59 = ((v81 - 0x72B7FEF7ED4EE3E5) & (v80 ^ 0x28E000000000000)) == 0;
  unint64_t v82 = (v67 ^ 0xE2EE2ECFFFFFFFFFLL) & (v53 ^ 0x73AEE9E5E31DB145) ^ v75;
  unint64_t v83 = ((v82 >> 41) ^ (v82 >> 7) | (v82 << 57)) ^ (v82 << 23) ^ 0xF774B04353CE1CF4;
  unint64_t v84 = v83 - ((2 * v83) & 0xE3A044E5A21139D4) - 0xE2FDD8D2EF76316;
  uint64_t v85 = v81 - 0x10242A4204482000;
  unint64_t v86 = 0xD54BD3ADD655A7CALL - v81;
  if (!v59) {
    uint64_t v85 = v86;
  }
  unint64_t v87 = (v80 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v80 ^ 0x28FA59BDD48D0B6) - 0x6293D4B5E906C3E5 + v85);
  uint64_t v88 = ((v87 >> 38) & 0x2A35FE4) + (v87 >> 39) - 2 * ((v87 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v89 + 1) = v80 ^ 0xD0B6;
  *(void *)&long long v89 = v80 ^ 0x28FA59BDD480000;
  uint64_t v90 = (((v88 << 39) ^ (v80 << 54)) & 0xFFFFFF8000000000 | ((v88 ^ (v87 << 25)) >> 25)) ^ (v89 >> 17);
  unint64_t v91 = v76 ^ v78 & (v53 ^ 0x8C51161A1CE24EBALL);
  unint64_t v92 = (((v74 ^ 0xEFD718785C6DAC3DLL) & ~v78)
       - ((2 * ((v74 ^ 0xEFD718785C6DAC3DLL) & ~v78)) & 0xB4FD1BD840C0300)
       + 0x5A7E8DEC2060180) ^ v53 ^ 0x7609013B211BB0C5 ^ v91;
  unint64_t v93 = (8 * v92) ^ (v92 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(a19
                                                                                     + (((v92 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v92 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v92 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v94 = v92 ^ 0x3473806260D94D3FLL ^ (v93 - ((2 * v93) & 0xC66882690F19C7D2) + 0x63344134878CE3E9);
  unint64_t v95 = v94 + ((v92 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v94 & ((v92 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v96 = v84 ^ v82;
  unint64_t v97 = v82 ^ v91;
  *(void *)&long long v89 = __ROR8__(__ROR8__(v97 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v98 = v97 ^ 0xAC7C0FF4012565E3 ^ ((v97 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v89 >> 28) ^ ((void)v89 << 36) ^ ((void)v89 << 45) ^ v96;
  *((void *)&v89 + 1) = v98 ^ 0x1AF;
  *(void *)&long long v89 = v98 ^ 0x6BE81E8A5088E800;
  unint64_t v99 = v95 - ((2 * v95) & 0xAA964A2DEFDF0DD8) + 0x554B2516F7EF86ECLL;
  unint64_t v100 = v90 ^ 0x8557F9309BB51A6BLL;
  unint64_t v101 = v90 ^ 0x8557F9309BB51A6BLL ^ v96;
  unint64_t v102 = v101 ^ 0x6BE81E8A5088E9AFLL ^ (v99 ^ 0x554B2516F7EF86ECLL) & ((((unint64_t)(v89 >> 9) ^ 0x284B28057C49B8D1) >> (v69 & 0x37 ^ 3) >> (v69 & 0x37 ^ 0x34)) ^ (((unint64_t)(v89 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL);
  *((void *)&v89 + 1) = v102 ^ 0x118501E2B14;
  *(void *)&long long v89 = v102 ^ 0x26974A0000000000;
  uint64_t v103 = v102 ^ 0x1DCBE4EF48D1C7BFLL ^ (((v89 >> 41) ^ (v102 << 57) ^ 0x2800000000000000)
                                      - 2
                                      * (((v89 >> 41) ^ (v102 << 57) ^ 0x2800000000000000) & 0x3B5CAFF718CFECBBLL ^ (v89 >> 41) & 0x10)
                                      + 0x3B5CAFF718CFECABLL);
  uint64_t v104 = v103 + ((v102 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v103 & ((v102 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v105 = (v79 >> 1) ^ (v79 >> 6) ^ (v79 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  uint64_t v106 = (v105 - ((2 * v105) & 0x697E071BD32B2A6CLL) + 0x34BF038DE9959536) ^ v79;
  unint64_t v107 = (v106 ^ 0x5BFA741240CA550CLL) & 0xF47FF077890F9720 ^ (v79 << 63) | (v106 ^ 0x5BFA741240CA550CLL) & 0xB800F8876F068DFLL;
  unint64_t v108 = (((v106 ^ 0x5BFA741240CA550CLL) & 0xF47FF077890F9720 ^ (v79 << 63)) & 0x554B2516F7EF86EDLL | (v106 ^ 0x5BFA741240CA550CLL) & 0x100050076E000CDLL) ^ v106 & 1;
  uint64_t v109 = (v101 ^ 0x6BE81E8A5088E9AFLL) & (v90 ^ 0x7AA806CF644AE594);
  unint64_t v110 = ((v101 ^ 0x9417E175AF771650) & (v98 ^ 0x6BE81E8A5088E9AFLL))
       - ((2 * ((v101 ^ 0x9417E175AF771650) & (v98 ^ 0x6BE81E8A5088E9AFLL))) & 0xBD4288929AFD019CLL);
  uint64_t v111 = v99 ^ (v107 - 2 * v108 + 0x554B2516F7EF86ECLL);
  unint64_t v112 = v109 ^ v111;
  uint64_t v113 = v109 ^ v111 ^ v100 ^ (v110 + 0x5EA144494D7E80CELL);
  *((void *)&v89 + 1) = v113 ^ 0x3F8;
  *(void *)&long long v89 = v113 ^ 0x2DD1E8211D4E4800;
  uint64_t v114 = v113 ^ 0x5EA144494D7E80CELL ^ ((v113 ^ 0x5EA144494D7E80CEuLL) >> 17) ^ (v89 >> 10) ^ ((v113 ^ 0x5EA144494D7E80CELL) << 47);
  uint64_t v115 = v104 + (v114 ^ 0x16EB95D00604E32ELL) - 2 * (v104 & (v114 ^ 0x16EB95D00604E32ELL));
  unint64_t v116 = v100 & ~v111;
  unint64_t v117 = v98 ^ 0x85C14B55DE65E5CELL ^ (((v99 ^ 0xAAB4DAE908107913) & v107)
                                     - ((2 * ((v99 ^ 0xAAB4DAE908107913) & v107)) & 0xDC52ABBF1DDA18C2)
                                     - 0x11D6AA207112F39FLL);
  unint64_t v118 = ((v117 ^ v116) - ((2 * (v117 ^ v116)) & 0xAA964A2DEFDF0DD8) + 0x554B2516F7EF86ECLL) ^ v99;
  *((void *)&v89 + 1) = v118 ^ 0x38FE43D2BCLL;
  *(void *)&long long v89 = v118 ^ 0x3278F80000000000;
  uint64_t v119 = (v89 >> 38) ^ (v118 >> 39 << 26) ^ 0xC258A8B62E885BC3;
  *((void *)&v89 + 1) = v112 ^ 0x548B80C;
  *(void *)&long long v89 = v112 ^ 0x7955EAEC48000000;
  unint64_t v120 = __ROR8__(v118, 61) ^ (v118 << 25) ^ __ROR8__(v119, 26);
  unint64_t v121 = (v112 >> 6) ^ (v112 >> 1) ^ ((((((v112 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (unint64_t)(v89 >> 27)) << 27) ^ (v112 << 63)) & 0xFFFFFFFFF8000000 | ((((v112 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (unint64_t)(v89 >> 27)) >> 37));
  unint64_t v122 = v120 ^ v121;
  unint64_t v123 = v120 ^ v121 ^ 0xC51AEF5B5CC303B1;
  unint64_t v124 = v115 & (v114 ^ 0xE9146A2FF9FB1CD1) ^ v123;
  unint64_t v125 = ((v124 >> 1) ^ (v124 >> 6) | (v124 << 63)) ^ (v124 << 58) ^ 0x82A267617DDD3C0DLL;
  uint64_t v126 = v124 ^ 0x77BED1E90371190BLL ^ (v125 - ((2 * v125) & 0x48C99FB4C79D3A62) - 0x5B9B30259C3162CFLL);
  unint64_t v127 = (v121 ^ 0x853759C940934A2BLL) + (v123 | v120 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v128 = v117 ^ v102;
  uint64_t v129 = (v128 >> 19) ^ (v128 << 36) ^ (v128 << 45) ^ 0x2A792D60982B22B5;
  uint64_t v130 = (v128 >> 28) ^ 0x6E04C1591;
  unint64_t v131 = v128 ^ 0xCF62F8430BA7512CLL ^ (v129 - ((2 * v129) & 0x42CC72343C19AE4CLL) - 0x5E99C6E5E1F328DALL);
  unint64_t v132 = (v131 & 0x26452CB7C950B7B6 ^ v130 & 0x7C950B7B6 | v131 & 0xD9BAD34836AF4849 ^ v130 & 0x836AF4849) ^ v104;
  unint64_t v133 = v127 & 1;
  unint64_t v134 = (v127 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v127) & 0x393F108FC6E378ECLL) + 0x1C9F8847E371BC76;
  if ((v133 & v132) != 0) {
    uint64_t v135 = v132 - v133 - ((2 * (v132 - v133)) & 0x393F108FC6E378ECLL) + 0x1C9F8847E371BC76;
  }
  else {
    uint64_t v135 = v132 ^ 0x1C9F8847E371BC76 ^ v133;
  }
  unint64_t v136 = v135 ^ v134;
  unint64_t v137 = (v122 ^ 0x3AE510A4A33CFC4ELL) & (v114 ^ 0x16EB95D00604E32ELL) ^ v120 ^ 0x402DB6921C50499ALL ^ v135 ^ v134;
  unint64_t v138 = ((8 * v137) ^ 0x12BB25DAC3BED128) & (v137 ^ 0x425764BB5877DA20) ^ __ROR8__(v137, 39) ^ (v137 ^ 0xF36BBA948C84E14FLL ^ (((v137 >> 61) ^ 2) - 2 * (((v137 >> 61) ^ 2) & 3 ^ (v137 >> 61) & 1) - 0x4EC321D02B0CC496) | (8 * v137) ^ 0x12BB25DAC3BED128);
  uint64_t v139 = (2 * v126) & 0x14D5178E91484D62;
  unint64_t v140 = (2 * v126) & 0x94D5178E91484D62;
  uint64_t v141 = v126 + 0x4A6A8BC748A426B1;
  unint64_t v142 = ((v138 ^ 0x3CDA647302208878 ^ (v141 - v140)) & 0xA9AD36174A77719DLL | (v138 ^ 0x3CDA647302208878 ^ (v141 - v139)) & 0x5652C9E8B5888E62)
       - 2
       * (((v138 ^ 0x3CDA647302208878 ^ (v141 - v140)) & 0x298D26154200409DLL | (v138 ^ 0x3CDA647302208878 ^ (v141 - v139)) & 0x402C9C800080E60) ^ (v138 ^ 0x3CDA647302208878 ^ (v141 - v140)) & 0x1D);
  uint64_t v143 = (v120 ^ 0x402DB6921C50499ALL) & ~v132 ^ v115;
  unint64_t v144 = ((v143 + (v143 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v143;
  unint64_t v145 = v144 - ((2 * v144) & 0xDD065EAE32736D2ELL) - 0x117CD0A8E6C64969;
  uint64_t v146 = (v145 & 0x10000000000000 ^ 0x7FF673FDFFDE3EFFLL) + 2 * (v145 & 0x10000000000000);
  uint64_t v147 = v146 + 0x98C020021C101;
  uint64_t v148 = v146 - 0x512114440020028;
  unint64_t v149 = 0xFADAD6B7BFBA7DD6 - v146;
  uint64_t v150 = (v145 >> 7) ^ 0x1DD065EAE32736DLL;
  if ((v147 & v150) == 0) {
    unint64_t v149 = v148;
  }
  unint64_t v151 = v145 & 0xFFEFFFFFFFFFFFFFLL ^ (v145 >> 41) ^ (v150 - 0x7AE462B9BFDC3ED7 + v149);
  unint64_t v152 = v124 ^ v114 ^ ((v132 & ~v115) - ((2 * (v132 & ~v115)) & 0x4D8C80ED98712DB6) + 0x26C64076CC3896DBLL);
  unint64_t v153 = (v152 & 0x1000000000 | (v152 << 47)) ^ v152 & 0xFFFFFFEFFFFFFFFFLL ^ ((v152 >> 10) ^ (v152 >> 17) | (v152 << 54));
  *((void *)&v154 + 1) = v153 ^ 0x255A489921;
  *(void *)&long long v154 = v153 ^ 0x26CD838000000000;
  uint64_t v155 = (v145 << 23) ^ (v145 << 57) ^ 0x6B0FB38C52CEF700 ^ v151;
  uint64_t v156 = v153 ^ 0x30DE1307E5D87EF3;
  uint64_t v157 = (v155 - 2 * (v155 & 0x161390A2BF90E7DALL ^ v151 & 8) + 0x161390A2BF90E7D2) ^ v153 ^ 0x30DE1307E5D87EF3;
  uint64_t v158 = (v142 + 0x2D8FEFDD42084EE0) ^ v157 & (__ROR8__((v154 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  unint64_t v159 = ((v158 ^ 0xBFB4EB2969084E5BLL) + 0x6DC4FB0BD4FFFF45) ^ ((v158 ^ 0xD2701022BDF7B11FLL) + 1);
  unint64_t v160 = v159 - ((2 * v159) & 0xAE3F5D68BEA0340ELL);
  uint64_t v161 = v158 ^ 0x7A9041691D5854E7;
  uint64_t v162 = (v160 + 0x571FAEB45F501A07) ^ v158 ^ 0x7A9041691D5854E7;
  unint64_t v163 = v162 - ((2 * v162 - 0x247609E856000178) & 0x978C3CE29D922A6ELL) - 0x4674E682DC36EB85;
  *((void *)&v154 + 1) = (v162 - ((2 * v162 - 1442840952) & 0x9D922A6E) + 600380539) ^ 0xFFFFFFF7;
  *(void *)&long long v154 = v163 ^ 0x4BC61E714EC91500;
  uint64_t v164 = ((v162 << 63) | 0x25E30F38A7648A9BLL) ^ (v163 >> 1) ^ (v154 >> 6);
  unint64_t v165 = (v164 + 0x4BC61E714EC91500 - ((2 * v164) & 0x978C3CE29D922A6ELL) + 55) ^ v163;
  uint64_t v166 = (v142 + 0x2D8FEFDD42084EE0) ^ 0x2D8FEFDD42084EE0;
  unint64_t v167 = (((2 * (v142 + 0x2D8FEFDD42084EE0)) ^ 0xA4E020457BEF623FLL) + v166) & (v153 ^ 0x26CD83A55A489921);
  unint64_t v168 = (v136 - ((2 * v136) & 0x901585247C0DCE4ELL) - 0x37F53D6DC1F918D9) ^ v143;
  unint64_t v169 = ((v168 ^ 0xC80AC2923E06E727) << 45) ^ ((v168 ^ 0xC80AC2923E06E727) << 36) ^ v155 ^ __ROR8__(((v168 << 34) & 0xC000000000000000 | ((v168 ^ 0xC80AC2923E06E727) >> 30)) ^ __ROR8__(v168 ^ 0xD831529A562CA27CLL ^ (((v168 >> 19) ^ 0xBFF8CAEF91DLL) - ((2 * ((v168 >> 19) ^ 0xBFF8CAEF91DLL)) & 0x2FDB3D8561A2) - 0x7832C812613D4F2FLL), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v170 = v169 ^ 0xE87B635F1624B3E6;
  unint64_t v171 = v166 & (v138 ^ 0x894F104BB57B5136) ^ v169 ^ 0xE87B635F1624B3E6;
  unint64_t v172 = v171 ^ v138 ^ 0x3CDA647302208878 ^ (v167 - ((2 * v167) & 0x94D5178E91484D62) + 0x4A6A8BC748A426B1);
  *((void *)&v154 + 1) = v172 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v154 = v172 ^ 0x6000000000000000;
  uint64_t v173 = v172 ^ __ROR8__(v172, 39) ^ (v154 >> 61);
  unint64_t v174 = ((v169 ^ 0x3D9656FDEA6A2FLL ^ -(uint64_t)(v169 ^ 0x3D9656FDEA6A2FLL) ^ ((v169 ^ 0xE87B635F1624B3E6)
                                                                              + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v138 ^ 0x76B0EFB44A84AEC9) ^ v157;
  unint64_t v175 = v174 ^ 0x2DB5B6AF87F64351 ^ ((v174 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v174 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v174 ^ 0x2DB5B6AF87F64351) >> 41) | ((v174 ^ 0x2DB5B6AF87F64351) << 57));
  uint64_t v176 = ((v170 & ~v157) - ((2 * (v170 & ~v157)) & 0x2C2721457F21CFA4) + 0x161390A2BF90E7D2) ^ v156;
  unint64_t v177 = (v176 - ((2 * v176) & 0xAE3F5D68BEA0340ELL) + 0x571FAEB45F501A07) ^ v161;
  unint64_t v178 = v177 ^ (v177 << 54) ^ (v177 << 47) ^ (v177 >> 10) ^ (v177 >> 17);
  unint64_t v179 = v174 ^ __ROR8__(__ROR8__(v171, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v180 = ((v179 >> 19) ^ (v179 >> 28) | (v179 << 45)) ^ 0x21278C61855392E3;
  uint64_t v181 = v179 ^ (v179 << 36) ^ v175 ^ (v180 - ((2 * v180) & 0x4322B6EA117030A0) + 0x21915B7508B81850);
  uint64_t v182 = v181 ^ 0x6BC7CF3BCF9116CLL;
  unint64_t v183 = (v181 ^ 0xF943830C4306EE93) & (v173 ^ 0xA9109542E9BBBCELL);
  unint64_t v184 = v178 ^ 0xE1C032814C0C4D2DLL;
  unint64_t v185 = v178 ^ 0xE1C032814C0C4D2DLL ^ (v175 - ((2 * v175) & 0x79D26C259FF1F200) + 0x3CE93612CFF8F900);
  unint64_t v186 = v183 ^ v185;
  unint64_t v187 = v165 & (v173 ^ 0xF56EF6ABD1644431) ^ v182;
  unint64_t v188 = v187 ^ v183 ^ v185;
  *((void *)&v154 + 1) = v188 ^ 0x62F93;
  *(void *)&long long v154 = v188 ^ 0x69309AC4CA80000;
  uint64_t v189 = (v188 >> 28) ^ 0x69309AC4;
  uint64_t v190 = v188 ^ 0xE27334A469AECEF1 ^ (((v154 >> 19) ^ (v188 << 36) ^ 0xCAE2F93000000000)
                                      - 2
                                      * (((v154 >> 19) ^ (v188 << 36) ^ 0xCAE2F93000000000) & 0x64E03D082500E17ELL ^ (v154 >> 19) & 0x1C)
                                      - 0x1B1FC2F7DAFF1E9ELL);
  uint64_t v191 = (v190 ^ -v190 ^ (v189 - (v190 ^ v189))) + v189;
  unint64_t v192 = v191 - 0x7AEB0F196EFD9DF6 - ((2 * v191) & 0xA29E1CD2204C414);
  LOBYTE(v171) = *(unsigned char *)(a25 + ((v191 + 10 - ((2 * v191) & 0x14)) ^ 0x4CLL));
  *a33 = ((unsigned __int16)(v191 + 25098 - ((2 * v191) & 0xC414)) >> 8) ^ 0x62;
  a23[5] = ((v171 ^ 0x94) >> 6) | (4 * (v171 ^ 0x94));
  uint64_t v193 = (v192 >> 12) & 0xF0 | (v192 >> 20) & 0xF;
  LOBYTE(v151) = ((v192 >> 12) & 0xF0 | (v192 >> 20) & 0xF) ^ 0xDE;
  *a35 = (*(unsigned char *)(a19 + (v193 ^ 0xDE)) ^ 0xA1)
       + (v193 ^ 0x6B)
       + (v193 ^ 0xFE)
       - 2 * (((v193 ^ 0x6B) + (v193 ^ 0xFE)) & (*(unsigned char *)(a19 + (v193 ^ 0xDE)) ^ 0xA1))
       - 122;
  unsigned __int8 v194 = *(unsigned char *)(a25 + (((v191 - 1862114806 - ((2 * v191) & 0x2204C414u)) >> 24) ^ 0xD7)) ^ 0x94;
  *a36 = (v194 >> 6) | (4 * v194);
  v173 ^= 0x2E8CE06EDA806307uLL;
  uint64_t v195 = (v165 - ((2 * v165) & 0x483BD275E837B192) + 0x241DE93AF41BD8C9) ^ v173;
  unint64_t v196 = (((v178 ^ 0xDD29049383F4B42DLL) & ~v195 ^ v187)
        - ((2 * ((v178 ^ 0xDD29049383F4B42DLL) & ~v195 ^ v187)) & 0x483BD275E837B192)
        + 0x241DE93AF41BD8C9) ^ v173;
  *(void *)&long long v154 = __ROR8__((v196 >> 13) & 0x7000000000000 ^ __ROR8__(v196 ^ 0x4D726979C928A483 ^ (((8 * v196) ^ (v196 << 25) ^ 0xBF0681A6CFCC6AD0)- ((2* ((8 * v196) ^ (v196 << 25) ^ 0xBF0681A6CFCC6AD0)) & 0x5EE2CE5C8CA253B0)+ 0x2F71672E465129D9), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v197 = (v154 ^ -(uint64_t)v154 ^ (((v196 >> 39) ^ 0xC4061C) - (v154 ^ (v196 >> 39) ^ 0xC4061C)))
       + ((v196 >> 39) ^ 0xC4061C);
  LODWORD(v187) = *(unsigned __int8 *)(a15
                                     + ((((v192 >> 31) & 0xB8 ^ 0x88) + (BYTE4(v192) ^ 0x3A)) ^ 0x77));
  DWORD1(v154) = (v187 >> 6) ^ 0x7F ^ -((v187 >> 6) ^ 0x7F) ^ (((v187 >> 6) | (8 * v187))
                                                                                         - 127);
  LODWORD(v154) = (DWORD1(v154) + 4 * v187) << 24;
  a23[1] = v197 ^ 0xAC;
  a26[6] = (BYTE6(v192) ^ 0x14) - ((2 * (BYTE6(v192) ^ 0x14)) & 0x2E) + 23;
  a23[4] = BYTE2(v197) ^ 0x24;
  *a37 = (unint64_t)v154 >> 26;
  unint64_t v198 = v195 ^ (v178 ^ 0x22D6FB6C7C0B4BD2) & v175;
  unint64_t v199 = (v198 >> 1) ^ (v198 >> 6) ^ ((v198 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v198 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v198 & 0x183B3BDBC4516A26 | v198 & 0xE7C4C4243BAE95D9 ^ (v198 << 63));
  a26[12] = (BYTE3(v197) ^ 0x72) - ((2 * (BYTE3(v197) ^ 0x72)) & 0x2E) + 23;
  *(unsigned char *)(a27 + 29) = HIBYTE(v192) ^ 0x85;
  a26[13] = (BYTE5(v192) ^ 0xF0) - ((2 * (BYTE5(v192) ^ 0xF0)) & 0x2E) + 23;
  a21[6] = (v197 ^ 0x12027FFB722459ACuLL) >> (v151 & 8) >> (~(_BYTE)v151 & 8);
  LODWORD(v192) = *(unsigned __int8 *)(a15 + (((BYTE4(v197) ^ 0xFB) - 36) ^ 0x77));
  a21[4] = BYTE6(v197) ^ 2;
  *a23 = HIBYTE(v197) ^ 0x12;
  a21[2] = ((unsigned __int16)((v198 >> 1) ^ (v198 >> 6) ^ v198) >> 8) ^ 5;
  *a38 = BYTE5(v197) ^ 0x7F;
  uint64_t v200 = ((v198 ^ v182 & ~v185) - ((2 * (v198 ^ v182 & ~v185)) & 0x79D26C259FF1F200) + 0x3CE93612CFF8F900) ^ v184;
  unint64_t v201 = v200
       - ((2 * v200) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v200 - ((2 * v200) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xDBD434550BEF371ALL)
       + 0x6DEA1A2A85F79B8DLL;
  unint64_t v202 = v186 ^ (v186 << 23) ^ ((v186 >> 7) ^ (v186 >> 41) | (v186 << 57));
  LODWORD(v170) = (((v198 >> 1) ^ (v198 >> 6) ^ v198) >> 16);
  a23[2] = (v198 >> 1) ^ (v198 >> 6) ^ v198 ^ 0xDB;
  *a21 = ((((v192 >> 6) | (4 * v192)) ^ 0x7F) >> 2) | ((((v192 >> 6) | (4 * v192)) ^ 0x7F) << 6);
  unint64_t v203 = v201 ^ (v201 << 47) ^ (v201 >> 10) ^ (v201 << 54);
  unint64_t v204 = v203 ^ (v201 >> 17);
  LOBYTE(v201) = *(unsigned char *)(a13
                          + (((v170 ^ 0x76) + (v170 ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (v170 ^ 0x76));
  *a29 = (((v198 >> 1) ^ (v198 >> 6) ^ v198) >> 24) ^ 0x87;
  LOBYTE(v201) = v201 ^ 0xF2 ^ (16 * v201) & 0x40;
  a23[3] = BYTE6(v199) ^ 0x5D;
  unint64_t v205 = (unint64_t)(v201 >> 3) << ((v197 ^ 0xAC) & (v197 ^ 0x50)) << ((v197 ^ 0xAC) & (v197 ^ 0x50) ^ 3);
  a23[11] = v204 ^ 0x90;
  *(unsigned char *)(a27 + 28) = BYTE5(v199) ^ 0x22;
  a23[13] = (((v201 & 7 ^ 0x35 ^ v205) >> 3) | (32 * (v201 & 7 ^ 0x35 ^ v205))) ^ 0xA6;
  *a30 = BYTE2(v204) ^ 0x43;
  uint64_t v206 = (v204 >> 20) & 0xF0 | (v204 >> 28);
  a26[8] = (HIBYTE(v199) ^ 0xA1) + (~(2 * (HIBYTE(v199) ^ 0xA1)) | 0xD1) + 24;
  a26[17] = (BYTE4(v199) ^ 0x3C) - ((2 * (BYTE4(v199) ^ 0x3C)) & 0x2E) + 23;
  a26[11] = (BYTE1(v204) ^ 0xA4) - ((2 * (BYTE1(v204) ^ 0xA4)) & 0x2E) + 23;
  char v207 = *(unsigned char *)(a19 + (v206 ^ 0xDE));
  *(unsigned char *)a27 = BYTE6(v203) ^ 0x77;
  char v208 = v207 ^ ((v206 ^ 0xFE) + (v206 ^ 0x6B)) ^ 0xA1;
  *a31 = BYTE5(v204) ^ 0xD6;
  *(unsigned char *)(a27 + 15) = ((v186 ^ (v186 << 23) ^ (v186 >> 7) ^ (v186 >> 41)) >> 24) ^ 0x79;
  a26[19] = v186 ^ (v186 >> 7) ^ (v186 >> 41) ^ 0x85;
  a21[5] = ((unsigned __int16)(v186 ^ (v186 >> 7) ^ (v186 >> 41)) >> 8) ^ 0x3D;
  a23[8] = ((v186 ^ (v186 << 23) ^ (v186 >> 7) ^ (v186 >> 41)) >> 16) ^ 3;
  a26[18] = v208 - ((2 * v208 + 12) & 0x2E) - 99;
  a23[6] = BYTE4(v204) ^ 0x59;
  a21[7] = HIBYTE(v203) ^ 0x43;
  LOBYTE(v196) = *(unsigned char *)(a25 + (BYTE4(v202) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a27 + 14) = BYTE5(v202) ^ 0x49;
  a21[3] = HIBYTE(v202) ^ 0xBE;
  a21[1] = BYTE6(v202) ^ 0x75;
  *(unsigned char *)(a27 + 16) = (v196 >> 6) | (4 * v196);
  *(_DWORD *)(a27 + 4) = a14 + 516164358;
  JUMPOUT(0x1BCB004C8);
}

uint64_t sub_1BCB0053C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  BOOL v13 = a4 < v11;
  *(unsigned char *)(a8 + (a1 + a9 + 73)) = *(unsigned char *)(a6 + (v9 + a2)) ^ (a7 + 46);
  unsigned int v14 = a3 + v9 + 79;
  int v15 = v13 ^ (v14 < v11);
  BOOL v16 = v14 < a4;
  if (!v15) {
    BOOL v13 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v13 * a5) ^ v10)))();
}

uint64_t sub_1BCB005A0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = v8 + a1;
  *(unsigned char *)(v12 + a8 + 62) = a2;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v12 + (unint64_t)(v9 ^ 0x58u) < 0x40) * v10) ^ v9 ^ 0x507)))();
}

uint64_t sub_1BCB005E0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((28 * (a1 + 605 + v1 + ((3 * (a1 ^ 0x344)) ^ (v3 - 1444)) < 0x7FFFFFFF)) ^ a1)))();
}

void sub_1BCB00628()
{
}

uint64_t sub_1BCB00640@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * (a2 + 1 == v3 + 24)) ^ a1)))();
}

uint64_t sub_1BCB00700@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((437 * (a2 + 1 != v3 + 64)) ^ a1)))();
}

uint64_t sub_1BCB007D0()
{
  return 4294925278;
}

uint64_t sub_1BCB007D8()
{
  uint64_t v4 = v0;
  unint64_t v5 = v0 + v2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((189
                                * (v5 - v4 + ((6 * (v1 ^ 0x7A2u)) ^ 0x7BC56EFBLL) < (unint64_t)((v1 + 1562823662) & 0xA2D92FE1)
                                                                                  - 761)) ^ v1)))();
}

uint64_t sub_1BCB00864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  LODWORD(STACK[0x55C]) = 768172298;
  LODWORD(STACK[0x490]) = 128;
  unsigned int v63 = 3804331 * (((v60 ^ 0xF1960230 | 0x15437DFD) - ((v60 ^ 0xF1960230) & 0x15437DFD)) ^ 0x1E4B8C9B);
  *(_DWORD *)(v62 - 160) = v59 - v63 + 689;
  *(_DWORD *)(v62 - 124) = v63 + 888742542;
  *(void *)(v62 - 192) = v58 + 0x7EC954F575262B41;
  *(void *)(v62 - 184) = 0;
  *(void *)(v62 - 176) = v58;
  *(void *)(v62 - 168) = a49;
  *(void *)(v62 - 144) = 0;
  *(void *)(v62 - 136) = a58;
  *(void *)(v62 - 152) = v58 + 0x7EC954F575262A31;
  uint64_t v64 = (*(uint64_t (**)(uint64_t))(v61 + 8 * (v59 + 1169)))(v62 - 192);
  return (*(uint64_t (**)(uint64_t))(v61
                                            + 8
                                            * (((*(_DWORD *)(v62 - 128) == 984896845)
                                              * ((v59 - 220967239) & 0xD2BAFE6 ^ 0x6EB)) ^ v59)))(v64);
}

uint64_t sub_1BCB00984(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v11 = (v8 + v5 + v6 - v9 + 1571);
  *(void *)(v3 - 7 + v11) = *(void *)(a2 - 7 + v11);
  return (*(uint64_t (**)(void))(v10
                                           + 8 * (((v9 - (v4 & 0xFFFFFFF8) == -8) * (((a3 - 188) | 3) + 766)) | a3)))(v7 - (v4 & 0xFFFFFFF8));
}

uint64_t sub_1BCB009E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  int v38 = ((2 * (((v37 - 144) ^ 0x16D8BC94) & 0x7EE300A8) - ((v37 - 144) ^ 0x16D8BC94) + 18677589) ^ 0x5B52C1BC) * v33;
  *(_DWORD *)(v37 - 144) = 103034477 - v38;
  *(void *)(v37 - 136) = &a32 + v32;
  *(_DWORD *)(v37 - 128) = v38 + v35 - 1056;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v34 + 8 * (v35 + 507)))(v37 - 144);
  return (*(uint64_t (**)(uint64_t))(v34
                                            + 8
                                            * ((((v35 + 300) ^ 0xB ^ (3 * (v35 ^ 0x4FE))) * (v36 != 0)) ^ (v35 - 1173))))(v39);
}

uint64_t sub_1BCB00AD4()
{
  int v2 = v1 - ((2 * v1 + 49089266) & 0xC981CD0) - 1748855839;
  BOOL v3 = ((2 * v2) & 0x6F77FADE ^ 0xC1018D0) + (v2 ^ 0xB1F7F307) + 2078141440 != 865724783;
  return (*(uint64_t (**)(void))(v0 + 8 * (((4 * v3) | (16 * v3)) ^ 0xC6u)))();
}

uint64_t sub_1BCB00B6C()
{
  int v5 = 535753261 * ((((2 * (v4 - 128)) | 0x31C6BFF6) - (v4 - 128) + 1729929221) ^ 0x921751D4);
  *(_DWORD *)(v4 - 120) = v0 + (v2 ^ 0x3EDE61D3) + v5;
  *(_DWORD *)(v4 - 116) = v5 + v2 - 95;
  *(void *)(v4 - 128) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 905)))(v4 - 128);
  return sub_1BCB00BE8(v6);
}

uint64_t sub_1BCB00BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 128) = (v16 + 99) ^ (1374699841
                                       * ((((v17 - 128) | 0x5428CE33) + (~(v17 - 128) | 0xABD731CC)) ^ 0x39DCD63B));
  *(void *)(v17 - 120) = v15;
  *(void *)(v17 - 112) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 ^ 0x9E8)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 124) > (v16 + 349098617))
                                              * ((v16 + 135) ^ 0x24C)) ^ v16)))(v18);
}

void sub_1BCB00C98()
{
}

uint64_t sub_1BCB00CA0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1700 * (((11 * (v0 ^ 0xA9)) ^ 0x89C6A625) + *v1 < v0 - 216)) ^ v0)))();
}

uint64_t sub_1BCB00CF0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1802 * (*(_DWORD *)(*v5 + 4 * a3) == v4 + v6 + 141 - 511)) ^ v6)))();
}

uint64_t sub_1BCB00D24@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((a1 == (((v1 ^ 0x5D5) - 1441) ^ 0x2F)) * ((v1 ^ 0x5D5) - 1450)) ^ v1 ^ 0x5D5)))(195);
}

uint64_t sub_1BCB00D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a16 = v18 - 460628867 * ((&a14 & 0xED49C18B | ~(&a14 | 0xED49C18B)) ^ 0x5E20BC09) + 740;
  a14 = &STACK[0x5224DE3D6C39C41B];
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v18 + 1979)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8 * ((63 * ((v18 ^ 0x9B ^ (a15 == v16)) & 1)) ^ v18)))(v19);
}

uint64_t sub_1BCB00E08(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 201956061;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(a2 + 4) == ((v3 - 21) ^ 0x5C2 ^ (v2 + 1239))) * ((v3 - 140) ^ 0xBA)) ^ (v3 - 21))))();
}

void sub_1BCB00E60()
{
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1504)))(v1);
  LODWORD(STACK[0x580]) = -984936807;
  JUMPOUT(0x1BCB00EA0);
}

uint64_t sub_1BCB00EF0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((603
                                * ((((*(unsigned __int8 *)(v3 + 6) - 1) << ((v2 - 120) ^ 0x31)) & v0)
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)) ^ v2)))();
}

void sub_1BCB00F34()
{
}

void sub_1BCB00F3C()
{
}

uint64_t sub_1BCB00FA8(uint64_t a1, uint64_t a2, unsigned int a3, char a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((251
                                * ((((*(unsigned __int8 *)(a2 + 4) - 147) << a4) & v5)
                                 + ((*(unsigned __int8 *)(a2 + 4) - 147) ^ v6) == v6)) ^ a3)))();
}

void sub_1BCB00FE4()
{
}

void sub_1BCB01028()
{
}

void sub_1BCB011E8()
{
}

uint64_t sub_1BCB01250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v17 - 128) = v12;
  *(void *)(v17 - 120) = a12;
  *(_DWORD *)(v17 - 136) = (v15 - 1178) ^ (((2 * (((v17 - 136) ^ 0x16C7926F) & 0x37D42D5D)
                                           - ((v17 - 136) ^ 0x16C7926F)
                                           + 1210831522) ^ 0x331858C4)
                                         * v13);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 427)))(v17 - 136);
  BOOL v19 = *(_DWORD *)(v17 - 132) > ((38 * (v15 ^ 0x6B3)) ^ (v16 - 358));
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((16 * (((v15 + 93) ^ v19) & 1)) & 0xDF | (32 * (((v15 + 93) ^ v19) & 1))) ^ v15)))(v18);
}

void sub_1BCB01320()
{
  *(_DWORD *)(v0 - 0x5B51E979A7EFF0B5) = -984936807;
  JUMPOUT(0x1BCAFDBF4);
}

uint64_t sub_1BCB01340@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((35
                                              * (((a1 - 1854503558) ^ 0x1DDFD3F7FBFEFF9DLL)
                                               - 0x1DDFD3F7E9398060
                                               + ((2 * (a1 - 1854503558)) & 0x1F7FDFF3ALL) == 314933053)) ^ 0x55Eu)))(1424);
}

uint64_t sub_1BCB013E8(uint64_t a1, void *a2, int a3, uint64_t a4, int a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  BOOL v34 = a7 > v29;
  unint64_t v35 = (*(_DWORD *)(a23 + 4 * (v23 + v27 + 2032)) ^ v24)
      + HIDWORD(v33)
      + v26 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (v23 + v27 + 2032)) ^ v24);
  *(_DWORD *)(a23 + 4 * (v23 + v27 + ((a5 - 390) | v30))) = v35 + v24 - (v25 & (2 * v35));
  if (v34 == v23 + v31 < v32) {
    BOOL v34 = v23 + v31 < a3;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((31 * !v34) ^ a5)))();
}

void sub_1BCB0147C()
{
  uint64_t v7 = *(void *)(v4 - 0x7EC954F575262799);
  unsigned int v8 = (*(_DWORD *)(v7 + 4 * (v5 - 1)) ^ v2) >> v1;
  *(_DWORD *)(v7 + 4 * (v0 - 36176998)) = v2 + ((v6 - 655) | 0x86) + v8 - (v3 & (2 * v8)) - 455;
  JUMPOUT(0x1BCB01510);
}

uint64_t sub_1BCB01550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(unsigned char *)(*v13 + (v11 + a7)) = *(unsigned char *)(*v13 + v10 + (v8 ^ (a6 + 1525)));
  return (*(uint64_t (**)(void))(v12 + 8 * ((7 * (v7 == 1845490070)) ^ v9)))();
}

void sub_1BCB015A8()
{
}

void sub_1BCB015B4(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 ^ (1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D));
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = &v8;
  unsigned int v5 = 1224239923 * ((v4 & 0x6D369F0D | ~(v4 | 0x6D369F0D)) ^ 0x607A9D25);
  int v6 = -1224239923 * ((v4 & 0x6D369F0D | ~(v4 | 0x6D369F0D)) ^ 0x607A9D25)
     + 1117622293 * (*(_DWORD *)(a1 + 24) - 1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D));
  LODWORD(v4) = *(_DWORD *)(a1 + 48) ^ (1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D)) ^ 0xBE4B8A20;
  uint64_t v15 = *(void *)(a1 + 8);
  int v14 = v6 + 60890528;
  uint64_t v8 = v3;
  uint64_t v12 = v3;
  uint64_t v13 = v2;
  int v10 = v5 ^ (v1 + 1695026952);
  unsigned int v11 = v4 - v5;
  int v7 = (char *)*(&off_1F16F9FD0 + (v1 ^ 0x16C)) - 4;
  (*(void (**)(uint64_t *))&v7[8 * (v1 ^ 0x98B)])(&v8);
  __asm { BRAA            X8, X17 }
}

void sub_1BCB01730()
{
}

uint64_t sub_1BCB0175C()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x5B51E979A7EFF0BDLL) - 1050820750;
  unsigned int v4 = ((v2 - 1003326689) & 0x3BCD8D77) + *(_DWORD *)(v1 - 0x5B51E979A7EFF0C1) + 1523269699;
  BOOL v5 = v4 < 0xC373D5B8;
  BOOL v6 = v3 < v4;
  if (v3 < 0xC373D5B8 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((31 * !v6) ^ v2)))();
}

uint64_t sub_1BCB01804@<X0>(int a1@<W1>, char a2@<W3>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v12 = v7 + 581;
  int v13 = v8 + v7 + 581;
  uint64_t v14 = (v8 + a3);
  *(unsigned char *)(v9 + v14 + 36) = ((v14 & 0xF) * a2) ^ *(unsigned char *)(v10 + v14) ^ *(unsigned char *)(v4 + (v14 & 0xF)) ^ *(unsigned char *)((v14 & 0xF) + v5 + 1) ^ *(unsigned char *)(a4 + (v14 & 0xF)) ^ 0x80;
  return (*(uint64_t (**)(void))(v11
                              + 8 * (((((v13 - 613 == v6) ^ (v12 - 85)) & 1) * a1) ^ (v12 + 1172))))();
}

uint64_t sub_1BCB01880(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  *(void *)(a6 + v9) = *(void *)(v8 + v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6 + 8 * (((a3 == 0) * v7) ^ a5)))(a1, a2, (a3 + 8));
}

uint64_t sub_1BCB018B0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W5>, uint64_t a4@<X8>)
{
  int v11 = *(_DWORD *)(a4 + 4 * (a3 + v6 - 8)) ^ *(_DWORD *)(a4 + 4 * (a3 + v6 - 3));
  int v12 = v11 + v10 - (v8 & (2 * v11));
  int v13 = ((v4 ^ a1) * a2) ^ (a3 - 847);
  HIDWORD(v14) = *(_DWORD *)(a4 + 4 * (v13 + v6)) ^ *(_DWORD *)(a4 + 4 * (a3 + v6 - 14)) ^ v12 ^ v10;
  LODWORD(v14) = *(_DWORD *)(a4 + 4 * (v13 + v6)) ^ *(_DWORD *)(a4 + 4 * (a3 + v6 - 14)) ^ v12;
  *(_DWORD *)(a4 + 4 * (v5 + a3)) = (v14 >> 31) + v10 - (v8 & (2 * (v14 >> 31)));
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v5 + 1 + a3) < 0x50) * v7) ^ v4)))();
}

uint64_t sub_1BCB01940()
{
  int v6 = (void *)(v0 + v1 - 2177);
  STACK[0x438] = v3 + 0x1A8FA111108FB322;
  *int v6 = 0x7F7F7F7F7F7F7F7FLL;
  v6[1] = 0x8080808086808092;
  int v7 = 460628867 * ((((v5 - 192) | 0xCC5942B9) + (~(v5 - 192) | 0x33A6BD46)) ^ 0x80CFC0C5);
  *(_DWORD *)(v5 - 188) = v7 + 1300210955;
  *(_DWORD *)(v5 - 184) = (v2 + 1064655364) ^ v7;
  (*(void (**)(uint64_t))(v4 + 8 * (v2 ^ 0x2C4u)))(v5 - 192);
  LODWORD(STACK[0x4A4]) = 1854503894;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v2 ^ 0xD0Eu)))(336, 1925803308);
  STACK[0x4F0] = v8;
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((v8 == 0) * ((((v2 - 286) | 0xC) - 419) ^ (v2 + 87781840) & 0x3AC48B64)) ^ v2)))();
}

uint64_t sub_1BCB01A5C()
{
  int v3 = v0 ^ 0x2F8;
  *(_DWORD *)(v2 - 192) = v3
                        + 460628867 * ((((2 * (v2 - 192)) | 0x28B09112) - (v2 - 192) - 341330057) ^ 0x58CECAF4)
                        - 231790759;
  (*(void (**)(uint64_t))(v1 + 8 * (v3 + 184)))(v2 - 192);
  BOOL v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v3 + 112)))(336, 1777295586) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 * (((v3 ^ 0x6E1) + 210) ^ 0x228)) | v3)))();
}

uint64_t sub_1BCB01B28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x9466003216229CDLL) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * ((327 * (*v3 == ((v4 + 1069174833) & 0xC045ABFF ^ (v2 + 551)))) | v4)))();
}

uint64_t sub_1BCB01B88@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((*(_DWORD *)(v5 + (v3 + a1) * (uint64_t)a2 + 36) == a3) ^ ((v4 ^ 0xE8) + 121)) & 1)
                                * ((((v4 ^ 0x3E8) - 954) | 5) + 45)) ^ v4 ^ 0x3E8)))();
}

uint64_t sub_1BCB01BF0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + (v4 + v3)) = *(unsigned char *)(a1 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1996 * (v4 - 1 == (v5 ^ 0x176) + v2)) ^ v5)))();
}

void sub_1BCB01C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  STACK[0x610] = (a17 ^ 0x1A8u) + STACK[0x610] - 213;
  JUMPOUT(0x1BCB01C78);
}

uint64_t sub_1BCB01CFC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1222
                                * (((v1 - 450062221) & 0x1AD365FF ^ (a1 + 50)) + v2 < (v1 ^ 0x562u) + 2147481841)) ^ v1)))();
}

uint64_t sub_1BCB01D58@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x560]) = a1;
  uint64_t v4 = (*(uint64_t (**)(unint64_t, void))(v3 + 8 * (v2 + 587)))(STACK[0x3A8], 0);
  unsigned int v5 = v1[4] + ((51 * (v2 ^ 0x60C)) ^ 0x43B4DDB6) - ((2 * v1[4]) & 0x8769BFA4);
  v1[1] = v1[6] + 1135927250 - ((2 * v1[6]) & 0x8769BFA4);
  v1[2] = v5;
  int v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 ^ 0xE34)))(v4);
  v1[3] = v6 + 1135927250 - ((2 * v6) & 0x8769BFA4);
  int v7 = (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ 0xE34)))();
  *int v1 = v7 + 1135927250 - ((2 * v7) & 0x8769BFA4);
  return sub_1BCB01E28();
}

uint64_t sub_1BCB01E28(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v11 = 4 * (v5 - 583743006);
  int v12 = (((*(_DWORD *)(v8 + 4 * (v5 - 583743007)) >> 30) ^ 1)
       + 1135927250
       - 4 * (*(_DWORD *)(v8 + 4 * (v5 - 583743007)) >> 31)) ^ *(_DWORD *)(v8
                                                                                         + 4
                                                                                         * (v5 - 583743007));
  int v13 = (*(_DWORD *)(v3 + 4 * (v4 - 501830479)) ^ 0x43B4DFD2)
      + v4
      - 501830479
      + ((1664525 * v12 + 1135927250 - ((3329050 * v12) & a3)) ^ *(_DWORD *)(v8 + v11));
  *(_DWORD *)(v8 + v11) = v13 + 1135927250 - (a3 & (2 * v13));
  unint64_t v14 = STACK[0x3F8];
  *(void *)(v10 - 176) = STACK[0x3F8] + 1109348776;
  *(_DWORD *)(v10 - 152) = v14 + v6 + 1739641394 + 41;
  *(_DWORD *)(v10 - 168) = ((v6 + 1739641394) ^ 0x46) + v14;
  *(_DWORD *)(v10 - 164) = v14;
  *(void *)(v10 - 160) = (v5 + 525605771) ^ v14;
  *(_DWORD *)(v10 - 188) = (v6 + 1739641394) ^ v14;
  *(_DWORD *)(v10 - 184) = v14 + v7 + v6;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v9 + 8 * (v6 ^ 0xA5F)))(v10 - 192);
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * *(int *)(v10 - 192)))(v15);
}

uint64_t sub_1BCB01F40()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v0 = (unint64_t *)*(&off_1F16F9FD0
                           + ((qword_1E9FB7E30 + dword_1E9FB89F8) ^ 0x74u ^ byte_1BCB164A0[byte_1BCB12250[(qword_1E9FB7E30 + dword_1E9FB89F8) ^ 0x74] ^ 0xFD])
                           + 115);
  int v1 = (unsigned __int8 *)off_1F16FA150;
  int v2 = (char *)off_1F16FA248 - 4;
  uint64_t v3 = (unint64_t *)*(&off_1F16F9FD0
                           + (*((unsigned char *)off_1F16FA248
                              + (*((unsigned __int8 *)off_1F16FA150 + ((qword_1E9FB7E30 + *v0) ^ 0x74u)) ^ 0x2Du)
                              - 4) ^ (qword_1E9FB7E30 + *v0) ^ 0x74u)
                           + 59);
  unint64_t v4 = 267049729 * ((unint64_t)&v9[*v3 - *v0] ^ 0x733E1D47A735574);
  unint64_t *v0 = v4;
  unint64_t *v3 = v4;
  unsigned int v11 = 1281 - 535753261 * ((&v10 + 504105154 - 2 * (&v10 & 0x1E0C08C2)) ^ 0x14F806ED);
  uint64_t v10 = (char *)*(&off_1F16F9FD0
                + ((*(_DWORD *)v3 - *(_DWORD *)v0) ^ 0x74u ^ v2[v1[(*(_DWORD *)v3 - *(_DWORD *)v0) ^ 0x74] ^ 0xFD])
                + 105)
      - 4;
  LOBYTE(v4) = *(_DWORD *)v0 ^ 0x74 ^ *(_DWORD *)v3;
  int v5 = (char *)*(&off_1F16F9FD0
               + ((qword_1E9FB7E30 - dword_1E9FB89F8) ^ 0x74u ^ byte_1BCB164A0[byte_1BCB12250[(qword_1E9FB7E30 - dword_1E9FB89F8) ^ 0x74] ^ 0xFD])
               + 134)
     - 4;
  (*(void (**)(char **))&v5[8
                                     * (*((unsigned char *)off_1F16FA508
                                                         + (*((unsigned __int8 *)off_1F16FA1F0 + v4
                                                                                               - 12) ^ 0xF8u)
                                                         - 4) ^ v4)
                                     + 16600])(&v10);
  unsigned int v11 = 1281
      - 535753261
      * (((&v10 | 0x942CFDEE) - &v10 + (&v10 & 0x6BD30210)) ^ 0x9ED8F3C1);
  unsigned __int8 v6 = (*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0x74;
  uint64_t v10 = (char *)*(&off_1F16F9FD0
                + (*((unsigned char *)off_1F16FA448
                                                  + (*((unsigned __int8 *)off_1F16FA220 + v6 - 4) ^ 0xDDu)) ^ v6)
                + 86)
      - 4;
  (*(void (**)(char **))&v5[8
                                     * (*((unsigned char *)off_1F16FA1A0
                                        + ((*off_1F16FA008)[(*(_DWORD *)v3
                                                                                             + *(_DWORD *)v0) ^ 0x74] ^ 0xF3u)
                                        - 8) ^ (*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0x74)
                                     + 16040])(&v10);
  unsigned int v7 = 3804331 * ((&v10 - 2 * (&v10 & 0x9C3CB51) + 163826513) ^ 0xF35D3807);
  BYTE4(v10) = 118 - v7;
  LODWORD(v10) = v7 ^ 0x4EE;
  return (*(uint64_t (**)(char **))&v5[8
                                               * (*(_DWORD *)v0 ^ 0x74 ^ *(_DWORD *)v3 ^ v2[v1[*(_DWORD *)v0 ^ 0x74 ^ *(_DWORD *)v3] ^ 0x2D])
                                               + 16280])(&v10);
}

uint64_t sub_1BCB022E4(_DWORD *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  unsigned int v2 = 1374699841 * (((a1 | 0xEA022A98) - (a1 & 0xEA022A98)) ^ 0x87F63291);
  unsigned int v3 = a1[10] + v2;
  int v4 = a1[5] + v2;
  unsigned int v9 = v3
     + 460628867 * (((&v9 | 0x45D3A2CF) + (~&v9 | 0xBA2C5D30)) ^ 0x94520B3)
     - 1404134225;
  int v5 = (char *)*(&off_1F16F9FD0 + (int)(v3 ^ 0x45E092C3)) - 4;
  uint64_t result = (*(uint64_t (**)(unsigned int *))&v5[8 * (v3 ^ 0x45E09A32)])(&v9);
  if (v4 > 1472092291)
  {
    if (v4 == 1757304963)
    {
      unsigned int v7 = 3;
    }
    else
    {
      if (v4 != 1472092292) {
        goto LABEL_11;
      }
      unsigned int v7 = 1;
    }
LABEL_10:
    uint64_t v8 = *(void *)&v5[8
                      * ((((*(uint64_t (**)(void, uint64_t))&v5[8 * (v3 - 1172343354)])((*((_DWORD *)*(&off_1F16F9FD0 + (int)(v3 - 1172345259)) + 6 * v7 + 4)- 1854503558), 2970849626) == 0)* (v3 - 1172345415)) ^ (v3 - 1172343597))];
    __asm { BRAA            X8, X17 }
  }
  if (v4 == 1472092288)
  {
    unsigned int v7 = 0;
    goto LABEL_10;
  }
  if (v4 == 1472092291)
  {
    unsigned int v7 = 2;
    goto LABEL_10;
  }
LABEL_11:
  *a1 = -984936719;
  return result;
}

uint64_t sub_1BCB02524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((122
                                * (v3 - a2 - 0x781B11C067843F9ALL + a1 >= (unint64_t)((v2 + 1077) | 0x21u) - 1639)) ^ v2)))();
}

uint64_t sub_1BCB0257C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a5 | (4 * (v7 + 1 != v6 + 40)))))();
}

uint64_t sub_1BCB02624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  LODWORD(STACK[0x54C]) = v52 - 31;
  return (*(uint64_t (**)(void))(v53
                              + 8
                              * ((((((a51 - 2059879900) & 0x7AC747FD) - 152438662) & 0x91605FF ^ 0xCF)
                                * (STACK[0x360] == 0)) ^ (((a51 - 2059879900) & 0x7AC747FD) + 1375))))();
}

uint64_t sub_1BCB02650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, int a17)
{
  uint64_t v22 = 3804331 * (v21 ^ 0x698B7B55FA9EF356);
  a17 = v22 + v20 + 56;
  a15 = v22 + (((v20 - 633) | 0x40u) + 0x4F4CF6DE3887DC72) * v17 + 0x4CB2300617FB3946;
  a16 = a11;
  uint64_t v23 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 ^ 0xC73)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a14 != v18) * (v20 - 784)) ^ v20)))(v23);
}

void sub_1BCB02754(_DWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  *((unsigned char *)a1 + v5 + 4) = -57;
  sub_1BCAE88A4(a1, v4 + 1, a3, a4);
}

uint64_t sub_1BCB02780(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int32x4_t a45,int32x4_t a46,int32x4_t a47,int32x4_t a48)
{
  LODWORD(v108) = 728809301;
  __n128 v104 = (__n128)vdupq_n_s32(0x3AB4555Fu);
  __n128 v105 = (__n128)vdupq_n_s32(0x3AB4554Du);
  v106.n128_u64[0] = 0x8080808080808080;
  v106.n128_u64[1] = 0x8080808080808080;
  HIDWORD(a13) = v99 ^ (v99 - 1033);
  __n128 v107 = (__n128)vdupq_n_s32(0x3AB4554Fu);
  uint64_t v48 = *(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128))(v100 + 8 * a2);
  uint64_t v49 = HIDWORD(a34);
  uint64_t v50 = a35;
  int v51 = BYTE4(a36) ^ 0x5F;
  HIDWORD(a17) = BYTE4(a36) ^ 0x5F;
  if (v51 == 2)
  {
    unint64_t v109 = __PAIR64__(a34, HIDWORD(a33));
    unint64_t v110 = __PAIR64__(a35, HIDWORD(a34));
    uint64_t v111 = *(void *)(v100 + 8 * a2);
    int8x16x4_t v113 = vld4q_s8((const char *)&a24 + 4);
    uint64_t v75 = HIDWORD(a35);
    uint8x16_t v76 = (uint8x16_t)veorq_s8(v113.val[0], (int8x16_t)v106);
    uint16x8_t v77 = vmovl_u8(*(uint8x8_t *)v76.i8);
    uint16x8_t v78 = vmovl_high_u8(v76);
    uint8x16_t v79 = (uint8x16_t)veorq_s8(v113.val[1], (int8x16_t)v106);
    _Q21 = vmovl_u8(*(uint8x8_t *)v79.i8);
    _Q20 = vmovl_high_u8(v79);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v84 = (uint8x16_t)veorq_s8(v113.val[2], (int8x16_t)v106);
    uint16x8_t v85 = vmovl_high_u8(v84);
    uint16x8_t v86 = vmovl_u8(*(uint8x8_t *)v84.i8);
    v113.val[0] = veorq_s8(v113.val[3], (int8x16_t)v106);
    v113.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v113.val[0]);
    v113.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v113.val[1]);
    v113.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v113.val[1].i8);
    v113.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v113.val[0].i8);
    v113.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v113.val[0]);
    v113.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v113.val[0].i8);
    int32x4_t v87 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v86.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8), 0x18uLL)), v113.val[0]);
    int32x4_t v88 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v86, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v77), 0x18uLL)), v113.val[3]);
    int32x4_t v89 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v85.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8), 0x18uLL)), v113.val[1]);
    int32x4_t v90 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v85, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v78), 0x18uLL)), v113.val[2]);
    v113.val[0] = veorq_s8(vandq_s8((int8x16_t)v87, (int8x16_t)v104), (int8x16_t)(*(_OWORD *)v113.val & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v113.val[3] = veorq_s8(vandq_s8((int8x16_t)v88, (int8x16_t)v104), (int8x16_t)(*(_OWORD *)&v113.val[3] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v113.val[1] = veorq_s8(vandq_s8((int8x16_t)v89, (int8x16_t)v104), (int8x16_t)(*(_OWORD *)&v113.val[1] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    v113.val[2] = veorq_s8(vandq_s8((int8x16_t)v90, (int8x16_t)v104), (int8x16_t)(*(_OWORD *)&v113.val[2] & __PAIR128__(0xFFFFFF12FFFFFF12, 0xFFFFFF12FFFFFF12)));
    a47 = vaddq_s32(vsubq_s32(v89, vaddq_s32((int32x4_t)v113.val[1], (int32x4_t)v113.val[1])), (int32x4_t)v105);
    a48 = vaddq_s32(vsubq_s32(v90, vaddq_s32((int32x4_t)v113.val[2], (int32x4_t)v113.val[2])), (int32x4_t)v105);
    a45 = vaddq_s32(vsubq_s32(v87, vaddq_s32((int32x4_t)v113.val[0], (int32x4_t)v113.val[0])), (int32x4_t)v105);
    a46 = vaddq_s32(vsubq_s32(v88, vaddq_s32((int32x4_t)v113.val[3], (int32x4_t)v113.val[3])), (int32x4_t)v105);
    unint64_t v91 = (_DWORD *)&a45 + v102 + 321430231;
    int v92 = *(v91 - 8) ^ *((_DWORD *)&a45 + v102 + ((HIDWORD(a13) - 493) | 0x120u) + 321429400);
    int v93 = *(v91 - 16) ^ *(v91 - 14) ^ (v92 + v101 - ((2 * v92) & 0x7568AA9A));
    HIDWORD(v94) = v93 ^ v101;
    LODWORD(v94) = v93;
    *unint64_t v91 = (v94 >> 31) + v101 - ((2 * (v94 >> 31)) & 0x7568AA9A);
    unint64_t v95 = *(uint64_t (**)(void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 8 * (((v97 != 321430168) | (2 * (v97 != 321430168))) ^ HIDWORD(a13)));
    HIDWORD(v108) = a13 - 1164441214;
    return v95(v95, 1969793690, v49, HIDWORD(a13), v50, v75, v97 - 16, 151, a9, a10, a11, a12, a13, a14, v97 - 16, a16, a17, v108, v109,
             v110,
             v111,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44);
  }
  else
  {
    if (v51 == 1)
    {
      int8x16x4_t v112 = vld4q_s8((const char *)&a24 + 4);
      uint8x16_t v52 = (uint8x16_t)veorq_s8(v112.val[0], (int8x16_t)v106);
      uint16x8_t v53 = vmovl_u8(*(uint8x8_t *)v52.i8);
      int8x16_t v54 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v53.i8);
      int8x16_t v55 = (int8x16_t)vmovl_high_u16(v53);
      uint16x8_t v56 = vmovl_high_u8(v52);
      int8x16_t v57 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v56.i8);
      int8x16_t v58 = (int8x16_t)vmovl_high_u16(v56);
      uint8x16_t v59 = (uint8x16_t)veorq_s8(v112.val[1], (int8x16_t)v106);
      uint16x8_t v60 = vmovl_high_u8(v59);
      uint16x8_t v61 = vmovl_u8(*(uint8x8_t *)v59.i8);
      uint8x16_t v62 = (uint8x16_t)veorq_s8(v112.val[2], (int8x16_t)v106);
      _Q25 = (int8x16_t)vmovl_high_u8(v62);
      _Q24 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v62.i8);
      int8x16_t v65 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q24.i8, 0x10uLL);
      __asm { SHLL2           V24.4S, V24.8H, #0x10 }
      int8x16_t v70 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
      __asm { SHLL2           V25.4S, V25.8H, #0x10 }
      v112.val[0] = veorq_s8(v112.val[3], (int8x16_t)v106);
      v112.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v112.val[0]);
      v112.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v112.val[1]);
      v112.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v112.val[0].i8);
      v112.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v112.val[0]);
      v112.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v112.val[0].i8), 0x18uLL), v65), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v61.i8, 8uLL), v54));
      v112.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v112.val[3], 0x18uLL), _Q24), vorrq_s8((int8x16_t)vshll_high_n_u16(v61, 8uLL), v55));
      v112.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v112.val[1].i8), 0x18uLL), v70), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v60.i8, 8uLL), v57));
      v112.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v112.val[2], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v60, 8uLL), v58));
      int32x4_t v71 = (int32x4_t)veorq_s8(vandq_s8(v112.val[0], (int8x16_t)v107), (int8x16_t)(*(_OWORD *)&v54 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
      int32x4_t v72 = (int32x4_t)veorq_s8(vandq_s8(v112.val[3], (int8x16_t)v107), (int8x16_t)(*(_OWORD *)&v55 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
      int32x4_t v73 = (int32x4_t)veorq_s8(vandq_s8(v112.val[1], (int8x16_t)v107), (int8x16_t)(*(_OWORD *)&v57 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
      int32x4_t v74 = (int32x4_t)veorq_s8(vandq_s8(v112.val[2], (int8x16_t)v107), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
      a47 = vaddq_s32(vsubq_s32((int32x4_t)v112.val[1], vaddq_s32(v73, v73)), (int32x4_t)v105);
      a48 = vaddq_s32(vsubq_s32((int32x4_t)v112.val[2], vaddq_s32(v74, v74)), (int32x4_t)v105);
      a45 = vaddq_s32(vsubq_s32((int32x4_t)v112.val[0], vaddq_s32(v71, v71)), (int32x4_t)v105);
      a46 = vaddq_s32(vsubq_s32((int32x4_t)v112.val[3], vaddq_s32(v72, v72)), (int32x4_t)v105);
      JUMPOUT(0x1BCAF0478);
    }
    HIDWORD(a33) = 2 * (HIDWORD(a33) ^ v103) + v103 - (v98 & (4 * (HIDWORD(a33) ^ v103)));
    LODWORD(a34) = 2 * (a34 ^ v103) + v103 - (v98 & (4 * (a34 ^ v103)));
    HIDWORD(a34) = 2 * (HIDWORD(a34) ^ v103) + v103 - (v98 & (4 * (HIDWORD(a34) ^ v103)));
    LODWORD(a35) = 2 * (a35 ^ v103) + v103 - (v98 & (4 * (a35 ^ v103)));
    return v48(1730004587, v104, v105, v106, v107);
  }
}

uint64_t sub_1BCB02804()
{
  return (*(uint64_t (**)(unint64_t))(v3 + 8
                                                          * (((v0 ^ 0x49A ^ (7 * (v0 ^ 0x173))) * (v2 == v1)) ^ v0)))(0x87E4EE3F987BC0AELL);
}

uint64_t sub_1BCB02858@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v3 + v5 + a1 - 1) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + v5) < 0x38) * v1) ^ v2)))();
}

uint64_t sub_1BCB02884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v10
                                                                               + 8
                                                                               * (int)((((a8 ^ 0x25A)
                                                                                       + ((a8 + 1959874022) & 0x8B2EB7F7)
                                                                                       - 1927)
                                                                                      * ((v9 & 8) == 0)) ^ a8)))(a1, a2, a3, a4, (v8 - a4));
}

uint64_t sub_1BCB028CC@<X0>(int a1@<W8>)
{
  uint64_t v4 = 1759421093 * ((v3 - 168 - 2 * ((v3 - 168) & 0x3CEE76D65605C96) + 0x3CEE76D65605C96) ^ 0x2D70263DD61DECC2);
  STACK[0x320] = 21856980 - v4;
  *(_DWORD *)(v3 - 160) = a1 - v4 - 1689051565;
  *(_DWORD *)(v3 - 156) = a1 - 1072502696 - v4;
  *(_DWORD *)(v3 - 168) = v4;
  *(_DWORD *)(v3 - 164) = ((a1 - 1072502696) ^ 0x41) - v4;
  STACK[0x330] = v1 - v4;
  *(_DWORD *)(v3 - 152) = v4 ^ (a1 - 1072502696) ^ 0x38;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x853u)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 136)))(v5);
}

uint64_t sub_1BCB0299C(uint64_t a1)
{
  int v6 = *(unsigned __int8 *)(v1 + a1 - 0x5B695B74611722D2)
     - (*(unsigned __int8 *)(v2 + a1 - 0x5B695B74611722D2) ^ 0x80);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((2 * v6) & 0xF5AFD87C) + (v6 ^ v5) == v5)
                                     * ((v3 + 485772840) & 0xE30BB7FF ^ 0x3FD)) ^ v3)))();
}

uint64_t sub_1BCB02A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (((((v5 < 0x20) ^ (a5 - 64)) & 1) * ((a5 - 1078) ^ 0x37B)) ^ a5)))();
}

uint64_t sub_1BCB02A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v21 + 8 * ((1128 * (a19 == v19 + 36305672)) ^ v20)))();
}

uint64_t sub_1BCB02A88(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v10 = a8 + a1 - 2143271934 < ((v8 - 1357) ^ (v8 - 1349));
  return (*(uint64_t (**)(void))(v9 + 8 * ((2 * v10) | (32 * v10) | v8)))();
}

uint64_t sub_1BCB02AE4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == 0x39940081228B91C1) * ((v1 ^ 0x2F5) - 1343)) ^ v1)))();
}

uint64_t sub_1BCB02B1C(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v8 = v4 < v5;
  if (v8 == v6 - 0x18DAD9BDA9BDE7A7 < (unint64_t)(712 * (a3 ^ 0x55Cu)) + v3) {
    BOOL v8 = v6 - 0x18DAD9BDA9BDE7A7 < v4;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((!v8 * ((a3 - 1092) ^ 0x139)) ^ a3)))();
}

void sub_1BCB02B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x3E8] = v67;
  *(_DWORD *)(STACK[0x658] + ((a6 + a67 + LODWORD(STACK[0x53C]) - 512) & 0xFFFFFFFC)) = v68;
  JUMPOUT(0x1BCAF351CLL);
}

unsigned char *sub_1BCB02BCC(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BCB02CB8()
{
}

uint64_t rosetta_is_current_process_translated()
{
  return 0;
}

uint64_t parse_macho_iterate_slices(const char *a1, uint64_t a2)
{
  int v4 = open(a1, 256);
  if (v4 < 0)
  {
    BOOL v8 = __error();
    uint64_t v9 = strerror(*v8);
    syslog(3, "Failed to open macho file at %s for reading: %s", a1, v9);
    return 0;
  }
  else
  {
    int v5 = v4;
    uint64_t v6 = parse_macho_iterate_slices_fd(v4, (uint64_t)a1, a2);
    close(v5);
    return v6;
  }
}

uint64_t parse_macho_iterate_slices_fd(int a1, uint64_t a2, uint64_t a3)
{
  __buf[0] = 0;
  memset(&v24, 0, sizeof(v24));
  if (fstat(a1, &v24))
  {
    int v5 = __error();
    strerror(*v5);
    syslog(3, "Failed to stat %s : %s");
    return 0;
  }
  if (v24.st_size <= 8)
  {
    syslog(3, "File at %s is not a valid mach-o (too small to contain a valid header)");
    return 0;
  }
  *__error() = 0;
  if (pread(a1, __buf, 4uLL, 0) != 4)
  {
    uint64_t v7 = __error();
    strerror(*v7);
    syslog(3, "Failed to read magic from %s : %s");
    return 0;
  }
  if (__buf[0] <= -805638659)
  {
    if (__buf[0] != -1095041334 && __buf[0] != -889275714)
    {
      int v6 = -822415874;
      goto LABEL_15;
    }
    fat_header fat_header = 0;
    *__error() = 0;
    if (pread(a1, &fat_header, 8uLL, 0) == 8)
    {
      uint32_t magic = fat_header.magic;
      if (fat_header.magic == -1095041334)
      {
        swap_fat_header(&fat_header, NX_LittleEndian);
        uint32_t magic = fat_header.magic;
      }
      syslog(7, "Got fat header with magic 0x%08x and %u archs", magic, fat_header.nfat_arch);
      if (fat_header.nfat_arch < 0x401)
      {
        size_t v15 = 20 * fat_header.nfat_arch;
        if (v24.st_size > (uint64_t)(v15 + 8))
        {
          unint64_t v14 = (fat_arch *)malloc_type_malloc(20 * fat_header.nfat_arch, 0x50FF23B5uLL);
          if (v15 == pread(a1, v14, v15, 8))
          {
            swap_fat_arch(v14, fat_header.nfat_arch, NX_LittleEndian);
            if (!fat_header.nfat_arch)
            {
LABEL_37:
              uint64_t v8 = 1;
              if (!v14) {
                return v8;
              }
              goto LABEL_28;
            }
            uint64_t v16 = 0;
            uint64_t v17 = v14;
            while (1)
            {
              syslog(7, "Evaluating fat slice with cputype %d; subtype %d; offset %u; size %u; align %u",
                v17->cputype,
                v17->cpusubtype,
                v17->offset,
                v17->size,
                v17->align);
              off_t offset = v17->offset;
              if (v24.st_size <= offset)
              {
                syslog(3, "Fat arch %u in %s specifies offset which is beyond the end of the file");
                goto LABEL_27;
              }
              macho_header_and_load_commands = _read_macho_header_and_load_commands(a1, offset, v24.st_size);
              if (!macho_header_and_load_commands) {
                break;
              }
              int v20 = macho_header_and_load_commands;
              char v21 = (*(uint64_t (**)(uint64_t, fat_arch *, char *))(a3 + 16))(a3, v17, macho_header_and_load_commands);
              free(v20);
              if (++v16 < (unint64_t)fat_header.nfat_arch)
              {
                ++v17;
                if (v21) {
                  continue;
                }
              }
              goto LABEL_37;
            }
            syslog(3, "Failed to read macho header and load commands in %s at %u");
          }
          else
          {
            uint64_t v22 = __error();
            strerror(*v22);
            syslog(3, "Failed to read fat archs from %s : %s");
          }
LABEL_27:
          uint64_t v8 = 0;
          if (!v14) {
            return v8;
          }
LABEL_28:
          free(v14);
          return v8;
        }
        syslog(3, "File is not large enough to contain %u fat arch headers and their referenced slices.");
      }
      else
      {
        syslog(3, "Number of fat archs %u exceeds the maximum %u");
      }
    }
    else
    {
      int v13 = __error();
      strerror(*v13);
      syslog(3, "Failed to read fat header of %s : %s");
    }
    unint64_t v14 = 0;
    goto LABEL_27;
  }
  if ((__buf[0] + 17958194) >= 2)
  {
    int v6 = -805638658;
LABEL_15:
    if (__buf[0] != v6)
    {
      syslog(3, "Unknown binary with magic 0x%08x at %s");
      return 0;
    }
  }
  BOOL v10 = _read_macho_header_and_load_commands(a1, 0, v24.st_size);
  if (v10)
  {
    unsigned int v11 = v10;
    (*(void (**)(uint64_t, void, char *))(a3 + 16))(a3, 0, v10);
    free(v11);
    return 1;
  }
  syslog(3, "Failed to read macho header and load commands in %s at %u");
  return 0;
}

char *_read_macho_header_and_load_commands(int a1, off_t a2, uint64_t a3)
{
  long long __buf = 0u;
  long long v19 = 0u;
  ssize_t v6 = pread(a1, &__buf, 0x20uLL, a2);
  if (v6 < 0)
  {
    uint64_t v9 = __error();
    strerror(*v9);
    syslog(3, "Failed to read mach header at offset %lld : %s");
LABEL_26:
    int v13 = 0;
    goto LABEL_27;
  }
  if (v6 != 28 && v6 != 32)
  {
    syslog(3, "Expected to read at least sizeof(struct mach_header) but only got %zd bytes");
    goto LABEL_26;
  }
  unsigned int v8 = v19;
  unsigned int v7 = DWORD1(v19);
  if ((int)__buf > -17958195)
  {
    if (__buf != -17958194)
    {
      if (__buf == -17958193) {
        goto LABEL_12;
      }
LABEL_23:
      syslog(3, "Unknown magic in macho header at offset %llu: 0x%08x");
      goto LABEL_26;
    }
LABEL_15:
    size_t v10 = 28;
    goto LABEL_16;
  }
  if (__buf == -822415874)
  {
    unsigned int v7 = bswap32(DWORD1(v19));
    unsigned int v8 = bswap32(v19);
    goto LABEL_15;
  }
  if (__buf != -805638658) {
    goto LABEL_23;
  }
  unsigned int v7 = bswap32(DWORD1(v19));
  unsigned int v8 = bswap32(v19);
LABEL_12:
  if (v6 != 32)
  {
    syslog(3, "Got 64-bit magic but didn't read size of 64-bit mach header");
    goto LABEL_26;
  }
  size_t v10 = 32;
LABEL_16:
  size_t v11 = v7;
  if (8 * (unint64_t)v8 > v7)
  {
    syslog(3, "Space required for total size of load commands (%llu) is greater than indicated size of commands (%u).");
    goto LABEL_26;
  }
  if ((uint64_t)(v10 + v7 + a2) >= a3)
  {
    syslog(3, "File is not large enough to contain commands with length %u");
    goto LABEL_26;
  }
  uint64_t v12 = (char *)malloc_type_malloc(v10 + v7, 0xD7630F4AuLL);
  int v13 = v12;
  if (!v12)
  {
    uint64_t v16 = __error();
    strerror(*v16);
    syslog(3, "Failed to allocate %llu bytes: %s");
    goto LABEL_27;
  }
  memcpy(v12, &__buf, v10);
  ssize_t v14 = pread(a1, &v13[v10], v11, v10 + a2);
  if (v14 < 0)
  {
    uint64_t v17 = __error();
    strerror(*v17);
    syslog(3, "Failed to read %u bytes at offset %lld : %s");
    goto LABEL_27;
  }
  if (v14 != v11)
  {
    syslog(3, "Expected to read %u bytes of commands but only got %zd bytes");
LABEL_27:
    free(v13);
    return 0;
  }
  return v13;
}

uint64_t get_highest_sdk_version_for_any_slice(const char *a1)
{
  uint64_t v5 = 0;
  ssize_t v6 = &v5;
  uint64_t v7 = 0x2000000000;
  int v8 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 0x40000000;
  _DWORD v4[2] = __get_highest_sdk_version_for_any_slice_block_invoke;
  v4[3] = &unk_1E62E7768;
  v4[4] = &v5;
  void v4[5] = a1;
  if (parse_macho_iterate_slices(a1, (uint64_t)v4))
  {
    uint64_t v2 = *((unsigned int *)v6 + 6);
  }
  else
  {
    syslog(3, "Failed to iterate macho file at %s", a1);
    uint64_t v2 = 0;
  }
  _Block_object_dispose(&v5, 8);
  return v2;
}

uint64_t __get_highest_sdk_version_for_any_slice_block_invoke(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2000000000;
  int v9 = 0;
  dyld_get_image_versions();
  int v2 = *((_DWORD *)v7 + 6);
  if (!v2)
  {
    syslog(3, "Failed to get SDK version from slice in %s", *(const char **)(a1 + 40));
    int v2 = *((_DWORD *)v7 + 6);
  }
  syslog(7, "Slice had version 0x%08x", v2);
  unsigned int v3 = *((_DWORD *)v7 + 6);
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  if (v3 > *(_DWORD *)(v4 + 24)) {
    *(_DWORD *)(v4 + 24) = v3;
  }
  _Block_object_dispose(&v6, 8);
  return 1;
}

uint64_t __get_highest_sdk_version_for_any_slice_block_invoke_2(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
  return result;
}

BOOL parse_macho_is_cpu_type_runnable_for_apps(int a1, int a2, char *a3, int *a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (!a3)
  {
    syslog(3, "Error: Argument pointer must not be null");
    int v12 = 13;
    syslog(3, "Unable to determine CPU type is runnable with error: %d", 13);
    BOOL v9 = 0;
    if (!a4) {
      return v9;
    }
    goto LABEL_12;
  }
  v17[0] = a1;
  v17[1] = a2;
  int v16 = 0;
  size_t v15 = 4;
  int v8 = sysctlbyname("kern.grade_cputype", &v16, &v15, v17, 8uLL);
  BOOL v9 = v8 == 0;
  if (v8)
  {
    size_t v10 = __error();
    size_t v11 = strerror(*v10);
    syslog(3, "Error calling kern.grade_cputype for CPU type 0x%x and subtype 0x%x: %s", a1, a2, v11);
    int v12 = 12;
    syslog(3, "Unable to determine CPU type is runnable with error: %d", 12);
    char v13 = 0;
  }
  else if (v16 >= 1 && a1 == 16777228 && (a2 & 0xFFFFFFu) <= 2)
  {
    syslog(7, "CPU type 0x%x and subtype 0x%x are runnable", 16777228, a2);
    int v12 = 0;
    char v13 = 1;
  }
  else
  {
    syslog(7, "CPU type 0x%x and subtype 0x%x are not runnable", a1, a2);
    int v12 = 0;
    char v13 = 0;
  }
  *a3 = v13;
  if (a4) {
LABEL_12:
  }
    *a4 = v12;
  return v9;
}

BOOL parse_macho_is_file_runnable_for_apps(const char *a1, unsigned char *a2, _DWORD *a3)
{
  int v33 = 0;
  char v32 = 0;
  memset(&v31, 0, sizeof(v31));
  int v30 = 0;
  if (!a1)
  {
    int v33 = 1;
    syslog(3, "Input path is NULL");
    goto LABEL_58;
  }
  if (!a2)
  {
    int v33 = 13;
    syslog(3, "Error: Argument pointer must not be null");
    goto LABEL_60;
  }
  int v6 = open(a1, 256);
  if (v6 != -1)
  {
    int v7 = v6;
    if (fstat(v6, &v31) == -1)
    {
      int v12 = *__error();
      int v33 = 3;
      cputype = (char *)a1;
      uint64_t cpusubtype = (uint64_t)strerror(v12);
      BOOL v9 = "Can't stat input file %s: %s";
      goto LABEL_54;
    }
    unint64_t st_size = v31.st_size;
    if (read(v7, &v30, 4uLL) != 4)
    {
      int v13 = *__error();
      int v33 = 5;
      cputype = (char *)a1;
      uint64_t cpusubtype = (uint64_t)strerror(v13);
      BOOL v9 = "Failed to read header for file %s: %s";
      goto LABEL_54;
    }
    if (lseek(v7, 0, 0) == -1)
    {
      int v14 = *__error();
      int v33 = 4;
      cputype = (char *)a1;
      uint64_t cpusubtype = (uint64_t)strerror(v14);
      BOOL v9 = "Can't seek input file %s: %s";
      goto LABEL_54;
    }
    if (st_size >= 8 && v30 == -1095041334)
    {
      *(void *)&fat_header.uint32_t magic = 0;
      if (read(v7, &fat_header, 8uLL) != 8)
      {
        int v16 = *__error();
        int v33 = 5;
        cputype = (char *)a1;
        uint64_t cpusubtype = (uint64_t)strerror(v16);
        BOOL v9 = "Failed to read fat header from input file %s: %s";
        goto LABEL_54;
      }
      swap_fat_header((fat_header *)&fat_header, NX_LittleEndian);
      if (fat_header.cputype >= 0x401u)
      {
        int v33 = 7;
        cputype = (char *)fat_header.cputype;
        uint64_t cpusubtype = 1024;
        BOOL v9 = "Number of fat archs %u exceeds the maximum %u";
LABEL_54:
        int v15 = 3;
        goto LABEL_55;
      }
      size_t v17 = 20 * fat_header.cputype;
      if (v17 + 8 > st_size)
      {
        int v33 = 8;
        cputype = (char *)a1;
        BOOL v9 = "Malformed fat file: %s";
        goto LABEL_54;
      }
      long long v19 = (fat_arch *)malloc_type_malloc(v17, 0x360B8367uLL);
      if (v19)
      {
        if (v17 == read(v7, v19, v17))
        {
          swap_fat_arch(v19, fat_header.cputype, NX_LittleEndian);
          if (fat_header.cputype)
          {
            uint64_t v20 = 0;
            p_uint64_t cpusubtype = &v19->cpusubtype;
            while (parse_macho_is_cpu_type_runnable_for_apps(*(p_cpusubtype - 1), *p_cpusubtype, &v32, &v33))
            {
              if (v32) {
                goto LABEL_64;
              }
              p_cpusubtype += 5;
              if (++v20 >= (unint64_t)fat_header.cputype) {
                goto LABEL_65;
              }
            }
            uint64_t v23 = "Failed to check if cpu type is runnable";
          }
          else
          {
            if (v32)
            {
LABEL_64:
              syslog(7, "FAT matching_arch cpu_type: 0x%x cpu_subtype: 0x%x");
              goto LABEL_56;
            }
LABEL_65:
            cputype = (char *)a1;
            uint64_t v23 = "Failed to find matching arch for FAT input file %s";
          }
        }
        else
        {
          int v24 = *__error();
          int v33 = 6;
          cputype = (char *)a1;
          uint64_t cpusubtype = (uint64_t)strerror(v24);
          uint64_t v23 = "Failed to read fat arch(s) from input file %s: %s";
        }
      }
      else
      {
        int v22 = *__error();
        int v33 = 9;
        cputype = strerror(v22);
        uint64_t v23 = "Failed to allocate memory for fat arch(s): %s";
      }
      syslog(3, v23, cputype, cpusubtype);
LABEL_56:
      free(v19);
      if ((v7 & 0x80000000) == 0) {
        close(v7);
      }
LABEL_58:
      if (!a2) {
        goto LABEL_60;
      }
      goto LABEL_59;
    }
    if (st_size >= 0x1C)
    {
      if (v30 == -17958194 || v30 == -822415874)
      {
        memset(&fat_header, 0, 28);
        if (read(v7, &fat_header, 0x1CuLL) == 28)
        {
          if (v30 == -822415874) {
            swap_mach_header((mach_header *)&fat_header, NX_LittleEndian);
          }
          if (parse_macho_is_cpu_type_runnable_for_apps(fat_header.cputype, fat_header.cpusubtype, &v32, &v33))
          {
            if (!v32)
            {
              cputype = (char *)a1;
              BOOL v9 = "Failed to find matching arch for 32-bit Mach-O input file %s";
              goto LABEL_54;
            }
            cputype = (char *)fat_header.cputype;
            uint64_t cpusubtype = fat_header.cpusubtype;
            BOOL v9 = "32-bit thin matching_arch cpu_type: 0x%x cpu_subtype: 0x%x";
LABEL_27:
            int v15 = 7;
LABEL_55:
            syslog(v15, v9, cputype, cpusubtype);
            long long v19 = 0;
            goto LABEL_56;
          }
          goto LABEL_50;
        }
        goto LABEL_41;
      }
      if (st_size >= 0x20 && (v30 == -17958193 || v30 == -805638658))
      {
        memset(&fat_header, 0, sizeof(fat_header));
        if (read(v7, &fat_header, 0x20uLL) == 32)
        {
          if (v30 == -805638658) {
            swap_mach_header_64(&fat_header, NX_LittleEndian);
          }
          if (parse_macho_is_cpu_type_runnable_for_apps(fat_header.cputype, fat_header.cpusubtype, &v32, &v33))
          {
            if (!v32)
            {
              cputype = (char *)a1;
              BOOL v9 = "Failed to find matching arch for 64-bit Mach-O input file %s";
              goto LABEL_54;
            }
            cputype = (char *)fat_header.cputype;
            uint64_t cpusubtype = fat_header.cpusubtype;
            BOOL v9 = "64-bit thin matching_arch cpu_type: 0x%x cpu_subtype: 0x%x";
            goto LABEL_27;
          }
LABEL_50:
          BOOL v9 = "Failed to check if cpu type is runnable";
          goto LABEL_54;
        }
LABEL_41:
        int v18 = *__error();
        int v33 = 5;
        cputype = (char *)a1;
        uint64_t cpusubtype = (uint64_t)strerror(v18);
        BOOL v9 = "Failed to read mach header from input file %s: %s";
        goto LABEL_54;
      }
    }
    int v33 = 10;
    cputype = (char *)a1;
    BOOL v9 = "Unknown binary format for input file %s.";
    goto LABEL_54;
  }
  int v10 = *__error();
  int v33 = 2;
  size_t v11 = strerror(v10);
  syslog(3, "Can't open input file %s: %s", a1, v11);
LABEL_59:
  *a2 = v32;
LABEL_60:
  int v25 = v33;
  if (a3) {
    *a3 = v33;
  }
  return v25 == 0;
}

void __getUMUserManagerClass_block_invoke_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  unsigned int v3 = [NSString stringWithUTF8String:"void *UserManagementLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"ICLSoftLinking.h", 38, @"%s", *a1);

  __break(1u);
}

void __getUMUserManagerClass_block_invoke_cold_2()
{
  uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  int v1 = [NSString stringWithUTF8String:"Class getUMUserManagerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"ICLSoftLinking.h", 39, @"Unable to find class %s", "UMUserManager");

  __break(1u);
}

void MIFetchInfoForUsername_cold_1(void *a1, _OWORD *a2)
{
  int v4 = *__error();
  *a1 = 0;
  a2[3] = 0u;
  a2[4] = 0u;
  a2[1] = 0u;
  a2[2] = 0u;
  *a2 = 0u;
  os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR);
  strerror(v4);
  _os_log_send_and_compose_impl();
  _os_crash_msg();
  __break(1u);
}

void MIFetchInfoForUsername_cold_2(void *a1, _OWORD *a2)
{
  *a1 = 0;
  a2[3] = 0u;
  a2[4] = 0u;
  a2[1] = 0u;
  a2[2] = 0u;
  *a2 = 0u;
  os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR);
  _os_log_send_and_compose_impl();
  _os_crash_msg();
  __break(1u);
}

void MIAssumeIdentity_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = 136315138;
  int v1 = "MIAssumeIdentity";
  _os_log_fault_impl(&dword_1BCA62000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "%s: Attempting to assume an identity of 0/0, which should be the default for the helper service", (uint8_t *)&v0, 0xCu);
}

void MIRestoreIdentity_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = 136315138;
  int v1 = "MIRestoreIdentity";
  _os_log_fault_impl(&dword_1BCA62000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "%s: Attempting to restore an identity without having first assumed an identity", (uint8_t *)&v0, 0xCu);
}

void MIReserveMemoryForValidation_cold_1(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v2 = 134218498;
  uint64_t v3 = a2;
  __int16 v4 = 2048;
  uint64_t v5 = sMaxAvailableMemoryForResourceValidation;
  __int16 v6 = 2112;
  uint64_t v7 = a1;
  _os_log_fault_impl(&dword_1BCA62000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Got validation memory usage of %zu bytes which is greater than our available memory of %zu bytes (while validating %@); hoping for the best",
    (uint8_t *)&v2,
    0x20u);
}

void MIReturnMemoryUsedForValidation_cold_1()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v0;
  __int16 v5 = v1;
  uint64_t v6 = v2;
  _os_log_fault_impl(&dword_1BCA62000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Got memory size to return, %zu, which would result in %zu available, which is more than the maximum of %zu bytes; ca"
    "pping at max available",
    v3,
    0x20u);
}

void MIReturnMemoryUsedForValidation_cold_2()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  OUTLINED_FUNCTION_0();
  uint64_t v2 = v0;
  _os_log_fault_impl(&dword_1BCA62000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Got memory size to return %zu which is greater than our available memory of %zu bytes; capping at max available",
    v1,
    0x16u);
}

void MIReduceAvailableMemoryForValidationForTesting_cold_1(void *a1, _OWORD *a2)
{
  *a1 = 0;
  a2[3] = 0u;
  a2[4] = 0u;
  a2[1] = 0u;
  a2[2] = 0u;
  *a2 = 0u;
  os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR);
  _os_log_send_and_compose_impl();
  _os_crash_msg();
  __break(1u);
}

void __getEXExtensionPointCatalogClass_block_invoke_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *ExtensionFoundationLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"ICLSoftLinking.h", 47, @"%s", *a1);

  __break(1u);
}

void __getEXExtensionPointCatalogClass_block_invoke_cold_2()
{
  uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  __int16 v1 = [NSString stringWithUTF8String:"Class getEXExtensionPointCatalogClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"ICLSoftLinking.h", 48, @"Unable to find class %s", "EXExtensionPointCatalog");

  __break(1u);
}

void MIMachOSimPlatformForPlatform_cold_1(uint64_t a1)
{
  int v1 = a1;
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = MIMachOStringForPlatform(a1);
  int v3 = 136315650;
  uint64_t v4 = "MIMachOSimPlatformForPlatform";
  __int16 v5 = 2112;
  uint64_t v6 = v2;
  __int16 v7 = 1024;
  int v8 = v1;
  _os_log_fault_impl(&dword_1BCA62000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "%s: Platform %@ (%u) does not have a simulator equivalent; returning PLATFORM_UNKNOWN",
    (uint8_t *)&v3,
    0x1Cu);
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return MEMORY[0x1F40C9738](md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return MEMORY[0x1F40C9740](c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9748](c, data, *(void *)&len);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1F40C9770](data, *(void *)&len, md);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9778](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9780](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9788](c, data, *(void *)&len);
}

CFArrayRef CFBundleCopyLocalizationsForPreferences(CFArrayRef locArray, CFArrayRef prefArray)
{
  return (CFArrayRef)MEMORY[0x1F40D7490](locArray, prefArray);
}

CFURLRef CFBundleCopyResourceURL(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName)
{
  return (CFURLRef)MEMORY[0x1F40D74D0](bundle, resourceName, resourceType, subDirName);
}

CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle)
{
  return (CFDictionaryRef)MEMORY[0x1F40D7578](bundle);
}

CFStringRef CFCopyTypeIDDescription(CFTypeID type_id)
{
  return (CFStringRef)MEMORY[0x1F40D77D0](type_id);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1F40D7A00]();
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1F40D7A68](cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1F40D8048](cf);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1F417CDE0]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1F417CE00]();
}

uint64_t MISCopyErrorStringForErrorCode()
{
  return MEMORY[0x1F4180DA0]();
}

uint64_t MISEntitlementDictionaryAllowsEntitlementValue()
{
  return MEMORY[0x1F4180DA8]();
}

uint64_t MISEnumerateMatchingProfilesUnauthoritative()
{
  return MEMORY[0x1F4180DB8]();
}

uint64_t MISInstallProvisioningProfile()
{
  return MEMORY[0x1F4180DC8]();
}

uint64_t MISProfileCreateWithData()
{
  return MEMORY[0x1F4180DD0]();
}

uint64_t MISProfileCreateWithFile()
{
  return MEMORY[0x1F4180DD8]();
}

uint64_t MISRemoveProvisioningProfile()
{
  return MEMORY[0x1F4180E20]();
}

uint64_t MISValidateSignatureAndCopyInfo()
{
  return MEMORY[0x1F4180E38]();
}

uint64_t MISValidationCopySignatureVersion()
{
  return MEMORY[0x1F4180E48]();
}

uint64_t MOLogWrite()
{
  return MEMORY[0x1F412FD50]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

void *__cdecl NSHashGet(NSHashTable *table, const void *pointer)
{
  return (void *)MEMORY[0x1F40E70E8](table, pointer);
}

void NSHashInsertKnownAbsent(NSHashTable *table, const void *pointer)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

uint64_t SecCertificateCopyOrganization()
{
  return MEMORY[0x1F40F6B28]();
}

CFStringRef SecCertificateCopySubjectSummary(SecCertificateRef certificate)
{
  return (CFStringRef)MEMORY[0x1F40F6B68](certificate);
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x1F40F6B80](allocator, data);
}

uint64_t SecItemDeleteAllWithAccessGroups()
{
  return MEMORY[0x1F40F6DF0]();
}

CFStringRef SecTaskCopySigningIdentifier(SecTaskRef task, CFErrorRef *error)
{
  return (CFStringRef)MEMORY[0x1F40F7128](task, error);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1F40F7138](task, entitlement, error);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return (SecTaskRef)MEMORY[0x1F40F7168](allocator, token);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

uint64_t _CFBundleCopyInfoPlistURL()
{
  return MEMORY[0x1F40D8BE8]();
}

uint64_t _CFBundleCreateFilteredInfoPlist()
{
  return MEMORY[0x1F40D8C20]();
}

uint64_t _CFBundleCreateUnique()
{
  return MEMORY[0x1F40D8C30]();
}

uint64_t _CFCopySystemVersionDictionary()
{
  return MEMORY[0x1F40D8D10]();
}

uint64_t _CFCopySystemVersionDictionaryValue()
{
  return MEMORY[0x1F40D8D18]();
}

uint64_t _CFPropertyListCreateFiltered()
{
  return MEMORY[0x1F40D9030]();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x1F40D9438]();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return MEMORY[0x1F40D9450]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x1F40C9B88]();
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x1F40C9CD8]();
}

uint64_t _os_crash()
{
  return MEMORY[0x1F40C9FA0]();
}

uint64_t _os_crash_msg()
{
  return MEMORY[0x1F40C9FA8]();
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _os_log_send_and_compose_impl()
{
  return MEMORY[0x1F40C9FF8]();
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

ssize_t acl_copy_ext_native(void *buf_p, acl_t acl, ssize_t size)
{
  return MEMORY[0x1F40CA240](buf_p, acl, size);
}

int acl_free(void *obj_p)
{
  return MEMORY[0x1F40CA270](obj_p);
}

acl_t acl_get_file(const char *path_p, acl_type_t type)
{
  return (acl_t)MEMORY[0x1F40CA298](path_p, *(void *)&type);
}

acl_t acl_init(int count)
{
  return (acl_t)MEMORY[0x1F40CA2D0](*(void *)&count);
}

int acl_set_fd(int fd, acl_t acl)
{
  return MEMORY[0x1F40CA2D8](*(void *)&fd, acl);
}

ssize_t acl_size(acl_t acl)
{
  return MEMORY[0x1F40CA320](acl);
}

char *__cdecl acl_to_text(acl_t acl, ssize_t *len_p)
{
  return (char *)MEMORY[0x1F40CA328](acl, len_p);
}

uint64_t amfi_interface_query_bootarg_state()
{
  return MEMORY[0x1F410AA40]();
}

pid_t audit_token_to_pid(audit_token_t *atoken)
{
  return MEMORY[0x1F417E2E8](atoken);
}

void bzero(void *a1, size_t a2)
{
}

int clonefile(const char *a1, const char *a2, uint32_t a3)
{
  return MEMORY[0x1F40CB3E0](a1, a2, *(void *)&a3);
}

int close(int a1)
{
  return MEMORY[0x1F40CB3F8](*(void *)&a1);
}

int closedir(DIR *a1)
{
  return MEMORY[0x1F40CB400](a1);
}

uint64_t container_copy_code_signing_info_for_identifier()
{
  return MEMORY[0x1F40CB538]();
}

uint64_t container_copy_object()
{
  return MEMORY[0x1F40CB540]();
}

uint64_t container_copy_sandbox_token()
{
  return MEMORY[0x1F40CB550]();
}

uint64_t container_copy_unlocalized_description()
{
  return MEMORY[0x1F40CB558]();
}

uint64_t container_delete_all_container_content()
{
  return MEMORY[0x1F40CB5B0]();
}

uint64_t container_disk_usage()
{
  return MEMORY[0x1F40CB5C0]();
}

uint64_t container_error_copy_unlocalized_description()
{
  return MEMORY[0x1F40CB5D0]();
}

uint64_t container_error_free()
{
  return MEMORY[0x1F40CB5E0]();
}

uint64_t container_error_get_path()
{
  return MEMORY[0x1F40CB5F0]();
}

uint64_t container_error_get_posix_errno()
{
  return MEMORY[0x1F40CB5F8]();
}

uint64_t container_error_get_type()
{
  return MEMORY[0x1F40CB600]();
}

uint64_t container_free_array_of_containers()
{
  return MEMORY[0x1F40CB608]();
}

uint64_t container_free_object()
{
  return MEMORY[0x1F40CB618]();
}

uint64_t container_get_class()
{
  return MEMORY[0x1F40CB630]();
}

uint64_t container_get_error_description()
{
  return MEMORY[0x1F40CB638]();
}

uint64_t container_get_identifier()
{
  return MEMORY[0x1F40CB640]();
}

uint64_t container_get_info_value_for_key()
{
  return MEMORY[0x1F40CB648]();
}

uint64_t container_get_path()
{
  return MEMORY[0x1F40CB650]();
}

uint64_t container_get_persona_unique_string()
{
  return MEMORY[0x1F40CB658]();
}

uint64_t container_invalidate_code_signing_cache()
{
  return MEMORY[0x1F40CB680]();
}

uint64_t container_is_equal()
{
  return MEMORY[0x1F40CB688]();
}

uint64_t container_is_new()
{
  return MEMORY[0x1F40CB690]();
}

uint64_t container_is_transient()
{
  return MEMORY[0x1F40CB698]();
}

uint64_t container_operation_delete_array()
{
  return MEMORY[0x1F40CB6F8]();
}

uint64_t container_operation_delete_reclaim_disk_space()
{
  return MEMORY[0x1F40CB700]();
}

uint64_t container_query_create()
{
  return MEMORY[0x1F40CB720]();
}

uint64_t container_query_create_from_container()
{
  return MEMORY[0x1F40CB728]();
}

uint64_t container_query_free()
{
  return MEMORY[0x1F40CB730]();
}

uint64_t container_query_get_last_error()
{
  return MEMORY[0x1F40CB738]();
}

uint64_t container_query_get_single_result()
{
  return MEMORY[0x1F40CB740]();
}

uint64_t container_query_iterate_results_sync()
{
  return MEMORY[0x1F40CB748]();
}

uint64_t container_query_operation_set_flags()
{
  return MEMORY[0x1F40CB750]();
}

uint64_t container_query_set_class()
{
  return MEMORY[0x1F40CB760]();
}

uint64_t container_query_set_group_identifiers()
{
  return MEMORY[0x1F40CB768]();
}

uint64_t container_query_set_identifiers()
{
  return MEMORY[0x1F40CB770]();
}

uint64_t container_query_set_include_other_owners()
{
  return MEMORY[0x1F40CB778]();
}

uint64_t container_query_set_persona_unique_string()
{
  return MEMORY[0x1F40CB780]();
}

uint64_t container_query_set_transient()
{
  return MEMORY[0x1F40CB788]();
}

uint64_t container_recreate_structure()
{
  return MEMORY[0x1F40CB7A0]();
}

uint64_t container_regenerate_uuid()
{
  return MEMORY[0x1F40CB7A8]();
}

uint64_t container_replace()
{
  return MEMORY[0x1F40CB7B0]();
}

uint64_t container_serialize_copy_deserialized_reference()
{
  return MEMORY[0x1F40CB7C8]();
}

uint64_t container_serialize_copy_serialized_reference()
{
  return MEMORY[0x1F40CB7D0]();
}

uint64_t container_set_code_signing_info_for_identifier()
{
  return MEMORY[0x1F40CB7D8]();
}

uint64_t container_set_data_protection_for_current_user()
{
  return MEMORY[0x1F40CB7E0]();
}

uint64_t container_set_info_value()
{
  return MEMORY[0x1F40CB7E8]();
}

uint64_t container_subdirectories_for_class()
{
  return MEMORY[0x1F40CB7F0]();
}

uint64_t container_system_group_path_for_identifier()
{
  return MEMORY[0x1F40CB7F8]();
}

int copyfile(const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags)
{
  return MEMORY[0x1F40CB880](from, to, state, *(void *)&flags);
}

copyfile_state_t copyfile_state_alloc(void)
{
  return (copyfile_state_t)MEMORY[0x1F40CB888]();
}

int copyfile_state_free(copyfile_state_t a1)
{
  return MEMORY[0x1F40CB890](a1);
}

int copyfile_state_set(copyfile_state_t s, uint32_t flag, const void *src)
{
  return MEMORY[0x1F40CB8A0](s, *(void *)&flag, src);
}

int dirfd(DIR *dirp)
{
  return MEMORY[0x1F40CB900](dirp);
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA8](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

uint64_t dyld_get_active_platform()
{
  return MEMORY[0x1F40CBE10]();
}

uint64_t dyld_get_image_versions()
{
  return MEMORY[0x1F40CBE20]();
}

void exit(int a1)
{
}

int fchmod(int a1, mode_t a2)
{
  return MEMORY[0x1F40CC028](*(void *)&a1, a2);
}

int fchown(int a1, uid_t a2, gid_t a3)
{
  return MEMORY[0x1F40CC038](*(void *)&a1, *(void *)&a2, *(void *)&a3);
}

int fcntl(int a1, int a2, ...)
{
  return MEMORY[0x1F40CC058](*(void *)&a1, *(void *)&a2);
}

int ffsctl(int a1, unint64_t a2, void *a3, unsigned int a4)
{
  return MEMORY[0x1F40CC0D8](*(void *)&a1, a2, a3, *(void *)&a4);
}

int fgetattrlist(int a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x1F40CC0E0](*(void *)&a1, a2, a3, a4, *(void *)&a5);
}

ssize_t fgetxattr(int fd, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CC108](*(void *)&fd, name, value, size, *(void *)&position, *(void *)&options);
}

ssize_t flistxattr(int fd, char *namebuff, size_t size, int options)
{
  return MEMORY[0x1F40CC158](*(void *)&fd, namebuff, size, *(void *)&options);
}

void free(void *a1)
{
}

int fremovexattr(int fd, const char *name, int options)
{
  return MEMORY[0x1F40CC240](*(void *)&fd, name, *(void *)&options);
}

int fsetattrlist(int a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x1F40CC2A0](*(void *)&a1, a2, a3, a4, *(void *)&a5);
}

int fsetxattr(int fd, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CC2A8](*(void *)&fd, name, value, size, *(void *)&position, *(void *)&options);
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x1F40CC2B8](*(void *)&a1, a2);
}

int fsync(int a1)
{
  return MEMORY[0x1F40CC2D8](*(void *)&a1);
}

int fts_close(FTS *a1)
{
  return MEMORY[0x1F40CC2F8](a1);
}

FTS *__cdecl fts_open(char *const *a1, int a2, int (__cdecl *a3)(const FTSENT **, const FTSENT **))
{
  return (FTS *)MEMORY[0x1F40CC300](a1, *(void *)&a2, a3);
}

FTSENT *__cdecl fts_read(FTS *a1)
{
  return (FTSENT *)MEMORY[0x1F40CC308](a1);
}

int futimes(int a1, const timeval *a2)
{
  return MEMORY[0x1F40CC330](*(void *)&a1, a2);
}

int getattrlistbulk(int a1, void *a2, void *a3, size_t a4, uint64_t a5)
{
  return MEMORY[0x1F40CC370](*(void *)&a1, a2, a3, a4, a5);
}

uid_t geteuid(void)
{
  return MEMORY[0x1F40CC3B8]();
}

gid_t getgid(void)
{
  return MEMORY[0x1F40CC3D0]();
}

pid_t getpid(void)
{
  return MEMORY[0x1F40CC4A0]();
}

int getpwnam_r(const char *a1, passwd *a2, char *a3, size_t a4, passwd **a5)
{
  return MEMORY[0x1F40CC4E0](a1, a2, a3, a4, a5);
}

int getpwuid_r(uid_t a1, passwd *a2, char *a3, size_t a4, passwd **a5)
{
  return MEMORY[0x1F40CC4F0](*(void *)&a1, a2, a3, a4, a5);
}

uint8_t *__cdecl getsectiondata(const mach_header_64 *mhp, const char *segname, const char *sectname, unint64_t *size)
{
  return (uint8_t *)MEMORY[0x1F40CC528](mhp, segname, sectname, size);
}

uid_t getuid(void)
{
  return MEMORY[0x1F40CC570]();
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CC590](path, name, value, size, *(void *)&position, *(void *)&options);
}

int initgroups(const char *a1, int a2)
{
  return MEMORY[0x1F40CC688](a1, *(void *)&a2);
}

int lchmod(const char *a1, mode_t a2)
{
  return MEMORY[0x1F40CC7F0](a1, a2);
}

int lchown(const char *a1, uid_t a2, gid_t a3)
{
  return MEMORY[0x1F40CC7F8](a1, *(void *)&a2, *(void *)&a3);
}

int link(const char *a1, const char *a2)
{
  return MEMORY[0x1F40CC830](a1, a2);
}

off_t lseek(int a1, off_t a2, int a3)
{
  return MEMORY[0x1F40CC8F8](*(void *)&a1, a2, *(void *)&a3);
}

int lstat(const char *a1, stat *a2)
{
  return MEMORY[0x1F40CC900](a1, a2);
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1F40CC910]();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x1F40CC970](msg, *(void *)&option, *(void *)&send_size, *(void *)&rcv_size, *(void *)&rcv_name, *(void *)&timeout, *(void *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD20](__b, *(void *)&__c, __len);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x1F40CCD70]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

int mkdir(const char *a1, mode_t a2)
{
  return MEMORY[0x1F40CCDD0](a1, a2);
}

char *__cdecl mkdtemp(char *a1)
{
  return (char *)MEMORY[0x1F40CCDE0](a1);
}

int mkpath_np(const char *path, mode_t omode)
{
  return MEMORY[0x1F40CCE00](path, omode);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

void objc_terminate(void)
{
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1F40CD0E0](a1, *(void *)&a2);
}

int open_dprotected_np(const char *a1, int a2, int a3, int a4, ...)
{
  return MEMORY[0x1F40CD0F0](a1, *(void *)&a2, *(void *)&a3, *(void *)&a4);
}

DIR *__cdecl opendir(const char *a1)
{
  return (DIR *)MEMORY[0x1F40CD120](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1F40CD5A0]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x1F40CD630]();
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1F40CD648]();
}

uint64_t os_variant_uses_ephemeral_storage()
{
  return MEMORY[0x1F40CD670]();
}

ssize_t pread(int __fd, void *__buf, size_t __nbyte, off_t a4)
{
  return MEMORY[0x1F40CD830](*(void *)&__fd, __buf, __nbyte, a4);
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x1F40CD8B8](*(void *)&pid, buffer, *(void *)&buffersize);
}

int pthread_cond_broadcast(pthread_cond_t *a1)
{
  return MEMORY[0x1F40CD978](a1);
}

int pthread_cond_wait(pthread_cond_t *a1, pthread_mutex_t *a2)
{
  return MEMORY[0x1F40CD9A8](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA88](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA98](a1);
}

int pthread_setugid_np(uid_t a1, gid_t a2)
{
  return MEMORY[0x1F40CDB78](*(void *)&a1, *(void *)&a2);
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return MEMORY[0x1F40CDC50](*(void *)&a1, a2, a3);
}

ssize_t readlink(const char *a1, char *a2, size_t a3)
{
  return MEMORY[0x1F40CDC70](a1, a2, a3);
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return (char *)MEMORY[0x1F40CDC98](a1, a2);
}

int removefile(const char *path, removefile_state_t state, removefile_flags_t flags)
{
  return MEMORY[0x1F40CDD18](path, state, *(void *)&flags);
}

removefile_state_t removefile_state_alloc(void)
{
  return (removefile_state_t)MEMORY[0x1F40CDD20]();
}

int removefile_state_free(removefile_state_t a1)
{
  return MEMORY[0x1F40CDD28](a1);
}

int removefile_state_get(removefile_state_t state, uint32_t key, void *dst)
{
  return MEMORY[0x1F40CDD30](state, *(void *)&key, dst);
}

int removefile_state_set(removefile_state_t state, uint32_t key, const void *value)
{
  return MEMORY[0x1F40CDD38](state, *(void *)&key, value);
}

int removexattr(const char *path, const char *name, int options)
{
  return MEMORY[0x1F40CDD48](path, name, *(void *)&options);
}

void rename(const std::__fs::filesystem::path *__from, const std::__fs::filesystem::path *__to, std::error_code *__ec)
{
}

int renameatx_np(int a1, const char *a2, int a3, const char *a4, unsigned int a5)
{
  return MEMORY[0x1F40CDD68](*(void *)&a1, a2, *(void *)&a3, a4, *(void *)&a5);
}

int rmdir(const char *a1)
{
  return MEMORY[0x1F40CDD90](a1);
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1F40CDDF8]();
}

int setattrlist(const char *a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x1F40CDF50](a1, a2, a3, a4, *(void *)&a5);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CDFD8](path, name, value, size, *(void *)&position, *(void *)&options);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x1F40CE178](__s1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1F40CE1F0](__s1, __s2, __n);
}

void swap_fat_arch(fat_arch *fat_archs, uint32_t nfat_arch, NXByteOrder target_byte_order)
{
}

void swap_fat_header(fat_header *fat_header, NXByteOrder target_byte_order)
{
}

void swap_mach_header(mach_header *mh, NXByteOrder target_byte_order)
{
}

void swap_mach_header_64(mach_header_64 *mh, NXByteOrder target_byte_order)
{
}

int symlink(const char *a1, const char *a2)
{
  return MEMORY[0x1F40CE360](a1, a2);
}

uint64_t sysconf(int a1)
{
  return MEMORY[0x1F40CE3B8](*(void *)&a1);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1F40CE3D0](a1, a2, a3, a4, a5);
}

void syslog(int a1, const char *a2, ...)
{
}

int uname(utsname *a1)
{
  return MEMORY[0x1F40CE5C8](a1);
}

int unlink(const char *a1)
{
  return MEMORY[0x1F40CE5E0](a1);
}

void uuid_generate(uuid_t out)
{
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x1F40CE758](msg);
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return MEMORY[0x1F40CE928](*(void *)&__fd, __buf, __nbyte);
}

void xpc_array_append_value(xpc_object_t xarray, xpc_object_t value)
{
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x1F40CEA30](objects, count);
}

uint64_t xpc_connection_set_target_user_session_uid()
{
  return MEMORY[0x1F40CECF0]();
}

uint64_t xpc_strerror()
{
  return MEMORY[0x1F40CF288]();
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x1F40CF290](string);
}

uint64_t xpc_user_sessions_enabled()
{
  return MEMORY[0x1F40CF340]();
}

uint64_t xpc_user_sessions_get_foreground_uid()
{
  return MEMORY[0x1F40CF348]();
}