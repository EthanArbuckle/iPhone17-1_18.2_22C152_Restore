@interface PDDatabaseManager
+ (BOOL)databaseExistsAtURL:(id)a3;
- (BOOL)_addHumphreysTableMigration:(id)a3 context:(id)a4;
- (BOOL)_addKeithTableMigration:(id)a3 context:(id)a4;
- (BOOL)_migrateAmountDecimalDigitsToVersion:(int64_t)a3 inDatabase:(id)a4;
- (BOOL)_migrateFrom10000To10001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10001To10002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10002To10003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10003To10004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10004To10005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10005To10006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10006To10007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10007To10008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10008To10009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10009To10010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10010To10011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10011To10012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10012To10013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10013To10014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10014To10015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10015To10016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10016To10200:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10200To10300:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10300To11000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11000To11001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11001To11002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11002To11003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11003To11004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11004To11005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11005To11006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11006To11007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11007To11008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11008To11009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11009To11010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11010To11011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11011To11012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11012To11013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11013To11014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11014To11015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11015To11016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11016To11017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11017To11018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11018To11019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11019To11020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11020To11021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11021To11022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11022To11100:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11100To11200:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11200To11201:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11201To11300:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11300To11301:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11301To11302:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11302To11303:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11303To12000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12000To12001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12001To12002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12002To12003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12003To12004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12004To12005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12005To12006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12006To12007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12007To12008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12008To12009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12009To12010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12010To12011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12011To12012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12012To12013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12013To12014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12014To12015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12015To12016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12016To12017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12017To12018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12018To12019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12019To12020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12020To12021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12021To12022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12022To12023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12023To12024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12024To12025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12025To12026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12026To12027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12027To12028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12028To12029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12029To12030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12030To12031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12031To12032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12032To12033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12033To12034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12034To12035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12035To12036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12036To12037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12037To12038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12038To12039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12039To12040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12040To12041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12041To12042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12042To12043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12043To12044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12044To12045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12045To12046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12046To12047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12047To12048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12048To12049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12049To12050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12050To12051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12051To12052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12052To12053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12053To12054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12054To12055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12055To12056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12056To12057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12057To12058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12058To12059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12059To12060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12060To12061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12061To12062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12062To12063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12063To12064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12064To12065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12065To12066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12066To12067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12067To12068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12068To12069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12069To12070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12070To12071:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12071To12072:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12072To12073:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12073To12074:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12074To12075:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12075To12076:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12076To12077:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12077To12078:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12078To12079:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12079To12080:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12080To12081:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12081To12082:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12083To12084:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12084To12085:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12085To12086:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12086To12087:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12087To12088:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12088To12089:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12089To12090:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12090To12091:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12091To12092:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12092To12093:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12093To12094:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12094To12095:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12095To12096:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12097To12098:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12XXXTo13000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13000To13001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13001To13002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13002To13003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13003To13004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13005To13006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13006To13007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13007To13008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13008To13009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13009To13010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13010To13011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13014To13015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13015To13016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13016To13017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13017To13018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13018To13019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13019To13020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13020To13021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13021To13022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13022To13023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13023To13024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13024To13025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13025To13100:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13100To13101:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13101To13102:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13102To13103:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13103To13104:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13104To13105:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13105To13106:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13106To13107:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13107To13108:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13108To13109:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13109To13110:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13110To13111:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13111To13112:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13112To13113:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13113To13114:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13114To13115:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13115To13116:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13116To13117:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13117To13118:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13118To13119:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13119To13120:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13120To13400:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13400To13401:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13401To13402:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13402To13403:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13403To13404:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13404To13405:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13405To13406:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13406To13500:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13500To13501:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13501To14000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14000To14001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14001To14002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14002To14003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14003To14004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14004To14005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14005To14006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14006To14007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14007To14008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14008To14009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14009To14010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14010To14011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14011To14012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14012To14013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14013To14014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14014To14015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14015To14016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14016To14017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14017To14018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14018To14019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14019To14020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14020To14021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14021To14022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14022To14023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14023To14024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14024To14025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14025To14026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14026To14027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14027To14028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14028To14029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14029To14030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14030To14031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14031To14032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14032To14033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14033To14034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14034To14035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14035To14036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14036To14037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14037To14038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14038To14039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14039To14040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14040To14041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14041To14042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14042To14043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14043To14044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14044To14045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14045To14046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14046To14047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14047To14048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14048To14049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14049To14050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14050To14051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14051To14052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14052To14053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14053To14054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14054To14055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14055To14056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14056To14057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14057To14058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14058To14059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14059To14060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14060To14061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14061To14062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14062To14063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14063To14064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14064To14065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14065To14066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14066To14067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14067To14068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14068To14069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14069To14070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14070To14400:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14400To14401:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14401To14402:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14402To14403:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14403To14404:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14404To14405:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14405To14406:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14406To14407:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14407To14408:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14408To14409:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14409To14410:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14410To14411:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14411To14412:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14412To14413:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14413To14414:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14414To14415:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14415To14416:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14416To14417:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14417To14418:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14418To14419:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14419To14420:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14420To14421:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14421To14422:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14422To14423:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14423To14424:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14424To14425:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14425To14426:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14426To14427:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14427To14428:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14428To14429:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14429To14430:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14430To14431:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14431To14432:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14432To14433:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14433To14434:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14434To14435:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14435To14436:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14436To14437:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14437To14438:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14438To14439:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14439To14440:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14440To14441:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14441To14442:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14442To14443:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14443To14444:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14444To14445:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14445To14446:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14446To14447:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14447To14448:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14448To14449:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14449To14450:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14450To14451:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14451To14452:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14452To14453:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14453To14454:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14454To14455:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14455To14456:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14456To14457:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14457To14458:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14458To14459:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14459To14460:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14460To14461:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14461To14462:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14462To14463:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14463To14464:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14464To14465:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14465To14466:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14466To14467:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14467To14468:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14468To14469:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14469To14470:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14470To14471:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14471To14472:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14472To14473:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14473To14474:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14474To14475:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14475To14476:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14476To15000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15000To15001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15001To15002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15002To15003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15003To15004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15004To15005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15005To15006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15006To15007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15007To15008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15008To15009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15009To15010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15010To15011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15011To15012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15012To15013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15013To15014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15014To15015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15015To15016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15016To15017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15017To15018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15018To15019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15019To15020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15020To15021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15021To15022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15022To15023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15023To15024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15024To15025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15025To15026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15026To15027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15027To15028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15028To15029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15029To15030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15030To15031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15031To15032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15032To15033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15033To15034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15034To15035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15035To15036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15036To15037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15037To15038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15038To15039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15039To15040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15040To15041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15041To15042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15042To15043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15043To15044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15044To15045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15045To15046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15046To15047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15047To15048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15048To15049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15049To15050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15050To15051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15051To15052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15052To15053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15053To15054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15054To15055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15055To15056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15056To15057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15057To15058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15058To15059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15059To15060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15060To15061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15061To15062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15062To15063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15063To15064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15064To15065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15065To15066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15066To15067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15067To15068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15068To15069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15069To15070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15070To15071:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15071To15072:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15072To15073:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15073To15074:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15074To15075:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15075To15076:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15076To15077:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15077To15078:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15078To15079:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15079To15080:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15080To15081:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15081To15082:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15082To15083:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15083To15084:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15084To16000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16000To16001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16001To16002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16002To16003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16003To16004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16004To16005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16005To16006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16006To16007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16007To16008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16008To16009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16009To16010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16010To16011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16011To16012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16012To16013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16013To16014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16014To16015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16015To16016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16016To16017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16017To16018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16018To16019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16019To16020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16020To16021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16021To16022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16022To16023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16023To16024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16024To16025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16025To16026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16026To16027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16027To16028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16028To16029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16029To16030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16030To16031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16031To16032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16032To16033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16033To16034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16034To16035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16035To16036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16036To16037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16037To16038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16038To16039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16039To16040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16040To16041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16041To16042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16042To16043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16043To16044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16044To16045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16045To16046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16046To16047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16047To16048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16048To16049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16049To16050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16050To16051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16051To16052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16052To16053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16053To16054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16054To16055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16055To16056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16056To16057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16057To16058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16058To16059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16059To16060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16060To16061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16061To16062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16062To16063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16063To16064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16064To16065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16065To16066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16066To16067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16067To16068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16068To16069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16069To16070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16070To16071:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16071To16072:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16072To16073:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16073To16074:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16074To16075:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16075To16076:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16076To16077:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16077To16078:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16078To16079:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16079To16080:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16080To16081:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16081To16082:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16082To16083:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16083To16084:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16084To16085:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16085To16086:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16086To16087:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16087To16088:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16088To16089:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16089To16090:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16090To16091:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16091To16092:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16092To16093:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16093To16094:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16094To16095:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16095To16096:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16096To16097:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16097To16098:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16098To16099:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16099To16100:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16100To16101:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16101To16102:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16102To16103:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16103To16104:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16104To16105:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16105To16106:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16106To16107:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16107To16108:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16108To16109:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16109To16110:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16110To16111:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16111To16112:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16112To16113:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16113To16114:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16114To16115:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16115To16116:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16116To16117:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16117To16118:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16118To17000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17000To17001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17001To17002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17002To17003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17003To17004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17004To17005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17005To17006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17006To17007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17007To17008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17008To17009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17009To17010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17010To17011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17011To17012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17012To17013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17013To17014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17014To17015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17015To17016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17016To17017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17017To17018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17018To17019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17019To17020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17020To17021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17021To17022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17022To17023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17023To17024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17024To17025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17025To17026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17026To17027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17027To17028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17028To17029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17029To17030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17030To17031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17031To17032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17032To17033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17033To17034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17034To17035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17035To17036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17036To17037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17037To17038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17038To17039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17039To17040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17040To17041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17041To17042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17042To17043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17043To17044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17044To17045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17045To17046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17046To17047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17047To17048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17048To17049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17049To17050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17050To17051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17051To17052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17052To17053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17053To17054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17054To17055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17055To17056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17056To17057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17057To17058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17058To17059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17059To17060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17060To17061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17061To17062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17062To17063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17063To17064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17064To17065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17065To17066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17066To17067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17067To17068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17068To17069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17069To17070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8075To8076:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8076To8300:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8300To8301:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8301To8302:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8302To8303:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8303To8304:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8304To8305:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8305To9000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9000To9001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9001To9002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9002To9003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9003To9004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9004To9005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9005To9006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9006To9007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9007To9008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9008To9009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9009To9010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9010To9011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9011To9012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9012To9013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9013To9014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9014To9015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9015To9016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9016To9017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9017To9018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9018To9200:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9200To9300:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9300To10000:(id)a3 context:(id)a4;
- (BOOL)_migrateNSNotFoundTo4DecimalDigits:(id)a3;
- (BOOL)_migrateTableFrom2To4DecimalDigitsPrecision:(id)a3;
- (BOOL)_migrateWhitneyFrom1To2:(id)a3 context:(id)a4;
- (BOOL)_migrateWhitneyFrom2To3:(id)a3 context:(id)a4;
- (BOOL)_migrateWhitneyFrom3To4:(id)a3 context:(id)a4;
- (BOOL)_preparePaymentTransactionAmountTableForOperations:(id)a3;
- (BOOL)_tranansaction_migrateLegacyCarKeySharesInDatabase:(id)a3;
- (BOOL)_updateCameExclusivelyFromCloudStore:(unint64_t)a3;
- (BOOL)accountEventExistsWithIdentifier:(id)a3;
- (BOOL)activeDiscoveryItemRequiringBadgeExistsForRelevantDate:(id)a3;
- (BOOL)activeExternalPassSharesExist;
- (BOOL)addDataCollectedAuthenticationMechanisms:(unint64_t)a3 forTransactionIdentifier:(id)a4;
- (BOOL)addProcessedAuthenticationMechanisms:(unint64_t)a3 forTransactionIdentifier:(id)a4;
- (BOOL)addSharingInvitation:(id)a3;
- (BOOL)canPerformAction:(id)a3 forPassWithUniqueIdentifier:(id)a4;
- (BOOL)containerDatabaseExistsForContainerDatabase:(id)a3;
- (BOOL)deleteInvitationWithIdentifier:(id)a3;
- (BOOL)deletePassCredentialShareForIdentifier:(id)a3;
- (BOOL)deletePendingProvisioningOfType:(id)a3 withUniqueIdentifier:(id)a4;
- (BOOL)deleteSharingEndpoint:(id)a3;
- (BOOL)deleteSharingEndpointForTransportIdentifier:(id)a3;
- (BOOL)didFinishInitialSyncForCloudStore:(id)a3 containerDatabase:(id)a4;
- (BOOL)externalPassSharesExistForPassUniqueIdentifier:(id)a3;
- (BOOL)getLastPushDate:(id *)a3 lastUpdateDate:(id *)a4 frequencyScore:(double *)a5 forPassTypeID:(id)a6;
- (BOOL)getPassTypeID:(id *)a3 teamID:(id *)a4 associatedPassTypeIdentifiers:(id *)a5 associatedApplicationIdentifiers:(id *)a6 forUniqueID:(id)a7;
- (BOOL)getRegistrationStatus:(unint64_t *)a3 date:(id *)a4 forSerialNumber:(id)a5 webService:(id)a6;
- (BOOL)getWebService:(id *)a3 updateContext:(id *)a4 forPassWithUniqueID:(id)a5;
- (BOOL)hasAccountServicingEventsWithStatus:(unint64_t)a3;
- (BOOL)hasActiveBarcodePasses;
- (BOOL)hasActiveContactlessSecureElementPasses;
- (BOOL)hasActiveSecureElementPasses;
- (BOOL)hasAnyAccount;
- (BOOL)hasAnyAccountWithType:(unint64_t)a3;
- (BOOL)hasAnyMessagesForPassWithUniqueIdentifier:(id)a3;
- (BOOL)hasAnyTransactions;
- (BOOL)hasAnyTransactionsForTransactionSourceIdentifiers:(id)a3;
- (BOOL)hasAnyTransactionsOfType:(int64_t)a3;
- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3;
- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4;
- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3;
- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4;
- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3;
- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4;
- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (BOOL)hasBarcodeBackgroundFetchRecordForPassUniqueIdentifier:(id)a3 nextBackgroundFetchDate:(id *)a4;
- (BOOL)hasCandidatePasses;
- (BOOL)hasFutureActionableIndexerItems;
- (BOOL)hasMatchingCloudStoreRecord:(id)a3 inCloudStoreZone:(id)a4;
- (BOOL)hasMultipleRegionsOfType:(unint64_t)a3 localeIdentifier:(id)a4;
- (BOOL)hasPassesInExpiredSection;
- (BOOL)hasPassesWithPayloadState:(unint64_t)a3;
- (BOOL)hasPaymentTransactionForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4;
- (BOOL)hasPeerPaymentAccount;
- (BOOL)hasPendingProvisioningsOfTypes:(id)a3;
- (BOOL)hasPushEnabledPassesForWebService:(id)a3;
- (BOOL)hasRegionsMissingLocalizedContentForLocaleIdentifier:(id)a3;
- (BOOL)hasSecureElementPassesOfType:(int64_t)a3;
- (BOOL)hasSecureElementPassesWithFeatureIdentifier:(unint64_t)a3;
- (BOOL)hasShareablePassEntitlementsForPassUniqueIdentifier:(id)a3;
- (BOOL)hasSharesForPassUniqueIdentifier:(id)a3;
- (BOOL)hasSharingMessage:(id)a3 transportIdentifier:(id)a4;
- (BOOL)hasTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4;
- (BOOL)hasTransactionWithTransactionIdentifier:(id)a3;
- (BOOL)hasTransactionsMissingWorldRegionEligibleForProcessing;
- (BOOL)insertBarcodeCredentials:(id)a3 forDPANIdentifier:(id)a4;
- (BOOL)insertOrUpdateAccountEvent:(id)a3;
- (BOOL)insertOrUpdateEvaluatedPolicyDomainState:(id)a3 forDPANIdentifier:(id)a4;
- (BOOL)insertPass:(id)a3 withDaemonData:(id)a4 source:(int64_t)a5;
- (BOOL)insertSharingEndpoint:(id)a3;
- (BOOL)isAuxiliaryRegistrationRequirementRegistered:(id)a3 pass:(id)a4;
- (BOOL)markAuthenticationCompleteforTransactionIdentifier:(id)a3;
- (BOOL)migratePalisadesFrom1To2:(id)a3 context:(id)a4;
- (BOOL)notificationServiceIsEnabledForAnyPasses:(id)a3;
- (BOOL)passExistsForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 paymentApplicationStates:(id)a5;
- (BOOL)passExistsForTransitNetworks:(id)a3 isTransitCard:(unint64_t)a4 expired:(unint64_t)a5;
- (BOOL)passExistsWithPassType:(unint64_t)a3;
- (BOOL)passExistsWithPassTypeID:(id)a3 serialNumber:(id)a4;
- (BOOL)passExistsWithPassTypeIdentifierHash:(id)a3;
- (BOOL)passExistsWithPaymentType:(unint64_t)a3;
- (BOOL)passExistsWithUniqueID:(id)a3;
- (BOOL)peerPaymentPassShouldNotBeAcceptedForAccount:(id)a3;
- (BOOL)removeAllBarcodeCredentialValuesForDPANIdentifier:(id)a3;
- (BOOL)removeAllBarcodeCredentialsForDPANIdentifier:(id)a3;
- (BOOL)resetTransactionAuthenticationForTransactionIdentifier:(id)a3;
- (BOOL)setBalanceReminder:(id)a3 forBalanceIdentifier:(id)a4 withPassUniqueIdentifier:(id)a5;
- (BOOL)setCommutePlanReminder:(id)a3 forCommutePlanIdentifier:(id)a4 withPassUniqueIdentifier:(id)a5;
- (BOOL)setNeedsSyncWithFinanceForAllTransactions;
- (BOOL)settingEnabled:(unint64_t)a3 forPass:(id)a4;
- (BOOL)settingEnabled:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4;
- (BOOL)shouldIgnoreFieldWithProperties:(id)a3;
- (BOOL)shouldSyncTransactionsToCloudStore;
- (BOOL)transactionSourceExistsWithIdentifier:(id)a3;
- (BOOL)uniqueIDIsRevoked:(id)a3;
- (BOOL)updateAppletSubcredentials:(id)a3;
- (BOOL)updateAuxiliaryRegistrationRequirement:(id)a3 pass:(id)a4 isRegistered:(BOOL)a5;
- (BOOL)updateAuxiliaryRegistrationRequirementsForPass:(id)a3 isRegistered:(BOOL)a4;
- (BOOL)updateDisplayTimestamp:(id)a3 forBarcodeIdentifier:(id)a4;
- (BOOL)updateIndexerItemWithIdentifier:(id)a3 type:(unint64_t)a4 status:(unint64_t)a5;
- (BOOL)updateNextBarcodeBackgroundFetchDate:(id)a3 withRetryLevel:(int64_t)a4 forPassUniqueIdentifier:(id)a5;
- (BOOL)updatePass:(id)a3 withDaemonData:(id)a4 oldPass:(id *)a5 fromSource:(int64_t)a6;
- (BOOL)updatePaymentPINData:(id)a3 forTransactionIdentifier:(id)a4;
- (BOOL)updateTransactionSignatureData:(id)a3 forTransactionIdentifier:(id)a4;
- (BOOL)updateUserConfirmationData:(id)a3 forTransactionIdentifier:(id)a4;
- (BOOL)verifyIntegrity;
- (PDCloudStoreNotificationCoordinator)cloudStoreCoordinator;
- (PDDatabaseManager)init;
- (PDDatabaseManager)initWithURL:(id)a3;
- (PDDatabaseManager)initWithURL:(id)a3 delegate:(id)a4;
- (PDDatabaseManager)initWithURL:(id)a3 delegate:(id)a4 report:(id *)a5;
- (PDDatabaseManagerDelegate)delegate;
- (PDDatabaseManagerNotificationServicesDelegate)notificationServicesDelegate;
- (PDDatabaseManagerPaymentServicesDelegate)paymentServicesDelegate;
- (PDDatabaseManagerWebServicesDelegate)webServicesDelegate;
- (PDObjectSettingsManager)objectSettingsManager;
- (PKSecureElement)secureElement;
- (id)_activeSecureElementPassPredicate;
- (id)_candidatePassesOfStyle:(int64_t)a3 matchingFurtherPredicate:(id)a4;
- (id)_databaseNotificationService:(id)a3;
- (id)_databaseWebService:(id)a3;
- (id)_datedPassPredicate;
- (id)_dbPaymentApplicationWithDPANIdentifier:(id)a3;
- (id)_deviceIdentifierForExistingServiceURL:(id)a3 registrationURL:(id)a4;
- (id)_firstGroupMatchingGroup:(id)a3 withRelevantDates:(id)a4;
- (id)_firstGroupMatchingPredicate:(id)a3;
- (id)_firstGroupMatchingProfile:(id)a3;
- (id)_groupAtOrAfterIndex:(unint64_t)a3 bestMatchingUniqueIDs:(id)a4;
- (id)_groupWithPersistentID:(id)a3;
- (id)_insertContainerDatabaseForContainerDatabase:(id)a3;
- (id)_insertOrUpdatePaymentTransaction:(id)a3 transactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9;
- (id)_locatedCandidatePassesOfStyle:(int64_t)a3 matchingFurtherPredicate:(id)a4;
- (id)_locatedPredicate;
- (id)_messageServiceForPass:(id)a3;
- (id)_notificationServiceForPushTopic:(id)a3 serviceType:(unint64_t)a4 serviceURL:(id)a5 registrationURL:(id)a6;
- (id)_passTypeForPass:(id)a3;
- (id)_passWithApplicationIdentifier:(id)a3 secureElementIdentifier:(id)a4;
- (id)_passWithPaymentApplication:(id)a3;
- (id)_passesFilteredByAutomaticallyPresentPassEnabled:(id)a3;
- (id)_paymentNetworkIdentifiersForPaymentNetworks:(id)a3;
- (id)_predicateForDate:(id)a3 matchExactly:(BOOL)a4 leeway:(double)a5;
- (id)_predicateForDates:(id)a3 leeway:(double)a4;
- (id)_predicateForGroupingID:(id)a3;
- (id)_predicateForPassTypes:(unint64_t)a3;
- (id)_predicateForStyle:(int64_t)a3;
- (id)_predicateForStyles:(unint64_t)a3;
- (id)_predicateForType:(unint64_t)a3;
- (id)_predicateMatchingPassesForWebService:(id)a3;
- (id)_readerIDPriorityForPasses:(id)a3 readerID:(id)a4;
- (id)_recomputedPaymentBalanceForIdentifier:(id)a3 value:(id)a4 currency:(id)a5 exponent:(int64_t)a6 unitDictionary:(id)a7;
- (id)_registeredPass:(id)a3;
- (id)_registeredPasses:(id)a3;
- (id)_startOfTimeBlockForUnit:(unint64_t)a3 inCalendar:(id)a4 fromDate:(id)a5 forward:(BOOL)a6;
- (id)_transactionServiceForPass:(id)a3;
- (id)_transitPredicate;
- (id)_unlocatedPredicate;
- (id)_validPassPredicate;
- (id)_webServiceForPass:(id)a3 passType:(id)a4;
- (id)accountBalancesForAccountIdentifier:(id)a3 startDate:(id)a4 endDate:(id)a5 type:(unint64_t)a6 limit:(unint64_t)a7;
- (id)accountEndpointMetadataForAccountIdentifier:(id)a3 endpoint:(unint64_t)a4;
- (id)accountEnhancedMerchantBehaviorForAccountIdentifier:(id)a3;
- (id)accountEnhancedMerchantForPrivateIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)accountEnhancedMerchantsForAccountIdentifier:(id)a3;
- (id)accountEntityOrderingsForAccountIdentifier:(id)a3 entityType:(unint64_t)a4;
- (id)accountEventWithIdentifier:(id)a3;
- (id)accountEventsForAccountIdentifier:(id)a3;
- (id)accountEventsForAccountIdentifier:(id)a3 altDSID:(id)a4 types:(id)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(unint64_t)a9;
- (id)accountEventsForAccountIdentifier:(id)a3 excludingTypes:(id)a4;
- (id)accountIdentifierWithPreviousAccountIdentifier:(id)a3;
- (id)accountPendingFamilyMembersForAccountIdentifier:(id)a3;
- (id)accountPendingFamilyMembersWithDisplayedNotification:(BOOL)a3;
- (id)accountPromotionBehaviorForAccountIdentifier:(id)a3;
- (id)accountPromotionCompletionStepsForProgramIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)accountPromotionForProgramIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)accountPromotionsForAccountIdentifier:(id)a3;
- (id)accountStatementMetadataForAccountIdentifier:(id)a3;
- (id)accountStatementMetadataForStatementIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)accountTaxFormsForAccountIdentifier:(id)a3;
- (id)accountUserForAccountWithIdentifier:(id)a3 handle:(id)a4;
- (id)accountUserWithAltDSID:(id)a3 accountIdentifier:(id)a4;
- (id)accountUserWithTransactionSourceIdentifier:(id)a3;
- (id)accountUsersByAccountIdentifier;
- (id)accountUsersForAccountWithIdentifier:(id)a3;
- (id)accountUsersForAccountWithIdentifier:(id)a3 accessLevel:(unint64_t)a4;
- (id)accountWithIdentifier:(id)a3;
- (id)accountWithPhysicalCardIdentifier:(id)a3;
- (id)accountWithTransactionSourceIdentifier:(id)a3;
- (id)accountWithVirtualCardIdentifier:(id)a3;
- (id)accounts;
- (id)accountsWithIdentifiers:(id)a3;
- (id)activeDiscoveryItemIdentifiersForRelevantDate:(id)a3;
- (id)activeDiscoveryItemsForRelevantDate:(id)a3;
- (id)activeDiscoveryItemsRequiringBadgeForRelevantDate:(id)a3;
- (id)allAssociatedTransactionSourceIdentifiersForPassUniqueIdentifier:(id)a3;
- (id)allIndexedItemsOfType:(unint64_t)a3;
- (id)allMessagesForPassWithUniqueIdentifier:(id)a3;
- (id)allOutstandingSharingMessages;
- (id)allPaymentApplicationUsageSummaries;
- (id)allPaymentApplications;
- (id)allPendingProvisioningReceipts;
- (id)allPendingProvisionings;
- (id)allRecordFetchTasks;
- (id)allTagsWithTitles;
- (id)ambiguousPassUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3;
- (id)ambiguousTransactionWithServiceIdentifier:(id)a3;
- (id)anyEligiblePaymentOfferRewardsCriteriaForPass:(id)a3;
- (id)appleBalancePromotionForAccountIdentifier:(id)a3;
- (id)appletSubcredentialForSharedCredentialWithIdentifier:(id)a3;
- (id)appletSubcredentialWithIdentifier:(id)a3;
- (id)approvedTransactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9;
- (id)associatedAccountIdentifierForPassWithUniqueIdentifier:(id)a3;
- (id)auxiliaryItemIdentifiersForPassUniqueIdentifier:(id)a3;
- (id)balanceReminderThresholdForBalanceIdentifier:(id)a3 withPassUniqueIdentifier:(id)a4;
- (id)batchOfActionableIndexerItemsWithCount:(unint64_t)a3;
- (id)billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:(id)a3 withStartDate:(id)a4 endDate:(id)a5;
- (id)billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:(id)a3 withStatementIdentifier:(id)a4;
- (id)broadwayOrSurfPassUniqueIdentifierForAmbiguousServiceIdentifier:(id)a3;
- (id)broadwayOrSurfTransactionSourceIdentifierForAmbiguousServiceIdentifier:(id)a3 transactionAccountIdentifier:(id *)a4 transactionAccountType:(int64_t *)a5 transactionAltDSID:(id *)a6;
- (id)candidatePassesOfStyle:(int64_t)a3;
- (id)cashbackByPeriodForTransactionSourceIdentifiers:(id)a3 withStartDate:(id)a4 endDate:(id)a5 calendar:(id)a6 calendarUnit:(unint64_t)a7 type:(unint64_t)a8;
- (id)categoryVisualizationMagnitudesForPassUniqueID:(id)a3;
- (id)changeEventsWithRecordType:(int64_t)a3;
- (id)changeEventsWithRecordType:(int64_t)a3 recordUniqueID:(id)a4;
- (id)closestStartOfMonthFromDate:(id)a3;
- (id)closestStartOfYearFromDate:(id)a3;
- (id)cloudStoreContainerChangeEventWithIdentifier:(id)a3;
- (id)cloudStoreContainerChangeEventsForContainerIdentifier:(id)a3;
- (id)cloudStoreRecordWithRecordName:(id)a3 recordType:(id)a4 inCloudStoreZone:(id)a5;
- (id)cloudStoreZonesForContainerDatabase:(id)a3;
- (id)cloudStoreZonesForContainerDatabaseWithName:(id)a3 scope:(int64_t)a4;
- (id)commutePlanReminderForCommutePlanIdentifier:(id)a3 withPassUniqueIdentifier:(id)a4;
- (id)compoundTags:(unint64_t)a3 limit:(unint64_t)a4;
- (id)contactlessAccessPaymentPassesWithTCI:(id)a3 readerId:(id)a4;
- (id)credentialIdentifiersForAid;
- (id)creditAccountStatementsForAccountIdentifier:(id)a3;
- (id)creditRecoveryPaymentPlansForAccountIdentifier:(id)a3;
- (id)creditStatementWithIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)creditStatementWithIdentifier:(id)a3 accountIdentifiers:(id)a4;
- (id)databaseSubscriptionForContainerDatabase:(id)a3;
- (id)dbAccountWithIdentifier:(id)a3;
- (id)dbPeerPaymentAccount;
- (id)dbPeerPaymentPreferences;
- (id)dbTransactionWithTransactionIdentifier:(id)a3;
- (id)defaultPaymentApplicationForPassUniqueIdentifier:(id)a3;
- (id)deleteAppleBalancePromotionForAccountWithIdentifier:(id)a3;
- (id)deleteVirtualCardEncryptedDataForAccount:(id)a3;
- (id)deviceSecureElementPassUniqueIDs;
- (id)deviceSpecificPaymentApplications;
- (id)discoveryItemWithIdentifier:(id)a3;
- (id)discoveryItems;
- (id)discoveryItemsForRelevantDate:(id)a3;
- (id)discoveryItemsWaitingForTrigger;
- (id)discoveryNotificationWithIdentifier:(id)a3;
- (id)discoveryNotifications;
- (id)discoveryNotificationsRequiringInsertionForDate:(id)a3;
- (id)discoveryNotificationsThatAreNotExpiredForDate:(id)a3 active:(unint64_t)a4 delivered:(unint64_t)a5;
- (id)discoveryNotificationsToScheduleForDate:(id)a3;
- (id)dismissedDiscoveryItems;
- (id)dynamicAssociatedDomains;
- (id)effectiveCatalog;
- (id)engagementMessageWithIdentifier:(id)a3;
- (id)engagementMessages;
- (id)engagementMessagesForPassQualifier:(int64_t)a3 relevantDate:(id)a4 active:(unint64_t)a5;
- (id)engagementMessagesForRelevantDate:(id)a3;
- (id)evaluatedPolicyDomainStateForDPANIdentifier:(id)a3;
- (id)featureApplicationWithIdentifier:(id)a3;
- (id)featureApplications;
- (id)featureApplicationsWithAccountIdentifier:(id)a3;
- (id)fetchDeviceEnviromentForClient:(int64_t)a3 andCompareToCurrentEnvironment:(id)a4 didChange:(BOOL *)a5;
- (id)fetchTimestampForCloudStore:(id)a3 containerDatabase:(id)a4;
- (id)financingPlanDisputeIdentifiersWithDisputeState:(unint64_t)a3;
- (id)financingPlanIdentifiersForAccountIdentifier:(id)a3 states:(id)a4 transactionStartDate:(id)a5 transactionEndDate:(id)a6 limit:(int64_t)a7;
- (id)financingPlanIdentifiersThatContainInstallmentWithStatus:(unint64_t)a3;
- (id)financingPlanWithIdentifier:(id)a3;
- (id)financingPlansForAccountIdentifier:(id)a3 states:(id)a4 transactionStartDate:(id)a5 transactionEndDate:(id)a6 limit:(int64_t)a7;
- (id)financingPlansIdentifiersWithState:(unint64_t)a3;
- (id)financingPlansWithAccountIdentifier:(id)a3;
- (id)financingPlansWithQuery:(id)a3;
- (id)firstValidBarcodeCredentialForDPANIdentifier:(id)a3;
- (id)identifiersForAccountServicingEventsWithStatus:(unint64_t)a3;
- (id)inStoreTopUpTokenForAccountIdentifier:(id)a3;
- (id)indexerItemCountsOfType:(unint64_t)a3;
- (id)indexerItemWithUniqueIdentifier:(id)a3;
- (id)insertOrUpdateAccount:(id)a3;
- (id)insertOrUpdateAccountEndpointMetadata:(id)a3;
- (id)insertOrUpdateAccountStatementMetadata:(id)a3;
- (id)insertOrUpdateAccountUser:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdateAccountUsers:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdateAppleBalancePromotion:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdateAppletStateDirtyForTransitAppletStateDirty:(id)a3;
- (id)insertOrUpdateDiscoveryNotification:(id)a3;
- (id)insertOrUpdateFeatureApplication:(id)a3;
- (id)insertOrUpdateFinancingPlan:(id)a3 forAccountIdentifier:(id)a4;
- (id)insertOrUpdateFinancingPlans:(id)a3 forAccountIdentifier:(id)a4;
- (id)insertOrUpdateInStoreTopUpToken:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdateLiveRenderEnabled:(BOOL)a3 forPassWithUniqueIdentifier:(id)a4;
- (id)insertOrUpdatePassEndpointMetadata:(id)a3;
- (id)insertOrUpdatePaymentFundingSources:(id)a3 accountIdentifier:(id)a4;
- (id)insertOrUpdatePaymentMessage:(id)a3 forPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 performTruncation:(BOOL)a6;
- (id)insertOrUpdatePaymentSetupFeature:(id)a3;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7 insertedTransaction:(BOOL *)a8;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 insertionMode:(unint64_t)a5 performTruncation:(BOOL)a6;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 insertionMode:(unint64_t)a5 performTruncation:(BOOL)a6 insertedTransaction:(BOOL *)a7;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 originDeviceID:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7 insertedTransaction:(BOOL *)a8;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9;
- (id)insertOrUpdatePeerPaymentAccount:(id)a3;
- (id)insertOrUpdatePeerPaymentPreferences:(id)a3;
- (id)insertOrUpdatePhysicalCard:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdatePhysicalCards:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdatePushProvisioningSharingMetadata:(id)a3;
- (id)insertOrUpdateRule:(id)a3;
- (id)insertOrUpdateSharedAccountCloudStore:(id)a3 accountIdentifier:(id)a4;
- (id)insertOrUpdateTransactionReceipt:(id)a3;
- (id)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)a3;
- (id)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)a3 accountIdentifier:(id)a4 redeemed:(BOOL)a5 withRedemptionType:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8;
- (id)installmentPlansWithTransactionReferenceIdentifier:(id)a3;
- (id)installmentTransactionsForInstallmentPlanIdentifier:(id)a3;
- (id)invitationWithIdentifier:(id)a3;
- (id)invitations;
- (id)issuerInstallmentCriteriaIdentifierForFpanIdentifier:(id)a3;
- (id)issuerInstallmentTransactionsForPassUniqueIdentifier:(id)a3;
- (id)issuerInstallmentTransactionsForTransactionSourceIdentifiers:(id)a3 paymentHashes:(id)a4;
- (id)lastAccountTaxFormForAccountIdentifier:(id)a3;
- (id)lastDeletionDateForWebService:(id)a3;
- (id)lastRedemptionEventToDestination:(unint64_t)a3 forAccountIdentifier:(id)a4 altDSID:(id)a5;
- (id)lastRegionErrorForTransaction:(id)a3;
- (id)lastSavingsStatementForAccountIdentifier:(id)a3;
- (id)lastUpdatedDateForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4;
- (id)lastUpdatedTagForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4;
- (id)lastUpdatedTagForWebService:(id)a3;
- (id)lastUsedBarcodeIdentifierForDPANIdentifier:(id)a3;
- (id)latestStatementIdentifierThatNeedsMetadataProcessingForAccountIdentifier:(id)a3 accountType:(unint64_t)a4 maxProcessedAttemptCount:(int64_t)a5;
- (id)locatedCandidatePassesOfStyle:(int64_t)a3;
- (id)locatedDatelessCandidatePassesOfStyle:(int64_t)a3;
- (id)locationsByUniqueIDInBoundingBoxOfRegion:(id)a3;
- (id)mapsBrandWithIdentifier:(unint64_t)a3;
- (id)mapsBrands;
- (id)mapsBrandsWithLastUpdatedDateFromStartDate:(id)a3 endDate:(id)a4 limit:(int64_t)a5;
- (id)mapsMerchantWithIdentifier:(unint64_t)a3;
- (id)mapsMerchants;
- (id)mapsMerchantsWithLastUpdatedDateFromStartDate:(id)a3 endDate:(id)a4 limit:(int64_t)a5;
- (id)markStatementMetadataItems:(id)a3 asProcessed:(BOOL)a4 error:(unint64_t)a5 statementIdentifier:(id)a6 accountIdentifier:(id)a7;
- (id)merchantForPassUniqueIdentifier:(id)a3 auxiliaryPassInformationItemIdentifier:(id)a4;
- (id)messageServiceForPaymentApplication:(id)a3;
- (id)messagesForPassWithUniqueIdentifier:(id)a3;
- (id)missingRemoteAssetsPersistentStoreItemsWithMaximumDownloadRetriesCount:(unint64_t)a3;
- (id)nextBarcodeBackgroundFetchDate;
- (id)nextPossibleCloudStoreShareOperationForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5;
- (id)nextPossibleFetchDateForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5;
- (id)nextRelevantDiscoveryNotificationForDate:(id)a3;
- (id)nextStartOfYearFromDate:(id)a3;
- (id)nonTerminalDiscoveryItemIdentifiers;
- (id)notificationServiceOfType:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4;
- (id)notificationServices;
- (id)notificationServicesForPushTopic:(id)a3;
- (id)passAnnotationsForPassUniqueIdentifier:(id)a3;
- (id)passCredentialShareForIdentifier:(id)a3 passUniqueIdentifier:(id)a4;
- (id)passEndpointMetadataForPassUniqueID:(id)a3 type:(unint64_t)a4;
- (id)passEntitlementForIdentifier:(id)a3 passIdentifier:(id)a4;
- (id)passEntitlementsForPassUniqueIdentifier:(id)a3;
- (id)passIdentifierForPassShareIdentifier:(id)a3;
- (id)passLiveRenderForPassUniqueIdentifier:(id)a3;
- (id)passShareForCredentialShareIdentifier:(id)a3;
- (id)passShareForIdentifier:(id)a3;
- (id)passShareForPassUniqueIdentifier:(id)a3 shareIdentifier:(id)a4;
- (id)passShareForTransportIdentifier:(id)a3;
- (id)passSharesForPassUniqueIdentifier:(id)a3;
- (id)passSharesForSubcredentialIdentifier:(id)a3;
- (id)passSharesWithNoPass;
- (id)passStyles;
- (id)passUniqueIDs;
- (id)passUniqueIDsOfType:(unint64_t)a3;
- (id)passUniqueIdentifierForMostRecentVisibleTransaction;
- (id)passUniqueIdentifierForTransactionSourceIdentifier:(id)a3;
- (id)passUniqueIdentifierForTransactionSourceIdentifier:(id)a3 includingAccountUsers:(BOOL)a4;
- (id)passUniqueIdentifierForTransactionWithIdentifier:(id)a3;
- (id)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5;
- (id)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4;
- (id)passUniqueIdentifierFromAppletSubcredentialIdentifier:(id)a3;
- (id)passUniqueIdentifierWithAssociatedAccountIdentifier:(id)a3;
- (id)passUniqueIdentifierWithCredentialIdentifier:(id)a3;
- (id)passUniqueIdentifierWithPaymentApplication:(id)a3;
- (id)passUniqueIdentifierWithPaymentApplicationIdentifier:(id)a3;
- (id)passUniqueIdentifierWithPaymentApplicationIdentifier:(id)a3 subcredentialIdentifier:(id)a4;
- (id)passUniqueIdentifierWithPrimaryAccountIdentifier:(id)a3;
- (id)passUpdateContextForSerialNumber:(id)a3 webService:(id)a4;
- (id)passWithPassTypeID:(id)a3 serialNumber:(id)a4;
- (id)passWithPaymentApplication:(id)a3;
- (id)passWithPaymentApplicationIdentifier:(id)a3;
- (id)passWithPaymentApplicationIdentifier:(id)a3 secureElementIdentifiers:(id)a4;
- (id)passWithPrimaryAccountIdentifier:(id)a3;
- (id)passWithProvisioningCredentialHash:(id)a3;
- (id)passWithUniqueIdentifier:(id)a3;
- (id)passWithVPANIdentifier:(id)a3;
- (id)passes;
- (id)passesEnabledForValuedAddedServicesWithAutomaticSelection:(BOOL)a3;
- (id)passesForInAppPaymentOnNetworks:(id)a3 issuerCountryCodes:(id)a4 paymentApplicationStates:(id)a5 paymentRequestType:(id)a6 isMultiTokensRequest:(BOOL)a7 webService:(id)a8;
- (id)passesForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 issuerCountryCodes:(id)a5 paymentApplicationStates:(id)a6 paymentRequestType:(id)a7 isMultiTokensRequest:(BOOL)a8 webService:(id)a9;
- (id)passesForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 issuerCountryCodes:(id)a5 paymentRequestType:(id)a6 isMultiTokensRequest:(BOOL)a7 webService:(id)a8;
- (id)passesForNotificationService:(id)a3;
- (id)passesForPaymentType:(unint64_t)a3;
- (id)passesForPaymentTypes:(id)a3;
- (id)passesForWebPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 webService:(id)a5 issuerCountryCodes:(id)a6 isMultiTokensRequest:(BOOL)a7;
- (id)passesForWebPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 webService:(id)a5 issuerCountryCodes:(id)a6 paymentApplicationStates:(id)a7 isMultiTokensRequest:(BOOL)a8;
- (id)passesForWebService:(id)a3;
- (id)passesOfStyles:(unint64_t)a3;
- (id)passesOfType:(unint64_t)a3;
- (id)passesSupportingIssuerBinding;
- (id)passesSupportingIssuerBindingWithPayloadState:(unint64_t)a3;
- (id)passesWithActiveVPAN;
- (id)passesWithISO18013Credentials;
- (id)passesWithNextBackgroundFetchDateBeforeDate:(id)a3;
- (id)passesWithPairedReaderIdentifier:(id)a3;
- (id)passesWithPassTypeID:(id)a3;
- (id)passesWithPassTypeIdentifierHash:(id)a3;
- (id)passesWithPassTypeIdentifierHash:(id)a3 andAssociatedPassTypeIdentifierHash:(id)a4;
- (id)passesWithPassTypeIdentifierHashes:(id)a3 automaticSelectionOnly:(BOOL)a4;
- (id)payLaterCardMagnitudesForAccountIdentifier:(id)a3;
- (id)payLaterFinancingPlansRequiringMerchantCleanupWithTransactionDateWithinWindow:(double)a3;
- (id)paymentApplicationForTransactionSourceIdentifier:(id)a3;
- (id)paymentApplicationIdentifierForTransactionSourceIdentifier:(id)a3;
- (id)paymentApplicationWithDPANIdentifier:(id)a3;
- (id)paymentApplicationWithPassUniqueIdentifier:(id)a3 secureElementIdentifier:(id)a4 paymentApplicationIdentifier:(id)a5;
- (id)paymentApplicationWithVPANIdentifier:(id)a3;
- (id)paymentApplicationsForNotificationService:(id)a3;
- (id)paymentApplicationsForPassUniqueIdentifier:(id)a3;
- (id)paymentBalanceWithIdentifier:(id)a3 forPassUniqueIdentifier:(id)a4;
- (id)paymentBalancesForPassUniqueIdentifier:(id)a3;
- (id)paymentFundingSourceForIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)paymentFundingSourcesForAccountIdentifier:(id)a3;
- (id)paymentOfferCatalog;
- (id)paymentPassesEligibleForDefaultCardSelection;
- (id)paymentPassesPendingActivation;
- (id)paymentPassesWithAssociatedPassTypeIdentifierHashes:(id)a3 automaticSelectionOnly:(BOOL)a4;
- (id)paymentPassesWithIssuerCountryCodes:(id)a3;
- (id)paymentRewardsBalanceWithIdentifier:(id)a3;
- (id)paymentRewardsBalancesForPassUniqueIdentifier:(id)a3;
- (id)paymentRewardsRedemptionWithPaymentHash:(id)a3;
- (id)paymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3 limit:(int64_t)a4;
- (id)paymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3 paymentHashes:(id)a4;
- (id)paymentSetupFeatureWithIdentifier:(id)a3;
- (id)paymentSetupFeatures;
- (id)paymentTransactionForIdentifier:(id)a3;
- (id)paymentTransactionWithIdentifier:(id)a3;
- (id)paymentTransactionsToDeleteFromFinanceWithLimit:(int64_t)a3;
- (id)paymentTransactionsWithFullPaymentHashes:(id)a3 transactionSourceIdentifiers:(id)a4;
- (id)paymentTransactionsWithIdentifiers:(id)a3 regions:(id *)a4 tags:(id *)a5;
- (id)peerPaymentAccount;
- (id)peerPaymentAccountForTransactionSourceIdentifier:(id)a3;
- (id)peerPaymentAccountsWithIdentifiers:(id)a3;
- (id)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)a3 excludingPaymentMode:(unint64_t)a4 startDate:(id)a5 endDate:(id)a6;
- (id)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)a3 startDate:(id)a4 endDate:(id)a5;
- (id)peerPaymentCounterpartImageData;
- (id)peerPaymentCounterpartImageDataForTransactionWithIdentifier:(id)a3;
- (id)peerPaymentCounterpartImageDataWithIdentifier:(id)a3;
- (id)peerPaymentEncryptionCertificateForDestination:(unint64_t)a3;
- (id)peerPaymentPendingRequestsForPeerPaymentAccount;
- (id)peerPaymentPendingRequestsForRequestTokens:(id)a3;
- (id)peerPaymentPreferences;
- (id)peerPaymentRecurringPaymentWithIdentifier:(id)a3;
- (id)peerPaymentRecurringPayments;
- (id)peerPaymentRecurringPaymentsWithType:(unint64_t)a3;
- (id)peerPaymentTransactionServiceIdentifiersForTransactionSourceIdentifiers:(id)a3 withPeerPaymentSubtype:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8;
- (id)pendingProvisioningOfType:(id)a3 withUniqueIdentifier:(id)a4;
- (id)pendingProvisioningsOfType:(id)a3;
- (id)pendingProvisioningsOfTypes:(id)a3;
- (id)pendingProvisioningsWithStatus:(int64_t)a3;
- (id)pendingTransactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9;
- (id)physicalCardsForAccountWithIdentifier:(id)a3;
- (id)placedHoldsWithAccountIdentifier:(id)a3;
- (id)plansForPassUniqueIdentifier:(id)a3;
- (id)previousAccountIdentifierForAccountIdentifier:(id)a3;
- (id)primaryAccountIdentifierForAssociatedAccountIdentifier:(id)a3;
- (id)primaryAccountIdentifierForTransactionSourceIdentifier:(id)a3;
- (id)primaryPaymentApplicationForPassUniqueIdentifier:(id)a3;
- (id)primaryTransactionSourceIdentifierForAccountUserAltDSID:(id)a3 accountIdentifier:(id)a4;
- (id)pushEnabledPassTypeIDs;
- (id)pushProvisioningSharingMetadata;
- (id)pushProvisioningSharingMetadataWithStatus:(unint64_t)a3;
- (id)recomputePayLaterCardMagnitudesForAccountIdentifier:(id)a3;
- (id)redemptionAccountEventWithRewardsAddedIdentifier:(id)a3;
- (id)redemptionAccountEventWithTransactionIdentifier:(id)a3;
- (id)regionIdentifiersMatchingName:(id)a3 types:(id)a4 localeIdentifier:(id)a5 withRequest:(id)a6 limit:(unint64_t)a7;
- (id)regionsForTransaction:(id)a3 localeIdentifier:(id)a4;
- (id)regionsForTransactionPID:(int64_t)a3 localeIdentifier:(id)a4;
- (id)regionsMatchingName:(id)a3 types:(id)a4 localeIdentifier:(id)a5;
- (id)regionsMissingLocalizedContentForLocaleIdentifier:(id)a3;
- (id)regionsOfType:(unint64_t)a3 localeIdentifier:(id)a4;
- (id)removeMapsDataForTransactionWithIdentifier:(id)a3 forTransactionSourceIdentifier:(id)a4 issueReportIdentifier:(id)a5;
- (id)removePeerPaymentAccount;
- (id)removePeerPaymentPreferences;
- (id)replaceCreditRecoveryPaymentPlans:(id)a3 forAccountIdentifier:(id)a4;
- (id)replacePhysicalCards:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)retrieveDirtyAppletStates;
- (id)retryDateForEvent:(id)a3;
- (id)rewardsTierSummaryForTransactionSourceIdentifiers:(id)a3 currencyCode:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (id)rewardsValuesForUnit:(unint64_t)a3;
- (id)rules;
- (id)rulesWithIdentifiers:(id)a3;
- (id)savingsAccountStatementsForAccountIdentifier:(id)a3;
- (id)savingsStatementWithIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)scheduledPaymentsWithAccountIdentifier:(id)a3 includeFailedRecurringPayments:(BOOL)a4;
- (id)secureElementCardTypes;
- (id)serviceIdentifierForTransactionIdentifier:(id)a3 accountIdentifier:(id *)a4 accountType:(int64_t *)a5;
- (id)setAccounts:(id)a3;
- (id)setDefaultPaymentApplication:(id)a3 forPassUniqueIdentifier:(id)a4;
- (id)setDiscoveryItems:(id)a3;
- (id)setFeatureApplications:(id)a3;
- (id)setFeatureApplications:(id)a3 forAccountIdentifier:(id)a4;
- (id)setPaymentSetupFeatures:(id)a3;
- (id)setScheduledPayments:(id)a3 forAccount:(id)a4;
- (id)setTransfers:(id)a3 forAccount:(id)a4;
- (id)sharedAccountCloudStoreByAccountIdentifier;
- (id)sharedAccountCloudStoreForAccountIdentifier:(id)a3;
- (id)sharingEndpointForTransportIdentifier:(id)a3;
- (id)sharingEndpoints;
- (id)sharingEndpointsOfType:(unint64_t)a3;
- (id)sharingEndpointsWithOutstandingMessages;
- (id)sharingMessagesForTransportIdentifier:(id)a3;
- (id)sharingMessagesForTransportIdentifier:(id)a3 newerThanDate:(id)a4;
- (id)sortedPassUniqueIdentifiersForGroupContainingPassWithUniqueIdentifier:(id)a3;
- (id)syncablePassUniqueIDs;
- (id)tagLastUpdateDateForWebService:(id)a3;
- (id)tagsForTransactionPID:(int64_t)a3;
- (id)tagsForTransactionWithIdentifier:(id)a3;
- (id)tapToRadarPromptWithReason:(id)a3;
- (id)tokenDataForCloudStore:(id)a3 containerDatabase:(id)a4;
- (id)transactionArchiveForCounterpartImageData:(id)a3;
- (id)transactionArchiveForRecurringPayment:(id)a3;
- (id)transactionArchiveForTransactionIdentifier:(id)a3;
- (id)transactionArchiveForTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4;
- (id)transactionArchivesWithCloudStoreZone:(id)a3 isArchived:(BOOL)a4;
- (id)transactionArchivesWithType:(unint64_t)a3 isArchived:(BOOL)a4;
- (id)transactionAuthenticationResultForTransactionIdentifier:(id)a3;
- (id)transactionCountByPeriodForRequest:(id)a3 calendar:(id)a4 calendarUnit:(unint64_t)a5 includePurchaseTotal:(BOOL)a6;
- (id)transactionReceiptWithUniqueID:(id)a3;
- (id)transactionServiceForPaymentApplication:(id)a3;
- (id)transactionSourceIdentifierForAccountIdentifier:(id)a3;
- (id)transactionSourceIdentifierForAccountUserAltDSID:(id)a3 accountIdentifier:(id)a4;
- (id)transactionSourceIdentifierForPeerPaymentAccountIdentifier:(id)a3;
- (id)transactionSourceIdentifierForTransactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5;
- (id)transactionSourceIdentifiersAssociatedWithPassUniqueIdentifier:(id)a3;
- (id)transactionSourceIdentifiersForPassUniqueIdentifier:(id)a3;
- (id)transactionWithReferenceIdentifier:(id)a3;
- (id)transactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5;
- (id)transactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4;
- (id)transactionWithTransactionIdentifier:(id)a3;
- (id)transactionsForAdjustmentType:(int64_t)a3 limit:(int64_t)a4;
- (id)transactionsForPredicate:(id)a3 limit:(int64_t)a4;
- (id)transactionsForRequest:(id)a3;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 matchingMerchant:(id)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 limit:(int64_t)a7;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 merchantCategory:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8 limit:(int64_t)a9;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 forPeerPaymentSubtype:(int64_t)a5 withTransactionSource:(unint64_t)a6 withBackingData:(unint64_t)a7 limit:(int64_t)a8;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 limit:(int64_t)a7;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 limit:(int64_t)a6;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionType:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8 limit:(int64_t)a9;
- (id)transactionsMissingWorldRegionWithLimit:(unint64_t)a3 onlyEligibleForProcessing:(BOOL)a4;
- (id)transactionsOfTypes:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 limit:(int64_t)a6;
- (id)transactionsRequiringMerchantCleanupForTransactionSourceIdentifiers:(id)a3 withLastReprocessingDateBeforeDate:(id)a4 transactionDateWithinWindow:(double)a5;
- (id)transactionsRequiringReviewForAccountWithIdentifier:(id)a3;
- (id)transactionsThatNeedSyncToFinanceWithAccountIdentifiers:(id)a3 withLimit:(int64_t)a4;
- (id)transactionsWithServiceIdentifier:(id)a3;
- (id)transactionsWithTransactionSource:(unint64_t)a3 withBackingData:(unint64_t)a4 limit:(int64_t)a5;
- (id)transactionsWithoutRegionMatchingMapsMerchant:(id)a3 limit:(unint64_t)a4;
- (id)transitNetworksForPassesMatchingTransitType:(unint64_t)a3 expired:(unint64_t)a4;
- (id)transitPasses;
- (id)transitStateWithPassUniqueIdentifier:(id)a3 paymentApplication:(id)a4;
- (id)transportIdentifierForSharingMessage:(id)a3;
- (id)unexpiredPassStyles;
- (id)unexpiredPassesOrderedByGroup;
- (id)unexpiredSecureElementCardTypes;
- (id)unlocatedCandidatePassesOfStyle:(int64_t)a3;
- (id)unregisteredAuxiliaryCapabilityRequirementsForPass:(id)a3;
- (id)unsyncedPassesInContainer:(id)a3;
- (id)updateDiscoveryItem:(id)a3;
- (id)updateDiscoveryItemsWithDialogRequestSourcedItems:(id)a3;
- (id)updateDiscoveryItemsWithRemoteItems:(id)a3;
- (id)updateDiscoveryItemsWithRuleResults:(id)a3;
- (id)updateDiscoveryNotifications:(id)a3;
- (id)updateDiscoveryNotificationsForRuleResults:(id)a3;
- (id)updateDiscoveryNotificationsWithRemoteNotifications:(id)a3;
- (id)updateEngagementMessage:(id)a3;
- (id)updateEngagementMessages:(id)a3;
- (id)updateEngagementMessagesForRuleResults:(id)a3;
- (id)updateEngagementMessagesWithRemoteMessages:(id)a3;
- (id)updateMerchant:(id)a3 forTransaction:(id)a4 passUniqueIdentifier:(id)a5;
- (id)updatePassCredentialShareIdentifier:(id)a3 updatedStatus:(unint64_t)a4 updatedIdentifier:(id)a5;
- (id)updateRedemptionType:(unint64_t)a3 forPaymentTransaction:(id)a4 sourceIdentifier:(id)a5;
- (id)updateRules:(id)a3;
- (id)updateStatementMetadataWithReport:(id)a3 reportDate:(id)a4;
- (id)updateSuppressBehavior:(unint64_t)a3 forPaymentTransaction:(id)a4 sourceIdentifier:(id)a5;
- (id)updatedPassAnnotationsForPasses:(id)a3;
- (id)validNFCBarcodePassUniqueIDs;
- (id)valueAddedMerchantWithIdentifier:(id)a3;
- (id)valueAddedServiceTransactionWithIdentifier:(id)a3;
- (id)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(id)a3 limit:(int64_t)a4;
- (id)valueAddedServiceTransactionsForPaymentTransaction:(id)a3;
- (id)webServiceForPass:(id)a3;
- (id)webServices;
- (id)webServicesForPassTypeID:(id)a3;
- (id)worldRegionWithIdentifier:(id)a3 localeIdentifier:(id)a4;
- (int64_t)_accountPIDForEndpointBackoffType:(unint64_t)a3 accountIdentifier:(id)a4;
- (int64_t)_migrationAmountDecimalDigitsVersion:(id)a3;
- (int64_t)barcodeBackgroundFetchRetryLevelForPassUniqueIdentifier:(id)a3;
- (int64_t)cloudStoreContainerChangeEventCount;
- (int64_t)dirtyAppletStateCount;
- (int64_t)indexingMetadataVersionForType:(unint64_t)a3;
- (int64_t)paymentTransactionAmountCountInDatabase;
- (int64_t)spotlightIndexingVersion;
- (unint64_t)countActiveSecureElementPasses;
- (unint64_t)countOfTransactionsWithAssociatedReceipts;
- (unint64_t)countPassesOfType:(unint64_t)a3;
- (unint64_t)countPassesPreventingWalletDeletion;
- (unint64_t)createSchemaInDatabase:(id)a3;
- (unint64_t)indexingMetadataStatusForType:(unint64_t)a3;
- (unint64_t)missingRemoteAssetsPersistentStoreItemsCountWithMaximumDownloadRetriesCount:(unint64_t)a3;
- (unint64_t)newAccountUserInvitationsCount;
- (unint64_t)numberOfBarcodeCredentialsDisplayedAfterDate:(id)a3 forDPANIdentifier:(id)a4;
- (unint64_t)numberOfChangeEvents;
- (unint64_t)numberOfPassesOfType:(id)a3;
- (unint64_t)numberOfRealPasses;
- (unint64_t)numberOfTransactionReceipts;
- (unint64_t)numberOfValidBarcodeCredentialsForDPANIdentifier:(id)a3;
- (unint64_t)numberOfValueAddedServiceTransactionsForMerchant:(id)a3;
- (unint64_t)rangingSuspensionReasonForAppletSubcredential:(id)a3 forPaymentApplicationID:(id)a4;
- (unint64_t)registrationStatusForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4;
- (unint64_t)settingsForPass:(id)a3;
- (unint64_t)successfulRedemptionEventsToPeerPaymentForAccountIdentifier:(id)a3;
- (unint64_t)suppressionBehaviorForTransactionSourceIdentifier:(id)a3 serviceIdentifier:(id)a4;
- (unint64_t)transactionSourceTypeForTransactionSourceIdentifier:(id)a3;
- (unint64_t)transactionsCountForRequest:(id)a3;
- (unint64_t)transactionsCountForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 forPeerPaymentSubtype:(int64_t)a5 startDate:(id)a6 endDate:(id)a7;
- (unint64_t)transactionsCountForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (void)_addPass:(id)a3 toGroup:(id)a4 withGroupingProfile:(id)a5;
- (void)_applyCatalog:(id)a3;
- (void)_applyDemoFelicaAppletStateToPass:(id)a3;
- (void)_applyDemoPaymentApplicationToPass:(id)a3;
- (void)_applyDemoPaymentTransactionsToPass:(id)a3;
- (void)_createDatabaseAtURL:(id)a3 report:(id *)a4;
- (void)_deleteNotificationServiceIfOrphaned:(id)a3;
- (void)_deletePassTypeIfOrphaned:(id)a3;
- (void)_deleteWebServiceIfOrphaned:(id)a3;
- (void)_fixDuplicateGroupsAtIndex:(unint64_t)a3 preservingGroupPID:(int64_t)a4 maximumNumberOfGroups:(unint64_t)a5;
- (void)_insertPass:(id)a3;
- (void)_insertPass:(id)a3 groupingProfile:(id)a4;
- (void)_insertPass:(id)a3 groupingProfile:(id)a4 insertNewGroupAfter:(id)a5;
- (void)_mergeGroup:(id)a3 intoGroup:(id)a4;
- (void)_migrateObjectSettingsWithSafeHavenArchiveURL:(id)a3;
- (void)_migratePassSettingsFromDatabase:(id)a3;
- (void)_moveGroup:(id)a3 toIndex:(unint64_t)a4;
- (void)_populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:(id)a3;
- (void)_registerPasses:(id)a3;
- (void)_removeGroup:(id)a3;
- (void)_removePass:(id)a3 fromGroup:(id)a4;
- (void)_setObjectSettingsManager:(id)a3;
- (void)_trimCatalog:(id)a3 andBuildPassPredicate:(id *)a4;
- (void)_updateCloudStoreWithTransactions:(id)a3 transactionSourceIdentifier:(id)a4;
- (void)_updatePaymentBalancesAndPlansForTransitAppletState:(id)a3 passUniqueIdentifier:(id)a4 paymentApplicationPID:(int64_t)a5 unitDictionary:(id)a6;
- (void)_validateDefaultPaymentPassOrdering;
- (void)accessDatabaseUsingBlock:(id)a3;
- (void)addChangeEvents:(id)a3;
- (void)addCloudStoreContainerChangeEvent:(id)a3;
- (void)addPassShare:(id)a3 forPassUniqueIdentifier:(id)a4;
- (void)addPeerPaymentAccountIdentifierToDatabaseTransactions;
- (void)adjustGroupsAfterAddingPass:(id)a3;
- (void)adjustGroupsAfterUpdatingPass:(id)a3 oldGroupingProfile:(id)a4;
- (void)adjustGroupsBeforeRemovingPass:(id)a3;
- (void)allPassTransactionIdentifiersWithAccountIdentifiers:(id)a3 batchHandler:(id)a4;
- (void)allPassTransactionIdentifiersWithBatchHandler:(id)a3;
- (void)archiveMessageWithIdentifier:(id)a3;
- (void)associateTransaction:(id)a3 toRegion:(id)a4;
- (void)computeExtraneousUniqueIDs:(id *)a3 missingUniqueIDs:(id *)a4;
- (void)computeTransactionReceiptExtraneousUniqueIDs:(id *)a3 missingUniqueIDs:(id *)a4 removedUniqueIDs:(id *)a5;
- (void)createGroupsIfNecessary;
- (void)deleteAccountEndpointMetadataForAccountIdentifier:(id)a3 endpoint:(unint64_t)a4;
- (void)deleteAccountEnhancedMerchant:(id)a3 accountIdentifier:(id)a4;
- (void)deleteAccountEnhancedMerchantBehaviorForAccountIdentifier:(id)a3;
- (void)deleteAccountEntityOrderingsForAccountIdentifier:(id)a3 entityType:(unint64_t)a4;
- (void)deleteAccountEventWithIdentifier:(id)a3;
- (void)deleteAccountEventsForAccountIdentifier:(id)a3;
- (void)deleteAccountPendingFamilyMember:(id)a3;
- (void)deleteAccountPendingFamilyMembersWithAccountIdentifier:(id)a3 altDSIDs:(id)a4;
- (void)deleteAccountPromotion:(id)a3 accountIdentifier:(id)a4;
- (void)deleteAccountPromotionBehaviorForAccountIdentifier:(id)a3;
- (void)deleteAccountStatementMetadataForStatementIdentifier:(id)a3 accountIdentifier:(id)a4;
- (void)deleteAccountTaxFormsWithoutPDFForAccount:(id)a3;
- (void)deleteAccountUserWithAltDSID:(id)a3 forAccountWithIdentifier:(id)a4;
- (void)deleteAccountWithIdentifier:(id)a3;
- (void)deleteAllAccounts;
- (void)deleteAllCloudStoreContainerChangeEventHistory;
- (void)deleteAllDiscoveryItems;
- (void)deleteAllDiscoveryNotifications;
- (void)deleteAllEngagementMessages;
- (void)deleteAllFeatureApplications;
- (void)deleteAllMessagesFromPaymentPassWithUniqueIdentifier:(id)a3;
- (void)deleteAllPassAuxiliaryItemMerchantsForPassUniqueIdentifier:(id)a3;
- (void)deleteAllPaymentBalancesForPassUniqueIdentifier:(id)a3;
- (void)deleteAllPaymentSetupFeatures;
- (void)deleteAllPaymentTransactionTags;
- (void)deleteAllPeerPaymentCounterpartImageData;
- (void)deleteAllPeerPaymentEncryptionCertificates;
- (void)deleteAllPeerPaymentRecurringPayments;
- (void)deleteAllPendingProvisioningReceipts;
- (void)deleteAllRegions;
- (void)deleteAllRules;
- (void)deleteAllTransactionsFromTransactionSourceIdentifiers:(id)a3;
- (void)deleteAndRecreateDatabase;
- (void)deleteCreditAccountStatementsForAccount:(id)a3;
- (void)deleteCreditRecoveryPaymentPlansForAccountIdentifier:(id)a3;
- (void)deleteDatabase;
- (void)deleteDirtyAppletStatesForTransitAppletStateDirty:(id)a3;
- (void)deleteDiscoveryItemWithIdentifier:(id)a3;
- (void)deleteDiscoveryNotificationWithIdentifier:(id)a3;
- (void)deleteDuplicateIndexerItems;
- (void)deleteEngagementMessageWithIdentifier:(id)a3;
- (void)deleteFeatureApplicationWithIdentifier:(id)a3;
- (void)deleteFeatureApplicationsWithAccountIdentifier:(id)a3;
- (void)deleteFinancingPlanWithIdentifier:(id)a3 forAccountIdentifier:(id)a4;
- (void)deleteFinancingPlansForAccountIdentifier:(id)a3;
- (void)deleteInStoreTopUpTokenForAccountWithIdentifier:(id)a3;
- (void)deleteIssuerInstallmentTransactionsForPassUniqueID:(id)a3;
- (void)deleteMerchantForPassUniqueIdentifier:(id)a3 auxiliaryPassInformationItemIdentifier:(id)a4;
- (void)deletePassEndpointMetadataForPassUniqueID:(id)a3 type:(unint64_t)a4;
- (void)deletePassShareWithIdentifier:(id)a3;
- (void)deletePassWithUniqueIdentifier:(id)a3;
- (void)deletePaymentRewardsBalancesForPassUniqueIdentifier:(id)a3;
- (void)deletePaymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3;
- (void)deletePaymentSetupFeatureWithIdentifier:(id)a3;
- (void)deletePaymentTransactionWithIdentifier:(id)a3;
- (void)deletePaymentTransactionsToDeleteFromFinanceWithPIDs:(id)a3;
- (void)deletePaymentTransactionsWithIdentifiers:(id)a3;
- (void)deletePeerPaymentCounterpartImageDataForIdentifier:(id)a3;
- (void)deletePeerPaymentPendingRequestsForPeerPaymentAccount;
- (void)deletePeerPaymentPendingRequestsForRequestTokens:(id)a3;
- (void)deletePeerPaymentRecurringPaymentsForIdentifiers:(id)a3;
- (void)deletePushProvisioningSharingMetadata:(id)a3;
- (void)deleteRegionsWithNoMatchingTransactions;
- (void)deleteRetryBackoffForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5;
- (void)deleteRetryCloudStoreShareOperationBackoffForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5;
- (void)deleteRuleWithIdentifier:(id)a3;
- (void)deleteSavingsAccountStatementsForAccount:(id)a3;
- (void)deleteSavingsAccountStatementsWithoutPDFForAccount:(id)a3;
- (void)deleteSharingMessageForIdentifier:(id)a3;
- (void)deleteSharingMessagesForTransportIdentifier:(id)a3;
- (void)deleteSharingMessagesOlderThan:(id)a3;
- (void)deleteTransactionReceiptWithUniqueID:(id)a3;
- (void)enumerateOrganizationNamesForPassTypeID:(id)a3 withHandler:(id)a4;
- (void)enumeratePassSyncabilityPropertiesWithHandler:(id)a3;
- (void)enumeratePassUpdateContextsForWebService:(id)a3 withHandler:(id)a4;
- (void)failedToAssociateTransactionToRegion:(id)a3 error:(id)a4;
- (void)fieldMetadataForFieldWithProperties:(id)a3 withExpressPassManager:(id)a4 completion:(id)a5;
- (void)financingPlanInstallmentsDueDateRangeForAccountIdentifier:(id)a3 financingPlanStates:(id)a4 startDate:(id *)a5 endDate:(id *)a6;
- (void)generateDemoTransactionsForAllPaymentPasses;
- (void)getCatalog:(id *)a3 passes:(id *)a4 dbStates:(id *)a5 ofPassTypes:(unint64_t)a6 limitResults:(BOOL)a7;
- (void)increaseRetryBackoffLevelForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5;
- (void)increaseRetryCloudStoreShareOperationBackoffLevelForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5;
- (void)increaseRetryCountForRecordUniqueIdenifier:(id)a3 recordType:(int64_t)a4;
- (void)incrementMissingRemoteAssetsPersistentStoreItemDownloadRetriesCountWithUniqueID:(id)a3;
- (void)insertAccountBalance:(id)a3 forAccountIdentifier:(id)a4;
- (void)insertContainerDatabaseForContainerDatabase:(id)a3;
- (void)insertDynamicAssociatedDomains:(id)a3;
- (void)insertMerchant:(id)a3 forPassUniqueIdentifier:(id)a4 auxiliaryPassInformationItemIdentifier:(id)a5;
- (void)insertOrReplaceMissingRemoteAssetsPersistentStoreItemWithUniqueID:(id)a3;
- (void)insertOrUpdateAccountEnhancedMerchant:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountEnhancedMerchantBehavior:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountEnhancedMerchants:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountEntityOrderings:(id)a3 accountIdentifier:(id)a4 entityType:(unint64_t)a5;
- (void)insertOrUpdateAccountPendingFamilyMembers:(id)a3;
- (void)insertOrUpdateAccountPromotion:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountPromotionBehavior:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountPromotions:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountTaxForms:(id)a3 forAccountIdentifier:(id)a4;
- (void)insertOrUpdateCloudStoreRecords:(id)a3 inCloudStoreZone:(id)a4;
- (void)insertOrUpdateCloudStoreZone:(id)a3 containerDatabase:(id)a4;
- (void)insertOrUpdateCreditStatements:(id)a3 forAccountIdentifier:(id)a4;
- (void)insertOrUpdateDeviceOriginatedNearbyPeerPaymentMemo:(id)a3 counterpartImageDataIdentifier:(id)a4 forTransactionWithServiceIdentifier:(id)a5 completion:(id)a6;
- (void)insertOrUpdateIndexerItemWithIdentifier:(id)a3 domainIdentifier:(id)a4 searchableItemData:(id)a5 type:(unint64_t)a6 status:(unint64_t)a7 error:(id)a8;
- (void)insertOrUpdatePaymentOfferCatalog:(id)a3;
- (void)insertOrUpdatePaymentRewardsBalances:(id)a3 withPassUniqueIdentifier:(id)a4;
- (void)insertOrUpdatePaymentRewardsRedemption:(id)a3 withPassUniqueIdentifier:(id)a4;
- (void)insertOrUpdatePeerPaymentCounterpartImageData:(id)a3;
- (void)insertOrUpdatePeerPaymentEncryptionCertificate:(id)a3;
- (void)insertOrUpdatePeerPaymentPendingRequests:(id)a3;
- (void)insertOrUpdatePeerPaymentRecurringPayments:(id)a3;
- (void)insertOrUpdatePendingProvisioning:(id)a3;
- (void)insertOrUpdatePendingProvisioningReceipt:(id)a3;
- (void)insertOrUpdateRegion:(id)a3;
- (void)insertOrUpdateSavingsAccountStatements:(id)a3 forAccountIdentifier:(id)a4;
- (void)insertOrUpdateSharingMessages:(id)a3 storePayloads:(BOOL)a4 transportIdentifier:(id)a5;
- (void)insertOrUpdateTransactionsForInstallmentPayments:(id)a3 installmentPlan:(id)a4 accountIdentifier:(id)a5 transactionSourceIdentifier:(id)a6 transactionProcessingBlock:(id)a7;
- (void)insertOrUpdateValueAddedMerchant:(id)a3;
- (void)insertOrUpdateValueAddedServiceTransaction:(id)a3 forPassUniqueIdentifier:(id)a4 paymentTransaction:(id)a5;
- (void)insertPaymentApplicationUsageSummary:(id)a3;
- (void)introduceDuplicateUniqueID;
- (void)introduceExtraneousUniqueID;
- (void)introduceMissingUniqueID;
- (void)markAllIndexedContentForReindexing;
- (void)markAllIndexedContentForReindexingOfType:(unint64_t)a3;
- (void)markAllIndexedContentForVerifyingOfType:(unint64_t)a3;
- (void)markAllIndexedTransactionsForIndexDeletion;
- (void)markAllPassesAsUnsyncedInContainer:(id)a3;
- (void)markAllVerifyingContentForReindexingOfType:(unint64_t)a3;
- (void)markInProgressPendingProvisionings;
- (void)markPassAsSynced:(id)a3;
- (void)migrateCarKeySharesForPass:(id)a3;
- (void)migrateObjectSettings;
- (void)noteObjectSharedWithUniqueID:(id)a3;
- (void)noteTapToRadarPromptedForReason:(id)a3 lastPromptDate:(id)a4;
- (void)performTransactionWithBlock:(id)a3;
- (void)prepareToDeletePassWithUniqueIdentifier:(id)a3;
- (void)purgeOldCloudStoreContainerChangeEventEntires;
- (void)recomputeBalancesForPaymentPass:(id)a3;
- (void)recomputeCategoryVisualizationMagnitudesForPassUniqueID:(id)a3 withStyle:(int64_t)a4;
- (void)removeAllChangeEvents;
- (void)removeChangeEvents:(id)a3;
- (void)removeCloudStoreRecordID:(id)a3 recordType:(id)a4 cloudStoreZone:(id)a5;
- (void)removeCloudStoreZone:(id)a3 containerDatabase:(id)a4;
- (void)removeContainerDatabaseForContainerDatabase:(id)a3;
- (void)removeExpiredChangeEvents;
- (void)removeMissingRemoteAssetsPersistentStoreItemWithUniqueID:(id)a3;
- (void)removePaymentOfferCatalog;
- (void)removeRecordFetchTasks:(id)a3;
- (void)resetAccountBalancesForAccountIdentifier:(id)a3;
- (void)resetCoordinatesForAllRegions;
- (void)resetIndexedContent;
- (void)resetIndexingItems;
- (void)resetNeedsSyncWithFinanceForTransactions:(id)a3;
- (void)resetVerifyingItems;
- (void)resolvePendingTransitTransactionAmountsWithPaymentPass:(id)a3;
- (void)setCloudStoreCoordinator:(id)a3;
- (void)setDelegate:(id)a3;
- (void)setNeedsSyncWithFinanceForTransactionsWithAccountIdentifier:(id)a3;
- (void)setNotificationServicesDelegate:(id)a3;
- (void)setObjectSettingsManager:(id)a3;
- (void)setPaymentServicesDelegate:(id)a3;
- (void)setSecureElement:(id)a3;
- (void)setShouldSyncTransactionsToCloudStore:(BOOL)a3;
- (void)setTags:(id)a3 toTransactionWithIdentifier:(id)a4;
- (void)setWebServicesDelegate:(id)a3;
- (void)syncTransactionsToCloudStoreOriginatedOnDevice:(unint64_t)a3;
- (void)totalAmount:(id *)a3 forTransactionsWithRequest:(id)a4 count:(unint64_t *)a5;
- (void)truncatePaymentBalancesForPassUniqueIdentifier:(id)a3 toMaximumEntityCount:(int64_t)a4;
- (void)updateAllPeerPaymentRecurringPayments:(id)a3;
- (void)updateAppLaunchToken:(id)a3 forNotificationService:(id)a4;
- (void)updateAppletCommutePlans:(id)a3 forPassUniqueIdentifier:(id)a4 paymentApplicationPID:(int64_t)a5;
- (void)updateAuthenticationToken:(id)a3 forNotificationService:(id)a4;
- (void)updateCardholderNameFromSafari:(id)a3 forVirtualCardWithIdentifier:(id)a4;
- (void)updateChangeToken:(id)a3 fetchTimestamp:(id)a4 forCloudStoreZone:(id)a5 inContainerDatabase:(id)a6;
- (void)updateDatabaseSubscription:(id)a3 containerDatabase:(id)a4;
- (void)updateDateLastUsedBySafari:(id)a3 forVirtualCardWithIdentifier:(id)a4;
- (void)updateDeviceEnvironment:(id)a3 forClient:(int64_t)a4;
- (void)updateDidFinishInitialSync:(BOOL)a3 forCloudStoreZone:(id)a4 inContainerDatabase:(id)a5;
- (void)updateImpressionCount:(int64_t)a3 promotionProgramIdentifier:(id)a4 accountIdentifier:(id)a5;
- (void)updateImpressionCountsForPromotions:(id)a3 accountIdentifier:(id)a4;
- (void)updateIndexerItemsWithDomainIdentifier:(id)a3 type:(unint64_t)a4 status:(unint64_t)a5 error:(id)a6;
- (void)updateIndexingMetadataStatus:(unint64_t)a3 version:(int64_t)a4 forType:(unint64_t)a5;
- (void)updateIngestedDate:(id)a3 forUniqueID:(id)a4;
- (void)updateLastDeletionDate:(id)a3 forWebService:(id)a4;
- (void)updateLastModifiedTag:(id)a3 forSerialNumber:(id)a4 webService:(id)a5;
- (void)updateLastPushDate:(id)a3 frequencyScore:(double)a4 forPassTypeID:(id)a5;
- (void)updateLastUpdateDate:(id)a3 forPassTypeID:(id)a4;
- (void)updateLastUpdatedDate:(id)a3 forNotificationService:(id)a4;
- (void)updateLastUpdatedDate:(id)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5;
- (void)updateLastUpdatedTag:(id)a3 forNotificationService:(id)a4;
- (void)updateLastUpdatedTag:(id)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5;
- (void)updateLastUpdatedTag:(id)a3 forWebService:(id)a4;
- (void)updateMapsBrand:(id)a3;
- (void)updateMapsMerchant:(id)a3;
- (void)updateModifiedSource:(int64_t)a3 forUniqueID:(id)a4;
- (void)updateNFCPayloadState:(unint64_t)a3 forPassUniqueIdentifier:(id)a4 didChange:(BOOL *)a5;
- (void)updateNotificationService:(id)a3;
- (void)updatePassAnnotationsForPassWithUniqueIdentifier:(id)a3 withSortingState:(int64_t)a4;
- (void)updatePassSharesForPassUniqueIdentifier:(id)a3 passShares:(id)a4;
- (void)updatePassesWithSyncInformation:(id)a3;
- (void)updatePaymentBalances:(id)a3 forPassUniqueIdentifier:(id)a4;
- (void)updatePaymentBalances:(id)a3 forPassUniqueIdentifier:(id)a4 transactionSequenceNumber:(id)a5;
- (void)updatePaymentPlans:(id)a3 forPassUniqueIdentifier:(id)a4;
- (void)updatePeerPaymentMemo:(id)a3 forTransactionWithServiceIdentifier:(id)a4;
- (void)updatePeerPaymentMessageReceivedDate:(id)a3 forTransactionWithServiceIdentifier:(id)a4;
- (void)updateProcessedPayLaterMerchant:(id)a3 forFinancingPlanIdentifier:(id)a4;
- (void)updateRangingSuspensionReasons:(unint64_t)a3 onCredential:(id)a4 forPaymentApplicationID:(id)a5;
- (void)updateRecordFetchTask:(id)a3;
- (void)updateRegistrationStatus:(unint64_t)a3 date:(id)a4 forSerialNumber:(id)a5 webService:(id)a6;
- (void)updateRegistrationStatus:(unint64_t)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5;
- (void)updateRequiresMerchantReprocessing:(BOOL)a3 forTransactionWithIdentifier:(id)a4;
- (void)updateRevocationStatus:(BOOL)a3 forUniqueID:(id)a4;
- (void)updateSettings:(unint64_t)a3 forObjectWithUniqueIdentifier:(id)a4;
- (void)updateSettings:(unint64_t)a3 forPass:(id)a4;
- (void)updateSettings:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4;
- (void)updateSingleRegion:(id)a3;
- (void)updateSpotlightIndexingVersion:(int64_t)a3;
- (void)updateSuppressBehavior:(unint64_t)a3 forPaymentTransactions:(id)a4 sourceIdentifier:(id)a5;
- (void)updateSuppressBehavior:(unint64_t)a3 forTransactionSourceIdentifier:(id)a4 serviceIdentifier:(id)a5;
- (void)updateTransactionArchive:(id)a3 forCounterpartImageData:(id)a4;
- (void)updateTransactionArchive:(id)a3 forRecurringPayment:(id)a4;
- (void)updateTransitAppletStateWithHistory:(id)a3 transactionDate:(id)a4 forPaymentApplication:(id)a5 withPassUniqueIdentifier:(id)a6 forceTransactionGeneration:(BOOL)a7 balanceLabelDictionary:(id)a8 unitDictionary:(id)a9 planLabelDictionary:(id)a10 completion:(id)a11;
- (void)updateTransitAppletStateWithHistory:(id)a3 transactionDate:(id)a4 forPaymentApplication:(id)a5 withPassUniqueIdentifier:(id)a6 forceTransactionGeneration:(BOOL)a7 recoverMissingTransactions:(BOOL)a8 balanceLabelDictionary:(id)a9 unitDictionary:(id)a10 planLabelDictionary:(id)a11 completion:(id)a12;
- (void)updateTransitAppletStateWithStationNames:(id)a3 forPaymentApplication:(id)a4 withPassUniqueIdentifier:(id)a5;
- (void)updateVirtualCardWithMetadata:(id)a3;
- (void)updateWebService:(id)a3;
- (void)valueAddedMerchantWasPresented:(id)a3;
@end

@implementation PDDatabaseManager

- (void)_validateDefaultPaymentPassOrdering
{
  v3 = PDDefaultPaymentPassUniqueIdentifier();
  v4 = v3;
  if (v3)
  {
    database = self->_database;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10041367C;
    v6[3] = &unk_100738A00;
    id v7 = v3;
    v8 = self;
    sub_10000817C((uint64_t)database, v6);
  }
}

- (id)effectiveCatalog
{
  id v3 = objc_alloc_init((Class)PKCatalog);
  database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10000DD18;
  v9[3] = &unk_100738A00;
  v9[4] = self;
  id v5 = v3;
  id v10 = v5;
  sub_10000817C((uint64_t)database, v9);
  v6 = v10;
  id v7 = v5;

  return v7;
}

- (id)passesOfType:(unint64_t)a3
{
  v4 = [(PDDatabaseManager *)self _predicateForType:a3];
  id v5 = +[Pass passesInDatabase:self->_database matchingPredicate:v4];
  v6 = [(PDDatabaseManager *)self _registeredPasses:v5];

  return v6;
}

- (void)getCatalog:(id *)a3 passes:(id *)a4 dbStates:(id *)a5 ofPassTypes:(unint64_t)a6 limitResults:(BOOL)a7
{
  BOOL v7 = a7;
  v13 = [(PDDatabaseManager *)self effectiveCatalog];
  id v20 = 0;
  if (v7)
  {
    [(PDDatabaseManager *)self _trimCatalog:v13 andBuildPassPredicate:&v20];
    id v14 = v20;
  }
  else if (a6)
  {
    id v14 = [(PDDatabaseManager *)self _predicateForPassTypes:a6];
    id v20 = v14;
  }
  else
  {
    id v14 = 0;
  }
  v15 = +[Pass passesInDatabase:self->_database states:a5 matchingPredicate:v14];
  v16 = [(PDDatabaseManager *)self _registeredPasses:v15];
  id v17 = *a4;
  *a4 = v16;

  id v18 = *a3;
  *a3 = v13;
  id v19 = v13;
}

- (id)_predicateForType:(unint64_t)a3
{
  if (a3 == -1)
  {
    v4 = 0;
  }
  else
  {
    id v3 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:");
    v4 = +[SQLiteComparisonPredicate predicateWithProperty:@"pass_flavor" equalToValue:v3];
  }
  return v4;
}

- (id)paymentPassesPendingActivation
{
  id v3 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  v4 = [(PDDatabaseManager *)self _predicateForType:1];
  v15[0] = v4;
  id v5 = +[Pass predicateForPrimaryPaymentApplication:1];
  v15[1] = v5;
  v6 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v3];
  v15[2] = v6;
  BOOL v7 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE90, &off_10078AEA8, 0);
  v8 = +[Pass predicateForPaymentApplicationStates:v7];
  v15[3] = v8;
  v9 = +[NSArray arrayWithObjects:v15 count:4];

  database = self->_database;
  v11 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v9];
  v12 = +[Pass passesInDatabase:database matchingPredicate:v11];

  v13 = [(PDDatabaseManager *)self _registeredPasses:v12];

  return v13;
}

- (id)_registeredPasses:(id)a3
{
  id v4 = a3;
  uint64_t v15 = 0;
  v16 = &v15;
  uint64_t v17 = 0x3032000000;
  id v18 = sub_10002090C;
  id v19 = sub_100020F78;
  id v20 = 0;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100010218;
  v12[3] = &unk_10073AA88;
  id v14 = &v15;
  id v6 = v4;
  id v13 = v6;
  [WeakRetained readTrueUniqueIDs:v12];

  [(PDDatabaseManager *)self _registerPasses:v16[5]];
  id v7 = [(id)v16[5] count];
  if (v7 < [v6 count])
  {
    v8 = PDDefaultQueue();
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100170A24;
    block[3] = &unk_10072E1E8;
    block[4] = self;
    dispatch_async(v8, block);
  }
  id v9 = (id)v16[5];

  _Block_object_dispose(&v15, 8);
  return v9;
}

- (BOOL)hasPendingProvisioningsOfTypes:(id)a3
{
  return +[PendingProvisioning hasPendingProvisioningsInDatabase:self->_database ofTypes:a3];
}

- (id)updatedPassAnnotationsForPasses:(id)a3
{
  id v4 = a3;
  int v47 = PKExpiredPassesDisabledByUser();
  if (v47) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 1;
  }
  database = self->_database;
  id v7 = +[Pass predicateForInMainStack];
  v8 = +[Pass passUniqueIDsInDatabase:database matchingPredicate:v7];
  id v9 = [v8 mutableCopy];

  uint64_t v50 = v5;
  uint64_t v10 = v5;
  p_superclass = &OBJC_METACLASS___PaymentTransactionTag.superclass;
  +[PassAnnotations updateAnnotationsOfExpiredIrrelevantOrVoidedPassesWithState:v10 inDatabase:self->_database];
  v12 = self->_database;
  id v13 = +[Pass predicateForInMainStack];
  uint64_t v14 = +[Pass passUniqueIDsInDatabase:v12 matchingPredicate:v13];

  v48 = (void *)v14;
  [v9 minusSet:v14];
  if ([v9 count])
  {
    delegateQueue = self->_delegateQueue;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10015C040;
    block[3] = &unk_10072E198;
    block[4] = self;
    id v64 = v9;
    dispatch_async(delegateQueue, block);
  }
  v49 = v9;
  id v53 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v4, "count"));
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  id obj = v4;
  id v54 = [obj countByEnumeratingWithState:&v59 objects:v67 count:16];
  if (v54)
  {
    uint64_t v52 = *(void *)v60;
    do
    {
      for (i = 0; i != v54; i = (char *)i + 1)
      {
        if (*(void *)v60 != v52) {
          objc_enumerationMutation(obj);
        }
        uint64_t v17 = *(void **)(*((void *)&v59 + 1) + 8 * i);
        id v19 = [v17 uniqueID];
        id v20 = [(PDDatabaseManager *)self passAnnotationsForPassUniqueIdentifier:v19];
        v21 = [v17 secureElementPass];
        id v22 = [v21 passActivationState];
        id v23 = v22;
        if (!v20)
        {
          if (v21) {
            BOOL v31 = v22 == (id)4;
          }
          else {
            BOOL v31 = 1;
          }
          if (v31)
          {
            v32 = [v17 relevantDates];
            v33 = +[PKPassRelevantDate findDateFromDates:v32 option:3];

            v34 = [v17 expirationDate];

            if (([v17 isVoided] & 1) != 0
              || [v17 isPastRelevancy])
            {
            }
            else
            {
              unsigned int v37 = [v17 isExpired];
              if ((v37 & 1) != 0 || v34 || v33)
              {

                if (!v37) {
                  goto LABEL_43;
                }
              }
              else if (([v17 isExpiredBasedOnSigningDate] & 1) == 0)
              {
                goto LABEL_43;
              }
            }
            uint64_t v35 = v50;
          }
          else
          {
LABEL_43:
            uint64_t v35 = 0;
          }
          v41 = self->_database;
          v42 = [p_superclass + 359 predicateForUniqueID:v19];
          id v20 = [p_superclass + 359 queryWithDatabase:v41 predicate:v42];

          v55[0] = _NSConcreteStackBlock;
          v55[1] = 3221225472;
          v55[2] = sub_10015C0A8;
          v55[3] = &unk_10073A670;
          uint64_t v58 = v35;
          v55[4] = self;
          id v56 = v53;
          id v57 = v19;
          [v20 enumeratePersistentIDsUsingBlock:v55];

          goto LABEL_49;
        }
        if (v21)
        {
          if ([v20 sortingState] == (id)1)
          {
            if (v23 == (id)4) {
              goto LABEL_16;
            }
          }
          else if ([v20 sortingState] != (id)3 || v23 == (id)4)
          {
            goto LABEL_16;
          }
          v24 = +[PassAnnotations anyInDatabase:self->_database withPassID:v19];
          [v24 updateSortingState:0];
          uint64_t v25 = [v24 passAnnotations];

          id v20 = (void *)v25;
        }
LABEL_16:
        if ([v20 sortingState] == (id)1)
        {
          v26 = [v20 archivedTimestamp];

          if (!v26)
          {
            v27 = +[PassAnnotations anyInDatabase:self->_database withPassID:v19];
            v28 = [v17 expirationDate];
            v29 = v28;
            if (v28)
            {
              id v30 = v28;
            }
            else
            {
              v38 = [v17 relevantDates];
              v39 = +[PKPassRelevantDate findDateFromDates:v38 option:3];

              if (v39)
              {
                id v40 = v39;
              }
              else
              {
                id v40 = +[NSDate now];
              }
              id v30 = v40;
            }
            [v27 updateArchivedTimestamp:v30];
            uint64_t v43 = [v27 passAnnotations];

            id v20 = (void *)v43;
            p_superclass = (__objc2_class **)(&OBJC_METACLASS___PaymentTransactionTag + 8);
          }
        }
        [v53 setObject:v20 forKeyedSubscript:v19];
LABEL_49:
      }
      id v54 = [obj countByEnumeratingWithState:&v59 objects:v67 count:16];
    }
    while (v54);
  }

  v44 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    uint64_t v66 = v47 ^ 1u;
    _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "Finished updating Pass Annotations:\nExpired Passes section enabled by user:%ld", buf, 0xCu);
  }

  id v45 = [v53 copy];
  return v45;
}

- (id)passAnnotationsForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v5 = +[PassAnnotations anyInDatabase:self->_database withPassID:v4];
  id v6 = v5;
  if (v5)
  {
    id v7 = [v5 passAnnotations];
  }
  else
  {
    v8 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 138412290;
      id v11 = v4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error: Failed to find pass annotations in database for pass with unique identifier: %@", (uint8_t *)&v10, 0xCu);
    }

    id v7 = 0;
  }

  return v7;
}

- (void)_registerPasses:(id)a3
{
  id v4 = a3;
  uint64_t v14 = PKDeviceName();
  id v13 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v5 = v4;
  id v6 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v16;
    uint64_t v9 = PKPassLibraryMachServiceName;
    do
    {
      int v10 = 0;
      do
      {
        if (*(void *)v16 != v8) {
          objc_enumerationMutation(v5);
        }
        id v11 = *(void **)(*((void *)&v15 + 1) + 8 * (void)v10);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          [v11 setPassLibraryMachServiceName:v9];
          [v11 setDeviceName:v14];
          [v11 setRemotePass:0];
          sub_10001DFC8(self->_objectSettingsManager, v11);
          if ([v11 passType] == (id)1) {
            [v11 updateDevicePaymentApplicationsWithSecureElementIdentifiers:v13];
          }
          id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
          [WeakRetained registerDatabaseObject:v11];
        }
        int v10 = (char *)v10 + 1;
      }
      while (v7 != v10);
      id v7 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v7);
  }
}

- (id)dismissedDiscoveryItems
{
  return +[DiscoveryItem dismissedDiscoveryItemsInDatabase:self->_database];
}

- (id)categoryVisualizationMagnitudesForPassUniqueID:(id)a3
{
  return +[CategoryVisualizationMagnitude magnitudesForPassUniqueIdentifier:a3 inDatabase:self->_database];
}

- (id)activeDiscoveryItemsForRelevantDate:(id)a3
{
  return +[DiscoveryItem activeItemsWithRelevantDate:a3 inDatabase:self->_database];
}

- (id)accounts
{
  return +[Account accountsInDatabase:self->_database];
}

+ (BOOL)databaseExistsAtURL:(id)a3
{
  id v3 = a3;
  id v4 = +[NSFileManager defaultManager];
  id v5 = [v3 path];

  LOBYTE(v3) = [v4 fileExistsAtPath:v5];
  return (char)v3;
}

- (PDDatabaseManager)init
{
  return 0;
}

- (PDDatabaseManager)initWithURL:(id)a3
{
  return [(PDDatabaseManager *)self initWithURL:a3 delegate:0 report:0];
}

- (PDDatabaseManager)initWithURL:(id)a3 delegate:(id)a4
{
  return [(PDDatabaseManager *)self initWithURL:a3 delegate:a4 report:0];
}

- (PDDatabaseManager)initWithURL:(id)a3 delegate:(id)a4 report:(id *)a5
{
  uint64_t v8 = (NSURL *)a3;
  id v9 = a4;
  v25.receiver = self;
  v25.super_class = (Class)PDDatabaseManager;
  result = [(PDDatabaseManager *)&v25 init];
  if (result)
  {
    id v11 = result;
    uint64_t v12 = +[PKSecureElement sharedSecureElement];
    secureElement = v11->_secureElement;
    v11->_secureElement = (PKSecureElement *)v12;

    uint64_t v14 = sub_10045B18C();
    objectSettingsManager = v11->_objectSettingsManager;
    v11->_objectSettingsManager = (PDObjectSettingsManager *)v14;

    databaseURL = v11->_databaseURL;
    v11->_databaseURL = v8;
    long long v17 = v8;

    objc_storeWeak((id *)&v11->_delegate, v9);
    dispatch_queue_t v18 = dispatch_queue_create("com.apple.passd.databasemanager.paymenttransactions", 0);
    paymentTransactionUpdateQueue = v11->_paymentTransactionUpdateQueue;
    v11->_paymentTransactionUpdateQueue = (OS_dispatch_queue *)v18;

    id v20 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    dispatch_queue_t v21 = dispatch_queue_create("com.apple.passd.databasemanager.delegate", v20);
    delegateQueue = v11->_delegateQueue;
    v11->_delegateQueue = (OS_dispatch_queue *)v21;

    uint64_t v23 = [(objc_class *)off_100805A40() makeProcessor];
    bankConnectPassUpdateProcessor = v11->_bankConnectPassUpdateProcessor;
    v11->_bankConnectPassUpdateProcessor = (FKBankConnectPassUpdateProcessor *)v23;

    [(PDDatabaseManager *)v11 _createDatabaseAtURL:v17 report:a5];
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

- (void)_createDatabaseAtURL:(id)a3 report:(id *)a4
{
  id v6 = a3;
  id v7 = +[NSFileManager defaultManager];
  uint64_t v8 = [v6 path];
  unsigned int v9 = [v7 fileExistsAtPath:v8];

  unsigned __int8 v10 = 0;
  char v11 = 0;
  unsigned __int8 v27 = 0;
  if (v9)
  {
    uint64_t v12 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "PDDatabaseManager: loading database...", buf, 2u);
    }

    id v13 = (SQLiteDatabase *)sub_10035C80C((sqlite3 **)[SQLiteDatabase alloc], v6, &v27);
    database = self->_database;
    self->_database = v13;

    if (self->_database)
    {
      if (!v27)
      {
        unint64_t v23 = -[PDDatabaseManager createSchemaInDatabase:](self, "createSchemaInDatabase:");
        char v11 = 1;
        if (!v23)
        {
          unsigned __int8 v10 = 0;
          goto LABEL_14;
        }
        if (v23 == 2) {
          char v11 = 2;
        }
        v24 = PKLogFacilityTypeGetObject();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_1005156C8();
        }

        [(PDDatabaseManager *)self deleteDatabase];
        unsigned __int8 v10 = v11;
        goto LABEL_13;
      }
      long long v15 = PKLogFacilityTypeGetObject();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_1005156FC();
      }
    }
    else
    {
      long long v16 = PKLogFacilityTypeGetObject();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100515694();
      }

      [(PDDatabaseManager *)self deleteDatabase];
    }
    unsigned __int8 v10 = 1;
LABEL_13:
    char v11 = 1;
  }
LABEL_14:
  if (self->_database)
  {
    unsigned __int8 v17 = v27;
    if (!v27)
    {
      BOOL v18 = 0;
      if (!a4) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
  }
  id v19 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)objc_super v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "PDDatabaseManager: creating database...", v25, 2u);
  }

  if (self->_database
    || (id v20 = (SQLiteDatabase *)sub_10035C7FC((sqlite3 **)[SQLiteDatabase alloc], v6),
        dispatch_queue_t v21 = self->_database,
        self->_database = v20,
        v21,
        self->_database))
  {
    if (!-[PDDatabaseManager createSchemaInDatabase:](self, "createSchemaInDatabase:"))
    {
      unsigned __int8 v17 = 0;
      goto LABEL_35;
    }
    id v22 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100515660();
    }
  }
  else
  {
    id v22 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_10051562C();
    }
  }

  [(PDDatabaseManager *)self deleteDatabase];
  unsigned __int8 v17 = 1;
LABEL_35:
  BOOL v18 = 1;
  if (a4)
  {
LABEL_36:
    a4->var0.var0 = v11;
    a4->var0.var1.var1.var0 = v10;
    a4->var1.var0 = v18;
    a4->var1.var1.var1.var0 = v17;
  }
LABEL_37:
  PKExcludeFileURLFromBackup();
}

- (void)accessDatabaseUsingBlock:(id)a3
{
  id v4 = a3;
  database = self->_database;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100154EDC;
  v7[3] = &unk_10073A418;
  id v8 = v4;
  id v6 = v4;
  sub_10035CD58((uint64_t)database, v7);
}

- (void)performTransactionWithBlock:(id)a3
{
}

- (BOOL)passExistsWithUniqueID:(id)a3
{
  database = self->_database;
  id v4 = +[Pass predicateForUniqueID:a3];
  BOOL v5 = +[SQLiteEntity existsInDatabase:database predicate:v4];

  return v5;
}

- (BOOL)passExistsWithPassTypeID:(id)a3 serialNumber:(id)a4
{
  database = self->_database;
  id v6 = a4;
  id v7 = +[Pass predicateForPassTypeIdentifier:a3];
  v13[0] = v7;
  id v8 = +[Pass predicateForSerialNumber:v6];

  v13[1] = v8;
  unsigned int v9 = +[NSArray arrayWithObjects:v13 count:2];
  unsigned __int8 v10 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v9];
  BOOL v11 = +[SQLiteEntity existsInDatabase:database predicate:v10];

  return v11;
}

- (BOOL)passExistsWithPassType:(unint64_t)a3
{
  database = self->_database;
  id v4 = [(PDDatabaseManager *)self _predicateForType:a3];
  BOOL v5 = +[SQLiteEntity existsInDatabase:database predicate:v4];

  return v5;
}

- (BOOL)passExistsWithPaymentType:(unint64_t)a3
{
  BOOL v5 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  id v6 = [(PDDatabaseManager *)self _predicateForType:1];
  v15[0] = v6;
  id v7 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE30, &off_10078AE48, 0);
  id v8 = +[Pass predicateForPaymentApplicationStates:v7];
  v15[1] = v8;
  unsigned int v9 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v5];
  v15[2] = v9;
  unsigned __int8 v10 = +[Pass predicateForPaymentType:a3];
  v15[3] = v10;
  BOOL v11 = +[NSArray arrayWithObjects:v15 count:4];

  database = self->_database;
  id v13 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v11];
  LOBYTE(database) = +[SQLiteEntity existsInDatabase:database predicate:v13];

  return (char)database;
}

- (unint64_t)countPassesOfType:(unint64_t)a3
{
  database = self->_database;
  id v6 = -[PDDatabaseManager _predicateForType:](self, "_predicateForType:");
  if (+[SQLiteEntity countInDatabase:database predicate:v6] < 1)
  {
    unint64_t v9 = 0;
  }
  else
  {
    id v7 = self->_database;
    id v8 = [(PDDatabaseManager *)self _predicateForType:a3];
    unint64_t v9 = +[SQLiteEntity countInDatabase:v7 predicate:v8];
  }
  return v9;
}

- (unint64_t)countActiveSecureElementPasses
{
  id v3 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  id v4 = [(PDDatabaseManager *)self _predicateForType:1];
  v17[0] = v4;
  BOOL v5 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE60, &off_10078AE78, 0);
  id v6 = +[Pass predicateForPaymentApplicationStates:v5];
  id v7 = +[SQLiteCompoundPredicate negatedPredicate:v6];
  v17[1] = v7;
  id v8 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v3];
  v17[2] = v8;
  unint64_t v9 = +[Pass predicateForValidStyle];
  v17[3] = v9;
  unsigned __int8 v10 = +[NSArray arrayWithObjects:v17 count:4];

  database = self->_database;
  uint64_t v12 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v10];
  if (+[SQLiteEntity countDistinctInDatabase:database predicate:v12] < 1)
  {
    unint64_t v15 = 0;
  }
  else
  {
    id v13 = self->_database;
    uint64_t v14 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v10];
    unint64_t v15 = +[SQLiteEntity countDistinctInDatabase:v13 predicate:v14];
  }
  return v15;
}

- (unint64_t)numberOfPassesOfType:(id)a3
{
  id v4 = a3;
  database = self->_database;
  id v6 = +[Pass predicateForPassTypeIdentifier:v4];
  if (+[SQLiteEntity countInDatabase:database predicate:v6] < 1)
  {
    unint64_t v9 = 0;
  }
  else
  {
    id v7 = self->_database;
    id v8 = +[Pass predicateForPassTypeIdentifier:v4];
    unint64_t v9 = +[SQLiteEntity countInDatabase:v7 predicate:v8];
  }
  return v9;
}

- (unint64_t)numberOfRealPasses
{
  database = self->_database;
  id v4 = +[Pass predicateForValidStyle];
  if (+[SQLiteEntity countInDatabase:database predicate:v4] < 1)
  {
    unint64_t v7 = 0;
  }
  else
  {
    BOOL v5 = self->_database;
    id v6 = +[Pass predicateForValidStyle];
    unint64_t v7 = +[SQLiteEntity countInDatabase:v5 predicate:v6];
  }
  return v7;
}

- (id)passesWithPassTypeID:(id)a3
{
  database = self->_database;
  BOOL v5 = +[Pass predicateForPassTypeIdentifier:a3];
  id v6 = +[Pass passesInDatabase:database matchingPredicate:v5];

  unint64_t v7 = [(PDDatabaseManager *)self _registeredPasses:v6];

  return v7;
}

- (BOOL)passExistsWithPassTypeIdentifierHash:(id)a3
{
  id v3 = self;
  database = self->_database;
  BOOL v5 = +[Pass predicateForPassTypeIdentifierHash:a3];
  v10[0] = v5;
  id v6 = [(PDDatabaseManager *)v3 _validPassPredicate];
  v10[1] = v6;
  unint64_t v7 = +[NSArray arrayWithObjects:v10 count:2];
  id v8 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v7];
  LOBYTE(v3) = +[SQLiteEntity existsInDatabase:database predicate:v8];

  return (char)v3;
}

- (id)passesWithPassTypeIdentifierHash:(id)a3
{
  id v4 = +[Pass predicateForPassTypeIdentifierHash:a3];
  v11[0] = v4;
  BOOL v5 = [(PDDatabaseManager *)self _validPassPredicate];
  v11[1] = v5;
  id v6 = +[NSArray arrayWithObjects:v11 count:2];
  unint64_t v7 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v6];

  id v8 = +[Pass passesInDatabase:self->_database matchingPredicate:v7];
  unint64_t v9 = [(PDDatabaseManager *)self _registeredPasses:v8];

  return v9;
}

- (id)passesWithPassTypeIdentifierHashes:(id)a3 automaticSelectionOnly:(BOOL)a4
{
  if (a3)
  {
    BOOL v4 = a4;
    id v6 = objc_msgSend(a3, "pk_arrayByApplyingBlock:", &stru_10073A458);
    unint64_t v7 = +[SQLiteCompoundPredicate predicateWithProperty:@"pass_type.identifier_hash" equalToValues:v6];
    v20[0] = v7;
    id v8 = [(PDDatabaseManager *)self _validPassPredicate];
    v20[1] = v8;
    unint64_t v9 = +[NSArray arrayWithObjects:v20 count:2];

    database = self->_database;
    BOOL v11 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v9];
    uint64_t v12 = +[Pass passesInDatabase:database matchingPredicate:v11];

    if (v4)
    {
      uint64_t v13 = [(PDDatabaseManager *)self _passesFilteredByAutomaticallyPresentPassEnabled:v12];

      uint64_t v12 = (void *)v13;
    }
    uint64_t v14 = [(PDDatabaseManager *)self _registeredPasses:v12];

    unint64_t v15 = +[NSSortDescriptor sortDescriptorWithKey:@"ingestedDate" ascending:1];
    id v19 = v15;
    long long v16 = +[NSArray arrayWithObjects:&v19 count:1];
    unsigned __int8 v17 = [v14 sortedArrayUsingDescriptors:v16];
  }
  else
  {
    unsigned __int8 v17 = 0;
  }
  return v17;
}

- (id)passesWithPassTypeIdentifierHash:(id)a3 andAssociatedPassTypeIdentifierHash:(id)a4
{
  id v6 = a4;
  unint64_t v7 = +[Pass predicateForPassTypeIdentifierHash:a3];
  id v8 = +[Pass predicateForAssociatedPassTypeIdentifierHash:](Pass, "predicateForAssociatedPassTypeIdentifierHash:", v6, v7);

  v16[1] = v8;
  unint64_t v9 = [(PDDatabaseManager *)self _validPassPredicate];
  v16[2] = v9;
  unsigned __int8 v10 = +[NSArray arrayWithObjects:v16 count:3];

  database = self->_database;
  uint64_t v12 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v10];
  uint64_t v13 = +[Pass passesInDatabase:database matchingPredicate:v12];

  uint64_t v14 = [(PDDatabaseManager *)self _registeredPasses:v13];

  return v14;
}

- (id)passesEnabledForValuedAddedServicesWithAutomaticSelection:(BOOL)a3
{
  BOOL v3 = a3;
  BOOL v5 = +[SQLiteNullPredicate isNotNullPredicateWithProperty:@"pass_type.identifier_hash"];
  v17[0] = v5;
  id v6 = [(PDDatabaseManager *)self _validPassPredicate];
  v17[1] = v6;
  unint64_t v7 = +[NSArray arrayWithObjects:v17 count:2];
  id v8 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v7];

  unint64_t v9 = +[Pass passesInDatabase:self->_database matchingPredicate:v8];
  if (v3)
  {
    uint64_t v10 = [(PDDatabaseManager *)self _passesFilteredByAutomaticallyPresentPassEnabled:v9];

    unint64_t v9 = (void *)v10;
  }
  BOOL v11 = [(PDDatabaseManager *)self _registeredPasses:v9];

  uint64_t v12 = +[NSSortDescriptor sortDescriptorWithKey:@"ingestedDate" ascending:1];
  long long v16 = v12;
  uint64_t v13 = +[NSArray arrayWithObjects:&v16 count:1];
  uint64_t v14 = [v11 sortedArrayUsingDescriptors:v13];

  return v14;
}

- (id)transitNetworksForPassesMatchingTransitType:(unint64_t)a3 expired:(unint64_t)a4
{
  return +[PaymentTransitNetworkIdentifier transitNetworksInDatabase:self->_database forPassesMatchingTransitType:a3 expired:a4];
}

- (BOOL)passExistsForTransitNetworks:(id)a3 isTransitCard:(unint64_t)a4 expired:(unint64_t)a5
{
  return +[PaymentTransitNetworkIdentifier passExistsInDatabase:self->_database forTransitNetworks:a3 isTransitCard:a4 expired:a5];
}

- (id)_passesFilteredByAutomaticallyPresentPassEnabled:(id)a3
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100155E94;
  v5[3] = &unk_1007322F8;
  v5[4] = self;
  BOOL v3 = [a3 objectsPassingTest:v5];
  return v3;
}

- (BOOL)hasCandidatePasses
{
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000;
  char v14 = 0;
  unsigned __int8 v4 = [(PDDatabaseManager *)self passExistsWithPassType:1];
  *((unsigned char *)v12 + 24) = v4;
  if ((v4 & 1) == 0)
  {
    database = self->_database;
    id v6 = [(PDDatabaseManager *)self _predicateForType:0];
    unint64_t v7 = +[Pass passUniqueIDsInDatabase:database matchingPredicate:v6];

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100155FEC;
    v10[3] = &unk_10073A480;
    v10[4] = self;
    v10[5] = &v11;
    [v7 enumerateObjectsUsingBlock:v10];
  }
  char v8 = *((unsigned char *)v12 + 24);
  _Block_object_dispose(&v11, 8);
  return v8;
}

- (id)candidatePassesOfStyle:(int64_t)a3
{
  return [(PDDatabaseManager *)self _candidatePassesOfStyle:a3 matchingFurtherPredicate:0];
}

- (id)locatedCandidatePassesOfStyle:(int64_t)a3
{
  BOOL v5 = [(PDDatabaseManager *)self _locatedPredicate];
  id v6 = [(PDDatabaseManager *)self _candidatePassesOfStyle:a3 matchingFurtherPredicate:v5];

  return v6;
}

- (id)unlocatedCandidatePassesOfStyle:(int64_t)a3
{
  BOOL v5 = [(PDDatabaseManager *)self _unlocatedPredicate];
  id v6 = [(PDDatabaseManager *)self _candidatePassesOfStyle:a3 matchingFurtherPredicate:v5];

  return v6;
}

- (id)locatedDatelessCandidatePassesOfStyle:(int64_t)a3
{
  BOOL v5 = [(PDDatabaseManager *)self _datedPassPredicate];
  id v6 = +[SQLiteCompoundPredicate negatedPredicate:v5];
  unint64_t v7 = [(PDDatabaseManager *)self _locatedCandidatePassesOfStyle:a3 matchingFurtherPredicate:v6];

  return v7;
}

- (id)validNFCBarcodePassUniqueIDs
{
  BOOL v3 = [(PDDatabaseManager *)self _predicateForType:0];
  v22[0] = v3;
  unsigned __int8 v4 = +[Pass predicateForValidStyle];
  v22[1] = v4;
  BOOL v5 = +[Pass predicateForHasValidNFCPayload];
  v22[2] = v5;
  id v6 = [(PDDatabaseManager *)self _validPassPredicate];
  v22[3] = v6;
  unint64_t v7 = +[Pass predicateForInMainStack];
  v22[4] = v7;
  char v8 = +[NSArray arrayWithObjects:v22 count:5];
  unint64_t v9 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v8];

  id v10 = objc_alloc_init((Class)NSMutableSet);
  uint64_t v11 = +[SQLiteEntity queryWithDatabase:self->_database predicate:v9];
  CFStringRef v21 = @"unique_id";
  uint64_t v12 = +[NSArray arrayWithObjects:&v21 count:1];
  long long v16 = _NSConcreteStackBlock;
  uint64_t v17 = 3221225472;
  BOOL v18 = sub_1001563CC;
  id v19 = &unk_100731258;
  id v13 = v10;
  id v20 = v13;
  [v11 enumeratePersistentIDsAndProperties:v12 usingBlock:&v16];

  if (objc_msgSend(v13, "count", v16, v17, v18, v19)) {
    id v14 = [v13 copy];
  }
  else {
    id v14 = 0;
  }

  return v14;
}

- (BOOL)hasActiveBarcodePasses
{
  v2 = self;
  BOOL v3 = [(PDDatabaseManager *)self _predicateForType:0];
  v11[0] = v3;
  unsigned __int8 v4 = +[Pass predicateForValidStyle];
  v11[1] = v4;
  BOOL v5 = [(PDDatabaseManager *)v2 _validPassPredicate];
  void v11[2] = v5;
  id v6 = +[Pass predicateForInMainStack];
  v11[3] = v6;
  unint64_t v7 = +[NSArray arrayWithObjects:v11 count:4];
  char v8 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v7];

  unint64_t v9 = +[SQLiteEntity queryWithDatabase:v2->_database predicate:v8];
  LOBYTE(v2) = (uint64_t)[v9 countOfEntities] > 0;

  return (char)v2;
}

- (BOOL)hasActiveSecureElementPasses
{
  database = self->_database;
  BOOL v3 = [(PDDatabaseManager *)self _activeSecureElementPassPredicate];
  unsigned __int8 v4 = +[SQLiteEntity queryWithDatabase:database predicate:v3];

  LOBYTE(database) = (uint64_t)[v4 countOfEntities] > 0;
  return (char)database;
}

- (BOOL)hasActiveContactlessSecureElementPasses
{
  v2 = self;
  BOOL v3 = [(PDDatabaseManager *)self _activeSecureElementPassPredicate];
  v9[0] = v3;
  unsigned __int8 v4 = +[Pass predicateForPaymentApplicationSupportsContactlessPayment:1];
  v9[1] = v4;
  BOOL v5 = +[NSArray arrayWithObjects:v9 count:2];
  id v6 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v5];

  unint64_t v7 = +[SQLiteEntity queryWithDatabase:v2->_database predicate:v6];
  LOBYTE(v2) = (uint64_t)[v7 countOfEntities] > 0;

  return (char)v2;
}

- (id)locationsByUniqueIDInBoundingBoxOfRegion:(id)a3
{
  id v4 = a3;
  PDBoundingBoxForRegion();
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  id v13 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 138412290;
    double v17 = *(double *)&v4;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Searching for pass locations in region: %@", (uint8_t *)&v16, 0xCu);
  }

  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 134218752;
    double v17 = v6;
    __int16 v18 = 2048;
    double v19 = v8;
    __int16 v20 = 2048;
    double v21 = v10;
    __int16 v22 = 2048;
    double v23 = v12;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Bounding box: {%f, %f, %f, %f}", (uint8_t *)&v16, 0x2Au);
  }

  id v14 = +[LocationIndex locationsByPassUniqueIDWithBoundingBox:inDatabase:](LocationIndex, "locationsByPassUniqueIDWithBoundingBox:inDatabase:", self->_database, v6, v8, v10, v12);

  return v14;
}

- (id)passes
{
  BOOL v3 = +[Pass passesInDatabase:self->_database matchingPredicate:0];
  id v4 = [(PDDatabaseManager *)self _registeredPasses:v3];

  return v4;
}

- (id)passesForWebService:(id)a3
{
  id v4 = [(PDDatabaseManager *)self _databaseWebService:a3];
  double v5 = +[Pass predicateForWebService:v4];
  double v6 = +[Pass passesInDatabase:self->_database matchingPredicate:v5];
  double v7 = [(PDDatabaseManager *)self _registeredPasses:v6];

  return v7;
}

- (id)passWithUniqueIdentifier:(id)a3
{
  if (a3)
  {
    id v4 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
    double v5 = [v4 pass];

    double v6 = [(PDDatabaseManager *)self _registeredPass:v5];
  }
  else
  {
    double v6 = 0;
  }
  return v6;
}

- (id)passWithPassTypeID:(id)a3 serialNumber:(id)a4
{
  database = self->_database;
  id v7 = a4;
  double v8 = +[PassType anyInDatabase:database withPassTypeID:a3];
  double v9 = +[Pass anyInDatabase:self->_database withPassType:v8 serialNumber:v7];

  double v10 = [v9 pass];

  double v11 = [(PDDatabaseManager *)self _registeredPass:v10];

  return v11;
}

- (id)passesOfStyles:(unint64_t)a3
{
  id v4 = [(PDDatabaseManager *)self _predicateForStyles:a3];
  double v5 = +[Pass passesInDatabase:self->_database matchingPredicate:v4];
  double v6 = [(PDDatabaseManager *)self _registeredPasses:v5];

  return v6;
}

- (id)passStyles
{
  return +[Pass passStylesInDatabase:self->_database];
}

- (id)unexpiredPassStyles
{
  return +[Pass unexpiredPassStylesInDatabase:self->_database];
}

- (id)secureElementCardTypes
{
  return +[Pass secureElementCardTypesInDatabase:self->_database];
}

- (id)unexpiredSecureElementCardTypes
{
  return +[Pass unexpiredSecureElementCardTypesInDatabase:self->_database];
}

- (id)passesForPaymentType:(unint64_t)a3
{
  id v4 = +[NSNumber numberWithUnsignedInteger:a3];
  double v8 = v4;
  double v5 = +[NSArray arrayWithObjects:&v8 count:1];
  double v6 = [(PDDatabaseManager *)self passesForPaymentTypes:v5];

  return v6;
}

- (id)passesForPaymentTypes:(id)a3
{
  secureElement = self->_secureElement;
  id v5 = a3;
  __int16 v18 = [(PKSecureElement *)secureElement secureElementIdentifiers];
  double v6 = objc_msgSend(v5, "pk_arrayByApplyingBlock:", &stru_10073A4C0);

  id v7 = [(PDDatabaseManager *)self _predicateForType:1];
  v19[0] = v7;
  double v8 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE30, &off_10078AE48, 0);
  double v9 = +[Pass predicateForPaymentApplicationStates:v8];
  v19[1] = v9;
  double v10 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v18];
  v19[2] = v10;
  double v11 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v6];
  v19[3] = v11;
  double v12 = +[NSArray arrayWithObjects:v19 count:4];

  database = self->_database;
  id v14 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v12];
  unint64_t v15 = +[Pass passesInDatabase:database matchingPredicate:v14];

  int v16 = [(PDDatabaseManager *)self _registeredPasses:v15];

  return v16;
}

- (id)passUniqueIDs
{
  return +[Pass passUniqueIDsInDatabase:self->_database matchingPredicate:0];
}

- (id)passUniqueIDsOfType:(unint64_t)a3
{
  id v4 = [(PDDatabaseManager *)self _predicateForType:a3];
  id v5 = +[Pass passUniqueIDsInDatabase:self->_database matchingPredicate:v4];

  return v5;
}

- (id)syncablePassUniqueIDs
{
  database = self->_database;
  BOOL v3 = +[SQLiteBooleanPredicate truePredicate];
  id v4 = +[SQLiteEntity queryWithDatabase:database predicate:v3];

  id v5 = objc_alloc_init((Class)NSMutableSet);
  v15[0] = @"unique_id";
  v15[1] = @"pass_flavor";
  v15[2] = @"template";
  v15[3] = @"pass_type.identifier";
  double v6 = +[NSArray arrayWithObjects:v15 count:4];
  double v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472;
  double v12 = sub_100157024;
  id v13 = &unk_100731258;
  id v14 = v5;
  id v7 = v5;
  [v4 enumeratePersistentIDsAndProperties:v6 usingBlock:&v10];

  id v8 = objc_msgSend(v7, "copy", v10, v11, v12, v13);
  return v8;
}

- (id)deviceSecureElementPassUniqueIDs
{
  BOOL v3 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  id v4 = [(PDDatabaseManager *)self _predicateForType:1];
  v11[0] = v4;
  id v5 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v3];
  v11[1] = v5;
  double v6 = +[NSArray arrayWithObjects:v11 count:2];

  database = self->_database;
  id v8 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v6];
  double v9 = +[Pass passUniqueIDsInDatabase:database matchingPredicate:v8];

  return v9;
}

- (id)passWithProvisioningCredentialHash:(id)a3
{
  id v4 = +[Pass anyInDatabase:self->_database withProvisioningCredentialHash:a3];
  id v5 = [v4 pass];

  double v6 = [(PDDatabaseManager *)self _registeredPass:v5];

  return v6;
}

- (id)contactlessAccessPaymentPassesWithTCI:(id)a3 readerId:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (v6)
  {
    uint64_t v8 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
    v24 = [(PDDatabaseManager *)self _predicateForType:1];
    v28[0] = v24;
    double v23 = +[Pass predicateForPaymentApplicationSupportsContactlessPayment:1];
    v28[1] = v23;
    __int16 v22 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE30, &off_10078AE48, 0);
    double v21 = +[Pass predicateForPaymentApplicationStates:](Pass, "predicateForPaymentApplicationStates:");
    v28[2] = v21;
    objc_super v25 = (void *)v8;
    double v9 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v8];
    v28[3] = v9;
    double v10 = +[Pass predicateForPaymentCardType:3];
    v28[4] = v10;
    id v27 = v6;
    uint64_t v11 = +[NSArray arrayWithObjects:&v27 count:1];
    double v12 = +[Pass predicateForTCIs:v11];
    v28[5] = v12;
    if (v7)
    {
      id v26 = v7;
      id v13 = +[NSArray arrayWithObjects:&v26 count:1];
    }
    else
    {
      id v13 = 0;
    }
    unint64_t v15 = +[Pass predicateForReaderIds:v13];
    v28[6] = v15;
    int v16 = +[NSArray arrayWithObjects:v28 count:7];

    if (v7) {
    database = self->_database;
    }
    __int16 v18 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v16];
    double v19 = +[Pass passesInDatabase:database matchingPredicate:v18];

    id v14 = [(PDDatabaseManager *)self _registeredPasses:v19];
  }
  else
  {
    id v14 = 0;
  }

  return v14;
}

- (id)paymentPassesEligibleForDefaultCardSelection
{
  BOOL v3 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  id v4 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE30, &off_10078AE48, &off_10078AEC0, 0);
  id v5 = [(PDDatabaseManager *)self _predicateForType:1];
  v16[0] = v5;
  id v6 = +[Pass predicateForPaymentApplicationSupportsContactlessPayment:1];
  v16[1] = v6;
  id v7 = +[Pass predicateForPaymentApplicationStates:v4];
  v16[2] = v7;
  uint64_t v8 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v3];
  void v16[3] = v8;
  double v9 = +[Pass predicateForSupportsDefaultCardSelection:1];
  v16[4] = v9;
  double v10 = +[NSArray arrayWithObjects:v16 count:5];

  database = self->_database;
  double v12 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v10];
  id v13 = +[Pass passesInDatabase:database matchingPredicate:v12];

  id v14 = [(PDDatabaseManager *)self _registeredPasses:v13];

  return v14;
}

- (BOOL)peerPaymentPassShouldNotBeAcceptedForAccount:(id)a3
{
  return a3 && (char *)[a3 state] - 3 < (char *)2;
}

- (id)passesForInAppPaymentOnNetworks:(id)a3 issuerCountryCodes:(id)a4 paymentApplicationStates:(id)a5 paymentRequestType:(id)a6 isMultiTokensRequest:(BOOL)a7 webService:(id)a8
{
  BOOL v67 = a7;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a8;
  uint64_t v17 = [(PDDatabaseManager *)self _paymentNetworkIdentifiersForPaymentNetworks:a3];
  long long v61 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  if (![v14 count])
  {
    uint64_t v18 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE30, &off_10078AE48, 0);

    id v14 = (id)v18;
  }
  uint64_t v58 = v14;
  uint64_t v19 = +[Pass predicateForPaymentApplicationStates:v14];
  __int16 v20 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v61];
  double v21 = +[Pass predicateForPaymentApplicationSupportsInAppPayment:1];
  v55 = (void *)v17;
  __int16 v22 = +[Pass predicateForPaymentApplicationNetworks:v17];
  id v54 = (void *)v19;
  double v23 = +[NSMutableArray arrayWithObjects:](NSMutableArray, "arrayWithObjects:", v19, v20, v21, v22, 0);

  if ([v13 count])
  {
    v24 = +[Pass predicateForIssuerCountryCodes:v13];
    [v23 addObject:v24];
  }
  database = self->_database;
  id v26 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v23];
  id v27 = +[Pass passesInDatabase:database matchingPredicate:v26];

  v28 = [(PDDatabaseManager *)self _registeredPasses:v27];

  v29 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  v65 = [v29 associatedPassUniqueID];
  long long v60 = v29;
  unsigned int v30 = [(PDDatabaseManager *)self peerPaymentPassShouldNotBeAcceptedForAccount:v29];
  BOOL v31 = [v16 targetDevice];
  v32 = [v31 paymentWebService:v16 supportedRegionFeatureOfType:4];

  uint64_t v52 = v32;
  v68 = [v32 supportedNetworks];
  long long v59 = v13;
  id v56 = v16;
  id v57 = v15;
  id v53 = v23;
  if (v15)
  {
    unsigned int v33 = [v15 intValue];
    uint64_t v34 = objc_opt_new();
    uint64_t v35 = (void *)v34;
    if (v33 == 10)
    {
      v36 = +[PKWebServiceDisbursementFeature disbursementFeatureWithWebService:v16];
      uint64_t v37 = [v36 supportedNetworks];

      int v64 = 1;
      long long v62 = (void *)v37;
      goto LABEL_11;
    }
    long long v62 = (void *)v34;
  }
  else
  {
    long long v62 = objc_opt_new();
  }
  int v64 = 0;
LABEL_11:
  id v63 = objc_alloc_init((Class)NSMutableSet);
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  id obj = v28;
  id v38 = [obj countByEnumeratingWithState:&v73 objects:v77 count:16];
  if (v38)
  {
    id v39 = v38;
    uint64_t v40 = *(void *)v74;
    if (v60) {
      unsigned int v41 = v30;
    }
    else {
      unsigned int v41 = 0;
    }
    if (v65) {
      unsigned int v42 = v41;
    }
    else {
      unsigned int v42 = 0;
    }
    do
    {
      for (i = 0; i != v39; i = (char *)i + 1)
      {
        if (*(void *)v74 != v40) {
          objc_enumerationMutation(obj);
        }
        v44 = *(void **)(*((void *)&v73 + 1) + 8 * i);
        if (v42)
        {
          id v45 = [*(id *)(*((void *)&v73 + 1) + 8 * i) uniqueID];
          unsigned __int8 v46 = [v45 isEqualToString:v65];

          if (v46) {
            continue;
          }
        }
        int v47 = [v44 paymentApplications];
        v71[0] = _NSConcreteStackBlock;
        v71[1] = 3221225472;
        v71[2] = sub_100157CC0;
        v71[3] = &unk_10073A4E8;
        id v72 = v68;
        v48 = objc_msgSend(v47, "pk_anyObjectPassingTest:", v71);

        if (!v67 || v48)
        {
          if (!v64) {
            goto LABEL_27;
          }
          v49 = [v44 paymentApplications];
          v69[0] = _NSConcreteStackBlock;
          v69[1] = 3221225472;
          v69[2] = sub_100157CCC;
          v69[3] = &unk_10073A4E8;
          id v70 = v62;
          uint64_t v50 = objc_msgSend(v49, "pk_anyObjectPassingTest:", v69);

          if (v50) {
LABEL_27:
          }
            [v63 addObject:v44];
        }
      }
      id v39 = [obj countByEnumeratingWithState:&v73 objects:v77 count:16];
    }
    while (v39);
  }

  return v63;
}

- (id)paymentPassesWithIssuerCountryCodes:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  id v6 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE30, &off_10078AE48, 0);
  id v7 = +[Pass predicateForPaymentApplicationStates:v6];
  v32 = (void *)v5;
  uint64_t v8 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v5];
  double v9 = +[Pass predicateForPaymentApplicationSupportsInAppPayment:1];
  unsigned int v33 = v4;
  double v10 = +[Pass predicateForIssuerCountryCodes:v4];
  uint64_t v11 = +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v7, v8, v9, v10, 0);

  database = self->_database;
  BOOL v31 = (void *)v11;
  id v13 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v11];
  id v14 = +[Pass passesInDatabase:database matchingPredicate:v13];

  id v15 = [(PDDatabaseManager *)self _registeredPasses:v14];

  id v16 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  uint64_t v17 = [v16 associatedPassUniqueID];
  uint64_t v34 = v16;
  unsigned int v18 = [(PDDatabaseManager *)self peerPaymentPassShouldNotBeAcceptedForAccount:v16];
  id v19 = objc_alloc_init((Class)NSMutableSet);
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v20 = v15;
  id v21 = [v20 countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (v21)
  {
    id v22 = v21;
    uint64_t v23 = *(void *)v36;
    if (v16) {
      unsigned int v24 = v18;
    }
    else {
      unsigned int v24 = 0;
    }
    if (v17) {
      unsigned int v25 = v24;
    }
    else {
      unsigned int v25 = 0;
    }
    do
    {
      for (i = 0; i != v22; i = (char *)i + 1)
      {
        if (*(void *)v36 != v23) {
          objc_enumerationMutation(v20);
        }
        uint64_t v27 = *(void *)(*((void *)&v35 + 1) + 8 * i);
        if (v25)
        {
          v28 = [*(id *)(*((void *)&v35 + 1) + 8 * i) uniqueID];
          unsigned __int8 v29 = [v28 isEqualToString:v17];

          if (v29) {
            continue;
          }
        }
        [v19 addObject:v27];
      }
      id v22 = [v20 countByEnumeratingWithState:&v35 objects:v39 count:16];
    }
    while (v22);
  }

  return v19;
}

- (id)passesForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 issuerCountryCodes:(id)a5 paymentApplicationStates:(id)a6 paymentRequestType:(id)a7 isMultiTokensRequest:(BOOL)a8 webService:(id)a9
{
  BOOL v9 = a8;
  id v15 = a3;
  id v16 = a5;
  id v17 = a6;
  id v18 = a7;
  id v19 = a9;
  id v47 = objc_alloc_init((Class)NSMutableSet);
  id v20 = [objc_alloc((Class)NSMutableSet) initWithSet:v15];
  [v20 removeObject:PKPaymentNetworkPrivateLabel];
  unsigned int v41 = v20;
  id v45 = v16;
  id v21 = [(PDDatabaseManager *)self passesForInAppPaymentOnNetworks:v20 issuerCountryCodes:v16 paymentApplicationStates:v17 paymentRequestType:v18 isMultiTokensRequest:v9 webService:v19];
  unsigned __int8 v46 = v15;
  id v22 = [v15 allObjects];
  uint64_t v23 = PKPaymentCredentialTypesForPaymentNetworkNames();
  unsigned int v42 = v19;
  uint64_t v43 = v18;
  LOBYTE(v40) = v9;
  v44 = v17;
  unsigned int v24 = +[PKPaymentRequestSupportedQuery inAppQueryWithSupportedNetworkIDs:v23 merchantCapabilities:a4 merchantCountryCode:0 paymentMode:1 paymentApplicationStates:v17 paymentRequestType:v18 isMultiTokensRequest:v40 webService:v19];

  long long v54 = 0u;
  long long v55 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id v25 = v21;
  id v26 = [v25 countByEnumeratingWithState:&v52 objects:v61 count:16];
  if (v26)
  {
    id v27 = v26;
    uint64_t v28 = *(void *)v53;
    do
    {
      for (i = 0; i != v27; i = (char *)i + 1)
      {
        if (*(void *)v53 != v28) {
          objc_enumerationMutation(v25);
        }
        unsigned int v30 = *(void **)(*((void *)&v52 + 1) + 8 * i);
        long long v48 = 0u;
        long long v49 = 0u;
        long long v50 = 0u;
        long long v51 = 0u;
        BOOL v31 = [v30 deviceInAppPaymentApplications];
        id v32 = [v31 countByEnumeratingWithState:&v48 objects:v60 count:16];
        if (v32)
        {
          id v33 = v32;
          uint64_t v34 = *(void *)v49;
          while (2)
          {
            for (j = 0; j != v33; j = (char *)j + 1)
            {
              if (*(void *)v49 != v34) {
                objc_enumerationMutation(v31);
              }
              if ([*(id *)(*((void *)&v48 + 1) + 8 * (void)j) canProcessPayment:v24])
              {
                [v47 addObject:v30];
                goto LABEL_16;
              }
            }
            id v33 = [v31 countByEnumeratingWithState:&v48 objects:v60 count:16];
            if (v33) {
              continue;
            }
            break;
          }
        }
LABEL_16:
      }
      id v27 = [v25 countByEnumeratingWithState:&v52 objects:v61 count:16];
    }
    while (v27);
  }

  long long v36 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
  {
    id v37 = [v25 count];
    id v38 = [v47 count];
    *(_DWORD *)buf = 134218240;
    id v57 = v37;
    __int16 v58 = 2048;
    id v59 = v38;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "passesForNonWebInAppPaymentOnNetworks passes: %ld, filtered: %ld", buf, 0x16u);
  }

  return v47;
}

- (id)transitPasses
{
  BOOL v3 = [(PDDatabaseManager *)self _transitPredicate];
  id v4 = +[Pass passesInDatabase:self->_database matchingPredicate:v3];
  uint64_t v5 = [(PDDatabaseManager *)self _registeredPasses:v4];

  return v5;
}

- (id)passesSupportingIssuerBinding
{
  database = self->_database;
  id v4 = +[Pass predicateForSupportsIssuerBinding:1];
  uint64_t v5 = +[Pass passesInDatabase:database matchingPredicate:v4];

  id v6 = [(PDDatabaseManager *)self _registeredPasses:v5];

  return v6;
}

- (BOOL)hasPassesWithPayloadState:(unint64_t)a3
{
  database = self->_database;
  id v4 = +[Pass predicateForNFCPayloadState:a3];
  uint64_t v5 = +[SQLiteEntity queryWithDatabase:database predicate:v4];

  LOBYTE(database) = (uint64_t)[v5 countOfEntities] > 0;
  return (char)database;
}

- (id)passesSupportingIssuerBindingWithPayloadState:(unint64_t)a3
{
  database = self->_database;
  uint64_t v5 = +[Pass predicateForNFCPayloadState:a3];
  id v6 = +[Pass passesInDatabase:database matchingPredicate:v5];

  id v7 = [(PDDatabaseManager *)self _registeredPasses:v6];

  return v7;
}

- (BOOL)hasSecureElementPassesOfType:(int64_t)a3
{
  if ((unint64_t)a3 > 4)
  {
    id v4 = 0;
  }
  else
  {
    if (a3 == 2) {
      [(PDDatabaseManager *)self _transitPredicate];
    }
    else {
    id v4 = +[Pass predicateForPaymentCardType:](Pass, "predicateForPaymentCardType:");
    }
  }
  BOOL v5 = +[SQLiteEntity countInDatabase:self->_database predicate:v4] > 0;

  return v5;
}

- (BOOL)hasSecureElementPassesWithFeatureIdentifier:(unint64_t)a3
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000;
  char v10 = 0;
  id v4 = [(PDDatabaseManager *)self passesOfType:1];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001586F4;
  v6[3] = &unk_10073A510;
  void v6[4] = &v7;
  v6[5] = a3;
  [v4 enumerateObjectsUsingBlock:v6];
  LOBYTE(a3) = *((unsigned char *)v8 + 24);

  _Block_object_dispose(&v7, 8);
  return a3;
}

- (unint64_t)countPassesPreventingWalletDeletion
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v9 = 0;
  v2 = [(PDDatabaseManager *)self passesOfType:1];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100158850;
  v5[3] = &unk_10073A538;
  v5[4] = &v6;
  [v2 enumerateObjectsUsingBlock:v5];
  unint64_t v3 = v7[3];

  _Block_object_dispose(&v6, 8);
  return v3;
}

- (BOOL)passExistsForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 paymentApplicationStates:(id)a5
{
  char v5 = a4;
  id v8 = a5;
  uint64_t v9 = [(PDDatabaseManager *)self _paymentNetworkIdentifiersForPaymentNetworks:a3];
  uint64_t v10 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  if (![v8 count])
  {
    uint64_t v11 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", &off_10078AE30, &off_10078AE48, 0);

    id v8 = (id)v11;
  }
  double v12 = +[PaymentApplication predicateForStates:v8];
  unsigned __int8 v29 = (void *)v10;
  id v13 = +[PaymentApplication predicateForSecureElementIdentifiers:v10];
  id v14 = +[PaymentApplication predicateForSupportsInAppPayment:1];
  unsigned int v30 = (void *)v9;
  id v15 = +[PaymentApplication predicateForNetworks:v9];
  id v16 = +[NSMutableArray arrayWithObjects:](NSMutableArray, "arrayWithObjects:", v12, v13, v14, v15, 0);

  id v17 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  id v18 = [v17 associatedPassUniqueID];
  unsigned int v19 = [(PDDatabaseManager *)self peerPaymentPassShouldNotBeAcceptedForAccount:v17];
  if (v17 && v19 && v18)
  {
    id v20 = +[PaymentApplication predicateForPassWithUniqueIdentifier:v18];
    id v21 = +[SQLiteCompoundPredicate negatedPredicate:v20];
    [v16 addObject:v21];
  }
  id v22 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v23 = v22;
  if ((v5 & 0x1C) != 0 && (v5 & 0x1C) != 0x1CLL)
  {
    if ((v5 & 4) != 0)
    {
      [v22 addObject:&off_10078AED8];
      if ((v5 & 8) == 0)
      {
LABEL_11:
        if ((v5 & 0x10) == 0) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }
    else if ((v5 & 8) == 0)
    {
      goto LABEL_11;
    }
    [v23 addObject:&off_10078AEF0];
    if ((v5 & 0x10) != 0) {
LABEL_12:
    }
      [v23 addObject:&off_10078AF08];
  }
LABEL_13:
  if ([v23 count])
  {
    unsigned int v24 = +[PaymentApplication predicateForPaymentMethodTypes:v23];
    [v16 addObject:v24];
  }
  id v25 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v16];
  id v26 = +[SQLiteEntity anyInDatabase:self->_database predicate:v25];
  BOOL v27 = v26 != 0;

  return v27;
}

- (id)passesForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 issuerCountryCodes:(id)a5 paymentRequestType:(id)a6 isMultiTokensRequest:(BOOL)a7 webService:(id)a8
{
  return [(PDDatabaseManager *)self passesForNonWebInAppPaymentOnNetworks:a3 withCapabilities:a4 issuerCountryCodes:a5 paymentApplicationStates:0 paymentRequestType:a6 isMultiTokensRequest:a7 webService:a8];
}

- (id)passesForWebPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 webService:(id)a5 issuerCountryCodes:(id)a6 paymentApplicationStates:(id)a7 isMultiTokensRequest:(BOOL)a8
{
  BOOL v8 = a8;
  id v14 = a3;
  id v15 = a5;
  id v16 = a6;
  id v17 = a7;
  id v43 = objc_alloc_init((Class)NSMutableSet);
  id v18 = [objc_alloc((Class)NSMutableSet) initWithSet:v14];
  [v18 removeObject:PKPaymentNetworkPrivateLabel];
  id v38 = v18;
  uint64_t v40 = v16;
  unsigned int v19 = [(PDDatabaseManager *)self passesForInAppPaymentOnNetworks:v18 issuerCountryCodes:v16 paymentApplicationStates:v17 paymentRequestType:0 isMultiTokensRequest:v8 webService:v15];
  unsigned int v42 = v14;
  id v20 = [v14 allObjects];
  id v21 = PKPaymentCredentialTypesForPaymentNetworkNames();
  unsigned int v41 = v15;
  id v39 = v17;
  id v22 = +[PKPaymentRequestSupportedQuery webQueryWithSupportedNetworkIDs:v21 merchantCapabilities:a4 merchantCountryCode:0 paymentMode:1 paymentApplicationStates:v17 isMultiTokensRequest:v8 webService:v15];

  long long v50 = 0u;
  long long v51 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  id v23 = v19;
  id v24 = [v23 countByEnumeratingWithState:&v48 objects:v57 count:16];
  if (v24)
  {
    id v25 = v24;
    uint64_t v26 = *(void *)v49;
    do
    {
      for (i = 0; i != v25; i = (char *)i + 1)
      {
        if (*(void *)v49 != v26) {
          objc_enumerationMutation(v23);
        }
        uint64_t v28 = *(void **)(*((void *)&v48 + 1) + 8 * i);
        long long v44 = 0u;
        long long v45 = 0u;
        long long v46 = 0u;
        long long v47 = 0u;
        unsigned __int8 v29 = [v28 deviceInAppPaymentApplications];
        id v30 = [v29 countByEnumeratingWithState:&v44 objects:v56 count:16];
        if (v30)
        {
          id v31 = v30;
          uint64_t v32 = *(void *)v45;
          while (2)
          {
            for (j = 0; j != v31; j = (char *)j + 1)
            {
              if (*(void *)v45 != v32) {
                objc_enumerationMutation(v29);
              }
              if ([*(id *)(*((void *)&v44 + 1) + 8 * (void)j) canProcessPayment:v22])
              {
                [v43 addObject:v28];
                goto LABEL_16;
              }
            }
            id v31 = [v29 countByEnumeratingWithState:&v44 objects:v56 count:16];
            if (v31) {
              continue;
            }
            break;
          }
        }
LABEL_16:
      }
      id v25 = [v23 countByEnumeratingWithState:&v48 objects:v57 count:16];
    }
    while (v25);
  }

  uint64_t v34 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
  {
    id v35 = [v23 count];
    id v36 = [v43 count];
    *(_DWORD *)buf = 134218240;
    id v53 = v35;
    __int16 v54 = 2048;
    id v55 = v36;
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "passesForWebPaymentOnNetworks passes: %ld, filtered: %ld", buf, 0x16u);
  }

  return v43;
}

- (id)passesForWebPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 webService:(id)a5 issuerCountryCodes:(id)a6 isMultiTokensRequest:(BOOL)a7
{
  return [(PDDatabaseManager *)self passesForWebPaymentOnNetworks:a3 withCapabilities:a4 webService:a5 issuerCountryCodes:a6 paymentApplicationStates:0 isMultiTokensRequest:a7];
}

- (id)paymentPassesWithAssociatedPassTypeIdentifierHashes:(id)a3 automaticSelectionOnly:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v6 = objc_msgSend(a3, "pk_arrayByApplyingBlock:", &stru_10073A558);
  uint64_t v7 = +[SQLiteCompoundPredicate predicateWithProperty:@"associated_pass_type_identifier.identifier_hash" equalToValues:v6];
  v20[0] = v7;
  BOOL v8 = [(PDDatabaseManager *)self _predicateForType:1];
  v20[1] = v8;
  uint64_t v9 = +[NSArray arrayWithObjects:v20 count:2];

  database = self->_database;
  uint64_t v11 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v9];
  double v12 = +[Pass passesInDatabase:database matchingPredicate:v11];

  if (v4)
  {
    uint64_t v13 = [(PDDatabaseManager *)self _passesFilteredByAutomaticallyPresentPassEnabled:v12];

    double v12 = (void *)v13;
  }
  id v14 = [(PDDatabaseManager *)self _registeredPasses:v12];

  id v15 = +[NSSortDescriptor sortDescriptorWithKey:@"ingestedDate" ascending:1];
  unsigned int v19 = v15;
  id v16 = +[NSArray arrayWithObjects:&v19 count:1];
  id v17 = [v14 sortedArrayUsingDescriptors:v16];

  return v17;
}

- (id)_passWithPaymentApplication:(id)a3
{
  id v4 = a3;
  char v5 = [v4 applicationIdentifier];
  uint64_t v6 = [v4 secureElementIdentifier];

  uint64_t v7 = [(PDDatabaseManager *)self _passWithApplicationIdentifier:v5 secureElementIdentifier:v6];

  return v7;
}

- (id)_passWithApplicationIdentifier:(id)a3 secureElementIdentifier:(id)a4
{
  return +[Pass anyInDatabase:self->_database withApplicationIdentifier:a3 secureElementIdentifier:a4];
}

- (id)passWithPaymentApplication:(id)a3
{
  id v4 = [(PDDatabaseManager *)self _passWithPaymentApplication:a3];
  char v5 = [v4 pass];

  uint64_t v6 = [(PDDatabaseManager *)self _registeredPass:v5];

  return v6;
}

- (id)passWithPaymentApplicationIdentifier:(id)a3
{
  database = self->_database;
  secureElement = self->_secureElement;
  id v6 = a3;
  uint64_t v7 = [(PKSecureElement *)secureElement secureElementIdentifiers];
  BOOL v8 = +[Pass anyInDatabase:database withApplicationIdentifier:v6 secureElementIdentifiers:v7];

  uint64_t v9 = [v8 pass];

  uint64_t v10 = [(PDDatabaseManager *)self _registeredPass:v9];

  return v10;
}

- (id)passWithPaymentApplicationIdentifier:(id)a3 secureElementIdentifiers:(id)a4
{
  char v5 = +[Pass anyInDatabase:self->_database withApplicationIdentifier:a3 secureElementIdentifiers:a4];
  id v6 = [v5 pass];

  uint64_t v7 = [(PDDatabaseManager *)self _registeredPass:v6];

  return v7;
}

- (id)passUniqueIdentifierWithPaymentApplication:(id)a3
{
  unint64_t v3 = [(PDDatabaseManager *)self _passWithPaymentApplication:a3];
  id v4 = [v3 uniqueID];

  return v4;
}

- (id)passUniqueIdentifierWithPaymentApplicationIdentifier:(id)a3
{
  database = self->_database;
  secureElement = self->_secureElement;
  id v5 = a3;
  id v6 = [(PKSecureElement *)secureElement secureElementIdentifiers];
  uint64_t v7 = +[Pass anyInDatabase:database withApplicationIdentifier:v5 secureElementIdentifiers:v6];

  BOOL v8 = [v7 uniqueID];

  return v8;
}

- (id)passWithPrimaryAccountIdentifier:(id)a3
{
  id v4 = +[Pass anyInDatabase:self->_database withPrimaryAccountIdentifier:a3];
  id v5 = [v4 pass];

  id v6 = [(PDDatabaseManager *)self _registeredPass:v5];

  return v6;
}

- (id)passUniqueIdentifierWithPrimaryAccountIdentifier:(id)a3
{
  unint64_t v3 = +[Pass anyInDatabase:self->_database withPrimaryAccountIdentifier:a3];
  id v4 = [v3 uniqueID];

  return v4;
}

- (id)passUniqueIdentifierWithCredentialIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    uint64_t v12 = 0;
    uint64_t v13 = &v12;
    uint64_t v14 = 0x3032000000;
    id v15 = sub_10002090C;
    id v16 = sub_100020F78;
    id v17 = 0;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100159664;
    v8[3] = &unk_10073A580;
    id v9 = v4;
    uint64_t v10 = self;
    uint64_t v11 = &v12;
    [(PDDatabaseManager *)self performTransactionWithBlock:v8];
    id v6 = (id)v13[5];

    _Block_object_dispose(&v12, 8);
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (id)passUniqueIdentifierWithAssociatedAccountIdentifier:(id)a3
{
  unint64_t v3 = +[Pass anyInDatabase:self->_database withAssociatedAccountIdentifier:a3];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 uniqueID];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (id)associatedAccountIdentifierForPassWithUniqueIdentifier:(id)a3
{
  unint64_t v3 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 associatedAccountIdentifier];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (id)previousAccountIdentifierForAccountIdentifier:(id)a3
{
  unint64_t v3 = +[Account anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 previousAccountIdentifiers];

  return v4;
}

- (id)accountIdentifierWithPreviousAccountIdentifier:(id)a3
{
  unint64_t v3 = +[Account anyInDatabase:self->_database withPreviousAccountIdentifier:a3];
  id v4 = [v3 accountIdentifier];

  return v4;
}

- (id)primaryAccountIdentifierForAssociatedAccountIdentifier:(id)a3
{
  unint64_t v3 = +[Pass anyInDatabase:self->_database withAssociatedAccountIdentifier:a3];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 primaryAccountIdentifier];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (void)syncTransactionsToCloudStoreOriginatedOnDevice:(unint64_t)a3
{
  [(PDDatabaseManager *)self passesOfType:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v4 = [obj countByEnumeratingWithState:&v24 objects:v34 count:16];
  if (v4)
  {
    id v6 = v4;
    uint64_t v7 = *(void *)v25;
    *(void *)&long long v5 = 134218498;
    long long v21 = v5;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v25 != v7) {
          objc_enumerationMutation(obj);
        }
        id v9 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend(v9, "uniqueID", v21);
        uint64_t v11 = [v9 deviceTransactionSourceIdentifiers];
        id v12 = objc_alloc_init((Class)NSMutableSet);
        if (a3 <= 1)
        {
          uint64_t v13 = +[PaymentTransaction paymentTransactionsInDatabase:self->_database originatedOnDevice:1 forTransactionSourceIdentifiers:v11];
          uint64_t v14 = [v13 allObjects];
          [v12 addObjectsFromArray:v14];
        }
        if ((a3 & 0xFFFFFFFFFFFFFFFDLL) == 0)
        {
          id v15 = +[PaymentTransaction paymentTransactionsInDatabase:self->_database originatedOnDevice:0 forTransactionSourceIdentifiers:v11];
          id v16 = [v15 allObjects];
          [v12 addObjectsFromArray:v16];
        }
        id v17 = PKLogFacilityTypeGetObject();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          id v18 = [v12 count];
          *(_DWORD *)buf = v21;
          id v29 = v18;
          __int16 v30 = 2114;
          id v31 = v10;
          __int16 v32 = 2112;
          id v33 = v12;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Syncing %ld transactions for pass uniqueID: %{public}@. Transactions: %@", buf, 0x20u);
        }

        if ([v12 count])
        {
          unsigned int v19 = [v12 allObjects];
          id v20 = [v11 anyObject];
          [(PDDatabaseManager *)self _updateCloudStoreWithTransactions:v19 transactionSourceIdentifier:v20];
        }
      }
      id v6 = [obj countByEnumeratingWithState:&v24 objects:v34 count:16];
    }
    while (v6);
  }
}

- (void)_trimCatalog:(id)a3 andBuildPassPredicate:(id *)a4
{
  long long v5 = [a3 groups];
  unint64_t v6 = (unint64_t)[v5 count] - 1;
  if (v6 > 3) {
    unint64_t v7 = 1;
  }
  else {
    unint64_t v7 = qword_1005B35C0[v6];
  }
  if ((unint64_t)[v5 count] >= 9)
  {
    do
      [v5 removeLastObject];
    while ((unint64_t)[v5 count] > 8);
  }
  BOOL v8 = +[NSMutableArray array];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v9 = v5;
  id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v22;
    do
    {
      uint64_t v13 = 0;
      do
      {
        if (*(void *)v22 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v21 + 1) + 8 * (void)v13);
        while (1)
        {
          id v15 = objc_msgSend(v14, "uniqueIDs", (void)v21);
          id v16 = [v15 count];

          if ((unint64_t)v16 <= v7) {
            break;
          }
          id v17 = [v14 uniqueIDs];
          [v17 removeLastObject];
        }
        id v18 = [v14 uniqueIDs];
        [v8 addObjectsFromArray:v18];

        uint64_t v13 = (char *)v13 + 1;
      }
      while (v13 != v11);
      id v11 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v11);
  }

  unsigned int v19 = +[SQLiteCompoundPredicate predicateWithProperty:@"unique_id" equalToValues:v8];
  id v20 = *a4;
  *a4 = v19;
}

- (BOOL)insertPass:(id)a3 withDaemonData:(id)a4 source:(int64_t)a5
{
  id v7 = a3;
  id v8 = a4;
  if (!v7)
  {
    BOOL v12 = 0;
    goto LABEL_35;
  }
  id v40 = v8;
  id v9 = [v7 passType];
  if (v9 == (id)1) {
    id v10 = v7;
  }
  else {
    id v10 = 0;
  }
  id v11 = v10;
  [v7 uniqueID];
  v36 = id v37 = v11;
  if ((PKStoreDemoModeEnabled() & 1) == 0)
  {
    int v13 = PKUIOnlyDemoModeEnabled();
    if (v9 != (id)1)
    {
      int v35 = v13;
      goto LABEL_15;
    }
    if (!v13)
    {
      int v35 = 0;
      goto LABEL_14;
    }
LABEL_11:
    [(PDDatabaseManager *)self _applyDemoPaymentApplicationToPass:v7];
    int v35 = 1;
LABEL_14:
    uint64_t v14 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
    [v7 updateDevicePaymentApplicationsWithSecureElementIdentifiers:v14];

    goto LABEL_15;
  }
  if (v9 == (id)1) {
    goto LABEL_11;
  }
  int v35 = 1;
LABEL_15:
  uint64_t v83 = 0;
  v84 = &v83;
  uint64_t v85 = 0x2020000000;
  char v86 = 0;
  uint64_t v77 = 0;
  v78 = &v77;
  uint64_t v79 = 0x3032000000;
  v80 = sub_10002090C;
  v81 = sub_100020F78;
  id v82 = 0;
  uint64_t v71 = 0;
  id v72 = &v71;
  uint64_t v73 = 0x3032000000;
  long long v74 = sub_10002090C;
  long long v75 = sub_100020F78;
  id v76 = 0;
  uint64_t v65 = 0;
  uint64_t v66 = &v65;
  uint64_t v67 = 0x3032000000;
  v68 = sub_10002090C;
  v69 = sub_100020F78;
  id v70 = 0;
  uint64_t v61 = 0;
  long long v62 = &v61;
  uint64_t v63 = 0x2020000000;
  char v64 = 0;
  uint64_t v55 = 0;
  id v56 = &v55;
  uint64_t v57 = 0x3032000000;
  __int16 v58 = sub_10002090C;
  id v59 = sub_100020F78;
  id v60 = 0;
  database = self->_database;
  v43[0] = _NSConcreteStackBlock;
  v43[1] = 3221225472;
  v43[2] = sub_10015A448;
  v43[3] = &unk_10073A5A8;
  v43[4] = self;
  id v16 = self;
  id v17 = v36;
  id v44 = v17;
  id v18 = v7;
  id v45 = v18;
  long long v48 = &v61;
  id v38 = v37;
  id v46 = v38;
  id v47 = v40;
  long long v49 = &v55;
  long long v50 = &v71;
  long long v51 = &v65;
  long long v52 = &v77;
  id v53 = &v83;
  int64_t v54 = a5;
  sub_10000817C((uint64_t)database, v43);
  unsigned int v19 = v17;
  int v20 = *((unsigned __int8 *)v84 + 24);
  long long v21 = PKLogFacilityTypeGetObject();
  BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);
  if (v20)
  {
    if (v22)
    {
      *(_DWORD *)buf = 138412290;
      id v88 = v17;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "PDDatabaseManager: inserted pass %@.", buf, 0xCu);
    }

    if (v72[5])
    {
      id WeakRetained = objc_loadWeakRetained((id *)&v16->_notificationServicesDelegate);
      [WeakRetained handleInsertionOfPass:v18 withNotificationService:v72[5]];
    }
    if (v66[5])
    {
      id v24 = objc_loadWeakRetained((id *)&v16->_notificationServicesDelegate);
      [v24 handleInsertionOfPass:v18 withNotificationService:v66[5]];
    }
    if (v78[5])
    {
      id v25 = objc_loadWeakRetained((id *)&v16->_webServicesDelegate);
      long long v26 = [v18 serialNumber];
      long long v27 = [v18 authenticationToken];
      [v25 handleInsertion:v26 authToken:v27 webService:v78[5] pushEnabled:*((unsigned __int8 *)v62 + 24) source:a5];
    }
    if (v9 == (id)1)
    {
      if (v35)
      {
        [(PDDatabaseManager *)v16 _applyDemoPaymentTransactionsToPass:v18];
        [(PDDatabaseManager *)v16 _applyDemoFelicaAppletStateToPass:v18];
      }
      id v28 = objc_loadWeakRetained((id *)&v16->_paymentServicesDelegate);
      [v28 handleInsertionForPaymentPass:v18];

      id v29 = objc_loadWeakRetained((id *)&v16->_delegate);
      id v30 = objc_alloc_init((Class)NSSet);
      [v29 paymentPass:v18 didUpdatePaymentApplications:v30 toPaymentApplications:v56[5]];

      id v31 = [v18 primaryAccountIdentifier];
      __int16 v32 = v31;
      if (v31)
      {
        bankConnectPassUpdateProcessor = v16->_bankConnectPassUpdateProcessor;
        v41[0] = _NSConcreteStackBlock;
        v41[1] = 3221225472;
        v41[2] = sub_10015A780;
        v41[3] = &unk_10072E1E8;
        id v42 = v31;
        [(FKBankConnectPassUpdateProcessor *)bankConnectPassUpdateProcessor didProvisionPassWithPrimaryAccountIdentifier:v42 completion:v41];
      }
    }
    BOOL v12 = *((unsigned char *)v84 + 24) != 0;
  }
  else
  {
    if (v22)
    {
      *(_DWORD *)buf = 138412290;
      id v88 = v17;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "PDDatabaseManager: failed to insert pass %@.", buf, 0xCu);
    }

    BOOL v12 = 0;
  }

  _Block_object_dispose(&v55, 8);
  _Block_object_dispose(&v61, 8);
  _Block_object_dispose(&v65, 8);

  _Block_object_dispose(&v71, 8);
  _Block_object_dispose(&v77, 8);

  _Block_object_dispose(&v83, 8);
  id v8 = v40;
LABEL_35:

  return v12;
}

- (BOOL)updatePass:(id)a3 withDaemonData:(id)a4 oldPass:(id *)a5 fromSource:(int64_t)a6
{
  id v10 = a3;
  id v11 = a4;
  if (v10)
  {
    location = a5;
    id v12 = [v10 passType];
    if (v12 == (id)1) {
      int v13 = v10;
    }
    else {
      int v13 = 0;
    }
    id v14 = v13;
    id v15 = [v10 uniqueID];
    if (PKStoreDemoModeEnabled()) {
      int v33 = 1;
    }
    else {
      int v33 = PKUIOnlyDemoModeEnabled();
    }
    id v17 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
    int v35 = v14;
    int64_t v37 = a6;
    if (v12 == (id)1)
    {
      if (v33) {
        [(PDDatabaseManager *)self _applyDemoPaymentApplicationToPass:v10];
      }
      [v10 updateDevicePaymentApplicationsWithSecureElementIdentifiers:v17];
    }
    uint64_t v113 = 0;
    v114 = &v113;
    uint64_t v115 = 0x2020000000;
    char v116 = 0;
    uint64_t v107 = 0;
    v108 = &v107;
    uint64_t v109 = 0x3032000000;
    v110 = sub_10002090C;
    v111 = sub_100020F78;
    id v112 = 0;
    uint64_t v103 = 0;
    v104 = &v103;
    uint64_t v105 = 0x2020000000;
    char v106 = 0;
    uint64_t v97 = 0;
    v98 = &v97;
    uint64_t v99 = 0x3032000000;
    v100 = sub_10002090C;
    v101 = sub_100020F78;
    id v102 = 0;
    id v90 = 0;
    uint64_t v91 = 0;
    v92 = &v91;
    uint64_t v93 = 0x3032000000;
    v94 = sub_10002090C;
    v95 = sub_100020F78;
    id v96 = 0;
    uint64_t v85 = 0;
    char v86 = &v85;
    uint64_t v87 = 0x3032000000;
    id v88 = sub_10002090C;
    v89 = sub_100020F78;
    uint64_t v79 = 0;
    v80 = &v79;
    uint64_t v81 = 0x3032000000;
    id v82 = sub_10002090C;
    uint64_t v83 = sub_100020F78;
    id v84 = 0;
    uint64_t v73 = 0;
    long long v74 = &v73;
    uint64_t v75 = 0x3032000000;
    id v76 = sub_10002090C;
    uint64_t v77 = sub_100020F78;
    id v78 = 0;
    uint64_t v69 = 0;
    id v70 = &v69;
    uint64_t v71 = 0x2020000000;
    char v72 = 0;
    uint64_t v63 = 0;
    char v64 = &v63;
    uint64_t v65 = 0x3032000000;
    uint64_t v66 = sub_10002090C;
    uint64_t v67 = sub_100020F78;
    id v68 = 0;
    uint64_t v57 = 0;
    __int16 v58 = &v57;
    uint64_t v59 = 0x3032000000;
    id v60 = sub_10002090C;
    uint64_t v61 = sub_100020F78;
    id v62 = 0;
    database = self->_database;
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10015B024;
    v39[3] = &unk_10073A5D0;
    v39[4] = self;
    id v19 = v15;
    id v40 = v19;
    id v45 = &v107;
    id v34 = v17;
    id v41 = v34;
    id v38 = v10;
    id v42 = v38;
    id v46 = &v69;
    id v36 = v35;
    id v43 = v36;
    id v47 = &v63;
    id v44 = v11;
    long long v48 = &v57;
    long long v49 = &v91;
    long long v50 = &v85;
    long long v51 = &v73;
    long long v52 = &v79;
    id v53 = &v97;
    int64_t v54 = &v103;
    id v20 = v12;
    uint64_t v55 = &v113;
    int64_t v56 = a6;
    sub_10000817C((uint64_t)database, v39);
    int v21 = *((unsigned __int8 *)v114 + 24);
    BOOL v22 = PKLogFacilityTypeGetObject();
    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);
    if (v21)
    {
      if (v23)
      {
        *(_DWORD *)buf = 138412290;
        id v118 = v19;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "PDDatabaseManager: updated pass %@.", buf, 0xCu);
      }

      if (v92[5] || v86[5])
      {
        id WeakRetained = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
        [WeakRetained handleUpdateOfPass:v108[5] toPass:v38 oldNotificationService:v92[5] newNotificationService:v86[5]];
      }
      if (v74[5] || v80[5])
      {
        id v25 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
        [v25 handleUpdateOfPass:v108[5] toPass:v38 oldNotificationService:v74[5] newNotificationService:v80[5]];
      }
      if (v98[5])
      {
        BOOL v26 = *((unsigned char *)v104 + 24) == 0;
        id v27 = objc_loadWeakRetained((id *)&self->_webServicesDelegate);
        id v28 = [v38 serialNumber];
        if (v26)
        {
          [v27 handleModification:v28 webService:v98[5] pushEnabled:*((unsigned __int8 *)v70 + 24) source:v37];
        }
        else
        {
          id v29 = [v38 authenticationToken];
          [v27 handleInsertion:v28 authToken:v29 webService:v98[5] pushEnabled:*((unsigned __int8 *)v70 + 24) source:v37];
        }
      }
      if (v20 == (id)1)
      {
        if (v33)
        {
          [(PDDatabaseManager *)self _applyDemoPaymentTransactionsToPass:v38];
          [(PDDatabaseManager *)self _applyDemoFelicaAppletStateToPass:v38];
        }
        id v30 = objc_loadWeakRetained((id *)&self->_delegate);
        [v30 paymentPass:v38 didUpdatePaymentApplications:v64[5] toPaymentApplications:v58[5]];
      }
      if (location) {
        objc_storeStrong(location, (id)v108[5]);
      }
      BOOL v16 = *((unsigned char *)v114 + 24) != 0;
    }
    else
    {
      if (v23)
      {
        *(_DWORD *)buf = 138412290;
        id v118 = v19;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "PDDatabaseManager: failed to update pass %@.", buf, 0xCu);
      }

      BOOL v16 = 0;
    }

    _Block_object_dispose(&v57, 8);
    _Block_object_dispose(&v63, 8);

    _Block_object_dispose(&v69, 8);
    _Block_object_dispose(&v73, 8);

    _Block_object_dispose(&v79, 8);
    _Block_object_dispose(&v85, 8);

    _Block_object_dispose(&v91, 8);
    _Block_object_dispose(&v97, 8);

    _Block_object_dispose(&v103, 8);
    _Block_object_dispose(&v107, 8);

    _Block_object_dispose(&v113, 8);
  }
  else
  {
    BOOL v16 = 0;
  }

  return v16;
}

- (void)prepareToDeletePassWithUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v41 = 0;
  id v42 = &v41;
  uint64_t v43 = 0x3032000000;
  id v44 = sub_10002090C;
  id v45 = sub_100020F78;
  id v46 = 0;
  uint64_t v35 = 0;
  id v36 = &v35;
  uint64_t v37 = 0x3032000000;
  id v38 = sub_10002090C;
  id v39 = sub_100020F78;
  id v40 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x3032000000;
  __int16 v32 = sub_10002090C;
  int v33 = sub_100020F78;
  id v34 = 0;
  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = sub_10002090C;
  id v27 = sub_100020F78;
  id v28 = 0;
  uint64_t v19 = 0;
  id v20 = &v19;
  uint64_t v21 = 0x2020000000;
  char v22 = 0;
  database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10015B854;
  v12[3] = &unk_10073A5F8;
  void v12[4] = self;
  id v6 = v4;
  id v13 = v6;
  id v14 = &v41;
  id v15 = &v19;
  BOOL v16 = &v35;
  id v17 = &v29;
  id v18 = &v23;
  sub_10000817C((uint64_t)database, v12);
  if (v30[5])
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
    [WeakRetained handleDeletionOfPass:v42[5] withNotificationService:v30[5]];
  }
  if (v24[5])
  {
    id v8 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
    [v8 handleDeletionOfPass:v42[5] withNotificationService:v24[5]];
  }
  if (v36[5])
  {
    id v9 = objc_loadWeakRetained((id *)&self->_webServicesDelegate);
    id v10 = [(id)v42[5] serialNumber];
    id v11 = [(id)v42[5] authenticationToken];
    [v9 handleDeletion:v10 authToken:v11 webService:v36[5] pushEnabled:*((unsigned __int8 *)v20 + 24)];
  }
  _Block_object_dispose(&v19, 8);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&v35, 8);

  _Block_object_dispose(&v41, 8);
}

- (void)deletePassWithUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v28 = 0;
  uint64_t v29 = &v28;
  uint64_t v30 = 0x3032000000;
  uint64_t v31 = sub_10002090C;
  __int16 v32 = sub_100020F78;
  id v33 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = sub_10002090C;
  BOOL v26 = sub_100020F78;
  id v27 = 0;
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x3032000000;
  uint64_t v19 = sub_10002090C;
  id v20 = sub_100020F78;
  id v21 = 0;
  database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10015BC30;
  v11[3] = &unk_10073A620;
  void v11[4] = self;
  id v6 = v4;
  id v12 = v6;
  id v13 = &v28;
  id v14 = &v22;
  id v15 = &v16;
  sub_10000817C((uint64_t)database, v11);
  uint64_t v7 = v17[5];
  if (v7)
  {
    bankConnectPassUpdateProcessor = self->_bankConnectPassUpdateProcessor;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_10015BDFC;
    v10[3] = &unk_10073A648;
    v10[4] = &v16;
    [(FKBankConnectPassUpdateProcessor *)bankConnectPassUpdateProcessor didDeletePassWithPrimaryAccountIdentifier:v7 completion:v10];
  }
  if (v29[5])
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_paymentServicesDelegate);
    [WeakRetained handleDeletionForPassTypeIdentifier:v29[5] serialNumber:v23[5]];
  }
  _Block_object_dispose(&v16, 8);

  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&v28, 8);
}

- (void)deleteDatabase
{
  database = self->_database;
  if (database)
  {
    sub_10035CCC4((sqlite3 *)database);
    id v4 = self->_database;
    self->_database = 0;
  }
  long long v5 = +[NSFileManager defaultManager];
  [v5 removeItemAtURL:self->_databaseURL error:0];

  id v6 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Deleted database", v7, 2u);
  }
}

- (void)deleteAndRecreateDatabase
{
  [(PDDatabaseManager *)self deleteDatabase];
  [(PDDatabaseManager *)self _createDatabaseAtURL:self->_databaseURL report:0];
  unint64_t v3 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Recreated database", v4, 2u);
  }
}

- (void)updateModifiedSource:(int64_t)a3 forUniqueID:(id)a4
{
  id v5 = +[Pass anyInDatabase:self->_database withUniqueID:a4];
  [v5 updateWithLastModifiedSource:a3];
}

- (void)updatePassAnnotationsForPassWithUniqueIdentifier:(id)a3 withSortingState:(int64_t)a4
{
  id v5 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  if (v5)
  {
    id v6 = v5;
    [v5 updateWithSortingState:a4 forSortingReason:0];
    id v5 = v6;
  }
}

- (BOOL)hasPassesInExpiredSection
{
  database = self->_database;
  unint64_t v3 = +[Pass predicateForExpired];
  BOOL v4 = +[SQLiteEntity existsInDatabase:database predicate:v3];

  return v4;
}

- (id)passLiveRenderForPassUniqueIdentifier:(id)a3
{
  unint64_t v3 = +[PassLiveRender passLiveRenderInDatabase:self->_database forPassUniqueID:a3];
  BOOL v4 = [v3 passLiveRender];

  return v4;
}

- (id)insertOrUpdateLiveRenderEnabled:(BOOL)a3 forPassWithUniqueIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v15 = 0;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x3032000000;
  uint64_t v18 = sub_10002090C;
  uint64_t v19 = sub_100020F78;
  id v20 = 0;
  database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10015C384;
  v11[3] = &unk_10073A698;
  void v11[4] = self;
  id v8 = v6;
  BOOL v14 = a3;
  id v12 = v8;
  id v13 = &v15;
  sub_10000817C((uint64_t)database, v11);
  id v9 = (id)v16[5];

  _Block_object_dispose(&v15, 8);
  return v9;
}

- (void)deletePaymentTransactionWithIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:v4];
  id v6 = [v5 transactionSourceIdentifier];
  if (v5)
  {
    uint64_t v7 = [v5 paymentTransaction];
    delegateQueue = self->_delegateQueue;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10015C794;
    block[3] = &unk_10072E238;
    block[4] = self;
    id v9 = v6;
    id v25 = v9;
    id v10 = v7;
    BOOL v26 = v10;
    dispatch_async(delegateQueue, block);
    id v11 = [v5 serviceIdentifier];
    if ([v5 deleteFromDatabase])
    {
      id v12 = self->_delegateQueue;
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_10015C7E8;
      v21[3] = &unk_10072E238;
      v21[4] = self;
      id v13 = v9;
      id v22 = v13;
      id v23 = v4;
      dispatch_async(v12, v21);
      if (v11)
      {
        id WeakRetained = objc_loadWeakRetained((id *)&self->_cloudStoreCoordinator);
        uint64_t v15 = [WeakRetained applePayContainer];
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        void v17[2] = sub_10015C83C;
        v17[3] = &unk_10072FF20;
        void v17[4] = self;
        uint64_t v18 = v10;
        id v19 = v11;
        id v20 = v13;
        [v15 canSyncTransactionFromCloudKitForTransactionSourceIdentifier:v20 completion:v17];
      }
    }
    else
    {
      uint64_t v16 = PKLogFacilityTypeGetObject();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        id v28 = v4;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Error: Could not delete transaction with identifier: %{public}@", buf, 0xCu);
      }
    }
  }
  else
  {
    id v10 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v28 = v4;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Error: No transaction found with identifier: %{public}@", buf, 0xCu);
    }
  }
}

- (void)deletePaymentTransactionsWithIdentifiers:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)NSMutableArray);
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v49 objects:v56 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v50;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v50 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:*(void *)(*((void *)&v49 + 1) + 8 * i)];
        if (v11) {
          [v5 addObject:v11];
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v49 objects:v56 count:16];
    }
    while (v8);
  }
  uint64_t v35 = v6;

  delegateQueue = self->_delegateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10015CDEC;
  block[3] = &unk_10072E198;
  id v13 = v5;
  id v47 = v13;
  long long v48 = self;
  id v34 = self;
  dispatch_async(delegateQueue, block);
  id v37 = objc_alloc_init((Class)NSMutableDictionary);
  id v38 = objc_alloc_init((Class)NSMutableDictionary);
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id obj = v13;
  id v14 = [obj countByEnumeratingWithState:&v42 objects:v55 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v43;
    do
    {
      for (j = 0; j != v15; j = (char *)j + 1)
      {
        if (*(void *)v43 != v16) {
          objc_enumerationMutation(obj);
        }
        uint64_t v18 = *(void **)(*((void *)&v42 + 1) + 8 * (void)j);
        id v19 = objc_msgSend(v18, "paymentTransaction", v34, v35);
        id v20 = [v19 identifier];

        id v21 = [v18 serviceIdentifier];
        id v22 = [v18 paymentTransaction];
        id v23 = [v18 transactionSourceIdentifier];
        if ([v18 deleteFromDatabase])
        {
          uint64_t v24 = [v38 objectForKey:v23];
          id v25 = v24;
          if (v24) {
            BOOL v26 = v24;
          }
          else {
            BOOL v26 = objc_alloc_init((Class)NSMutableSet);
          }
          id v27 = v26;

          [v27 addObject:v20];
          [v38 setValue:v27 forKey:v23];
          if (v21)
          {
            id v28 = [v37 objectForKey:v23];
            uint64_t v29 = v28;
            if (v28) {
              id v30 = v28;
            }
            else {
              id v30 = objc_alloc_init((Class)NSMutableArray);
            }
            uint64_t v31 = v30;

            [v31 addObject:v22];
            [v37 setValue:v31 forKey:v23];
          }
        }
        else
        {
          id v27 = PKLogFacilityTypeGetObject();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543362;
            int64_t v54 = v20;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Error: Could not delete transaction with identifier: %{public}@", buf, 0xCu);
          }
        }
      }
      id v15 = [obj countByEnumeratingWithState:&v42 objects:v55 count:16];
    }
    while (v15);
  }

  __int16 v32 = v34->_delegateQueue;
  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472;
  v40[2] = sub_10015CFB0;
  v40[3] = &unk_10072E198;
  v40[4] = v34;
  id v41 = v38;
  id v33 = v38;
  dispatch_async(v32, v40);
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472;
  v39[2] = sub_10015D004;
  v39[3] = &unk_10073A6C0;
  v39[4] = v34;
  [v37 enumerateKeysAndObjectsUsingBlock:v39];
}

- (void)deleteAllTransactionsFromTransactionSourceIdentifiers:(id)a3
{
  id v4 = a3;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v11;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = +[TransactionSource anyInDatabase:self->_database withIdentifier:*(void *)(*((void *)&v10 + 1) + 8 * (void)v8)];
        if (v9) {
          +[PaymentTransaction deleteEntitiesForTransactionSource:v9 inDatabase:self->_database];
        }

        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v6);
  }
}

- (void)deleteAllMessagesFromPaymentPassWithUniqueIdentifier:(id)a3
{
  id v4 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
    id v4 = +[PaymentMessage deleteEntitiesForPass:v4 inDatabase:self->_database];
    id v5 = v6;
  }
  _objc_release_x1(v4, v5);
}

- (void)archiveMessageWithIdentifier:(id)a3
{
  unint64_t v3 = +[PaymentMessage messagesInDatabase:self->_database withIdentifier:a3];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v7) archive];
        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

- (unint64_t)settingsForPass:(id)a3
{
  return (unint64_t)sub_10001E02C(self->_objectSettingsManager, a3);
}

- (BOOL)settingEnabled:(unint64_t)a3 forPass:(id)a4
{
  return sub_10045BB34((uint64_t)self->_objectSettingsManager, a3, a4);
}

- (BOOL)settingEnabled:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v7 = +[Pass anyInDatabase:self->_database withUniqueID:v6];
  if (v7)
  {
    BOOL v8 = sub_10045BDA0(self->_objectSettingsManager, a3, v7);
  }
  else
  {
    long long v9 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412290;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Error: Failed to find a pass in database with unique identifier '%@'.", (uint8_t *)&v11, 0xCu);
    }

    BOOL v8 = 0;
  }

  return v8;
}

- (void)updateSettings:(unint64_t)a3 forPass:(id)a4
{
  id v6 = [a4 uniqueID];
  [(PDDatabaseManager *)self updateSettings:a3 forPassWithUniqueIdentifier:v6];
}

- (void)migrateObjectSettings
{
  unint64_t v3 = PKObjectSettingsManagerSafeHavenArchivePath();
  id v4 = +[NSURL fileURLWithPath:v3];

  [(PDDatabaseManager *)self _migrateObjectSettingsWithSafeHavenArchiveURL:v4];
}

- (void)_setObjectSettingsManager:(id)a3
{
  id v5 = (PDObjectSettingsManager *)a3;
  objectSettingsManager = self->_objectSettingsManager;
  p_objectSettingsManager = &self->_objectSettingsManager;
  if (objectSettingsManager != v5)
  {
    BOOL v8 = v5;
    objc_storeStrong((id *)p_objectSettingsManager, a3);
    id v5 = v8;
  }
}

- (void)_migrateObjectSettingsWithSafeHavenArchiveURL:(id)a3
{
  id v4 = a3;
  id v5 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v22 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Performing migration for object settings with safehaven url %@", buf, 0xCu);
  }

  uint64_t v16 = v4;
  sub_10045BC58((uint64_t)PDObjectSettingsManager, v4);
  id v6 = (os_unfair_lock_s *)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = sub_10045B944(v6);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v22 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Migrating safe haven object settings for passes %@", buf, 0xCu);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v8 = v7;
  id v9 = [v8 countByEnumeratingWithState:&v17 objects:v25 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v18;
    do
    {
      for (i = 0; i != v10; i = (char *)i + 1)
      {
        if (*(void *)v18 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        id v14 = [(PDDatabaseManager *)self passWithUniqueIdentifier:v13];
        if (v14)
        {
          id v15 = sub_10001E02C(v6, v14);
          if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            id v22 = v13;
            __int16 v23 = 2048;
            id v24 = v15;
            _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Updating object settings for safe haven pass %@, to value %ld", buf, 0x16u);
          }

          [(PDDatabaseManager *)self updateSettings:v15 forPassWithUniqueIdentifier:v13];
        }
        else
        {
          if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            id v22 = v13;
            _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Cannot migrate object settings for pass %@ because it doesnt exist in the database.", buf, 0xCu);
          }
        }
      }
      id v10 = [v8 countByEnumeratingWithState:&v17 objects:v25 count:16];
    }
    while (v10);
  }

  sub_10045B9A0();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Completed migration for object settings", buf, 2u);
  }
}

- (void)updateSettings:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v83 = 0;
  id v84 = &v83;
  uint64_t v85 = 0x3032000000;
  char v86 = sub_10002090C;
  uint64_t v87 = sub_100020F78;
  id v88 = 0;
  uint64_t v79 = 0;
  v80 = &v79;
  uint64_t v81 = 0x2020000000;
  uint64_t v82 = 0;
  uint64_t v75 = 0;
  id v76 = &v75;
  uint64_t v77 = 0x2020000000;
  uint64_t v78 = 0;
  uint64_t v69 = 0;
  id v70 = &v69;
  uint64_t v71 = 0x3032000000;
  char v72 = sub_10002090C;
  uint64_t v73 = sub_100020F78;
  id v74 = 0;
  uint64_t v63 = 0;
  char v64 = &v63;
  uint64_t v65 = 0x3032000000;
  uint64_t v66 = sub_10002090C;
  uint64_t v67 = sub_100020F78;
  id v68 = 0;
  uint64_t v57 = 0;
  __int16 v58 = &v57;
  uint64_t v59 = 0x3032000000;
  id v60 = sub_10002090C;
  uint64_t v61 = sub_100020F78;
  id v62 = 0;
  database = self->_database;
  v48[0] = _NSConcreteStackBlock;
  v48[1] = 3221225472;
  v48[2] = sub_10015E12C;
  v48[3] = &unk_10073A6E8;
  v48[4] = self;
  id v8 = v6;
  id v49 = v8;
  long long v50 = &v83;
  long long v51 = &v69;
  long long v52 = &v63;
  id v53 = &v57;
  int64_t v54 = &v79;
  uint64_t v55 = &v75;
  unint64_t v56 = a3;
  sub_10000817C((uint64_t)database, v48);
  id v9 = (void *)v84[5];
  if (!v9) {
    goto LABEL_34;
  }
  if ([v9 passType] == (id)1) {
    id v10 = (void *)v84[5];
  }
  else {
    id v10 = 0;
  }
  id v11 = v10;
  unsigned int v12 = *((_DWORD *)v80 + 6);
  unsigned int v13 = *((_DWORD *)v76 + 6);
  id v41 = v11;
  unsigned __int8 v39 = [v11 shouldIgnoreTransactionUpdatesSwitch];
  unsigned int v14 = __rbit32(v12);
  unsigned int v15 = __rbit32(v13);
  int v16 = (v15 >> 30) & 1;
  if (((v14 >> 30) & 1) != v16 && v70[5])
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_webServicesDelegate);
    long long v18 = [(id)v84[5] serialNumber];
    long long v19 = [(id)v84[5] authenticationToken];
    if (v16) {
      [WeakRetained handlePushEnabled:v18 authToken:v19 webService:v70[5]];
    }
    else {
      [WeakRetained handlePushDisabled:v18 authToken:v19 webService:v70[5]];
    }
  }
  int v20 = (v12 >> 4) & 4;
  int v21 = v12 & 8;
  int v40 = (v12 >> 4) & 0x40;
  int v22 = (v12 >> 1) & 0x10 | (32 * ((v12 >> 4) & 1)) | v21 | (v14 >> 30) | v20 | v40;
  int v23 = (v13 >> 4) & 4;
  int v24 = v13 & 8;
  int v25 = (v13 >> 4) & 0x40;
  int v26 = (v13 >> 1) & 0x10 | (32 * ((v13 >> 4) & 1)) | v24 | (v15 >> 30) | v23 | v25;
  char v27 = v26 ^ v22;
  if (((v26 ^ v22) & 2) != 0)
  {
    id v28 = objc_loadWeakRetained((id *)&self->_delegate);
    [v28 noteLockScreenSettingsChangedForPassWithUniqueIdentifier:v8];
  }
  if (v21 != v24 && v64[5])
  {
    if (v24)
    {
      id v29 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
      [v29 handlePushEnabledForPass:v84[5] withNotificationService:v64[5]];
    }
    else
    {
      if (v39)
      {
LABEL_20:
        delegateQueue = self->_delegateQueue;
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10015E32C;
        block[3] = &unk_100730438;
        void block[4] = self;
        id v46 = v8;
        char v47 = v26;
        dispatch_async(delegateQueue, block);

        goto LABEL_21;
      }
      id v29 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
      [v29 handlePushDisabledForPass:v84[5] withNotificationService:v64[5]];
    }

    goto LABEL_20;
  }
LABEL_21:
  if (v20 != v23 && v58[5])
  {
    id v31 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
    __int16 v32 = v31;
    uint64_t v33 = v84[5];
    uint64_t v34 = v58[5];
    if (v23) {
      [v31 handlePushEnabledForPass:v33 withNotificationService:v34];
    }
    else {
      [v31 handlePushDisabledForPass:v33 withNotificationService:v34];
    }

    uint64_t v35 = self->_delegateQueue;
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472;
    v42[2] = sub_10015E388;
    v42[3] = &unk_100730438;
    v42[4] = self;
    id v43 = v8;
    char v44 = v26;
    dispatch_async(v35, v42);
  }
  if ((v27 & 0x30) != 0)
  {
    id v36 = objc_loadWeakRetained((id *)&self->_delegate);
    [v36 noteAutomaticallyPresentSettingsChangedForPassWithUniqueIdentifier:v8];
  }
  if (v40 != v25)
  {
    id v37 = objc_loadWeakRetained((id *)&self->_delegate);
    [v37 paymentPassWithUniqueIdentifier:v8 didEnableDailyCashNotifications:v25 != 0];
  }
  if (v80[3] != v76[3])
  {
    id v38 = objc_loadWeakRetained((id *)&self->_delegate);
    [v38 noteSettingsChangedForPassWithUniqueIdentifier:v8 newSettings:v76[3]];
  }
LABEL_34:

  _Block_object_dispose(&v57, 8);
  _Block_object_dispose(&v63, 8);

  _Block_object_dispose(&v69, 8);
  _Block_object_dispose(&v75, 8);
  _Block_object_dispose(&v79, 8);
  _Block_object_dispose(&v83, 8);
}

- (void)updateSettings:(unint64_t)a3 forObjectWithUniqueIdentifier:(id)a4
{
  id v7 = a4;
  id v6 = +[Pass anyInDatabase:withUniqueID:](Pass, "anyInDatabase:withUniqueID:", self->_database);
  if (v6) {
    [(PDDatabaseManager *)self updateSettings:a3 forPassWithUniqueIdentifier:v7];
  }
}

- (void)noteObjectSharedWithUniqueID:(id)a3
{
  unint64_t v3 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  if (v3)
  {
    id v7 = v3;
    id v4 = [v3 valueForProperty:@"share_count"];
    id v5 = (char *)[v4 integerValue];

    id v6 = +[NSNumber numberWithInteger:v5 + 1];
    [v7 setValue:v6 forProperty:@"share_count"];

    unint64_t v3 = v7;
  }
}

- (BOOL)getRegistrationStatus:(unint64_t *)a3 date:(id *)a4 forSerialNumber:(id)a5 webService:(id)a6
{
  id v10 = a5;
  id v11 = [(PDDatabaseManager *)self _databaseWebService:a6];
  unsigned int v12 = +[Pass anyInDatabase:self->_database withWebService:v11 serialNumber:v10];

  if (v12) {
    [v12 getPushRegistrationStatus:a3 date:a4];
  }

  return v12 != 0;
}

- (void)updateRegistrationStatus:(unint64_t)a3 date:(id)a4 forSerialNumber:(id)a5 webService:(id)a6
{
  id v13 = a4;
  id v10 = a5;
  id v11 = [(PDDatabaseManager *)self _databaseWebService:a6];
  if (v11)
  {
    unsigned int v12 = +[Pass anyInDatabase:self->_database withWebService:v11 serialNumber:v10];
    [v12 updateWithPushRegistrationStatus:a3 date:v13];
  }
}

- (void)updateLastModifiedTag:(id)a3 forSerialNumber:(id)a4 webService:(id)a5
{
  id v11 = a3;
  id v8 = a4;
  id v9 = [(PDDatabaseManager *)self _databaseWebService:a5];
  if (v9)
  {
    id v10 = +[Pass anyInDatabase:self->_database withWebService:v9 serialNumber:v8];
    [v10 updateWithLastModifiedTag:v11];
  }
}

- (void)updateWebService:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self _databaseWebService:v4];
  [v5 updateWithWebService:v4];
}

- (id)lastDeletionDateForWebService:(id)a3
{
  unint64_t v3 = [(PDDatabaseManager *)self _databaseWebService:a3];
  id v4 = [v3 lastDeletionDate];

  return v4;
}

- (id)lastUpdatedTagForWebService:(id)a3
{
  unint64_t v3 = [(PDDatabaseManager *)self _databaseWebService:a3];
  id v4 = [v3 lastUpdatedTag];

  return v4;
}

- (id)tagLastUpdateDateForWebService:(id)a3
{
  unint64_t v3 = [(PDDatabaseManager *)self _databaseWebService:a3];
  id v4 = [v3 tagLastUpdateDate];

  return v4;
}

- (void)updateLastDeletionDate:(id)a3 forWebService:(id)a4
{
  id v6 = a3;
  id v7 = [(PDDatabaseManager *)self _databaseWebService:a4];
  [v7 updateWithLastDeletionDate:v6];
}

- (void)updateLastUpdatedTag:(id)a3 forWebService:(id)a4
{
  id v6 = a3;
  id v7 = [(PDDatabaseManager *)self _databaseWebService:a4];
  [v7 updateWithLastUpdatedTag:v6];
}

- (id)webServices
{
  return +[WebService webServicesInDatabase:self->_database matchingPredicate:0];
}

- (id)webServicesForPassTypeID:(id)a3
{
  id v4 = +[PassType anyInDatabase:self->_database withPassTypeID:a3];
  id v5 = +[WebService webServicesInDatabase:self->_database withPassType:v4];

  return v5;
}

- (id)pushEnabledPassTypeIDs
{
  unint64_t v3 = +[SQLiteEntity queryWithDatabase:self->_database predicate:0];
  id v4 = +[NSMutableSet set];
  CFStringRef v15 = @"identifier";
  id v5 = +[NSArray arrayWithObjects:&v15 count:1];
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  id v11 = sub_10015EB14;
  unsigned int v12 = &unk_10072ED00;
  id v13 = self;
  id v14 = v4;
  id v6 = v4;
  [v3 enumeratePersistentIDsAndProperties:v5 usingBlock:&v9];

  id v7 = objc_msgSend(v6, "copy", v9, v10, v11, v12, v13);
  return v7;
}

- (BOOL)hasPushEnabledPassesForWebService:(id)a3
{
  id v4 = a3;
  database = self->_database;
  id v6 = [(PDDatabaseManager *)self _predicateMatchingPassesForWebService:v4];
  id v7 = +[SQLiteEntity queryWithDatabase:database predicate:v6];

  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x2020000000;
  char v13 = 0;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10015EEA8;
  v9[3] = &unk_10073A738;
  v9[4] = self;
  void v9[5] = &v10;
  +[Pass enumeratePassUniqueIDsAndTypesForQuery:v7 withHandler:v9];
  LOBYTE(self) = *((unsigned char *)v11 + 24);
  _Block_object_dispose(&v10, 8);

  return (char)self;
}

- (BOOL)getWebService:(id *)a3 updateContext:(id *)a4 forPassWithUniqueID:(id)a5
{
  id v7 = +[Pass anyInDatabase:self->_database withUniqueID:a5];
  id v8 = [v7 webService];
  id v9 = v8;
  if (v8)
  {
    if (a3)
    {
      *a3 = [v8 webService];
    }
    if (a4)
    {
      *a4 = [v7 updateContext];
    }
  }

  return v9 != 0;
}

- (BOOL)getPassTypeID:(id *)a3 teamID:(id *)a4 associatedPassTypeIdentifiers:(id *)a5 associatedApplicationIdentifiers:(id *)a6 forUniqueID:(id)a7
{
  id v11 = +[Pass anyInDatabase:self->_database withUniqueID:a7];
  uint64_t v12 = v11;
  if (v11)
  {
    char v13 = [v11 passType];
    *a3 = [v13 passTypeID];
    *a4 = [v13 teamID];
    *a5 = [v12 associatedPassTypeIdentifiers];
    *a6 = [v12 associatedApplicationIdentifiers];
  }
  return v12 != 0;
}

- (id)passUpdateContextForSerialNumber:(id)a3 webService:(id)a4
{
  id v6 = a3;
  id v7 = [(PDDatabaseManager *)self _databaseWebService:a4];
  id v8 = +[Pass anyInDatabase:self->_database withWebService:v7 serialNumber:v6];

  id v9 = [v8 updateContext];

  return v9;
}

- (id)webServiceForPass:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self _passTypeForPass:v4];
  id v6 = [(PDDatabaseManager *)self _webServiceForPass:v4 passType:v5];

  id v7 = [v6 webService];

  return v7;
}

- (BOOL)getLastPushDate:(id *)a3 lastUpdateDate:(id *)a4 frequencyScore:(double *)a5 forPassTypeID:(id)a6
{
  id v9 = +[PassType anyInDatabase:self->_database withPassTypeID:a6];
  uint64_t v10 = v9;
  if (v9)
  {
    if (a3)
    {
      *a3 = [v9 lastPushDate];
    }
    if (a4)
    {
      *a4 = [v10 lastUpdateDate];
    }
    if (a5)
    {
      [v10 frequencyScore];
      *(void *)a5 = v11;
    }
  }

  return v10 != 0;
}

- (BOOL)uniqueIDIsRevoked:(id)a3
{
  unint64_t v3 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  unsigned __int8 v4 = [v3 revoked];

  return v4;
}

- (void)updateLastPushDate:(id)a3 frequencyScore:(double)a4 forPassTypeID:(id)a5
{
  id v10 = a3;
  id v8 = +[PassType anyInDatabase:self->_database withPassTypeID:a5];
  id v9 = v8;
  if (v8)
  {
    [v8 updateLastPushDate:v10];
    [v9 updateFrequencyScore:a4];
  }
}

- (void)updateLastUpdateDate:(id)a3 forPassTypeID:(id)a4
{
  id v8 = a3;
  id v6 = +[PassType anyInDatabase:self->_database withPassTypeID:a4];
  id v7 = v6;
  if (v6) {
    [v6 updateLastUpdateDate:v8];
  }
}

- (void)updateRevocationStatus:(BOOL)a3 forUniqueID:(id)a4
{
  BOOL v4 = a3;
  id v5 = +[Pass anyInDatabase:self->_database withUniqueID:a4];
  [v5 updateWithRevocationStatus:v4];
}

- (void)updateIngestedDate:(id)a3 forUniqueID:(id)a4
{
  database = self->_database;
  id v6 = a3;
  id v7 = +[Pass anyInDatabase:database withUniqueID:a4];
  [v7 updateWithIngestedDate:v6];
}

- (void)enumeratePassUpdateContextsForWebService:(id)a3 withHandler:(id)a4
{
  database = self->_database;
  id v7 = a4;
  id v8 = [(PDDatabaseManager *)self _predicateMatchingPassesForWebService:a3];
  id v9 = +[SQLiteEntity queryWithDatabase:database predicate:v8];

  +[Pass enumerateUpdateContextsForQuery:v9 withHandler:v7];
}

- (void)enumerateOrganizationNamesForPassTypeID:(id)a3 withHandler:(id)a4
{
  id v10 = a4;
  id v6 = +[PassType anyInDatabase:self->_database withPassTypeID:a3];
  if (v6)
  {
    database = self->_database;
    id v8 = +[Pass predicateForPassType:v6];
    id v9 = +[SQLiteEntity queryWithDatabase:database predicate:v8];

    +[Pass enumerateOrganizationNamesForQuery:v9 withHandler:v10];
  }
}

- (void)enumeratePassSyncabilityPropertiesWithHandler:(id)a3
{
}

- (id)passesForNotificationService:(id)a3
{
  if (a3)
  {
    BOOL v4 = -[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:");
    if (v4)
    {
      database = self->_database;
      id v6 = +[Pass predicateForNotificationService:v4];
      id v7 = +[Pass passesInDatabase:database matchingPredicate:v6];
    }
    else
    {
      id v7 = objc_alloc_init((Class)NSSet);
    }
  }
  else
  {
    id v7 = objc_alloc_init((Class)NSSet);
  }
  return v7;
}

- (id)paymentApplicationsForNotificationService:(id)a3
{
  if (a3)
  {
    BOOL v4 = -[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:");
    if (v4)
    {
      id v5 = +[PaymentApplication paymentApplicationsInDatabase:self->_database forNotificationService:v4];
    }
    else
    {
      id v5 = objc_alloc_init((Class)NSSet);
    }
    id v6 = v5;
  }
  else
  {
    id v6 = objc_alloc_init((Class)NSSet);
  }
  return v6;
}

- (id)paymentApplicationWithDPANIdentifier:(id)a3
{
  unint64_t v3 = [(PDDatabaseManager *)self _dbPaymentApplicationWithDPANIdentifier:a3];
  BOOL v4 = [v3 paymentApplication];

  return v4;
}

- (id)_dbPaymentApplicationWithDPANIdentifier:(id)a3
{
  secureElement = self->_secureElement;
  id v5 = a3;
  id v6 = [(PKSecureElement *)secureElement secureElementIdentifiers];
  id v7 = +[PaymentApplication predicateForDPANIdentifier:v5];

  v13[0] = v7;
  id v8 = +[PaymentApplication predicateForSecureElementIdentifiers:v6];
  v13[1] = v8;
  id v9 = +[NSArray arrayWithObjects:v13 count:2];

  id v10 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v9];
  uint64_t v11 = +[SQLiteEntity anyInDatabase:self->_database predicate:v10];

  return v11;
}

- (id)paymentApplicationWithPassUniqueIdentifier:(id)a3 secureElementIdentifier:(id)a4 paymentApplicationIdentifier:(id)a5
{
  id v5 = +[PaymentApplication anyInDatabase:self->_database withPassUniqueIdentifier:a3 secureElementIdentifier:a4 paymentApplicationIdentifier:a5];
  id v6 = [v5 paymentApplication];

  return v6;
}

- (id)paymentApplicationsForPassUniqueIdentifier:(id)a3
{
  database = self->_database;
  secureElement = self->_secureElement;
  id v5 = a3;
  id v6 = [(PKSecureElement *)secureElement secureElementIdentifiers];
  id v7 = +[PaymentApplication paymentApplicationsInDatabase:database forPassUniqueIdentifier:v5 secureElementIdentifiers:v6];

  return v7;
}

- (id)defaultPaymentApplicationForPassUniqueIdentifier:(id)a3
{
  unint64_t v3 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  BOOL v4 = [v3 defaultPaymentApplication];
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 paymentApplication];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (id)primaryPaymentApplicationForPassUniqueIdentifier:(id)a3
{
  secureElement = self->_secureElement;
  id v5 = a3;
  id v6 = [(PKSecureElement *)secureElement secureElementIdentifiers];
  id v7 = +[PaymentApplication predicateForSecureElementIdentifiers:v6];
  id v8 = +[PaymentApplication predicateForPassWithUniqueIdentifier:](PaymentApplication, "predicateForPassWithUniqueIdentifier:", v5, v7);

  v15[1] = v8;
  id v9 = +[PaymentApplication predicateForPrimaryPaymentApplication:1];
  v15[2] = v9;
  id v10 = +[NSArray arrayWithObjects:v15 count:3];

  uint64_t v11 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v10];
  uint64_t v12 = +[SQLiteEntity anyInDatabase:self->_database predicate:v11];
  char v13 = [v12 paymentApplication];

  return v13;
}

- (void)insertPaymentApplicationUsageSummary:(id)a3
{
}

- (id)allPaymentApplicationUsageSummaries
{
  return +[PaymentApplicationUsageSummary allUsageSummariesInDatabase:self->_database];
}

- (id)paymentApplicationWithVPANIdentifier:(id)a3
{
  BOOL v4 = +[PaymentApplication predicateForVPANID:a3 primaryOnly:0];
  id v5 = +[SQLiteEntity anyInDatabase:self->_database predicate:v4];
  id v6 = [v5 paymentApplication];

  return v6;
}

- (id)passWithVPANIdentifier:(id)a3
{
  BOOL v4 = [(PDDatabaseManager *)self paymentApplicationWithVPANIdentifier:a3];
  if (v4)
  {
    id v5 = [(PDDatabaseManager *)self passWithPaymentApplication:v4];
    id v6 = [v5 secureElementPass];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (id)passesWithActiveVPAN
{
  unint64_t v3 = [(PDDatabaseManager *)self _predicateForType:1];
  BOOL v4 = +[Pass predicateForHasVPANID];
  v11[1] = v4;
  id v5 = +[NSSet setWithArray:&off_10078C270];
  id v6 = +[Pass predicateForPaymentApplicationStates:v5];
  void v11[2] = v6;
  id v7 = +[NSArray arrayWithObjects:v11 count:3];

  id v8 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v7];
  id v9 = +[Pass passesInDatabase:self->_database matchingPredicate:v8];

  return v9;
}

- (void)updateDateLastUsedBySafari:(id)a3 forVirtualCardWithIdentifier:(id)a4
{
  id v10 = a3;
  id v6 = a4;
  id v7 = +[VPANVirtualCard anyInDatabase:self->_database withVirtualCardIdentifier:v6];
  id v8 = v7;
  if (v7) {
    [v7 updateDateLastUsedBySafari:v10];
  }
  else {
    id v9 = +[VPANVirtualCard insertVPANVirtualCardMetadataWithIdentifier:v6 dateLastUsedBySafari:v10 inDatabase:self->_database];
  }
}

- (void)updateCardholderNameFromSafari:(id)a3 forVirtualCardWithIdentifier:(id)a4
{
  id v10 = a3;
  id v6 = a4;
  id v7 = +[VPANVirtualCard anyInDatabase:self->_database withVirtualCardIdentifier:v6];
  id v8 = v7;
  if (v7) {
    [v7 updateCardholderNameFromSafari:v10];
  }
  else {
    id v9 = +[VPANVirtualCard insertVPANVirtualCardMetadataWithIdentifier:v6 cardholderNameFromSafari:v10 inDatabase:self->_database];
  }
}

- (void)updateVirtualCardWithMetadata:(id)a3
{
}

- (id)transactionServiceForPaymentApplication:(id)a3
{
  unint64_t v3 = [(PDDatabaseManager *)self _passWithPaymentApplication:a3];
  BOOL v4 = [v3 transactionService];
  id v5 = [v4 notificationService];

  return v5;
}

- (id)messageServiceForPaymentApplication:(id)a3
{
  unint64_t v3 = [(PDDatabaseManager *)self _passWithPaymentApplication:a3];
  BOOL v4 = [v3 transactionService];
  id v5 = [v4 notificationService];

  return v5;
}

- (id)notificationServiceOfType:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4
{
  if (!a4)
  {
    id v8 = 0;
    goto LABEL_10;
  }
  id v5 = +[Pass anyInDatabase:withUniqueID:](Pass, "anyInDatabase:withUniqueID:", self->_database);
  id v6 = v5;
  if (a3 == 1)
  {
    uint64_t v7 = [v5 messageService];
  }
  else
  {
    if (a3)
    {
      id v8 = 0;
      goto LABEL_9;
    }
    uint64_t v7 = [v5 transactionService];
  }
  id v8 = (void *)v7;
LABEL_9:

LABEL_10:
  id v9 = objc_msgSend(v8, "notificationService", a3);

  return v9;
}

- (id)allPaymentApplications
{
  return +[PaymentApplication paymentApplicationsInDatabase:self->_database];
}

- (id)deviceSpecificPaymentApplications
{
  unint64_t v3 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  BOOL v4 = +[PaymentApplication paymentApplicationsInDatabase:self->_database forSecureElementIdentifiers:v3];

  return v4;
}

- (id)notificationServices
{
  return +[NotificationService notificationServicesInDatabase:self->_database];
}

- (id)notificationServicesForPushTopic:(id)a3
{
  return +[NotificationService notificationServicesInDatabase:self->_database withPushTopic:a3];
}

- (BOOL)notificationServiceIsEnabledForAnyPasses:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self passesForNotificationService:v4];
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000;
  char v14 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001602B0;
  v8[3] = &unk_10073A760;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  [v5 enumerateObjectsUsingBlock:v8];
  LOBYTE(v4) = *((unsigned char *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)v4;
}

- (unint64_t)registrationStatusForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4
{
  id v5 = +[Pass anyInDatabase:self->_database withUniqueID:a4];
  id v6 = [v5 passNotificationServiceForType:a3];
  id v7 = [v6 registrationStatus];

  return (unint64_t)v7;
}

- (id)lastUpdatedDateForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4
{
  id v5 = +[Pass anyInDatabase:self->_database withUniqueID:a4];
  id v6 = [v5 passNotificationServiceForType:a3];
  id v7 = [v6 lastUpdatedDate];

  return v7;
}

- (id)lastUpdatedTagForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4
{
  id v5 = +[Pass anyInDatabase:self->_database withUniqueID:a4];
  id v6 = [v5 passNotificationServiceForType:a3];
  id v7 = [v6 lastUpdatedTag];

  return v7;
}

- (void)updateRegistrationStatus:(unint64_t)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5
{
  id v8 = +[Pass anyInDatabase:self->_database withUniqueID:a5];
  id v7 = [v8 passNotificationServiceForType:a4];
  [v7 updateWithRegistrationStatus:a3];
}

- (void)updateLastUpdatedDate:(id)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5
{
  database = self->_database;
  id v8 = a3;
  id v10 = +[Pass anyInDatabase:database withUniqueID:a5];
  id v9 = [v10 passNotificationServiceForType:a4];
  [v9 updateWithLastUpdatedDate:v8];
}

- (void)updateLastUpdatedTag:(id)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5
{
  database = self->_database;
  id v8 = a3;
  id v10 = +[Pass anyInDatabase:database withUniqueID:a5];
  id v9 = [v10 passNotificationServiceForType:a4];
  [v9 updateWithLastUpdatedTag:v8];
}

- (void)updateLastUpdatedDate:(id)a3 forNotificationService:(id)a4
{
  id v6 = a3;
  id v7 = [(PDDatabaseManager *)self _databaseNotificationService:a4];
  [v7 updateWithLastUpdatedDate:v6];
}

- (void)updateLastUpdatedTag:(id)a3 forNotificationService:(id)a4
{
  id v6 = a3;
  id v7 = [(PDDatabaseManager *)self _databaseNotificationService:a4];
  [v7 updateWithLastUpdatedTag:v6];
}

- (void)updateAuthenticationToken:(id)a3 forNotificationService:(id)a4
{
  id v6 = a3;
  id v7 = [(PDDatabaseManager *)self _databaseNotificationService:a4];
  [v7 updateWithAuthenticationToken:v6];
}

- (void)updateAppLaunchToken:(id)a3 forNotificationService:(id)a4
{
  id v6 = a3;
  id v7 = [(PDDatabaseManager *)self _databaseNotificationService:a4];
  [v7 updateWithAppLaunchToken:v6];
}

- (void)updateNotificationService:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self _databaseNotificationService:v4];
  [v5 updateWithNotificationService:v4];
}

- (void)updateTransitAppletStateWithStationNames:(id)a3 forPaymentApplication:(id)a4 withPassUniqueIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v32 = 0;
  uint64_t v33 = &v32;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = sub_10002090C;
  id v36 = sub_100020F78;
  id v37 = 0;
  uint64_t v26 = 0;
  char v27 = &v26;
  uint64_t v28 = 0x3032000000;
  id v29 = sub_10002090C;
  id v30 = sub_100020F78;
  id v31 = 0;
  database = self->_database;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_100160ACC;
  v20[3] = &unk_10073A7B0;
  v20[4] = self;
  id v12 = v10;
  id v21 = v12;
  id v13 = v9;
  id v22 = v13;
  id v14 = v8;
  id v23 = v14;
  int v24 = &v26;
  int v25 = &v32;
  sub_10000817C((uint64_t)database, v20);
  if (v33[5] && v27[5])
  {
    delegateQueue = self->_delegateQueue;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_100160E78;
    void v16[3] = &unk_1007303E8;
    v16[4] = self;
    id v17 = v12;
    long long v18 = &v26;
    long long v19 = &v32;
    dispatch_async(delegateQueue, v16);
  }
  _Block_object_dispose(&v26, 8);

  _Block_object_dispose(&v32, 8);
}

- (void)updateTransitAppletStateWithHistory:(id)a3 transactionDate:(id)a4 forPaymentApplication:(id)a5 withPassUniqueIdentifier:(id)a6 forceTransactionGeneration:(BOOL)a7 balanceLabelDictionary:(id)a8 unitDictionary:(id)a9 planLabelDictionary:(id)a10 completion:(id)a11
{
}

- (void)updateTransitAppletStateWithHistory:(id)a3 transactionDate:(id)a4 forPaymentApplication:(id)a5 withPassUniqueIdentifier:(id)a6 forceTransactionGeneration:(BOOL)a7 recoverMissingTransactions:(BOOL)a8 balanceLabelDictionary:(id)a9 unitDictionary:(id)a10 planLabelDictionary:(id)a11 completion:(id)a12
{
  BOOL v12 = a8;
  id v45 = a3;
  id v47 = a4;
  id v38 = a5;
  id v17 = a6;
  id v39 = a9;
  id v41 = a10;
  id v43 = a11;
  id v49 = (void (**)(id, id, void))a12;
  uint64_t v107 = 0;
  v108 = &v107;
  uint64_t v109 = 0x3032000000;
  v110 = sub_10002090C;
  v111 = sub_100020F78;
  id v112 = 0;
  uint64_t v101 = 0;
  id v102 = &v101;
  uint64_t v103 = 0x3032000000;
  v104 = sub_10002090C;
  uint64_t v105 = sub_100020F78;
  id v106 = 0;
  id v94 = 0;
  uint64_t v95 = 0;
  id v96 = &v95;
  uint64_t v97 = 0x3032000000;
  v98 = sub_10002090C;
  uint64_t v99 = sub_100020F78;
  id v100 = 0;
  uint64_t v89 = 0;
  id v90 = &v89;
  uint64_t v91 = 0x3032000000;
  v92 = sub_10002090C;
  uint64_t v93 = sub_100020F78;
  uint64_t v83 = 0;
  id v84 = &v83;
  uint64_t v85 = 0x3032000000;
  char v86 = sub_10002090C;
  uint64_t v87 = sub_100020F78;
  id v88 = 0;
  uint64_t v77 = 0;
  uint64_t v78 = &v77;
  uint64_t v79 = 0x3032000000;
  v80 = sub_10002090C;
  uint64_t v81 = sub_100020F78;
  id v82 = 0;
  database = self->_database;
  v61[0] = _NSConcreteStackBlock;
  v61[1] = 3221225472;
  v61[2] = sub_1001615F4;
  v61[3] = &unk_10073A7D8;
  v61[4] = self;
  id v52 = v17;
  id v62 = v52;
  id v19 = v38;
  id v63 = v19;
  id v20 = v45;
  id v64 = v20;
  uint64_t v69 = &v89;
  id v40 = v39;
  id v65 = v40;
  id v42 = v41;
  id v66 = v42;
  id v46 = v43;
  id v67 = v46;
  id v70 = &v77;
  uint64_t v71 = &v83;
  BOOL v75 = a7;
  id v48 = v47;
  id v68 = v48;
  char v72 = &v95;
  uint64_t v73 = &v101;
  BOOL v76 = v12;
  id v74 = &v107;
  sub_10000817C((uint64_t)database, v61);
  char v44 = v20;
  id v21 = v19;
  if ([v19 supportsSuica]) {
    uint64_t v22 = 1024;
  }
  else {
    uint64_t v22 = 2048;
  }
  id v23 = (void *)v102[5];
  if (v23)
  {
    [v23 addUpdateReasons:v22];
    id v24 = [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:v102[5] withPassUniqueIdentifier:v52 paymentApplication:v21 insertionMode:2 performTruncation:1 insertedTransaction:0];
  }
  long long v51 = v21;
  id v25 = [(id)v108[5] count];
  if (!v25)
  {
LABEL_27:
    id v26 = 0;
    goto LABEL_28;
  }
  id v26 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v25];
  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  id v27 = (id)v108[5];
  id v28 = [v27 countByEnumeratingWithState:&v57 objects:v113 count:16];
  if (!v28) {
    goto LABEL_25;
  }
  uint64_t v29 = *(void *)v58;
  do
  {
    id v30 = 0;
    do
    {
      if (*(void *)v58 != v29) {
        objc_enumerationMutation(v27);
      }
      id v31 = *(void **)(*((void *)&v57 + 1) + 8 * (void)v30);
      uint64_t v32 = (void *)v96[5];
      if (v31 == v32 || !v12)
      {
        if (v31 != v32) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v34 = [(id)v108[5] lastObject];
        BOOL v35 = v31 == v34;

        if (v35) {
LABEL_20:
        }
          [v31 addUpdateReasons:v22];
      }
      id v36 = [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:v31 withPassUniqueIdentifier:v52 paymentApplication:v51 insertionMode:0 performTruncation:1 insertedTransaction:0];
      if (v36) {
        [v26 addObject:v36];
      }

      id v30 = (char *)v30 + 1;
    }
    while (v28 != v30);
    id v28 = [v27 countByEnumeratingWithState:&v57 objects:v113 count:16];
  }
  while (v28);
LABEL_25:

  if (![v26 count])
  {

    goto LABEL_27;
  }
LABEL_28:
  if (v84[5] && v78[5])
  {
    delegateQueue = self->_delegateQueue;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001621FC;
    block[3] = &unk_1007303E8;
    void block[4] = self;
    id v54 = v52;
    uint64_t v55 = &v77;
    unint64_t v56 = &v83;
    dispatch_async(delegateQueue, block);
  }
  if (v49) {
    v49[2](v49, v26, v90[5]);
  }

  _Block_object_dispose(&v77, 8);
  _Block_object_dispose(&v83, 8);

  _Block_object_dispose(&v89, 8);
  _Block_object_dispose(&v95, 8);

  _Block_object_dispose(&v101, 8);
  _Block_object_dispose(&v107, 8);
}

- (id)transitStateWithPassUniqueIdentifier:(id)a3 paymentApplication:(id)a4
{
  database = self->_database;
  id v7 = a4;
  id v8 = a3;
  id v9 = [v7 secureElementIdentifier];
  id v10 = [v7 applicationIdentifier];

  uint64_t v11 = +[PaymentApplication anyInDatabase:database withPassUniqueIdentifier:v8 secureElementIdentifier:v9 paymentApplicationIdentifier:v10];

  if (v11)
  {
    BOOL v12 = +[FelicaTransitAppletState anyInDatabase:withPaymentApplicationPID:](FelicaTransitAppletState, "anyInDatabase:withPaymentApplicationPID:", self->_database, [v11 persistentID]);
    if (!v12)
    {
      BOOL v12 = +[TransitAppletState anyInDatabase:withPaymentApplicationPID:](TransitAppletState, "anyInDatabase:withPaymentApplicationPID:", self->_database, [v11 persistentID]);
    }
    id v13 = [v12 transitAppletState];
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

- (BOOL)canPerformAction:(id)a3 forPassWithUniqueIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [(PDDatabaseManager *)self passWithUniqueIdentifier:v7];
  id v9 = [v8 paymentPass];

  if (v9)
  {
    [v9 effectiveContactlessPaymentApplicationState];
    BOOL v10 = PKPaymentApplicationStateIsPersonalized() != 0;
  }
  else
  {
    BOOL v10 = 0;
  }
  uint64_t v11 = [v6 serviceProviderSupportedCountries];
  BOOL v12 = [v6 serviceProviderAcceptedNetworks];
  id v13 = +[NSSet setWithArray:v12];

  id v14 = +[NSDate date];
  if ([v6 type] == (id)2)
  {
    CFStringRef v15 = [v6 associatedPlanIdentifier];
    if (v15)
    {
      int v16 = [v6 associatedPlan];

      if (!v16)
      {
        id v17 = PKTransitCommutePlanInPassForIdentifier();
        [v6 setAssociatedPlan:v17];
      }
    }
  }
  long long v18 = [v6 availableFrom];
  id v19 = [v6 availableUntil];
  if (v10)
  {
    id v20 = -[PDDatabaseManager passesForNonWebInAppPaymentOnNetworks:withCapabilities:issuerCountryCodes:paymentRequestType:isMultiTokensRequest:webService:](self, "passesForNonWebInAppPaymentOnNetworks:withCapabilities:issuerCountryCodes:paymentRequestType:isMultiTokensRequest:webService:", v13, [v6 serviceProviderCapabilities], v11, 0, 0, 0);

    if (v20)
    {
      if (v18)
      {
        LODWORD(v20) = [v14 compare:v18] != (id)-1;
        if (!v20) {
          goto LABEL_18;
        }
      }
      else
      {
        LOBYTE(v20) = 1;
      }
      if (v19) {
        LOBYTE(v20) = [v14 compare:v19] != (id)1;
      }
    }
  }
  else
  {
    LOBYTE(v20) = 0;
  }
LABEL_18:

  return (char)v20;
}

- (void)updatePeerPaymentMemo:(id)a3 forTransactionWithServiceIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100162680;
  block[3] = &unk_10072E238;
  void block[4] = self;
  id v12 = v7;
  id v13 = v6;
  id v9 = v6;
  id v10 = v7;
  dispatch_sync(paymentTransactionUpdateQueue, block);
}

- (void)updatePeerPaymentMessageReceivedDate:(id)a3 forTransactionWithServiceIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001628BC;
  block[3] = &unk_10072E238;
  void block[4] = self;
  id v12 = v7;
  id v13 = v6;
  id v9 = v6;
  id v10 = v7;
  dispatch_sync(paymentTransactionUpdateQueue, block);
}

- (void)insertOrUpdateDeviceOriginatedNearbyPeerPaymentMemo:(id)a3 counterpartImageDataIdentifier:(id)a4 forTransactionWithServiceIdentifier:(id)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100162AC4;
  block[3] = &unk_100731F38;
  void block[4] = self;
  id v20 = v12;
  id v21 = v10;
  id v22 = v11;
  id v23 = v13;
  id v15 = v13;
  id v16 = v11;
  id v17 = v10;
  id v18 = v12;
  dispatch_sync(paymentTransactionUpdateQueue, block);
}

- (id)updateMerchant:(id)a3 forTransaction:(id)a4 passUniqueIdentifier:(id)a5
{
  id v7 = a3;
  database = self->_database;
  id v9 = [a4 identifier];
  id v10 = +[PaymentTransaction anyInDatabase:database withIdentifier:v9];

  [v10 updateWithMerchant:v7];
  return v7;
}

- (id)insertOrUpdatePaymentMessage:(id)a3 forPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 performTruncation:(BOOL)a6
{
  BOOL v6 = a6;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = 0;
  if (v10 && v11)
  {
    database = self->_database;
    id v15 = [v10 serviceIdentifier];
    id v16 = +[PaymentMessage anyInDatabase:database withServiceIdentifier:v15 forPassWithUniqueIdentifier:v11];

    if (v16)
    {
      [v16 updateWithPaymentMessage:v10];
    }
    else
    {
      id v17 = self->_database;
      id v18 = [v10 messageDate];
      unint64_t v19 = +[PaymentMessage numberOfPaymentMessagesInDatabase:v17 forPassUniqueIdentifier:v11 newerThanDate:v18];

      uint64_t v20 = PKMaxPerPassPaymentMessageHistory;
      if (v19 < PKMaxPerPassPaymentMessageHistory && [v10 isValid])
      {
        uint64_t v29 = +[Pass anyInDatabase:self->_database withUniqueID:v11];
        uint64_t v21 = [v12 applicationIdentifier];
        id v22 = self->_database;
        id v23 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
        id v28 = (void *)v21;
        id v24 = +[PaymentApplication anyInDatabase:v22 withApplicationIdentifier:v21 secureElementIdentifiers:v23];

        id v16 = +[PaymentMessage insertPaymentMessage:v10 withPaymentPass:v29 paymentApplication:v24 inDatabase:self->_database];
        if (v6)
        {
          +[PaymentMessage truncateEntitiesForPass:v29 inDatabase:self->_database toCount:v20];
          id v25 = v28;
          if (([v16 existsInDatabase] & 1) == 0)
          {

            id v16 = 0;
          }
        }
        else
        {
          id v25 = v28;
        }
      }
      else
      {
        id v16 = 0;
      }
    }
    id v13 = [v16 paymentMessage];
    if (v13)
    {
      delegateQueue = self->_delegateQueue;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100162F7C;
      block[3] = &unk_10072E238;
      void block[4] = self;
      id v31 = v11;
      id v32 = v13;
      dispatch_async(delegateQueue, block);
    }
  }

  return v13;
}

- (id)insertOrUpdateAppletStateDirtyForTransitAppletStateDirty:(id)a3
{
  unint64_t v3 = +[AppletStateDirty insertOrUpdateAppletStateDirtyForPassUniqueIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 dirtyAppletState];

  return v4;
}

- (void)deleteDirtyAppletStatesForTransitAppletStateDirty:(id)a3
{
  database = self->_database;
  id v5 = a3;
  +[AppletStateDirty deleteEntitiesForAppletState:v5 inDatabase:database];
  id v12 = [v5 passUniqueIdentifier];
  BOOL v6 = [v5 applicationIdentifier];
  id v7 = [v5 secureElementIdentifier];

  id v8 = +[PaymentApplication anyInDatabase:self->_database withPassUniqueIdentifier:v12 secureElementIdentifier:v7 paymentApplicationIdentifier:v6];
  id v9 = +[TransitAppletState anyInDatabase:withPaymentApplicationPID:](TransitAppletState, "anyInDatabase:withPaymentApplicationPID:", self->_database, [v8 persistentID]);
  id v10 = v9;
  if (v9)
  {
    id v11 = [v9 transitAppletState];
    [v11 setAppletStateDirty:0];
    [v10 updateWithAppletState:v11];
  }
}

- (id)retrieveDirtyAppletStates
{
  v2 = +[AppletStateDirty dirtyAppletStatesInDatabase:self->_database];
  id v3 = objc_alloc_init((Class)NSMutableSet);
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = v2;
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * i), "dirtyAppletState", (void)v12);
        [v3 addObject:v9];
      }
      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }

  id v10 = [v3 copy];
  return v10;
}

- (int64_t)dirtyAppletStateCount
{
  return +[AppletStateDirty countInDatabase:self->_database];
}

- (id)_recomputedPaymentBalanceForIdentifier:(id)a3 value:(id)a4 currency:(id)a5 exponent:(int64_t)a6 unitDictionary:(id)a7
{
  id v11 = a5;
  id v12 = a4;
  id v13 = a3;
  long long v14 = [a7 objectForKeyedSubscript:v13];
  [v14 integerValue];
  PKLocalizedPaymentUnitKeyForType();
  long long v15 = (NSString *)objc_claimAutoreleasedReturnValue();
  id v16 = v15;
  if (v14 && v15)
  {
    PKLocalizedPaymentString(v15, @"%lu", [v12 unsignedIntegerValue]);
    id v17 = (id)objc_claimAutoreleasedReturnValue();
    id v18 = [objc_alloc((Class)PKCurrencyAmount) initWithAmount:v12 exponent:a6 preformattedString:v17];

    id v19 = [objc_alloc((Class)PKPaymentBalance) initWithIdentifier:v13 forCurrencyAmount:v18];
    id v13 = v18;
  }
  else
  {
    id v17 = [objc_alloc((Class)PKCurrencyAmount) initWithAmount:v12 currency:v11 exponent:a6];

    id v19 = [objc_alloc((Class)PKPaymentBalance) initWithIdentifier:v13 forCurrencyAmount:v17];
  }

  uint64_t v20 = +[NSDate date];
  [v19 setLastUpdateDate:v20];

  return v19;
}

- (void)resolvePendingTransitTransactionAmountsWithPaymentPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 uniqueID];
  long long v58 = PKPaymentPassUnitDictionary(v4);
  long long v50 = v4;
  long long v57 = PKPaymentPassBalanceLabelDictionary(v4);
  id v54 = self;
  id v68 = +[PaymentTransactionAmount pendingTransactionAmountsInDatabase:self->_database forPassWithUniqueIdentifier:v5];
  id v6 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    uint64_t v93 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Resolving pending transit transaction amounts for pass with unique identifier: %@", buf, 0xCu);
  }
  oslog = v6;

  uint64_t v55 = (void *)v5;
  uint64_t v7 = +[PaymentBalance paymentBalancesInDatabase:self->_database forPassWithUniqueIdentifier:v5];
  id v8 = objc_alloc_init((Class)NSMutableDictionary);
  long long v85 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  id v49 = v7;
  id obj = [v7 allObjects];
  id v9 = [obj countByEnumeratingWithState:&v85 objects:v91 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v86;
    do
    {
      for (i = 0; i != v10; i = (char *)i + 1)
      {
        if (*(void *)v86 != v11) {
          objc_enumerationMutation(obj);
        }
        id v13 = *(void **)(*((void *)&v85 + 1) + 8 * i);
        long long v81 = 0u;
        long long v82 = 0u;
        long long v83 = 0u;
        long long v84 = 0u;
        long long v14 = [v13 identifiers];
        long long v15 = [v14 allObjects];

        id v16 = [v15 countByEnumeratingWithState:&v81 objects:v90 count:16];
        if (v16)
        {
          id v17 = v16;
          uint64_t v18 = *(void *)v82;
          do
          {
            for (j = 0; j != v17; j = (char *)j + 1)
            {
              if (*(void *)v82 != v18) {
                objc_enumerationMutation(v15);
              }
              [v8 setObject:v13 forKeyedSubscript:*(void *)(*((void *)&v81 + 1) + 8 * (void)j)];
            }
            id v17 = [v15 countByEnumeratingWithState:&v81 objects:v90 count:16];
          }
          while (v17);
        }
      }
      id v10 = [obj countByEnumeratingWithState:&v85 objects:v91 count:16];
    }
    while (v10);
  }

  long long v79 = 0u;
  long long v80 = 0u;
  long long v77 = 0u;
  long long v78 = 0u;
  id v52 = v68;
  id v59 = [v52 countByEnumeratingWithState:&v77 objects:v89 count:16];
  if (v59)
  {
    uint64_t v56 = *(void *)v78;
    id v20 = (id)PKNoCurrencyCode;
    id v53 = (void *)PKNoCurrencyCode;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v78 != v56) {
          objc_enumerationMutation(v52);
        }
        uint64_t v63 = v21;
        id v22 = *(void **)(*((void *)&v77 + 1) + 8 * v21);
        id v23 = [v22 transactionAmount];
        id v24 = [v23 unitIdentifier];
        id v25 = [v58 objectForKeyedSubscript:v24];
        uint64_t v66 = [v57 objectForKeyedSubscript:v24];
        id v26 = [v8 objectForKeyedSubscript:v24];
        id v67 = v25;
        [v25 integerValue];
        PKLocalizedPaymentUnitKeyForType();
        id v65 = (NSString *)objc_claimAutoreleasedReturnValue();
        id v27 = [v23 amount];
        id obja = [v27 amount];
        id v28 = [v27 currency];
        id v29 = [v27 exponent];
        id v30 = v28;
        id v64 = v27;
        uint64_t v69 = v30;
        if (v30 == v20)
        {
        }
        else
        {
          if (v30) {
            BOOL v31 = v20 == 0;
          }
          else {
            BOOL v31 = 1;
          }
          if (v31)
          {

LABEL_34:
            long long v60 = v26;
            id v62 = v23;
            if (os_log_type_enabled(oslog, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              uint64_t v93 = (uint64_t)v24;
              _os_log_impl((void *)&_mh_execute_header, oslog, OS_LOG_TYPE_DEFAULT, "Encountered a pending amount for unitIdentifier %@ a currency which shouldnt be possible", buf, 0xCu);
            }
            uint64_t v61 = v24;

LABEL_37:
            id v39 = [objc_alloc((Class)PKCurrencyAmount) initWithAmount:obja currency:v69 exponent:v29];
            goto LABEL_38;
          }
          id v32 = v22;
          id v33 = v29;
          uint64_t v34 = v30;
          unsigned int v35 = [v30 isEqualToString:v20];

          id v29 = v33;
          id v22 = v32;
          if (!v35) {
            goto LABEL_34;
          }
        }
        id v36 = (void *)v66;
        if (!v67) {
          goto LABEL_39;
        }
        long long v60 = v26;
        uint64_t v61 = v24;
        id v62 = v23;
        if (!v65) {
          goto LABEL_37;
        }
        id v37 = objc_msgSend(obja, "pk_absoluteValue");
        id v38 = PKLocalizedPaymentString(v65, @"%lu", [v37 unsignedLongValue]);

        id v39 = [objc_alloc((Class)PKCurrencyAmount) initWithAmount:obja exponent:v29 preformattedString:v38];
LABEL_38:
        id v36 = (void *)v66;
        id v40 = [objc_alloc((Class)PKTransactionAmount) initWithCurrencyAmount:v39 label:v66];
        [v22 updateWithPaymentAmount:v40];
        id v41 = [v22 paymentTransaction];
        id v42 = [v41 paymentApplication];
        id v43 = [v41 paymentTransaction];
        [v42 paymentApplication];
        id v45 = v44 = v39;
        delegateQueue = v54->_delegateQueue;
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100163B4C;
        block[3] = &unk_10072FF48;
        void block[4] = v54;
        id v73 = v55;
        id v74 = v43;
        id v75 = v45;
        id v26 = v60;
        id v76 = v60;
        id v47 = v45;
        id v48 = v43;
        dispatch_async(delegateQueue, block);

        id v20 = v53;
        id v24 = v61;
        id v23 = v62;
LABEL_39:

        uint64_t v21 = v63 + 1;
      }
      while (v59 != (id)(v63 + 1));
      id v59 = [v52 countByEnumeratingWithState:&v77 objects:v89 count:16];
    }
    while (v59);
  }
}

- (void)recomputeBalancesForPaymentPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 uniqueID];
  id v25 = self;
  id v6 = +[PaymentBalance paymentBalancesInDatabase:self->_database forPassWithUniqueIdentifier:v5];
  if ([v6 count])
  {
    uint64_t v7 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v32 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Recomputing balances for pass with unique identifier: %@", buf, 0xCu);
    }
    uint64_t v21 = v5;

    id v22 = v4;
    id v24 = PKPaymentPassUnitDictionary(v4);
    id v8 = objc_alloc_init((Class)NSMutableArray);
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id v20 = v6;
    id obj = [v6 allObjects];
    id v9 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v27;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(void *)v27 != v11) {
            objc_enumerationMutation(obj);
          }
          id v13 = *(void **)(*((void *)&v26 + 1) + 8 * i);
          long long v14 = [v13 identifiers];
          long long v15 = [v14 anyObject];
          id v16 = [v13 value];
          id v17 = [v13 currencyCode];
          uint64_t v18 = -[PDDatabaseManager _recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:](v25, "_recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:", v15, v16, v17, [v13 exponent], v24);

          id v19 = [v13 localizedTitle];
          [v18 setLocalizedTitle:v19];

          [v8 addObject:v18];
        }
        id v10 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
      }
      while (v10);
    }

    uint64_t v5 = v21;
    if ([v8 count]) {
      [(PDDatabaseManager *)v25 updatePaymentBalances:v8 forPassUniqueIdentifier:v21];
    }

    id v4 = v22;
    id v6 = v20;
  }
}

- (void)_updatePaymentBalancesAndPlansForTransitAppletState:(id)a3 passUniqueIdentifier:(id)a4 paymentApplicationPID:(int64_t)a5 unitDictionary:(id)a6
{
  id v9 = a3;
  id v10 = a4;
  id v59 = a6;
  id v11 = objc_alloc_init((Class)NSMutableArray);
  id v12 = self;
  long long v58 = +[Pass anyInDatabase:self->_database withUniqueID:v10];
  uint64_t v13 = [v9 balances];
  long long v60 = v11;
  if (v13)
  {
    long long v14 = (void *)v13;
    long long v15 = [v9 balances];
    id v16 = [v15 count];

    if (v16)
    {
      id v55 = v10;
      id v56 = v9;
      id v17 = [v58 persistentID];
      id v54 = +[TransitAppletState anyInDatabase:self->_database withPaymentApplicationPID:a5];
      uint64_t v18 = +[TransitAppletStateBalance transitAppletBalancesInDatabase:forPaymentPassPID:andTransitAppletStatePID:](TransitAppletStateBalance, "transitAppletBalancesInDatabase:forPaymentPassPID:andTransitAppletStatePID:", self->_database, v17, [v54 persistentID]);
      long long v63 = 0u;
      long long v64 = 0u;
      long long v65 = 0u;
      long long v66 = 0u;
      id v19 = [v18 countByEnumeratingWithState:&v63 objects:v69 count:16];
      if (v19)
      {
        id v20 = v19;
        uint64_t v21 = *(void *)v64;
        do
        {
          for (i = 0; i != v20; i = (char *)i + 1)
          {
            if (*(void *)v64 != v21) {
              objc_enumerationMutation(v18);
            }
            id v23 = *(void **)(*((void *)&v63 + 1) + 8 * i);
            id v24 = [v23 identifier];
            id v25 = [v23 balance];
            long long v26 = [v23 currency];
            long long v27 = -[PDDatabaseManager _recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:](v12, "_recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:", v24, v25, v26, [v23 exponent], v59);

            long long v28 = [v23 expirationDate];
            [v27 setExpirationDate:v28];

            id v11 = v60;
            [v60 addObject:v27];
          }
          id v20 = [v18 countByEnumeratingWithState:&v63 objects:v69 count:16];
        }
        while (v20);
      }
      long long v29 = PKLogFacilityTypeGetObject();
      id v10 = v55;
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v68 = v55;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Updating balances for multiple balance pass with unique identifier: %@", buf, 0xCu);
      }

      id v9 = v56;
    }
  }
  id v30 = [v9 balance];
  if (v30)
  {
    id v31 = objc_alloc((Class)PKCurrencyAmount);
    id v32 = [v9 balance];
    id v33 = [v9 currency];
    id v34 = [v31 initWithAmount:v32 currency:v33 exponent:0];

    id v11 = v60;
    id v35 = objc_alloc((Class)PKPaymentBalance);
    id v36 = [v35 initWithIdentifier:PKPaymentBalanceStoredValueDefaultIdentifier forCurrencyAmount:v34];
    id v37 = +[NSDate date];
    [v36 setLastUpdateDate:v37];

    [v60 addObject:v36];
    id v38 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v68 = v10;
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Updating balance for single balance pass with unique identifier: %@", buf, 0xCu);
    }
  }
  id v39 = [v9 loyaltyBalance];

  if (v39)
  {
    id v40 = objc_alloc((Class)PKCurrencyAmount);
    id v41 = [v9 loyaltyBalance];
    id v42 = v41;
    if (v41)
    {
      [v41 decimalValue];
    }
    else
    {
      v61[0] = 0;
      v61[1] = 0;
      int v62 = 0;
    }
    id v43 = +[NSDecimalNumber decimalNumberWithDecimal:v61];
    id v44 = [v40 initWithAmount:v43 currency:PKNoCurrencyCode exponent:0];

    id v45 = objc_alloc((Class)PKPaymentBalance);
    id v46 = [v45 initWithIdentifier:PKPaymentBalanceLoyaltyBalanceDefaultIdentifier forCurrencyAmount:v44];
    id v47 = +[NSDate date];
    [v46 setLastUpdateDate:v47];

    [v11 addObject:v46];
    id v48 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v68 = v10;
      _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "Updating loyalty balance for single balance pass with unique identifier: %@", buf, 0xCu);
    }
  }
  if ([v11 count])
  {
    id v49 = v11;
    long long v50 = [v9 historySequenceNumber];
    long long v51 = [v50 stringValue];
    [(PDDatabaseManager *)v12 updatePaymentBalances:v49 forPassUniqueIdentifier:v10 transactionSequenceNumber:v51];
  }
  id v52 = [v9 commutePlans];
  id v53 = v52;
  if (v52 && [v52 count]) {
    [(PDDatabaseManager *)v12 updateAppletCommutePlans:v53 forPassUniqueIdentifier:v10 paymentApplicationPID:a5];
  }
}

- (void)updateAppletCommutePlans:(id)a3 forPassUniqueIdentifier:(id)a4 paymentApplicationPID:(int64_t)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = +[Pass anyInDatabase:self->_database withUniqueID:v9];
  if (v10)
  {
    id v42 = v9;
    id v11 = +[TransitAppletState anyInDatabase:self->_database withPaymentApplicationPID:a5];
    id v12 = [v10 persistentID];
    id v39 = v11;
    id v13 = [v11 persistentID];
    +[TransitAppletStateCommutePlan deleteEntitiesForPaymentPassPID:v12 andTransitAppletStatePID:v13 inDatabase:self->_database];
    id v14 = +[TransitAppletStateCommutePlan insertTransitAppletCommutePlans:v8 withPaymentPassPID:v12 withTransitAppletStatePID:v13 inDatabase:self->_database];
    id v45 = objc_alloc_init((Class)NSMutableArray);
    id v41 = v10;
    long long v15 = [v10 pass];
    id v16 = [(PDDatabaseManager *)self _registeredPass:v15];
    id v17 = [v16 paymentPass];

    id v38 = v17;
    uint64_t v18 = [v17 transitCommutePlans];
    id v19 = objc_alloc_init((Class)NSMutableDictionary);
    long long v50 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    id v20 = v18;
    id v21 = [v20 countByEnumeratingWithState:&v50 objects:v57 count:16];
    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = *(void *)v51;
      do
      {
        for (i = 0; i != v22; i = (char *)i + 1)
        {
          if (*(void *)v51 != v23) {
            objc_enumerationMutation(v20);
          }
          id v25 = *(void **)(*((void *)&v50 + 1) + 8 * i);
          long long v26 = [v25 identifier];
          [v19 setObject:v25 forKey:v26];
        }
        id v22 = [v20 countByEnumeratingWithState:&v50 objects:v57 count:16];
      }
      while (v22);
    }
    id v40 = self;

    long long v48 = 0u;
    long long v49 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    id v43 = v8;
    id obj = v8;
    id v27 = [obj countByEnumeratingWithState:&v46 objects:v56 count:16];
    if (v27)
    {
      id v28 = v27;
      uint64_t v29 = *(void *)v47;
      do
      {
        for (j = 0; j != v28; j = (char *)j + 1)
        {
          if (*(void *)v47 != v29) {
            objc_enumerationMutation(obj);
          }
          id v31 = *(void **)(*((void *)&v46 + 1) + 8 * (void)j);
          id v32 = [v31 identifier];
          id v33 = [v19 objectForKeyedSubscript:v32];
          id v34 = [v33 titleText];
          id v35 = [v33 descriptionText];
          id v36 = [objc_alloc((Class)PKPaymentCommutePlanDetail) initWithAppletCommutePlan:v31 label:v34 value:v35];
          [v45 safelyAddObject:v36];
        }
        id v28 = [obj countByEnumeratingWithState:&v46 objects:v56 count:16];
      }
      while (v28);
    }

    id v37 = [v45 copy];
    id v9 = v42;
    [(PDDatabaseManager *)v40 updatePaymentPlans:v37 forPassUniqueIdentifier:v42];

    id v8 = v43;
    id v10 = v41;
  }
  else
  {
    id v37 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v55 = v9;
      _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "Unable to set applet commute plans for a pass that doesn't exist: %@", buf, 0xCu);
    }
  }
}

- (void)updatePaymentPlans:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = +[Pass anyInDatabase:self->_database withUniqueID:v7];
  id v9 = v8;
  if (v8)
  {
    database = self->_database;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10016499C;
    v12[3] = &unk_100733638;
    id v13 = v8;
    id v14 = self;
    id v15 = v6;
    id v16 = v7;
    sub_10000817C((uint64_t)database, v12);

    id v11 = v13;
  }
  else
  {
    id v11 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Payment plans updated for pass that doesn't exist: %@", buf, 0xCu);
    }
  }
}

- (void)updatePaymentBalances:(id)a3 forPassUniqueIdentifier:(id)a4
{
}

- (void)updatePaymentBalances:(id)a3 forPassUniqueIdentifier:(id)a4 transactionSequenceNumber:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  long long v78 = (__CFString *)a5;
  id v10 = objc_alloc_init((Class)NSMutableDictionary);
  long long v86 = self;
  id v79 = v9;
  [(PDDatabaseManager *)self paymentBalancesForPassUniqueIdentifier:v9];
  long long v103 = 0u;
  long long v104 = 0u;
  long long v105 = 0u;
  long long v77 = v106 = 0u;
  id v11 = [v77 allObjects];
  id v12 = [v11 countByEnumeratingWithState:&v103 objects:v111 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v104;
    do
    {
      for (i = 0; i != v13; i = (char *)i + 1)
      {
        if (*(void *)v104 != v14) {
          objc_enumerationMutation(v11);
        }
        id v16 = *(void **)(*((void *)&v103 + 1) + 8 * i);
        id v17 = [v16 identifiers];
        [v10 setObject:v16 forKeyedSubscript:v17];
      }
      id v13 = [v11 countByEnumeratingWithState:&v103 objects:v111 count:16];
    }
    while (v13);
  }

  id v18 = v86;
  id v19 = v79;
  id v20 = +[Pass anyInDatabase:v86->_database withUniqueID:v79];
  id v21 = v20;
  if (v20)
  {
    id v76 = v20;
    id v22 = [v20 pass];
    uint64_t v23 = [(PDDatabaseManager *)v86 _registeredPass:v22];
    id v24 = [v23 paymentPass];

    long long v85 = PKPaymentPassUnitDictionary(v24);
    id v84 = objc_alloc_init((Class)NSMutableArray);
    long long v80 = v24;
    unsigned int v83 = [v24 isAutoTopEnabled];
    long long v99 = 0u;
    long long v100 = 0u;
    long long v101 = 0u;
    long long v102 = 0u;
    id obj = v8;
    id v25 = [obj countByEnumeratingWithState:&v99 objects:v108 count:16];
    if (!v25)
    {
      long long v81 = 0;
LABEL_43:

      goto LABEL_44;
    }
    id v26 = v25;
    id v75 = v8;
    long long v81 = 0;
    uint64_t v27 = *(void *)v100;
    do
    {
      for (j = 0; j != v26; j = (char *)j + 1)
      {
        id v29 = v10;
        if (*(void *)v100 != v27) {
          objc_enumerationMutation(obj);
        }
        id v30 = *(void **)(*((void *)&v99 + 1) + 8 * (void)j);
        id v31 = [v30 identifiers];
        id v32 = [v31 anyObject];
        id v33 = [v30 value];
        id v34 = [v30 currencyCode];
        id v35 = -[PDDatabaseManager _recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:](v86, "_recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:", v32, v33, v34, [v30 exponent], v85);

        id v36 = [v30 localizedTitle];
        [v35 setLocalizedTitle:v36];

        id v37 = [v30 localizedDescription];
        [v35 setLocalizedDescription:v37];

        [v84 addObject:v35];
        if (v83 && [v80 isAutoTopUpBalance:v35])
        {
          id v38 = v35;

          long long v81 = v38;
        }
        id v10 = v29;
      }
      id v26 = [obj countByEnumeratingWithState:&v99 objects:v108 count:16];
    }
    while (v26);

    if (!v81)
    {
      long long v81 = 0;
      id v8 = v75;
      id v19 = v79;
      id v18 = v86;
LABEL_44:
      id v58 = [v84 copy];
      uint64_t database = (uint64_t)v18->_database;
      v91[0] = _NSConcreteStackBlock;
      v91[1] = 3221225472;
      v91[2] = sub_1001653F0;
      v91[3] = &unk_100733610;
      id v92 = v76;
      uint64_t v93 = v18;
      id v60 = v58;
      id v94 = v60;
      sub_10000817C(database, v91);
      delegateQueue = v18->_delegateQueue;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100165514;
      block[3] = &unk_100730198;
      void block[4] = v18;
      id v88 = v19;
      id v89 = v10;
      id v90 = v60;
      id v62 = v60;
      long long v63 = delegateQueue;
      id v21 = v76;
      dispatch_async(v63, block);

      long long v53 = v78;
      long long v52 = v80;
      goto LABEL_45;
    }
    long long v97 = 0u;
    long long v98 = 0u;
    long long v96 = 0u;
    long long v95 = 0u;
    id v39 = [v80 autoTopUpFields];
    id v40 = [v39 countByEnumeratingWithState:&v95 objects:v107 count:16];
    if (v40)
    {
      id v41 = v40;
      id obj = 0;
      uint64_t v42 = *(void *)v96;
      uint64_t v43 = PKPassFieldKeyAutoTopUp;
      double v44 = 0.0;
      double v45 = 0.0;
      do
      {
        for (k = 0; k != v41; k = (char *)k + 1)
        {
          if (*(void *)v96 != v42) {
            objc_enumerationMutation(v39);
          }
          long long v47 = *(void **)(*((void *)&v95 + 1) + 8 * (void)k);
          long long v48 = [v47 key];
          if ([v48 isEqualToString:v43])
          {
            [v47 amount];
            double v45 = v49;
            [v47 threshold];
            double v44 = v50;
            uint64_t v51 = [v47 foreignReferenceIdentifiers];

            id obj = (id)v51;
          }
        }
        id v41 = [v39 countByEnumeratingWithState:&v95 objects:v107 count:16];
      }
      while (v41);
    }
    else
    {
      id obj = 0;
      double v44 = 0.0;
      double v45 = 0.0;
    }

    id v54 = [v81 currencyValue];
    id v55 = [v54 amount];

    if (v45 <= 0.0)
    {
      id v8 = v75;
      id v19 = v79;
    }
    else
    {
      id v8 = v75;
      id v19 = v79;
      if (v44 > 0.0)
      {
        id v56 = +[NSNumber numberWithDouble:v44];
        if ([v55 compare:v56] == (id)-1)
        {
          id v57 = [v80 activationState];

          if (v57) {
            goto LABEL_42;
          }
          long long v64 = v78;
          if (!v78)
          {
            long long v65 = [(PDDatabaseManager *)v86 primaryPaymentApplicationForPassUniqueIdentifier:v79];
            long long v66 = [(PDDatabaseManager *)v86 transitStateWithPassUniqueIdentifier:v79 paymentApplication:v65];
            id v67 = [v66 historySequenceNumber];
            uint64_t v68 = [v67 stringValue];
            uint64_t v69 = (void *)v68;
            id v70 = @"0";
            if (v68) {
              id v70 = (__CFString *)v68;
            }
            long long v64 = v70;
          }
          uint64_t v71 = [(PDDatabaseManager *)v86 _transactionServiceForPass:v80];
          id v56 = [v71 notificationService];

          id WeakRetained = objc_loadWeakRetained((id *)&v86->_notificationServicesDelegate);
          id v73 = [v80 uniqueID];
          id v74 = [v80 partnerAccountIdentifier];
          long long v78 = v64;
          [WeakRetained handlePostBalanceTaskWithNotificationService:v56 passUniqueIdenitifer:v73 accountIdentifier:v74 transactionSequenceNumber:v64 balance:v81];

          id v8 = v75;
        }
      }
    }
LABEL_42:

    id v18 = v86;
    goto LABEL_43;
  }
  long long v52 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v110 = v79;
    _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "Payment balances updated for pass that doesn't exist: %@", buf, 0xCu);
  }
  long long v53 = v78;
LABEL_45:
}

- (id)paymentBalanceWithIdentifier:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v4 = +[PaymentBalance anyInDatabase:self->_database withIdentifier:a3 forPassWithUniqueIdentifier:a4];
  if (v4 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    uint64_t v5 = [v4 paymentBalance];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

- (id)paymentBalancesForPassUniqueIdentifier:(id)a3
{
  return +[PaymentBalance paymentBalancesInDatabase:self->_database forPassWithUniqueIdentifier:a3];
}

- (id)plansForPassUniqueIdentifier:(id)a3
{
  return +[PaymentCommutePlanDetail paymentPlansInDatabase:self->_database forPassWithUniqueIdentifier:a3];
}

- (void)truncatePaymentBalancesForPassUniqueIdentifier:(id)a3 toMaximumEntityCount:(int64_t)a4
{
  id v6 = a3;
  id v7 = +[Pass anyInDatabase:self->_database withUniqueID:v6];
  if (v7)
  {
    id v8 = [(PDDatabaseManager *)self paymentBalancesForPassUniqueIdentifier:v6];
    +[PaymentBalance truncateEntitiesForPass:v7 inDatabase:self->_database toCount:a4];
    id v9 = [(PDDatabaseManager *)self paymentBalancesForPassUniqueIdentifier:v6];
    id v10 = [v9 count];
    if (v10 != [v8 count])
    {
      delegateQueue = self->_delegateQueue;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100165788;
      block[3] = &unk_10072E238;
      void block[4] = self;
      id v13 = v6;
      id v14 = v9;
      dispatch_async(delegateQueue, block);
    }
  }
}

- (void)deleteAllPaymentBalancesForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v5 = +[Pass anyInDatabase:self->_database withUniqueID:v4];
  if (v5)
  {
    +[PaymentBalance deleteEntitiesForPass:v5 inDatabase:self->_database];
    delegateQueue = self->_delegateQueue;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1001658D8;
    v7[3] = &unk_10072E198;
    void v7[4] = self;
    id v8 = v4;
    dispatch_async(delegateQueue, v7);
  }
}

- (int64_t)paymentTransactionAmountCountInDatabase
{
  return +[SQLiteEntity countInDatabase:self->_database predicate:0];
}

- (id)balanceReminderThresholdForBalanceIdentifier:(id)a3 withPassUniqueIdentifier:(id)a4
{
  if (a4)
  {
    uint64_t v5 = +[BalanceReminder balanceReminderInDatabase:self->_database forBalanceIdentifier:a3 passIdentifier:a4];
  }
  else
  {
    uint64_t v5 = 0;
  }
  return v5;
}

- (BOOL)setBalanceReminder:(id)a3 forBalanceIdentifier:(id)a4 withPassUniqueIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = +[Pass anyInDatabase:self->_database withUniqueID:v10];
  if (v11)
  {
    id v12 = +[BalanceReminder insertOrUpdateBalanceReminder:v8 forBalanceIdentifier:v9 pass:v11 database:self->_database];
    id v13 = [v12 balanceReminder];
    if (v13)
    {
      delegateQueue = self->_delegateQueue;
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      void v17[2] = sub_100165B30;
      v17[3] = &unk_100730198;
      void v17[4] = self;
      id v18 = v10;
      id v19 = v13;
      id v20 = v9;
      dispatch_async(delegateQueue, v17);
    }
    BOOL v15 = v12 != 0;
  }
  else
  {
    BOOL v15 = 0;
  }

  return v15;
}

- (id)commutePlanReminderForCommutePlanIdentifier:(id)a3 withPassUniqueIdentifier:(id)a4
{
  if (a4)
  {
    uint64_t v5 = +[CommutePlanReminder commutePlanReminderInDatabase:self->_database forCommutePlanIdentifier:a3 passIdentifier:a4];
  }
  else
  {
    uint64_t v5 = 0;
  }
  return v5;
}

- (BOOL)setCommutePlanReminder:(id)a3 forCommutePlanIdentifier:(id)a4 withPassUniqueIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = +[Pass anyInDatabase:self->_database withUniqueID:v10];
  if (v11
    && (+[CommutePlanReminder insertOrUpdateCommutePlanReminder:v8 forCommutePlanIdentifier:v9 pass:v11 database:self->_database], id v12 = objc_claimAutoreleasedReturnValue(), v12, v12))
  {
    delegateQueue = self->_delegateQueue;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_100165D10;
    void v16[3] = &unk_10072E198;
    v16[4] = self;
    id v17 = v10;
    dispatch_async(delegateQueue, v16);

    BOOL v14 = 1;
  }
  else
  {
    BOOL v14 = 0;
  }

  return v14;
}

- (id)transactionArchiveForRecurringPayment:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v6 = [v4 identifier];
  id v7 = +[PaymentTransactionArchive anyInDatabase:database forRecurringPaymentIdentifier:v6];

  if (!v7)
  {
    id v8 = [v4 identifier];
    id v9 = +[PeerPaymentRecurringPayment recurringPaymentWithIdentifier:v8 inDatabase:self->_database];

    id v7 = +[PaymentTransactionArchive insertArchiveForRecurringPayment:v9 inDatabase:self->_database];
  }
  id v10 = [v7 transactionArchive];

  return v10;
}

- (void)updateTransactionArchive:(id)a3 forRecurringPayment:(id)a4
{
  uint64_t database = self->_database;
  id v6 = a3;
  id v7 = [a4 identifier];
  id v8 = +[PaymentTransactionArchive anyInDatabase:database forRecurringPaymentIdentifier:v7];

  [v8 updateWithTransactionArchive:v6];
}

- (id)transactionArchiveForCounterpartImageData:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v6 = [v4 identifier];
  id v7 = +[PaymentTransactionArchive anyInDatabase:database forCounterpartImageDataIdentifier:v6];

  if (!v7)
  {
    id v8 = [v4 identifier];
    id v9 = +[PeerPaymentCounterpartImageData counterpartImageDataWithIdentifier:v8 inDatabase:self->_database];

    id v7 = +[PaymentTransactionArchive insertArchiveForCounterpartImageData:v9 inDatabase:self->_database];
  }
  id v10 = [v7 transactionArchive];

  return v10;
}

- (void)updateTransactionArchive:(id)a3 forCounterpartImageData:(id)a4
{
  uint64_t database = self->_database;
  id v6 = a3;
  id v7 = [a4 identifier];
  id v8 = +[PaymentTransactionArchive anyInDatabase:database forCounterpartImageDataIdentifier:v7];

  [v8 updateWithTransactionArchive:v6];
}

- (id)transactionArchiveForTransactionIdentifier:(id)a3
{
  id v3 = +[PaymentTransactionArchive anyInDatabase:self->_database forTransactionIdentifier:a3];
  id v4 = [v3 transactionArchive];

  return v4;
}

- (id)transactionArchiveForTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4
{
  uint64_t v5 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:a3 forTransactionSourceIdentifier:a4];
  if (v5)
  {
    id v6 = +[PaymentTransactionArchive anyInDatabase:self->_database forTransaction:v5];
    if ([v6 existsInDatabase])
    {
      id v7 = [v6 transactionArchive];
    }
    else
    {
      id v7 = 0;
    }
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

- (id)transactionArchivesWithType:(unint64_t)a3 isArchived:(BOOL)a4
{
  return +[PaymentTransactionArchive transactionArchivesWithType:a3 isArchived:a4 inDatabase:self->_database];
}

- (id)transactionArchivesWithCloudStoreZone:(id)a3 isArchived:(BOOL)a4
{
  return +[PaymentTransactionArchive transactionArchivesWithCloudStoreZone:a3 isArchived:a4 inDatabase:self->_database];
}

- (id)_insertOrUpdatePaymentTransaction:(id)a3 transactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9
{
  BOOL v146 = a8;
  id v14 = a3;
  id v15 = a4;
  id v170 = a5;
  id v16 = a6;
  if (v15)
  {
    v168 = [v14 identifier];
    v169 = [v14 serviceIdentifier];
    v161 = [v14 paymentHash];
    v158 = [v14 transactionDate];
    unsigned int v163 = [v14 hasNotificationServiceData];
    unsigned int v151 = [v14 hasTransactionSource];
    id v150 = [v14 updateReasons];
    unsigned int v156 = -[PDDatabaseManager _updateCameExclusivelyFromCloudStore:](self, "_updateCameExclusivelyFromCloudStore:");
    uint64_t v17 = [(PDDatabaseManager *)self passUniqueIdentifierForTransactionSourceIdentifier:v15];
    id v18 = [(PDDatabaseManager *)self paymentApplicationForTransactionSourceIdentifier:v15];

    id v157 = v16;
    v159 = (void *)v17;
    if (v18)
    {
      v160 = +[NSSet setWithObject:v15];
    }
    else
    {
      uint64_t v23 = [(PDDatabaseManager *)self transactionSourceIdentifiersAssociatedWithPassUniqueIdentifier:v17];
      id v24 = +[NSSet setWithObject:v15];
      v160 = [v24 setByAddingObjectsFromSet:v23];
    }
    v162 = [v14 accountIdentifier];
    id v25 = [v14 accountType];
    unint64_t v26 = [(PDDatabaseManager *)self transactionSourceTypeForTransactionSourceIdentifier:v15];
    uint64_t v27 = PKLogFacilityTypeGetObject();
    id v19 = v168;
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218754;
      *(void *)v204 = a7;
      *(_WORD *)&v204[8] = 2114;
      *(void *)&v204[10] = v168;
      __int16 v205 = 2048;
      *(void *)v206 = v26;
      *(_WORD *)&v206[8] = 2048;
      id v207 = v25;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "will insert or update (%lu) transaction: %{public}@ source: %lu, %ld", buf, 0x2Au);
    }

    if ([v168 length])
    {
      uint64_t v28 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:v168];
      BOOL v29 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);
      if (v28)
      {
        id v21 = (void *)v28;
        if (v29)
        {
          *(_DWORD *)buf = 138543362;
          *(void *)v204 = v168;
          id v30 = "Matched Transaction to Transaction with Identifier: %{public}@";
LABEL_42:
          id v33 = v27;
          uint32_t v34 = 12;
          goto LABEL_43;
        }
        goto LABEL_44;
      }
      if (v29)
      {
        *(_DWORD *)buf = 138543362;
        *(void *)v204 = v168;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Could Not Match Transaction on Identifier: %{public}@", buf, 0xCu);
      }
    }
    if ([v169 length])
    {
      uint64_t v31 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:v169 forTransactionSourceIdentifier:v15];
      BOOL v32 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);
      if (v31)
      {
        id v21 = (void *)v31;
        if (v32)
        {
          *(_DWORD *)buf = 138543618;
          *(void *)v204 = v169;
          *(_WORD *)&v204[8] = 2112;
          *(void *)&v204[10] = v15;
          id v30 = "Matched Transaction to Transaction with Service Identifier: %{public}@, transactionSourceIdentifier: %@";
          id v33 = v27;
          uint32_t v34 = 22;
LABEL_43:
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, v30, buf, v34);
          goto LABEL_44;
        }
        goto LABEL_44;
      }
      if (v32)
      {
        *(_DWORD *)buf = 138543618;
        *(void *)v204 = v169;
        *(_WORD *)&v204[8] = 2112;
        *(void *)&v204[10] = v15;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Could Not Match Transaction on Service Identifier: %{public}@, transactionSourceIdentifier: %@", buf, 0x16u);
      }
    }
    if ([v162 length] && v25)
    {
      uint64_t v35 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:v169 accountIdentifier:v162 accountType:v25];
      BOOL v36 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);
      if (v35)
      {
        id v21 = (void *)v35;
        if (v36)
        {
          PKPaymentTransactionAccountTypeToString();
          id v37 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          *(void *)v204 = v169;
          *(_WORD *)&v204[8] = 2112;
          *(void *)&v204[10] = v162;
          __int16 v205 = 2114;
          *(void *)v206 = v37;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Matched Transaction to Transaction with Service Identifier: %{public}@, accountIdentifier: %@, accountType %{public}@", buf, 0x20u);

          id v19 = v168;
        }
        goto LABEL_44;
      }
      if (v36)
      {
        PKPaymentTransactionAccountTypeToString();
        id v38 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        *(void *)v204 = v169;
        *(_WORD *)&v204[8] = 2112;
        *(void *)&v204[10] = v162;
        __int16 v205 = 2114;
        *(void *)v206 = v38;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Could Not Match Transaction on Service Identifier: %{public}@, accountIdentifier: %@, accountType %{public}@", buf, 0x20u);

        id v19 = v168;
      }
    }
    if ([v161 length])
    {
      if (v151) {
        uint64_t v39 = 2;
      }
      else {
        uint64_t v39 = 1;
      }
      if (v163) {
        uint64_t v40 = 2;
      }
      else {
        uint64_t v40 = 1;
      }
      id v21 = +[PaymentTransaction anyInDatabase:self->_database withPaymentHash:v161 withTransactionSource:v39 withNotificationServiceData:v40 transactionSourceIdentifiers:v160];
      BOOL v41 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);
      if (v21)
      {
        if (v41)
        {
          *(_DWORD *)buf = 138412290;
          *(void *)v204 = v161;
          id v30 = "Matched Transaction to Transaction with Payment Hash: %@";
          goto LABEL_42;
        }
LABEL_44:

        goto LABEL_45;
      }
      if (v41)
      {
        *(_DWORD *)buf = 138412290;
        *(void *)v204 = v161;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Could Not Match Transaction on Payment Hash: %@", buf, 0xCu);
      }

      PKAnalyticsSendEvent();
    }
    id v21 = 0;
LABEL_45:
    if (a7 >= 2)
    {
      if (a7 == 2)
      {
        if (v21)
        {
          id v56 = [v21 identifier];
          v152 = [v21 serviceIdentifier];
          v164 = v21;
          id v57 = [v21 paymentTransaction];
          delegateQueue = self->_delegateQueue;
          v178[0] = _NSConcreteStackBlock;
          v178[1] = 3221225472;
          v178[2] = sub_1001680C0;
          v178[3] = &unk_10072E238;
          v178[4] = self;
          id v59 = v15;
          id v179 = v59;
          id v46 = v57;
          id v180 = v46;
          dispatch_async(delegateQueue, v178);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543618;
            *(void *)v204 = v56;
            *(_WORD *)&v204[8] = 2114;
            *(void *)&v204[10] = v152;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Removing Existing Transaction with Identifier: %{public}@, serviceIdentifier: %{public}@", buf, 0x16u);
          }

          [v164 deleteFromDatabase];
          if ((v156 & 1) == 0)
          {
            id WeakRetained = objc_loadWeakRetained((id *)&self->_cloudStoreCoordinator);
            uint64_t v61 = [WeakRetained applePayContainer];
            v174[0] = _NSConcreteStackBlock;
            v174[1] = 3221225472;
            v174[2] = sub_100168114;
            v174[3] = &unk_10072FF20;
            v174[4] = self;
            id v175 = v46;
            id v176 = v152;
            id v177 = v59;
            [v61 canSyncTransactionFromCloudKitForTransactionSourceIdentifier:v177 completion:v174];
          }
          id v62 = self->_delegateQueue;
          v171[0] = _NSConcreteStackBlock;
          v171[1] = 3221225472;
          v171[2] = sub_10016821C;
          v171[3] = &unk_10072E238;
          v171[4] = self;
          id v172 = v59;
          id v173 = v56;
          id v63 = v56;
          dispatch_async(v62, v171);

          id v21 = 0;
          id v22 = 0;
          id v16 = v157;
          id v19 = v168;
          goto LABEL_177;
        }
        v164 = 0;
      }
      else
      {
        if (a7 == 3)
        {
          if (!v21)
          {
            uint64_t v42 = [v14 merchant];
            uint64_t v43 = [v42 name];

            v152 = v43;
            double v44 = +[PaymentTransaction closestPendingTransactionInDatabase:self->_database fromTransactionDate:v158 withNotificationServiceData:1 forMerchantName:v43 forTransactionSourceIdentifiers:v160];
            id v21 = v44;
            if (!v44)
            {
              v164 = 0;
              id v22 = 0;
              id v16 = v157;
              goto LABEL_178;
            }
            double v45 = [v44 identifier];
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138543362;
              *(void *)v204 = v45;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Soft-Matched Transaction to Transaction with Identifier: %{public}@", buf, 0xCu);
            }
          }
          v152 = [v21 identifier];
          id v46 = [v21 paymentTransaction];
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543618;
            *(void *)v204 = v152;
            *(_WORD *)&v204[8] = 2112;
            *(void *)&v204[10] = v14;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Replacing Existing Transaction with Identifier: %{public}@ with Transaction: %@", buf, 0x16u);
          }

          [v21 replaceWithPaymentTransaction:v14];
          id v22 = [v21 paymentTransaction];
          [v22 addUpdateReasons:v150];
          v164 = v21;
          if (v22)
          {
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138543618;
              *(void *)v204 = v152;
              *(_WORD *)&v204[8] = 2112;
              *(void *)&v204[10] = v22;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Resulting Transaction with identifier %{public}@: %@", buf, 0x16u);
            }

            if ((v156 & 1) == 0 && ([v22 updateReasonIsInitialDownload] & 1) == 0)
            {
              id v201 = v22;
              long long v47 = +[NSArray arrayWithObjects:&v201 count:1];
              [(PDDatabaseManager *)self _updateCloudStoreWithTransactions:v47 transactionSourceIdentifier:v15];
            }
            long long v48 = self->_delegateQueue;
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472;
            block[2] = sub_100168068;
            block[3] = &unk_100730198;
            void block[4] = self;
            id v182 = v15;
            id v22 = v22;
            id v183 = v22;
            id v46 = v46;
            id v184 = v46;
            dispatch_async(v48, block);
          }
          id v21 = 0;
          goto LABEL_176;
        }
        v164 = v21;
        id v21 = 0;
      }
      id v22 = 0;
      id v16 = v157;
      char v72 = v161;
      id v73 = v159;
LABEL_179:

      goto LABEL_180;
    }
    if (v21)
    {
      LODWORD(v49) = 0;
      goto LABEL_65;
    }
    if (![v14 supportsFuzzyMatching])
    {
LABEL_199:
      if (a7 == 1)
      {
        int v147 = 0;
        id v144 = 0;
        id v46 = 0;
        id v100 = 0;
        id v97 = 0;
        id v19 = v168;
        goto LABEL_153;
      }
      int v142 = 1;
      if (v163) {
        uint64_t v117 = 1;
      }
      else {
        uint64_t v117 = 2;
      }
      uint64_t v166 = v117;
      uint64_t v118 = +[Pass anyInDatabase:self->_database withUniqueID:v159];
      uint64_t v119 = [(PDDatabaseManager *)self paymentApplicationIdentifierForTransactionSourceIdentifier:v15];
      uint64_t database = self->_database;
      v121 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
      v122 = database;
      id v99 = (id)v118;
      v139 = (void *)v119;
      v123 = +[PaymentApplication anyInDatabase:v122 withApplicationIdentifier:v119 secureElementIdentifiers:v121];

      v136 = v123;
      [v123 paymentNetworkIdentifier];
      unint64_t v124 = PKMaxPaymentTransactionsForCredentialType();
      if ([v99 hasAssociatedPeerPaymentAccount]) {
        goto LABEL_209;
      }
      if ((PKDisableTransactionTableTruncation() & 1) == 0)
      {
        v125 = [v99 associatedAccountIdentifier];
        if (!v125)
        {
          int v142 = 1;
          if ((PKTransactionsUnlimitedForCredentialType() & 1) == 0 && v26 - 1 >= 3)
          {
            if (+[PaymentTransaction numberOfPaymentTransactionsInDatabase:self->_database forTransactionSourceIdentifiers:v160 withNotificationServiceData:v166 newerThanDate:v158] >= v124)
            {
              id v144 = 0;
              id v100 = 0;
              id v97 = 0;
              id v19 = v168;
LABEL_226:

              int v147 = 0;
              id v46 = 0;
              long long v101 = v139;
LABEL_152:

LABEL_153:
              v164 = v97;
              id v22 = [v97 paymentTransaction];
              [v22 addUpdateReasons:v150];
              v152 = v100;
              id v21 = [v100 transactionArchive];
              if (!v21)
              {
                long long v102 = PKLogFacilityTypeGetObject();
                if (os_log_type_enabled(v102, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138543618;
                  *(void *)v204 = v19;
                  *(_WORD *)&v204[8] = 2112;
                  *(void *)&v204[10] = v22;
                  _os_log_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_DEFAULT, "Error: There is no transaction archive for transaction with identifier %{public}@ %@", buf, 0x16u);
                }
              }
              if (v22)
              {
                if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138543874;
                  *(void *)v204 = v19;
                  *(_WORD *)&v204[8] = 2112;
                  *(void *)&v204[10] = v22;
                  __int16 v205 = 2112;
                  *(void *)v206 = v21;
                  _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "resulting transaction for identifier %{public}@: %@ and archive: %@", buf, 0x20u);
                }

                if ((v147 | [v22 updateReasonIsInitialDownload] ^ 1) == 1)
                {
                  unsigned int v103 = [v22 hasCloudArchivableDeviceData];
                  unsigned int v104 = [v46 isCloudArchivableDeviceDataEqual:v22] ^ 1;
                  unsigned int v141 = [v144 allArchiveLocationsWithType:0 areArchived:1];
                  unsigned int v138 = [v21 allArchiveLocationsWithType:0 areArchived:1];
                  unsigned int v105 = [v22 updateReasonIsInitialDownload];
                  unsigned int v148 = v103;
                  if (v105)
                  {
                    int v106 = 0;
                  }
                  else
                  {
                    if (v46) {
                      char v107 = v104;
                    }
                    else {
                      char v107 = 1;
                    }
                    if (v103 & ~v156) == 1 && (v107) {
                      int v106 = 1;
                    }
                    else {
                      int v106 = v156 & (v141 & v138 ^ 1);
                    }
                  }
                  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)buf = 138545922;
                    *(void *)v204 = v168;
                    *(_WORD *)&v204[8] = 2114;
                    *(void *)&v204[10] = v169;
                    __int16 v205 = 1024;
                    *(_DWORD *)v206 = v106;
                    *(_WORD *)&v206[4] = 1024;
                    *(_DWORD *)&v206[6] = v46 != 0;
                    LOWORD(v207) = 1024;
                    *(_DWORD *)((char *)&v207 + 2) = v148;
                    HIWORD(v207) = 1024;
                    unsigned int v208 = v104;
                    __int16 v209 = 1024;
                    unsigned int v210 = v141;
                    __int16 v211 = 1024;
                    unsigned int v212 = v138;
                    __int16 v213 = 1024;
                    int v214 = v141 & v138;
                    __int16 v215 = 1024;
                    unsigned int v216 = v156;
                    __int16 v217 = 1024;
                    unsigned int v218 = v105;
                    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "should update cloud store for id %{public}@ service id %{public}@: %d (%d, %d, %d, %d, %d, %d, %d, %d)", buf, 0x4Cu);
                  }

                  id v19 = v168;
                  if (v106)
                  {
                    id v202 = v22;
                    v108 = +[NSArray arrayWithObjects:&v202 count:1];
                    [(PDDatabaseManager *)self _updateCloudStoreWithTransactions:v108 transactionSourceIdentifier:v15];
                  }
                }
                uint64_t v109 = self->_delegateQueue;
                v185[0] = _NSConcreteStackBlock;
                v185[1] = 3221225472;
                v185[2] = sub_100168010;
                v185[3] = &unk_100730198;
                v185[4] = self;
                id v186 = v15;
                id v187 = v22;
                id v188 = v46;
                dispatch_async(v109, v185);
              }
LABEL_176:
              id v16 = v157;
LABEL_177:

LABEL_178:
              char v72 = v161;
              id v73 = v159;

              goto LABEL_179;
            }
            int v142 = 0;
          }
LABEL_209:
          id v19 = v168;
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543618;
            *(void *)v204 = v168;
            *(_WORD *)&v204[8] = 2112;
            *(void *)&v204[10] = v14;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Inserting New Transaction with identifier %{public}@: %@", buf, 0x16u);
          }

          if (a9) {
            *a9 = 1;
          }
          v134 = +[TransactionSource anyInDatabase:self->_database withIdentifier:v15];
          v167 = +[PaymentTransaction insertPaymentTransaction:withTransactionSource:inDatabase:](PaymentTransaction, "insertPaymentTransaction:withTransactionSource:inDatabase:", v14);
          v126 = [v167 dbPaymentTransactionArchive];
          id v144 = [v126 transactionArchive];
          v155 = v126;
          [v126 updateWithTransactionArchive:v170];
          +[PaymentMessage archiveMessagesOfType:1 forPass:v99 inDatabase:self->_database];
          if ((v142 | !v146))
          {
            id v97 = v167;
            id v100 = v126;
          }
          else
          {
            id v149 = v99;
            v127 = +[PaymentTransaction truncateEntitiesForTransactionSourceIdentifiers:v160 withNotificationServiceData:0 suppressedFromUI:0 inDatabase:self->_database toCount:v124];
            long long v189 = 0u;
            long long v190 = 0u;
            long long v191 = 0u;
            long long v192 = 0u;
            id v128 = [v127 countByEnumeratingWithState:&v189 objects:v219 count:16];
            if (v128)
            {
              id v129 = v128;
              uint64_t v130 = *(void *)v190;
              do
              {
                for (i = 0; i != v129; i = (char *)i + 1)
                {
                  if (*(void *)v190 != v130) {
                    objc_enumerationMutation(v127);
                  }
                  uint64_t v132 = *(void *)(*((void *)&v189 + 1) + 8 * i);
                  v133 = [(PDDatabaseManager *)self delegate];
                  [v133 transactionSourceIdentifier:v15 didRemoveTransactionWithIdentifier:v132];
                }
                id v129 = [v127 countByEnumeratingWithState:&v189 objects:v219 count:16];
              }
              while (v129);
            }
            id v97 = v167;
            if (([v167 existsInDatabase] & 1) == 0)
            {

              id v97 = 0;
            }
            id v19 = v168;
            id v100 = v155;

            id v99 = v149;
          }

          goto LABEL_226;
        }
      }
      int v142 = 1;
      goto LABEL_209;
    }
    long long v64 = [(PDDatabaseManager *)self passWithUniqueIdentifier:v159];
    long long v65 = [v64 paymentPass];

    v153 = v65;
    if ([v65 hasAssociatedPeerPaymentAccount])
    {
      BOOL v66 = [v161 length] == 0;
    }
    else
    {
      id v74 = [v65 associatedAccountServiceAccountIdentifier];
      if (v74) {
        BOOL v66 = [v161 length] == 0;
      }
      else {
        BOOL v66 = 1;
      }
    }
    id v112 = [v14 dpanIdentifier];
    uint64_t v113 = [v14 altDSID];
    if (!v66)
    {
      LODWORD(v49) = 0;
      v114 = 0;
      goto LABEL_198;
    }
    id v145 = v113;
    if ([v112 length])
    {
      double v49 = [(PDDatabaseManager *)self paymentApplicationWithDPANIdentifier:v112];

      if (!v49) {
        goto LABEL_196;
      }
    }
    else if ([v145 length] && !PKAltDSIDIsCurrentUser())
    {
LABEL_195:
      LODWORD(v49) = 0;
LABEL_196:
      v114 = 0;
LABEL_197:
      uint64_t v113 = v145;
LABEL_198:

      id v21 = v114;
      if (v114)
      {
LABEL_65:
        double v50 = [v21 paymentTransaction];
        v165 = v21;
        uint64_t v51 = +[PaymentTransactionArchive anyInDatabase:self->_database forTransaction:v21];
        uint64_t v52 = [v51 transactionArchive];
        long long v53 = PKLogFacilityTypeGetObject();
        if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          *(void *)v204 = v52;
          _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "Existing transaction archive %@", buf, 0xCu);
        }

        if (v170)
        {
          if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            *(void *)v204 = v170;
            _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "Updating existing transaction archive with new archive %@", buf, 0xCu);
          }

          [v51 updateWithTransactionArchive:v170];
        }
        id v54 = [v51 transactionArchive];
        if ((v156 & 1) != 0
          || ![v14 hasCloudArchivableDeviceData]
          || ([v14 isCloudArchivableDeviceDataEqual:v50] & 1) != 0)
        {
          BOOL v55 = os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT);
          if ((v150 & 0x10000) != 0)
          {
            if (v55)
            {
              *(_DWORD *)buf = 138543618;
              *(void *)v204 = v169;
              *(_WORD *)&v204[8] = 2114;
              *(void *)&v204[10] = v168;
              _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "setting isArchived to NO because of upload-after-reset for transaction: %{public}@ service: %{public}@", buf, 0x16u);
            }

            [v54 updateArchiveLocationsWithType:0 isArchived:0];
          }
          else
          {
            if (v55)
            {
              *(_DWORD *)buf = 138543618;
              *(void *)v204 = v168;
              *(_WORD *)&v204[8] = 2114;
              *(void *)&v204[10] = v169;
              _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "setting isArchived to YES on every matching location in the archive for transaction: %{public}@ service: %{public}@", buf, 0x16u);
            }

            [v54 updateTransactionArchiveLocationsWithArchive:v52 type:0 archived:1];
          }
          int v147 = 0;
          if (!v49) {
            goto LABEL_95;
          }
        }
        else
        {
          if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543618;
            *(void *)v204 = v168;
            *(_WORD *)&v204[8] = 2114;
            *(void *)&v204[10] = v169;
            _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "setting isArchived to NO because the local device data has changed for transaction: %{public}@ service: %{public}@", buf, 0x16u);
          }

          [v54 updateArchiveLocationsWithType:0 isArchived:0];
          int v147 = 1;
          if (!v49) {
            goto LABEL_95;
          }
        }
        if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543618;
          *(void *)v204 = v168;
          *(_WORD *)&v204[8] = 2114;
          *(void *)&v204[10] = v169;
          _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "marking transaction as fuzzy matched: %{public}@ service: %{public}@", buf, 0x16u);
        }

        [v14 setFuzzyMatched:1];
LABEL_95:
        v140 = v54;
        v154 = (void *)v52;
        if (v50) {
          unsigned int v67 = v156;
        }
        else {
          unsigned int v67 = 0;
        }
        uint64_t v68 = v168;
        if (v67 == 1)
        {
          uint64_t v69 = [v50 merchant];
          id v70 = [v14 merchant];
          v137 = v51;
          if (([v69 mapsDataIsFromLocalMatch] & 1) != 0
            || ([v69 useRawMerchantData] & 1) != 0)
          {
            id v71 = 0;
            id v143 = 0;
          }
          else
          {
            id v75 = [v69 mapsBrand];
            id v71 = [v75 identifier];

            id v76 = [v69 mapsMerchant];
            id v143 = [v76 identifier];
          }
          if (([v70 mapsDataIsFromLocalMatch] & 1) != 0
            || ([v70 useRawMerchantData] & 1) != 0)
          {
            id v77 = 0;
            id v78 = 0;
          }
          else
          {
            id v79 = [v70 mapsBrand];
            id v77 = [v79 identifier];

            [v70 mapsMerchant];
            v135 = v70;
            long long v81 = v80 = v69;
            id v78 = [v81 identifier];

            uint64_t v69 = v80;
            id v70 = v135;
          }
          if (v71 == v77 && v143 == v78)
          {
            if ([v14 requiresMerchantReprocessing]) {
              uint64_t v82 = 1;
            }
            else {
              uint64_t v82 = (uint64_t)[v50 requiresMerchantReprocessing];
            }
            uint64_t v68 = v168;
            [v14 setRequiresMerchantReprocessing:v82];
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 67109378;
              *(_DWORD *)v204 = v82;
              *(_WORD *)&v204[4] = 2114;
              *(void *)&v204[6] = v168;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "maps data did not change, setting last reprocessing date: %d for transaction: %{public}@", buf, 0x12u);
            }

            if (v82)
            {
              unsigned int v83 = [v50 lastMerchantReprocessingDate];
              [v14 setLastMerchantReprocessingDate:v83];
            }
          }
          else
          {
            uint64_t v68 = v168;
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138543362;
              *(void *)v204 = v168;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "maps data changed for transaction: %{public}@", buf, 0xCu);
            }

            [v14 setRequiresMerchantReprocessing:0];
            [v14 setLastMerchantReprocessingDate:0];
          }

          uint64_t v51 = v137;
        }
        id v84 = v51;
        unint64_t v85 = (unint64_t)[v14 transactionStatus];
        unint64_t v86 = (unint64_t)[v50 transactionStatus];
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 134218498;
          *(void *)v204 = v86;
          *(_WORD *)&v204[8] = 2048;
          *(void *)&v204[10] = v85;
          __int16 v205 = 2114;
          *(void *)v206 = v68;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "updating state from %ld to %ld for transaction: %{public}@", buf, 0x20u);
        }

        if (v50 && (v85 & 0xFFFFFFFFFFFFFFFDLL) == 1 && !v86)
        {
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543362;
            *(void *)v204 = v168;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "stated changed, will require merchant reprocessing for transaction: %{public}@", buf, 0xCu);
          }

          long long v87 = [v14 dpanIdentifier];
          if (!v87
            || ([(PDDatabaseManager *)self paymentApplicationWithDPANIdentifier:v87], id v88 = objc_claimAutoreleasedReturnValue(), v88, v88))
          {
            [v14 setRequiresMerchantReprocessing:1];
          }
        }
        if (v85 == 1)
        {
          id v89 = [v50 amount];
          if (v89)
          {

            if ((v86 & 0xFFFFFFFFFFFFFFF7) == 0)
            {
              if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138543362;
                *(void *)v204 = v168;
                _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "updating amount added to auth for transaction: %{public}@", buf, 0xCu);
              }

              id v90 = [v14 amount];
              uint64_t v91 = [v50 amount];
              id v92 = [v90 decimalNumberBySubtracting:v91];
              [v14 setAmountAddedToAuth:v92];
            }
          }
        }
        uint64_t v93 = [v50 fkPaymentTransaction];
        id v94 = [v14 fkPaymentTransaction];
        char v95 = PKEqualObjects();

        if ((v95 & 1) == 0) {
          [v14 setNeedsSyncWithFinance:1];
        }
        objc_msgSend(v14, "setUpdateSequenceNumber:", (char *)objc_msgSend(v50, "updateSequenceNumber") + 1);
        [v165 updateWithPaymentTransactionSource:v15];
        long long v96 = self->_database;
        v193[0] = _NSConcreteStackBlock;
        v193[1] = 3221225472;
        v193[2] = sub_100167ED8;
        v193[3] = &unk_10073A800;
        id v46 = v50;
        id v194 = v46;
        id v195 = v14;
        id v19 = v168;
        v196 = v168;
        id v97 = v165;
        id v197 = v97;
        id v144 = v154;
        id v198 = v144;
        id v199 = v140;
        id v98 = v84;
        id v99 = v199;
        id v100 = v98;
        id v200 = v98;
        sub_10000817C((uint64_t)v96, v193);

        long long v101 = v194;
        goto LABEL_152;
      }
      goto LABEL_199;
    }
    uint64_t v115 = +[PaymentTransaction closestTransactionInDatabase:self->_database fromTransaction:v14 forTransactionSourceIdentifiers:v160];
    if (v115)
    {
      char v116 = v115;
      double v49 = [v115 identifier];
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        *(void *)v204 = v49;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Fuzzy-Matched Transaction to Transaction with Identifier: %{public}@", buf, 0xCu);
      }

      LODWORD(v49) = 1;
      v114 = v116;
      goto LABEL_197;
    }
    goto LABEL_195;
  }
  id v19 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    id v20 = [v14 serviceIdentifier];
    *(_DWORD *)buf = 138543618;
    *(void *)v204 = v20;
    *(_WORD *)&v204[8] = 2112;
    *(void *)&v204[10] = v14;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Error: Cannot insert transaction with service ID %{public}@ with a nil transactionSourceIdentifier %@", buf, 0x16u);
  }
  id v21 = 0;
  id v22 = 0;
LABEL_180:

  id v110 = v22;
  return v110;
}

- (BOOL)_updateCameExclusivelyFromCloudStore:(unint64_t)a3
{
  return (a3 & 0xFFFFFFFFFFFFFFC3) == 0 && (a3 & 0x3C) != 0;
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9
{
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  uint64_t v36 = 0;
  id v37 = &v36;
  uint64_t v38 = 0x3032000000;
  uint64_t v39 = sub_10002090C;
  uint64_t v40 = sub_100020F78;
  id v41 = 0;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100168424;
  block[3] = &unk_10073A828;
  id v27 = v17;
  id v28 = v16;
  BOOL v29 = self;
  id v30 = v15;
  id v31 = v18;
  BOOL v32 = &v36;
  BOOL v35 = a8;
  unint64_t v33 = a7;
  uint32_t v34 = a9;
  id v20 = v18;
  id v21 = v15;
  id v22 = v16;
  id v23 = v17;
  dispatch_sync(paymentTransactionUpdateQueue, block);
  id v24 = (id)v37[5];

  _Block_object_dispose(&v36, 8);
  return v24;
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9
{
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  uint64_t v35 = 0;
  uint64_t v36 = &v35;
  uint64_t v37 = 0x3032000000;
  uint64_t v38 = sub_10002090C;
  uint64_t v39 = sub_100020F78;
  id v40 = 0;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100168964;
  block[3] = &unk_10073A850;
  void block[4] = self;
  id v27 = v15;
  id v28 = v16;
  id v29 = v17;
  id v30 = v18;
  id v31 = &v35;
  BOOL v34 = a8;
  unint64_t v32 = a7;
  unint64_t v33 = a9;
  id v20 = v18;
  id v21 = v17;
  id v22 = v16;
  id v23 = v15;
  dispatch_sync(paymentTransactionUpdateQueue, block);
  id v24 = (id)v36[5];

  _Block_object_dispose(&v35, 8);
  return v24;
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8
{
  return [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:a3 withTransactionSourceIdentifier:a4 transactionArchive:a5 originDeviceID:a6 insertionMode:a7 performTruncation:a8 insertedTransaction:0];
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 originDeviceID:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7 insertedTransaction:(BOOL *)a8
{
  return [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:a3 withTransactionSourceIdentifier:a4 transactionArchive:0 originDeviceID:a5 insertionMode:a6 performTruncation:a7 insertedTransaction:a8];
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7 insertedTransaction:(BOOL *)a8
{
  return [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:a3 withPassUniqueIdentifier:a4 paymentApplication:a5 originDeviceID:0 insertionMode:a6 performTruncation:a7 insertedTransaction:a8];
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7
{
  return [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:a3 withPassUniqueIdentifier:a4 paymentApplication:a5 originDeviceID:0 insertionMode:a6 performTruncation:a7 insertedTransaction:0];
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 insertionMode:(unint64_t)a5 performTruncation:(BOOL)a6 insertedTransaction:(BOOL *)a7
{
  return [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:a3 withTransactionSourceIdentifier:a4 originDeviceID:0 insertionMode:a5 performTruncation:a6 insertedTransaction:a7];
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 insertionMode:(unint64_t)a5 performTruncation:(BOOL)a6
{
  return [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:a3 withTransactionSourceIdentifier:a4 originDeviceID:0 insertionMode:a5 performTruncation:a6 insertedTransaction:0];
}

- (id)updateSuppressBehavior:(unint64_t)a3 forPaymentTransaction:(id)a4 sourceIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  [v8 setSuppressBehavior:a3];
  uint64_t database = self->_database;
  id v11 = [v8 identifier];
  id v12 = +[PaymentTransaction anyInDatabase:database withIdentifier:v11];

  id v13 = [v12 paymentTransaction];
  objc_msgSend(v13, "addUpdateReasons:", objc_msgSend(v8, "updateReasons"));
  [v12 updateSuppressBehavior:a3];
  delegateQueue = self->_delegateQueue;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100168C2C;
  v21[3] = &unk_100730198;
  v21[4] = self;
  id v22 = v9;
  id v15 = v8;
  id v23 = v15;
  id v24 = v13;
  id v16 = v13;
  id v17 = v9;
  dispatch_async(delegateQueue, v21);
  id v18 = v24;
  id v19 = v15;

  return v19;
}

- (void)updateSuppressBehavior:(unint64_t)a3 forTransactionSourceIdentifier:(id)a4 serviceIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:a5 forTransactionSourceIdentifier:v8];
  id v10 = v9;
  if (v9)
  {
    id v11 = [v9 paymentTransaction];
    [v10 updateSuppressBehavior:a3];
    id v12 = [v10 paymentTransaction];
    delegateQueue = self->_delegateQueue;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_100168DB8;
    void v16[3] = &unk_100730198;
    v16[4] = self;
    id v17 = v8;
    id v18 = v12;
    id v19 = v11;
    id v14 = v11;
    id v15 = v12;
    dispatch_async(delegateQueue, v16);
  }
}

- (void)updateSuppressBehavior:(unint64_t)a3 forPaymentTransactions:(id)a4 sourceIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  if ([v8 count])
  {
    objc_initWeak(&location, self);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100168F30;
    v10[3] = &unk_10073A878;
    objc_copyWeak(v13, &location);
    id v11 = v8;
    v13[1] = (id)a3;
    id v12 = v9;
    [(PDDatabaseManager *)self performTransactionWithBlock:v10];

    objc_destroyWeak(v13);
    objc_destroyWeak(&location);
  }
}

- (unint64_t)suppressionBehaviorForTransactionSourceIdentifier:(id)a3 serviceIdentifier:(id)a4
{
  return +[PaymentTransaction suppressionBehaviorForTransactionSourceIdentifier:a3 serviceIdentifier:a4 inDatabase:self->_database];
}

- (void)updateRequiresMerchantReprocessing:(BOOL)a3 forTransactionWithIdentifier:(id)a4
{
  BOOL v4 = a3;
  uint64_t v5 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a4];
  if (v5)
  {
    id v6 = v5;
    [v5 updateRequiresMerchantReprocessing:v4];
    uint64_t v5 = v6;
  }
}

- (id)updateRedemptionType:(unint64_t)a3 forPaymentTransaction:(id)a4 sourceIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  [v8 setRedemptionType:a3];
  uint64_t database = self->_database;
  id v11 = [v8 identifier];
  id v12 = +[PaymentTransaction anyInDatabase:database withIdentifier:v11];

  id v13 = [v12 paymentTransaction];
  objc_msgSend(v13, "addUpdateReasons:", objc_msgSend(v8, "updateReasons"));
  [v12 updateRedemptionType:a3];
  delegateQueue = self->_delegateQueue;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100169260;
  v21[3] = &unk_100730198;
  v21[4] = self;
  id v22 = v9;
  id v15 = v8;
  id v23 = v15;
  id v24 = v13;
  id v16 = v13;
  id v17 = v9;
  dispatch_async(delegateQueue, v21);
  id v18 = v24;
  id v19 = v15;

  return v19;
}

- (id)removeMapsDataForTransactionWithIdentifier:(id)a3 forTransactionSourceIdentifier:(id)a4 issueReportIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  id v10 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
  id v11 = [v10 paymentTransaction];
  if (v10) {
    [v10 removeMapsDataForIssueReportIdentifier:v9];
  }
  id v12 = [v10 paymentTransaction];
  delegateQueue = self->_delegateQueue;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_1001693FC;
  v20[3] = &unk_100730198;
  v20[4] = self;
  id v21 = v8;
  id v14 = v12;
  id v22 = v14;
  id v23 = v11;
  id v15 = v11;
  id v16 = v8;
  dispatch_async(delegateQueue, v20);
  id v17 = v23;
  id v18 = v14;

  return v18;
}

- (id)unsyncedPassesInContainer:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)PKCloudStorePassesSyncContainerName;
  id v6 = v4;
  id v7 = v5;
  if (v7 == v6)
  {

    goto LABEL_7;
  }
  id v8 = v7;
  if (!v6 || !v7)
  {

    goto LABEL_9;
  }
  unsigned int v9 = [v6 isEqualToString:v7];

  if (v9)
  {
LABEL_7:
    id v10 = +[Pass predicateForIsCloudKitArchived:0];
    v26[0] = v10;
    id v11 = +[Pass predicateForIsRevoked:0];
    v26[1] = v11;
    id v12 = v26;
LABEL_16:
    id v18 = +[NSArray arrayWithObjects:v12 count:2];
    id v19 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v18];

    id v20 = +[Pass passesInDatabase:self->_database matchingPredicate:v19];
    id v21 = [(PDDatabaseManager *)self _registeredPasses:v20];

    goto LABEL_21;
  }
LABEL_9:
  id v13 = (void *)PKCloudStorePassesSyncSecureContainerName;
  id v14 = v6;
  id v15 = v13;
  if (v15 == v14)
  {

LABEL_15:
    id v10 = +[Pass predicateForIsCloudKitSecurelyArchived:0];
    v25[0] = v10;
    id v11 = +[Pass predicateForIsRevoked:0];
    v25[1] = v11;
    id v12 = v25;
    goto LABEL_16;
  }
  id v16 = v15;
  if (v6 && v15)
  {
    unsigned int v17 = [v14 isEqualToString:v15];

    if (!v17) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }

LABEL_18:
  id v19 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    int v23 = 138543362;
    id v24 = v14;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "unknown cloud store identifier: %{public}@", (uint8_t *)&v23, 0xCu);
  }
  id v21 = 0;
LABEL_21:

  return v21;
}

- (void)updatePassesWithSyncInformation:(id)a3
{
  id v4 = a3;
  if ([v4 count])
  {
    uint64_t v5 = objc_msgSend(v4, "pk_indexDictionaryByApplyingBlock:", &stru_10073A8B8);
    v14[0] = @"unique_id";
    v14[1] = @"is_cloud_kit_archived";
    v14[2] = @"cloud_kit_metadata";
    v14[3] = @"is_cloud_kit_securely_archived";
    v14[4] = @"cloud_kit_secure_metadata";
    v14[5] = @"ingested_date";
    v14[6] = @"modified_date";
    v14[7] = @"revoked";
    id v6 = +[NSArray arrayWithObjects:v14 count:8];
    id v7 = [v5 allKeys];
    uint64_t database = self->_database;
    unsigned int v9 = +[Pass predicateForUniqueIDs:v7];
    id v10 = +[SQLiteEntity queryWithDatabase:database predicate:v9];

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1001698D0;
    v12[3] = &unk_100731258;
    id v13 = v5;
    id v11 = v5;
    [v10 enumeratePersistentIDsAndProperties:v6 usingBlock:v12];
  }
}

- (void)markPassAsSynced:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v6 = [v4 uniqueID];
  id v7 = +[Pass predicateForUniqueID:v6];
  id v8 = +[SQLiteEntity queryWithDatabase:database predicate:v7];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100169AA8;
  v10[3] = &unk_10073A8E0;
  id v11 = v4;
  id v9 = v4;
  +[Pass enumeratePassesForQuery:v8 withHandler:v10];
}

- (void)markAllPassesAsUnsyncedInContainer:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)PKCloudStorePassesSyncContainerName;
  id v6 = v4;
  id v7 = v5;
  if (v7 == v6)
  {

    goto LABEL_7;
  }
  id v8 = v7;
  if (!v6 || !v7)
  {

    goto LABEL_9;
  }
  unsigned int v9 = [v6 isEqualToString:v7];

  if (v9)
  {
LABEL_7:
    uint64_t v10 = +[Pass predicateForIsCloudKitArchived:1];
LABEL_16:
    id v16 = (void *)v10;
    goto LABEL_17;
  }
LABEL_9:
  id v11 = (void *)PKCloudStorePassesSyncSecureContainerName;
  id v12 = v6;
  id v13 = v11;
  if (v13 == v12)
  {

LABEL_15:
    uint64_t v10 = +[Pass predicateForIsCloudKitSecurelyArchived:1];
    goto LABEL_16;
  }
  id v14 = v13;
  if (v6 && v13)
  {
    unsigned int v15 = [v12 isEqualToString:v13];

    if (!v15) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }

  if (v12) {
    goto LABEL_18;
  }
  id v18 = +[Pass predicateForIsCloudKitArchived:1];
  v23[0] = v18;
  id v19 = +[Pass predicateForIsCloudKitSecurelyArchived:1];
  v23[1] = v19;
  id v20 = +[NSArray arrayWithObjects:v23 count:2];
  id v16 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v20];

LABEL_17:
  unsigned int v17 = +[SQLiteEntity queryWithDatabase:self->_database predicate:v16];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100169DD4;
  v21[3] = &unk_10073A8E0;
  id v22 = v6;
  +[Pass enumeratePassesForQuery:v17 withHandler:v21];

LABEL_18:
}

- (id)dbTransactionWithTransactionIdentifier:(id)a3
{
  return +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
}

- (BOOL)hasTransactionWithTransactionIdentifier:(id)a3
{
  id v3 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
  BOOL v4 = v3 != 0;

  return v4;
}

- (id)transactionWithTransactionIdentifier:(id)a3
{
  id v3 = [(PDDatabaseManager *)self dbTransactionWithTransactionIdentifier:a3];
  BOOL v4 = [v3 paymentTransaction];

  return v4;
}

- (id)transactionWithReferenceIdentifier:(id)a3
{
  id v3 = +[PaymentTransaction anyInDatabase:self->_database withReferenceIdentifier:a3];
  BOOL v4 = [v3 paymentTransaction];

  return v4;
}

- (BOOL)hasTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4
{
  BOOL v4 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:a3 forTransactionSourceIdentifier:a4];
  BOOL v5 = v4 != 0;

  return v5;
}

- (id)transactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4
{
  BOOL v4 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:a3 forTransactionSourceIdentifier:a4];
  BOOL v5 = [v4 paymentTransaction];

  return v5;
}

- (id)transactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5
{
  BOOL v5 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:a3 accountIdentifier:a4 accountType:a5];
  id v6 = [v5 paymentTransaction];

  return v6;
}

- (id)transactionsRequiringReviewForAccountWithIdentifier:(id)a3
{
  return +[PaymentTransaction paymentTransactionsRequiringReviewInDatabase:self->_database forAccountIdentifier:a3];
}

- (id)transactionsWithServiceIdentifier:(id)a3
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database withServiceIdentifier:a3];
}

- (id)ambiguousTransactionWithServiceIdentifier:(id)a3
{
  +[PaymentTransaction paymentTransactionsInDatabase:self->_database withServiceIdentifier:a3];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v15;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v15 != v7) {
          objc_enumerationMutation(v4);
        }
        unsigned int v9 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend(v9, "transactionSourceIdentifier", (void)v14);
        unint64_t v11 = [(PDDatabaseManager *)self transactionSourceTypeForTransactionSourceIdentifier:v10];

        if (!v11)
        {
          id v12 = v9;
          goto LABEL_11;
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  id v12 = 0;
LABEL_11:

  return v12;
}

- (id)primaryAccountIdentifierForTransactionSourceIdentifier:(id)a3
{
  id v4 = [(PDDatabaseManager *)self passUniqueIdentifierForTransactionSourceIdentifier:a3];
  id v5 = +[Pass anyInDatabase:self->_database withUniqueID:v4];
  id v6 = v5;
  if (v5)
  {
    uint64_t v7 = [v5 primaryAccountIdentifier];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

- (id)passUniqueIdentifierForTransactionWithIdentifier:(id)a3
{
  id v3 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 passUniqueIdentifier];

  return v4;
}

- (id)ambiguousPassUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3
{
  id v4 = [(PDDatabaseManager *)self ambiguousTransactionWithServiceIdentifier:a3];
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 serviceIdentifier];
    uint64_t v7 = [v5 transactionSourceIdentifier];
    id v8 = [(PDDatabaseManager *)self passUniqueIdentifierForTransactionWithServiceIdentifier:v6 transactionSourceIdentifier:v7];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

- (id)paymentTransactionsWithFullPaymentHashes:(id)a3 transactionSourceIdentifiers:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([v7 count])
  {
    id v8 = +[PaymentTransaction paymentTransactionsInDatabase:self->_database withFullPaymentHashes:v6 transactionSourceIdentifiers:v7];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

- (id)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4
{
  id v4 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:a3 forTransactionSourceIdentifier:a4];
  id v5 = [v4 passUniqueIdentifier];

  return v5;
}

- (id)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5
{
  id v5 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:a3 accountIdentifier:a4 accountType:a5];
  id v6 = [v5 passUniqueIdentifier];

  return v6;
}

- (void)insertOrUpdateValueAddedServiceTransaction:(id)a3 forPassUniqueIdentifier:(id)a4 paymentTransaction:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  unint64_t v26 = [v8 identifier];
  unint64_t v11 = +[ValueAddedServiceTransaction anyInDatabase:withIdentifier:](ValueAddedServiceTransaction, "anyInDatabase:withIdentifier:", self->_database);
  id v12 = [v8 merchant];
  id v13 = [v12 identifier];
  long long v14 = [v13 hexEncoding];

  long long v15 = +[ValueAddedMerchant anyInDatabase:self->_database withIdentifier:v14];
  if (v15
    || ([v8 merchant],
        long long v16 = objc_claimAutoreleasedReturnValue(),
        [(PDDatabaseManager *)self insertOrUpdateValueAddedMerchant:v16],
        v16,
        +[ValueAddedMerchant anyInDatabase:self->_database withIdentifier:v14], (long long v15 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    long long v17 = [v15 valueAddedMerchant];
    [v8 setMerchant:v17];
  }
  if (v11)
  {
    [v11 updateWithValueAddedServiceTransaction:v8 paymentTransaction:v10];
  }
  else
  {
    if (v9)
    {
      id v18 = +[Pass anyInDatabase:self->_database withUniqueID:v9];
    }
    else
    {
      id v18 = 0;
    }
    id v25 = v10;
    if (v10)
    {
      uint64_t database = self->_database;
      id v20 = [v10 identifier];
      id v10 = +[PaymentTransaction anyInDatabase:database withIdentifier:v20];
    }
    id v21 = +[ValueAddedServiceTransaction insertValueAddedServiceTransaction:v8 withPass:v18 paymentTransaction:v10 valueAddedMerchant:v15 inDatabase:self->_database];
    +[ValueAddedServiceTransaction truncateEntitiesForPass:v18 inDatabase:self->_database toCount:PKMaxPerPassValueAddedServiceTransactionHistory];

    id v10 = v25;
  }
  delegateQueue = self->_delegateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016A86C;
  block[3] = &unk_10072E238;
  void block[4] = self;
  id v28 = v9;
  id v29 = v8;
  id v23 = v8;
  id v24 = v9;
  dispatch_async(delegateQueue, block);
}

- (id)valueAddedServiceTransactionWithIdentifier:(id)a3
{
  id v3 = +[ValueAddedServiceTransaction anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 valueAddedServiceTransaction];

  return v4;
}

- (id)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(id)a3 limit:(int64_t)a4
{
  return +[ValueAddedServiceTransaction valueAddedServiceTransactionsInDatabase:self->_database forPassUniqueIdentifier:a3 limit:a4];
}

- (id)valueAddedServiceTransactionsForPaymentTransaction:(id)a3
{
  return +[ValueAddedServiceTransaction valueAddedServiceTransactionsInDatabase:self->_database forPaymentTransaction:a3];
}

- (unint64_t)numberOfValueAddedServiceTransactionsForMerchant:(id)a3
{
  return +[ValueAddedServiceTransaction numberOfValueAddedServiceTransactionsForMerchant:a3 inDatabase:self->_database];
}

- (void)insertOrUpdateValueAddedMerchant:(id)a3
{
  id v9 = a3;
  id v4 = [v9 identifier];
  id v5 = [v4 hexEncoding];

  id v6 = +[ValueAddedMerchant anyInDatabase:self->_database withIdentifier:v5];
  id v7 = v6;
  if (v6) {
    [v6 updateWithValueAddedMerchant:v9];
  }
  else {
    id v8 = +[ValueAddedMerchant insertValueAddedMerchant:v9 inDatabase:self->_database];
  }
}

- (id)valueAddedMerchantWithIdentifier:(id)a3
{
  id v3 = +[ValueAddedMerchant anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 valueAddedMerchant];

  return v4;
}

- (void)valueAddedMerchantWasPresented:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = [v4 identifier];
  id v6 = [v5 hexEncoding];
  id v7 = +[ValueAddedMerchant anyInDatabase:database withIdentifier:v6];

  objc_msgSend(v4, "setTimesPresented:", (char *)objc_msgSend(v4, "timesPresented") + 1);
  [v7 updateWithValueAddedMerchant:v4];
}

- (id)setDefaultPaymentApplication:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a4;
  if (v6)
  {
    uint64_t database = self->_database;
    id v8 = a3;
    id v9 = +[Pass anyInDatabase:database withUniqueID:v6];
    id v10 = self->_database;
    unint64_t v11 = [v8 applicationIdentifier];

    id v12 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
    id v13 = +[PaymentApplication anyInDatabase:v10 withApplicationIdentifier:v11 secureElementIdentifiers:v12];

    [v9 updateWithDefaultPaymentApplication:v13];
    long long v14 = [v9 pass];
    delegateQueue = self->_delegateQueue;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10016ACDC;
    block[3] = &unk_10072E238;
    void block[4] = self;
    id v20 = v6;
    id v21 = v13;
    id v16 = v13;
    dispatch_async(delegateQueue, block);
  }
  else
  {
    long long v14 = 0;
  }
  long long v17 = [(PDDatabaseManager *)self _registeredPass:v14];

  return v17;
}

- (BOOL)hasAnyMessagesForPassWithUniqueIdentifier:(id)a3
{
  id v3 = +[PaymentMessage anyInDatabase:self->_database forPassWithUniqueIdentifier:a3];
  BOOL v4 = v3 != 0;

  return v4;
}

- (BOOL)hasAnyTransactionsForTransactionSourceIdentifiers:(id)a3
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = a3;
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = +[PaymentTransaction anyInDatabase:withTransactionSourceIdentifier:](PaymentTransaction, "anyInDatabase:withTransactionSourceIdentifier:", self->_database, *(void *)(*((void *)&v12 + 1) + 8 * i), (void)v12);

        if (v9)
        {
          BOOL v10 = 1;
          goto LABEL_11;
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  BOOL v10 = 0;
LABEL_11:

  return v10;
}

- (BOOL)hasAnyTransactions
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database];
}

- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMerchantIdentifiers:a3];
}

- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  uint64_t v7 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:a4];
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMerchantIdentifiers:v6 forTransactionSourceIdentifiers:v7];

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  id v10 = a6;
  id v11 = a5;
  id v12 = a3;
  long long v13 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:a4];
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMerchantIdentifiers:v12 forTransactionSourceIdentifiers:v13 startDate:v11 endDate:v10];

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMapsIdentifiers:a3];
}

- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  uint64_t v7 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:a4];
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMapsIdentifiers:v6 forTransactionSourceIdentifiers:v7];

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  id v10 = a6;
  id v11 = a5;
  id v12 = a3;
  long long v13 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:a4];
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMapsIdentifiers:v12 forTransactionSourceIdentifiers:v13 startDate:v11 endDate:v10];

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMapsBrandIdentifiers:a3];
}

- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  uint64_t v7 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:a4];
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMapsBrandIdentifiers:v6 forTransactionSourceIdentifiers:v7];

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  id v10 = a6;
  id v11 = a5;
  id v12 = a3;
  long long v13 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:a4];
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withMapsBrandIdentifiers:v12 forTransactionSourceIdentifiers:v13 startDate:v11 endDate:v10];

  return (char)self;
}

- (BOOL)hasAnyTransactionsOfType:(int64_t)a3
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:self->_database withTransactionType:a3];
}

- (id)messagesForPassWithUniqueIdentifier:(id)a3
{
  id v3 = +[PaymentMessage paymentMessagesInDatabase:self->_database forPaymentPassUniqueIdentifier:a3];
  id v4 = +[NSPredicate predicateWithFormat:@"isValid == YES"];
  id v5 = [v3 filteredSetUsingPredicate:v4];

  return v5;
}

- (id)allMessagesForPassWithUniqueIdentifier:(id)a3
{
  return +[PaymentMessage paymentMessagesInDatabase:self->_database forPaymentPassUniqueIdentifier:a3];
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database forTransactionSourceIdentifiers:a3 withTransactionSource:a4 withBackingData:a5 startDate:a6 endDate:a7 orderedByDate:a8 limit:a9];
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 limit:(int64_t)a7
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database matchingPeerPaymentCounterpartHandles:a4 forTransactionSourceIdentifiers:a3 withTransactionSource:a5 withBackingData:a6 limit:a7];
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 forPeerPaymentSubtype:(int64_t)a5 withTransactionSource:(unint64_t)a6 withBackingData:(unint64_t)a7 limit:(int64_t)a8
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database matchingPeerPaymentCounterpartHandles:a4 forPeerPaymentSubtype:a5 forTransactionSourceIdentifiers:a3 withTransactionSource:a6 withBackingData:a7 limit:a8];
}

- (unint64_t)transactionsCountForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  return +[PaymentTransaction countInDatabase:self->_database forTransactionSourceIdentifiers:a3 withPeerPaymentCounterpartHandles:a4 startDate:a5 endDate:a6];
}

- (unint64_t)transactionsCountForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 forPeerPaymentSubtype:(int64_t)a5 startDate:(id)a6 endDate:(id)a7
{
  return +[PaymentTransaction countInDatabase:self->_database forTransactionSourceIdentifiers:a3 withPeerPaymentCounterpartHandles:a4 forPeerPaymentSubtype:a5 startDate:a6 endDate:a7];
}

- (id)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)a3 startDate:(id)a4 endDate:(id)a5
{
  uint64_t database = self->_database;
  id v9 = a5;
  id v10 = a4;
  id v11 = +[TransactionSource anyInDatabase:database withIdentifier:a3];
  id v12 = +[PaymentTransaction peerPaymentCounterpartHandlesforSource:v11 startDate:v10 endDate:v9 inDatabase:self->_database];

  return v12;
}

- (id)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)a3 excludingPaymentMode:(unint64_t)a4 startDate:(id)a5 endDate:(id)a6
{
  uint64_t database = self->_database;
  id v11 = a6;
  id v12 = a5;
  long long v13 = +[TransactionSource anyInDatabase:database withIdentifier:a3];
  long long v14 = +[PaymentTransaction peerPaymentCounterpartHandlesforSource:v13 excludingPaymentMode:a4 startDate:v12 endDate:v11 inDatabase:self->_database];

  return v14;
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 matchingMerchant:(id)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 limit:(int64_t)a7
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database matchingMerchant:a4 forTransactionSourceIdentifiers:a3 withTransactionSource:a5 withBackingData:a6 limit:a7];
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 merchantCategory:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database withMerchantCategory:a4 forTransactionSourceIdentifiers:a3 withTransactionSource:a5 withBackingData:a6 startDate:a7 endDate:a8 limit:a9];
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionType:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database withTransactionType:a4 forTransactionSourceIdentifiers:a3 withTransactionSource:a5 withBackingData:a6 startDate:a7 endDate:a8 limit:a9];
}

- (id)approvedTransactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction approvedPaymentTransactionsInDatabase:self->_database forTransactionSourceIdentifiers:a3 withTransactionSource:a4 withBackingData:a5 startDate:a6 endDate:a7 orderedByDate:a8 limit:a9];
}

- (id)pendingTransactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction pendingPaymentTransactionsInDatabase:self->_database forTransactionSourceIdentifiers:a3 withTransactionSource:a4 withBackingData:a5 startDate:a6 endDate:a7 orderedByDate:a8 limit:a9];
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 limit:(int64_t)a6
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database forTransactionSourceIdentifiers:a3 withTransactionSource:a4 withBackingData:a5 startDate:0 endDate:0 orderedByDate:1 limit:a6];
}

- (id)paymentTransactionForIdentifier:(id)a3
{
  id v3 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 paymentTransaction];

  return v4;
}

- (id)transactionsForRequest:(id)a3
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database forRequest:a3];
}

- (unint64_t)transactionsCountForRequest:(id)a3
{
  return +[PaymentTransaction countInDatabase:self->_database forRequest:a3];
}

- (id)transactionsForPredicate:(id)a3 limit:(int64_t)a4
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database forPredicate:a3 limit:a4];
}

- (void)totalAmount:(id *)a3 forTransactionsWithRequest:(id)a4 count:(unint64_t *)a5
{
}

- (id)transactionCountByPeriodForRequest:(id)a3 calendar:(id)a4 calendarUnit:(unint64_t)a5 includePurchaseTotal:(BOOL)a6
{
  BOOL v81 = a6;
  char v75 = a5;
  id v7 = a3;
  id v70 = a4;
  long long v80 = v7;
  id v8 = [v7 transactionSourceIdentifiers];
  id v77 = [v8 anyObject];
  unint64_t v9 = [(PDDatabaseManager *)self transactionSourceTypeForTransactionSourceIdentifier:v77];
  long long v119 = 0u;
  long long v120 = 0u;
  long long v121 = 0u;
  long long v122 = 0u;
  id v10 = v8;
  id v11 = [v10 countByEnumeratingWithState:&v119 objects:v124 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v120;
LABEL_3:
    uint64_t v13 = 0;
    while (1)
    {
      if (*(void *)v120 != v12) {
        objc_enumerationMutation(v10);
      }
      uint64_t v14 = *(void *)(*((void *)&v119 + 1) + 8 * v13);
      if (v9 == 3) {
        break;
      }
      if (!v9)
      {
        long long v17 = [(PDDatabaseManager *)self passUniqueIdentifierForTransactionSourceIdentifier:v14];
        id v16 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
        id v18 = [v16 associatedPassUniqueID];
        id v19 = v17;
        long long v15 = v19;
        if (v18 == v19)
        {

          goto LABEL_23;
        }
        if (v19) {
          BOOL v20 = v18 == 0;
        }
        else {
          BOOL v20 = 1;
        }
        if (v20)
        {
        }
        else
        {
          unsigned int v21 = [v18 isEqualToString:v19];

          if (v21)
          {
LABEL_23:
            id v22 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
            id v23 = [v22 currentBalance];
            id v78 = [v23 currency];
            uint64_t v71 = 1;
            goto LABEL_26;
          }
        }
        id v22 = [(PDDatabaseManager *)self associatedAccountIdentifierForPassWithUniqueIdentifier:v15];
        if (v22)
        {
          id v23 = [(PDDatabaseManager *)self accountWithIdentifier:v22];
          id v24 = [v23 creditDetails];
          id v78 = [v24 currencyCode];

          uint64_t v71 = 0;
LABEL_26:
        }
        else
        {
          uint64_t v71 = 0;
          id v78 = 0;
        }

        goto LABEL_28;
      }
      if (v11 == (id)++v13)
      {
        id v11 = [v10 countByEnumeratingWithState:&v119 objects:v124 count:16];
        if (v11) {
          goto LABEL_3;
        }
        goto LABEL_10;
      }
    }
    long long v15 = [(PDDatabaseManager *)self accountWithTransactionSourceIdentifier:v14];
    if ([v15 feature] != (id)5)
    {
      uint64_t v71 = 0;
      id v78 = 0;
      goto LABEL_29;
    }
    id v16 = [v15 savingsDetails];
    id v78 = [v16 currencyCode];
    uint64_t v71 = 3;
LABEL_28:

LABEL_29:
    if (v78) {
      goto LABEL_33;
    }
  }
  else
  {
LABEL_10:

    uint64_t v71 = 0;
  }
  id v25 = +[PaymentTransaction paymentTransactionsInDatabase:self->_database forTransactionSourceIdentifiers:v10 withTransactionSource:0 withBackingData:1 startDate:0 endDate:0 orderedByDate:1 limit:1];
  unint64_t v26 = [v25 anyObject];

  id v78 = [v26 currencyCode];

  if (v78 || !v81)
  {
LABEL_33:
    uint64_t v28 = 2;
    if ((v75 & 8) == 0) {
      uint64_t v28 = 3;
    }
    uint64_t v69 = v28;
    CFStringRef v29 = @"year";
    if ((v75 & 8) != 0) {
      CFStringRef v29 = @"month";
    }
    CFStringRef v74 = v29;
    id v30 = +[NSDate dateWithTimeIntervalSinceReferenceDate:0.0];
    id v31 = +[NSDate dateWithTimeIntervalSince1970:0.0];
    [v30 timeIntervalSinceDate:v31];
    double v33 = v32;

    id v73 = +[NSString stringWithFormat:@"SELECT STRFTIME('%%s',DATETIME(transaction_date + %ld, 'unixepoch', 'localtime', 'start of %@')) as period, COUNT(*) FROM payment_transaction", (uint64_t)v33, v74];
    BOOL v34 = +[PaymentTransaction predicateForRequest:v80];
    uint64_t v35 = self;
    uint64_t v36 = [v34 SQLJoinClausesForEntityClass:v35];

    [v36 count];
    id v37 = objc_alloc_init((Class)NSMutableString);
    long long v117 = 0u;
    long long v118 = 0u;
    long long v115 = 0u;
    long long v116 = 0u;
    id v38 = v36;
    id v39 = [v38 countByEnumeratingWithState:&v115 objects:v123 count:16];
    if (v39)
    {
      uint64_t v40 = *(void *)v116;
      do
      {
        for (i = 0; i != v39; i = (char *)i + 1)
        {
          if (*(void *)v116 != v40) {
            objc_enumerationMutation(v38);
          }
          uint64_t v42 = *(void *)(*((void *)&v115 + 1) + 8 * i);
          [v37 appendString:@" "];
          [v37 appendString:v42];
        }
        id v39 = [v38 countByEnumeratingWithState:&v115 objects:v123 count:16];
      }
      while (v39);
    }

    uint64_t v43 = self;
    double v44 = [v34 SQLForEntityClass:v43];
    double v45 = +[NSString stringWithFormat:@" WHERE %@ ", v44];

    if (v81)
    {
      uint64_t v46 = [v45 stringByAppendingString:@" AND currency_code = ? "];

      double v45 = (void *)v46;
    }
    char v72 = +[NSString stringWithFormat:@"%@%@%@%@", v73, v37, v45, @"GROUP BY period ORDER BY period DESC"];
    long long v47 = +[NSDate dateWithTimeIntervalSince1970:1420070400.0];
    long long v48 = +[NSDate dateWithTimeIntervalSinceNow:864000.0];
    id v67 = v10;
    uint64_t v68 = v45;
    uint64_t v111 = 0;
    id v112 = &v111;
    uint64_t v113 = 0x2020000000;
    int v114 = 1;
    id v49 = objc_alloc_init((Class)NSMutableDictionary);
    BOOL v50 = (v75 & 8) == 0;
    uint64_t database = self->_database;
    v99[0] = _NSConcreteStackBlock;
    v99[1] = 3221225472;
    v99[2] = sub_10016C200;
    v99[3] = &unk_10073A908;
    id v76 = v34;
    id v100 = v76;
    int v106 = &v111;
    BOOL v109 = v81;
    uint64_t v107 = (uint64_t)v33;
    BOOL v65 = v50;
    BOOL v110 = v50;
    id v79 = v78;
    id v101 = v79;
    long long v102 = self;
    id v52 = v47;
    id v103 = v52;
    id v53 = v48;
    id v104 = v53;
    uint64_t v108 = v69;
    id v54 = v49;
    id v105 = v54;
    sub_100012DC8((uint64_t)database, v72, v99);
    BOOL v55 = [v80 transactionTypes];
    uint64_t v56 = (uint64_t)v33;
    id v10 = v67;
    id v57 = v68;
    if ([v55 count]) {
      unsigned int v58 = [v55 containsObject:&off_10078AF20];
    }
    else {
      unsigned int v58 = 1;
    }
    if (v71 && v58)
    {
      id v59 = +[NSString stringWithFormat:@"SELECT STRFTIME('%%s',DATETIME(grapes.d + %ld, 'unixepoch', 'localtime', 'start of day')) as day,STRFTIME('%%s',DATETIME(grapes.d + %ld, 'unixepoch', 'localtime', 'start of %@')) as period FROM grapes JOIN avocados ON avocados.a = grapes.pid WHERE grapes.c = 1 AND avocados.e = ? AND avocados.f = 'success'GROUP BY day, period", (uint64_t)v33, (uint64_t)v33, v74];
      BOOL v66 = +[NSString stringWithFormat:@"WITH groupingByDayAndYear (day, year) AS (%@) SELECT year, COUNT(*) FROM groupingByDayAndYear GROUP BY year", v59];

      id v60 = self->_database;
      v91[0] = _NSConcreteStackBlock;
      v91[1] = 3221225472;
      v91[2] = sub_10016C3E4;
      v91[3] = &unk_10073A930;
      BOOL v98 = v65;
      uint64_t v95 = v71;
      uint64_t v96 = (uint64_t)v33;
      void v91[4] = self;
      id v92 = v52;
      id v93 = v53;
      id v94 = v54;
      uint64_t v97 = v69;
      sub_100012DC8((uint64_t)v60, v66, v91);

      uint64_t v56 = (uint64_t)v33;
    }
    else
    {
      BOOL v66 = v73;
    }
    if (v81)
    {
      *((_DWORD *)v112 + 6) = 1;
      uint64_t v61 = +[NSString stringWithFormat:@"SELECT STRFTIME('%%s',DATETIME(transaction_date + %ld, 'unixepoch', 'localtime', 'start of %@')) as period, SUM(amount) FROM payment_transaction %@ %@ AND transaction_type = ? AND transaction_status IN (?, ?, ?) AND amount != ? AND amount != ? GROUP BY period ORDER BY period DESC", v56, v74, v37, v68];
      id v62 = self->_database;
      v83[0] = _NSConcreteStackBlock;
      v83[1] = 3221225472;
      v83[2] = sub_10016C5B8;
      v83[3] = &unk_10073A958;
      id v84 = v76;
      id v88 = &v111;
      uint64_t v89 = v56;
      BOOL v90 = v65;
      id v85 = v79;
      unint64_t v86 = self;
      id v87 = v54;
      sub_100012DC8((uint64_t)v62, v61, v83);

      id v10 = v67;
      id v57 = v68;
    }
    id v63 = [v54 allValues];
    id v27 = [v63 sortedArrayUsingComparator:&stru_10073A998];

    _Block_object_dispose(&v111, 8);
  }
  else
  {
    id v27 = 0;
  }

  return v27;
}

- (id)closestStartOfMonthFromDate:(id)a3
{
  id v3 = a3;
  id v4 = +[NSCalendar currentCalendar];
  id v5 = [v4 components:14 fromDate:v3];
  id v6 = [v4 dateFromComponents:v5];
  id v7 = PKStartOfNextMonth();
  [v3 timeIntervalSinceDate:v6];
  double v9 = fabs(v8);
  [v3 timeIntervalSinceDate:v7];
  double v11 = v10;

  if (v9 <= fabs(v11)) {
    uint64_t v12 = v6;
  }
  else {
    uint64_t v12 = v7;
  }
  id v13 = v12;

  return v13;
}

- (id)closestStartOfYearFromDate:(id)a3
{
  id v4 = a3;
  id v5 = +[NSCalendar currentCalendar];
  id v6 = [v5 components:6 fromDate:v4];
  id v7 = [v5 dateFromComponents:v6];
  double v8 = [(PDDatabaseManager *)self nextStartOfYearFromDate:v4];
  [v4 timeIntervalSinceDate:v7];
  double v10 = fabs(v9);
  [v4 timeIntervalSinceDate:v8];
  double v12 = v11;

  if (v10 <= fabs(v12)) {
    id v13 = v7;
  }
  else {
    id v13 = v8;
  }
  id v14 = v13;

  return v14;
}

- (id)nextStartOfYearFromDate:(id)a3
{
  id v3 = a3;
  id v4 = [objc_alloc((Class)NSCalendar) initWithCalendarIdentifier:NSCalendarIdentifierGregorian];
  id v5 = [v4 nextDateAfterDate:v3 matchingUnit:8 value:1 options:256];

  return v5;
}

- (id)transactionsWithTransactionSource:(unint64_t)a3 withBackingData:(unint64_t)a4 limit:(int64_t)a5
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database withTransactionSource:a3 withBackingData:a4 limit:a5];
}

- (id)transactionsOfTypes:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 limit:(int64_t)a6
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database withTransactionTypes:a3 withTransactionSource:a4 withBackingData:a5 limit:a6];
}

- (id)transactionsRequiringMerchantCleanupForTransactionSourceIdentifiers:(id)a3 withLastReprocessingDateBeforeDate:(id)a4 transactionDateWithinWindow:(double)a5
{
  return +[PaymentTransaction transactionsRequiringMerchantCleanupInDatabase:self->_database forTransactionSourceIdentifiers:a3 withLastReprocessingDateBeforeDate:a4 transactionDateWithinWindow:a5];
}

- (id)transactionsMissingWorldRegionWithLimit:(unint64_t)a3 onlyEligibleForProcessing:(BOOL)a4
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database missingWorldRegionWithLimit:a3 onlyEligibleForProcessing:a4];
}

- (BOOL)hasTransactionsMissingWorldRegionEligibleForProcessing
{
  return +[PaymentTransaction hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:self->_database];
}

- (id)transactionsWithoutRegionMatchingMapsMerchant:(id)a3 limit:(unint64_t)a4
{
  uint64_t database = self->_database;
  id v6 = [a3 identifier];
  return +[PaymentTransaction paymentTransactionsInDatabase:database matchingMapsMerchantIdentifierWithoutRegion:v6 limit:a4];
}

- (id)regionIdentifiersMatchingName:(id)a3 types:(id)a4 localeIdentifier:(id)a5 withRequest:(id)a6 limit:(unint64_t)a7
{
  return +[PaymentTransaction regionIdentifiersInDatabase:self->_database matchingName:a3 types:a4 localeIdentifier:a5 withRequest:a6 limit:a7];
}

- (void)associateTransaction:(id)a3 toRegion:(id)a4
{
  id v11 = a3;
  id v6 = a4;
  if (v11)
  {
    if (v6)
    {
      id v7 = +[WorldRegion insertOrUpdateRegion:v6 inDatabase:self->_database];
    }
    else
    {
      id v7 = 0;
    }
    uint64_t database = self->_database;
    double v9 = [v11 identifier];
    double v10 = +[PaymentTransaction anyInDatabase:database withIdentifier:v9];
    +[WorldRegion associateTransaction:v10 withWorldRegion:v7 inDatabase:self->_database];
  }
}

- (void)failedToAssociateTransactionToRegion:(id)a3 error:(id)a4
{
  if (a3)
  {
    uint64_t database = self->_database;
    id v7 = a4;
    id v9 = [a3 identifier];
    double v8 = +[PaymentTransaction anyInDatabase:database withIdentifier:v9];
    +[WorldRegion failedToAssociateTransaction:v8 error:v7 inDatabase:self->_database];
  }
}

- (id)paymentTransactionsWithIdentifiers:(id)a3 regions:(id *)a4 tags:(id *)a5
{
  return +[PaymentTransaction paymentTransactionsInDatabase:self->_database withIdentifiers:a3 regions:a4 tags:a5];
}

- (id)installmentTransactionsForInstallmentPlanIdentifier:(id)a3
{
  return +[PaymentTransaction transactionsInDatabase:self->_database forInstallmentPlanIdentifier:a3];
}

- (id)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)a3
{
  return +[PaymentTransaction installmentPlanTransactionsInDatabase:self->_database forTransactionSourceIdentifiers:a3];
}

- (id)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)a3 accountIdentifier:(id)a4 redeemed:(BOOL)a5 withRedemptionType:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8
{
  BOOL v65 = a5;
  id v13 = a3;
  id v14 = a4;
  id v67 = a7;
  id v66 = a8;
  long long v64 = self;
  uint64_t v56 = v14;
  long long v15 = +[Account accountWithIdentifier:v14 inDatabase:self->_database];
  id v16 = [v15 account];

  BOOL v55 = v16;
  long long v17 = [v16 creditDetails];
  id v18 = [v17 installmentPlans];

  if ([v18 count])
  {
    id v61 = objc_alloc_init((Class)NSMutableSet);
    long long v82 = 0u;
    long long v83 = 0u;
    long long v84 = 0u;
    long long v85 = 0u;
    id obj = v18;
    id v68 = [obj countByEnumeratingWithState:&v82 objects:v88 count:16];
    if (!v68) {
      goto LABEL_48;
    }
    uint64_t v63 = *(void *)v83;
    id v59 = v18;
    unint64_t v60 = a6;
    id v57 = v13;
    while (1)
    {
      for (i = 0; i != v68; i = (char *)i + 1)
      {
        if (*(void *)v83 != v63) {
          objc_enumerationMutation(obj);
        }
        BOOL v20 = *(void **)(*((void *)&v82 + 1) + 8 * i);
        unsigned int v21 = +[PaymentTransaction installmentTransactionsInDatabase:v64->_database forTransactionSourceIdentifiers:v13 installmentPlan:v20 redeemed:v65 withRedemptionType:a6 startDate:v67 endDate:v66];
        if (![v21 count]) {
          goto LABEL_46;
        }
        long long v80 = 0u;
        long long v81 = 0u;
        long long v78 = 0u;
        long long v79 = 0u;
        uint64_t v69 = v20;
        id v22 = [v20 lineItems];
        id v23 = [v22 countByEnumeratingWithState:&v78 objects:v87 count:16];
        id v70 = i;
        if (!v23)
        {
          CFStringRef v29 = 0;
          goto LABEL_20;
        }
        id v24 = v23;
        id v25 = v21;
        uint64_t v26 = *(void *)v79;
LABEL_10:
        uint64_t v27 = 0;
        while (1)
        {
          if (*(void *)v79 != v26) {
            objc_enumerationMutation(v22);
          }
          uint64_t v28 = *(void **)(*((void *)&v78 + 1) + 8 * v27);
          if ([v28 type] == (id)1) {
            break;
          }
          if (v24 == (id)++v27)
          {
            id v24 = [v22 countByEnumeratingWithState:&v78 objects:v87 count:16];
            if (!v24)
            {
              CFStringRef v29 = 0;
              goto LABEL_18;
            }
            goto LABEL_10;
          }
        }
        CFStringRef v29 = [v28 identifier];
LABEL_18:
        unsigned int v21 = v25;
LABEL_20:

        id v30 = +[NSDecimalNumber zero];
        long long v74 = 0u;
        long long v75 = 0u;
        long long v76 = 0u;
        long long v77 = 0u;
        id v31 = v21;
        id v32 = [v31 countByEnumeratingWithState:&v74 objects:v86 count:16];
        uint64_t v71 = v29;
        if (!v32)
        {

          goto LABEL_44;
        }
        id v33 = v32;
        id v62 = v21;
        id v72 = 0;
        uint64_t v34 = *(void *)v75;
        do
        {
          for (j = 0; j != v33; j = (char *)j + 1)
          {
            if (*(void *)v75 != v34) {
              objc_enumerationMutation(v31);
            }
            uint64_t v36 = *(void **)(*((void *)&v74 + 1) + 8 * (void)j);
            id v37 = [v36 rewardsTotalAmount];
            if (v37)
            {
              id v38 = +[NSDecimalNumber notANumber];
              id v39 = [v37 compare:v38];

              if (v39)
              {
                id v40 = [v36 lifecycleIdentifier];
                id v41 = v29;
                uint64_t v42 = v41;
                if (v40 != v41)
                {
                  if (v29 && v40)
                  {
                    unsigned int v43 = [v40 isEqualToString:v41];

                    if (!v43)
                    {
                      CFStringRef v29 = v71;
LABEL_38:
                      [v30 decimalNumberByAdding:v37];
                      id v30 = v44 = v30;
                      goto LABEL_39;
                    }
LABEL_35:
                    CFStringRef v29 = v71;
                    id v40 = v72;
                    id v72 = v36;
                  }
                  else
                  {
                  }
                  goto LABEL_38;
                }

                goto LABEL_35;
              }
            }
            double v44 = PKLogFacilityTypeGetObject();
            if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "Installment transaction does not have a valid rewardsTotalAmount", buf, 2u);
            }
LABEL_39:
          }
          id v33 = [v31 countByEnumeratingWithState:&v74 objects:v86 count:16];
        }
        while (v33);

        id v13 = v57;
        unsigned int v21 = v62;
        double v45 = v72;
        if (!v72)
        {
LABEL_44:
          double v45 = [v31 anyObject];
        }
        id v46 = objc_alloc_init((Class)PKPaymentTransaction);
        [v46 setTransactionType:14];
        [v46 setTransactionSource:4];
        a6 = v60;
        [v46 setRedemptionType:v60];
        long long v47 = [v45 transactionDate];
        [v46 setTransactionDate:v47];

        [v46 setInstallmentPlan:v69];
        long long v48 = [v69 totalAmount];
        [v46 setAmount:v48];

        id v49 = [v69 currencyCode];
        [v46 setCurrencyCode:v49];

        [v46 setTransactionStatus:1];
        BOOL v50 = [v69 identifier];
        [v46 setIdentifier:v50];

        [v46 setRewardsTotalAmount:v30];
        uint64_t v51 = [v46 currencyCode];
        [v46 setRewardsTotalCurrencyCode:v51];

        id v52 = [v69 rewards];
        [v46 setRewards:v52];

        [v46 setAccountType:2];
        [v61 addObject:v46];

        id v18 = v59;
        i = v70;
LABEL_46:
      }
      id v68 = [obj countByEnumeratingWithState:&v82 objects:v88 count:16];
      if (!v68)
      {
LABEL_48:

        id v53 = [v61 copy];
        goto LABEL_50;
      }
    }
  }
  id v53 = 0;
LABEL_50:

  return v53;
}

- (void)insertOrUpdateTransactionsForInstallmentPayments:(id)a3 installmentPlan:(id)a4 accountIdentifier:(id)a5 transactionSourceIdentifier:(id)a6 transactionProcessingBlock:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  objc_initWeak(&location, self);
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016D564;
  block[3] = &unk_10073A9E8;
  objc_copyWeak(&v29, &location);
  id v24 = v13;
  id v25 = v12;
  id v26 = v14;
  id v27 = v15;
  id v28 = v16;
  id v18 = v16;
  id v19 = v15;
  id v20 = v14;
  id v21 = v12;
  id v22 = v13;
  dispatch_sync(paymentTransactionUpdateQueue, block);

  objc_destroyWeak(&v29);
  objc_destroyWeak(&location);
}

- (BOOL)hasPaymentTransactionForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4
{
  return +[PaymentTransaction hasPaymentTransactionInDatabase:self->_database forTransactionSourceIdentifiers:a3 withTransactionSource:a4];
}

- (void)allPassTransactionIdentifiersWithBatchHandler:(id)a3
{
}

- (void)allPassTransactionIdentifiersWithAccountIdentifiers:(id)a3 batchHandler:(id)a4
{
}

- (void)setTags:(id)a3 toTransactionWithIdentifier:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a3;
  id v8 = +[PaymentTransaction anyInDatabase:database withIdentifier:a4];
  +[PaymentTransactionTag insertPaymentTransactionTags:forPaymentTransactionPID:inDatabase:](PaymentTransactionTag, "insertPaymentTransactionTags:forPaymentTransactionPID:inDatabase:", v7, [v8 persistentID], self->_database);
}

- (id)tagsForTransactionWithIdentifier:(id)a3
{
  id v4 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
  id v5 = v4;
  if (v4)
  {
    id v6 = -[PDDatabaseManager tagsForTransactionPID:](self, "tagsForTransactionPID:", [v4 persistentID]);
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (id)tagsForTransactionPID:(int64_t)a3
{
  return +[PaymentTransactionTag paymentTransactionTagsForPID:a3 inDatabase:self->_database];
}

- (id)allTagsWithTitles
{
  return +[PaymentTransactionTag allTagsWithTitlesInDatabase:self->_database];
}

- (id)compoundTags:(unint64_t)a3 limit:(unint64_t)a4
{
  return +[PaymentTransactionTag compoundTagsInDatabase:self->_database tagType:a3 limit:a4];
}

- (id)rewardsValuesForUnit:(unint64_t)a3
{
  return +[PaymentTransaction rewardsValuesForUnit:a3 inDatabase:self->_database];
}

- (id)mapsMerchants
{
  return +[MapsMerchant mapsMerchantsInDatabase:self->_database];
}

- (id)mapsBrands
{
  return +[MapsBrand mapsBrandsInDatabase:self->_database];
}

- (id)mapsBrandWithIdentifier:(unint64_t)a3
{
  uint64_t database = self->_database;
  id v4 = +[NSNumber numberWithUnsignedLongLong:a3];
  id v5 = +[MapsBrand anyInDatabase:database withIdentifier:v4];
  id v6 = [v5 mapsBrand];

  return v6;
}

- (id)mapsMerchantWithIdentifier:(unint64_t)a3
{
  uint64_t database = self->_database;
  id v4 = +[NSNumber numberWithUnsignedLongLong:a3];
  id v5 = +[MapsMerchant anyInDatabase:database withIdentifier:v4];
  id v6 = [v5 mapsMerchant];

  return v6;
}

- (void)updateMapsMerchant:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    uint64_t database = self->_database;
    id v8 = v4;
    id v6 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [v4 identifier]);
    id v7 = +[MapsMerchant anyInDatabase:database withIdentifier:v6];

    if ([v7 existsInDatabase]) {
      [v7 updateWithMapsMerchant:v8];
    }

    id v4 = v8;
  }
}

- (void)updateMapsBrand:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    uint64_t database = self->_database;
    id v8 = v4;
    id v6 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [v4 identifier]);
    id v7 = +[MapsBrand anyInDatabase:database withIdentifier:v6];

    if ([v7 existsInDatabase]) {
      [v7 updateWithMapsBrand:v8];
    }

    id v4 = v8;
  }
}

- (id)mapsBrandsWithLastUpdatedDateFromStartDate:(id)a3 endDate:(id)a4 limit:(int64_t)a5
{
  return +[MapsBrand mapsBrandsWithLastUpdatedDateFromStartDate:a3 endDate:a4 limit:a5 inDatabase:self->_database];
}

- (id)mapsMerchantsWithLastUpdatedDateFromStartDate:(id)a3 endDate:(id)a4 limit:(int64_t)a5
{
  return +[MapsMerchant mapsMerchantsWithLastUpdatedDateFromStartDate:a3 endDate:a4 limit:a5 inDatabase:self->_database];
}

- (id)passUniqueIdentifierForMostRecentVisibleTransaction
{
  v2 = +[PaymentTransaction mostRecentActiveTransactionInDatabase:self->_database];
  id v3 = [v2 passUniqueIdentifier];

  return v3;
}

- (id)tapToRadarPromptWithReason:(id)a3
{
  id v3 = +[TapToRadarPrompt tapToRadarPromptWithReason:a3 inDatabase:self->_database];
  id v4 = [v3 tapToRadarPrompt];

  return v4;
}

- (void)noteTapToRadarPromptedForReason:(id)a3 lastPromptDate:(id)a4
{
  id v4 = +[TapToRadarPrompt insertOrUpdateWithReason:a3 lastPromptDate:a4 inDatabase:self->_database];
}

- (id)dbPeerPaymentAccount
{
  return +[PeerPaymentAccount anyInDatabase:self->_database];
}

- (id)peerPaymentAccount
{
  v2 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  id v3 = [v2 peerPaymentAccount];

  return v3;
}

- (id)peerPaymentAccountsWithIdentifiers:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)NSMutableArray);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v16;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v16 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = +[PeerPaymentAccount anyInDatabase:withIdentifier:](PeerPaymentAccount, "anyInDatabase:withIdentifier:", self->_database, *(void *)(*((void *)&v15 + 1) + 8 * i), (void)v15);
        id v12 = [v11 peerPaymentAccount];
        [v5 safelyAddObject:v12];
      }
      id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v8);
  }

  id v13 = [v5 copy];
  return v13;
}

- (BOOL)hasPeerPaymentAccount
{
  v2 = +[PeerPaymentAccount anyInDatabase:self->_database];
  BOOL v3 = v2 != 0;

  return v3;
}

- (id)insertOrUpdatePeerPaymentAccount:(id)a3
{
  BOOL v3 = +[PeerPaymentAccount insertOrUpdatePeerPaymentAccount:a3 inDatabase:self->_database];
  id v4 = [v3 peerPaymentAccount];

  return v4;
}

- (id)removePeerPaymentAccount
{
  uint64_t v6 = 0;
  id v7 = &v6;
  uint64_t v8 = 0x3032000000;
  uint64_t v9 = sub_10002090C;
  double v10 = sub_100020F78;
  id v11 = 0;
  uint64_t database = self->_database;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10016E498;
  v5[3] = &unk_100732608;
  v5[4] = self;
  void v5[5] = &v6;
  sub_10000817C((uint64_t)database, v5);
  id v3 = (id)v7[5];
  _Block_object_dispose(&v6, 8);

  return v3;
}

- (id)dbPeerPaymentPreferences
{
  uint64_t database = self->_database;
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  id v4 = +[PeerPaymentPreferences anyInDatabase:database forPeerPaymentAccount:v3];

  return v4;
}

- (id)peerPaymentPreferences
{
  v2 = [(PDDatabaseManager *)self dbPeerPaymentPreferences];
  id v3 = [v2 peerPaymentPreferences];

  return v3;
}

- (id)insertOrUpdatePeerPaymentPreferences:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentPreferences];
  uint64_t v6 = PKLogFacilityTypeGetObject();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v7)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Matched Peer Payment Preferences", buf, 2u);
    }

    uint64_t v8 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
    [v5 updatePeerPaymentPreferences:v4 forPeerPaymentAccount:v8];
  }
  else
  {
    if (v7)
    {
      *(_WORD *)id v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Could Not Match Peer Payment Preferences", v12, 2u);
    }

    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Inserting New Peer Payment Preferences", v11, 2u);
    }

    uint64_t v8 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
    id v5 = +[PeerPaymentPreferences insertPeerPaymentPeferences:v4 forPeerPaymentAccount:v8 inDatabase:self->_database];
  }

  uint64_t v9 = [v5 peerPaymentPreferences];

  return v9;
}

- (id)removePeerPaymentPreferences
{
  uint64_t v6 = 0;
  BOOL v7 = &v6;
  uint64_t v8 = 0x3032000000;
  uint64_t v9 = sub_10002090C;
  double v10 = sub_100020F78;
  id v11 = 0;
  uint64_t database = self->_database;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10016E8B0;
  v5[3] = &unk_100732608;
  v5[4] = self;
  void v5[5] = &v6;
  sub_10000817C((uint64_t)database, v5);
  id v3 = (id)v7[5];
  _Block_object_dispose(&v6, 8);

  return v3;
}

- (void)addPeerPaymentAccountIdentifierToDatabaseTransactions
{
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  uint64_t database = self->_database;
  id v5 = [v3 associatedPassUniqueID];
  uint64_t v6 = +[Pass anyInDatabase:database withUniqueID:v5];

  id v7 = [v6 persistentID];
  uint64_t v8 = [v3 identifier];
  uint64_t v9 = v8;
  if (v8)
  {
    double v10 = self->_database;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_10016EAAC;
    void v11[3] = &unk_10073AA38;
    id v13 = v7;
    void v11[4] = self;
    id v12 = v8;
    sub_100012DC8((uint64_t)v10, @"SELECT pid, account_identifier, pass_pid from payment_transaction;", v11);
  }
}

- (id)peerPaymentPendingRequestsForRequestTokens:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v5 existsInDatabase])
  {
    uint64_t v6 = +[PeerPaymentPendingRequest peerPaymentPendingRequestsForRequestTokens:v4 inDatabase:self->_database];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

- (id)peerPaymentPendingRequestsForPeerPaymentAccount
{
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v3 existsInDatabase])
  {
    id v4 = +[PeerPaymentPendingRequest peerPaymentPendingRequestsForPeerPaymentAccountPID:inDatabase:](PeerPaymentPendingRequest, "peerPaymentPendingRequestsForPeerPaymentAccountPID:inDatabase:", [v3 persistentID], self->_database);
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

- (void)insertOrUpdatePeerPaymentPendingRequests:(id)a3
{
  id v5 = a3;
  id v4 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v4 existsInDatabase]) {
    +[PeerPaymentPendingRequest insertOrUpdatePeerPaymentPendingRequests:forPeerPaymentAccountPID:inDatabase:](PeerPaymentPendingRequest, "insertOrUpdatePeerPaymentPendingRequests:forPeerPaymentAccountPID:inDatabase:", v5, [v4 persistentID], self->_database);
  }
}

- (void)deletePeerPaymentPendingRequestsForRequestTokens:(id)a3
{
  id v5 = a3;
  id v4 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v4 existsInDatabase]) {
    +[PeerPaymentPendingRequest deleteEntitiesForRequestTokens:v5 inDatabase:self->_database];
  }
}

- (void)deletePeerPaymentPendingRequestsForPeerPaymentAccount
{
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v3 existsInDatabase]) {
    +[PeerPaymentPendingRequest deleteEntitiesForPeerPaymentAccountPID:inDatabase:](PeerPaymentPendingRequest, "deleteEntitiesForPeerPaymentAccountPID:inDatabase:", [v3 persistentID], self->_database);
  }
}

- (id)peerPaymentRecurringPayments
{
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v3 existsInDatabase])
  {
    id v4 = +[PeerPaymentRecurringPayment peerPaymentRecurringPaymentsForPeerPaymentAccountPID:inDatabase:](PeerPaymentRecurringPayment, "peerPaymentRecurringPaymentsForPeerPaymentAccountPID:inDatabase:", [v3 persistentID], self->_database);
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

- (id)peerPaymentRecurringPaymentWithIdentifier:(id)a3
{
  id v9 = a3;
  id v4 = a3;
  id v5 = +[NSArray arrayWithObjects:&v9 count:1];
  uint64_t v6 = +[PeerPaymentRecurringPayment peerPaymentRecurringPaymentsForIdentifiers:inDatabase:](PeerPaymentRecurringPayment, "peerPaymentRecurringPaymentsForIdentifiers:inDatabase:", v5, self->_database, v9);

  id v7 = [v6 firstObject];

  return v7;
}

- (id)peerPaymentRecurringPaymentsWithType:(unint64_t)a3
{
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v5 existsInDatabase])
  {
    uint64_t v6 = +[PeerPaymentRecurringPayment peerPaymentRecurringPaymentsForPeerPaymentType:withAccountPID:inDatabase:](PeerPaymentRecurringPayment, "peerPaymentRecurringPaymentsForPeerPaymentType:withAccountPID:inDatabase:", a3, [v5 persistentID], self->_database);
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

- (void)insertOrUpdatePeerPaymentRecurringPayments:(id)a3
{
  id v5 = a3;
  id v4 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v4 existsInDatabase]) {
    +[PeerPaymentRecurringPayment insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:](PeerPaymentRecurringPayment, "insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:", v5, [v4 persistentID], self->_database);
  }
}

- (void)updateAllPeerPaymentRecurringPayments:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v5 existsInDatabase])
  {
    id v31 = v5;
    +[PeerPaymentRecurringPayment insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:](PeerPaymentRecurringPayment, "insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:", v4, [v5 persistentID], self->_database);
    id v6 = objc_alloc_init((Class)NSMutableSet);
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    id v30 = v4;
    id v7 = v4;
    id v8 = [v7 countByEnumeratingWithState:&v38 objects:v47 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v39;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v39 != v10) {
            objc_enumerationMutation(v7);
          }
          id v12 = [*(id *)(*((void *)&v38 + 1) + 8 * i) identifier];
          objc_msgSend(v6, "pk_safelyAddObject:", v12);
        }
        id v9 = [v7 countByEnumeratingWithState:&v38 objects:v47 count:16];
      }
      while (v9);
    }

    +[PeerPaymentRecurringPayment recurringPaymentIdentifiersWithMemoInDatabase:self->_database];
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue();
    id v13 = [obj countByEnumeratingWithState:&v34 objects:v46 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v35;
      id v33 = self;
      do
      {
        for (j = 0; j != v14; j = (char *)j + 1)
        {
          if (*(void *)v35 != v15) {
            objc_enumerationMutation(obj);
          }
          long long v17 = *(void **)(*((void *)&v34 + 1) + 8 * (void)j);
          if (([v6 containsObject:v17] & 1) == 0)
          {
            double v45 = v17;
            long long v18 = +[NSArray arrayWithObjects:&v45 count:1];
            id v19 = +[PeerPaymentRecurringPayment peerPaymentRecurringPaymentsForIdentifiers:v18 inDatabase:self->_database];
            id v20 = [v19 firstObject];

            id v21 = [v20 memo];
            id v22 = [v21 text];
            if ([v22 length])
            {
              id v23 = [v20 type];

              if (!v23) {
                goto LABEL_24;
              }
LABEL_20:
              id v22 = objc_alloc_init((Class)PKPeerPaymentRecurringPayment);
              [v22 setIdentifier:v17];
              id v26 = [v20 senderAddress];
              [v22 setSenderAddress:v26];

              id v27 = [v20 recipientAddress];
              [v22 setRecipientAddress:v27];

              [v22 setMemo:v21];
              id v28 = PKLogFacilityTypeGetObject();
              if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                id v44 = v17;
                _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Downgrading recurring payment to memo only for identifier %@", buf, 0xCu);
              }

              id v42 = v22;
              id v24 = +[NSArray arrayWithObjects:&v42 count:1];
              +[PeerPaymentRecurringPayment insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:](PeerPaymentRecurringPayment, "insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:", v24, [v31 persistentID], v33->_database);
LABEL_23:

              self = v33;
            }
            else
            {
              id v24 = [v21 emoji];
              if (![v24 length]) {
                goto LABEL_23;
              }
              id v25 = [v20 type];

              self = v33;
              if (v25) {
                goto LABEL_20;
              }
            }
LABEL_24:
          }
          objc_msgSend(v6, "pk_safelyAddObject:", v17);
        }
        id v14 = [obj countByEnumeratingWithState:&v34 objects:v46 count:16];
      }
      while (v14);
    }
    id v29 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v44 = v6;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Cleaning up recurring payments not in identifiers: %@", buf, 0xCu);
    }

    +[PeerPaymentRecurringPayment deleteEntitiesForPeerPaymentRecurringPaymentNotIncludingIdentifiers:v6 inDatabase:self->_database];
    id v4 = v30;
    id v5 = v31;
  }
}

- (void)deletePeerPaymentRecurringPaymentsForIdentifiers:(id)a3
{
  id v5 = a3;
  id v4 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v4 existsInDatabase]) {
    +[PeerPaymentRecurringPayment deleteEntitiesForPeerPaymentRecurringPaymentIdentifiers:v5 inDatabase:self->_database];
  }
}

- (void)deleteAllPeerPaymentRecurringPayments
{
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v3 existsInDatabase]) {
    +[PeerPaymentRecurringPayment deleteEntitiesForPeerPaymentAccountPID:inDatabase:](PeerPaymentRecurringPayment, "deleteEntitiesForPeerPaymentAccountPID:inDatabase:", [v3 persistentID], self->_database);
  }
}

- (id)peerPaymentEncryptionCertificateForDestination:(unint64_t)a3
{
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v5 existsInDatabase])
  {
    id v6 = +[PeerPaymentEncryptionCertificate peerPaymentEncryptionCertificateForDestination:a3 inDatabase:self->_database];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (void)insertOrUpdatePeerPaymentEncryptionCertificate:(id)a3
{
  id v5 = a3;
  id v4 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v4 existsInDatabase]) {
    +[PeerPaymentEncryptionCertificate insertOrUpdatePeerPaymentEncryptionCertificate:forPeerPaymentAccountPID:inDatabase:](PeerPaymentEncryptionCertificate, "insertOrUpdatePeerPaymentEncryptionCertificate:forPeerPaymentAccountPID:inDatabase:", v5, [v4 persistentID], self->_database);
  }
}

- (void)deleteAllPeerPaymentEncryptionCertificates
{
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v3 existsInDatabase]) {
    +[PeerPaymentEncryptionCertificate deleteEncryptionCertificatesForPeerPaymentAccountPID:inDatabase:](PeerPaymentEncryptionCertificate, "deleteEncryptionCertificatesForPeerPaymentAccountPID:inDatabase:", [v3 persistentID], self->_database);
  }
}

- (id)peerPaymentCounterpartImageData
{
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v3 existsInDatabase])
  {
    id v4 = +[PeerPaymentCounterpartImageData peerPaymentCounterpartImageDataForPeerPaymentAccountPID:inDatabase:](PeerPaymentCounterpartImageData, "peerPaymentCounterpartImageDataForPeerPaymentAccountPID:inDatabase:", [v3 persistentID], self->_database);
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

- (id)peerPaymentCounterpartImageDataWithIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v5 existsInDatabase])
  {
    id v6 = +[PeerPaymentCounterpartImageData peerPaymentCounterpartImageDataWithIdentifier:v4 inDatabase:self->_database];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (id)peerPaymentCounterpartImageDataForTransactionWithIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v5 existsInDatabase])
  {
    id v6 = [(PDDatabaseManager *)self transactionWithTransactionIdentifier:v4];
    id v7 = [v6 peerPaymentCounterpartImageRecordIdentifier];
    id v8 = +[PeerPaymentCounterpartImageData peerPaymentCounterpartImageDataWithIdentifier:v7 inDatabase:self->_database];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

- (void)insertOrUpdatePeerPaymentCounterpartImageData:(id)a3
{
  id v5 = a3;
  id v4 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v4 existsInDatabase]) {
    +[PeerPaymentCounterpartImageData insertOrUpdatePeerPaymentCounterpartImageData:forPeerPaymentAccountPID:inDatabase:](PeerPaymentCounterpartImageData, "insertOrUpdatePeerPaymentCounterpartImageData:forPeerPaymentAccountPID:inDatabase:", v5, [v4 persistentID], self->_database);
  }
}

- (void)deletePeerPaymentCounterpartImageDataForIdentifier:(id)a3
{
  id v5 = a3;
  id v4 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v4 existsInDatabase]) {
    +[PeerPaymentCounterpartImageData deleteEntityForCounterpartImageDataIdentifier:v5 inDatabase:self->_database];
  }
}

- (void)deleteAllPeerPaymentCounterpartImageData
{
  id v3 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  if ([v3 existsInDatabase]) {
    +[PeerPaymentCounterpartImageData deleteEntitiesForPeerPaymentAccountPID:inDatabase:](PeerPaymentCounterpartImageData, "deleteEntitiesForPeerPaymentAccountPID:inDatabase:", [v3 persistentID], self->_database);
  }
}

- (BOOL)verifyIntegrity
{
  [(PDDatabaseManager *)self createGroupsIfNecessary];
  uint64_t v16 = 0;
  long long v17 = &v16;
  uint64_t v18 = 0x2020000000;
  uint64_t v19 = 0;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10016FD44;
  void v15[3] = &unk_10073AA60;
  void v15[4] = &v16;
  [WeakRetained readTrueUniqueIDs:v15];

  uint64_t v11 = 0;
  id v12 = &v11;
  uint64_t v13 = 0x2020000000;
  uint64_t v14 = 0;
  id v4 = objc_loadWeakRetained((id *)&self->_delegate);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_10016FD78;
  v10[3] = &unk_10073AA60;
  void v10[4] = &v11;
  [v4 readTrueTransactionReceiptUniqueiDs:v10];

  unint64_t v5 = [(PDDatabaseManager *)self numberOfRealPasses];
  BOOL v8 = 0;
  if (v5 == v17[3])
  {
    unint64_t v6 = [(PDDatabaseManager *)self numberOfTransactionReceipts];
    if (v6 == v12[3])
    {
      unint64_t v7 = [(PDDatabaseManager *)self countOfTransactionsWithAssociatedReceipts];
      if (v7 == v12[3]) {
        BOOL v8 = 1;
      }
    }
  }
  _Block_object_dispose(&v11, 8);
  _Block_object_dispose(&v16, 8);
  return v8;
}

- (unint64_t)countOfTransactionsWithAssociatedReceipts
{
  return +[PaymentTransaction numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:self->_database];
}

- (void)computeExtraneousUniqueIDs:(id *)a3 missingUniqueIDs:(id *)a4
{
  uint64_t v20 = 0;
  id v21 = &v20;
  uint64_t v22 = 0x3032000000;
  id v23 = sub_10002090C;
  id v24 = sub_100020F78;
  id v25 = 0;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100170024;
  v19[3] = &unk_10073AA60;
  void v19[4] = &v20;
  [WeakRetained readTrueUniqueIDs:v19];

  id v8 = objc_alloc_init((Class)NSMutableArray);
  uint64_t database = self->_database;
  uint64_t v10 = +[Pass predicateForValidStyle];
  uint64_t v11 = +[SQLiteEntity queryWithDatabase:database predicate:v10];

  CFStringRef v26 = @"unique_id";
  id v12 = +[NSArray arrayWithObjects:&v26 count:1];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10017006C;
  void v16[3] = &unk_1007388A8;
  uint64_t v18 = &v20;
  id v13 = v8;
  id v17 = v13;
  [v11 enumeratePersistentIDsAndProperties:v12 usingBlock:v16];

  if (a3) {
    objc_storeStrong(a3, v8);
  }
  if (a4)
  {
    uint64_t v14 = [(id)v21[5] allObjects];
    id v15 = *a4;
    *a4 = v14;
  }
  _Block_object_dispose(&v20, 8);
}

- (void)computeTransactionReceiptExtraneousUniqueIDs:(id *)a3 missingUniqueIDs:(id *)a4 removedUniqueIDs:(id *)a5
{
  uint64_t v40 = 0;
  long long v41 = &v40;
  uint64_t v42 = 0x3032000000;
  unsigned int v43 = sub_10002090C;
  id v44 = sub_100020F78;
  id v45 = 0;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472;
  v39[2] = sub_1001704A0;
  v39[3] = &unk_10073AA60;
  v39[4] = &v40;
  [WeakRetained readTrueTransactionReceiptUniqueiDs:v39];

  id v10 = objc_alloc_init((Class)NSMutableSet);
  uint64_t v11 = +[PaymentTransaction transactionReceiptUniqueIDsInDatabase:self->_database];
  id v31 = a3;
  id v12 = a4;
  id v13 = a5;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v14 = (id)v41[5];
  id v15 = [v14 countByEnumeratingWithState:&v35 objects:v47 count:16];
  if (v15)
  {
    uint64_t v16 = *(void *)v36;
    do
    {
      for (i = 0; i != v15; i = (char *)i + 1)
      {
        if (*(void *)v36 != v16) {
          objc_enumerationMutation(v14);
        }
        uint64_t v18 = *(void *)(*((void *)&v35 + 1) + 8 * i);
        if (([v11 containsObject:v18] & 1) == 0) {
          [v10 addObject:v18];
        }
      }
      id v15 = [v14 countByEnumeratingWithState:&v35 objects:v47 count:16];
    }
    while (v15);
  }

  [(id)v41[5] minusSet:v10];
  id v19 = objc_alloc_init((Class)NSMutableSet);
  uint64_t database = self->_database;
  id v21 = +[SQLiteBooleanPredicate truePredicate];
  uint64_t v22 = +[SQLiteEntity queryWithDatabase:database predicate:v21];

  CFStringRef v46 = @"unique_id";
  id v23 = +[NSArray arrayWithObjects:&v46 count:1];
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_1001704E8;
  v32[3] = &unk_1007388A8;
  long long v34 = &v40;
  id v24 = v19;
  id v33 = v24;
  [v22 enumeratePersistentIDsAndProperties:v23 usingBlock:v32];

  if (v31)
  {
    id v25 = [v24 copy];
    id v26 = *v31;
    *id v31 = v25;
  }
  if (v12)
  {
    id v27 = [(id)v41[5] copy];
    id v28 = *v12;
    id *v12 = v27;
  }
  if (v13)
  {
    id v29 = [v10 copy];
    id v30 = *v13;
    id *v13 = v29;
  }
  _Block_object_dispose(&v40, 8);
}

- (void)introduceDuplicateUniqueID
{
  uint64_t database = self->_database;
  id v4 = +[Pass predicateForValidStyle];
  unint64_t v5 = +[SQLiteEntity anyInDatabase:database predicate:v4];
  unint64_t v6 = [v5 pass];

  if (v6)
  {
    unint64_t v7 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v6 uniqueID];
      *(_DWORD *)buf = 138412290;
      id v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Introducing duplicate uniqueID: %@", buf, 0xCu);
    }
    id v9 = [(PDDatabaseManager *)self _passTypeForPass:v6];
    id v10 = [(PDDatabaseManager *)self _webServiceForPass:v6 passType:v9];
    id v11 = +[Pass insertPass:v6 withPassType:v9 webService:v10 transactionService:0 messageService:0 daemonPassData:0 inDatabase:self->_database];
  }
}

- (void)introduceExtraneousUniqueID
{
  uint64_t database = self->_database;
  id v4 = +[Pass predicateForValidStyle];
  unint64_t v5 = +[SQLiteEntity anyInDatabase:database predicate:v4];
  unint64_t v6 = [v5 pass];

  if (v6)
  {
    unint64_t v7 = PDGenerateRandomDeviceIdentifier();
    [v6 setUniqueID:v7];

    id v8 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = [v6 uniqueID];
      *(_DWORD *)buf = 138412290;
      id v14 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Introducing extraneous uniqueID: %@", buf, 0xCu);
    }
    id v10 = [(PDDatabaseManager *)self _passTypeForPass:v6];
    id v11 = [(PDDatabaseManager *)self _webServiceForPass:v6 passType:v10];
    id v12 = +[Pass insertPass:v6 withPassType:v10 webService:v11 transactionService:0 messageService:0 daemonPassData:0 inDatabase:self->_database];
  }
}

- (void)introduceMissingUniqueID
{
  uint64_t database = self->_database;
  id v3 = +[Pass predicateForValidStyle];
  id v4 = +[SQLiteEntity anyInDatabase:database predicate:v3];

  if (v4)
  {
    unint64_t v5 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v6 = [v4 valueForProperty:@"unique_id"];
      int v7 = 138412290;
      id v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Introducing missing uniqueID: %@", (uint8_t *)&v7, 0xCu);
    }
    [v4 deleteFromDatabase];
  }
}

- (id)_registeredPass:(id)a3
{
  if (a3)
  {
    id v4 = +[NSSet setWithObject:](NSSet, "setWithObject:");
    unint64_t v5 = [(PDDatabaseManager *)self _registeredPasses:v4];
    unint64_t v6 = [v5 anyObject];
  }
  else
  {
    unint64_t v6 = 0;
  }
  return v6;
}

- (id)_passTypeForPass:(id)a3
{
  id v4 = a3;
  unint64_t v5 = [v4 passTypeIdentifier];
  unint64_t v6 = +[PassType anyInDatabase:self->_database withPassTypeID:v5];
  if (!v6)
  {
    int v7 = [v4 teamID];
    unint64_t v6 = +[PassType insertPassTypeWithPassTypeID:v5 teamID:v7 inDatabase:self->_database];
  }
  return v6;
}

- (id)_webServiceForPass:(id)a3 passType:(id)a4
{
  id v6 = a4;
  int v7 = [a3 webServiceURL];
  if (v7)
  {
    id v8 = +[WebService anyInDatabase:self->_database withPassType:v6 serviceURL:v7];
    if (!v8)
    {
      id v8 = +[WebService insertWebServiceWithPassType:v6 serviceURL:v7 inDatabase:self->_database];
    }
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

- (id)_transactionServiceForPass:(id)a3
{
  id v4 = a3;
  unint64_t v5 = [v4 transactionServiceURL];
  id v6 = [v4 transactionServiceRegistrationURL];
  int v7 = [v4 transactionPushTopic];

  id v8 = [(PDDatabaseManager *)self _notificationServiceForPushTopic:v7 serviceType:0 serviceURL:v5 registrationURL:v6];

  return v8;
}

- (id)_messageServiceForPass:(id)a3
{
  id v4 = a3;
  unint64_t v5 = [v4 messageServiceURL];
  id v6 = [v4 messageServiceRegistrationURL];
  int v7 = [v4 messagePushTopic];

  id v8 = [(PDDatabaseManager *)self _notificationServiceForPushTopic:v7 serviceType:1 serviceURL:v5 registrationURL:v6];

  return v8;
}

- (id)_notificationServiceForPushTopic:(id)a3 serviceType:(unint64_t)a4 serviceURL:(id)a5 registrationURL:(id)a6
{
  id v10 = a3;
  id v11 = a5;
  id v12 = a6;
  id v13 = 0;
  if (v10)
  {
    if (v11)
    {
      id v13 = +[NotificationService anyInDatabase:self->_database withPushTopic:v10 serviceType:a4 serviceURL:v11 registrationURL:v12];
      if (!v13)
      {
        id v14 = [(PDDatabaseManager *)self _deviceIdentifierForExistingServiceURL:v11 registrationURL:v12];
        if (!v14)
        {
          id v14 = PDGenerateRandomDeviceIdentifier();
        }
        id v13 = +[NotificationService insertNotificationServiceWithPushTopic:v10 serviceType:a4 serviceURL:v11 registrationURL:v12 deviceIdentifier:v14 inDatabase:self->_database];
      }
    }
  }

  return v13;
}

- (id)_deviceIdentifierForExistingServiceURL:(id)a3 registrationURL:(id)a4
{
  id v4 = +[NotificationService anyInDatabase:self->_database withServiceURL:a3 registrationURL:a4];
  unint64_t v5 = [v4 notificationService];
  id v6 = [v5 deviceIdentifier];

  return v6;
}

- (void)_deleteNotificationServiceIfOrphaned:(id)a3
{
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    int v7 = v4;
    id v6 = +[Pass anyInDatabase:self->_database withNotificationService:v4];

    id v5 = v7;
    if (!v6)
    {
      id v4 = [v7 deleteFromDatabase];
      id v5 = v7;
    }
  }
  _objc_release_x1(v4, v5);
}

- (void)_deletePassTypeIfOrphaned:(id)a3
{
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    int v7 = v4;
    id v6 = +[Pass anyInDatabase:self->_database withPassType:v4];

    id v5 = v7;
    if (!v6)
    {
      id v4 = [v7 deleteFromDatabase];
      id v5 = v7;
    }
  }
  _objc_release_x1(v4, v5);
}

- (void)_deleteWebServiceIfOrphaned:(id)a3
{
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    int v7 = v4;
    id v6 = +[Pass anyInDatabase:self->_database withWebService:v4];

    id v5 = v7;
    if (!v6)
    {
      id v4 = [v7 deleteFromDatabase];
      id v5 = v7;
    }
  }
  _objc_release_x1(v4, v5);
}

- (id)_predicateForStyle:(int64_t)a3
{
  id v3 = +[NSNumber numberWithInteger:a3];
  id v4 = +[SQLiteComparisonPredicate predicateWithProperty:@"template" equalToValue:v3];

  return v4;
}

- (id)_predicateForStyles:(unint64_t)a3
{
  unint64_t v3 = a3;
  if (a3)
  {
    uint8x8_t v4 = (uint8x8_t)vcnt_s8((int8x8_t)a3);
    v4.i16[0] = vaddlv_u8(v4);
    id v5 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v4.u32[0]];
    for (uint64_t i = 0; i != 12; ++i)
    {
      if ((v3 >> i))
      {
        int v7 = +[NSNumber numberWithInteger:i];
        [v5 addObject:v7];
      }
    }
    unint64_t v3 = +[SQLiteCompoundPredicate predicateWithProperty:@"template" equalToValues:v5];
  }
  return (id)v3;
}

- (id)_predicateForPassTypes:(unint64_t)a3
{
  unint64_t v3 = a3;
  if (a3)
  {
    uint8x8_t v4 = (uint8x8_t)vcnt_s8((int8x8_t)a3);
    v4.i16[0] = vaddlv_u8(v4);
    id v5 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v4.u32[0]];
    for (uint64_t i = 0; i != 64; ++i)
    {
      if ((v3 >> i))
      {
        int v7 = +[NSNumber numberWithUnsignedInteger:i];
        [v5 addObject:v7];
      }
    }
    unint64_t v3 = +[SQLiteCompoundPredicate predicateWithProperty:@"pass_flavor" equalToValues:v5];
  }
  return (id)v3;
}

- (id)_locatedPredicate
{
  v2 = +[SQLiteHasAssociatedEntityPredicate predicateWithAssociatedEntityClass:objc_opt_class()];
  unint64_t v3 = +[SQLiteHasAssociatedEntityPredicate predicateWithAssociatedEntityClass:objc_opt_class()];
  v7[0] = v2;
  v7[1] = v3;
  uint8x8_t v4 = +[NSArray arrayWithObjects:v7 count:2];
  id v5 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v4];

  return v5;
}

- (id)_unlocatedPredicate
{
  v2 = [(PDDatabaseManager *)self _locatedPredicate];
  unint64_t v3 = +[SQLiteCompoundPredicate negatedPredicate:v2];

  return v3;
}

- (id)_datedPassPredicate
{
  uint64_t v2 = objc_opt_class();
  return +[SQLiteHasAssociatedEntityPredicate predicateWithAssociatedEntityClass:v2];
}

- (id)_validPassPredicate
{
  uint64_t v2 = +[SQLiteNullPredicate isNullPredicateWithProperty:@"revoked"];
  v19[0] = v2;
  unint64_t v3 = +[SQLiteComparisonPredicate predicateWithProperty:@"revoked" notEqualToValue:&__kCFBooleanTrue];
  v19[1] = v3;
  uint8x8_t v4 = +[NSArray arrayWithObjects:v19 count:2];
  id v5 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v4];

  id v6 = +[SQLiteComparisonPredicate predicateWithProperty:@"voided" notEqualToValue:&__kCFBooleanTrue];
  int v7 = +[SQLiteNullPredicate isNullPredicateWithProperty:@"expiration_date"];
  v18[0] = v7;
  id v8 = +[NSDate date];
  id v9 = (void *)_SQLValueForDate();
  id v10 = +[SQLiteComparisonPredicate predicateWithProperty:@"expiration_date" greaterThanValue:v9];
  v18[1] = v10;
  id v11 = +[NSArray arrayWithObjects:v18 count:2];
  id v12 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v11];

  v17[0] = v5;
  v17[1] = v6;
  void v17[2] = v12;
  id v13 = +[Pass predicateForInMainStack];
  v17[3] = v13;
  id v14 = +[NSArray arrayWithObjects:v17 count:4];
  id v15 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v14];

  return v15;
}

- (id)_activeSecureElementPassPredicate
{
  id v3 = objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", &off_10078AE30, &off_10078AE48, &off_10078AF38, &off_10078AF50, &off_10078AF68, &off_10078AF20, 0);
  uint8x8_t v4 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  id v5 = [(PDDatabaseManager *)self _predicateForType:1];
  v12[0] = v5;
  id v6 = +[Pass predicateForValidStyle];
  v12[1] = v6;
  int v7 = +[Pass predicateForPaymentApplicationStates:v3];
  v12[2] = v7;
  id v8 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v4];
  v12[3] = v8;
  id v9 = +[NSArray arrayWithObjects:v12 count:4];
  id v10 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v9];

  return v10;
}

- (id)_transitPredicate
{
  uint64_t v2 = +[NSSet setWithObject:&off_10078AF80];
  id v3 = +[Pass predicateForPaymentApplicationNetworks:v2];
  v17[0] = v3;
  uint8x8_t v4 = +[Pass predicateForPaymentApplicationAppletDataFormatPrefix:PKTransitAppletDataFormatPrefix];
  v17[1] = v4;
  id v5 = +[NSArray arrayWithObjects:v17 count:2];
  id v6 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v5];

  int v7 = +[Pass predicateForPaymentCardType:0];
  v16[0] = v7;
  id v8 = +[Pass predicateForPaymentType:1000];
  v16[1] = v8;
  v16[2] = v6;
  id v9 = +[NSArray arrayWithObjects:v16 count:3];
  id v10 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v9];

  id v11 = +[Pass predicateForPaymentCardType:2];
  v15[0] = v11;
  v15[1] = v10;
  id v12 = +[NSArray arrayWithObjects:v15 count:2];
  id v13 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v12];

  return v13;
}

- (id)_predicateMatchingPassesForWebService:(id)a3
{
  id v3 = [(PDDatabaseManager *)self _databaseWebService:a3];
  uint8x8_t v4 = +[Pass predicateForWebService:v3];

  return v4;
}

- (id)_paymentNetworkIdentifiersForPaymentNetworks:(id)a3
{
  id v3 = a3;
  uint8x8_t v4 = +[NSMutableSet setWithCapacity:](NSMutableSet, "setWithCapacity:", [v3 count]);
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v5 = v3;
  id v6 = (char *)[v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    int v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", PKPaymentCredentialTypeForPaymentNetworkName(), v12);
        if (v10) {
          [v4 addObject:v10];
        }
      }
      int v7 = (char *)[v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }

  return v4;
}

- (id)_locatedCandidatePassesOfStyle:(int64_t)a3 matchingFurtherPredicate:(id)a4
{
  id v6 = a4;
  int v7 = [(PDDatabaseManager *)self _locatedPredicate];
  if (v6)
  {
    id v8 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", v7, v6, 0);
    uint64_t v9 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v8];

    int v7 = (void *)v9;
  }
  id v10 = [(PDDatabaseManager *)self _candidatePassesOfStyle:a3 matchingFurtherPredicate:v7];

  return v10;
}

- (id)_candidatePassesOfStyle:(int64_t)a3 matchingFurtherPredicate:(id)a4
{
  id v6 = a4;
  id v7 = objc_alloc((Class)NSArray);
  id v8 = [(PDDatabaseManager *)self _validPassPredicate];
  uint64_t v9 = [(PDDatabaseManager *)self _predicateForStyle:a3];
  id v28 = v6;
  id v10 = objc_msgSend(v7, "initWithObjects:", v8, v9, v6, 0);

  id v27 = v10;
  id v26 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v10];
  id v11 = +[Pass candidatePassesInDatabase:matchingPredicate:](Pass, "candidatePassesInDatabase:matchingPredicate:", self->_database);
  id v12 = objc_alloc_init((Class)NSMutableSet);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v13 = v11;
  id v14 = [v13 countByEnumeratingWithState:&v29 objects:v33 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v30;
    do
    {
      for (uint64_t i = 0; i != v15; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v30 != v16) {
          objc_enumerationMutation(v13);
        }
        uint64_t v18 = *(void **)(*((void *)&v29 + 1) + 8 * i);
        id v19 = [v18 passTypeIdentifier];
        uint64_t v20 = PKPassTypeForPassTypeIdentifier();

        if (v20 != 1)
        {
          objectSettingsManager = self->_objectSettingsManager;
          uint64_t v22 = [v18 uniqueIdentifier];
          BOOL v23 = sub_10045B5F8((BOOL)objectSettingsManager, 1, v22, objc_msgSend(+[PKPass classForPassType:](PKPass, "classForPassType:", v20), "defaultSettings"));

          if (!v23) {
            continue;
          }
        }
        [v12 addObject:v18];
      }
      id v15 = [v13 countByEnumeratingWithState:&v29 objects:v33 count:16];
    }
    while (v15);
  }

  if ([v12 count]) {
    id v24 = [v12 copy];
  }
  else {
    id v24 = 0;
  }

  return v24;
}

- (id)_databaseWebService:(id)a3
{
  uint64_t database = self->_database;
  id v5 = a3;
  id v6 = [v5 passTypeIdentifier];
  id v7 = +[PassType anyInDatabase:database withPassTypeID:v6];

  id v8 = self->_database;
  uint64_t v9 = [v5 serviceURL];

  id v10 = +[WebService anyInDatabase:v8 withPassType:v7 serviceURL:v9];

  return v10;
}

- (id)_databaseNotificationService:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = [v4 pushTopic];
  id v6 = [v4 serviceType];
  id v7 = [v4 serviceURL];
  id v8 = [v4 registrationURL];

  uint64_t v9 = +[NotificationService anyInDatabase:database withPushTopic:v5 serviceType:v6 serviceURL:v7 registrationURL:v8];

  return v9;
}

- (void)generateDemoTransactionsForAllPaymentPasses
{
  if ((PKStoreDemoModeEnabled() & 1) == 0 && !PKUIOnlyDemoModeEnabled()) {
    return;
  }
  id v3 = [(PDDatabaseManager *)self passesOfType:1];
  id v4 = objc_alloc_init((Class)NSMutableSet);
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v36 objects:v42 count:16];
  if (!v6)
  {
    id v8 = 0;
    goto LABEL_17;
  }
  id v7 = v6;
  id v8 = 0;
  uint64_t v9 = *(void *)v37;
  do
  {
    for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v37 != v9) {
        objc_enumerationMutation(v5);
      }
      id v11 = *(void **)(*((void *)&v36 + 1) + 8 * i);
      if ([v11 hasAssociatedPeerPaymentAccount])
      {
        [v11 serialNumber];
        id v8 = v12 = v8;
      }
      else
      {
        id v13 = [v11 associatedAccountServiceAccountIdentifier];

        if (!v13) {
          continue;
        }
        id v12 = [v11 associatedAccountServiceAccountIdentifier];
        [v4 addObject:v12];
      }
    }
    id v7 = [v5 countByEnumeratingWithState:&v36 objects:v42 count:16];
  }
  while (v7);
LABEL_17:

  id v14 = objc_alloc_init((Class)NSMutableSet);
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v15 = v4;
  id v16 = [v15 countByEnumeratingWithState:&v32 objects:v41 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v33;
    do
    {
      for (j = 0; j != v17; j = (char *)j + 1)
      {
        if (*(void *)v33 != v18) {
          objc_enumerationMutation(v15);
        }
        uint64_t v20 = [(PDDatabaseManager *)self accountUsersForAccountWithIdentifier:*(void *)(*((void *)&v32 + 1) + 8 * (void)j)];
        [v14 unionSet:v20];
      }
      id v17 = [v15 countByEnumeratingWithState:&v32 objects:v41 count:16];
    }
    while (v17);
  }

  id v21 = [v5 allObjects];
  +[PKDemoTransactionGenerator generateDemoFilesForPasses:v21 accountUsers:v14 peerPaymentPassSerialNumber:v8];

  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v22 = v5;
  id v23 = [v22 countByEnumeratingWithState:&v28 objects:v40 count:16];
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = *(void *)v29;
    do
    {
      for (k = 0; k != v24; k = (char *)k + 1)
      {
        if (*(void *)v29 != v25) {
          objc_enumerationMutation(v22);
        }
        uint64_t v27 = *(void *)(*((void *)&v28 + 1) + 8 * (void)k);
        -[PDDatabaseManager _applyDemoPaymentApplicationToPass:](self, "_applyDemoPaymentApplicationToPass:", v27, (void)v28);
        [(PDDatabaseManager *)self _applyDemoPaymentTransactionsToPass:v27];
      }
      id v24 = [v22 countByEnumeratingWithState:&v28 objects:v40 count:16];
    }
    while (v24);
  }
}

- (void)_applyDemoPaymentApplicationToPass:(id)a3
{
  id v4 = [a3 paymentPass];
  id v5 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  id v6 = [v4 paymentApplicationsForSecureElementIdentifiers:v5];
  if (![v6 count])
  {
    id v7 = objc_alloc_init((Class)PKPaymentApplication);
    id v8 = [v4 paymentApplications];
    id v9 = [v8 count];

    if (v9)
    {
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      id v10 = [v4 paymentApplications];
      id v11 = [v10 countByEnumeratingWithState:&v22 objects:v26 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v23;
        while (2)
        {
          for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v23 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = *(void **)(*((void *)&v22 + 1) + 8 * i);
            if (([v15 isAuxiliary] & 1) == 0)
            {
              id v16 = v15;

              id v7 = v16;
              goto LABEL_13;
            }
          }
          id v12 = [v10 countByEnumeratingWithState:&v22 objects:v26 count:16];
          if (v12) {
            continue;
          }
          break;
        }
      }
LABEL_13:
    }
    id v17 = +[NSString stringWithFormat:@"%u", arc4random_uniform(0x2706u) + 1];
    [v7 setDPANSuffix:v17];
    [v7 setSupportsInAppPayment:1];
    [v7 setSupportsContactlessPayment:1];
    [v7 setState:1];
    uint64_t v18 = PDGenerateRandomDeviceIdentifier();
    [v7 setDPANIdentifier:v18];

    id v19 = PDGenerateRandomDeviceIdentifier();
    [v7 setApplicationIdentifier:v19];

    uint64_t v20 = [v5 firstObject];
    [v7 setSecureElementIdentifier:v20];

    id v21 = +[NSSet setWithObject:v7];
    [v4 setPaymentApplications:v21];
  }
}

- (void)_applyDemoPaymentTransactionsToPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 uniqueID];
  uint64_t v6 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:v5];
  uint64_t v7 = [(PDDatabaseManager *)self primaryPaymentApplicationForPassUniqueIdentifier:v5];
  id v94 = v4;
  id v8 = [v4 paymentPass];
  id v93 = [v8 associatedAccountServiceAccountIdentifier];

  id v9 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  id v88 = [v9 identifier];
  id v92 = v9;
  uint64_t v89 = [v9 associatedPassUniqueID];
  id v100 = (void *)v6;
  id v10 = [(PDDatabaseManager *)self transactionsForTransactionSourceIdentifiers:v6 withTransactionSource:0 withBackingData:0 limit:0];
  long long v134 = 0u;
  long long v135 = 0u;
  long long v136 = 0u;
  long long v137 = 0u;
  id v11 = [v10 countByEnumeratingWithState:&v134 objects:v153 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v135;
    do
    {
      for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v135 != v13) {
          objc_enumerationMutation(v10);
        }
        id v15 = *(void **)(*((void *)&v134 + 1) + 8 * i);
        if ([v15 transactionType] != (id)13) {
          id v16 = [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:v15 withPassUniqueIdentifier:v5 paymentApplication:v7 insertionMode:2 performTruncation:0 insertedTransaction:0];
        }
      }
      id v12 = [v10 countByEnumeratingWithState:&v134 objects:v153 count:16];
    }
    while (v12);
  }
  BOOL v90 = (void *)v7;
  uint64_t v95 = (void *)v5;
  id v87 = v10;
  [(PDDatabaseManager *)self accountUsersForAccountWithIdentifier:v93];
  long long v130 = 0u;
  long long v131 = 0u;
  long long v132 = 0u;
  long long v133 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v101 = [obj countByEnumeratingWithState:&v130 objects:v152 count:16];
  if (v101)
  {
    uint64_t v99 = *(void *)v131;
    do
    {
      uint64_t v17 = 0;
      do
      {
        if (*(void *)v131 != v99) {
          objc_enumerationMutation(obj);
        }
        uint64_t v103 = v17;
        uint64_t v18 = *(void **)(*((void *)&v130 + 1) + 8 * v17);
        id v19 = [(PDDatabaseManager *)self transactionsForTransactionSourceIdentifiers:v100 withTransactionSource:0 withBackingData:0 limit:0];
        long long v126 = 0u;
        long long v127 = 0u;
        long long v128 = 0u;
        long long v129 = 0u;
        id v20 = [v19 countByEnumeratingWithState:&v126 objects:v151 count:16];
        if (v20)
        {
          id v21 = v20;
          uint64_t v22 = *(void *)v127;
          do
          {
            for (j = 0; j != v21; j = (char *)j + 1)
            {
              if (*(void *)v127 != v22) {
                objc_enumerationMutation(v19);
              }
              long long v24 = *(void **)(*((void *)&v126 + 1) + 8 * (void)j);
              long long v25 = [v24 transactionSourceIdentifier];
              if (v25)
              {
                id v26 = [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:v24 withTransactionSourceIdentifier:v25 insertionMode:2 performTruncation:0 insertedTransaction:0];
              }
              else
              {
                uint64_t v27 = [v18 transactionSourceIdentifiers];
                long long v28 = [v27 anyObject];
                id v29 = [(PDDatabaseManager *)self insertOrUpdatePaymentTransaction:v24 withTransactionSourceIdentifier:v28 insertionMode:2 performTruncation:0 insertedTransaction:0];
              }
            }
            id v21 = [v19 countByEnumeratingWithState:&v126 objects:v151 count:16];
          }
          while (v21);
        }

        uint64_t v17 = v103 + 1;
      }
      while ((id)(v103 + 1) != v101);
      id v101 = [obj countByEnumeratingWithState:&v130 objects:v152 count:16];
    }
    while (v101);
  }
  long long v30 = v95;
  if (v93)
  {
    long long v31 = +[NSSet setWithObject:&off_10078AE90];
    long long v32 = [(PDDatabaseManager *)self accountEventsForAccountIdentifier:v93 excludingTypes:v31];

    long long v124 = 0u;
    long long v125 = 0u;
    long long v122 = 0u;
    long long v123 = 0u;
    id v33 = v32;
    id v34 = [v33 countByEnumeratingWithState:&v122 objects:v150 count:16];
    if (v34)
    {
      id v35 = v34;
      uint64_t v36 = *(void *)v123;
      do
      {
        for (k = 0; k != v35; k = (char *)k + 1)
        {
          if (*(void *)v123 != v36) {
            objc_enumerationMutation(v33);
          }
          long long v38 = [*(id *)(*((void *)&v122 + 1) + 8 * (void)k) identifier];
          [(PDDatabaseManager *)self deleteAccountEventWithIdentifier:v38];
        }
        id v35 = [v33 countByEnumeratingWithState:&v122 objects:v150 count:16];
      }
      while (v35);
    }
  }
  id v149 = v94;
  long long v39 = +[NSArray arrayWithObjects:&v149 count:1];
  uint64_t v40 = [v92 associatedPassSerialNumber];
  +[PKDemoTransactionGenerator generateDemoFilesForPasses:v39 accountUsers:obj peerPaymentPassSerialNumber:v40];

  id v41 = objc_alloc_init((Class)PKDemoTransactionGeneratorConfiguration);
  uint64_t v42 = [v94 paymentPass];
  if ([v42 hasAssociatedPeerPaymentAccount])
  {
    unsigned int v43 = [v94 uniqueID];
    id v44 = v89;
    id v45 = v43;
    if (v44 == v45)
    {

      goto LABEL_43;
    }
    CFStringRef v46 = v45;
    if (v44 && v45)
    {
      unsigned __int8 v47 = [v44 isEqualToString:v45];

      if ((v47 & 1) == 0) {
        goto LABEL_46;
      }
LABEL_43:
      uint64_t v48 = 1;
      id v49 = v88;
      BOOL v50 = NSNumber_ptr;
      goto LABEL_48;
    }
  }
LABEL_46:
  uint64_t v51 = [v94 paymentPass];
  id v52 = [v51 associatedAccountServiceAccountIdentifier];

  BOOL v50 = NSNumber_ptr;
  if (!v52) {
    goto LABEL_49;
  }
  uint64_t v48 = 2;
  id v49 = v93;
LABEL_48:
  [v41 setAccountIdentifier:v49];
  [v41 setAccountType:v48];
LABEL_49:
  id v53 = PKCurrentUserAltDSID();
  [v41 setAltDSID:v53];

  id v54 = [v90 transactionSourceIdentifier];
  [v41 setTransactionSourceIdentifier:v54];

  uint64_t v55 = [v50[232] itemIdentifierForPass:v94];
  uint64_t v56 = v50[232];
  uint64_t v120 = 0;
  uint64_t v121 = 0;
  unint64_t v86 = (void *)v55;
  objc_msgSend(v56, "demoTransactionsAndEventsForItemIdentifier:configuration:transactions:events:");
  id v57 = 0;
  id v58 = 0;
  id v59 = PKLogFacilityTypeGetObject();
  log = v59;
  if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
  {
    id v60 = [v57 count];
    id v61 = [v58 count];
    id v62 = [v94 organizationName];
    *(_DWORD *)buf = 134219010;
    id v140 = v60;
    __int16 v141 = 2048;
    id v142 = v61;
    id v59 = log;
    __int16 v143 = 2112;
    id v144 = v62;
    __int16 v145 = 2112;
    BOOL v146 = v95;
    __int16 v147 = 2112;
    unsigned int v148 = v93;
    _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEFAULT, "Generating %ld demo transactions and %ld events for pass: %@, unqiueID: %@, accountIdentifier: %@", buf, 0x34u);

    long long v30 = v95;
  }

  v115[0] = _NSConcreteStackBlock;
  v115[1] = 3221225472;
  v115[2] = sub_100173148;
  v115[3] = &unk_10073AAB0;
  id v63 = v57;
  id v116 = v63;
  long long v117 = self;
  id v85 = v30;
  id v118 = v85;
  long long v83 = v63;
  id v84 = v90;
  id v119 = v84;
  [v63 enumerateObjectsUsingBlock:v115];
  v114[0] = _NSConcreteStackBlock;
  v114[1] = 3221225472;
  v114[2] = sub_1001731C4;
  v114[3] = &unk_10073AAD8;
  v114[4] = self;
  uint64_t v91 = v58;
  [v58 enumerateObjectsUsingBlock:v114];
  long long v112 = 0u;
  long long v113 = 0u;
  long long v110 = 0u;
  long long v111 = 0u;
  id v64 = obj;
  id v65 = [v64 countByEnumeratingWithState:&v110 objects:v138 count:16];
  if (v65)
  {
    id v66 = v65;
    uint64_t v67 = *(void *)v111;
    id v96 = v41;
    uint64_t v102 = *(void *)v111;
    do
    {
      id v68 = 0;
      id v104 = v66;
      do
      {
        if (*(void *)v111 != v67) {
          objc_enumerationMutation(v64);
        }
        uint64_t v69 = *(void **)(*((void *)&v110 + 1) + 8 * (void)v68);
        if (([v69 isCurrentUser] & 1) == 0)
        {
          id v70 = [v69 accountIdentifier];
          [v41 setAccountIdentifier:v70];

          [v41 setAccountType:2];
          uint64_t v71 = [v69 altDSID];
          [v41 setAltDSID:v71];

          id v72 = [v69 transactionSourceIdentifiers];
          id v73 = [v72 anyObject];
          [v41 setTransactionSourceIdentifier:v73];

          long long v74 = [v50[232] itemIdentifierForAccountUser:v69];
          long long v75 = v50[232];
          id v108 = 0;
          id v109 = 0;
          [v75 demoTransactionsAndEventsForItemIdentifier:v74 configuration:v41 transactions:&v109 events:&v108];
          id v76 = v109;
          id v77 = v108;
          if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
          {
            id v78 = [v76 count];
            id v79 = [v77 count];
            [v69 appleID];
            long long v81 = v80 = v64;
            long long v82 = [v69 accountIdentifier];
            *(_DWORD *)buf = 134218754;
            id v140 = v78;
            __int16 v141 = 2048;
            id v142 = v79;
            id v59 = log;
            __int16 v143 = 2112;
            id v144 = v81;
            __int16 v145 = 2112;
            BOOL v146 = v82;
            _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEFAULT, "Generating %ld demo transactions and %ld events for account user: %@, accountIdentifier: %@", buf, 0x2Au);

            id v64 = v80;
            id v41 = v96;
            BOOL v50 = NSNumber_ptr;
          }

          v106[0] = _NSConcreteStackBlock;
          v106[1] = 3221225472;
          v106[2] = sub_1001731D0;
          v106[3] = &unk_10073AB00;
          v106[4] = self;
          id v107 = v41;
          [v76 enumerateObjectsUsingBlock:v106];
          v105[0] = _NSConcreteStackBlock;
          v105[1] = 3221225472;
          v105[2] = sub_10017324C;
          v105[3] = &unk_10073AAD8;
          v105[4] = self;
          [v77 enumerateObjectsUsingBlock:v105];

          uint64_t v67 = v102;
          id v66 = v104;
        }
        id v68 = (char *)v68 + 1;
      }
      while (v66 != v68);
      id v66 = [v64 countByEnumeratingWithState:&v110 objects:v138 count:16];
    }
    while (v66);
  }
}

- (void)_applyDemoFelicaAppletStateToPass:(id)a3
{
  id v15 = a3;
  id v4 = [v15 uniqueID];
  uint64_t v5 = [v15 paymentPass];
  uint64_t v6 = [(PDDatabaseManager *)self primaryPaymentApplicationForPassUniqueIdentifier:v4];
  uint64_t v7 = (void *)v6;
  if (v5 && v6)
  {
    id v8 = PKHomeDirectoryPath();
    id v9 = [v8 stringByAppendingPathComponent:@"FelicaAppletHistory.plist"];

    id v10 = +[NSDictionary dictionaryWithContentsOfFile:v9];
    id v11 = [v15 serialNumber];
    id v12 = [v10 objectForKey:v11];

    if (v12)
    {
      id v13 = [objc_alloc((Class)PKFelicaAppletHistory) initWithDictionary:v12 source:1];
      id v14 = +[NSDate date];
      [(PDDatabaseManager *)self updateTransitAppletStateWithHistory:v13 transactionDate:v14 forPaymentApplication:v7 withPassUniqueIdentifier:v4 forceTransactionGeneration:0 balanceLabelDictionary:0 unitDictionary:0 planLabelDictionary:0 completion:0];
    }
  }
}

- (void)_updateCloudStoreWithTransactions:(id)a3 transactionSourceIdentifier:(id)a4
{
  id v6 = a3;
  id v21 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_cloudStoreCoordinator);

  if (WeakRetained)
  {
    if ([v6 count])
    {
      id v8 = objc_alloc_init((Class)NSMutableArray);
      id v9 = objc_alloc_init((Class)PKAsyncUnaryOperationComposer);
      long long v29 = 0u;
      long long v30 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      id v20 = v6;
      id v10 = v6;
      id v11 = [v10 countByEnumeratingWithState:&v29 objects:v33 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v30;
        do
        {
          for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v30 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = *(void **)(*((void *)&v29 + 1) + 8 * i);
            id v16 = [v15 serviceIdentifier];

            if (v16)
            {
              v26[0] = _NSConcreteStackBlock;
              v26[1] = 3221225472;
              void v26[2] = sub_1001736D4;
              v26[3] = &unk_100730C60;
              v26[4] = self;
              v26[5] = v15;
              id v27 = v21;
              id v28 = v8;
              [v9 addOperation:v26];
            }
          }
          id v12 = [v10 countByEnumeratingWithState:&v29 objects:v33 count:16];
        }
        while (v12);
      }

      uint64_t v17 = +[NSNull null];
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      v22[2] = sub_100173838;
      v22[3] = &unk_10073AB70;
      id v23 = v8;
      long long v24 = self;
      id v25 = v21;
      id v18 = v8;
      id v19 = [v9 evaluateWithInput:v17 completion:v22];

      id v6 = v20;
    }
    else
    {
      id v9 = PKLogFacilityTypeGetObject();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v35 = v21;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Cannot update the cloud store with a nil transaction for transactionSourceIdentifier %@", buf, 0xCu);
      }
    }
  }
}

- (id)featureApplications
{
  return +[FeatureApplication featureApplicationsInDatabase:self->_database];
}

- (id)featureApplicationsWithAccountIdentifier:(id)a3
{
  return +[FeatureApplication featureApplicationsForAccountIdentifier:a3 inDatabase:self->_database];
}

- (unint64_t)newAccountUserInvitationsCount
{
  return +[FeatureApplication newAccountUserInvitationsCountInDatabase:self->_database];
}

- (id)featureApplicationWithIdentifier:(id)a3
{
  id v3 = +[FeatureApplication featureApplicationWithIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 featureApplication];

  return v4;
}

- (id)setFeatureApplications:(id)a3
{
  id v4 = a3;
  uint64_t v5 = +[NSMutableSet set];
  id v6 = +[NSMutableArray array];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v7 = v4;
  id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v13 = objc_msgSend(v12, "applicationIdentifier", (void)v18);
        if (v13)
        {
          id v14 = +[FeatureApplication insertOrUpdateFeatureApplication:v12 inDatabase:self->_database];
          [v5 addObject:v13];
          id v15 = [v14 featureApplication];
          [v6 addObject:v15];
        }
      }
      id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v9);
  }

  id v16 = [v5 allObjects];
  +[FeatureApplication deleteFeatureApplicationsNotIncludingIdentifiers:v16 inDatabase:self->_database];

  return v6;
}

- (id)setFeatureApplications:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v20 = a4;
  id v7 = objc_alloc_init((Class)NSMutableSet);
  id v8 = objc_alloc_init((Class)NSMutableArray);
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v9 = v6;
  id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        id v15 = [v14 applicationIdentifier];
        if (v15)
        {
          id v16 = +[FeatureApplication insertOrUpdateFeatureApplication:v14 inDatabase:self->_database];
          [v7 addObject:v15];
          uint64_t v17 = [v16 featureApplication];
          [v8 addObject:v17];
        }
      }
      id v11 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v11);
  }

  long long v18 = [v7 allObjects];
  +[FeatureApplication deleteFeatureApplicationsNotIncludingIdentifiers:v18 forAccountIdentifier:v20 inDatabase:self->_database];

  return v8;
}

- (id)insertOrUpdateFeatureApplication:(id)a3
{
  id v3 = +[FeatureApplication insertOrUpdateFeatureApplication:a3 inDatabase:self->_database];
  id v4 = [v3 featureApplication];

  return v4;
}

- (void)deleteFeatureApplicationWithIdentifier:(id)a3
{
}

- (void)deleteAllFeatureApplications
{
}

- (void)deleteFeatureApplicationsWithAccountIdentifier:(id)a3
{
}

- (void)deleteAllPaymentTransactionTags
{
}

- (id)nextPossibleFetchDateForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5
{
  id v8 = a5;
  int64_t v9 = [(PDDatabaseManager *)self _accountPIDForEndpointBackoffType:a3 accountIdentifier:v8];
  if (v9)
  {
    id v10 = +[AccountEndpointBackOff anyInDatabase:self->_database forAccountType:a3 endpointType:a4 accountPID:v9];
    id v11 = [v10 nextPossibleFetchDate];
  }
  else
  {
    uint64_t v12 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 138412290;
      id v15 = v8;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Error: could not find an account pid for account identifier %@", (uint8_t *)&v14, 0xCu);
    }

    id v11 = 0;
  }

  return v11;
}

- (void)increaseRetryBackoffLevelForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5
{
  id v8 = a5;
  int64_t v9 = [(PDDatabaseManager *)self _accountPIDForEndpointBackoffType:a3 accountIdentifier:v8];
  if (v9)
  {
    int64_t v10 = v9;
    id v11 = +[AccountEndpointBackOff anyInDatabase:self->_database forAccountType:a3 endpointType:a4 accountPID:v9];
    uint64_t v12 = v11;
    if (v11) {
      [v11 increaseBackoffLevel];
    }
    else {
      id v14 = +[AccountEndpointBackOff insertIfNotExistsForAccountType:a3 endpointType:a4 accountPID:v10 inDatabase:self->_database];
    }
  }
  else
  {
    uint64_t v13 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 138412290;
      id v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Error: could not find an account pid for account identifier %@", (uint8_t *)&v15, 0xCu);
    }
  }
}

- (void)deleteRetryBackoffForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5
{
  int64_t v8 = [(PDDatabaseManager *)self _accountPIDForEndpointBackoffType:a3 accountIdentifier:a5];
  if (v8)
  {
    uint64_t database = self->_database;
    +[AccountEndpointBackOff deleteBackOffForAccountType:a3 endpointType:a4 accountPID:v8 inDatabase:database];
  }
}

- (int64_t)_accountPIDForEndpointBackoffType:(unint64_t)a3 accountIdentifier:(id)a4
{
  id v6 = a4;
  if (a3 - 2 >= 4)
  {
    if (a3 != 1)
    {
      id v9 = 0;
      goto LABEL_9;
    }
    id v7 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
    int64_t v8 = v7;
  }
  else
  {
    id v7 = +[Account anyInDatabase:self->_database withIdentifier:v6];
    int64_t v8 = v7;
    if (!v7)
    {
      id v9 = 0;
      goto LABEL_8;
    }
  }
  id v9 = [v7 persistentID];
LABEL_8:

LABEL_9:
  return (int64_t)v9;
}

- (id)dbAccountWithIdentifier:(id)a3
{
  return +[Account accountWithIdentifier:a3 inDatabase:self->_database];
}

- (id)accountWithIdentifier:(id)a3
{
  id v3 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 account];

  return v4;
}

- (id)accountsWithIdentifiers:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)NSMutableArray);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = -[PDDatabaseManager accountWithIdentifier:](self, "accountWithIdentifier:", *(void *)(*((void *)&v14 + 1) + 8 * i), (void)v14);
        [v5 safelyAddObject:v11];
      }
      id v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }

  id v12 = [v5 copy];
  return v12;
}

- (id)accountWithVirtualCardIdentifier:(id)a3
{
  return +[Account accountWithVirtualCardIdentifier:a3 inDatabase:self->_database];
}

- (id)accountWithPhysicalCardIdentifier:(id)a3
{
  return +[Account accountWithPhysicalCardIdentifier:a3 inDatabase:self->_database];
}

- (id)setAccounts:(id)a3
{
  id v4 = a3;
  id v5 = +[NSMutableSet set];
  id v6 = +[NSMutableArray array];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v7 = v4;
  id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v13 = +[Account insertOrUpdateAccount:inDatabase:](Account, "insertOrUpdateAccount:inDatabase:", v12, self->_database, (void)v18);
        long long v14 = [v12 accountIdentifier];
        [v5 addObject:v14];

        long long v15 = [v13 account];
        [v6 addObject:v15];
      }
      id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v9);
  }

  long long v16 = [v5 allObjects];
  +[Account deleteAccountsNotIncludingIdentifiers:v16 inDatabase:self->_database];

  return v6;
}

- (id)insertOrUpdateAccount:(id)a3
{
  id v3 = +[Account insertOrUpdateAccount:a3 inDatabase:self->_database];
  id v4 = [v3 account];

  return v4;
}

- (void)deleteAccountWithIdentifier:(id)a3
{
}

- (void)deleteAllAccounts
{
}

- (id)insertOrUpdateAccountUsers:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  id v8 = v7;
  if (v7)
  {
    id v9 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v7 persistentID]);
    uint64_t v10 = +[AccountUser insertOrUpdateAccountUsers:v6 forAccountPID:v9 inDatabase:self->_database];
    id v11 = objc_msgSend(v10, "pk_setByApplyingBlock:", &stru_10073ABB0);
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

- (id)insertOrUpdateAccountUser:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  id v8 = v7;
  if (v7)
  {
    id v9 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v7 persistentID]);
    uint64_t v10 = +[AccountUser insertOrUpdateAccountUser:v6 forAccountPID:v9 inDatabase:self->_database];
    id v11 = [v10 accountUser];
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

- (BOOL)hasAnyAccount
{
  return +[Account hasAnyAccountInDatabase:self->_database];
}

- (BOOL)hasAnyAccountWithType:(unint64_t)a3
{
  uint64_t database = self->_database;
  id v4 = +[NSNumber numberWithUnsignedInteger:a3];
  id v5 = +[Account anyInDatabase:database withType:v4];
  BOOL v6 = v5 != 0;

  return v6;
}

- (void)deleteAccountUserWithAltDSID:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v9 = a3;
  BOOL v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  id v7 = v6;
  if (v6)
  {
    id v8 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v6 persistentID]);
    +[AccountUser deleteAccountUserWithAltDSID:v9 forAccountPID:v8 inDatabase:self->_database];
  }
}

- (id)accountUsersForAccountWithIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  id v5 = v4;
  if (v4)
  {
    BOOL v6 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v4 persistentID]);
    id v7 = +[AccountUser accountUsersForAccountPID:v6 inDatabase:self->_database];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

- (id)accountUsersForAccountWithIdentifier:(id)a3 accessLevel:(unint64_t)a4
{
  BOOL v6 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  id v7 = v6;
  if (v6)
  {
    id v8 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v6 persistentID]);
    id v9 = +[AccountUser accountUsersForAccountPID:v8 accessLevel:a4 inDatabase:self->_database];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

- (id)accountUserForAccountWithIdentifier:(id)a3 handle:(id)a4
{
  id v6 = a4;
  id v7 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  id v8 = v7;
  if (v7)
  {
    id v9 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v7 persistentID]);
    uint64_t v10 = +[AccountUser accountUserForAccountPID:v9 handle:v6 inDatabase:self->_database];
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

- (id)setScheduledPayments:(id)a3 forAccount:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = +[NSMutableArray array];
  long long v19 = v7;
  id v9 = [v7 accountIdentifier];
  +[AccountPayment deleteScheduledPaymentsWithAccountIdentifier:v9 inDatabase:self->_database];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v10 = v6;
  id v11 = [v10 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v21 != v13) {
          objc_enumerationMutation(v10);
        }
        long long v15 = +[AccountPayment insertScheduledPayment:*(void *)(*((void *)&v20 + 1) + 8 * i) accountIdentifier:v9 inDatabase:self->_database];
        long long v16 = [v15 payment];

        [v8 safelyAddObject:v16];
      }
      id v12 = [v10 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v12);
  }

  id v17 = [v8 copy];
  return v17;
}

- (id)scheduledPaymentsWithAccountIdentifier:(id)a3 includeFailedRecurringPayments:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = +[AccountPayment scheduledPaymentsWithAccountIdentifier:v6 inDatabase:self->_database];
  id v8 = [v7 allObjects];

  if (v4)
  {
    id v9 = +[AccountPayment failedRecurringPaymentsWithAccountIdentifier:v6 inDatabase:self->_database];
    id v10 = [v9 allObjects];

    uint64_t v11 = [v8 arrayByAddingObjectsFromArray:v10];

    id v8 = (void *)v11;
  }

  return v8;
}

- (id)setTransfers:(id)a3 forAccount:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = +[NSMutableArray array];
  long long v22 = v7;
  id v9 = [v7 accountIdentifier];
  +[AccountTransfer deleteTransfersWithAccountIdentifier:v9 inDatabase:self->_database];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v10 = v6;
  id v11 = [v10 countByEnumeratingWithState:&v23 objects:v28 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v24;
    do
    {
      for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v24 != v13) {
          objc_enumerationMutation(v10);
        }
        long long v15 = +[AccountTransfer insertTransfer:*(void *)(*((void *)&v23 + 1) + 8 * i) accountIdentifier:v9 inDatabase:self->_database];
        long long v16 = [v15 transfer];

        [v8 safelyAddObject:v16];
      }
      id v12 = [v10 countByEnumeratingWithState:&v23 objects:v28 count:16];
    }
    while (v12);
  }

  id v17 = +[NSSortDescriptor sortDescriptorWithKey:@"transferDate" ascending:0];
  id v27 = v17;
  long long v18 = +[NSArray arrayWithObjects:&v27 count:1];
  long long v19 = [v8 sortedArrayUsingDescriptors:v18];

  id v20 = [v19 copy];
  return v20;
}

- (id)placedHoldsWithAccountIdentifier:(id)a3
{
  id v3 = +[AccountHold placedHoldsWithAccountIdentifier:a3 inDatabase:self->_database];
  BOOL v4 = [v3 allObjects];

  return v4;
}

- (BOOL)insertOrUpdateAccountEvent:(id)a3
{
  return +[AccountEvent insertOrUpdateAccountEvent:a3 inDatabase:self->_database];
}

- (BOOL)accountEventExistsWithIdentifier:(id)a3
{
  id v3 = +[AccountEvent accountEventWithIdentifier:a3 inDatabase:self->_database];
  BOOL v4 = v3 != 0;

  return v4;
}

- (id)accountEventWithIdentifier:(id)a3
{
  id v3 = +[AccountEvent accountEventWithIdentifier:a3 inDatabase:self->_database];
  BOOL v4 = [v3 event];

  return v4;
}

- (id)redemptionAccountEventWithRewardsAddedIdentifier:(id)a3
{
  return +[AccountEvent redemptionAccountEventWithRewardsAddedIdentifier:a3 inDatabase:self->_database];
}

- (id)redemptionAccountEventWithTransactionIdentifier:(id)a3
{
  return +[AccountEvent redemptionAccountEventWithTransactionIdentifier:a3 inDatabase:self->_database];
}

- (unint64_t)successfulRedemptionEventsToPeerPaymentForAccountIdentifier:(id)a3
{
  return +[AccountEvent successfulRedemptionEventsToPeerPaymentForAccountIdentifier:a3 inDatabase:self->_database];
}

- (id)accountEventsForAccountIdentifier:(id)a3 altDSID:(id)a4 types:(id)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(unint64_t)a9
{
  return +[AccountEvent accountEventsForAccountIdentifier:a3 altDSID:a4 types:a5 startDate:a6 endDate:a7 orderedByDate:a8 limit:a9 inDatabase:self->_database];
}

- (id)accountEventsForAccountIdentifier:(id)a3
{
  return +[AccountEvent accountEventsWithAccountIdentifier:a3 inDatabase:self->_database];
}

- (id)accountEventsForAccountIdentifier:(id)a3 excludingTypes:(id)a4
{
  return +[AccountEvent accountEventsWithAccountIdentifier:a3 excludingTypes:a4 inDatabase:self->_database];
}

- (void)deleteAccountEventWithIdentifier:(id)a3
{
}

- (void)deleteAccountEventsForAccountIdentifier:(id)a3
{
}

- (BOOL)hasAccountServicingEventsWithStatus:(unint64_t)a3
{
  return +[AccountServicingEvent hasServicingEventsWithStatus:a3 inDatabase:self->_database];
}

- (id)identifiersForAccountServicingEventsWithStatus:(unint64_t)a3
{
  return +[AccountEvent eventIdentifiersForEventsWithServicingStatus:a3 inDatabase:self->_database];
}

- (id)creditStatementWithIdentifier:(id)a3 accountIdentifier:(id)a4
{
  BOOL v4 = +[CreditAccountStatement creditAccountStatementsWithIdentifier:a3 withAccountIdentifier:a4 inDatabase:self->_database];
  id v5 = [v4 anyObject];
  id v6 = [v5 creditAccountStatement];

  return v6;
}

- (id)creditStatementWithIdentifier:(id)a3 accountIdentifiers:(id)a4
{
  BOOL v4 = +[CreditAccountStatement creditAccountStatementsWithIdentifier:a3 withAccountIdentifiers:a4 inDatabase:self->_database];
  id v5 = [v4 anyObject];
  id v6 = [v5 creditAccountStatement];

  return v6;
}

- (id)savingsStatementWithIdentifier:(id)a3 accountIdentifier:(id)a4
{
  return +[SavingsAccountStatement savingsStatementWithIdentifier:a3 accountIdentifier:a4 inDatabase:self->_database];
}

- (id)creditAccountStatementsForAccountIdentifier:(id)a3
{
  return +[CreditAccountStatement creditAccountStatementsForAccountIdentifier:a3 inDatabase:self->_database];
}

- (void)deleteCreditAccountStatementsForAccount:(id)a3
{
}

- (id)accountStatementMetadataForAccountIdentifier:(id)a3
{
  return +[AccountStatementMetadata accountStatementMetadataForAccountIdentifier:a3 inDatabase:self->_database];
}

- (id)accountStatementMetadataForStatementIdentifier:(id)a3 accountIdentifier:(id)a4
{
  BOOL v4 = +[AccountStatementMetadata anyInDatabase:self->_database forStatementIdentifier:a3 accountIdentifier:a4];
  id v5 = [v4 accountStatementMetadata];

  return v5;
}

- (void)deleteAccountStatementMetadataForStatementIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v4 = +[AccountStatementMetadata anyInDatabase:self->_database forStatementIdentifier:a3 accountIdentifier:a4];
  [v4 deleteFromDatabase];
}

- (id)latestStatementIdentifierThatNeedsMetadataProcessingForAccountIdentifier:(id)a3 accountType:(unint64_t)a4 maxProcessedAttemptCount:(int64_t)a5
{
  id v8 = a3;
  if (a4 == 1)
  {
    CFStringRef v9 = @"pineapples.c";
    CFStringRef v10 = @"pineapples.t";
    CFStringRef v11 = @"pineapples.b";
    CFStringRef v12 = @"pineapples";
    goto LABEL_5;
  }
  if (a4 == 4)
  {
    CFStringRef v9 = @"eggplant.d";
    CFStringRef v10 = @"eggplant.n";
    CFStringRef v11 = @"eggplant.b";
    CFStringRef v12 = @"eggplant";
LABEL_5:
    uint64_t v13 = +[AccountStatementMetadata latestStatementIdentifierThatNeedsMetadataProcessingForAccountIdentifier:v8 tableName:v12 statementIdentifierColumn:v11 accountIdentifierColumn:v10 openingDateColumn:v9 maxProcessedAttemptCount:a5 inDatabase:self->_database];
    goto LABEL_7;
  }
  uint64_t v13 = 0;
LABEL_7:

  return v13;
}

- (id)markStatementMetadataItems:(id)a3 asProcessed:(BOOL)a4 error:(unint64_t)a5 statementIdentifier:(id)a6 accountIdentifier:(id)a7
{
  BOOL v10 = a4;
  uint64_t database = self->_database;
  id v12 = a3;
  uint64_t v13 = +[AccountStatementMetadata anyInDatabase:database forStatementIdentifier:a6 accountIdentifier:a7];
  [v13 markStatementMetadataItems:v12 processed:v10 error:a5];

  long long v14 = [v13 accountStatementMetadata];

  return v14;
}

- (id)updateStatementMetadataWithReport:(id)a3 reportDate:(id)a4
{
  uint64_t database = self->_database;
  id v6 = a4;
  id v7 = a3;
  id v8 = [v7 statementIdentifier];
  CFStringRef v9 = [v7 accountIdentifier];
  BOOL v10 = +[AccountStatementMetadata anyInDatabase:database forStatementIdentifier:v8 accountIdentifier:v9];

  [v10 updateWithReport:v7 reportDate:v6];
  CFStringRef v11 = [v10 accountStatementMetadata];

  return v11;
}

- (id)insertOrUpdateAccountStatementMetadata:(id)a3
{
  id v3 = +[AccountStatementMetadata insertOrUpdateAccountStatementMetadata:a3 inDatabase:self->_database];
  id v4 = [v3 accountStatementMetadata];

  return v4;
}

- (void)insertOrUpdateCreditStatements:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id obj = v6;
  id v20 = [v6 countByEnumeratingWithState:&v25 objects:v30 count:16];
  if (v20)
  {
    uint64_t v19 = *(void *)v26;
    do
    {
      for (uint64_t i = 0; i != v20; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v26 != v19) {
          objc_enumerationMutation(obj);
        }
        CFStringRef v9 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        BOOL v10 = [v9 identifier];
        CFStringRef v11 = +[CreditAccountStatement creditAccountStatementsWithIdentifier:v10 withAccountIdentifier:v7 inDatabase:self->_database];

        if ([v11 count])
        {
          long long v23 = 0u;
          long long v24 = 0u;
          long long v21 = 0u;
          long long v22 = 0u;
          id v12 = v11;
          id v13 = [v12 countByEnumeratingWithState:&v21 objects:v29 count:16];
          if (v13)
          {
            id v14 = v13;
            uint64_t v15 = *(void *)v22;
            do
            {
              for (j = 0; j != v14; j = (char *)j + 1)
              {
                if (*(void *)v22 != v15) {
                  objc_enumerationMutation(v12);
                }
                [*(id *)(*((void *)&v21 + 1) + 8 * (void)j) updateWithCreditAccountStatement:v9];
              }
              id v14 = [v12 countByEnumeratingWithState:&v21 objects:v29 count:16];
            }
            while (v14);
          }
        }
        else
        {
          id v17 = +[CreditAccountStatement insertCreditAccountStatement:v9 withAccountIdentifier:v7 inDatabase:self->_database];
        }
      }
      id v20 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
    }
    while (v20);
  }
}

- (id)lastSavingsStatementForAccountIdentifier:(id)a3
{
  return +[SavingsAccountStatement lastSavingsAccountStatementForAccount:a3 inDatabase:self->_database];
}

- (id)savingsAccountStatementsForAccountIdentifier:(id)a3
{
  return +[SavingsAccountStatement savingsAccountStatementsForAccount:a3 inDatabase:self->_database];
}

- (void)insertOrUpdateSavingsAccountStatements:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      CFStringRef v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v6);
        }
        id v12 = +[SavingsAccountStatement insertOrUpdateSavingsAccountStatement:*(void *)(*((void *)&v13 + 1) + 8 * (void)v11) forAccount:v7 inDatabase:self->_database];
        CFStringRef v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }
}

- (void)deleteSavingsAccountStatementsWithoutPDFForAccount:(id)a3
{
}

- (void)deleteSavingsAccountStatementsForAccount:(id)a3
{
}

- (id)lastAccountTaxFormForAccountIdentifier:(id)a3
{
  return +[AccountTaxForm lastAccountTaxFormForAccount:a3 inDatabase:self->_database];
}

- (id)accountTaxFormsForAccountIdentifier:(id)a3
{
  return +[AccountTaxForm accountTaxFormsForAccount:a3 inDatabase:self->_database];
}

- (void)insertOrUpdateAccountTaxForms:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      CFStringRef v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v6);
        }
        id v12 = +[AccountTaxForm insertOrUpdateAccountTaxForm:*(void *)(*((void *)&v13 + 1) + 8 * (void)v11) forAccount:v7 inDatabase:self->_database];
        CFStringRef v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }
}

- (void)deleteAccountTaxFormsWithoutPDFForAccount:(id)a3
{
}

- (id)lastRedemptionEventToDestination:(unint64_t)a3 forAccountIdentifier:(id)a4 altDSID:(id)a5
{
  return +[AccountEvent lastRedemptionEventToDestination:a3 forAccountIdentifier:a4 altDSID:a5 inDatabase:self->_database];
}

- (id)deleteVirtualCardEncryptedDataForAccount:(id)a3
{
  return +[Account deleteVirtualCardEncryptedDataForAccount:a3 inDatabase:self->_database];
}

- (void)recomputeCategoryVisualizationMagnitudesForPassUniqueID:(id)a3 withStyle:(int64_t)a4
{
  id v6 = a3;
  id v8 = +[Pass anyInDatabase:self->_database withUniqueID:v6];
  id v9 = [v8 associatedAccountIdentifier];
  uint64_t v10 = +[Account anyInDatabase:self->_database withIdentifier:v9];
  if ([v10 feature] != (id)3)
  {
    CFStringRef v11 = [v8 valueForProperty:@"a"];
    if (v11)
    {
      unsigned int v12 = 1;
    }
    else
    {
      long long v13 = [v8 valueForProperty:@"b"];
      unsigned int v12 = [v13 BOOLValue];
    }
    if (v9)
    {
      if (v12)
      {
        long long v14 = [(PDDatabaseManager *)self accountWithIdentifier:v9];
        long long v15 = [(PDDatabaseManager *)self accountUsersForAccountWithIdentifier:v9];
        uint64_t v67 = objc_msgSend(v15, "pk_anyObjectPassingTest:", &stru_10073ABF0);

        id v60 = [(PDDatabaseManager *)self allAssociatedTransactionSourceIdentifiersForPassUniqueIdentifier:v6];
        long long v16 = -[PDDatabaseManager transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:](self, "transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:");
        id v58 = +[NSSortDescriptor sortDescriptorWithKey:@"transactionDate" ascending:0];
        unint64_t v86 = v58;
        id v17 = +[NSArray arrayWithObjects:&v86 count:1];
        id v59 = v16;
        id v66 = [v16 sortedArrayUsingDescriptors:v17];

        memset(v85, 0, sizeof(v85));
        id v18 = [v14 accessLevel];
        id v64 = v8;
        id v65 = v7;
        id v62 = v10;
        id v63 = v9;
        int64_t v57 = a4;
        id v61 = v14;
        if (!v18 || v18 == (id)2)
        {
          id obja = [v14 creditDetails];
          id v20 = [obja accountSummary];
          long long v22 = [v67 altDSID];
          long long v23 = [v20 accountUserActivityForAccountUserAltDSID:v22];
          uint64_t v21 = [v23 totalSpending];

          uint64_t v19 = obja;
        }
        else
        {
          if (v18 != (id)1) {
            goto LABEL_40;
          }
          uint64_t v19 = [v14 creditDetails];
          id v20 = [v19 cardBalance];
          uint64_t v21 = [v20 amount];
        }

        if (v21)
        {
          uint64_t v68 = PKCurrencyDecimalToStorageInteger();
          uint64_t v55 = v21;
          if (v68 >= 1)
          {
            long long v81 = 0u;
            long long v82 = 0u;
            long long v79 = 0u;
            long long v80 = 0u;
            id obj = v66;
            id v24 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v79, v84, 16, v21);
            if (v24)
            {
              id v25 = v24;
              uint64_t v26 = 0;
              uint64_t v27 = *(void *)v80;
              do
              {
                for (uint64_t i = 0; i != v25; uint64_t i = (char *)i + 1)
                {
                  if (*(void *)v80 != v27) {
                    objc_enumerationMutation(obj);
                  }
                  long long v29 = *(void **)(*((void *)&v79 + 1) + 8 * i);
                  id v30 = [v29 transactionType];
                  if (v30 == (id)13 || v30 == 0)
                  {
                    id v32 = v30;
                    id v33 = (char *)[v29 transactionStatus];
                    BOOL v34 = v32 == (id)13 || v32 == 0;
                    if (v34 && (unint64_t)(v33 - 8) <= 0xFFFFFFFFFFFFFFF9)
                    {
                      uint64_t v36 = [v29 amount];
                      if (v36)
                      {
                        long long v37 = [v29 amount];
                        uint64_t v38 = PKCurrencyDecimalToStorageInteger();
                      }
                      else
                      {
                        uint64_t v38 = 0;
                      }

                      if (v38 < 0 || v26 >= v68) {
                        goto LABEL_43;
                      }
                      long long v39 = [v29 merchant];
                      id v40 = [v39 category];

                      *((void *)v85 + (void)v40) += v38;
                      v26 += v38;
                    }
                  }
                }
                id v25 = [obj countByEnumeratingWithState:&v79 objects:v84 count:16];
              }
              while (v25);
            }
            else
            {
              uint64_t v26 = 0;
            }
LABEL_43:

LABEL_44:
            id v41 = -[PDDatabaseManager categoryVisualizationMagnitudesForPassUniqueID:](self, "categoryVisualizationMagnitudesForPassUniqueID:", v6, v55);
            id v42 = objc_alloc_init((Class)NSMutableSet);
            for (uint64_t j = 0; j != 8; ++j)
            {
              float v44 = (float)*((uint64_t *)v85 + j) / (float)v26;
              id v45 = objc_alloc_init((Class)PKCategoryVisualizationMagnitude);
              [v45 setPassUniqueIdentifier:v6];
              [v45 setBucket:j];
              [v45 setMagnitude:v44];
              [v42 addObject:v45];
            }
            id v46 = [v42 copy];
            if (PKEqualObjects())
            {
              int64_t v47 = v57;
              if (!v57) {
                goto LABEL_58;
              }
            }
            else
            {
              long long v77 = 0u;
              long long v78 = 0u;
              long long v75 = 0u;
              long long v76 = 0u;
              id v48 = v46;
              id v49 = [v48 countByEnumeratingWithState:&v75 objects:v83 count:16];
              if (v49)
              {
                id v50 = v49;
                uint64_t v51 = *(void *)v76;
                do
                {
                  for (k = 0; k != v50; k = (char *)k + 1)
                  {
                    if (*(void *)v76 != v51) {
                      objc_enumerationMutation(v48);
                    }
                    id v53 = +[CategoryVisualizationMagnitude insertOrUpdateMagnitude:*(void *)(*((void *)&v75 + 1) + 8 * (void)k) inDatabase:self->_database];
                  }
                  id v50 = [v48 countByEnumeratingWithState:&v75 objects:v83 count:16];
                }
                while (v50);
              }

              int64_t v47 = v57;
            }
            delegateQueue = self->_delegateQueue;
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472;
            block[2] = sub_100176328;
            block[3] = &unk_10072E170;
            void block[4] = self;
            id v72 = v6;
            id v73 = v46;
            int64_t v74 = v47;
            dispatch_async(delegateQueue, block);

LABEL_58:
            id v8 = v64;
            id v7 = v65;
            uint64_t v10 = v62;
            id v9 = v63;
            goto LABEL_59;
          }
LABEL_41:
          uint64_t v26 = 0;
          goto LABEL_44;
        }
LABEL_40:
        uint64_t v55 = 0;
        goto LABEL_41;
      }
    }
  }
LABEL_59:
}

- (id)cashbackByPeriodForTransactionSourceIdentifiers:(id)a3 withStartDate:(id)a4 endDate:(id)a5 calendar:(id)a6 calendarUnit:(unint64_t)a7 type:(unint64_t)a8
{
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v160 = a6;
  id v162 = objc_alloc_init((Class)NSMutableDictionary);
  id v170 = self;
  uint64_t v166 = v14;
  v167 = v13;
  id v184 = (id)a8;
  v165 = v15;
  long long v16 = +[PaymentTransaction paymentTransactionsInDatabase:self->_database forTransactionSourceIdentifiers:v13 withRedemptionType:a8 startDate:v14 endDate:v15];
  long long v219 = 0u;
  long long v220 = 0u;
  long long v221 = 0u;
  long long v222 = 0u;
  id v17 = [v16 countByEnumeratingWithState:&v219 objects:v230 count:16];
  v155 = v16;
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v220;
    uint64_t v191 = *(void *)v220;
    do
    {
      id v20 = 0;
      id v181 = v18;
      do
      {
        if (*(void *)v220 != v19) {
          objc_enumerationMutation(v16);
        }
        uint64_t v21 = *(void **)(*((void *)&v219 + 1) + 8 * (void)v20);
        long long v22 = [v21 rewardsTotalAmount];
        if (v22
          && (+[NSDecimalNumber notANumber],
              long long v23 = objc_claimAutoreleasedReturnValue(),
              id v24 = [v22 compare:v23],
              v23,
              v24))
        {
          id v25 = [v21 redemptionEvent];
          uint64_t v26 = [v25 items];
          uint64_t v27 = [v26 anyObject];

          if (v27 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && [v27 type] == v184)
          {
            long long v28 = [v25 date];
            id v188 = [(PDDatabaseManager *)v170 _startOfTimeBlockForUnit:a7 inCalendar:v160 fromDate:v28 forward:0];
            objc_msgSend(v162, "objectForKey:");
            id v29 = (id)objc_claimAutoreleasedReturnValue();
            if (!v29)
            {
              id v29 = objc_alloc_init((Class)PKPaymentTransactionGroup);
              [v29 setStartDate:v188];
              [v29 setEndDate:v28];
              [v29 setType:5];
              id v30 = +[NSDecimalNumber zero];
              long long v31 = [v21 currencyCode];
              id v32 = PKCurrencyAmountCreate(v30, v31, 0);
              [v29 setTotalAmount:v32];

              [v29 setTransactionCount:0];
              [v29 setTransactions:&__NSArray0__struct];
              [v162 setObject:v29 forKey:v188];
            }
            id v33 = [v29 transactions];
            BOOL v34 = [v33 arrayByAddingObject:v21];
            [v29 setTransactions:v34];

            id v35 = [v29 endDate];
            id v36 = [v28 compare:v35];

            if (v36 == (id)1) {
              [v29 setEndDate:v28];
            }
            long long v37 = [v29 totalAmount];
            v185 = [v37 amount];
            uint64_t v38 = [v185 decimalNumberByAdding:v22];
            long long v39 = [v37 currency];
            id v40 = PKCurrencyAmountCreate(v38, v39, 0);

            [v29 setTotalAmount:v40];
            long long v16 = v155;
            id v18 = v181;
          }
          else
          {
            long long v28 = PKLogFacilityTypeGetObject();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Transaction does not have a valid rewards event", buf, 2u);
            }
          }

          uint64_t v19 = v191;
        }
        else
        {
          id v25 = PKLogFacilityTypeGetObject();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Transaction does not have a valid rewardsTotalAmount", buf, 2u);
          }
        }

        id v20 = (char *)v20 + 1;
      }
      while (v18 != v20);
      id v18 = [v16 countByEnumeratingWithState:&v219 objects:v230 count:16];
    }
    while (v18);
  }
  id v41 = [v167 anyObject];
  uint64_t v42 = [(PDDatabaseManager *)v170 passUniqueIdentifierForTransactionSourceIdentifier:v41];

  v153 = (void *)v42;
  v152 = +[Pass anyInDatabase:v170->_database withUniqueID:v42];
  v154 = [v152 associatedAccountIdentifier];
  unsigned int v43 = +[Account accountWithIdentifier:inDatabase:](Account, "accountWithIdentifier:inDatabase:");
  float v44 = [v43 account];

  unsigned int v151 = v44;
  id v45 = [v44 creditDetails];
  id v46 = [v45 installmentPlans];

  id v47 = objc_alloc_init((Class)NSMutableSet);
  long long v214 = 0u;
  long long v215 = 0u;
  long long v216 = 0u;
  long long v217 = 0u;
  id obj = v46;
  id v164 = v47;
  id v48 = &OBJC_METACLASS___AccountEntityOrdering;
  id v179 = [obj countByEnumeratingWithState:&v214 objects:v229 count:16];
  if (v179)
  {
    uint64_t v49 = *(void *)v215;
    uint64_t v171 = *(void *)v215;
    do
    {
      id v50 = 0;
      do
      {
        if (*(void *)v215 != v49) {
          objc_enumerationMutation(obj);
        }
        uint64_t v51 = *(void **)(*((void *)&v214 + 1) + 8 * (void)v50);
        id v52 = [&v48[57] installmentTransactionsInDatabase:v170->_database forTransactionSourceIdentifiers:v167 installmentPlan:v51 redeemed:1 withRedemptionType:v184 startDate:v166 endDate:v165];
        if ([v52 count])
        {
          id v53 = objc_msgSend(v52, "pk_setByApplyingBlock:", &stru_10073AC30);
          [v47 unionSet:v53];

          long long v212 = 0u;
          long long v213 = 0u;
          long long v210 = 0u;
          long long v211 = 0u;
          id v173 = v51;
          id v54 = [v51 lineItems];
          id v55 = [v54 countByEnumeratingWithState:&v210 objects:v228 count:16];
          if (v55)
          {
            uint64_t v56 = v48;
            uint64_t v57 = *(void *)v211;
            do
            {
              for (uint64_t i = 0; i != v55; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v211 != v57) {
                  objc_enumerationMutation(v54);
                }
                id v59 = *(void **)(*((void *)&v210 + 1) + 8 * i);
                if ([v59 type] == (id)1)
                {
                  id v55 = [v59 identifier];
                  goto LABEL_39;
                }
              }
              id v55 = [v54 countByEnumeratingWithState:&v210 objects:v228 count:16];
            }
            while (v55);
LABEL_39:
            id v48 = v56;
          }

          long long v189 = +[NSDecimalNumber zero];
          long long v206 = 0u;
          long long v207 = 0u;
          long long v208 = 0u;
          long long v209 = 0u;
          id v182 = v52;
          id v60 = v52;
          id v61 = [v60 countByEnumeratingWithState:&v206 objects:v227 count:16];
          if (!v61)
          {

            id v63 = 0;
            goto LABEL_77;
          }
          id v62 = v61;
          id v176 = v50;
          id v63 = 0;
          id v192 = 0;
          uint64_t v64 = *(void *)v207;
          while (2)
          {
            uint64_t v65 = 0;
LABEL_43:
            if (*(void *)v207 != v64) {
              objc_enumerationMutation(v60);
            }
            id v66 = *(void **)(*((void *)&v206 + 1) + 8 * v65);
            id v67 = [v66 lifecycleIdentifier];
            id v68 = v55;
            uint64_t v69 = v68;
            if (v67 != v68)
            {
              if (v55 && v67)
              {
                unsigned int v70 = [v67 isEqualToString:v68];

                if (!v70) {
                  goto LABEL_54;
                }
LABEL_51:
                uint64_t v71 = [v66 redemptionEvent];

                id v67 = v192;
                id v63 = (void *)v71;
                id v192 = v66;
              }
              else
              {
              }
LABEL_54:
              id v72 = [v66 rewardsTotalAmount];
              if (v72
                && (+[NSDecimalNumber notANumber],
                    id v73 = objc_claimAutoreleasedReturnValue(),
                    id v74 = [v72 compare:v73],
                    v73,
                    v74))
              {
                long long v75 = v189;
                long long v189 = [v189 decimalNumberByAdding:v72];
              }
              else
              {
                long long v75 = PKLogFacilityTypeGetObject();
                if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl((void *)&_mh_execute_header, v75, OS_LOG_TYPE_DEFAULT, "Installment transaction does not have a valid rewardsTotalAmount", buf, 2u);
                }
              }

              if (v62 == (id)++v65)
              {
                id v62 = [v60 countByEnumeratingWithState:&v206 objects:v227 count:16];
                if (!v62)
                {

                  id v47 = v164;
                  id v48 = &OBJC_METACLASS___AccountEntityOrdering;
                  uint64_t v49 = v171;
                  id v50 = v176;
                  if (v192)
                  {
                    if (v63)
                    {
LABEL_63:
                      id v186 = v63;
                      long long v76 = [v63 items];
                      long long v77 = [v76 anyObject];

                      if (v77
                        && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
                        && [v77 type] == v184)
                      {
                        long long v78 = [v186 date];
                        v168 = [(PDDatabaseManager *)v170 _startOfTimeBlockForUnit:a7 inCalendar:v160 fromDate:v78 forward:0];
                        objc_msgSend(v162, "objectForKey:");
                        id v79 = (id)objc_claimAutoreleasedReturnValue();
                        long long v80 = v189;
                        if (!v79)
                        {
                          id v79 = objc_alloc_init((Class)PKPaymentTransactionGroup);
                          [v79 setStartDate:v168];
                          [v79 setEndDate:v78];
                          [v79 setType:5];
                          long long v81 = +[NSDecimalNumber zero];
                          long long v82 = [v173 currencyCode];
                          PKCurrencyAmountCreate(v81, v82, 0);
                          v84 = long long v83 = v50;
                          [v79 setTotalAmount:v84];

                          id v50 = v83;
                          [v79 setTransactionCount:0];
                          [v79 setTransactions:&__NSArray0__struct];
                          [v162 setObject:v79 forKey:v168];
                        }
                        id v177 = v50;
                        id v85 = [v79 endDate];
                        id v86 = [v78 compare:v85];

                        if (v86 == (id)1) {
                          [v79 setEndDate:v78];
                        }
                        id v87 = objc_alloc_init((Class)PKPaymentTransaction);
                        [v87 setTransactionType:14];
                        [v87 setTransactionSource:4];
                        [v87 setRedemptionType:v184];
                        id v88 = [v192 transactionDate];
                        [v87 setTransactionDate:v88];

                        [v87 setInstallmentPlan:v173];
                        uint64_t v89 = [v173 totalAmount];
                        [v87 setAmount:v89];

                        BOOL v90 = [v173 currencyCode];
                        [v87 setCurrencyCode:v90];

                        [v87 setTransactionStatus:1];
                        uint64_t v91 = [v173 identifier];
                        [v87 setIdentifier:v91];

                        [v87 setRewardsTotalAmount:v189];
                        id v92 = [v87 currencyCode];
                        [v87 setRewardsTotalCurrencyCode:v92];

                        id v93 = [v173 rewards];
                        [v87 setRewards:v93];

                        [v87 setAccountType:2];
                        id v94 = [v79 transactions];
                        uint64_t v95 = [v94 arrayByAddingObject:v87];
                        [v79 setTransactions:v95];

                        id v96 = [v79 totalAmount];
                        id v174 = [v96 amount];
                        uint64_t v97 = [v174 decimalNumberByAdding:v189];
                        BOOL v98 = [v96 currency];
                        uint64_t v99 = PKCurrencyAmountCreate(v97, v98, 0);

                        [v79 setTotalAmount:v99];
                        id v47 = v164;
                        id v50 = v177;
                        id v48 = &OBJC_METACLASS___AccountEntityOrdering;
                        uint64_t v49 = v171;
                      }
                      else
                      {
                        long long v78 = PKLogFacilityTypeGetObject();
                        long long v80 = v189;
                        if (os_log_type_enabled(v78, OS_LOG_TYPE_DEFAULT))
                        {
                          *(_WORD *)buf = 0;
                          _os_log_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEFAULT, "Transaction does not have a valid rewards event", buf, 2u);
                        }
                      }

                      id v52 = v182;
                      goto LABEL_74;
                    }
LABEL_78:
                    id v63 = [v192 redemptionEvent];
                    goto LABEL_63;
                  }
LABEL_77:
                  id v192 = [v60 anyObject];
                  if (v63) {
                    goto LABEL_63;
                  }
                  goto LABEL_78;
                }
                continue;
              }
              goto LABEL_43;
            }
            break;
          }

          goto LABEL_51;
        }
LABEL_74:

        id v50 = (char *)v50 + 1;
      }
      while (v50 != v179);
      id v100 = [obj countByEnumeratingWithState:&v214 objects:v229 count:16];
      id v179 = v100;
    }
    while (v100);
  }

  id v101 = +[AccountEvent accountEventsForAccountIdentifier:v154 altDSID:0 types:&off_10078C288 startDate:v166 endDate:v165 orderedByDate:1 limit:0 inDatabase:v170->_database];
  long long v202 = 0u;
  long long v203 = 0u;
  long long v204 = 0u;
  long long v205 = 0u;
  id v157 = v101;
  id v169 = [v101 countByEnumeratingWithState:&v202 objects:v226 count:16];
  if (v169)
  {
    uint64_t v102 = *(void *)v203;
    uint64_t v156 = *(void *)v203;
    do
    {
      uint64_t v103 = 0;
      do
      {
        if (*(void *)v203 != v102) {
          objc_enumerationMutation(v101);
        }
        uint64_t v172 = v103;
        id v104 = *(void **)(*((void *)&v202 + 1) + 8 * v103);
        id v105 = [v104 items];
        int v106 = [v105 anyObject];

        id v183 = v104;
        id v107 = [v104 identifier];
        LOBYTE(v104) = [v47 containsObject:v107];

        if ((v104 & 1) == 0)
        {
          id v108 = [v106 rewards];
          id v109 = [v108 rewardsItems];

          if (v106 && [v109 count] && objc_msgSend(v106, "type") == v184)
          {
            v161 = v109;
            long long v110 = [v183 date];
            v158 = [(PDDatabaseManager *)v170 _startOfTimeBlockForUnit:a7 inCalendar:v160 fromDate:v110 forward:0];
            objc_msgSend(v162, "objectForKey:");
            id v111 = (id)objc_claimAutoreleasedReturnValue();
            if (!v111)
            {
              id v111 = objc_alloc_init((Class)PKPaymentTransactionGroup);
              [v111 setStartDate:v158];
              [v111 setEndDate:v110];
              [v111 setType:5];
              long long v112 = +[NSDecimalNumber zero];
              long long v113 = [v106 currencyAmount];
              int v114 = [v113 currency];
              long long v115 = PKCurrencyAmountCreate(v112, v114, 0);
              [v111 setTotalAmount:v115];

              [v111 setTransactionCount:0];
              [v111 setTransactions:&__NSArray0__struct];
              [v162 setObject:v111 forKey:v158];
            }
            id v116 = [v111 endDate];
            id v117 = [v110 compare:v116];

            if (v117 == (id)1) {
              [v111 setEndDate:v110];
            }
            long long v200 = 0u;
            long long v201 = 0u;
            long long v198 = 0u;
            long long v199 = 0u;
            id v175 = v161;
            id v190 = [v175 countByEnumeratingWithState:&v198 objects:v225 count:16];
            if (v190)
            {
              uint64_t v187 = *(void *)v199;
              v178 = v111;
              id v180 = v106;
              do
              {
                for (uint64_t j = 0; j != v190; uint64_t j = (char *)j + 1)
                {
                  if (*(void *)v199 != v187) {
                    objc_enumerationMutation(v175);
                  }
                  id v119 = *(void **)(*((void *)&v198 + 1) + 8 * (void)j);
                  uint64_t v120 = [v119 currencyAmount];
                  if (v120)
                  {
                    uint64_t v121 = objc_alloc_init((Class)PKPaymentTransaction);
                    [v121 setTransactionType:12];
                    [v121 setTransactionSource:4];
                    [v121 setRedemptionType:v184];
                    [v121 setTransactionDate:v110];
                    long long v122 = [v120 amount];
                    [v121 setAmount:v122];

                    long long v123 = [v120 currency];
                    [v121 setCurrencyCode:v123];

                    [v121 setTransactionStatus:1];
                    long long v124 = [v183 identifier];
                    [v121 setIdentifier:v124];

                    long long v125 = [v121 amount];
                    [v121 setRewardsTotalAmount:v125];

                    long long v126 = [v121 currencyCode];
                    [v121 setRewardsTotalCurrencyCode:v126];

                    id v127 = objc_alloc((Class)PKPaymentTransactionRewards);
                    v224 = v119;
                    long long v128 = +[NSArray arrayWithObjects:&v224 count:1];
                    id v193 = [v127 initWithRewardsItems:v128];

                    [v121 setRewards:v193];
                    long long v129 = [v111 transactions];
                    long long v130 = [v129 arrayByAddingObject:v121];
                    [v111 setTransactions:v130];

                    long long v131 = [v111 totalAmount];
                    long long v132 = [v131 amount];
                    [v121 amount];
                    v134 = long long v133 = v110;
                    long long v135 = [v132 decimalNumberByAdding:v134];
                    long long v136 = [v131 currency];
                    PKCurrencyAmountCreate(v135, v136, 0);
                    unsigned int v138 = v137 = v120;

                    long long v110 = v133;
                    id v111 = v178;

                    int v106 = v180;
                    [v178 setTotalAmount:v138];

                    uint64_t v120 = v137;
                  }
                  else
                  {
                    uint64_t v121 = PKLogFacilityTypeGetObject();
                    if (os_log_type_enabled(v121, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_WORD *)buf = 0;
                      _os_log_impl((void *)&_mh_execute_header, v121, OS_LOG_TYPE_DEFAULT, "Rewards added doesn't have a valid amount", buf, 2u);
                    }
                  }
                }
                id v190 = [v175 countByEnumeratingWithState:&v198 objects:v225 count:16];
              }
              while (v190);
            }

            id v47 = v164;
            uint64_t v102 = v156;
            id v101 = v157;
            id v109 = v161;
          }
        }
        uint64_t v103 = v172 + 1;
      }
      while ((id)(v172 + 1) != v169);
      id v169 = [v101 countByEnumeratingWithState:&v202 objects:v226 count:16];
    }
    while (v169);
  }
  long long v196 = 0u;
  long long v197 = 0u;
  long long v194 = 0u;
  long long v195 = 0u;
  id v139 = v162;
  id v140 = [v139 countByEnumeratingWithState:&v194 objects:v223 count:16];
  if (v140)
  {
    id v141 = v140;
    uint64_t v142 = *(void *)v195;
    do
    {
      for (k = 0; k != v141; k = (char *)k + 1)
      {
        if (*(void *)v195 != v142) {
          objc_enumerationMutation(v139);
        }
        id v144 = [v139 objectForKey:*(void *)(*((void *)&v194 + 1) + 8 * (void)k)];
        __int16 v145 = [v144 transactions];
        BOOL v146 = [v145 sortedArrayUsingComparator:&stru_10073AC70];

        [v144 setTransactions:v146];
        __int16 v147 = [v144 transactions];
        objc_msgSend(v144, "setTransactionCount:", objc_msgSend(v147, "count"));
      }
      id v141 = [v139 countByEnumeratingWithState:&v194 objects:v223 count:16];
    }
    while (v141);
  }

  unsigned int v148 = [v139 allValues];
  id v149 = [v148 sortedArrayUsingComparator:&stru_10073AC90];

  return v149;
}

- (id)_startOfTimeBlockForUnit:(unint64_t)a3 inCalendar:(id)a4 fromDate:(id)a5 forward:(BOOL)a6
{
  unint64_t v8 = 1;
  uint64_t v9 = 4096;
  uint64_t v10 = 16;
  if ((a3 & 4) == 0) {
    uint64_t v10 = 32;
  }
  if ((a3 & 8) == 0)
  {
    uint64_t v9 = v10;
    unint64_t v8 = (a3 & 4) >> 2;
  }
  if ((a3 & 0x1000) != 0) {
    uint64_t v11 = 512;
  }
  else {
    uint64_t v11 = v9;
  }
  if ((a3 & 0x1000) != 0) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = v8;
  }
  if (a6) {
    uint64_t v13 = 256;
  }
  else {
    uint64_t v13 = 260;
  }
  return [a4 nextDateAfterDate:a5 matchingUnit:v11 value:v12 options:v13];
}

- (id)billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:(id)a3 withStatementIdentifier:(id)a4
{
  return +[AccountEvent billPaymentSelectedSuggestedAmountsWithStatementIdenfitier:a4 accountIdentifier:a3 inDatabase:self->_database];
}

- (id)billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:(id)a3 withStartDate:(id)a4 endDate:(id)a5
{
  return +[AccountEvent billPaymentSelectedSuggestedAmountsWithAccountIdentifier:a3 withStartDate:a4 endDate:a5 inDatabase:self->_database];
}

- (id)insertOrUpdateSharedAccountCloudStore:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = +[SharedAccountCloudStore insertOrUpdateSharedAccountCloudStore:v6 forAccount:v7 inDatabase:self->_database];
    uint64_t v9 = [v8 sharedAccountCloudStore];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)sharedAccountCloudStoreForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase])
  {
    id v5 = +[SharedAccountCloudStore sharedAccountCloudStoreForAccount:v4 inDatabase:self->_database];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (id)sharedAccountCloudStoreByAccountIdentifier
{
  return +[SharedAccountCloudStore sharedAccountCloudStoreByAccountIdentifierInDatabase:self->_database];
}

- (id)accountUsersByAccountIdentifier
{
  return +[AccountUser accountUsersByAccountIdentifierInDatabase:self->_database];
}

- (id)accountUserWithAltDSID:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account anyInDatabase:self->_database withIdentifier:a4];
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = +[AccountUser anyInDatabase:withAltDSID:accountPID:](AccountUser, "anyInDatabase:withAltDSID:accountPID:", self->_database, v6, [v7 persistentID]);
    uint64_t v9 = [v8 accountUser];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)primaryTransactionSourceIdentifierForAccountUserAltDSID:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account anyInDatabase:self->_database withIdentifier:a4];
  unint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = +[AccountUser anyInDatabase:withAltDSID:accountPID:](AccountUser, "anyInDatabase:withAltDSID:accountPID:", self->_database, v6, [v7 persistentID]);
    uint64_t v10 = [v9 transactionSourceIdentifier];
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

- (id)physicalCardsForAccountWithIdentifier:(id)a3
{
  id v4 = +[Account anyInDatabase:self->_database withIdentifier:a3];
  id v5 = v4;
  if (v4)
  {
    id v6 = +[PhysicalCard physicalCardsForAccountPID:inDatabase:](PhysicalCard, "physicalCardsForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (id)replacePhysicalCards:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account anyInDatabase:self->_database withIdentifier:a4];
  unint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = +[PhysicalCard replacePhysicalCards:forAccountPID:inDatabase:](PhysicalCard, "replacePhysicalCards:forAccountPID:inDatabase:", v6, [v7 persistentID], self->_database);
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)insertOrUpdatePhysicalCards:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account anyInDatabase:self->_database withIdentifier:a4];
  unint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = +[PhysicalCard insertOrUpdatePhysicalCards:forAccountPID:inDatabase:](PhysicalCard, "insertOrUpdatePhysicalCards:forAccountPID:inDatabase:", v6, [v7 persistentID], self->_database);
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)insertOrUpdatePhysicalCard:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account anyInDatabase:self->_database withIdentifier:a4];
  unint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = +[PhysicalCard insertOrUpdatePhysicalCard:forAccountPID:inDatabase:](PhysicalCard, "insertOrUpdatePhysicalCard:forAccountPID:inDatabase:", v6, [v7 persistentID], self->_database);
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)paymentFundingSourcesForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase])
  {
    id v5 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v4 persistentID]);
    id v6 = +[AccountPaymentFundingSource paymentFundingSourcesForAccountPID:v5 inDatabase:self->_database];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (id)paymentFundingSourceForIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v7 persistentID]);
    uint64_t v9 = +[AccountPaymentFundingSource paymentFundingSourceForAccountPID:v8 identifier:v6 inDatabase:self->_database];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)insertOrUpdatePaymentFundingSources:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v7 persistentID]);
    uint64_t v9 = +[AccountPaymentFundingSource insertOrUpdatePaymentFundingSources:v6 forAccountPID:v8 inDatabase:self->_database];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)rewardsTierSummaryForTransactionSourceIdentifiers:(id)a3 currencyCode:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  return +[PaymentTransaction rewardsTierSummaryForTransactionSourceIdentifiers:a3 currencyCode:a4 startDate:a5 endDate:a6 inDatabase:self->_database];
}

- (id)accountPromotionsForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase])
  {
    id v5 = +[AccountPromotion accountPromotionsForAccountPID:inDatabase:](AccountPromotion, "accountPromotionsForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (id)accountPromotionForProgramIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = +[AccountPromotion accountPromotionForProgramIdentifier:accountPID:inDatabase:](AccountPromotion, "accountPromotionForProgramIdentifier:accountPID:inDatabase:", v6, [v7 persistentID], self->_database);
  }
  else
  {
    unint64_t v8 = 0;
  }

  return v8;
}

- (void)insertOrUpdateAccountPromotions:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountPromotion insertOrUpdateAccountPromotions:accountPID:inDatabase:](AccountPromotion, "insertOrUpdateAccountPromotions:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)insertOrUpdateAccountPromotion:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountPromotion insertOrUpdateAccountPromotion:accountPID:inDatabase:](AccountPromotion, "insertOrUpdateAccountPromotion:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)deleteAccountPromotion:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountPromotion deleteAccountPromotion:accountPID:inDatabase:](AccountPromotion, "deleteAccountPromotion:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)updateImpressionCountsForPromotions:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountPromotion updateImpressionCountsForPromotions:accountPID:inDatabase:](AccountPromotion, "updateImpressionCountsForPromotions:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)updateImpressionCount:(int64_t)a3 promotionProgramIdentifier:(id)a4 accountIdentifier:(id)a5
{
  id v9 = a4;
  unint64_t v8 = +[Account accountWithIdentifier:a5 inDatabase:self->_database];
  if ([v8 existsInDatabase]) {
    +[AccountPromotion updateImpressionCount:promotionProgramIdentifier:accountPID:inDatabase:](AccountPromotion, "updateImpressionCount:promotionProgramIdentifier:accountPID:inDatabase:", a3, v9, [v8 persistentID], self->_database);
  }
}

- (id)accountPromotionCompletionStepsForProgramIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = +[AccountPromotionCompletionStep accountPromotionCompletionStepsForProgramIdentifier:accountPID:inDatabase:](AccountPromotionCompletionStep, "accountPromotionCompletionStepsForProgramIdentifier:accountPID:inDatabase:", v6, [v7 persistentID], self->_database);
  }
  else
  {
    unint64_t v8 = 0;
  }

  return v8;
}

- (id)accountPromotionBehaviorForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase])
  {
    id v5 = +[AccountPromotionBehavior accountPromotionBehaviorForAccountPID:inDatabase:](AccountPromotionBehavior, "accountPromotionBehaviorForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (void)insertOrUpdateAccountPromotionBehavior:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountPromotionBehavior insertOrUpdateAccountPromotionBehavior:accountPID:inDatabase:](AccountPromotionBehavior, "insertOrUpdateAccountPromotionBehavior:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)deleteAccountPromotionBehaviorForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase]) {
    +[AccountPromotionBehavior deleteAccountPromotionBehaviorForAccountPID:inDatabase:](AccountPromotionBehavior, "deleteAccountPromotionBehaviorForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
}

- (id)accountEnhancedMerchantsForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase])
  {
    id v5 = +[AccountEnhancedMerchant accountEnhancedMerchantsForAccountPID:inDatabase:](AccountEnhancedMerchant, "accountEnhancedMerchantsForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (id)accountEnhancedMerchantForPrivateIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = +[AccountEnhancedMerchant accountEnhancedMerchantForPrivateIdentifier:accountPID:inDatabase:](AccountEnhancedMerchant, "accountEnhancedMerchantForPrivateIdentifier:accountPID:inDatabase:", v6, [v7 persistentID], self->_database);
  }
  else
  {
    unint64_t v8 = 0;
  }

  return v8;
}

- (void)insertOrUpdateAccountEnhancedMerchants:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountEnhancedMerchant insertOrUpdateAccountEnhancedMerchants:accountPID:inDatabase:](AccountEnhancedMerchant, "insertOrUpdateAccountEnhancedMerchants:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)insertOrUpdateAccountEnhancedMerchant:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountEnhancedMerchant insertOrUpdateAccountEnhancedMerchant:accountPID:inDatabase:](AccountEnhancedMerchant, "insertOrUpdateAccountEnhancedMerchant:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)deleteAccountEnhancedMerchant:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountEnhancedMerchant deleteAccountEnhancedMerchant:accountPID:inDatabase:](AccountEnhancedMerchant, "deleteAccountEnhancedMerchant:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (id)accountEnhancedMerchantBehaviorForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase])
  {
    id v5 = +[AccountEnhancedMerchantBehavior accountEnhancedMerchantBehaviorForAccountPID:inDatabase:](AccountEnhancedMerchantBehavior, "accountEnhancedMerchantBehaviorForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (void)insertOrUpdateAccountEnhancedMerchantBehavior:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountEnhancedMerchantBehavior insertOrUpdateAccountEnhancedMerchantBehavior:accountPID:inDatabase:](AccountEnhancedMerchantBehavior, "insertOrUpdateAccountEnhancedMerchantBehavior:accountPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)deleteAccountEnhancedMerchantBehaviorForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase]) {
    +[AccountEnhancedMerchantBehavior deleteAccountEnhancedMerchantBehaviorForAccountPID:inDatabase:](AccountEnhancedMerchantBehavior, "deleteAccountEnhancedMerchantBehaviorForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
}

- (id)accountEntityOrderingsForAccountIdentifier:(id)a3 entityType:(unint64_t)a4
{
  id v6 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v6 existsInDatabase])
  {
    id v7 = +[AccountEntityOrdering accountEntityOrderingsForAccountPID:entityType:inDatabase:](AccountEntityOrdering, "accountEntityOrderingsForAccountPID:entityType:inDatabase:", [v6 persistentID], a4, self->_database);
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

- (void)insertOrUpdateAccountEntityOrderings:(id)a3 accountIdentifier:(id)a4 entityType:(unint64_t)a5
{
  id v9 = a3;
  unint64_t v8 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v8 existsInDatabase]) {
    +[AccountEntityOrdering insertOrUpdateAccountEntityOrderings:accountPID:entityType:inDatabase:](AccountEntityOrdering, "insertOrUpdateAccountEntityOrderings:accountPID:entityType:inDatabase:", v9, [v8 persistentID], a5, self->_database);
  }
}

- (void)deleteAccountEntityOrderingsForAccountIdentifier:(id)a3 entityType:(unint64_t)a4
{
  id v6 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    +[AccountEntityOrdering deleteAccountEntityOrderingsForAccountPID:entityType:inDatabase:](AccountEntityOrdering, "deleteAccountEntityOrderingsForAccountPID:entityType:inDatabase:", [v6 persistentID], a4, self->_database);
  }
}

- (id)accountBalancesForAccountIdentifier:(id)a3 startDate:(id)a4 endDate:(id)a5 type:(unint64_t)a6 limit:(unint64_t)a7
{
  id v12 = a4;
  id v13 = a5;
  id v14 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v14 existsInDatabase])
  {
    id v15 = +[AccountHistoricalBalance balancesForAccountPID:startDate:endDate:type:limit:inDatabase:](AccountHistoricalBalance, "balancesForAccountPID:startDate:endDate:type:limit:inDatabase:", [v14 persistentID], v12, v13, a6, a7, self->_database);
  }
  else
  {
    id v15 = 0;
  }

  return v15;
}

- (void)insertAccountBalance:(id)a3 forAccountIdentifier:(id)a4
{
  id v8 = a3;
  id v6 = +[Account accountWithIdentifier:a4 inDatabase:self->_database];
  if ([v6 existsInDatabase]) {
    id v7 = +[AccountHistoricalBalance insertBalance:forAccountPID:inDatabase:](AccountHistoricalBalance, "insertBalance:forAccountPID:inDatabase:", v8, [v6 persistentID], self->_database);
  }
}

- (void)resetAccountBalancesForAccountIdentifier:(id)a3
{
  id v4 = +[Account accountWithIdentifier:a3 inDatabase:self->_database];
  if ([v4 existsInDatabase]) {
    +[AccountHistoricalBalance deleteBalancesForAccountPID:inDatabase:](AccountHistoricalBalance, "deleteBalancesForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
}

- (void)insertOrUpdateAccountPendingFamilyMembers:(id)a3
{
}

- (id)accountPendingFamilyMembersWithDisplayedNotification:(BOOL)a3
{
  return +[AccountPendingFamilyMember accountPendingFamilyMembersWithDisplayedNotification:a3 inDatabase:self->_database];
}

- (id)accountPendingFamilyMembersForAccountIdentifier:(id)a3
{
  return +[AccountPendingFamilyMember accountPendingFamilyMembersForAccountIdentifier:a3 inDatabase:self->_database];
}

- (void)deleteAccountPendingFamilyMember:(id)a3
{
}

- (void)deleteAccountPendingFamilyMembersWithAccountIdentifier:(id)a3 altDSIDs:(id)a4
{
}

- (void)deleteAccountEndpointMetadataForAccountIdentifier:(id)a3 endpoint:(unint64_t)a4
{
  id v4 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database accountIdentifier:a3 endpoint:a4];
  [v4 deleteFromDatabase];
}

- (id)accountEndpointMetadataForAccountIdentifier:(id)a3 endpoint:(unint64_t)a4
{
  id v4 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database accountIdentifier:a3 endpoint:a4];
  id v5 = [v4 endpointMetadata];

  return v5;
}

- (id)insertOrUpdateAccountEndpointMetadata:(id)a3
{
  id v3 = +[AccountWebServiceEndpointMetadata insertOrUpdateinitWithAccountEndpointMetadata:a3 inDatabase:self->_database];
  id v4 = [v3 endpointMetadata];

  return v4;
}

- (id)creditRecoveryPaymentPlansForAccountIdentifier:(id)a3
{
  return +[CreditRecoveryPaymentPlan creditRecoveryPaymentPlansForAccountIdentifier:a3 inDatabase:self->_database];
}

- (void)deleteCreditRecoveryPaymentPlansForAccountIdentifier:(id)a3
{
}

- (id)replaceCreditRecoveryPaymentPlans:(id)a3 forAccountIdentifier:(id)a4
{
  return +[CreditRecoveryPaymentPlan replaceCreditRecoveryPaymentPlans:a3 forAccountIdentifier:a4 inDatabase:self->_database];
}

- (id)insertOrUpdateFinancingPlan:(id)a3 forAccountIdentifier:(id)a4
{
  if (a3)
  {
    id v12 = a3;
    id v6 = a4;
    id v7 = a3;
    id v8 = +[NSArray arrayWithObjects:&v12 count:1];

    id v9 = -[PDDatabaseManager insertOrUpdateFinancingPlans:forAccountIdentifier:](self, "insertOrUpdateFinancingPlans:forAccountIdentifier:", v8, v6, v12);

    uint64_t v10 = [v9 firstObject];
  }
  else
  {
    uint64_t v10 = 0;
  }
  return v10;
}

- (id)insertOrUpdateFinancingPlans:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([v7 length])
  {
    id v8 = [(PDDatabaseManager *)self accountEndpointMetadataForAccountIdentifier:v7 endpoint:1];
    if (!v8)
    {
      id v9 = [[PDAccountWebServiceEndpointMetadata alloc] initWithAccountIdentifier:v7 endpoint:1];
      id v8 = [(PDDatabaseManager *)self insertOrUpdateAccountEndpointMetadata:v9];
    }
    uint64_t v10 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database endpointMetadata:v8];
    if ([v10 existsInDatabase])
    {
      uint64_t v11 = +[PayLaterFinancingPlan insertOrUpdatePayLaterFinancingPlans:forEndpointMetadataPID:inDatabase:](PayLaterFinancingPlan, "insertOrUpdatePayLaterFinancingPlans:forEndpointMetadataPID:inDatabase:", v6, [v10 persistentID], self->_database);
      id v12 = objc_msgSend(v11, "pk_arrayByApplyingBlock:", &stru_10073ACD0);
    }
    else
    {
      id v13 = PKLogFacilityTypeGetObject();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Error account endpoint metadata doesnt exist in database", v15, 2u);
      }

      id v12 = 0;
    }
  }
  else
  {
    id v8 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error cannot insert financing plans with a nil endpoint metadata account identifier", buf, 2u);
    }
    id v12 = 0;
  }

  return v12;
}

- (id)financingPlansWithAccountIdentifier:(id)a3
{
  if (a3)
  {
    id v4 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database accountIdentifier:a3 endpoint:1];
    id v5 = v4;
    if (v4)
    {
      id v6 = +[PayLaterFinancingPlan financingPlansForEndpointMetadataPID:inDatabase:](PayLaterFinancingPlan, "financingPlansForEndpointMetadataPID:inDatabase:", [v4 persistentID], self->_database);
    }
    else
    {
      id v6 = 0;
    }
  }
  else
  {
    id v6 = 0;
  }
  return v6;
}

- (id)financingPlansWithQuery:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 accountIdentifier];
  id v6 = (void *)v5;
  id v7 = 0;
  if (v4 && v5)
  {
    id v8 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database accountIdentifier:v5 endpoint:1];
    id v9 = [v8 persistentID];
    if (!v8)
    {
      id v7 = 0;
      goto LABEL_14;
    }
    id v10 = v9;
    id v7 = objc_alloc_init((Class)PKAccountServicePayLaterFinancingPlanQueryResponse);
    unsigned __int8 v11 = [v4 queryItems];
    uint64_t v27 = [v4 transactionStartDate];
    uint64_t v26 = [v4 transactionEndDate];
    id v25 = [v4 installmentDueOrPaidDateStart];
    id v12 = [v4 installmentDueOrPaidDateEnd];
    if (v11)
    {
      long long v16 = +[PayLaterInstallment financingPlanInstallmentsTotalDueForAccountIdentifier:v6 fromDaysInFuture:30 inDatabase:self->_database];
      [v7 setDueNext30Days:v16];

      if ((v11 & 2) == 0)
      {
LABEL_6:
        if ((v11 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_6;
    }
    id v17 = +[PayLaterFinancingPlan totalPendingAmountForFinancingPlansForEndpointMetadataPID:v10 inDatabase:self->_database];
    [v7 setTotalPendingAmount:v17];

    if ((v11 & 4) == 0)
    {
LABEL_7:
      if ((v11 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
LABEL_20:
    id v18 = +[PayLaterInstallment upcomingInstallmentsForAccountIdentifier:limit:inDatabase:](PayLaterInstallment, "upcomingInstallmentsForAccountIdentifier:limit:inDatabase:", v6, [v4 upcomingInstallmentsLimit], self->_database);
    [v7 setUpcomingInstallments:v18];

    if ((v11 & 8) == 0)
    {
LABEL_8:
      if ((v11 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_21:
    uint64_t v19 = +[PKPayLaterFinancingPlan completedFinancingPlanStates];
    id v20 = +[PayLaterFinancingPlan financingPlansForEndpointMetadataPID:v10 states:v19 transactionStartDate:v27 transactionEndDate:v26 installmentDueOrPaidDateStart:v25 installmentDueOrPaidDateEnd:v12 limit:0 inDatabase:self->_database];

    [v7 setCompletedFinancingPlans:v20];
    if ((v11 & 0x10) == 0)
    {
LABEL_9:
      if ((v11 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
LABEL_22:
    uint64_t v21 = +[PKPayLaterFinancingPlan activeFinancingPlanStates];
    long long v22 = +[PayLaterFinancingPlan financingPlansForEndpointMetadataPID:v10 states:v21 transactionStartDate:v27 transactionEndDate:v26 installmentDueOrPaidDateStart:v25 installmentDueOrPaidDateEnd:v12 limit:0 inDatabase:self->_database];

    [v7 setActiveFinancingPlans:v22];
    if ((v11 & 0x20) == 0)
    {
LABEL_10:
      if ((v11 & 0x40) == 0)
      {
LABEL_12:

LABEL_14:
        goto LABEL_15;
      }
LABEL_11:
      id v13 = [v4 countFinancingPlanStates];
      int64_t v14 = +[PayLaterFinancingPlan countOfFinancingPlansForEndpointMetadataPID:v10 financingPlanStates:v13 inDatabase:self->_database];

      [v7 setFinancingPlanCount:v14];
      goto LABEL_12;
    }
LABEL_23:
    long long v23 = [v4 relevantFinancingPlanStates];
    id v24 = +[PayLaterFinancingPlan financingPlansForEndpointMetadataPID:v10 states:v23 transactionStartDate:v27 transactionEndDate:v26 installmentDueOrPaidDateStart:v25 installmentDueOrPaidDateEnd:v12 limit:0 inDatabase:self->_database];

    [v7 setRelevantFinancingPlans:v24];
    if ((v11 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_15:

  return v7;
}

- (id)financingPlanWithIdentifier:(id)a3
{
  if (a3)
  {
    id v3 = +[PayLaterFinancingPlan anyInDatabase:self->_database withPlanIdentifier:a3];
    id v4 = [v3 financingPlan];
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

- (id)financingPlansForAccountIdentifier:(id)a3 states:(id)a4 transactionStartDate:(id)a5 transactionEndDate:(id)a6 limit:(int64_t)a7
{
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  if (a3)
  {
    id v15 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database accountIdentifier:a3 endpoint:1];
    long long v16 = v15;
    if (v15)
    {
      id v17 = +[PayLaterFinancingPlan financingPlansForEndpointMetadataPID:states:transactionStartDate:transactionEndDate:installmentDueOrPaidDateStart:installmentDueOrPaidDateEnd:limit:inDatabase:](PayLaterFinancingPlan, "financingPlansForEndpointMetadataPID:states:transactionStartDate:transactionEndDate:installmentDueOrPaidDateStart:installmentDueOrPaidDateEnd:limit:inDatabase:", [v15 persistentID], v12, v13, v14, 0, 0, a7, self->_database);
    }
    else
    {
      id v17 = 0;
    }
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

- (void)financingPlanInstallmentsDueDateRangeForAccountIdentifier:(id)a3 financingPlanStates:(id)a4 startDate:(id *)a5 endDate:(id *)a6
{
  if (a3) {
    +[PayLaterInstallment financingPlanInstallmentsDueDateRangeForAccountIdentifier:financingPlanStates:startDate:endDate:inDatabase:](PayLaterInstallment, "financingPlanInstallmentsDueDateRangeForAccountIdentifier:financingPlanStates:startDate:endDate:inDatabase:");
  }
}

- (void)deleteFinancingPlansForAccountIdentifier:(id)a3
{
  id v4 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database accountIdentifier:a3 endpoint:1];
  if ([v4 existsInDatabase]) {
    +[PayLaterFinancingPlan deletePayLaterFinancingPlansForAccountEndpointMetadataPID:inDatabase:](PayLaterFinancingPlan, "deletePayLaterFinancingPlansForAccountEndpointMetadataPID:inDatabase:", [v4 persistentID], self->_database);
  }
}

- (id)financingPlanIdentifiersForAccountIdentifier:(id)a3 states:(id)a4 transactionStartDate:(id)a5 transactionEndDate:(id)a6 limit:(int64_t)a7
{
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  if (a3)
  {
    id v15 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database accountIdentifier:a3 endpoint:1];
    long long v16 = v15;
    if (v15)
    {
      id v17 = +[PayLaterFinancingPlan financingPlanIdentifiersForEndpointMetadataPID:states:transactionStartDate:transactionEndDate:limit:inDatabase:](PayLaterFinancingPlan, "financingPlanIdentifiersForEndpointMetadataPID:states:transactionStartDate:transactionEndDate:limit:inDatabase:", [v15 persistentID], v12, v13, v14, a7, self->_database);
    }
    else
    {
      id v17 = 0;
    }
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

- (void)deleteFinancingPlanWithIdentifier:(id)a3 forAccountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = +[AccountWebServiceEndpointMetadata anyInDatabase:self->_database accountIdentifier:a4 endpoint:1];
  if ([v6 existsInDatabase]) {
    +[PayLaterFinancingPlan deletePayLaterFinancingPlanWithIdentifier:forAccountEndpointMetadataPID:inDatabase:](PayLaterFinancingPlan, "deletePayLaterFinancingPlanWithIdentifier:forAccountEndpointMetadataPID:inDatabase:", v7, [v6 persistentID], self->_database);
  }
}

- (void)updateProcessedPayLaterMerchant:(id)a3 forFinancingPlanIdentifier:(id)a4
{
  id v9 = a3;
  id v6 = +[PayLaterFinancingPlan anyInDatabase:self->_database withPlanIdentifier:a4];
  id v7 = v6;
  if (v6)
  {
    id v8 = +[PayLaterMerchant anyInDatabase:forFinancingPlanPID:](PayLaterMerchant, "anyInDatabase:forFinancingPlanPID:", self->_database, [v6 persistentID]);
    if (!v8)
    {
      id v8 = +[PayLaterMerchant insertOrUpdatePayLaterMerchant:forFinancingPlanPID:inDatabase:](PayLaterMerchant, "insertOrUpdatePayLaterMerchant:forFinancingPlanPID:inDatabase:", v9, [v7 persistentID], self->_database);
    }
    [v8 udpdateProcessedPayLaterMerchant:v9];
  }
}

- (id)payLaterFinancingPlansRequiringMerchantCleanupWithTransactionDateWithinWindow:(double)a3
{
  return +[PayLaterMerchant payLaterFinancingPlansRequiringMerchantCleanupInDatabase:self->_database transactionDateWithinWindow:a3];
}

- (id)financingPlanIdentifiersThatContainInstallmentWithStatus:(unint64_t)a3
{
  return +[PayLaterInstallment financingPlanIdentifiersThatContainInstallmentWithStatus:a3 inDatabase:self->_database];
}

- (id)financingPlanDisputeIdentifiersWithDisputeState:(unint64_t)a3
{
  return +[PayLaterFinancingPlanDispute disputeIdentifiersWithState:a3 inDatabase:self->_database];
}

- (id)financingPlansIdentifiersWithState:(unint64_t)a3
{
  return +[PayLaterFinancingPlan financingPlansIdentifiersWithState:a3 inDatabase:self->_database];
}

- (id)recomputePayLaterCardMagnitudesForAccountIdentifier:(id)a3
{
  id v4 = a3;
  id v6 = [(PDDatabaseManager *)self financingPlansWithAccountIdentifier:v4];
  id v7 = +[PKPayLaterCardMagnitudes magnitudesFromFinancingPlans:v6];
  id v8 = +[PayLaterCardMagnitudes insertOrUpdateMagnitudes:v7 forAccountIdentifier:v4 inDatabase:self->_database];
  id v9 = [v8 magnitudes];

  return v9;
}

- (id)payLaterCardMagnitudesForAccountIdentifier:(id)a3
{
  return +[PayLaterCardMagnitudes magnitudesForAccountIdentifier:a3 inDatabase:self->_database];
}

- (id)appleBalancePromotionForAccountIdentifier:(id)a3
{
  id v4 = +[Account anyInDatabase:self->_database withIdentifier:a3];
  if ([v4 existsInDatabase])
  {
    uint64_t v5 = +[AppleBalancePromotionConfiguration appleBalancePromotionConfigurationForAccountPID:inDatabase:](AppleBalancePromotionConfiguration, "appleBalancePromotionConfigurationForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

- (id)insertOrUpdateAppleBalancePromotion:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account anyInDatabase:self->_database withIdentifier:a4];
  if ([v7 existsInDatabase])
  {
    id v8 = +[AppleBalancePromotionConfiguration insertOrUpdateAppleBalancePromotionConfiguration:forAccountPID:inDatabase:](AppleBalancePromotionConfiguration, "insertOrUpdateAppleBalancePromotionConfiguration:forAccountPID:inDatabase:", v6, [v7 persistentID], self->_database);
    id v9 = [v8 appleBalancePromotionConfiguration];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

- (id)deleteAppleBalancePromotionForAccountWithIdentifier:(id)a3
{
  id v4 = +[Account anyInDatabase:self->_database withIdentifier:a3];
  if ([v4 existsInDatabase])
  {
    uint64_t v5 = +[AppleBalancePromotionConfiguration deleteAppleBalancePromotionConfigurationForAccountPID:inDatabase:](AppleBalancePromotionConfiguration, "deleteAppleBalancePromotionConfigurationForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

- (id)inStoreTopUpTokenForAccountIdentifier:(id)a3
{
  id v4 = +[Account anyInDatabase:self->_database withIdentifier:a3];
  if ([v4 existsInDatabase])
  {
    uint64_t v5 = +[AppleBalanceInStoreTopUpToken inStoreTopUpTokenForAccountPID:inDatabase:](AppleBalanceInStoreTopUpToken, "inStoreTopUpTokenForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

- (id)insertOrUpdateInStoreTopUpToken:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account anyInDatabase:self->_database withIdentifier:a4];
  if ([v7 existsInDatabase])
  {
    id v8 = +[AppleBalanceInStoreTopUpToken insertOrUpdateInStoreTopUpToken:forAccountPID:inDatabase:](AppleBalanceInStoreTopUpToken, "insertOrUpdateInStoreTopUpToken:forAccountPID:inDatabase:", v6, [v7 persistentID], self->_database);
    id v9 = [v8 topUpToken];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

- (void)deleteInStoreTopUpTokenForAccountWithIdentifier:(id)a3
{
  id v4 = +[Account anyInDatabase:self->_database withIdentifier:a3];
  if ([v4 existsInDatabase]) {
    +[AppleBalanceInStoreTopUpToken deleteInStoreTopUpTokenForAccountPID:inDatabase:](AppleBalanceInStoreTopUpToken, "deleteInStoreTopUpTokenForAccountPID:inDatabase:", [v4 persistentID], self->_database);
  }
}

- (id)discoveryItems
{
  return +[DiscoveryItem itemsInDatabase:self->_database];
}

- (id)discoveryItemsForRelevantDate:(id)a3
{
  return +[DiscoveryItem itemsWithRelevantDate:a3 inDatabase:self->_database];
}

- (id)activeDiscoveryItemsRequiringBadgeForRelevantDate:(id)a3
{
  return +[DiscoveryItem activeItemsRequiringBadgingForRelevantDate:a3 inDatabase:self->_database];
}

- (id)discoveryItemsWaitingForTrigger
{
  return +[DiscoveryItem itemsWaitingForTriggerInDatabase:self->_database];
}

- (BOOL)activeDiscoveryItemRequiringBadgeExistsForRelevantDate:(id)a3
{
  return +[DiscoveryItem activeItemRequiringBadgeExistsForRelevantDate:a3 inDatabase:self->_database];
}

- (id)activeDiscoveryItemIdentifiersForRelevantDate:(id)a3
{
  return +[DiscoveryItem activeItemIdentifiersWithRelevantDate:a3 inDatabase:self->_database];
}

- (id)nonTerminalDiscoveryItemIdentifiers
{
  return +[DiscoveryItem nonTerminalItemIdentifiersInDatabase:self->_database];
}

- (id)discoveryItemWithIdentifier:(id)a3
{
  id v3 = +[DiscoveryItem itemWithIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 item];

  return v4;
}

- (id)setDiscoveryItems:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)NSMutableArray);
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10017A3DC;
  v12[3] = &unk_100733610;
  id v13 = v4;
  id v14 = self;
  id v7 = v5;
  id v15 = v7;
  id v8 = v4;
  sub_10000817C((uint64_t)database, v12);
  id v9 = v15;
  id v10 = v7;

  return v10;
}

- (id)updateDiscoveryItemsWithDialogRequestSourcedItems:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000;
  long long v16 = sub_10002090C;
  id v17 = sub_100020F78;
  id v18 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017A6B8;
  v9[3] = &unk_10073A580;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  id v12 = &v13;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateDiscoveryItemsWithRemoteItems:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000;
  long long v16 = sub_10002090C;
  id v17 = sub_100020F78;
  id v18 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017A964;
  v9[3] = &unk_10073A580;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  id v12 = &v13;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateDiscoveryItemsWithRuleResults:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000;
  uint64_t v15 = sub_10002090C;
  long long v16 = sub_100020F78;
  id v17 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017AC40;
  v9[3] = &unk_10073A580;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = &v12;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (id)updateDiscoveryItem:(id)a3
{
  id v3 = +[DiscoveryItem updateItem:a3 inDatabse:self->_database];
  id v4 = [v3 item];

  return v4;
}

- (void)deleteDiscoveryItemWithIdentifier:(id)a3
{
}

- (void)deleteAllDiscoveryItems
{
}

- (id)rules
{
  return +[Rule rulesInDatabase:self->_database];
}

- (id)rulesWithIdentifiers:(id)a3
{
  return +[Rule rulesInDatabase:self->_database matchingRuleIdentifiers:a3];
}

- (id)insertOrUpdateRule:(id)a3
{
  id v3 = +[Rule insertOrUpdateRule:a3 inDatabase:self->_database];
  id v4 = [v3 rule];

  return v4;
}

- (id)updateRules:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)NSMutableSet);
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10017B19C;
  v12[3] = &unk_100733610;
  id v13 = v4;
  uint64_t v14 = self;
  id v7 = v5;
  id v15 = v7;
  id v8 = v4;
  sub_10000817C((uint64_t)database, v12);
  id v9 = v15;
  id v10 = v7;

  return v10;
}

- (void)deleteRuleWithIdentifier:(id)a3
{
}

- (void)deleteAllRules
{
}

- (id)engagementMessages
{
  return +[DiscoveryEngagementMessage engagementMessagesForPassQualifier:3 active:0 relevantDate:0 inDatabase:self->_database];
}

- (id)engagementMessagesForRelevantDate:(id)a3
{
  return +[DiscoveryEngagementMessage engagementMessagesForPassQualifier:3 active:0 relevantDate:a3 inDatabase:self->_database];
}

- (id)engagementMessagesForPassQualifier:(int64_t)a3 relevantDate:(id)a4 active:(unint64_t)a5
{
  return +[DiscoveryEngagementMessage engagementMessagesForPassQualifier:a3 active:a5 relevantDate:a4 inDatabase:self->_database];
}

- (id)engagementMessageWithIdentifier:(id)a3
{
  id v3 = +[DiscoveryEngagementMessage engagementMessageWithIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 engagementMessage];

  return v4;
}

- (id)updateEngagementMessages:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000;
  long long v16 = sub_10002090C;
  id v17 = sub_100020F78;
  id v18 = objc_alloc_init((Class)NSMutableArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017B554;
  v9[3] = &unk_10073A580;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  uint64_t v12 = &v13;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateEngagementMessagesWithRemoteMessages:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000;
  long long v16 = sub_10002090C;
  id v17 = sub_100020F78;
  id v18 = objc_alloc_init((Class)NSArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017B83C;
  v9[3] = &unk_10073A580;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  uint64_t v12 = &v13;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateEngagementMessagesForRuleResults:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000;
  uint64_t v15 = sub_10002090C;
  long long v16 = sub_100020F78;
  id v17 = objc_alloc_init((Class)NSArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017BB14;
  v9[3] = &unk_10073A580;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = &v12;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (id)updateEngagementMessage:(id)a3
{
  id v3 = +[DiscoveryEngagementMessage updateEngagementMessage:a3 inDatabase:self->_database];
  id v4 = [v3 engagementMessage];

  return v4;
}

- (void)deleteEngagementMessageWithIdentifier:(id)a3
{
}

- (void)deleteAllEngagementMessages
{
}

- (id)discoveryNotifications
{
  return +[DiscoveryNotification notificationsInDatabase:self->_database];
}

- (id)discoveryNotificationWithIdentifier:(id)a3
{
  id v3 = +[DiscoveryNotification notificationWithIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 notification];

  return v4;
}

- (id)insertOrUpdateDiscoveryNotification:(id)a3
{
  id v3 = +[DiscoveryNotification insertOrUpdateNotification:a3 inDatabase:self->_database];
  id v4 = [v3 notification];

  return v4;
}

- (id)updateDiscoveryNotifications:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000;
  long long v16 = sub_10002090C;
  id v17 = sub_100020F78;
  id v18 = objc_alloc_init((Class)NSMutableArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017BF14;
  v9[3] = &unk_10073A580;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  uint64_t v12 = &v13;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateDiscoveryNotificationsWithRemoteNotifications:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000;
  long long v16 = sub_10002090C;
  id v17 = sub_100020F78;
  id v18 = objc_alloc_init((Class)NSArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017C1F0;
  v9[3] = &unk_10073A580;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  uint64_t v12 = &v13;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateDiscoveryNotificationsForRuleResults:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000;
  uint64_t v15 = sub_10002090C;
  long long v16 = sub_100020F78;
  id v17 = objc_alloc_init((Class)NSArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017C4C4;
  v9[3] = &unk_10073A580;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = &v12;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (void)deleteDiscoveryNotificationWithIdentifier:(id)a3
{
}

- (void)deleteAllDiscoveryNotifications
{
}

- (id)discoveryNotificationsThatAreNotExpiredForDate:(id)a3 active:(unint64_t)a4 delivered:(unint64_t)a5
{
  return +[DiscoveryNotification notificationsThatAreNotExpiredForDate:a3 active:a4 delivered:a5 inDatabase:self->_database];
}

- (id)discoveryNotificationsToScheduleForDate:(id)a3
{
  return +[DiscoveryNotification notificationsToScheduleForDate:a3 inDatabase:self->_database];
}

- (id)discoveryNotificationsRequiringInsertionForDate:(id)a3
{
  return +[DiscoveryNotification notificationsRequiringInsertionForDate:a3 inDatabase:self->_database];
}

- (id)nextRelevantDiscoveryNotificationForDate:(id)a3
{
  return +[DiscoveryNotification nextRelevantNotificationForDate:a3 inDatabase:self->_database];
}

- (id)paymentSetupFeatures
{
  return +[PaymentSetupFeature paymentSetupFeaturesInDatabase:self->_database];
}

- (id)paymentSetupFeatureWithIdentifier:(id)a3
{
  id v3 = +[PaymentSetupFeature paymentSetupFeatureWithIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 paymentSetupFeature];

  return v4;
}

- (id)setPaymentSetupFeatures:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)NSMutableSet);
  id v6 = objc_alloc_init((Class)NSMutableArray);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v7 = v4;
  id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v13 = objc_msgSend(v12, "productIdentifier", (void)v18);
        if (v13)
        {
          uint64_t v14 = +[PaymentSetupFeature insertOrUpdatePaymentSetupFeature:v12 inDatabase:self->_database];
          [v5 addObject:v13];
          uint64_t v15 = [v14 paymentSetupFeature];
          [v6 addObject:v15];
        }
      }
      id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v9);
  }

  long long v16 = [v5 allObjects];
  +[PaymentSetupFeature deletePaymentSetupFeaturesNotIncludingIdentifiers:v16 inDatabase:self->_database];

  return v6;
}

- (id)insertOrUpdatePaymentSetupFeature:(id)a3
{
  id v3 = +[PaymentSetupFeature insertOrUpdatePaymentSetupFeature:a3 inDatabase:self->_database];
  id v4 = [v3 paymentSetupFeature];

  return v4;
}

- (void)deletePaymentSetupFeatureWithIdentifier:(id)a3
{
}

- (void)deleteAllPaymentSetupFeatures
{
}

- (id)installmentPlansWithTransactionReferenceIdentifier:(id)a3
{
  return +[CreditInstallmentPlan installmentPlansWithTransactionReferenceIdentifier:a3 inDatabase:self->_database];
}

- (id)passUniqueIdentifierWithPaymentApplicationIdentifier:(id)a3 subcredentialIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v17 = 0;
  long long v18 = &v17;
  uint64_t v19 = 0x3032000000;
  long long v20 = sub_10002090C;
  long long v21 = sub_100020F78;
  id v22 = 0;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_10017CADC;
  v13[3] = &unk_100739CF0;
  v13[4] = self;
  id v9 = v6;
  id v14 = v9;
  id v10 = v7;
  id v15 = v10;
  long long v16 = &v17;
  sub_10000817C((uint64_t)database, v13);
  id v11 = (id)v18[5];

  _Block_object_dispose(&v17, 8);
  return v11;
}

- (id)passUniqueIdentifierFromAppletSubcredentialIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000;
  long long v16 = sub_10002090C;
  uint64_t v17 = sub_100020F78;
  id v18 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017CCE0;
  v9[3] = &unk_10073A580;
  id v6 = v4;
  id v10 = v6;
  id v11 = self;
  uint64_t v12 = &v13;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)passesWithPairedReaderIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)NSMutableSet);
  uint64_t database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10017CEBC;
  void v11[3] = &unk_100733610;
  id v12 = v4;
  uint64_t v13 = self;
  id v14 = v5;
  id v7 = v5;
  id v8 = v4;
  sub_10000817C((uint64_t)database, v11);
  id v9 = [v7 copy];

  return v9;
}

- (id)appletSubcredentialWithIdentifier:(id)a3
{
  id v3 = +[AppletSubcredential appletSubcredentialWithIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 appletSubcredential];

  return v4;
}

- (id)appletSubcredentialForSharedCredentialWithIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000;
  long long v16 = sub_10002090C;
  uint64_t v17 = sub_100020F78;
  id v18 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_10017D210;
  v9[3] = &unk_10073A580;
  id v6 = v4;
  id v10 = v6;
  id v11 = self;
  id v12 = &v13;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (BOOL)updateAppletSubcredentials:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 1;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10017D3A0;
  v8[3] = &unk_10073A580;
  id v6 = v4;
  id v9 = v6;
  id v10 = self;
  id v11 = &v12;
  sub_10000817C((uint64_t)database, v8);
  LOBYTE(self) = *((unsigned char *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return (char)self;
}

- (void)updateRangingSuspensionReasons:(unint64_t)a3 onCredential:(id)a4 forPaymentApplicationID:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_10017D688;
  v13[3] = &unk_100734FC8;
  v13[4] = self;
  id v14 = v9;
  id v15 = v8;
  unint64_t v16 = a3;
  id v11 = v8;
  id v12 = v9;
  sub_10000817C((uint64_t)database, v13);
}

- (unint64_t)rangingSuspensionReasonForAppletSubcredential:(id)a3 forPaymentApplicationID:(id)a4
{
  secureElement = self->_secureElement;
  id v7 = a4;
  id v8 = a3;
  id v9 = [(PKSecureElement *)secureElement secureElementIdentifiers];
  id v10 = +[PaymentApplication anyInDatabase:self->_database withApplicationIdentifier:v7 secureElementIdentifiers:v9];

  id v11 = [v8 identifier];

  id v12 = +[AppletSubcredential appletSubcredentialWithIdentifier:v11 inDatabase:self->_database];
  unint64_t v13 = +[AppletSubcredentialRangingSuspensionReasons suspensionReasonsForCredential:v12 forPaymentApplication:v10 inDatabase:self->_database];

  return v13;
}

- (id)credentialIdentifiersForAid
{
  return +[AppletSubcredential credentialIdentifiersForAidInDatabase:self->_database];
}

- (id)invitations
{
  return +[AppletSubcredentialInvitation invitationsInDatabase:self->_database];
}

- (id)invitationWithIdentifier:(id)a3
{
  id v3 = +[AppletSubcredentialInvitation invitationWithIdentifier:a3 inDatabase:self->_database];
  id v4 = [v3 invitation];

  return v4;
}

- (BOOL)addSharingInvitation:(id)a3
{
  id v4 = a3;
  id v5 = +[AppletSubcredentialInvitation addInvitation:v4 inDatabase:self->_database];

  if (v5)
  {
    delegateQueue = self->_delegateQueue;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10017D9A4;
    v8[3] = &unk_10072E198;
    void v8[4] = self;
    id v9 = v4;
    dispatch_async(delegateQueue, v8);
  }
  return v5 != 0;
}

- (BOOL)deleteInvitationWithIdentifier:(id)a3
{
  return +[AppletSubcredentialInvitation deleteInvitationWithIdentifier:a3 inDatabase:self->_database];
}

- (id)passesWithISO18013Credentials
{
  id v3 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
  id v4 = +[Pass predicateForPaymentType:1003];
  v19[0] = v4;
  id v5 = +[Pass predicateForPaymentType:1004];
  v19[1] = v5;
  id v6 = +[Pass predicateForPaymentType:1002];
  void v19[2] = v6;
  id v7 = +[Pass predicateForPaymentType:1005];
  v19[3] = v7;
  id v8 = +[NSArray arrayWithObjects:v19 count:4];
  id v9 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v8];

  id v10 = [(PDDatabaseManager *)self _predicateForType:1];
  v18[0] = v10;
  id v11 = +[Pass predicateForPrimaryPaymentApplication:1];
  v18[1] = v11;
  id v12 = +[Pass predicateForPaymentApplicationSecureElementIdentifiers:v3];
  void v18[2] = v12;
  v18[3] = v9;
  unint64_t v13 = +[NSArray arrayWithObjects:v18 count:4];
  id v14 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v13];

  id v15 = +[Pass passesInDatabase:self->_database matchingPredicate:v14];
  unint64_t v16 = [(PDDatabaseManager *)self _registeredPasses:v15];

  return v16;
}

- (id)transactionReceiptWithUniqueID:(id)a3
{
  id v3 = +[TransactionReceipt anyInDatabase:self->_database withUniqueID:a3];
  id v4 = [v3 transactionReceipt];

  return v4;
}

- (id)insertOrUpdateTransactionReceipt:(id)a3
{
  id v3 = +[TransactionReceipt insertOrUpdateTransactionReceipt:a3 inDatabase:self->_database];
  id v4 = [v3 transactionReceipt];

  return v4;
}

- (void)deleteTransactionReceiptWithUniqueID:(id)a3
{
  id v3 = +[TransactionReceipt anyInDatabase:self->_database withUniqueID:a3];
  [v3 deleteFromDatabase];
}

- (unint64_t)numberOfTransactionReceipts
{
  uint64_t database = self->_database;
  id v3 = +[SQLiteBooleanPredicate truePredicate];
  id v4 = +[SQLiteEntity queryWithDatabase:database predicate:v3];
  id v5 = [v4 countOfEntities];

  return (unint64_t)v5;
}

- (void)insertOrReplaceMissingRemoteAssetsPersistentStoreItemWithUniqueID:(id)a3
{
  id v3 = +[MissingRemoteAssetsItem insertOrReplaceMissingRemoteAssetsItemForUniqueID:a3 inDataBase:self->_database];
}

- (unint64_t)missingRemoteAssetsPersistentStoreItemsCountWithMaximumDownloadRetriesCount:(unint64_t)a3
{
  return +[MissingRemoteAssetsItem itemsCountInDataBase:self->_database withMaximumDownloadRetriesCount:a3];
}

- (id)missingRemoteAssetsPersistentStoreItemsWithMaximumDownloadRetriesCount:(unint64_t)a3
{
  return +[MissingRemoteAssetsItem itemsInDataBase:self->_database withMaximumDownloadRetriesCount:a3];
}

- (void)incrementMissingRemoteAssetsPersistentStoreItemDownloadRetriesCountWithUniqueID:(id)a3
{
}

- (void)removeMissingRemoteAssetsPersistentStoreItemWithUniqueID:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_10017DEA8;
  v7[3] = &unk_100738A00;
  id v8 = v4;
  id v9 = self;
  id v6 = v4;
  sub_10000817C((uint64_t)database, v7);
}

- (id)issuerInstallmentTransactionsForPassUniqueIdentifier:(id)a3
{
  id v4 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:a3];
  if ([v4 count])
  {
    id v5 = +[PaymentTransaction issuerInstallmentTransactionsInDatabase:self->_database transactionSourceIdentifiers:v4];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (id)issuerInstallmentTransactionsForTransactionSourceIdentifiers:(id)a3 paymentHashes:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([v6 count])
  {
    id v8 = +[PaymentTransaction issuerInstallmentTransactionsInDatabase:self->_database transactionSourceIdentifiers:v6 transactionPaymentHashes:v7];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

- (void)deleteIssuerInstallmentTransactionsForPassUniqueID:(id)a3
{
  id v4 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:a3];
  if ([v4 count]) {
    +[PaymentTransaction deleteIssuerInstallmentTransactionsInDatabase:self->_database transactionSourceIdentifiers:v4];
  }
}

- (id)cloudStoreZonesForContainerDatabaseWithName:(id)a3 scope:(int64_t)a4
{
  id v4 = +[CloudStoreContainerDatabase anyInDatabase:self->_database withContainerName:a3 scope:a4];
  id v5 = [v4 cloudStoreZones];

  return v5;
}

- (void)insertOrUpdateCloudStoreZone:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = [v7 database];
  id v10 = [v9 container];
  id v11 = [v10 containerIdentifier];
  uint64_t v12 = +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:](CloudStoreContainerDatabase, "anyInDatabase:withContainerName:scope:", database, v11, [v7 scope]);

  if (v12) {
    goto LABEL_5;
  }
  unint64_t v13 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    id v14 = [v6 zoneName];
    int v17 = 138543618;
    id v18 = v14;
    __int16 v19 = 2112;
    id v20 = v7;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Cannot insert cloud store zone %{public}@ without a container database defined. Inserting one now. %@", (uint8_t *)&v17, 0x16u);
  }
  uint64_t v12 = [(PDDatabaseManager *)self _insertContainerDatabaseForContainerDatabase:v7];
  if (v12)
  {
LABEL_5:
    id v15 = +[CloudStoreZone insertOrUpdateCloudStoreZone:v6 forContainerDatabase:v12 inDatabase:self->_database];
    unint64_t v13 = v12;
  }
  else if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v16 = [v6 zoneName];
    int v17 = 138543618;
    id v18 = v16;
    __int16 v19 = 2112;
    id v20 = v7;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Cannot insert cloud store zone %{public}@ without a container database defined %@", (uint8_t *)&v17, 0x16u);
  }
}

- (void)updateChangeToken:(id)a3 fetchTimestamp:(id)a4 forCloudStoreZone:(id)a5 inContainerDatabase:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  uint64_t database = self->_database;
  id v15 = [v13 database];
  unint64_t v16 = [v15 container];
  int v17 = [v16 containerIdentifier];
  id v18 = +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:](CloudStoreContainerDatabase, "anyInDatabase:withContainerName:scope:", database, v17, [v13 scope]);

  if (v18)
  {
    +[CloudStoreZone updateChangeToken:v10 fetchTimestamp:v11 forCloudStoreZone:v12 inContainerDatabase:v18 inDatabase:self->_database];
  }
  else
  {
    __int16 v19 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      id v20 = [v12 zoneName];
      int v21 = 138543618;
      id v22 = v20;
      __int16 v23 = 2112;
      id v24 = v13;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Cannot update change token and fetch timestamp for zone %{public}@ without a container database defined %@", (uint8_t *)&v21, 0x16u);
    }
  }
}

- (void)updateDidFinishInitialSync:(BOOL)a3 forCloudStoreZone:(id)a4 inContainerDatabase:(id)a5
{
  BOOL v6 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t database = self->_database;
  id v11 = [v9 database];
  id v12 = [v11 container];
  id v13 = [v12 containerIdentifier];
  id v14 = +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:](CloudStoreContainerDatabase, "anyInDatabase:withContainerName:scope:", database, v13, [v9 scope]);

  if (v14)
  {
    +[CloudStoreZone updateDidFinishInitialSync:v6 forCloudStoreZone:v8 inContainerDatabase:v14 inDatabase:self->_database];
  }
  else
  {
    id v15 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v16 = [v8 zoneName];
      int v17 = 138543618;
      id v18 = v16;
      __int16 v19 = 2112;
      id v20 = v9;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Cannot update change token and fetch timestamp for zone %{public}@ without a container database defined %@", (uint8_t *)&v17, 0x16u);
    }
  }
}

- (id)tokenDataForCloudStore:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = [v7 database];
  id v10 = [v9 container];
  id v11 = [v10 containerIdentifier];
  id v12 = +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:](CloudStoreContainerDatabase, "anyInDatabase:withContainerName:scope:", database, v11, [v7 scope]);

  if (v12)
  {
    id v13 = +[CloudStoreZone tokenDataForCloudStoreZone:v6 forContainerDatabase:v12 inDatabase:self->_database];
  }
  else
  {
    id v14 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = [v6 zoneName];
      int v17 = 138543618;
      id v18 = v15;
      __int16 v19 = 2112;
      id v20 = v7;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Cannot get change token for zone %{public}@ without a container database defined %@", (uint8_t *)&v17, 0x16u);
    }
    id v13 = 0;
  }

  return v13;
}

- (BOOL)didFinishInitialSyncForCloudStore:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = [v7 database];
  id v10 = [v9 container];
  id v11 = [v10 containerIdentifier];
  id v12 = +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:](CloudStoreContainerDatabase, "anyInDatabase:withContainerName:scope:", database, v11, [v7 scope]);

  if (v12)
  {
    BOOL v13 = +[CloudStoreZone didFinishInitialSyncForCloudStoreZone:v6 forContainerDatabase:v12 inDatabase:self->_database];
  }
  else
  {
    id v14 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = [v6 zoneName];
      int v17 = 138543618;
      id v18 = v15;
      __int16 v19 = 2112;
      id v20 = v7;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Cannot get finish flag for zone %{public}@ without a container database defined %@", (uint8_t *)&v17, 0x16u);
    }
    BOOL v13 = 0;
  }

  return v13;
}

- (id)fetchTimestampForCloudStore:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = [v7 database];
  id v10 = [v9 container];
  id v11 = [v10 containerIdentifier];
  id v12 = +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:](CloudStoreContainerDatabase, "anyInDatabase:withContainerName:scope:", database, v11, [v7 scope]);

  if (v12)
  {
    BOOL v13 = +[CloudStoreZone fetchTimestampForCloudStoreZone:v6 forContainerDatabase:v12 inDatabase:self->_database];
  }
  else
  {
    id v14 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = [v6 zoneName];
      int v17 = 138543618;
      id v18 = v15;
      __int16 v19 = 2112;
      id v20 = v7;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Cannot get change token for zone %{public}@ without a container database defined %@", (uint8_t *)&v17, 0x16u);
    }
    BOOL v13 = 0;
  }

  return v13;
}

- (void)removeCloudStoreZone:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = [v7 database];
  id v10 = [v9 container];
  id v11 = [v10 containerIdentifier];
  id v12 = +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:](CloudStoreContainerDatabase, "anyInDatabase:withContainerName:scope:", database, v11, [v7 scope]);

  if (v12)
  {
    +[CloudStoreZone removeCloudStoreZone:v6 forContainerDatabase:v12 inDatabase:self->_database];
  }
  else
  {
    BOOL v13 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = [v6 zoneName];
      int v15 = 138543618;
      unint64_t v16 = v14;
      __int16 v17 = 2112;
      id v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Cannot remove cloud store zone %{public}@ without a container database defined %@", (uint8_t *)&v15, 0x16u);
    }
  }
}

- (void)removeContainerDatabaseForContainerDatabase:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v6 = [v4 database];
  id v7 = [v6 container];
  id v8 = [v7 containerIdentifier];
  id v9 = +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:](CloudStoreContainerDatabase, "anyInDatabase:withContainerName:scope:", database, v8, [v4 scope]);

  if (v9)
  {
    [v9 deleteFromDatabase];
  }
  else
  {
    id v10 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412290;
      id v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Cannot remove cloud container database %@", (uint8_t *)&v11, 0xCu);
    }
  }
}

- (id)cloudStoreZonesForContainerDatabase:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = [v4 database];
  id v6 = [v5 container];
  id v7 = [v6 containerIdentifier];
  id v8 = [v4 scope];

  id v9 = +[CloudStoreContainerDatabase anyInDatabase:database withContainerName:v7 scope:v8];

  if (v9)
  {
    id v10 = [v9 cloudStoreZones];
  }
  else
  {
    id v10 = 0;
  }

  return v10;
}

- (id)databaseSubscriptionForContainerDatabase:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = [v4 database];
  id v6 = [v5 container];
  id v7 = [v6 containerIdentifier];
  id v8 = [v4 scope];

  id v9 = +[CloudStoreContainerDatabase anyInDatabase:database withContainerName:v7 scope:v8];

  if (v9)
  {
    id v10 = [v9 databaseSubscription];
  }
  else
  {
    id v10 = 0;
  }

  return v10;
}

- (void)updateDatabaseSubscription:(id)a3 containerDatabase:(id)a4
{
  id v13 = a3;
  uint64_t database = self->_database;
  id v7 = a4;
  id v8 = [v7 database];
  id v9 = [v8 container];
  id v10 = [v9 containerIdentifier];
  id v11 = [v7 scope];

  id v12 = +[CloudStoreContainerDatabase anyInDatabase:database withContainerName:v10 scope:v11];

  if (v12) {
    [v12 updateWithDatabaseSubscription:v13];
  }
}

- (BOOL)containerDatabaseExistsForContainerDatabase:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = [v4 database];
  id v6 = [v5 container];
  id v7 = [v6 containerIdentifier];
  id v8 = [v4 scope];

  id v9 = +[CloudStoreContainerDatabase anyInDatabase:database withContainerName:v7 scope:v8];

  return v9 != 0;
}

- (void)insertContainerDatabaseForContainerDatabase:(id)a3
{
  id v3 = [(PDDatabaseManager *)self _insertContainerDatabaseForContainerDatabase:a3];
}

- (id)_insertContainerDatabaseForContainerDatabase:(id)a3
{
  id v4 = a3;
  id v5 = [v4 database];
  id v6 = [v5 container];
  id v7 = [v6 containerIdentifier];
  id v8 = [v4 scope];

  id v9 = +[CloudStoreContainerDatabase insertOrUpdateCloudStoreDatabaseWithContainerName:v7 scope:v8 inDatabase:self->_database];

  return v9;
}

- (BOOL)hasMatchingCloudStoreRecord:(id)a3 inCloudStoreZone:(id)a4
{
  BOOL v4 = 0;
  if (a3 && a4)
  {
    uint64_t database = self->_database;
    id v7 = a3;
    id v8 = +[CloudStoreRecord anyInDatabase:database cloudStoreRecord:v7 cloudStoreZone:a4];
    id v9 = objc_msgSend(v7, "pk_hash");

    BOOL v4 = v9 == [v8 hash];
  }
  return v4;
}

- (id)cloudStoreRecordWithRecordName:(id)a3 recordType:(id)a4 inCloudStoreZone:(id)a5
{
  id v7 = 0;
  if (a3 && a4 && a5)
  {
    id v7 = +[CloudStoreRecord recordInDatabase:withRecordName:recordType:cloudStoreZone:](CloudStoreRecord, "recordInDatabase:withRecordName:recordType:cloudStoreZone:", self->_database, a3, a4);
    uint64_t v5 = vars8;
  }
  return v7;
}

- (void)insertOrUpdateCloudStoreRecords:(id)a3 inCloudStoreZone:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v6);
        }
        id v12 = +[CloudStoreRecord insertOrUpdateCloudStoreRecord:*(void *)(*((void *)&v13 + 1) + 8 * (void)v11) forCloudStoreZone:v7 inDatabase:self->_database];
        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }
}

- (void)removeCloudStoreRecordID:(id)a3 recordType:(id)a4 cloudStoreZone:(id)a5
{
}

- (void)addCloudStoreContainerChangeEvent:(id)a3
{
  if (a3) {
    id v3 = +[CloudStoreContainerChangeEvent insertContainerChangeEvent:a3 inDatabase:self->_database];
  }
}

- (id)cloudStoreContainerChangeEventWithIdentifier:(id)a3
{
  if (a3)
  {
    BOOL v4 = +[CloudStoreContainerChangeEvent changeEventWithIdentifier:a3 inDatabase:self->_database];
  }
  else
  {
    BOOL v4 = 0;
  }
  return v4;
}

- (void)deleteAllCloudStoreContainerChangeEventHistory
{
}

- (void)purgeOldCloudStoreContainerChangeEventEntires
{
}

- (id)cloudStoreContainerChangeEventsForContainerIdentifier:(id)a3
{
  return +[CloudStoreContainerChangeEvent changeEventsForContainerIdentifier:a3 inDatabase:self->_database];
}

- (int64_t)cloudStoreContainerChangeEventCount
{
  uint64_t database = self->_database;
  uint64_t v3 = +[SQLiteBooleanPredicate truePredicate];
  int64_t v4 = +[SQLiteEntity countInDatabase:database predicate:v3];

  return v4;
}

- (id)allRecordFetchTasks
{
  return +[CloudStoreRecordFetchTask allRecordFetchTasksInDatabase:self->_database];
}

- (void)updateRecordFetchTask:(id)a3
{
  id v4 = a3;
  uint64_t v5 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412290;
    id v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Updating cloud store record fetch task %@", (uint8_t *)&v7, 0xCu);
  }

  id v6 = +[CloudStoreRecordFetchTask insertOrUpdateRecordFetchTask:v4 inDatabase:self->_database];
}

- (void)removeRecordFetchTasks:(id)a3
{
  id v4 = a3;
  uint64_t v5 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412290;
    id v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Removing cloud store record fetch tasks %@", (uint8_t *)&v6, 0xCu);
  }

  +[CloudStoreRecordFetchTask removeRecordFetchTasks:v4 inDatabase:self->_database];
}

- (void)insertOrUpdatePendingProvisioning:(id)a3
{
  id v3 = +[PendingProvisioning insertPendingProvisioning:a3 inDatabase:self->_database];
}

- (id)allPendingProvisionings
{
  return +[PendingProvisioning allPendingProvisioningsInDatabase:self->_database];
}

- (id)pendingProvisioningsOfType:(id)a3
{
  return +[PendingProvisioning pendingProvisioningsInDatabase:self->_database ofType:a3];
}

- (id)pendingProvisioningsOfTypes:(id)a3
{
  return +[PendingProvisioning pendingProvisioningsInDatabase:self->_database ofTypes:a3];
}

- (id)pendingProvisioningsWithStatus:(int64_t)a3
{
  return +[PendingProvisioning pendingProvisioningsInDatabase:self->_database withStatus:a3];
}

- (void)markInProgressPendingProvisionings
{
}

- (id)pendingProvisioningOfType:(id)a3 withUniqueIdentifier:(id)a4
{
  return +[PendingProvisioning pendingProvisioningInDatabase:self->_database ofType:a3 withUniqueIdentifier:a4];
}

- (BOOL)deletePendingProvisioningOfType:(id)a3 withUniqueIdentifier:(id)a4
{
  return +[PendingProvisioning deletePendingProvisioningInDatabase:self->_database ofType:a3 withUniqueIdentifier:a4];
}

- (void)insertOrUpdatePendingProvisioningReceipt:(id)a3
{
}

- (id)allPendingProvisioningReceipts
{
  return +[PendingProvisioningReceipt pendingProvisioningReceiptsInDatabase:self->_database];
}

- (void)deleteAllPendingProvisioningReceipts
{
}

- (id)pushProvisioningSharingMetadata
{
  return +[PushProvisioningSharingMetadata pushProvisioningSharingMetadataInDatabase:self->_database];
}

- (id)pushProvisioningSharingMetadataWithStatus:(unint64_t)a3
{
  return +[PushProvisioningSharingMetadata pushProvisioningSharingMetadataForStatus:a3 inDatabase:self->_database];
}

- (id)insertOrUpdatePushProvisioningSharingMetadata:(id)a3
{
  id v3 = +[PushProvisioningSharingMetadata insertOrUpdateSharingMetadata:a3 inDatabase:self->_database];
  id v4 = [v3 sharingMetaData];

  return v4;
}

- (void)deletePushProvisioningSharingMetadata:(id)a3
{
}

- (id)nextPossibleCloudStoreShareOperationForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5
{
  uint64_t database = self->_database;
  id v9 = a5;
  uint64_t v10 = +[CloudStoreZone anyInDatabase:database forCloudStoreZone:a4];
  id v11 = +[CloudStoreShareBackoff anyInDatabase:self->_database forBackoffType:a3 cloudStoreZone:v10 recipientHandle:v9];

  if ([v11 existsInDatabase])
  {
    id v12 = [v11 nextPossibleFetchDate];
  }
  else
  {
    id v12 = 0;
  }

  return v12;
}

- (void)increaseRetryCloudStoreShareOperationBackoffLevelForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5
{
  id v11 = a5;
  id v8 = +[CloudStoreZone anyInDatabase:self->_database forCloudStoreZone:a4];
  id v9 = +[CloudStoreShareBackoff anyInDatabase:self->_database forBackoffType:a3 cloudStoreZone:v8 recipientHandle:v11];
  if ([v9 existsInDatabase]) {
    [v9 increaseBackoffLevel];
  }
  else {
    id v10 = +[CloudStoreShareBackoff insertIfNotExistsForBackoffType:a3 cloudStoreZone:v8 recipientHandle:v11 inDatabase:self->_database];
  }
}

- (void)deleteRetryCloudStoreShareOperationBackoffForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5
{
  id v9 = a5;
  id v8 = +[CloudStoreZone anyInDatabase:self->_database forCloudStoreZone:a4];
  if ([v8 existsInDatabase]) {
    +[CloudStoreShareBackoff deleteEntriesForBackoffType:a3 cloudStoreZone:v8 recipientHandle:v9 inDatabase:self->_database];
  }
}

- (id)unregisteredAuxiliaryCapabilityRequirementsForPass:(id)a3
{
  uint64_t database = self->_database;
  id v5 = a3;
  int v6 = [v5 uniqueID];
  id v7 = +[Pass anyInDatabase:database withUniqueID:v6];

  id v8 = +[PassAuxiliaryRegistrationRequirement auxiliaryRegistrationRequirementStatusForPassPID:inDatabase:](PassAuxiliaryRegistrationRequirement, "auxiliaryRegistrationRequirementStatusForPassPID:inDatabase:", [v7 persistentID], self->_database);
  id v9 = objc_msgSend(v8, "pk_indexDictionaryByApplyingBlock:", &stru_10073AD60);
  id v10 = [v5 auxiliaryRegistrationRequirements];

  id v11 = [v10 allRequirements];

  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_10017FBE4;
  v17[3] = &unk_10073AD88;
  id v18 = v9;
  id v12 = v9;
  long long v13 = objc_msgSend(v11, "pk_objectsPassingTest:", v17);
  if ([v13 count]) {
    long long v14 = v13;
  }
  else {
    long long v14 = 0;
  }
  id v15 = v14;

  return v15;
}

- (BOOL)isAuxiliaryRegistrationRequirementRegistered:(id)a3 pass:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a3;
  id v8 = [a4 uniqueID];
  id v9 = +[Pass anyInDatabase:database withUniqueID:v8];

  id v10 = +[PassAuxiliaryRegistrationRequirement unregisteredAuxiliaryRegistrationRequirementIdentifiersForPassPID:inDatabase:](PassAuxiliaryRegistrationRequirement, "unregisteredAuxiliaryRegistrationRequirementIdentifiersForPassPID:inDatabase:", [v9 persistentID], self->_database);
  id v11 = [v7 identifier];

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_10017FDA4;
  v14[3] = &unk_10073ADB0;
  id v15 = v11;
  id v12 = v11;
  LODWORD(database) = objc_msgSend(v10, "pk_containsObjectPassingTest:", v14) ^ 1;

  return (char)database;
}

- (BOOL)updateAuxiliaryRegistrationRequirement:(id)a3 pass:(id)a4 isRegistered:(BOOL)a5
{
  BOOL v5 = a5;
  uint64_t database = self->_database;
  id v9 = a3;
  id v10 = [a4 uniqueID];
  id v11 = +[Pass anyInDatabase:database withUniqueID:v10];

  LOBYTE(v5) = +[PassAuxiliaryRegistrationRequirement updateAuxiliaryRegistrationRequirement:passPID:isRegistered:inDatabase:](PassAuxiliaryRegistrationRequirement, "updateAuxiliaryRegistrationRequirement:passPID:isRegistered:inDatabase:", v9, [v11 persistentID], v5, self->_database);
  return v5;
}

- (BOOL)updateAuxiliaryRegistrationRequirementsForPass:(id)a3 isRegistered:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t database = self->_database;
  id v7 = [a3 uniqueID];
  id v8 = +[Pass anyInDatabase:database withUniqueID:v7];

  LOBYTE(v4) = +[PassAuxiliaryRegistrationRequirement updateAuxiliaryRegistrationRequirementsForPassPID:isRegistered:inDatabase:](PassAuxiliaryRegistrationRequirement, "updateAuxiliaryRegistrationRequirementsForPassPID:isRegistered:inDatabase:", [v8 persistentID], v4, self->_database);
  return v4;
}

- (BOOL)insertBarcodeCredentials:(id)a3 forDPANIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0;
  __int16 v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100180050;
  v12[3] = &unk_10073ADD8;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_10000817C((uint64_t)database, v12);
  LOBYTE(v6) = *((unsigned char *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (unint64_t)numberOfValidBarcodeCredentialsForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  uint64_t v15 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_1001801C0;
  v9[3] = &unk_10073A580;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  id v11 = &v12;
  sub_10000817C((uint64_t)database, v9);
  unint64_t v7 = v13[3];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (unint64_t)numberOfBarcodeCredentialsDisplayedAfterDate:(id)a3 forDPANIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v17 = 0;
  uint64_t v18 = &v17;
  uint64_t v19 = 0x2020000000;
  uint64_t v20 = 0;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_100180340;
  v13[3] = &unk_10073ADD8;
  v13[4] = self;
  id v9 = v7;
  id v14 = v9;
  uint64_t v16 = &v17;
  id v10 = v6;
  id v15 = v10;
  sub_10000817C((uint64_t)database, v13);
  unint64_t v11 = v18[3];

  _Block_object_dispose(&v17, 8);
  return v11;
}

- (id)firstValidBarcodeCredentialForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000;
  id v15 = sub_10002090C;
  uint64_t v16 = sub_100020F78;
  id v17 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_1001804D8;
  v9[3] = &unk_10073A580;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unint64_t v11 = &v12;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (id)lastUsedBarcodeIdentifierForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000;
  id v15 = sub_10002090C;
  uint64_t v16 = sub_100020F78;
  id v17 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100180690;
  v9[3] = &unk_10073A580;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unint64_t v11 = &v12;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (BOOL)removeAllBarcodeCredentialValuesForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000;
  char v14 = 0;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001807EC;
  v8[3] = &unk_10073A580;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  sub_10000817C((uint64_t)database, v8);
  LOBYTE(database) = *((unsigned char *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)database;
}

- (BOOL)removeAllBarcodeCredentialsForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000;
  char v14 = 0;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100180948;
  v8[3] = &unk_10073A580;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  sub_10000817C((uint64_t)database, v8);
  LOBYTE(database) = *((unsigned char *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)database;
}

- (BOOL)updateDisplayTimestamp:(id)a3 forBarcodeIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100180AD4;
  v12[3] = &unk_10073ADD8;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_10000817C((uint64_t)database, v12);
  LOBYTE(v6) = *((unsigned char *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (BOOL)updatePaymentPINData:(id)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100180C5C;
  v12[3] = &unk_10073ADD8;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_10000817C((uint64_t)database, v12);
  LOBYTE(v6) = *((unsigned char *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (BOOL)updateTransactionSignatureData:(id)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100180E1C;
  v12[3] = &unk_10073ADD8;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_10000817C((uint64_t)database, v12);
  LOBYTE(v6) = *((unsigned char *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (BOOL)updateUserConfirmationData:(id)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100180FDC;
  v12[3] = &unk_10073ADD8;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_10000817C((uint64_t)database, v12);
  LOBYTE(v6) = *((unsigned char *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (BOOL)addProcessedAuthenticationMechanisms:(unint64_t)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v14 = 0;
  id v15 = &v14;
  uint64_t v16 = 0x2020000000;
  char v17 = 0;
  uint64_t database = self->_database;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100181174;
  v10[3] = &unk_1007325B8;
  void v10[4] = self;
  id v8 = v6;
  id v11 = v8;
  uint64_t v12 = &v14;
  unint64_t v13 = a3;
  sub_10000817C((uint64_t)database, v10);
  LOBYTE(a3) = *((unsigned char *)v15 + 24);

  _Block_object_dispose(&v14, 8);
  return a3;
}

- (BOOL)addDataCollectedAuthenticationMechanisms:(unint64_t)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v14 = 0;
  id v15 = &v14;
  uint64_t v16 = 0x2020000000;
  char v17 = 0;
  uint64_t database = self->_database;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_10018130C;
  v10[3] = &unk_1007325B8;
  void v10[4] = self;
  id v8 = v6;
  id v11 = v8;
  uint64_t v12 = &v14;
  unint64_t v13 = a3;
  sub_10000817C((uint64_t)database, v10);
  LOBYTE(a3) = *((unsigned char *)v15 + 24);

  _Block_object_dispose(&v14, 8);
  return a3;
}

- (BOOL)markAuthenticationCompleteforTransactionIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000;
  char v14 = 0;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10018149C;
  v8[3] = &unk_10073A580;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  sub_10000817C((uint64_t)database, v8);
  LOBYTE(database) = *((unsigned char *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)database;
}

- (BOOL)resetTransactionAuthenticationForTransactionIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000;
  char v14 = 0;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10018162C;
  v8[3] = &unk_10073A580;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  sub_10000817C((uint64_t)database, v8);
  LOBYTE(database) = *((unsigned char *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)database;
}

- (id)transactionAuthenticationResultForTransactionIdentifier:(id)a3
{
  id v3 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 transactionAuthenticationResult];

  return v4;
}

- (int64_t)barcodeBackgroundFetchRetryLevelForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000;
  uint64_t v15 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100181818;
  v9[3] = &unk_10073A580;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  uint64_t v11 = &v12;
  sub_10000817C((uint64_t)database, v9);
  int64_t v7 = v13[3];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (BOOL)updateNextBarcodeBackgroundFetchDate:(id)a3 withRetryLevel:(int64_t)a4 forPassUniqueIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  uint64_t v19 = 0;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x2020000000;
  char v22 = 0;
  uint64_t database = self->_database;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1001819BC;
  v14[3] = &unk_1007335E8;
  void v14[4] = self;
  id v11 = v9;
  id v15 = v11;
  char v17 = &v19;
  id v12 = v8;
  id v16 = v12;
  int64_t v18 = a4;
  sub_10000817C((uint64_t)database, v14);
  LOBYTE(a4) = *((unsigned char *)v20 + 24);

  _Block_object_dispose(&v19, 8);
  return a4;
}

- (id)nextBarcodeBackgroundFetchDate
{
  return +[BarcodeFetch nextBackgroundFetchDateInDatabase:self->_database];
}

- (BOOL)hasBarcodeBackgroundFetchRecordForPassUniqueIdentifier:(id)a3 nextBackgroundFetchDate:(id *)a4
{
  id v6 = a3;
  uint64_t v21 = 0;
  char v22 = &v21;
  uint64_t v23 = 0x2020000000;
  char v24 = 0;
  uint64_t v15 = 0;
  id v16 = &v15;
  uint64_t v17 = 0x3032000000;
  int64_t v18 = sub_10002090C;
  uint64_t v19 = sub_100020F78;
  id v20 = 0;
  uint64_t database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100181BD4;
  void v11[3] = &unk_10073AE00;
  void v11[4] = self;
  id v8 = v6;
  id v12 = v8;
  uint64_t v13 = &v15;
  uint64_t v14 = &v21;
  sub_10000817C((uint64_t)database, v11);
  if (a4) {
    *a4 = (id) v16[5];
  }
  char v9 = *((unsigned char *)v22 + 24);

  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v21, 8);

  return v9;
}

- (id)passesWithNextBackgroundFetchDateBeforeDate:(id)a3
{
  id v4 = +[BarcodeFetch passPIDsWithNextbackgroundFetchDateBeforeDate:a3 inDatabase:self->_database];
  id v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472;
  id v10 = sub_100181D6C;
  id v11 = &unk_10073AE28;
  id v12 = self;
  id v13 = objc_alloc_init((Class)NSMutableArray);
  id v5 = v13;
  [v4 enumerateObjectsUsingBlock:&v8];
  id v6 = objc_msgSend(v5, "copy", v8, v9, v10, v11, v12);

  return v6;
}

- (id)evaluatedPolicyDomainStateForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000;
  uint64_t v15 = sub_10002090C;
  id v16 = sub_100020F78;
  id v17 = 0;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100181F7C;
  v9[3] = &unk_10073A580;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  id v11 = &v12;
  sub_10000817C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (BOOL)insertOrUpdateEvaluatedPolicyDomainState:(id)a3 forDPANIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 1;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1001821E8;
  v12[3] = &unk_10073ADD8;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  uint64_t v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_10000817C((uint64_t)database, v12);
  LOBYTE(v6) = *((unsigned char *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (void)addChangeEvents:(id)a3
{
}

- (void)increaseRetryCountForRecordUniqueIdenifier:(id)a3 recordType:(int64_t)a4
{
}

- (id)retryDateForEvent:(id)a3
{
  return +[ChangeHistoryEventRetryDetails retryDateForEvent:a3 inDatabase:self->_database];
}

- (unint64_t)numberOfChangeEvents
{
  return +[ChangeHistoryEvent numberOfChangeEventsInDatabase:self->_database];
}

- (id)changeEventsWithRecordType:(int64_t)a3
{
  return +[ChangeHistoryEvent eventsWithRecordType:a3 inDatabase:self->_database];
}

- (id)changeEventsWithRecordType:(int64_t)a3 recordUniqueID:(id)a4
{
  return +[ChangeHistoryEvent eventsWithRecordType:a3 recodUniqueID:a4 inDatabase:self->_database];
}

- (void)removeChangeEvents:(id)a3
{
}

- (void)removeExpiredChangeEvents
{
}

- (void)removeAllChangeEvents
{
}

- (int64_t)spotlightIndexingVersion
{
  uint64_t v6 = 0;
  id v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v9 = 0;
  uint64_t database = self->_database;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100182594;
  v5[3] = &unk_10073AE78;
  v5[4] = &v6;
  sub_100012DC8((uint64_t)database, @"SELECT version FROM index_metadata LIMIT 1", v5);
  int64_t v3 = v7[3];
  _Block_object_dispose(&v6, 8);
  return v3;
}

- (void)updateSpotlightIndexingVersion:(int64_t)a3
{
  sub_10000C100((BOOL)self->_database, @"DELETE FROM index_metadata");
  uint64_t database = self->_database;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001826AC;
  v6[3] = &unk_10073AE98;
  void v6[4] = a3;
  sub_100012DC8((uint64_t)database, @"INSERT INTO index_metadata (version) VALUES (?)", v6);
}

- (int64_t)indexingMetadataVersionForType:(unint64_t)a3
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000;
  uint64_t v10 = 0;
  uint64_t database = self->_database;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001827C0;
  v6[3] = &unk_10073AEC0;
  void v6[4] = &v7;
  void v6[5] = a3;
  sub_100012DC8((uint64_t)database, @"SELECT version FROM index_fetched_metadata WHERE type = ? LIMIT 1", v6);
  int64_t v4 = v8[3];
  _Block_object_dispose(&v7, 8);
  return v4;
}

- (unint64_t)indexingMetadataStatusForType:(unint64_t)a3
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000;
  uint64_t v10 = 0;
  uint64_t database = self->_database;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10018291C;
  v6[3] = &unk_10073AEC0;
  void v6[4] = &v7;
  void v6[5] = a3;
  sub_100012DC8((uint64_t)database, @"SELECT status FROM index_fetched_metadata WHERE type = ? LIMIT 1", v6);
  unint64_t v4 = v8[3];
  _Block_object_dispose(&v7, 8);
  return v4;
}

- (void)updateIndexingMetadataStatus:(unint64_t)a3 version:(int64_t)a4 forType:(unint64_t)a5
{
  uint64_t database = self->_database;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100182A2C;
  v6[3] = &unk_10073AEE0;
  void v6[4] = a5;
  void v6[5] = a3;
  void v6[6] = a4;
  sub_100012DC8((uint64_t)database, @"INSERT OR REPLACE INTO index_fetched_metadata (type, status, version) VALUES (?, ?, ?)", v6);
}

- (void)markAllIndexedTransactionsForIndexDeletion
{
  sub_100012DC8((uint64_t)self->_database, @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 WHERE type = ?", &stru_10073AF20);
}

- (void)resetIndexingItems
{
  sub_100012DC8((uint64_t)self->_database, @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 WHERE status = ?", &stru_10073AF40);
}

- (void)resetVerifyingItems
{
  sub_100012DC8((uint64_t)self->_database, @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 WHERE status = ?", &stru_10073AF60);
}

- (void)markAllIndexedContentForVerifyingOfType:(unint64_t)a3
{
  uint64_t database = self->_database;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100182C70;
  v4[3] = &unk_10073AE98;
  v4[4] = a3;
  sub_100012DC8((uint64_t)database, @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 where status=? and type=?", v4);
}

- (void)markAllVerifyingContentForReindexingOfType:(unint64_t)a3
{
  uint64_t database = self->_database;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100182D58;
  v4[3] = &unk_10073AE98;
  v4[4] = a3;
  sub_100012DC8((uint64_t)database, @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 where status=? and type=?", v4);
}

- (void)markAllIndexedContentForReindexingOfType:(unint64_t)a3
{
  uint64_t database = self->_database;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100182E40;
  v4[3] = &unk_10073AE98;
  v4[4] = a3;
  sub_100012DC8((uint64_t)database, @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 where status=? and type=?", v4);
}

- (void)markAllIndexedContentForReindexing
{
  sub_100012DC8((uint64_t)self->_database, @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 where status=?", &stru_10073AF80);
}

- (void)resetIndexedContent
{
  uint64_t database = self->_database;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100182F98;
  v3[3] = &unk_10073AFA8;
  v3[4] = self;
  sub_10000817C((uint64_t)database, v3);
}

- (BOOL)updateIndexerItemWithIdentifier:(id)a3 type:(unint64_t)a4 status:(unint64_t)a5
{
  return +[SpotlightIndexerItem updateWithIdentifier:a3 type:a4 status:a5 inDatabase:self->_database];
}

- (void)insertOrUpdateIndexerItemWithIdentifier:(id)a3 domainIdentifier:(id)a4 searchableItemData:(id)a5 type:(unint64_t)a6 status:(unint64_t)a7 error:(id)a8
{
}

- (void)deleteDuplicateIndexerItems
{
}

- (id)indexerItemWithUniqueIdentifier:(id)a3
{
  return +[SpotlightIndexerItem itemWithUniqueIdentifier:a3 inDatabase:self->_database];
}

- (void)updateIndexerItemsWithDomainIdentifier:(id)a3 type:(unint64_t)a4 status:(unint64_t)a5 error:(id)a6
{
}

- (id)batchOfActionableIndexerItemsWithCount:(unint64_t)a3
{
  return +[SpotlightIndexerItem batchOfActionableItemsInDatabase:self->_database withCount:a3];
}

- (id)indexerItemCountsOfType:(unint64_t)a3
{
  return +[SpotlightIndexerItem itemCountsOfType:a3 inDatabase:self->_database];
}

- (id)allIndexedItemsOfType:(unint64_t)a3
{
  return +[SpotlightIndexerItem allIndexedItemsOfType:a3 inDatabase:self->_database];
}

- (BOOL)hasFutureActionableIndexerItems
{
  return +[SpotlightIndexerItem hasFutureActionableItemsInDatabase:self->_database];
}

- (id)transactionSourceIdentifiersForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    uint64_t database = self->_database;
    uint64_t v6 = [(PKSecureElement *)self->_secureElement secureElementIdentifiers];
    uint64_t v7 = +[PaymentApplication paymentApplicationsInDatabase:database forPassUniqueIdentifier:v4 secureElementIdentifiers:v6];

    id v8 = objc_alloc_init((Class)NSMutableSet);
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v9 = v7;
    id v10 = [v9 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v12) {
            objc_enumerationMutation(v9);
          }
          id v14 = objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * i), "transactionSourceIdentifier", (void)v17);
          if (v14) {
            [v8 addObject:v14];
          }
        }
        id v11 = [v9 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }
      while (v11);
    }

    id v15 = [v8 copy];
  }
  else
  {
    id v15 = 0;
  }

  return v15;
}

- (id)allAssociatedTransactionSourceIdentifiersForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:v4];
  id v6 = [v5 mutableCopy];

  uint64_t v7 = [(PDDatabaseManager *)self associatedAccountIdentifierForPassWithUniqueIdentifier:v4];
  if (v7)
  {
    id v8 = [(PDDatabaseManager *)self accountUsersForAccountWithIdentifier:v7];
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v9 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = [*(id *)(*((void *)&v17 + 1) + 8 * i) altDSID];
          id v14 = [(PDDatabaseManager *)self transactionSourceIdentifierForAccountUserAltDSID:v13 accountIdentifier:v7];

          if (v14) {
            [v6 addObject:v14];
          }
        }
        id v10 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }
      while (v10);
    }
  }
  id v15 = [v6 copy];

  return v15;
}

- (id)passUniqueIdentifierForTransactionSourceIdentifier:(id)a3
{
  return [(PDDatabaseManager *)self passUniqueIdentifierForTransactionSourceIdentifier:a3 includingAccountUsers:0];
}

- (id)transactionSourceIdentifiersAssociatedWithPassUniqueIdentifier:(id)a3
{
  long long v17 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  id v4 = +[PaymentApplication paymentApplicationsInDatabase:forPass:](PaymentApplication, "paymentApplicationsInDatabase:forPass:", self->_database);
  id v5 = objc_alloc_init((Class)NSMutableSet);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t database = self->_database;
        uint64_t v12 = [*(id *)(*((void *)&v18 + 1) + 8 * i) transactionSourceIdentifier];
        id v13 = +[TransactionSource anyInDatabase:database withIdentifier:v12];

        id v14 = [v13 identifier];
        [v5 addObject:v14];
      }
      id v8 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v8);
  }

  id v15 = [v5 copy];
  return v15;
}

- (id)passUniqueIdentifierForTransactionSourceIdentifier:(id)a3 includingAccountUsers:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = +[TransactionSource anyInDatabase:self->_database withIdentifier:v6];
  id v8 = +[PaymentApplication anyInDatabase:withTransactionSourcePID:](PaymentApplication, "anyInDatabase:withTransactionSourcePID:", self->_database, [v7 persistentID]);
  uint64_t v9 = v8;
  uint64_t database = self->_database;
  if (v8) {
    +[Pass anyInDatabase:withPersistentID:](Pass, "anyInDatabase:withPersistentID:", database, [v8 passPID]);
  }
  else {
  uint64_t v11 = +[Pass anyInDatabase:withTransactionSourcePID:](Pass, "anyInDatabase:withTransactionSourcePID:", database, [v7 persistentID]);
  }
  uint64_t v12 = [v11 uniqueID];
  if (v12) {
    BOOL v13 = 1;
  }
  else {
    BOOL v13 = !v4;
  }
  if (!v13)
  {
    id v14 = +[PaymentTransaction anyInDatabase:self->_database withTransactionSourceIdentifier:v6];
    if ([v14 accountType] != (id)2) {
      goto LABEL_11;
    }
    id v15 = self->_database;
    uint64_t v16 = [v14 transactionSourceIdentifier];
    long long v17 = +[TransactionSource anyInDatabase:v15 withIdentifier:v16];
    id v18 = [v17 type];

    if (v18 == (id)2)
    {
      long long v19 = self->_database;
      long long v20 = [v14 accountIdentifier];
      long long v21 = +[Pass anyInDatabase:v19 withAssociatedAccountIdentifier:v20];

      uint64_t v12 = [v21 uniqueID];
    }
    else
    {
LABEL_11:
      uint64_t v12 = 0;
    }
  }
  return v12;
}

- (id)transactionsForAdjustmentType:(int64_t)a3 limit:(int64_t)a4
{
  return +[PaymentTransaction transactionsForAdjustmentType:a3 limit:a4 inDatabase:self->_database];
}

- (id)paymentApplicationIdentifierForTransactionSourceIdentifier:(id)a3
{
  BOOL v4 = +[TransactionSource anyInDatabase:self->_database withIdentifier:a3];
  id v5 = +[PaymentApplication anyInDatabase:withTransactionSourcePID:](PaymentApplication, "anyInDatabase:withTransactionSourcePID:", self->_database, [v4 persistentID]);
  id v6 = [v5 applicationIdentifier];

  return v6;
}

- (id)paymentApplicationForTransactionSourceIdentifier:(id)a3
{
  BOOL v4 = +[TransactionSource anyInDatabase:self->_database withIdentifier:a3];
  id v5 = +[PaymentApplication anyInDatabase:withTransactionSourcePID:](PaymentApplication, "anyInDatabase:withTransactionSourcePID:", self->_database, [v4 persistentID]);
  id v6 = [v5 paymentApplication];

  return v6;
}

- (id)paymentTransactionWithIdentifier:(id)a3
{
  int64_t v3 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
  BOOL v4 = [v3 paymentTransaction];

  return v4;
}

- (BOOL)transactionSourceExistsWithIdentifier:(id)a3
{
  int64_t v3 = +[TransactionSource anyInDatabase:self->_database withIdentifier:a3];
  unsigned __int8 v4 = [v3 existsInDatabase];

  return v4;
}

- (id)transactionSourceIdentifierForTransactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5
{
  id v5 = +[PaymentTransaction anyInDatabase:self->_database withServiceIdentifier:a3 accountIdentifier:a4 accountType:a5];
  id v6 = [v5 transactionSourceIdentifier];

  return v6;
}

- (unint64_t)transactionSourceTypeForTransactionSourceIdentifier:(id)a3
{
  int64_t v3 = +[TransactionSource anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 type];

  return (unint64_t)v4;
}

- (id)peerPaymentAccountForTransactionSourceIdentifier:(id)a3
{
  id v4 = +[TransactionSource anyInDatabase:self->_database withIdentifier:a3];
  id v5 = +[PeerPaymentAccount anyInDatabase:withTransactionSourcePID:](PeerPaymentAccount, "anyInDatabase:withTransactionSourcePID:", self->_database, [v4 persistentID]);
  id v6 = [v5 peerPaymentAccount];

  return v6;
}

- (id)accountUserWithTransactionSourceIdentifier:(id)a3
{
  id v4 = +[TransactionSource anyInDatabase:self->_database withIdentifier:a3];
  id v5 = +[AccountUser anyInDatabase:withTransactionSourcePID:](AccountUser, "anyInDatabase:withTransactionSourcePID:", self->_database, [v4 persistentID]);
  id v6 = [v5 accountUser];

  return v6;
}

- (id)transactionSourceIdentifierForAccountUserAltDSID:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[Account anyInDatabase:self->_database withIdentifier:a4];
  if ([v7 existsInDatabase])
  {
    id v8 = +[AccountUser anyInDatabase:withAltDSID:accountPID:](AccountUser, "anyInDatabase:withAltDSID:accountPID:", self->_database, v6, [v7 persistentID]);
    uint64_t v9 = [v8 transactionSourceIdentifier];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)accountWithTransactionSourceIdentifier:(id)a3
{
  id v4 = +[TransactionSource anyInDatabase:self->_database withIdentifier:a3];
  id v5 = +[Account anyInDatabase:withTransactionSourcePID:](Account, "anyInDatabase:withTransactionSourcePID:", self->_database, [v4 persistentID]);
  id v6 = [v5 account];

  return v6;
}

- (id)transactionSourceIdentifierForAccountIdentifier:(id)a3
{
  int64_t v3 = +[Account anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 transactionSourceIdentifier];

  return v4;
}

- (id)transactionSourceIdentifierForPeerPaymentAccountIdentifier:(id)a3
{
  int64_t v3 = +[PeerPaymentAccount anyInDatabase:self->_database withIdentifier:a3];
  id v4 = [v3 transactionSourceIdentifier];

  return v4;
}

- (id)serviceIdentifierForTransactionIdentifier:(id)a3 accountIdentifier:(id *)a4 accountType:(int64_t *)a5
{
  id v7 = +[PaymentTransaction anyInDatabase:self->_database withIdentifier:a3];
  id v8 = v7;
  if (v7)
  {
    if (a4)
    {
      *a4 = [v7 accountIdentifier];
    }
    if (a5) {
      *a5 = (int64_t)[v8 accountType];
    }
    uint64_t v9 = [v8 serviceIdentifier];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (id)broadwayOrSurfTransactionSourceIdentifierForAmbiguousServiceIdentifier:(id)a3 transactionAccountIdentifier:(id *)a4 transactionAccountType:(int64_t *)a5 transactionAltDSID:(id *)a6
{
  id v8 = a3;
  uint64_t v59 = 0;
  id v60 = &v59;
  uint64_t v61 = 0x3032000000;
  id v62 = sub_10002090C;
  id v63 = sub_100020F78;
  id v64 = 0;
  uint64_t v55 = 0;
  uint64_t v56 = &v55;
  uint64_t v57 = 0x2020000000;
  uint64_t v58 = 0;
  uint64_t v49 = 0;
  id v50 = &v49;
  uint64_t v51 = 0x3032000000;
  id v52 = sub_10002090C;
  id v53 = sub_100020F78;
  id v54 = 0;
  uint64_t v9 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  id v10 = [v9 associatedPassUniqueID];
  uint64_t v11 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:v10];
  uint64_t v12 = [v11 anyObject];

  BOOL v13 = [(PDDatabaseManager *)self transactionWithServiceIdentifier:v8 transactionSourceIdentifier:v12];
  id v14 = v13;
  if (v13)
  {
    uint64_t v15 = [v13 transactionSourceIdentifier];
    uint64_t v16 = (void *)v60[5];
    v60[5] = v15;
  }
  if (v60[5])
  {
    id v17 = 0;
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    id v18 = [(PDDatabaseManager *)self accounts];
    id v17 = [v18 countByEnumeratingWithState:&v45 objects:v67 count:16];
    if (v17)
    {
      uint64_t v19 = *(void *)v46;
      while (2)
      {
        for (uint64_t i = 0; i != v17; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v46 != v19) {
            objc_enumerationMutation(v18);
          }
          long long v21 = *(void **)(*((void *)&v45 + 1) + 8 * i);
          if ([v21 feature] == (id)2)
          {
            char v22 = [v21 associatedPassUniqueID];
            uint64_t v23 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:v22];
            uint64_t v24 = [v23 anyObject];

            id v25 = [(PDDatabaseManager *)self transactionWithServiceIdentifier:v8 transactionSourceIdentifier:v24];
            uint64_t v26 = v25;
            if (v25)
            {
              uint64_t v27 = [v25 transactionSourceIdentifier];
              long long v28 = (void *)v60[5];
              v60[5] = v27;

              uint64_t v29 = [v26 accountIdentifier];
              id v30 = (void *)v50[5];
              v50[5] = v29;

              id v31 = [v26 accountType];
              v56[3] = (uint64_t)v31;
              id v17 = [v26 altDSID];
            }
            else
            {
              id v17 = 0;
            }

            uint64_t v12 = (void *)v24;
            goto LABEL_18;
          }
        }
        id v17 = [v18 countByEnumeratingWithState:&v45 objects:v67 count:16];
        if (v17) {
          continue;
        }
        break;
      }
    }
LABEL_18:

    if (!v60[5])
    {
      id v32 = [(PDDatabaseManager *)self peerPaymentAccount];
      id v33 = [v32 associatedAccountInformation];
      v40[0] = _NSConcreteStackBlock;
      v40[1] = 3221225472;
      v40[2] = sub_100184328;
      v40[3] = &unk_10073AFD0;
      v40[4] = self;
      id v34 = v8;
      id v41 = v34;
      uint64_t v42 = &v59;
      unsigned int v43 = &v49;
      float v44 = &v55;
      [v33 enumerateAssociatedAccountsUsingBlock:v40];

      if (!v60[5])
      {
        id v35 = PKLogFacilityTypeGetObject();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          id v66 = v34;
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "Error: could not find the transactionSourceIdentifier for the card or peer payment transaction with service identifier %@", buf, 0xCu);
        }
      }
    }
  }
  if (a4) {
    *a4 = (id) v50[5];
  }
  if (a5) {
    *a5 = v56[3];
  }
  if (a6) {
    *a6 = v17;
  }
  id v36 = (id)v60[5];

  _Block_object_dispose(&v49, 8);
  _Block_object_dispose(&v55, 8);

  _Block_object_dispose(&v59, 8);
  return v36;
}

- (id)broadwayOrSurfPassUniqueIdentifierForAmbiguousServiceIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  id v6 = [v5 associatedPassUniqueID];

  id v7 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:v6];
  id v8 = [v7 anyObject];

  uint64_t v9 = [(PDDatabaseManager *)self transactionWithServiceIdentifier:v4 transactionSourceIdentifier:v8];
  if (v9 && (id v10 = v6) != 0)
  {
    id v11 = v10;
    id v6 = v10;
    uint64_t v12 = v8;
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    BOOL v13 = [(PDDatabaseManager *)self accounts];
    id v14 = [v13 countByEnumeratingWithState:&v26 objects:v32 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v27;
LABEL_6:
      uint64_t v17 = 0;
      while (1)
      {
        if (*(void *)v27 != v16) {
          objc_enumerationMutation(v13);
        }
        id v18 = *(void **)(*((void *)&v26 + 1) + 8 * v17);
        if ([v18 feature] == (id)2) {
          break;
        }
        if (v15 == (id)++v17)
        {
          id v15 = [v13 countByEnumeratingWithState:&v26 objects:v32 count:16];
          if (v15) {
            goto LABEL_6;
          }
          goto LABEL_17;
        }
      }
      uint64_t v19 = [v18 associatedPassUniqueID];

      long long v20 = [(PDDatabaseManager *)self transactionSourceIdentifiersForPassUniqueIdentifier:v19];
      uint64_t v12 = [v20 anyObject];

      uint64_t v21 = [(PDDatabaseManager *)self transactionWithServiceIdentifier:v4 transactionSourceIdentifier:v12];
      if (!v21)
      {
        id v6 = v19;
        id v8 = v12;
        goto LABEL_17;
      }
      char v22 = (void *)v21;
      id v11 = v19;

      if (v11)
      {
        id v6 = v11;
        goto LABEL_21;
      }
      id v6 = 0;
    }
    else
    {
LABEL_17:

      uint64_t v12 = v8;
    }
    uint64_t v23 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v31 = v4;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Error: could not find the pass unique identifier for the card or peer payment transaction with service identifier %{public}@", buf, 0xCu);
    }

    id v11 = 0;
  }
LABEL_21:
  id v24 = v11;

  return v24;
}

- (id)peerPaymentTransactionServiceIdentifiersForTransactionSourceIdentifiers:(id)a3 withPeerPaymentSubtype:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8
{
  return +[PaymentTransaction transactionServiceIdentifiersInDatabase:self->_database withTransactionType:3 withPeerPaymentSubtype:a4 forTransactionSourceIdentifiers:a3 withTransactionSource:a5 withBackingData:a6 startDate:a7 endDate:a8];
}

- (void)insertOrUpdateRegion:(id)a3
{
  id v3 = +[WorldRegion insertOrUpdateRegion:a3 inDatabase:self->_database];
}

- (void)updateSingleRegion:(id)a3
{
  id v3 = +[WorldRegion updateSingleRegion:a3 inDatabase:self->_database];
}

- (id)worldRegionWithIdentifier:(id)a3 localeIdentifier:(id)a4
{
  return +[WorldRegion regionWithIdentifier:a3 localeIdentifier:a4 inDatabase:self->_database];
}

- (id)regionsMatchingName:(id)a3 types:(id)a4 localeIdentifier:(id)a5
{
  return +[WorldRegion regionsMatchingName:a3 types:a4 localeIdentifier:a5 inDatabase:self->_database];
}

- (id)regionsOfType:(unint64_t)a3 localeIdentifier:(id)a4
{
  return +[WorldRegion regionsOfType:a3 localeIdentifier:a4 inDatabase:self->_database];
}

- (BOOL)hasMultipleRegionsOfType:(unint64_t)a3 localeIdentifier:(id)a4
{
  return +[WorldRegion hasMultipleRegionsOfType:a3 localeIdentifier:a4 inDatabase:self->_database];
}

- (id)regionsForTransaction:(id)a3 localeIdentifier:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a4;
  id v8 = [a3 identifier];
  uint64_t v9 = +[PaymentTransaction anyInDatabase:database withIdentifier:v8];
  id v10 = +[WorldRegion regionsForTransactionPID:localeIdentifier:inDatabase:](WorldRegion, "regionsForTransactionPID:localeIdentifier:inDatabase:", [v9 persistentID], v7, self->_database);

  return v10;
}

- (id)regionsForTransactionPID:(int64_t)a3 localeIdentifier:(id)a4
{
  return +[WorldRegion regionsForTransactionPID:a3 localeIdentifier:a4 inDatabase:self->_database];
}

- (id)regionsMissingLocalizedContentForLocaleIdentifier:(id)a3
{
  return +[WorldRegion regionsMissingLocalizedContentForLocaleIdentifier:a3 inDatabase:self->_database];
}

- (BOOL)hasRegionsMissingLocalizedContentForLocaleIdentifier:(id)a3
{
  return +[WorldRegion hasRegionsMissingLocalizedContentForLocaleIdentifier:a3 inDatabase:self->_database];
}

- (id)lastRegionErrorForTransaction:(id)a3
{
  uint64_t database = self->_database;
  id v5 = [a3 identifier];
  id v6 = +[PaymentTransaction anyInDatabase:database withIdentifier:v5];
  id v7 = +[WorldRegion lastRegionErrorForTransaction:v6 inDatabase:self->_database];

  return v7;
}

- (void)resetCoordinatesForAllRegions
{
}

- (void)deleteAllRegions
{
}

- (void)deleteRegionsWithNoMatchingTransactions
{
}

- (id)dynamicAssociatedDomains
{
  return +[DynamicAssociatedDomain associatedDomainsInDatabase:self->_database];
}

- (void)insertDynamicAssociatedDomains:(id)a3
{
  uint64_t database = self->_database;
  id v5 = a3;
  +[DynamicAssociatedDomain deleteAssociatedDomainsInDatabase:database];
  +[DynamicAssociatedDomain insertAssociatedDomains:v5 inDatabase:self->_database];
}

- (id)merchantForPassUniqueIdentifier:(id)a3 auxiliaryPassInformationItemIdentifier:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a4;
  id v8 = +[Pass anyInDatabase:database withUniqueID:a3];
  uint64_t v9 = +[PassAuxiliaryItemMerchant merchantForPassAuxiliaryItemIdentifier:passPersistentID:inDatabase:](PassAuxiliaryItemMerchant, "merchantForPassAuxiliaryItemIdentifier:passPersistentID:inDatabase:", v7, [v8 persistentID], self->_database);

  return v9;
}

- (id)auxiliaryItemIdentifiersForPassUniqueIdentifier:(id)a3
{
  id v4 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  id v5 = +[PassAuxiliaryItemMerchant itemIdentifiersForPassPersisentID:inDatabase:](PassAuxiliaryItemMerchant, "itemIdentifiersForPassPersisentID:inDatabase:", [v4 persistentID], self->_database);

  return v5;
}

- (void)insertMerchant:(id)a3 forPassUniqueIdentifier:(id)a4 auxiliaryPassInformationItemIdentifier:(id)a5
{
  id v16 = a5;
  uint64_t database = self->_database;
  id v9 = a3;
  id v10 = +[Pass anyInDatabase:database withUniqueID:a4];
  id v11 = [v9 mapsBrand];
  uint64_t v12 = [v9 mapsMerchant];

  if (v11)
  {
    BOOL v13 = +[MapsBrand insertMapsBrand:v11 inDatabase:self->_database];
    if (v12)
    {
LABEL_3:
      id v14 = +[MapsMerchant insertMapsMerchant:v12 inDatabase:self->_database];
      goto LABEL_6;
    }
  }
  else
  {
    BOOL v13 = 0;
    if (v12) {
      goto LABEL_3;
    }
  }
  id v14 = 0;
LABEL_6:
  id v15 = +[PassAuxiliaryItemMerchant insertPassAuxiliaryItemMerchantForItemIdentifier:passPersistentID:mapsBrandPersistentID:mapsMerchantPersistentID:inDatabase:](PassAuxiliaryItemMerchant, "insertPassAuxiliaryItemMerchantForItemIdentifier:passPersistentID:mapsBrandPersistentID:mapsMerchantPersistentID:inDatabase:", v16, [v10 persistentID], objc_msgSend(v13, "persistentID"), objc_msgSend(v14, "persistentID"), self->_database);
}

- (void)deleteMerchantForPassUniqueIdentifier:(id)a3 auxiliaryPassInformationItemIdentifier:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a4;
  id v8 = +[Pass anyInDatabase:database withUniqueID:a3];
  +[PassAuxiliaryItemMerchant deletePassAuxiliaryItemMerchantForItemIdentifier:passPersistentID:inDatabase:](PassAuxiliaryItemMerchant, "deletePassAuxiliaryItemMerchantForItemIdentifier:passPersistentID:inDatabase:", v7, [v8 persistentID], self->_database);
}

- (void)deleteAllPassAuxiliaryItemMerchantsForPassUniqueIdentifier:(id)a3
{
  id v4 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
  +[PassAuxiliaryItemMerchant deleteAllPassAuxiliaryItemMerchantsForPassPersisentID:inDatabase:](PassAuxiliaryItemMerchant, "deleteAllPassAuxiliaryItemMerchantsForPassPersisentID:inDatabase:", [v4 persistentID], self->_database);
}

- (id)fetchDeviceEnviromentForClient:(int64_t)a3 andCompareToCurrentEnvironment:(id)a4 didChange:(BOOL *)a5
{
  id v8 = a4;
  uint64_t v18 = 0;
  uint64_t v19 = &v18;
  uint64_t v20 = 0x3032000000;
  uint64_t v21 = sub_10002090C;
  char v22 = sub_100020F78;
  id v23 = 0;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_100184EE8;
  v13[3] = &unk_10073AFF8;
  id v15 = &v18;
  int64_t v16 = a3;
  v13[4] = self;
  uint64_t v17 = a5;
  id v10 = v8;
  id v14 = v10;
  sub_10000817C((uint64_t)database, v13);
  id v11 = (id)v19[5];

  _Block_object_dispose(&v18, 8);
  return v11;
}

- (void)updateDeviceEnvironment:(id)a3 forClient:(int64_t)a4
{
  id v4 = +[DeviceEnvironment insertOrUpdateEnvironment:a3 forClient:a4 inDatabase:self->_database];
}

- (void)updateNFCPayloadState:(unint64_t)a3 forPassUniqueIdentifier:(id)a4 didChange:(BOOL *)a5
{
  id v8 = a4;
  uint64_t database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100185048;
  void v11[3] = &unk_100737418;
  void v11[4] = self;
  id v12 = v8;
  unint64_t v13 = a3;
  id v14 = a5;
  id v10 = v8;
  sub_10000817C((uint64_t)database, v11);
}

- (id)paymentOfferCatalog
{
  return +[PaymentOfferCatalog catalogInDatabase:self->_database];
}

- (void)insertOrUpdatePaymentOfferCatalog:(id)a3
{
}

- (void)removePaymentOfferCatalog
{
}

- (id)issuerInstallmentCriteriaIdentifierForFpanIdentifier:(id)a3
{
  return +[PaymentOfferInstallmentCriteria criteriaIdentifierForFpanIdentifier:a3 inDatabase:self->_database];
}

- (id)passEndpointMetadataForPassUniqueID:(id)a3 type:(unint64_t)a4
{
  id v4 = +[PassEndpointMetadata anyInDatabase:self->_database passUniqueID:a3 type:a4];
  id v5 = [v4 endpointMetadata];

  return v5;
}

- (id)insertOrUpdatePassEndpointMetadata:(id)a3
{
  id v3 = +[PassEndpointMetadata insertOrUpdateWithEndpointMetadata:a3 inDatabase:self->_database];
  id v4 = [v3 endpointMetadata];

  return v4;
}

- (void)deletePassEndpointMetadataForPassUniqueID:(id)a3 type:(unint64_t)a4
{
}

- (id)anyEligiblePaymentOfferRewardsCriteriaForPass:(id)a3
{
  id v4 = a3;
  id v5 = [v4 passTypeIdentifier];
  id v6 = [v4 serialNumber];

  id v7 = +[PaymentOfferRewardsCriteria anyEligiblePaymentOfferRewardsCriteriaInDatabase:self->_database withPassTypeIdentifier:v5 passSerialNumber:v6];

  return v7;
}

- (id)paymentRewardsBalanceWithIdentifier:(id)a3
{
  return +[PaymentRewardsBalance rewardsBalancesWithIdentifier:a3 inDatabase:self->_database];
}

- (id)paymentRewardsBalancesForPassUniqueIdentifier:(id)a3
{
  return +[PaymentRewardsBalance rewardsBalancesForPassUniqueIdentifier:a3 inDatabase:self->_database];
}

- (void)insertOrUpdatePaymentRewardsBalances:(id)a3 withPassUniqueIdentifier:(id)a4
{
  id v4 = +[PaymentRewardsBalance insertOrUpdateRewardsBalances:a3 withPassUniqueIdentifier:a4 inDatabase:self->_database];
}

- (void)deletePaymentRewardsBalancesForPassUniqueIdentifier:(id)a3
{
}

- (void)insertOrUpdatePaymentRewardsRedemption:(id)a3 withPassUniqueIdentifier:(id)a4
{
  id v4 = +[PaymentRewardsRedemption insertOrUpdateRewardsRedemption:a3 withPassUniqueIdentifier:a4 inDatabase:self->_database];
}

- (void)deletePaymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3
{
}

- (id)paymentRewardsRedemptionWithPaymentHash:(id)a3
{
  return +[PaymentRewardsRedemption rewardsRedemptionWithPaymentHash:a3 inDatabase:self->_database];
}

- (id)paymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3 limit:(int64_t)a4
{
  return +[PaymentRewardsRedemption rewardsRedemptionsForPassUniqueIdentifier:a3 limit:a4 inDatabase:self->_database];
}

- (id)paymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3 paymentHashes:(id)a4
{
  return +[PaymentRewardsRedemption rewardsRedemptionsForPassUniqueIdentifier:a3 paymentHashes:a4 inDatabase:self->_database];
}

- (PDDatabaseManagerDelegate)delegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  return (PDDatabaseManagerDelegate *)WeakRetained;
}

- (void)setDelegate:(id)a3
{
}

- (PDDatabaseManagerWebServicesDelegate)webServicesDelegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_webServicesDelegate);
  return (PDDatabaseManagerWebServicesDelegate *)WeakRetained;
}

- (void)setWebServicesDelegate:(id)a3
{
}

- (PKSecureElement)secureElement
{
  return self->_secureElement;
}

- (void)setSecureElement:(id)a3
{
}

- (PDCloudStoreNotificationCoordinator)cloudStoreCoordinator
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_cloudStoreCoordinator);
  return (PDCloudStoreNotificationCoordinator *)WeakRetained;
}

- (void)setCloudStoreCoordinator:(id)a3
{
}

- (PDObjectSettingsManager)objectSettingsManager
{
  return self->_objectSettingsManager;
}

- (void)setObjectSettingsManager:(id)a3
{
}

- (PDDatabaseManagerPaymentServicesDelegate)paymentServicesDelegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_paymentServicesDelegate);
  return (PDDatabaseManagerPaymentServicesDelegate *)WeakRetained;
}

- (void)setPaymentServicesDelegate:(id)a3
{
}

- (PDDatabaseManagerNotificationServicesDelegate)notificationServicesDelegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
  return (PDDatabaseManagerNotificationServicesDelegate *)WeakRetained;
}

- (void)setNotificationServicesDelegate:(id)a3
{
}

- (BOOL)shouldSyncTransactionsToCloudStore
{
  return self->_shouldSyncTransactionsToCloudStore;
}

- (void)setShouldSyncTransactionsToCloudStore:(BOOL)a3
{
  self->_shouldSyncTransactionsToCloudStore = a3;
}

- (void).cxx_destruct
{
  objc_destroyWeak((id *)&self->_notificationServicesDelegate);
  objc_destroyWeak((id *)&self->_paymentServicesDelegate);
  objc_storeStrong((id *)&self->_objectSettingsManager, 0);
  objc_destroyWeak((id *)&self->_cloudStoreCoordinator);
  objc_storeStrong((id *)&self->_secureElement, 0);
  objc_destroyWeak((id *)&self->_webServicesDelegate);
  objc_destroyWeak((id *)&self->_delegate);
  objc_storeStrong((id *)&self->_bankConnectPassUpdateProcessor, 0);
  objc_storeStrong((id *)&self->_delegateQueue, 0);
  objc_storeStrong((id *)&self->_paymentTransactionUpdateQueue, 0);
  objc_storeStrong((id *)&self->_databaseURL, 0);
  objc_storeStrong((id *)&self->_database, 0);
}

- (void)fieldMetadataForFieldWithProperties:(id)a3 withExpressPassManager:(id)a4 completion:(id)a5
{
  id v7 = a3;
  id v113 = a4;
  id v8 = a5;
  id v116 = v7;
  if (v8)
  {
    id v112 = v8;
    id v9 = [v7 terminalType];
    uint64_t v187 = 0;
    id v188 = &v187;
    uint64_t v189 = 0x3032000000;
    id v190 = sub_10002095C;
    uint64_t v191 = sub_100020FA0;
    id v192 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v183 = 0;
    id v184 = &v183;
    uint64_t v185 = 0x2020000000;
    char v186 = 0;
    uint64_t v179 = 0;
    id v180 = &v179;
    uint64_t v181 = 0x2020000000;
    char v182 = 0;
    id v109 = PDDefaultPaymentPassUniqueIdentifier();
    id v115 = objc_alloc_init((Class)PKAsyncUnaryOperationComposer);
    unsigned __int8 v110 = [(PDDatabaseManager *)self shouldIgnoreFieldWithProperties:v7];
    if (v9 == (id)4)
    {
      [(PDDatabaseManager *)self passesForPaymentTypes:&off_10078C2B8];
      long long v155 = 0u;
      long long v156 = 0u;
      long long v153 = 0u;
      long long v154 = 0u;
      id v11 = (id)objc_claimAutoreleasedReturnValue();
      id v12 = [v11 countByEnumeratingWithState:&v153 objects:v201 count:16];
      if (v12)
      {
        uint64_t v13 = *(void *)v154;
        do
        {
          for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v154 != v13) {
              objc_enumerationMutation(v11);
            }
            id v15 = *(void **)(*((void *)&v153 + 1) + 8 * i);
            if ([v15 cardType] == (id)4)
            {
              int64_t v16 = (void *)v188[5];
              uint64_t v17 = [v15 uniqueID];
              [v16 addObject:v17];
            }
          }
          id v12 = [v11 countByEnumeratingWithState:&v153 objects:v201 count:16];
        }
        while (v12);
      }
LABEL_15:
      id obj = v11;
LABEL_154:

      goto LABEL_155;
    }
    if (v9 == (id)3)
    {
      id v10 = [v7 TCIs];
      uint64_t v100 = [v10 firstObject];

      id v104 = [v7 readerIdentifier];
      id context = objc_alloc_init((Class)NSMutableArray);
      if (v110)
      {
        id obj = 0;
      }
      else
      {
        float v44 = [v7 credentialIdentifier];
        id v118 = [v7 applicationIdentifier];
        *((unsigned char *)v180 + 24) = v104 != 0;
        if (v100) {
          [(PDDatabaseManager *)self contactlessAccessPaymentPassesWithTCI:v100 readerId:v104];
        }
        else {
        uint64_t v69 = [(PDDatabaseManager *)self passesForPaymentType:1001];
        }
        id v70 = [v116 fieldType];
        long long v177 = 0u;
        long long v178 = 0u;
        long long v175 = 0u;
        long long v176 = 0u;
        id obj = v69;
        id v71 = [obj countByEnumeratingWithState:&v175 objects:v205 count:16];
        if (v71)
        {
          uint64_t v102 = *(void *)v176;
          BOOL v72 = v118 == 0;
          LODWORD(v98) = v70 != (id)1;
          HIDWORD(v98) = v118 == 0;
          if (v70 == (id)1) {
            BOOL v72 = 0;
          }
          BOOL v101 = v72;
          do
          {
            id v99 = v71;
            uint64_t v73 = 0;
            do
            {
              if (*(void *)v176 != v102) {
                objc_enumerationMutation(obj);
              }
              id v74 = *(void **)(*((void *)&v175 + 1) + 8 * v73);
              uint64_t v108 = v73;
              uint64_t v103 = v74;
              if (v101)
              {
                char v75 = 1;
                unsigned __int8 v76 = 1;
              }
              else
              {
                long long v173 = 0u;
                long long v174 = 0u;
                long long v171 = 0u;
                long long v172 = 0u;
                long long v77 = [v74 deviceContactlessPaymentApplications];
                id v78 = [v77 countByEnumeratingWithState:&v171 objects:v204 count:16];
                char v75 = v98;
                unsigned __int8 v76 = BYTE4(v98);
                if (v78)
                {
                  id v120 = v77;
                  uint64_t v122 = *(void *)v172;
                  char v75 = v98;
                  unsigned __int8 v76 = BYTE4(v98);
                  do
                  {
                    id v124 = v78;
                    for (uint64_t j = 0; j != v124; uint64_t j = (char *)j + 1)
                    {
                      if (*(void *)v172 != v122) {
                        objc_enumerationMutation(v120);
                      }
                      long long v80 = *(void **)(*((void *)&v171 + 1) + 8 * (void)j);
                      if (v76)
                      {
                        unsigned __int8 v76 = 1;
                      }
                      else
                      {
                        long long v126 = *(void **)(*((void *)&v171 + 1) + 8 * (void)j);
                        long long v81 = [v80 applicationIdentifier];
                        unsigned __int8 v76 = [v81 isEqualToString:v118];

                        long long v80 = v126;
                        if ((v76 & (v44 != 0)) == 1)
                        {
                          long long v169 = 0u;
                          long long v170 = 0u;
                          long long v167 = 0u;
                          long long v168 = 0u;
                          long long v82 = [v126 subcredentials];
                          unsigned __int8 v76 = 0;
                          id v83 = [v82 countByEnumeratingWithState:&v167 objects:v203 count:16];
                          if (v83)
                          {
                            uint64_t v84 = *(void *)v168;
                            do
                            {
                              for (k = 0; k != v83; k = (char *)k + 1)
                              {
                                if (*(void *)v168 != v84) {
                                  objc_enumerationMutation(v82);
                                }
                                id v86 = objc_msgSend(*(id *)(*((void *)&v167 + 1) + 8 * (void)k), "identifier", v98);
                                unsigned __int8 v87 = [v86 isEqualToString:v44];

                                v76 |= v87;
                              }
                              id v83 = [v82 countByEnumeratingWithState:&v167 objects:v203 count:16];
                            }
                            while (v83);
                          }

                          long long v80 = v126;
                        }
                      }
                      if (v75)
                      {
                        char v75 = 1;
                      }
                      else
                      {
                        long long v165 = 0u;
                        long long v166 = 0u;
                        long long v163 = 0u;
                        long long v164 = 0u;
                        id v88 = [v80 automaticSelectionCriteria];
                        char v75 = 0;
                        id v89 = [v88 countByEnumeratingWithState:&v163 objects:v202 count:16];
                        if (v89)
                        {
                          uint64_t v90 = *(void *)v164;
                          do
                          {
                            for (m = 0; m != v89; m = (char *)m + 1)
                            {
                              if (*(void *)v164 != v90) {
                                objc_enumerationMutation(v88);
                              }
                              v75 |= objc_msgSend(*(id *)(*((void *)&v163 + 1) + 8 * (void)m), "technologyType", v98) == (id)2;
                            }
                            id v89 = [v88 countByEnumeratingWithState:&v163 objects:v202 count:16];
                          }
                          while (v89);
                        }
                      }
                    }
                    long long v77 = v120;
                    id v78 = [v120 countByEnumeratingWithState:&v171 objects:v204 count:16];
                  }
                  while (v78);
                }
              }
              if (v76 & 1) != 0 && (v75)
              {
                [context addObject:v103];
                *((unsigned char *)v184 + 24) = 1;
              }
              uint64_t v73 = v108 + 1;
            }
            while ((id)(v108 + 1) != v99);
            id v71 = [obj countByEnumeratingWithState:&v175 objects:v205 count:16];
          }
          while (v71);
        }

        id v92 = objc_msgSend(context, "pk_arrayByApplyingBlock:", &stru_10073CD60);
        id v93 = [v92 mutableCopy];
        id v94 = (void *)v188[5];
        v188[5] = (uint64_t)v93;
      }
      if ((unint64_t)objc_msgSend((id)v188[5], "count", v98) >= 2)
      {
        v157[0] = _NSConcreteStackBlock;
        v157[1] = 3221225472;
        v157[2] = sub_1001B4F4C;
        v157[3] = &unk_100731D08;
        id v158 = v113;
        v159 = self;
        id v162 = &v187;
        id v160 = context;
        id v161 = v104;
        [v115 addOperation:v157];
      }
      id v11 = (id)v100;
      goto LABEL_154;
    }
    if (([v7 technology] & 8) != 0)
    {
      id v37 = [v7 terminalType];
      id v38 = v37;
      BOOL v40 = v37 != (id)5 && v37 != 0;
      BOOL v121 = v40;
      uint64_t v42 = [v116 merchantIdentifiers];
      id obj = [(PDDatabaseManager *)self passesWithPassTypeIdentifierHashes:v42 automaticSelectionOnly:1];

      id v43 = [v116 valueAddedServiceMode];
      if ((unint64_t)v43 >= 2)
      {
        if (v43 == (id)2 || v43 == (id)4 && [obj count])
        {
          if (!v38 || v38 == (id)5) {
            goto LABEL_155;
          }
          goto LABEL_94;
        }
        if (!v38 || v38 == (id)5) {
          goto LABEL_155;
        }
LABEL_19:
        uint64_t v19 = [(PDDatabaseManager *)self passesOfType:1];
        id v123 = objc_msgSend(v19, "pk_mutableArrayCopy");
        id v20 = [v123 count];
        if (!v20)
        {

          id v123 = 0;
        }
        id v21 = objc_alloc((Class)NSMutableOrderedSet);
        if ((unint64_t)v20 <= 1) {
          uint64_t v22 = 1;
        }
        else {
          uint64_t v22 = (uint64_t)v20;
        }
        id v23 = [v21 initWithCapacity:v22];

        if (v9 == (id)2)
        {
          id v107 = [v116 TCIs];
          id v24 = [v107 firstObject];
          id v119 = v23;
          id v25 = v123;
          id v26 = v24;
          long long v27 = v26;
          long long v125 = v25;
          if (v25 && v26 && (long long v28 = (char *)[v25 count]) != 0)
          {
            long long v29 = 0;
            id v30 = 0;
            char v117 = 0;
            do
            {
              id v31 = [v125 objectAtIndexedSubscript:v29];
              if ([v31 isTransitPass])
              {
                long long v196 = 0u;
                long long v195 = 0u;
                long long v194 = 0u;
                long long v193 = 0u;
                id v32 = [v31 deviceContactlessPaymentApplications];
                id v33 = [v32 countByEnumeratingWithState:&v193 objects:v206 count:16];
                if (v33)
                {
                  uint64_t v34 = *(void *)v194;
                  while (2)
                  {
                    for (n = 0; n != v33; n = (char *)n + 1)
                    {
                      if (*(void *)v194 != v34) {
                        objc_enumerationMutation(v32);
                      }
                      if ([*(id *)(*((void *)&v193 + 1) + 8 * (void)n) supportsAutomaticSelectionForTCI:v27])
                      {

                        id v36 = [v31 uniqueID];
                        [v119 addObject:v36];

                        if (!v30) {
                          id v30 = objc_alloc_init((Class)NSMutableIndexSet);
                        }
                        [v30 addIndex:v29];
                        char v117 = 1;
                        goto LABEL_42;
                      }
                    }
                    id v33 = [v32 countByEnumeratingWithState:&v193 objects:v206 count:16];
                    if (v33) {
                      continue;
                    }
                    break;
                  }
                }
              }
LABEL_42:

              ++v29;
            }
            while (v29 != v28);
            if ([v30 count]) {
              [v125 removeObjectsAtIndexes:v30];
            }

            if (v117) {
              *((unsigned char *)v184 + 24) = 1;
            }
          }
          else
          {
          }
        }
        long long v47 = [v116 merchantIdentifiers];
        if ([v47 count])
        {
          long long v48 = [(PDDatabaseManager *)self paymentPassesWithAssociatedPassTypeIdentifierHashes:v47 automaticSelectionOnly:1];
          if ([v48 count])
          {
            *((unsigned char *)v184 + 24) = 1;
            long long v149 = 0u;
            long long v150 = 0u;
            long long v151 = 0u;
            long long v152 = 0u;
            id v49 = v48;
            id v50 = [v49 countByEnumeratingWithState:&v149 objects:v200 count:16];
            if (v50)
            {
              uint64_t v51 = *(void *)v150;
              do
              {
                for (iuint64_t i = 0; ii != v50; iuint64_t i = (char *)ii + 1)
                {
                  if (*(void *)v150 != v51) {
                    objc_enumerationMutation(v49);
                  }
                  id v53 = [*(id *)(*((void *)&v149 + 1) + 8 * (void)ii) uniqueID];
                  [v23 addObject:v53];
                }
                id v50 = [v49 countByEnumeratingWithState:&v149 objects:v200 count:16];
              }
              while (v50);
            }
          }
        }

        if (v109) {
          [v23 addObject:v109];
        }
        long long v147 = 0u;
        long long v148 = 0u;
        long long v145 = 0u;
        long long v146 = 0u;
        id v54 = v123;
        id v55 = [v54 countByEnumeratingWithState:&v145 objects:v199 count:16];
        if (v55)
        {
          uint64_t v56 = *(void *)v146;
          do
          {
            for (juint64_t j = 0; jj != v55; juint64_t j = (char *)jj + 1)
            {
              if (*(void *)v146 != v56) {
                objc_enumerationMutation(v54);
              }
              uint64_t v58 = *(void **)(*((void *)&v145 + 1) + 8 * (void)jj);
              if (([v58 isAccessPass] & 1) == 0)
              {
                uint64_t v59 = [v58 uniqueID];
                [v23 addObject:v59];
              }
            }
            id v55 = [v54 countByEnumeratingWithState:&v145 objects:v199 count:16];
          }
          while (v55);
        }

        long long v143 = 0u;
        long long v144 = 0u;
        long long v141 = 0u;
        long long v142 = 0u;
        id v60 = v23;
        id v61 = [v60 countByEnumeratingWithState:&v141 objects:v198 count:16];
        if (v61)
        {
          uint64_t v62 = *(void *)v142;
          do
          {
            for (kk = 0; kk != v61; kk = (char *)kk + 1)
            {
              if (*(void *)v142 != v62) {
                objc_enumerationMutation(v60);
              }
              [(id)v188[5] addObject:*(void *)(*((void *)&v141 + 1) + 8 * (void)kk)];
            }
            id v61 = [v60 countByEnumeratingWithState:&v141 objects:v198 count:16];
          }
          while (v61);
        }

        if (!v121) {
          goto LABEL_155;
        }
LABEL_94:
        if (![obj count])
        {
LABEL_155:

          v206[0] = 0;
          v206[1] = v206;
          v206[2] = 0x3032000000;
          v206[3] = sub_10002095C;
          v206[4] = sub_100020FA0;
          id v207 = 0;
          v130[0] = _NSConcreteStackBlock;
          v130[1] = 3221225472;
          v130[2] = sub_1001B5430;
          v130[3] = &unk_10073CDD8;
          unsigned __int8 v136 = v110;
          long long v132 = &v179;
          long long v133 = &v187;
          id v95 = v109;
          id v131 = v95;
          long long v134 = v206;
          long long v135 = &v183;
          [v115 addOperation:v130];
          id v96 = +[NSNull null];
          v127[0] = _NSConcreteStackBlock;
          v127[1] = 3221225472;
          v127[2] = sub_1001B5558;
          v127[3] = &unk_10072E660;
          id v128 = v112;
          long long v129 = v206;
          id v97 = [v115 evaluateWithInput:v96 completion:v127];

          _Block_object_dispose(v206, 8);
          _Block_object_dispose(&v179, 8);
          _Block_object_dispose(&v183, 8);
          _Block_object_dispose(&v187, 8);

          id v8 = v112;
          goto LABEL_156;
        }
        *((unsigned char *)v184 + 24) = 1;
        long long v137 = 0u;
        long long v138 = 0u;
        long long v139 = 0u;
        long long v140 = 0u;
        id v11 = obj;
        id v64 = [v11 countByEnumeratingWithState:&v137 objects:v197 count:16];
        if (v64)
        {
          uint64_t v65 = *(void *)v138;
          do
          {
            for (mm = 0; mm != v64; mm = (char *)mm + 1)
            {
              if (*(void *)v138 != v65) {
                objc_enumerationMutation(v11);
              }
              id v67 = (void *)v188[5];
              id v68 = [*(id *)(*((void *)&v137 + 1) + 8 * (void)mm) uniqueID];
              [v67 addObject:v68];
            }
            id v64 = [v11 countByEnumeratingWithState:&v137 objects:v197 count:16];
          }
          while (v64);
        }
        goto LABEL_15;
      }
      if (!v38 || v38 == (id)5) {
        goto LABEL_155;
      }
    }
    else
    {
      id obj = 0;
    }
    BOOL v121 = 0;
    goto LABEL_19;
  }
LABEL_156:
}

- (BOOL)shouldIgnoreFieldWithProperties:(id)a3
{
  id v3 = a3;
  if ([v3 backgroundTransaction]) {
    goto LABEL_2;
  }
  if (([v3 technology] & 8) == 0
    || (unint64_t v5 = (unint64_t)[v3 terminalType], v5 > 5)
    || ((1 << v5) & 0x16) != 0)
  {
LABEL_6:
    BOOL v4 = 0;
    goto LABEL_7;
  }
  if (((1 << v5) & 0x21) == 0)
  {
    if ([v3 accessTerminalSubtype] == (id)2)
    {
      id v7 = [v3 credentialIdentifier];
      BOOL v4 = v7 == 0;

      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_2:
  BOOL v4 = 1;
LABEL_7:

  return v4;
}

- (id)_readerIDPriorityForPasses:(id)a3 readerID:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (v6)
  {
    id v28 = objc_alloc_init((Class)NSMutableDictionary);
    long long v54 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    id obj = v5;
    id v33 = [obj countByEnumeratingWithState:&v54 objects:v61 count:16];
    if (!v33) {
      goto LABEL_39;
    }
    uint64_t v30 = *(void *)v55;
    id v31 = v5;
    while (1)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v55 != v30) {
          objc_enumerationMutation(obj);
        }
        uint64_t v34 = v7;
        id v8 = *(void **)(*((void *)&v54 + 1) + 8 * v7);
        long long v50 = 0u;
        long long v51 = 0u;
        long long v52 = 0u;
        long long v53 = 0u;
        id v9 = objc_msgSend(v8, "deviceContactlessPaymentApplications", v28);
        id v37 = [v9 countByEnumeratingWithState:&v50 objects:v60 count:16];
        if (!v37) {
          goto LABEL_36;
        }
        id v32 = v8;
        id v35 = v9;
        uint64_t v36 = *(void *)v51;
        unint64_t v10 = -1;
        do
        {
          uint64_t v11 = 0;
          do
          {
            if (*(void *)v51 != v36) {
              objc_enumerationMutation(v35);
            }
            uint64_t v38 = v11;
            id v12 = *(void **)(*((void *)&v50 + 1) + 8 * v11);
            long long v46 = 0u;
            long long v47 = 0u;
            long long v48 = 0u;
            long long v49 = 0u;
            id v39 = [v12 automaticSelectionCriteria];
            id v41 = [v39 countByEnumeratingWithState:&v46 objects:v59 count:16];
            if (v41)
            {
              uint64_t v40 = *(void *)v47;
              while (2)
              {
                for (uint64_t i = 0; i != v41; uint64_t i = (char *)i + 1)
                {
                  if (*(void *)v47 != v40) {
                    objc_enumerationMutation(v39);
                  }
                  id v14 = *(void **)(*((void *)&v46 + 1) + 8 * i);
                  id v15 = [v14 readerIDs];
                  unsigned __int8 v16 = [v15 containsObject:v6];

                  if (v16)
                  {
                    unint64_t v10 = 0;
                    goto LABEL_32;
                  }
                  long long v44 = 0u;
                  long long v45 = 0u;
                  long long v42 = 0u;
                  long long v43 = 0u;
                  uint64_t v17 = [v14 associatedReaderIDs];
                  id v18 = [v17 countByEnumeratingWithState:&v42 objects:v58 count:16];
                  if (v18)
                  {
                    id v19 = v18;
                    uint64_t v20 = *(void *)v43;
                    do
                    {
                      for (uint64_t j = 0; j != v19; uint64_t j = (char *)j + 1)
                      {
                        if (*(void *)v43 != v20) {
                          objc_enumerationMutation(v17);
                        }
                        uint64_t v22 = *(void **)(*((void *)&v42 + 1) + 8 * (void)j);
                        id v23 = [v22 readerID];
                        int v24 = PKEqualObjects();

                        if (v24 && (unint64_t)[v22 priority] < v10) {
                          unint64_t v10 = (unint64_t)[v22 priority];
                        }
                      }
                      id v19 = [v17 countByEnumeratingWithState:&v42 objects:v58 count:16];
                    }
                    while (v19);
                  }
                }
                id v41 = [v39 countByEnumeratingWithState:&v46 objects:v59 count:16];
                if (v41) {
                  continue;
                }
                break;
              }
            }
LABEL_32:

            uint64_t v11 = v38 + 1;
          }
          while ((id)(v38 + 1) != v37);
          id v37 = [v35 countByEnumeratingWithState:&v50 objects:v60 count:16];
        }
        while (v37);

        if (v10 != -1)
        {
          id v9 = +[NSNumber numberWithUnsignedInteger:v10];
          id v25 = [v32 uniqueID];
          [v28 setObject:v9 forKeyedSubscript:v25];

LABEL_36:
        }
        uint64_t v7 = v34 + 1;
        id v5 = v31;
      }
      while ((id)(v34 + 1) != v33);
      id v33 = [obj countByEnumeratingWithState:&v54 objects:v61 count:16];
      if (!v33)
      {
LABEL_39:

        id v26 = [v28 copy];
        goto LABEL_41;
      }
    }
  }
  id v26 = 0;
LABEL_41:

  return v26;
}

- (BOOL)insertSharingEndpoint:(id)a3
{
  return +[SharingChannelEndpoint insert:a3 inDatabase:self->_database];
}

- (id)sharingEndpoints
{
  return +[SharingChannelEndpoint endpointsInDatabase:self->_database];
}

- (id)sharingEndpointsOfType:(unint64_t)a3
{
  return +[SharingChannelEndpoint endpointsInDatabase:self->_database ofType:a3];
}

- (id)sharingEndpointsWithOutstandingMessages
{
  return +[SharingChannelEndpoint endpointsWithOutstandingMessagesInDatabase:self->_database];
}

- (id)sharingEndpointForTransportIdentifier:(id)a3
{
  return +[SharingChannelEndpoint sharingEndpointForTransportIdentifier:a3 inDatabase:self->_database];
}

- (BOOL)deleteSharingEndpoint:(id)a3
{
  return +[SharingChannelEndpoint deleteEndpoint:a3 inDatabase:self->_database];
}

- (BOOL)deleteSharingEndpointForTransportIdentifier:(id)a3
{
  return +[SharingChannelEndpoint deleteEndpointForTransportIdentifier:a3 inDatabase:self->_database];
}

- (BOOL)activeExternalPassSharesExist
{
  return +[PassShare activeExternalPassSharesInDatabase:self->_database];
}

- (BOOL)externalPassSharesExistForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1002316F0((uint64_t)self, a3);
  uint64_t database = self->_database;
  return +[PassShare externalPassSharesForPassPID:v4 inDatabase:database];
}

- (id)passSharesForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1002316F0((uint64_t)self, a3);
  uint64_t database = self->_database;
  return +[PassShare passSharesForPassPID:v4 inDatabase:database];
}

- (BOOL)hasSharesForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1002316F0((uint64_t)self, a3);
  uint64_t database = self->_database;
  return +[PassShare passSharesExistForPassPID:v4 inDatabase:database];
}

- (id)passSharesForSubcredentialIdentifier:(id)a3
{
  return +[PassShare passSharesForSubcredentialIdentifier:a3 inDatabase:self->_database];
}

- (id)passSharesWithNoPass
{
  return +[PassShare passSharesForPassPID:0 inDatabase:self->_database];
}

- (id)passShareForPassUniqueIdentifier:(id)a3 shareIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v7 = +[PassShare passShareForForPassPID:sub_1002316F0((uint64_t)self, a3) shareIdentifier:v6 inDatabase:self->_database];

  return v7;
}

- (id)passShareForCredentialShareIdentifier:(id)a3
{
  return +[PassShare passShareForCredentialShareIdentifier:a3 inDatabase:self->_database];
}

- (id)passShareForTransportIdentifier:(id)a3
{
  uint64_t v4 = +[PassCredentialShare passCredentialShareForTransportIdentifier:a3 inDatabase:self->_database];
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 identifier];
    uint64_t v7 = +[PassShare passShareForCredentialShareIdentifier:v6 inDatabase:self->_database];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

- (id)passShareForIdentifier:(id)a3
{
  return +[PassShare passShareForIdentifier:a3 inDatabase:self->_database];
}

- (void)updatePassSharesForPassUniqueIdentifier:(id)a3 passShares:(id)a4
{
  id v6 = a4;
  +[PassShare insertOrUpdatePassShares:v6 forPassPID:sub_1002316F0((uint64_t)self, a3) inDatabase:self->_database];
}

- (void)deletePassShareWithIdentifier:(id)a3
{
}

- (void)addPassShare:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  +[PassShare addPassShare:v6 forPassPID:sub_1002316F0((uint64_t)self, a4) inDatabase:self->_database];
}

- (BOOL)deletePassCredentialShareForIdentifier:(id)a3
{
  return +[PassCredentialShare deletePassCredentialShareForIdentifier:a3 inDatabase:self->_database];
}

- (id)passCredentialShareForIdentifier:(id)a3 passUniqueIdentifier:(id)a4
{
  id v6 = a3;
  uint64_t v7 = +[PassShare passSharesPIDsForPassPID:sub_1002316F0((uint64_t)self, a4) inDatabase:self->_database];
  if (v7)
  {
    id v8 = +[PassCredentialShare passCredentialShareForIdentifier:v6 sharePIDs:v7 inDatabase:self->_database];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

- (id)updatePassCredentialShareIdentifier:(id)a3 updatedStatus:(unint64_t)a4 updatedIdentifier:(id)a5
{
  id v8 = a5;
  id v9 = +[PassCredentialShare dbPassCredentialShareForCredentialShareIdentifier:a3 inDatabase:self->_database];
  unint64_t v10 = v9;
  if (v9)
  {
    [v9 setIdentifier:v8];
    [v10 setStatus:a4];
    uint64_t v11 = [v10 passCredentialShare];
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

- (id)passIdentifierForPassShareIdentifier:(id)a3
{
  id v3 = [(SQLiteEntity *)[Pass alloc] initWithPersistentID:+[PassShare passPIDForShareIdentifier:a3 inDatabase:self->_database] inDatabase:self->_database];
  uint64_t v4 = [(SQLiteEntity *)v3 valueForProperty:@"unique_id"];

  return v4;
}

- (void)migrateCarKeySharesForPass:(id)a3
{
  id v3 = PDSharesFromLegacyCarKeyTables(a3, self->_database);
}

- (id)passEntitlementsForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1002316F0((uint64_t)self, a3);
  uint64_t database = self->_database;
  return +[PassEntitlement passEntitlementsForPassPID:v4 inDatabase:database];
}

- (id)passEntitlementForIdentifier:(id)a3 passIdentifier:(id)a4
{
  id v6 = a3;
  uint64_t v7 = +[PassEntitlement passEntitlementForIdentifier:v6 passPID:sub_1002316F0((uint64_t)self, a4) inDatabase:self->_database];

  return v7;
}

- (BOOL)hasShareablePassEntitlementsForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1002316F0((uint64_t)self, a3);
  uint64_t database = self->_database;
  return +[PassEntitlement hasShareablePassEntitlementsForPassPID:v4 inDatabase:database];
}

- (id)allOutstandingSharingMessages
{
  return +[SharingMessage allOutstandingSharingMessagesInDatabase:self->_database];
}

- (BOOL)hasSharingMessage:(id)a3 transportIdentifier:(id)a4
{
  return +[SharingMessage hasSharingMessage:a3 transportIdentifier:a4 inDatabase:self->_database];
}

- (id)sharingMessagesForTransportIdentifier:(id)a3
{
  return +[SharingMessage sharingMessagesForTransportIdentifier:a3 inDatabase:self->_database];
}

- (id)sharingMessagesForTransportIdentifier:(id)a3 newerThanDate:(id)a4
{
  return +[SharingMessage sharingMessagesForTransportIdentifier:a3 newerThanDate:a4 inDatabase:self->_database];
}

- (void)deleteSharingMessageForIdentifier:(id)a3
{
}

- (void)deleteSharingMessagesForTransportIdentifier:(id)a3
{
}

- (void)deleteSharingMessagesOlderThan:(id)a3
{
}

- (void)insertOrUpdateSharingMessages:(id)a3 storePayloads:(BOOL)a4 transportIdentifier:(id)a5
{
}

- (id)transportIdentifierForSharingMessage:(id)a3
{
  return +[SharingMessage transportIdentifierForSharingMessage:a3 inDatabase:self->_database];
}

- (unint64_t)createSchemaInDatabase:(id)a3
{
  id v4 = a3;
  sub_10000C100((BOOL)v4, @"PRAGMA foreign_keys = ON;");
  uint64_t v5 = sub_10035CEAC((uint64_t)v4);
  if (v5 < 1)
  {
    if (sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass (pid INTEGER, unique_id TEXT NOT NULL, pass_type_pid INTEGER NOT NULL, serial_number TEXT NOT NULL, sequence_counter INTEGER, organization_name TEXT, provisioning_credential_hash TEXT, relevant_date INTEGER, expiration_date INTEGER, signing_date INTEGER, voided INTEGER, user_info BLOB, template INTEGER, background_color TEXT, secondary_background_color TEXT, foreground_color TEXT, label_color TEXT, strip_color TEXT, tall_code INTEGER, has_background_image INTEGER, has_strip_image INTEGER, manifest_hash BLOB, web_service_pid INTEGER, push_registration_status INTEGER, push_registration_date INTEGER, authentication_token TEXT, last_modified_tag TEXT, ingested_date INTEGER, modified_date INTEGER, modified_source INTEGER, grouping_id TEXT, group_pid INTEGER, revoked INTEGER, share_count INTEGER, pass_transaction_service_pid INTEGER, pass_message_service_pid INTEGER, pass_flavor INTEGER, card_type INTEGER, primary_account_identifier TEXT, primary_account_suffix TEXT, sanitized_pan TEXT, sharing_method INTEGER, sharing_url TEXT, sharing_text TEXT, supports_dpan_notifications INTEGER, supports_fpan_notifications INTEGER, supports_default_card_selection INTEGER, is_shell_pass INTEGER, supports_serial_number_based_provisioning INTEGER, requires_transfer_serial_number_based_provisioning INTEGER, has_stored_value INTEGER, contactless_activation_grouping_type INTEGER, pass_default_payment_application_pid INTEGER, cobranded INTEGER, low_balance_reminder_amount INTEGER, low_balance_reminder_currency TEXT, commute_plan_renewal_reminder_time_interval INTEGER, issuer_country_code TEXT, has_associated_peer_payment_account INTEGER, is_cloud_kit_archived INTEGER,cloud_kit_metadata BLOB,is_cloud_kit_securely_archived INTEGER,cloud_kit_secure_metadata BLOB,a TEXT,b INTEGER, c TEXT, transaction_source_pid INTEGER, d TEXT, e TEXT, mute_ready_for_use_notification INTEGER DEFAULT 0, live_render_background_type TEXT, f TEXT, g TEXT, shipping_address_seed TEXT, supports_issuer_binding INTEGER DEFAULT 0, original_provisioning_date INTEGER, live_rendering_requires_enablement INTEGER, transfer_url TEXT, sell_url TEXT, bag_policy_url TEXT, order_food_url TEXT, transit_information_url TEXT, parking_information_url TEXT, directions_information_url TEXT, merchandise_url TEXT, accessibility_url TEXT, purchase_parking_url TEXT, add_on_url TEXT, contact_venue_phone_number TEXT, contact_venue_email TEXT, contact_venue_website TEXT, supports_automatic_foreground_vibrancy INTEGER, supports_automatic_label_vibrancy INTEGER, footer_background_color TEXT, suppress_header_darkening INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_flavor_index ON pass (pass_flavor);")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_unique_id_index ON pass (unique_id);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS location_source (pid INTEGER, url TEXT NOT NULL, type INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_location_source (pid INTEGER, pass_pid INTEGER, location_source_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_location_source_index ON pass_location_source (location_source_pid);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS location (pid INTEGER, latitude REAL, longitude REAL, max_distance REAL, altitude REAL, name TEXT, relevant_text TEXT, location_source_pid INTEGER NOT NULL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS location_source_index ON location (location_source_pid);")
      && sub_10000C100((BOOL)v4, @"CREATE VIRTUAL TABLE location_index USING rtree(location_pid INTEGER, min_lat REAL, max_lat REAL, min_long REAL, max_long REAL);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS beacon (pid INTEGER, proximity_uuid TEXT, major REAL, minor REAL, name TEXT, relevant_text TEXT, pass_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS web_service (pid INTEGER, pass_type_pid INTEGER NOT NULL, service_url TEXT NOT NULL, push_token TEXT, device_identifier TEXT, last_updated_tag TEXT, tag_last_update_date INTEGER, last_deletion_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_type (pid INTEGER, identifier TEXT NOT NULL, identifier_hash TEXT, team_identifier TEXT NOT NULL, last_push_date INTEGER, last_update_date INTEGER, push_frequency_score REAL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_type_identifier_hash_index ON pass_type (identifier_hash);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_group (pid INTEGER, group_order INTEGER, pass_type_id TEXT, pass_style INTEGER, grouping_id TEXT, minimum_date INTEGER, maximum_date INTEGER, ingested_date INTEGER, nfc_enabled INTEGER, internal_group_order BLOB,PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_application (pid INTEGER, transaction_source_pid INTEGER, seid TEXT, aid TEXT, dpan_id TEXT, dpan_suffix TEXT, sanitized_dpan TEXT, fpan_id TEXT, fpan_suffix TEXT, state INTEGER, suspended_reason TEXT, supports_contactless_payment INTEGER, supports_service_mode INTEGER, supports_in_app_payment INTEGER, supports_optional_authentication INTEGER, applet_data_format TEXT, applet_currency_code TEXT, payment_network_identifier INTEGER, pass_pid INTEGER, in_app_pin_required_amount INTEGER, in_app_pin_required_currency TEXT, display_name TEXT, auxiliary_application INTEGER,payment_type INTEGER, auxiliary_payment_type INTEGER, requires_deferred_authorization INTEGER, contactless_priority INTEGER, in_app_priority INTEGER, supports_instant_funds_in INTEGER, funding_source_payment_type INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i TEXT, j INTEGER, k BOOL DEFAULT 0, l TEXT, m INTEGER, n INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_application_merchant_support (pid INTEGER, payment_application_pid INTEGER NOT NULL, merchant_country_code TEXT, supported INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_express_mode (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE, express_mode TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion (pid INTEGER, payment_application_pid INTEGER, type TEXT, mask BLOB, supports_express INTEGER, supports_in_session_express INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_tci (pid INTEGER, is_primary INTEGER, payment_automatic_selection_criterion_pid INTEGER, tci BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_reader_id (pid INTEGER, payment_automatic_selection_criterion_pid INTEGER, reader_id BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction (pid INTEGER, source_pid INTEGER, archive_pid INTEGER, identifier TEXT, service_identifier TEXT, payment_hash TEXT, payment_hash_component_1 TEXT, payment_hash_component_2 TEXT, currency_code TEXT, amount INTEGER, subtotal_amount INTEGER, locality TEXT, administrative_area TEXT, transaction_date INTEGER  NOT NULL, transaction_status_changed_date INTEGER, location_date INTEGER, location_latitude REAL, location_longitude REAL, location_altitude REAL, location_horizontal_accuracy REAL, location_vertical_accuracy REAL, start_station_code BLOB, start_station TEXT, start_station_latitude REAL, start_station_longitude REAL, end_station_code BLOB, end_station TEXT, end_station_latitude REAL, end_station_longitude REAL, transaction_status INTEGER, transaction_type INTEGER, transit_type INTEGER, transit_modifiers INTEGER, en_route INTEGER, station_code_provider TEXT, city_code INTEGER, technology_type INTEGER, transaction_source INTEGER, requires_location INTEGER, has_notification_service_data INTEGER, processed_for_location INTEGER, processed_for_merchant_cleanup INTEGER, requires_merchant_reprocessing INTEGER, last_merchant_reprocessing_date INTEGER, processed_for_stations INTEGER, merchant_name TEXT, merchant_raw_name TEXT, merchant_industry_category TEXT, merchant_industry_code INTEGER, peer_payment_type INTEGER,peer_payment_counterpart_handle TEXT,peer_payment_memo TEXT,peer_payment_message_received_date INTEGER,account_type INTEGER,foreign_exchange_information_destination_currency_code TEXT,foreign_exchange_information_destination_amount INTEGER,foreign_exchange_information_exchange_rate TEXT,primary_funding_source_amount INTEGER,primary_funding_source_currency_code TEXT,secondary_funding_source_amount INTEGER,secondary_funding_source_currency_code TEXT,secondary_funding_source_network INTEGER,secondary_funding_source_dpan_suffix TEXT,secondary_funding_source_fpan_identifier TEXT,secondary_funding_source_description TEXT,secondary_funding_source_type INTEGER,request_device_score_identifier TEXT,send_device_score_identifier TEXT,device_score_identifiers_required INTEGER,device_score_identifiers_submitted INTEGER,merchant_provided_description TEXT,merchant_provided_title TEXT,metadata TEXT,expiration_date INTEGER,adjustment_type INTEGER,transaction_declined_reason INTEGER, a INTEGER, account_identifier TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, m INTEGER, n INTEGER, o TEXT, should_suppress_date INTEGER, p TEXT, q INTEGER, r TEXT, s TEXT, t TEXT, maps_merchant_pid INTEGER, u INTEGER, v TEXT, w INTEGER, x INTEGER, y TEXT, ab TEXT, ac INTEGER, ad INTEGER, ae TEXT, af TEXT, ag TEXT, ah TEXT, use_raw_merchant_data INTEGER, issue_report_identifier TEXT, suppress_notifications INTEGER, fuzzy_matched INTEGER, receipt_provider_identifier TEXT, receipt_provider_url TEXT, receipt_identifier TEXT, barcode_identifier TEXT, payment_pin_format INTEGER, nonce BLOB, signing_key_material BLOB, partial_signature BLOB, requested_auth_mechanisms INTEGER, primary_funding_source_description TEXT, nominal_amount INTEGER, has_additional_offers BOOL, dpan_identifier TEXT, zm TEXT, eligible_eligible_rewards_percent_aggregate INTEGER, eligible_rewards_cash_aggregate INTEGER, is_coarse_location INTEGER, amount_added_to_auth INTEGER, afi INTEGER, is_merchant_token_transaction INTEGER, recurring BOOL, merchant_fallback_logo_image_url TEXT, interest_reassessment BOOL, associated_statement_identifiers TEXT, payment_network_identifier INTEGER, update_sequence_number INTEGER NOT NULL, needs_sync_to_finance INTEGER NOT NULL, ca INTEGER, iit INTEGER, iimu TEXT, cb TEXT, top_up_type INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_balance (pid INTEGER, pass_pid INTEGER NOT NULL, identifier TEXT, localized_title TEXT, localized_description TEXT, currency_code TEXT, exponent INTEGER, value INTEGER, is_primary_balance INTEGER, last_updated_date INTEGER NOT NULL, preformatted_string TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, history_sequence_number INTEGER, balance INTEGER, loyalty_balance INTEGER, currency TEXT, blacklisted INTEGER, needs_station_processing INTEGER, expiration_date INTEGER, last_refresh_sequence_number INTEGER, applet_state_dirty INTEGER, en_route_flags BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS felica_transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, shinkansen_ticket_active INTEGER, balance_allowed_for_commute INTEGER, low_balance_notification_enabled INTEGER, green_car_ticket_used INTEGER, history_sequence_number INTEGER, balance INTEGER, blacklisted INTEGER, shinkansen_validity_start_date INTEGER, shinkansen_validity_term INTEGER, shinkansen_origin_station_code BLOB, shinkansen_destination_station_code BLOB, shinkansen_departure_time INTEGER, shinkansen_arrival_time INTEGER, shinkansen_train_name TEXT, shinkansen_car_number INTEGER, shinkansen_seat_row INTEGER, shinkansen_seat_number INTEGER, shinkansen_secondary_origin_station_code BLOB, shinkansen_secondary_destination_station_code BLOB, shinkansen_secondary_departure_time INTEGER, shinkansen_secondary_arrival_time INTEGER, shinkansen_secondary_train_name TEXT, shinkansen_secondary_car_number INTEGER, shinkansen_secondary_seat_row INTEGER, shinkansen_secondary_seat_number INTEGER, green_car_origin_station_code BLOB, green_car_destination_station_code BLOB, shinkansen_origin_station_string TEXT, shinkansen_destination_station_string TEXT, shinkansen_secondary_origin_station_string TEXT, shinkansen_secondary_destination_station_string TEXT, green_car_origin_station_string TEXT, green_car_destination_station_string TEXT, green_car_validity_start_date INTEGER, has_green_car_ticket INTEGER, has_shinkansen_ticket INTEGER, needs_station_processing INTEGER, en_route_flags BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS felica_transit_applet_state_payment_application_pid_index ON felica_transit_applet_state (payment_application_pid);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_message (pid INTEGER, pass_pid INTEGER NOT NULL, payment_application_pid INTEGER, identifier TEXT, service_identifier TEXT, message_date INTEGER, expiration_date INTEGER, message_type INTEGER, archived INTEGER, content TEXT, allow_deep_link INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS notification_service (pid INTEGER, push_token TEXT, push_topic TEXT NOT NULL, last_updated_date INTEGER, last_updated_tag TEXT, last_updated_tag_date INTEGER, device_identifier TEXT NOT NULL, authentication_token TEXT, app_launch_token TEXT, service_type INTEGER,service_url TEXT NOT NULL, registration_url TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_notification_service (pid INTEGER, last_updated_date INTEGER, last_updated_tag TEXT, last_updated_tag_date INTEGER, registration_status INTEGER, notification_service_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS associated_app_identifier (pass_pid INTEGER, application_id TEXT, PRIMARY KEY (pass_pid, application_id));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS associated_pass_type_identifier (pass_pid INTEGER, identifier TEXT, identifier_hash TEXT, PRIMARY KEY (pass_pid, identifier));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS associated_web_domain (pass_pid INTEGER, web_domain TEXT, PRIMARY KEY (pass_pid, web_domain));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS nfc (pid INTEGER, pass_pid INTEGER, message TEXT, encryption_public_key TEXT, requires_authentication INTEGER, a INTEGER DEFAULT 0, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS value_added_service_transaction (pid INTEGER, pass_pid INTEGER, payment_transaction_pid INTEGER, merchant_pid INTEGER, identifier TEXT, merchant_url TEXT, successful INTEGER, terminal_application_version INTEGER, terminal_mode INTEGER, transaction_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS value_added_merchant (pid INTEGER, identifier TEXT, times_presented INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_account (pid INTEGER, pass_pid INTEGER, transaction_source_pid INTEGER, identifier TEXT, created_date INTEGER, identified_date INTEGER, role INTEGER, state INTEGER, state_reason INTEGER, person_to_person_restriction_type INTEGER, stage INTEGER, country_code TEXT, current_balance_currency TEXT, current_balance_amount INTEGER, maximum_balance_amount INTEGER, amount_remaining_until_identity_verification INTEGER, identity_verification_required INTEGER, account_state_dirty INTEGER, last_updated_date INTEGER, proactive_fetch_period INTEGER, account_fetch_after_transaction_wait_period INTEGER, account_fetch_after_transaction_wait_tolerance INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, terms_url TEXT, associated_pass_url TEXT, associated_pass_serial_number TEXT, associated_pass_type_identifier TEXT, pending_payment_count INTEGER, identity_verification_for_disbursements_required INTEGER,associated_account_pid INTEGER, alt_dsid TEXT, cloud_store_zone_names TEXT, associated_account_proactive_fetch_period INTEGER, associated_account_last_updated_date INTEGER, associated_account_state_dirty INTEGER, displayed_associated_account_active_notification INTEGER, device_score_encrypted_payload_version INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_account_feature_descriptor (pid INTEGER, identifier TEXT, peer_payment_account_pid INTEGER, minimum_amount INTEGER, maximum_amount INTEGER, supported_networks TEXT, merchant_identifier TEXT, merchant_capabilities INTEGER, fee_percentage INTEGER, minimum_fee INTEGER, maximum_fee INTEGER, os_version_requirement_range BLOB, a BLOB, b BLOB, c BLOB, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_fee (pid INTEGER, identifier TEXT, payment_transaction_pid INTEGER, type INTEGER, amount INTEGER, currency TEXT, localized_display_name TEXT,PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS apples (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k TEXT, l TEXT, m TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pears (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h TEXT, i INTEGER, j INTEGER, cloud_store_zone_names TEXT, k TEXT, l INTEGER, m TEXT, n TEXT, o TEXT, p INTEGER, transaction_source_pid INTEGER, block_all_account_access INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS strawberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k TEXT, l TEXT, m TEXT, n INTEGER, o INTEGER, os_version_requirement_range BLOB, p INTEGER, q INTEGER, r TEXT, s INTEGER, savings_interest_rate INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS feijoa (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS clementines (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, m TEXT, n INTEGER, o INTEGER, p INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cucumbers (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS oranges (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t INTEGER, u INTEGER, recovery_payment_plans_supported INTEGER, remaining_statement_balance_for_interest_calculation INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS bananas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pineapples (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t TEXT, u INTEGER, v INTEGER, total_balance INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS blackberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, k TEXT, activation_code_hash TEXT, expiration_month INTEGER, expiration_year INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS grapes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, alt_dsid TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS avocados (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tomatoes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, h TEXT, i INTEGER, j INTEGER, k TEXT, l TEXT, m TEXT, n INTEGER, o INTEGER, p TEXT, q TEXT, r INTEGER, s INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS mangos (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS lychees (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, p TEXT, q INTEGER, r INTEGER, s TEXT, t TEXT, u INTEGER, v TEXT, cancellable BOOL, cancellation_expiry_date INTEGER, w INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rambutans (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS watermelons (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS raspberries (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k INTEGER,l INTEGER,m INTEGER,n TEXT, o INTEGER, p INTEGER,PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS nectarines (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS passionfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pitayas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS maps_merchant (pid INTEGER, identifier INTEGER, result_provider_identifier INTEGER, name TEXT, phone_number TEXT, url TEXT, location_latitude REAL, location_longitude REAL, postal_address TEXT, a TEXT, c INTEGER, d TEXT, g BLOB, h TEXT, i TEXT, last_processed_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transit_network_identifier (pid INTEGER, payment_application_pid INTEGER, identifier TEXT, network_order INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS blueberries (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS plantains (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e TEXT, g INTEGER, h TEXT, i TEXT, l BLOB, m TEXT, n TEXT, o TEXT, last_processed_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cantaloupes (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS jackfruits (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS guavas (pid INTEGER, a TEXT, b INTEGER, c REAL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS balance_reminder (pid INTEGER, pass_pid INTEGER, balance_identifier TEXT, threshold TEXT, enabled INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS discovery_item (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, type INTEGER, rule_identifier TEXT, trigger_rule_identifier TEXT, layout_url TEXT, supported_localizations BLOB, os_version_requirement_range BLOB, hardware_version_range BLOB, relevant_date_range_start_date INTEGER, relevant_date_range_end_date INTEGER, item_order INTEGER, view_count INTEGER, max_view_count INTEGER, should_badge INTEGER, priority INTEGER, entitled_to_force_large_card INTEGER, max_view_count_large_card INTEGER, clientData BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS discovery_notification (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, rule_identifier TEXT, os_version_requirement_range BLOB, hardware_version_range BLOB, relevant_date_range_start_date INTEGER, relevant_date_range_end_date INTEGER, action_type INTEGER, title_key TEXT, message_key TEXT, action_title_key TEXT, action_info BLOB, scheduled_delivery_date INTEGER, delivered INTEGER,PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rule (pid INTEGER, identifier TEXT, predicate_format TEXT, os_version_requirement_range BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS durian (pid INTEGER, a TEXT, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k TEXT, l TEXT, m INTEGER DEFAULT 1, o TEXT, p TEXT, q TEXT, r INTEGER, feature_product INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS fig (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g TEXT, h INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS prune (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS starfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS papaya (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e BLOB, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k BLOB, l BLOB, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS coconuts (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peaches (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g TEXT, pu TEXT, physical_cards TEXT, servicing_token TEXT, funding_sources TEXT, virtual_cards TEXT, recovery_payment_plans TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS whitney (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT,f TEXT,g TEXT,h INTEGER,i BLOB,j TEXT,k INTEGER, l INTEGER, m TEXT, n INTEGER, o TEXT, p TEXT, q INTEGER, r TEXT, s TEXT, t TEXT, u TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS whitney_agrk (pid INTEGER, applet_subcredential_pid INTEGER, data BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS palisades (pid INTEGER, a TEXT NOT NULL UNIQUE, b TEXT NOT NULL, c TEXT, d TEXT, e BLOB, f INT, g INT, h TEXT,i TEXT,j TEXT,k INT, l TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g TEXT, pu TEXT, physical_cards TEXT, servicing_token TEXT, funding_sources TEXT, virtual_cards TEXT, recovery_payment_plans TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS missing_remote_assets (pid INTEGER, unique_id TEXT NOT NULL UNIQUE, download_retries_count INTEGER DEFAULT 0, PRIMARY KEY (pid, download_retries_count));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS kiwi (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m TEXT, n TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS currant (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h TEXT, i INTEGER, order_index INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS raisin (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS gojiberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peanut (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f INTEGER, g INTEGER, i TEXT, l BLOB, m BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS acorn (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS squash (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_token (pid INTEGER, zone_name TEXT, token_data BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tap_to_radar_prompt (pid INTEGER, reason TEXT, last_prompt_date INTEGER, prompt_count INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rainier (pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER,h TEXT, i TEXT, j INTEGER, k TEXT,PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rincon (pid INTEGER, a TEXT, b INTEGER, c TEXT, e INTEGER, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_zone (pid INTEGER, container_database_pid INTEGER, zone_name TEXT, zone_owner TEXT, token_data BLOB, subscription_id TEXT, fetch_timestamp INTEGER, did_finish_initial_sync INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transit_applet_state_balance (pid INTEGER, transit_applet_state_pid INTEGER REFERENCES transit_applet_state(pid) ON DELETE CASCADE, pass_pid INTEGER NOT NULL REFERENCES pass(pid) ON DELETE CASCADE, identifier TEXT, currency TEXT, exponent INTEGER, balance INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_amount (pid INTEGER, payment_transaction_pid INTEGER, label TEXT, currency TEXT, exponent INTEGER, amount INTEGER, preformatted_string TEXT, pending INTEGER DEFAULT 0, unit_identifier TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS applet_state_dirty (pid INTEGER, payment_application_pid INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transaction_receipt (pid INTEGER, unique_id TEXT, receipt_provider_identifier TEXT, receipt_identifier TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS index_item (pid INTEGER, identifier TEXT, domain_identifier TEXT, type INTEGER, status INTEGER, last_modified_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, action_try_count INTEGER, searchable_item BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_status ON index_item (status);")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_identifier ON index_item (identifier);")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_domain_identifier ON index_item (domain_identifier);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS index_metadata (version INTEGER, PRIMARY KEY (version));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS index_fetched_metadata (type INTEGER, status INTEGER, version INTEGER, PRIMARY KEY (type));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS commute_plan_reminder (pid INTEGER, pass_pid INTEGER, commute_plan_identifier TEXT, time_interval REAL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS e_mei_shan (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d BLOB, e INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_account_additional_push_topics (pid INTEGER, peer_payment_account_pid INTEGER, preferences TEXT, associated_accounts TEXT, requests TEXT, endpoint TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_preferences (pid INTEGER, peer_payment_account_pid INTEGER, requires_confirmation BOOL, can_receive_formal_payment_requests BOOL, dirty BOOL, last_updated_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_preferences_restriction (pid INTEGER, peer_payment_preferences_pid INTEGER, alt_dsid TEXT, restriction_type INTEGER, a INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_preferences_notification (pid INTEGER, peer_payment_preferences_pid INTEGER, alt_dsid TEXT, notification_type INTEGER, value BOOL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transaction_source (pid INTEGER, identifier TEXT, type INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS world_region (pid INTEGER, parent_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, type INTEGER, latitude REAL, longitude REAL, latitude_delta REAL, longitude_delta REAL, identifier TEXT, muid INTEGER, result_provider_identifier INTEGER, abbreviation_code TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS world_region_localized_content (pid INTEGER, world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, name TEXT, locale_identifier TEXT, status INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS world_region_mapping (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, match_try_count INTEGER, last_modified_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS world_region_transaction ON world_region_mapping(payment_transaction_pid);")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS world_region_localized_content_name ON world_region_localized_content(name COLLATE NOCASE);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_database (pid INTEGER, container_name TEXT, scope INTEGER, subscription_id TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_record (pid INTEGER, record_name TEXT, record_type TEXT, zone_pid INTEGER, hash INTEGER, record_data BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_share_backoff (pid INTEGER, cloud_store_zone_pid INTEGER, recipient_handle TEXT, backoff_type INTEGER, backoff_level INTEGER, next_fetch INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_container_change_event (pid INTEGER, identifier TEXT, change_type INTEGER, event_type INTEGER, timestamp INTEGER, container_identifier TEXT, begin_interval_event_identifier TEXT, begin_interval_event_pid INTEGER, operation_group_name TEXT, operation_group_name_suffix TEXT, error_description TEXT, change_token BLOB, state_name TEXT, object_names TEXT, time_interval INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_record_fetch_task (pid INTEGER, type INTEGER, status INTEGER, transaction_source_pid INTEGER, cloud_store_zone_pid INTEGER, start_date INTEGER, end_date INTEGER, backoff_level INTEGER, next_possible_fetch_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, last_error_description TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_zone_share_participant (pid INTEGER, cloud_store_zone_pid INTEGER, participant_handle TEXT, lookup_info BLOB, invitation_token BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_account_invitation (pid INTEGER, peer_payment_account_pid INTEGER, alt_dsid TEXT, status INTEGER, registration_result INTEGER, remote_registration_request_level INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_authentication (pid INTEGER, processed_auth_mechanisms INTEGER, data_collected_auth_mechanisms INTEGER, complete INTEGER, auth_data_payment_pin BLOB, auth_data_transaction_signature BLOB, auth_data_user_confirmation BLOB, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_tag (pid INTEGER, payment_transaction_pid INTEGER, type INTEGER, localized_title TEXT, locale_identifier TEXT, rank INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_tag_index ON payment_transaction_tag(payment_transaction_pid);")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_authentication_index ON payment_transaction_authentication(payment_transaction_pid);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_amount_modifiers (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, modifier_type TEXT, modifier_description TEXT, modifier_order INTEGER, amount INTEGER, currency TEXT, exponent INTEGER, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_amount_modifiers_index ON payment_transaction_amount_modifiers(payment_transaction_pid);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_awards (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, award_identifier TEXT, award_type TEXT, award_subtype TEXT, award_description TEXT, award_order INTEGER, relevant_account_name TEXT, amount INTEGER, currency TEXT, exponent INTEGER, localized_amount TEXT, has_deep_link BOOL, claim_expiry_date INTEGER, claim_expired BOOL, redeem_expiry_date INTEGER, redeem_expired BOOL, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_awards_index ON payment_transaction_awards(payment_transaction_pid);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS barcode_fetch (pid INTEGER, next_background_fetch_date INTEGER, background_fetch_retry_level INTEGER, pass_pid INTEGER REFERENCES pass(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS next_background_fetch_date_index ON barcode_fetch(next_background_fetch_date);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_associated_account_removal_record (pid INTEGER, peer_payment_account_pid INTEGER, alt_dsid TEXT, reason INTEGER, date INTEGER, has_presented_notification INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_application_barcode_service_metadata (pid INTEGER, payment_application_pid INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, evaluated_policy_domain_state BLOB, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS gooseberry (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, transaction_source_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peanuts (pid INTEGER, account_pid INTEGER, last_updated_date INTEGER, dirty INTEGER, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS almonds (pid INTEGER, peanuts_pid INTEGER, zone_name TEXT, account_identifier TEXT, account_type INTEGER, access INTEGER, mode INTEGER, a TEXT, b TEXT, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_archive (pid INTEGER, payment_transaction_pid INTEGER, bokchoy_pid INTEGER, cumin_pid INTEGER, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_archive_location (pid INTEGER, archive_pid INTEGER, type INTEGER, cloud_store_zone_pid INTEGER, archived INTEGER, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS prickly_pear (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS mulberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_fetch_periods (pid INTEGER, blocked_endpoints TEXT, account_pid INTEGER, account_fetch_period INTEGER, extended_account_fetch_period INTEGER, a INTEGER, b INTEGER, c INTEGER, funding_sources_fetch_period INTEGER, recovery_payment_plans_fetch_period INTEGER, physical_cards_fetch_period INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_endpoint_backoff (pid INTEGER, account_pid INTEGER, account_type INTEGER, endpoint_type INTEGER, backoff_level INTEGER, next_fetch INTEGER, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS breadfruit (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS persimmon (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g TEXT, h INTEGER, i TEXT, j INTEGER, k INTEGER, l TEXT, m TEXT, n TEXT, o TEXT, p TEXT, q INTEGER, r TEXT, s INTEGER, t INTEGER, u INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cucamelon (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS lucuma (pid INTEGER, a INTEGER, d TEXT, f INTEGER, g TEXT, l INTEGER, m TEXT, n INTEGER, o TEXT, p INTEGER, q TEXT, r INTEGER, s TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS quinoa (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS wasabi (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j TEXT, k INTEGER, l TEXT, m INTEGER, n TEXT, o INTEGER, p TEXT, q INTEGER, r TEXT, s INTEGER, t TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS atemoya (pid INTEGER, a INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS okra (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS splitpea (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS huckleberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS marionberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, g INTEGER, gc TEXT, i INTEGER, ic TEXT, j INTEGER, jc TEXT, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s TEXT, t INTEGER, u TEXT, w INTEGER, x TEXT, v TEXT, y INTEGER, yc TEXT, z INTEGER, zc TEXT, aa INTEGER, aac TEXT, bb INTEGER, cc INTEGER, ccc INTEGER, dd INTEGER, cr INTEGER, ee INTEGER,eec TEXT,ff INTEGER,ffc TEXT,PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS chickpeas (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, h TEXT, i INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS parsnip (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS asparagus (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS oregano (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS boysenberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, m TEXT, n TEXT, o INTEGER, p INTEGER, q INTEGER, r TEXT, s TEXT, t TEXT, u INTEGER, v INTEGER, w INTEGER, x INTEGER, y INTEGER, z TEXT, aa TEXT, bb TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS chestnut (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS jostaberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, cc TEXT, d INTEGER, dc TEXT, f INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS guanabana (pid INTEGER, a INTEGER, b INTEGER, bc TEXT, c INTEGER, cc TEXT, d INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pineberry (pid INTEGER, a INTEGER, b TEXT, d INTEGER, f INTEGER, g INTEGER, gc TEXT, h INTEGER, hc TEXT, i INTEGER, ic TEXT, l TEXT, subtype INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tamarillo (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e INTEGER, ec TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS chikoo (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, k TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS akebi (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS honey (pid INTEGER, a INTEGER, b TEXT, c BLOB, d TEXT, document_type TEXT NOT NULL, e TEXT, f TEXT, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS water (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS ice_cream_banana (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS carambola (pid INTEGER, a INTEGER NOT NULL, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_annotations (pass_pid INTEGER, sorting_state INTEGER, archived_timestamp INTEGER, PRIMARY KEY (pass_pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_pending_family_member (pid INTEGER, account_pid INTEGER, invite_email TEXT, invite_date INTEGER, displayed_notification INTEGER, alt_dsid TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS change_history_event (pid INTEGER, identifier TEXT, type INTEGER, record_type INTEGER, record_uniqueID TEXT, timestamp INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS change_history_event_retry_details (pid INTEGER, event_unique_identifier TEXT, event_record_type INTEGER, retry_date INTEGER, retry_interval INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS salmonberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor (pid INTEGER, default_state_identifier TEXT, default_state_enabled INTEGER, pass_pid INTEGER, metadata_pid INTEGER, state_pid INTEGER, internal_tile_order INTEGER, group_descriptor_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_metadata (pid INTEGER, identifier TEXT, type TEXT, style TEXT, selectable INTEGER, show_in_prearm INTEGER DEFAULT 1, context_identifier TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_rke (pid INTEGER, metadata_pid INTEGER, vehicle_functions BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_horizontal_flow_group (pid INTEGER, metadata_pid INTEGER, columns INTEGER, maximumRows INTEGER, width_class TEXT, height_class TEXT, group_style TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_vertical_flow_group (pid INTEGER, metadata_pid INTEGER, rows INTEGER, width_class TEXT, height_class TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_group (pid INTEGER, state_pid INTEGER, header TEXT, footer TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state (pid INTEGER, action_state_pid INTEGER, state_metadata_pid INTEGER, image_pid INTEGER, type TEXT, enabled INTEGER, selected INTEGER, action BLOB, actions BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tile_descriptor_tile_state_collection (pid INTEGER, descriptor_pid INTEGER, state_pid INTEGER, state_identifier TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_default (pid INTEGER, state_pid INTEGER, title TEXT, body TEXT, accessory_pid INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_default_v2 (pid INTEGER, state_pid INTEGER, title_value_pid INTEGER, body_value_pid INTEGER, body_image_pid INTEGER, footer_value_pid INTEGER, preferred_style TEXT, accessory_pid INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_check_in (pid INTEGER, state_pid INTEGER, available_from INTEGER, available_from_utc_offset INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_accessory (pid INTEGER, type TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_button (pid INTEGER, accessory_pid INTEGER, title TEXT, spinner_enabled INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_spinner (pid INTEGER, accessory_pid INTEGER, spinner_enabled INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_image (pid INTEGER, accessory_pid INTEGER, image_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value (pid INTEGER, type TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value_date (pid INTEGER, value_pid INTEGER, content TEXT, date_style INTEGER, time_style INTEGER, ignores_time_zone INTEGER, is_relative INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value_number (pid INTEGER, value_pid INTEGER, currency_content INTEGER, decimal_content DECIMAL, number_style INTEGER, currency_code TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value_foreign_reference (pid INTEGER, value_pid INTEGER, content TEXT, foreign_reference_type TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value_text (pid INTEGER, content TEXT, value_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_metadata(pid INTEGER, type TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_metadata_rke (pid INTEGER, state_metadata_pid INTEGER, vehicle_function_states BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_image (pid INTEGER,iconName TEXT,tint TEXT, symbol TEXT, hasColorContent BOOL DEFAULT 0, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor_state (pid INTEGER, supported INTEGER, enabled INTEGER, state_identifier TEXT, state_override_pid INTEGER, in_progress INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor_state_participant (pid INTEGER, participant_identifier TEXT, pass_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS credit_account_merge_summary (pid INTEGER, credit_account_summary_pid INTEGER, merge_date INTEGER, total_balance INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS credit_account_merge_summary_account_details (pid INTEGER, credit_account_merge_summary_pid INTEGER, account_identifier TEXT, owner_alt_dsid TEXT, statement_balance INTEGER, current_balance INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS apricots (a INTEGER); ")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS ranging_suspension_reason (pid INTEGER, applet_subcredential_pid INTEGER, payment_application_pid INTEGER, ranging_suspension_reasons INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS secure_element_pass_field (pid INTEGER, key TEXT, unit_type TEXT, source INTEGER, field_order INTEGER, pass_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS secure_element_pass_field_foreign_identifier (pid INTEGER, foreign_reference_identifier TEXT, field_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_payment_funding_source (pid INTEGER, account_pid INTEGER, identifier TEXT, type INTEGER, account_suffix TEXT,PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS jabuticaba (pid INTEGER, identifier TEXT, a TEXT, b INTEGER, c TEXT, d INTEGER,e INTEGER,PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS mangosteen (pid INTEGER, ra TEXT, rb TEXT, rc TEXT,rd BOOL, re BOOL, rf TEXT, rg INTEGER, rh BOOL, ri INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cherimoya (pid INTEGER, a TEXT, b TEXT, c TEXT,d TEXT,f TEXT,g INTEGER,h TEXT, i TEXT, j TEXT, k TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS kiwano (pid INTEGER, a INTEGER, b TEXT, e TEXT,f TEXT,g TEXT,h INTEGER, i INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS loquat (pid INTEGER, a INTEGER, b TEXT, e TEXT,f BOOL,g INTEGER,h TEXT,i TEXT,j TEXT,k BLOB,l TEXT,m INTEGER,n TEXT,o TEXT,p TEXT,q INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS romanesco (pid INTEGER, a TEXT, b TEXT, c BLOB, d TEXT, e INTEGER, f TEXT, g TEXT, h TEXT, i TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS kohlrabi (pid INTEGER, a TEXT, b INTEGER, c TEXT, d TEXT, e TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS broccoli (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS carrot (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS bacon (pid INTEGER, a TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS egg (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS waffle (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e BOOL, f INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cardiff (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS corn (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS melomakarono (pid INTEGER, a TEXT, b TEXT, c TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_setup_features (pid INTEGER, identifiers BLOB, localized_display_name TEXT, feature_type INTEGER, feature_state INTEGER, supported_options INTEGER, supported_devices INTEGER, product_identifier TEXT, partner_identifier TEXT, feature_identifier INTEGER, dirty_state_identifier TEXT, last_updated_date INTEGER, product_type INTEGER, product_state INTEGER, notification_title TEXT, notification_message TEXT, discovery_card_identitifer TEXT, expiry_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pomegranate (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, i TEXT, k TEXT, l TEXT, m TEXT, n TEXT, o TEXT, p TEXT, fcc_step_up_required INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cranberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS eggplant (pid INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, n TEXT, o INTEGER, p INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rhubarb (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j TEXT, k TEXT, l TEXT, m INTEGER, n BOOL, q BOOL, r BOOL, s BOOL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS application_message_registration (pid INTEGER, created_date INTEGER, priority INTEGER, source TEXT, identifier TEXT, badge BOOL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS zucchini (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, p TEXT, q INTEGER, r INTEGER, s TEXT, t TEXT, u INTEGER, v TEXT, w BOOL, x INTEGER, y INTEGER, z INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS muffin (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS avocado_toast (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS eggs_benedict (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_requests (pid INTEGER, request_token TEXT, peer_payment_account_pid INTEGER, requester_address TEXT, requestee_address TEXT, amount INTEGER, currency TEXT, memo TEXT, session_id TEXT, expiry_date INTEGER, actions TEXT, request_date INTEGER, last_dismissed_date INTEGER, status TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS yuzu (pid INTEGER, a TEXT, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, g TEXT, h TEXT, i BLOB, j INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tomatillo (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e INTEGER, f INTEGER, g BOOL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS quince (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, ea TEXT, eb TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, ma TEXT, mb TEXT, n TEXT, o TEXT, p INTEGER, q TEXT, r INTEGER, s INTEGER, t TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transit_applet_state_commute_plan (pid INTEGER, transit_applet_state_pid INTEGER REFERENCES transit_applet_state(pid) ON DELETE CASCADE, pass_pid INTEGER NOT NULL REFERENCES pass(pid) ON DELETE CASCADE, identifier TEXT, unique_identifier TEXT, status TEXT, start_date INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS associated_reader_id (pid INTEGER, automatic_selection_criterion_pid INTEGER, reader_id BLOB, priority INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS associated_reader_id_reader_ca (pid INTEGER, associated_reader_id_pid INTEGER, public_key BLOB, attestation BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS potato (pid INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_historical_balance (pid INTEGER, account_pid INTEGER, balance INTEGER, date INTEGER, type INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE UNIQUE INDEX IF NOT EXISTS history_index ON account_historical_balance (account_pid, date, type);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tamarind (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, PRIMARY KEY(pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS radish (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS nashi (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS ume (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS daikon (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS device_environment (pid INTEGER, client_identifier TEXT, country_code TEXT, device_language TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS lemon (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS mirabelle (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS celery (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS bokchoy (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, m INTEGER, n TEXT, o INTEGER, p INTEGER, r INTEGER, s INTEGER, t BLOB,u INTEGER,v TEXT,w TEXT,x TEXT,y TEXT,z INTEGER, aa TEXT, ab INTEGER, ac INTEGER, ad INTEGER, ae INTEGER, af INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS onion (pid INTEGER, type TEXT, uniqueIdentifier TEXT,status TEXT, created_at INTEGER, should_auto_provision INTEGER, provisioning_state BLOB, provisioning_attempt_counter INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS leek (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_statement_metadata (pid INTEGER, statement_identifier TEXT, account_identifier TEXT, opening_date INTEGER, closing_date INTEGER, has_been_processed INTEGER, last_report_date INTEGER, report_count INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_statement_metadata_item (pid INTEGER, account_statement_metadata_pid INTEGER, identifier TEXT, type INTEGER, account_event_type INTEGER, originator_altdsid TEXT, zone_name TEXT, has_been_processed INTEGER, processed_attempt_count INTENGER, last_processed_date INTEGER, last_report_date INTEGER, report_count INTEGER, error INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_application_usage_summary (pid INTEGER, pass_unique_identifier TEXT, payment_application_identifier TEXT, last_used INTEGER, last_used_transaction INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_remote_credential (pid INTEGER, base_pid INTEGER, a TEXT, b INTEGER, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, i TEXT, j INTEGER, k INTEGER, l TEXT, m TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_shareable_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_account_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS garlic (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f INTEGER, g TEXT, h BLOB, i BLOB, j BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS apple_balance_dtu_promotion_configuration (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, l INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_receipt (pid INTEGER, a TEXT, b TEXT, c INTEGER, d TEXT, e BLOB, f INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_provisioning_metadata (pid INTEGER, a INTEGER, b TEXT, c TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_live_render (pid INTEGER, pass_pid INTEGER, enabled INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS credit_recovery_payment_plan (pid INTEGER, identifier TEXT, account_identifier TEXT, enrolled INTEGER, display_name TEXT, enrollment_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS savings_account_step_up_details (pid INTEGER, details_pid INTEGER, threshold_exceeded INTEGER, needed_by INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS relevant_pass_dates (pid INTEGER,pass_pid INTEGER, start_date INTEGER, end_date INTEGER, relevant_date INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transactions_to_delete_from_finance (pid INTEGER, transaction_identifier TEXT NOT NULL, account_identifier TEXT NOT NULL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_needs_sync_to_finance_daemon ON payment_transaction (needs_sync_to_finance);")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_funding_details_bank_account (pid INTEGER, account_funding_source_pid INTEGER, account_identifier TEXT, account_number TEXT, routing_number TEXT, name TEXT, status INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_funding_source_verification (pid INTEGER, account_funding_details_pid INTEGER, status INTEGER, options TEXT, pending_attempt_pid INTEGER, failed_attempt_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_funding_source_verification_attempt (pid INTEGER, type INTEGER, sent_date INTEGER, expiry_date INTEGER, failure_reason INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_funding_source_verification_action (pid INTEGER, account_funding_source_verification_pid INTEGER, type INTEGER, verification_options TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS nutmeg (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS elephant (pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cow (pid INTEGER, c_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, h TEXT, j TEXT, k INTEGER, l INTEGER, m TEXT, r TEXT, s TEXT, t TEXT, u TEXT, v TEXT, w INTEGER, x TEXT, y BOOL, z TEXT, aa TEXT, ab TEXT, localized_pay_in_full_subtitle_override TEXT, has_preconfigured_offers TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pig (pid INTEGER, i_pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS giraffe (pid INTEGER, i_pid INTEGER, default_variant INTEGER, light_variant INTEGER, dark_variant INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_offer_dynamic_content_icon_variant (pid INTEGER, two_x TEXT, three_x TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS dog (pid INTEGER, i_pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cat (pid INTEGER, i_pid INTEGER, a TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS footer_content (pid INTEGER, type INTEGER, footer_text TEXT, installment_criteria_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS footer_content_link (pid INTEGER, footer_content_pid INTEGER, link_text TEXT, link_url TEXT, terms_identifier TEXT, analytics_identifier TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_endpoint_metadata (pid INTEGER, pass_pid INTEGER, last_updated INTEGER, is_dirty INTEGER, type INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS breakfast_burrito (pid INTEGER, ia TEXT, ib TEXT, ic TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_stateful_transfer (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_precursor_pass (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cinnamon (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS allspice (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cowboy (pid INTEGER, c_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, h TEXT, i TEXT, ma BOOL, mb BOOL, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS coffeebeans (pid INTEGER, pass_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, order_index INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS paprika (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS dark_chocolate (pid INTEGER, pass_pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS granola_bar (pid INTEGER, rp INTEGER, it INTEGER, a INTEGER, b INTEGER, c TEXT, rt INTEGER, d INTEGER, e INTEGER, f TEXT, g TEXT, h INTEGER, i TEXT, j INTEGER, k TEXT, m INTEGER, n TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS green_eggs_ham (pid INTEGER, la TEXT, lb TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_identity_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e BLOB, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cumin (pid INTEGER, a INTEGER, b TEXT, c BLOB, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_relevancy_model (pid INTEGER, pass_pid INTEGER, PRIMARY KEY (pid));"))
    {
      if (sub_10035CE40((BOOL)v4, 17070)) {
        unint64_t v6 = 0;
      }
      else {
        unint64_t v6 = 4;
      }
    }
    else
    {
      unint64_t v6 = 4;
    }
  }
  else
  {
    unint64_t v6 = [(PDDatabaseManager *)self _migrateDatabase:v4 fromUserVersion:v5];
  }

  return v6;
}

- (void)_migratePassSettingsFromDatabase:(id)a3
{
  id v4 = +[SQLiteEntity queryWithDatabase:a3 predicate:0];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1003EE95C;
  v5[3] = &unk_100731258;
  v5[4] = self;
  [v4 enumeratePersistentIDsAndProperties:&off_10078C540 usingBlock:v5];
}

- (BOOL)_migrateFrom8075To8076:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"location_date INTEGER")
    && sub_10035CE40((BOOL)v4, 8076);

  return v5;
}

- (BOOL)_migrateFrom8076To8300:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"in_app_pin_required_amount INTEGER")&& sub_10035D008((BOOL)v4, @"payment_application", @"in_app_pin_required_currency TEXT")&& sub_10035CE40((BOOL)v4, 8300);

  return v5;
}

- (BOOL)_migrateFrom8300To8301:(id)a3 context:(id)a4
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_1003EEC48;
  v7[3] = &unk_10074F890;
  id v8 = a3;
  id v5 = v8;
  [a4 addDatabasePopulationOperation:v7];

  return 1;
}

- (BOOL)_migrateFrom8301To8302:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"merchant", @"raw_name TEXT")
    && sub_10035D5D0((BOOL)v4, @"merchant", @"name", @"maps_name")
    && sub_10035D5D0((BOOL)v4, @"merchant", @"short_name", @"name")
    && sub_10035CE40((BOOL)v4, 8302);

  return v5;
}

- (BOOL)_migrateFrom8302To8303:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"sanitized_dpan TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"sanitized_pan TEXT")
    && sub_10035CE40((BOOL)v4, 8303);

  return v5;
}

- (BOOL)_migrateFrom8303To8304:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_name TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_maps_name TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_raw_name TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_industry_category TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_industry_code INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_phone_number TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_maps_identifier INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_url TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_location_latitude REAL")&& sub_10035D008((BOOL)v4,
         @"payment_transaction",
         @"merchant_location_longitude REAL")
    && sub_10000C100((BOOL)v4, @"UPDATE payment_transaction SET merchant_name                  = (select merchant.name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_maps_name             = (select merchant.maps_name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_raw_name              = (select merchant.raw_name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_industry_category     = (select merchant.industry_category from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_industry_code         = (select merchant.industry_code from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_phone_number          = (select merchant.phone_number from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_maps_identifier       = (select merchant.maps_identifier from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_url                   = (select merchant.url from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_location_latitude     = (select merchant.location_latitude from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_location_longitude    = (select merchant.location_longitude from merchant where merchant.pid = payment_transaction.merchant_pid) WHERE payment_transaction.merchant_pid != 0;")
    && sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_pid")
    && sub_10035D8B4((BOOL)v4, @"merchant")
    && sub_10035CE40((BOOL)v4, 8304);

  return v5;
}

- (BOOL)_migrateFrom8304To8305:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"sequence_counter INTEGER")
    && sub_10035CE40((BOOL)v4, 8305);

  return v5;
}

- (BOOL)_migrateFrom8305To9000:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS nfc (pid INTEGER, pass_pid INTEGER, message TEXT, requires_certificate INTEGER, encryption_public_key TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS associated_pass_type_identifier (pass_pid INTEGER, identifier TEXT, identifier_hash TEXT, PRIMARY KEY (pass_pid, identifier));")
    && sub_10035D008((BOOL)v5, @"pass_type", @"identifier_hash TEXT")
    && sub_10035CE40((BOOL)v5, 9000))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003EF1E4;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9000To9001:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"supports_dpan_notifications INTEGER")
    && sub_10035D008((BOOL)v5, @"pass", @"supports_fpan_notifications INTEGER")
    && sub_10035D008((BOOL)v5, @"pass", @"supports_default_card_selection INTEGER")
    && sub_10035CE40((BOOL)v5, 9001))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003EF410;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9001To9002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_result_provider_identifier INTEGER")&& sub_10035CE40((BOOL)v4, 9002);

  return v5;
}

- (BOOL)_migrateFrom9002To9003:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"display_name TEXT")
    && sub_10035D008((BOOL)v5, @"payment_application", @"auxiliary_application INTEGER")
    && sub_10035D008((BOOL)v5, @"payment_application", @"payment_type TEXT")
    && sub_10035CE40((BOOL)v5, 9003))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9003To9004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"pass_default_payment_application_pid INTEGER")
    && sub_10035CE40((BOOL)v4, 9004);

  return v5;
}

- (BOOL)_migrateFrom9004To9005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"payment_option_selectable INTEGER")
    && sub_10035CE40((BOOL)v4, 9005);

  return v5;
}

- (BOOL)_migrateFrom9005To9006:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 1;
  if (sub_10035D5D0((BOOL)v5, @"payment_message", @"identifier", @"service_identifier")
    && sub_10035D5D0((BOOL)v5, @"payment_transaction", @"identifier", @"service_identifier")
    && sub_10035D5D0((BOOL)v5, @"payment_transaction", @"transaction_id", @"transaction_identifier")
    && sub_10035D5D0((BOOL)v5, @"payment_transaction", @"transaction_id_component_1", @"transaction_identifier_component_1")&& sub_10035D5D0((BOOL)v5, @"payment_transaction", @"transaction_id_component_2", @"transaction_identifier_component_2")&& sub_10035D008((BOOL)v5, @"payment_transaction", @"processed_for_location INTEGER")&& sub_10035D008((BOOL)v5, @"payment_transaction", @"identifier TEXT"))
  {
    BOOL v7 = sub_10035CE40((BOOL)v5, 9006);
    *((unsigned char *)v14 + 24) = v7;
    if (v7)
    {
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      void v10[2] = sub_1003EFA50;
      v10[3] = &unk_100732630;
      id v11 = v5;
      id v12 = &v13;
      sub_100012DC8((uint64_t)v11, @"SELECT pid FROM payment_transaction", v10);

      BOOL v8 = *((unsigned char *)v14 + 24) != 0;
    }
    else
    {
      BOOL v8 = 0;
    }
  }
  else
  {
    BOOL v8 = 0;
    *((unsigned char *)v14 + 24) = 0;
  }
  _Block_object_dispose(&v13, 8);

  return v8;
}

- (BOOL)_migrateFrom9006To9007:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 1;
  BOOL v7 = sub_10035D008((BOOL)v5, @"payment_application", @"temp_payment_type INTEGER");
  *((unsigned char *)v14 + 24) = v7;
  if (v7)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1003EFCA4;
    v10[3] = &unk_100732630;
    id v11 = v5;
    id v12 = &v13;
    sub_100012DC8((uint64_t)v11, @"SELECT pid, payment_type FROM payment_application", v10);

    BOOL v8 = *((unsigned char *)v14 + 24) != 0;
  }
  else
  {
    BOOL v8 = 0;
  }
  _Block_object_dispose(&v13, 8);

  return v8;
}

- (BOOL)_migrateFrom9007To9008:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (sub_10035D008((BOOL)v6, @"pass_group", @"nfc_enabled INTEGER")
    && sub_10035CE40((BOOL)v6, 9008))
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1003EFEF8;
    v10[3] = &unk_10074F8B8;
    id v11 = v6;
    id v12 = self;
    [v7 addDatabasePopulationOperation:v10];

    BOOL v8 = 1;
  }
  else
  {
    BOOL v8 = 0;
  }

  return v8;
}

- (BOOL)_migrateFrom9008To9009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS value_added_service_transaction (pid INTEGER, pass_pid INTEGER, payment_transaction_pid INTEGER, identifier TEXT, merchant_identifier TEXT, merchant_url TEXT, successful INTEGER, terminal_application_version INTEGER, terminal_mode INTEGER, transaction_date INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 9009);

  return v5;
}

- (BOOL)_migrateFrom9009To9010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DB74(v4, @"nfc");
  unsigned __int8 v6 = [v5 containsObject:@"encryption_public_key"];

  BOOL v7 = ((v6 & 1) != 0 || sub_10035D008((BOOL)v4, @"nfc", @"encryption_public_key TEXT"))
    && sub_10035CE40((BOOL)v4, 9010);

  return v7;
}

- (BOOL)_migrateFrom9010To9011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_location_source_index ON pass_location_source (location_source_pid);")
    && sub_10035CE40((BOOL)v4, 9011);

  return v5;
}

- (BOOL)_migrateFrom9011To9012:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 1;
  BOOL v7 = sub_10035CE40((BOOL)v5, 9012);
  *((unsigned char *)v14 + 24) = v7;
  if (v7)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1003F020C;
    v10[3] = &unk_100732630;
    id v11 = v5;
    id v12 = &v13;
    sub_100012DC8((uint64_t)v11, @"SELECT pid FROM payment_transaction", v10);

    BOOL v8 = *((unsigned char *)v14 + 24) != 0;
  }
  else
  {
    BOOL v8 = 0;
  }
  _Block_object_dispose(&v13, 8);

  return v8;
}

- (BOOL)_migrateFrom9012To9013:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 1;
  if (sub_10035D008((BOOL)v5, @"payment_message", @"identifier TEXT"))
  {
    BOOL v7 = sub_10035CE40((BOOL)v5, 9013);
    *((unsigned char *)v14 + 24) = v7;
    if (v7)
    {
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      void v10[2] = sub_1003F0480;
      v10[3] = &unk_100732630;
      id v11 = v5;
      id v12 = &v13;
      sub_100012DC8((uint64_t)v11, @"SELECT pid FROM payment_message", v10);

      BOOL v8 = *((unsigned char *)v14 + 24) != 0;
    }
    else
    {
      BOOL v8 = 0;
    }
  }
  else
  {
    BOOL v8 = 0;
    *((unsigned char *)v14 + 24) = 0;
  }
  _Block_object_dispose(&v13, 8);

  return v8;
}

- (BOOL)_migrateFrom9013To9014:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"suspended_reason TEXT")
    && sub_10035CE40((BOOL)v5, 9014))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F0688;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9014To9015:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"has_stored_value INTEGER")
    && sub_10035CE40((BOOL)v5, 9015))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F0B10;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9015To9016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"value_added_service_transaction", @"merchant_pid INTEGER")&& sub_10035D060((BOOL)v4, @"value_added_service_transaction", @"merchant_identifier")&& sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS value_added_merchant (pid INTEGER, identifier TEXT, times_presented INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 9016);

  return v5;
}

- (BOOL)_migrateFrom9016To9017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_flavor_index ON pass (pass_flavor);")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_type_identifier_hash_index ON pass_type (identifier_hash);")
    && sub_10035CE40((BOOL)v4, 9017);

  return v5;
}

- (BOOL)_migrateFrom9017To9018:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"cobranded INTEGER")
    && sub_10035CE40((BOOL)v5, 9018))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F0DAC;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9018To9200:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"supports_serial_number_based_provisioning INTEGER")&& sub_10035CE40((BOOL)v5, 9200))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F0F74;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9200To9300:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  BOOL v16 = 0;
  BOOL v16 = sub_10035CE40((BOOL)v5, 9300);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1003F1164;
  v10[3] = &unk_10074F8E0;
  id v12 = &v13;
  id v7 = v5;
  id v11 = v7;
  sub_100012DC8((uint64_t)v7, @"SELECT pid FROM pass;", v10);
  char v8 = *((unsigned char *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom9300To10000:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v15 = 0;
  BOOL v16 = &v15;
  uint64_t v17 = 0x2020000000;
  BOOL v18 = 0;
  BOOL v7 = sub_10035D008((BOOL)v5, @"pass", @"has_background_image INTEGER");
  LOBYTE(v8) = 0;
  if (v7)
  {
    BOOL v8 = sub_10035D008((BOOL)v5, @"pass", @"has_strip_image INTEGER");
    if (v8) {
      LOBYTE(v8) = sub_10035CE40((BOOL)v5, 10000);
    }
  }
  BOOL v18 = v8;
  if (!*((unsigned char *)v16 + 24)) {
    goto LABEL_12;
  }
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1003F1498;
  v12[3] = &unk_10074F8E0;
  id v14 = &v15;
  id v9 = v5;
  id v13 = v9;
  sub_100012DC8((uint64_t)v9, @"SELECT pid, background_hash, strip_hash FROM pass", v12);

  if (*((unsigned char *)v16 + 24))
  {
    BOOL v10 = sub_10035D060((BOOL)v9, @"pass", @"icon_hash")
       && sub_10035D060((BOOL)v9, @"pass", @"logo_hash")
       && sub_10035D060((BOOL)v9, @"pass", @"thumbnail_hash")
       && sub_10035D060((BOOL)v9, @"pass", @"background_hash")
       && sub_10035D060((BOOL)v9, @"pass", @"strip_hash")
       && sub_10035D060((BOOL)v9, @"pass", @"payment_assets_hash");
    *((unsigned char *)v16 + 24) = v10;
  }
  else
  {
LABEL_12:
    BOOL v10 = 0;
  }
  _Block_object_dispose(&v15, 8);

  return v10;
}

- (BOOL)_migrateFrom10000To10001:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS associated_web_domain (pass_pid INTEGER, web_domain TEXT, PRIMARY KEY (pass_pid, web_domain));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS associated_web_domain (pass_pid INTEGER, web_domain TEXT, PRIMARY KEY (pass_pid, web_domain));")
    && sub_10035CE40((BOOL)v4, 10001);

  return v5;
}

- (BOOL)_migrateFrom10001To10002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_properties (pid INTEGER, payment_application_pid INTEGER, property_type INTEGER, perito_moreno TEXT, franz_josef INTEGER, biafo TEXT, pasterze TEXT, lambert INTEGER, jostedal INTEGER, fox INTEGER, hubbard INTEGER, mendenhall TEXT, canada INTEGER, siachen INTEGER, portage TEXT, PRIMARY KEY (pid))")&& sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_properties (pid INTEGER, payment_application_pid INTEGER, property_type INTEGER, perito_moreno TEXT, franz_josef INTEGER, biafo TEXT, pasterze TEXT, lambert INTEGER, jostedal INTEGER, fox INTEGER, hubbard INTEGER, mendenhall TEXT, canada INTEGER, siachen INTEGER, portage TEXT, PRIMARY KEY (pid))")&& sub_10035CE40((BOOL)v4, 10002);

  return v5;
}

- (BOOL)_migrateFrom10002To10003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_properties", @"columbia TEXT")
    && sub_10035CE40((BOOL)v4, 10003);

  return v5;
}

- (BOOL)_migrateFrom10003To10004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_properties", @"property_identifier TEXT")
    && sub_10035CE40((BOOL)v4, 10004);

  return v5;
}

- (BOOL)_migrateFrom10004To10005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"pass", @"order_within_group")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_unique_id_index ON pass (unique_id);")
    && sub_10035CE40((BOOL)v4, 10005);

  return v5;
}

- (BOOL)_migrateFrom10005To10006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"transaction_source INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"has_notification_service_data INTEGER")&& sub_10000C100((BOOL)v4, @"UPDATE payment_transaction SET has_notification_service_data = 1 WHERE (transaction_sources & 2)")&& sub_10000C100((BOOL)v4, @"UPDATE payment_transaction SET transaction_source = 1            WHERE (transaction_sources & 1)")&& sub_10000C100((BOOL)v4, @"UPDATE payment_transaction SET transaction_source = 2            WHERE (transaction_sources & 4)")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"transaction_sources")&& sub_10035CE40((BOOL)v4, 10006);

  return v5;
}

- (BOOL)_migrateFrom10006To10007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS _01 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS _01_payment_application_pid_index ON _01 (payment_application_pid);")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"a INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"b INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"c TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"d INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"e INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"f TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"g INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"h INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"i TEXT")
    && sub_10035CE40((BOOL)v4, 10007);

  return v5;
}

- (BOOL)_migrateFrom10007To10008:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"payment_transaction", @"e")
    && sub_10035D060((BOOL)v4, @"payment_transaction", @"h")
    && sub_10035D060((BOOL)v4, @"payment_transaction", @"d")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"d BLOB")
    && sub_10035D060((BOOL)v4, @"payment_transaction", @"g")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"g BLOB")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"processed_for_A INTEGER")
    && sub_10035CE40((BOOL)v4, 10008);

  return v5;
}

- (BOOL)_migrateFrom10008To10009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"supports_A INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_application", @"a TEXT")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS _02 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE, a TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 10009);

  return v5;
}

- (BOOL)_migrateFrom10009To10010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"requires_a_cup_of_tea INTEGER")
    && sub_10035CE40((BOOL)v4, 10010);

  return v5;
}

- (BOOL)_migrateFrom10010To10011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D8B4((BOOL)v4, @"pass_properties")
    && sub_10035D008((BOOL)v4, @"_01", @"f INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"g BLOB")
    && sub_10035D008((BOOL)v4, @"_01", @"h BLOB")
    && sub_10035D008((BOOL)v4, @"_01", @"i INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"l TEXT")
    && sub_10035D008((BOOL)v4, @"_01", @"m INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"n INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"o BLOB")
    && sub_10035D008((BOOL)v4, @"_01", @"p BLOB")
    && sub_10035D008((BOOL)v4, @"_01", @"q TEXT")
    && sub_10035D008((BOOL)v4, @"_01", @"r TEXT")
    && sub_10035D008((BOOL)v4, @"_01", @"s TEXT")
    && sub_10035D008((BOOL)v4, @"_01", @"t TEXT")
    && sub_10035D008((BOOL)v4, @"_01", @"v INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"w INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_application", @"b TEXT")
    && sub_10035CE40((BOOL)v4, 10011);

  return v5;
}

- (BOOL)_migrateFrom10011To10012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"_01", @"x INTEGER")
    && sub_10035CE40((BOOL)v4, 10012);

  return v5;
}

- (BOOL)_migrateFrom10012To10013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"_01", @"k INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"u INTEGER")
    && sub_10035CE40((BOOL)v4, 10013);

  return v5;
}

- (BOOL)_migrateFrom10013To10014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D5D0((BOOL)v4, @"payment_message", @"expired", @"archived")
    && sub_10035D5D0((BOOL)v4, @"payment_message", @"expires_on_next_transaction", @"archive_on_next_transaction")&& sub_10035CE40((BOOL)v4, 10014);

  return v5;
}

- (BOOL)_migrateFrom10014To10015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"j INTEGER")
    && sub_10035CE40((BOOL)v4, 10015);

  return v5;
}

- (BOOL)_migrateFrom10015To10016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"_01", @"aa INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"y INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"z INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"ab BLOB")
    && sub_10035D008((BOOL)v4, @"_01", @"ac BLOB")
    && sub_10035D008((BOOL)v4, @"_01", @"af INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"ag INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"ah TEXT")
    && sub_10035D008((BOOL)v4, @"_01", @"ai INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"aj INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"ak INTEGER")
    && sub_10035D008((BOOL)v4, @"_01", @"ad TEXT")
    && sub_10035D008((BOOL)v4, @"_01", @"ae TEXT")
    && sub_10035CE40((BOOL)v4, 10016);

  return v5;
}

- (BOOL)_migrateFrom10016To10200:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D5D0((BOOL)v4, @"payment_message", @"archive_on_next_transaction", @"message_type")
    && sub_10035CE40((BOOL)v4, 10200);

  return v5;
}

- (BOOL)_migrateFrom10200To10300:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"pass", @"iad_reporting_identifier") && sub_10035CE40((BOOL)v4, 10300);

  return v5;
}

- (BOOL)_migrateFrom10300To11000:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"low_balance_reminder_amount INTEGER")
    && sub_10035D008((BOOL)v4, @"pass", @"low_balance_reminder_currency TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"commute_plan_renewal_reminder_time_interval INTEGER");

  return v5;
}

- (BOOL)_migrateFrom11000To11001:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"issuer_country_code TEXT")
    && sub_10035CE40((BOOL)v5, 11001))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F239C;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom11001To11002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"ocean INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"wave TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"board TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"beach TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"metadata TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"is_cloud_kit_archived INTEGER")
    && sub_10035CE40((BOOL)v4, 11002);

  return v5;
}

- (BOOL)_migrateFrom11002To11003:(id)a3 context:(id)a4
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1003F2D3C;
  v8[3] = &unk_10074F908;
  id v4 = a3;
  id v9 = v4;
  BOOL v5 = objc_retainBlock(v8);
  BOOL v6 = sub_10000C100((BOOL)v4, @"DROP INDEX IF EXISTS _01_payment_application_pid_index;")
    && sub_10035D91C((BOOL)v4, @"_01", @"felica_transit_applet_state")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"a", @"in_station")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"b", @"in_shinkansen_station")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"aa", @"shinkansen_ticket_active")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"c", @"green_car_ticket_used")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"d", @"history_sequence_number")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"e", @"balance")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"f", @"blacklisted")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"k", @"shinkansen_validity_start_date")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"y", @"shinkansen_validity_term")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"g", @"shinkansen_origin_station_code")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"h", @"shinkansen_destination_station_code")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"i", @"shinkansen_departure_time")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"j", @"shinkansen_arrival_time")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"l", @"shinkansen_train_name")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"m", @"shinkansen_car_number")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"z", @"shinkansen_seat_row")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"n", @"shinkansen_seat_number")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"ab", @"shinkansen_secondary_origin_station_code")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"ac", @"shinkansen_secondary_destination_station_code")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"af", @"shinkansen_secondary_departure_time")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"ag", @"shinkansen_secondary_arrival_time")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"ah", @"shinkansen_secondary_train_name")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"ai", @"shinkansen_secondary_car_number")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"aj", @"shinkansen_secondary_seat_row")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"ak", @"shinkansen_secondary_seat_number")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"o", @"green_car_origin_station_code")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"p", @"green_car_destination_station_code")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"q", @"shinkansen_origin_station_string")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"r", @"shinkansen_destination_station_string")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"ad", @"shinkansen_secondary_origin_station_string")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"ae", @"shinkansen_secondary_destination_station_string")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"s", @"green_car_origin_station_string")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"t", @"green_car_destination_station_string")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"u", @"green_car_validity_start_date")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"v", @"has_green_car_ticket")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"w", @"has_shinkansen_ticket")&& ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])(v5, @"x", @"needs_station_processing")&& sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS felica_transit_applet_state_payment_application_pid_index ON felica_transit_applet_state (payment_application_pid);")
    && sub_10035D91C((BOOL)v4, @"_02", @"payment_express_mode")
    && sub_10035D5D0((BOOL)v4, @"payment_express_mode", @"a", @"express_mode")
    && sub_10035D5D0((BOOL)v4, @"payment_application", @"supports_A", @"supports_optional_authentication")&& sub_10035D5D0((BOOL)v4, @"payment_application", @"a", @"applet_data_format")&& sub_10035D5D0((BOOL)v4, @"payment_application", @"b", @"applet_currency_code")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"processed_for_A", @"processed_for_stations")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"d", @"start_station_code")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"f", @"start_station")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"g", @"end_station_code")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"i", @"end_station")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"a", @"transit_type")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"j", @"transit_modifiers")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"b", @"en_route")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"c", @"station_code_provider")
    && sub_10035CE40((BOOL)v4, 11003);

  return v6;
}

- (BOOL)_migrateFrom11003To11004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"supports_S INTEGER")
    && sub_10035CE40((BOOL)v4, 11004);

  return v5;
}

- (BOOL)_migrateFrom11004To11005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"nfc", @"requires_certificate") && sub_10035CE40((BOOL)v4, 11005);

  return v5;
}

- (BOOL)_migrateFrom11005To11006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_account (pid INTEGER, identifier TEXT, pass_pid INTEGER, state INTEGER, current_balance_currency TEXT, current_balance_amount INTEGER, identity_verification_required INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, terms_url TEXT, pass_serial_number TEXT, pass_type_id TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 11006);

  return v5;
}

- (BOOL)_migrateFrom11006To11007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_fee (pid INTEGER, identifier TEXT, payment_transaction_pid INTEGER, type INTEGER, amount INTEGER, currency TEXT, localized_display_name TEXT,PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"subtotal_amount INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"foreign_exchange_information_destination_currency_code TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"foreign_exchange_information_destination_amount INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"foreign_exchange_information_exchange_rate TEXT")&& sub_10035CE40((BOOL)v4, 11007);

  return v5;
}

- (BOOL)_migrateFrom11007To11008:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D5D0((BOOL)v4, @"payment_transaction", @"transaction_identifier", @"payment_hash")
    && sub_10035D5D0((BOOL)v4, @"payment_transaction", @"transaction_identifier_component_1", @"payment_hash_component_1")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"transaction_identifier_component_2", @"payment_hash_component_2")&& sub_10035CE40((BOOL)v4, 11008);

  return v5;
}

- (BOOL)_migrateFrom11008To11009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_account_feature_descriptor (pid INTEGER, identifier TEXT, peer_payment_account_pid INTEGER, minimum_amount INTEGER, maximum_amount INTEGER, supported_networks TEXT, merchant_identifier TEXT, merchant_capabilities INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"peer_payment_account", @"country_code TEXT")
    && sub_10035D008((BOOL)v4, @"peer_payment_account", @"associated_pass_url TEXT")
    && sub_10035D5D0((BOOL)v4, @"peer_payment_account", @"pass_serial_number", @"associated_pass_serial_number")&& sub_10035D5D0((BOOL)v4, @"peer_payment_account", @"pass_type_id", @"associated_pass_type_identifier")&& sub_10035CE40((BOOL)v4, 11009);

  return v5;
}

- (BOOL)_migrateFrom11009To11010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"peer_payment_account", @"identifier")
    && sub_10035CE40((BOOL)v4, 11010);

  return v5;
}

- (BOOL)_migrateFrom11010To11011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_postal_address TEXT")
    && sub_10035CE40((BOOL)v4, 11011);

  return v5;
}

- (BOOL)_migrateFrom11011To11012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"requires_deferred_authorization INTEGER")&& sub_10035CE40((BOOL)v4, 11012);

  return v5;
}

- (BOOL)_migrateFrom11012To11013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"primary_funding_source_amount INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"primary_funding_source_currency_code TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"secondary_funding_source_amount INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"secondary_funding_source_currency_code TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"secondary_funding_source_network INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"secondary_funding_source_dpan_suffix TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"secondary_funding_source_fpan_identifier TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"secondary_funding_source_description TEXT")&& sub_10035D5D0((BOOL)v4, @"pass", @"supports_S", @"has_associated_peer_payment_account")&& sub_10035CE40((BOOL)v4, 11013);

  return v5;
}

- (BOOL)_migrateFrom11013To11014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"has_live_rendered_background INTEGER")
    && sub_10035CE40((BOOL)v4, 11014);

  return v5;
}

- (BOOL)_migrateFrom11014To11015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"payment_transaction", @"wave") && sub_10035CE40((BOOL)v4, 11015);

  return v5;
}

- (BOOL)_migrateFrom11015To11016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"stage INTEGER")
    && sub_10035CE40((BOOL)v4, 11016);

  return v5;
}

- (BOOL)_migrateFrom11016To11017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"transaction_status_changed_date INTEGER")&& sub_10035CE40((BOOL)v4, 11017);

  return v5;
}

- (BOOL)_migrateFrom11017To11018:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"expiration_date INTEGER")
    && sub_10035CE40((BOOL)v4, 11018);

  return v5;
}

- (BOOL)_migrateFrom11018To11019:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D5D0((BOOL)v4, @"pass", @"requires_a_cup_of_tea", @"requires_transfer_serial_number_based_provisioning")&& sub_10035CE40((BOOL)v4, 11019);

  return v5;
}

- (BOOL)_migrateFrom11019To11020:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"maximum_balance_amount INTEGER")&& sub_10035CE40((BOOL)v4, 11020);

  return v5;
}

- (BOOL)_migrateFrom11020To11021:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"adjustment_type INTEGER")
    && sub_10035CE40((BOOL)v4, 11021);

  return v5;
}

- (BOOL)_migrateFrom11021To11022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"request_device_score_identifier TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"send_device_score_identifier TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"device_score_identifiers_required INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"device_score_identifiers_submitted INTEGER")&& sub_10035CE40((BOOL)v4, 11022);

  return v5;
}

- (BOOL)_migrateFrom11022To11100:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"account_state_dirty INTEGER")
    && sub_10035CE40((BOOL)v4, 11100);

  return v5;
}

- (BOOL)_migrateFrom11100To11200:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"last_updated_date INTEGER")
    && sub_10035CE40((BOOL)v4, 11200);

  return v5;
}

- (BOOL)_migrateFrom11200To11201:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"proactive_fetch_period INTEGER")&& sub_10035CE40((BOOL)v4, 11201);

  return v5;
}

- (BOOL)_migrateFrom11201To11300:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, in_station INTEGER, history_sequence_number INTEGER, balance INTEGER, loyalty_balance INTEGER, currency TEXT, blacklisted INTEGER, needs_station_processing INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 11300);

  return v5;
}

- (BOOL)_migrateFrom11300To11301:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"transaction_declined_reason INTEGER")&& sub_10035CE40((BOOL)v4, 11301);

  return v5;
}

- (BOOL)_migrateFrom11301To11302:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"felica_transit_applet_state", @"balance_allowed_for_commute INTEGER")&& sub_10035D008((BOOL)v4, @"felica_transit_applet_state", @"low_balance_notification_enabled INTEGER")&& sub_10035CE40((BOOL)v4, 11302);

  return v5;
}

- (BOOL)_migrateFrom11302To11303:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"peer_payment_message_received_date INTEGER")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"ocean", @"peer_payment_type")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"board", @"peer_payment_counterpart_handle")&& sub_10035D5D0((BOOL)v4, @"payment_transaction", @"beach", @"peer_payment_memo")&& sub_10035CE40((BOOL)v4, 11303);

  return v5;
}

- (BOOL)_migrateFrom11303To12000:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS apples (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"a INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"b TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"c INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"d TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"e TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"f TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"g TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"h TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"j TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"k TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"l TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"m INTEGER")
    && sub_10035CE40((BOOL)v4, 12000);

  return v5;
}

- (BOOL)_migrateFrom12000To12001:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pears (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS strawberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS clementines (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cucumbers (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS oranges (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS bananas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pineapples (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12001);

  return v5;
}

- (BOOL)_migrateFrom12001To12002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"is_cloud_kit_archived INTEGER")
    && sub_10035CE40((BOOL)v4, 12002);

  return v5;
}

- (BOOL)_migrateFrom12002To12003:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"card_type INTEGER")
    && sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion (pid INTEGER, payment_application_pid INTEGER, type TEXT, supports_express INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_tci (pid INTEGER, payment_automatic_selection_criterion_pid INTEGER, tci BLOB, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 12003))
  {
    [v6 addAutomaticSelectionCriteriaRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom12003To12004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_balance (pid INTEGER, pass_pid INTEGER NOT NULL, identifier TEXT, localized_title TEXT, localized_description TEXT, currency_code TEXT, exponent INTEGER, value INTEGER, is_primary_balance INTEGER, last_updated_date INTEGER NOT NULL, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12004);

  return v5;
}

- (BOOL)_migrateFrom12004To12005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"secondary_background_color TEXT")
    && sub_10035CE40((BOOL)v4, 12005);

  return v5;
}

- (BOOL)_migrateFrom12005To12006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"pending_payment_count INTEGER")&& sub_10035CE40((BOOL)v4, 12006);

  return v5;
}

- (BOOL)_migrateFrom12006To12007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pears", @"h TEXT")
    && sub_10035CE40((BOOL)v4, 12007);

  return v5;
}

- (BOOL)_migrateFrom12007To12008:(id)a3 context:(id)a4
{
  return sub_10035CE40((BOOL)a3, 12008);
}

- (BOOL)_migrateFrom12008To12009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pineapples", @"g INTEGER")
    && sub_10035CE40((BOOL)v4, 12009);

  return v5;
}

- (BOOL)_migrateFrom12009To12010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_provided_description TEXT")&& sub_10035CE40((BOOL)v4, 12010);

  return v5;
}

- (BOOL)_migrateFrom12010To12011:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1003F404C;
  v10[3] = &unk_100730D00;
  id v12 = &v13;
  id v7 = v5;
  id v11 = v7;
  sub_10000817C((uint64_t)v7, v10);
  char v8 = *((unsigned char *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom12011To12012:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"a TEXT") && sub_10035CE40((BOOL)v5, 12012))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F4754;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom12012To12013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"n INTEGER")
    && sub_10035CE40((BOOL)v4, 12013);

  return v5;
}

- (BOOL)_migrateFrom12013To12014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"o TEXT")
    && sub_10035CE40((BOOL)v4, 12014);

  return v5;
}

- (BOOL)_migrateFrom12014To12015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"should_suppress_date INTEGER")
    && sub_10035CE40((BOOL)v4, 12015);

  return v5;
}

- (BOOL)_migrateFrom12015To12016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"p TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"q INTEGER")
    && sub_10035CE40((BOOL)v4, 12016);

  return v5;
}

- (BOOL)_migrateFrom12016To12017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS blackberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, PRIMARY KEY (pid));")
    && sub_10035D060((BOOL)v4, @"clementines", @"e")
    && sub_10035CE40((BOOL)v4, 12017);

  return v5;
}

- (BOOL)_migrateFrom12017To12018:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"oranges", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"oranges", @"k INTEGER")
    && sub_10035D060((BOOL)v4, @"pineapples", @"b")
    && sub_10035D008((BOOL)v4, @"pineapples", @"b TEXT")
    && sub_10035D060((BOOL)v4, @"pineapples", @"f")
    && sub_10035D008((BOOL)v4, @"pineapples", @"f TEXT")
    && sub_10035D008((BOOL)v4, @"pineapples", @"h INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"i INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"k INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"l INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"m INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"n INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"o INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"p INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"q INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"r INTEGER")
    && sub_10035CE40((BOOL)v4, 12018);

  return v5;
}

- (BOOL)_migrateFrom12018To12019:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_10035CE40((BOOL)a3, 12019);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom12019To12020:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1003F4D90;
  v10[3] = &unk_100730D00;
  id v12 = &v13;
  id v7 = v5;
  id v11 = v7;
  sub_10000817C((uint64_t)v7, v10);
  char v8 = *((unsigned char *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom12020To12021:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"contactless_priority INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_application", @"in_app_priority INTEGER")
    && sub_10035CE40((BOOL)v4, 12021);

  return v5;
}

- (BOOL)_migrateFrom12021To12022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"strawberries", @"k TEXT")
    && sub_10035CE40((BOOL)v4, 12022);

  return v5;
}

- (BOOL)_migrateFrom12022To12023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS grapes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS avocados (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"pineapples", @"s INTEGER")
    && sub_10035CE40((BOOL)v4, 12023);

  return v5;
}

- (BOOL)_migrateFrom12023To12024:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"r TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"s TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"t TEXT")
    && sub_10035CE40((BOOL)v4, 12024);

  return v5;
}

- (BOOL)_migrateFrom12024To12025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tomatoes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, h TEXT, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12025);

  return v5;
}

- (BOOL)_migrateFrom12025To12026:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS mangos (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12026);

  return v5;
}

- (BOOL)_migrateFrom12026To12027:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS lychees (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, o TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rambutans (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12027);

  return v5;
}

- (BOOL)_migrateFrom12027To12028:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS watermelons (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"cucumbers", @"c INTEGER")
    && sub_10035CE40((BOOL)v4, 12028);

  return v5;
}

- (BOOL)_migrateFrom12028To12029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS raspberries (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f INTEGER, g TEXT, h TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12029);

  return v5;
}

- (BOOL)_migrateFrom12029To12030:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS nectarines (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"blackberries", @"g INTEGER")
    && sub_10035CE40((BOOL)v4, 12030);

  return v5;
}

- (BOOL)_migrateFrom12030To12031:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pitayas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"blackberries", @"h TEXT")
    && sub_10035CE40((BOOL)v4, 12031);

  return v5;
}

- (BOOL)_migrateFrom12031To12032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"lychees", @"p TEXT")
    && sub_10035D008((BOOL)v4, @"lychees", @"q INTEGER")
    && sub_10035D008((BOOL)v4, @"lychees", @"r INTEGER")
    && sub_10035D008((BOOL)v4, @"lychees", @"s TEXT")
    && sub_10035D008((BOOL)v4, @"lychees", @"t INTEGER")
    && sub_10035D060((BOOL)v4, @"lychees", @"g")
    && sub_10035D060((BOOL)v4, @"lychees", @"o")
    && sub_10035D008((BOOL)v4, @"strawberries", @"l TEXT")
    && sub_10035CE40((BOOL)v4, 12032);

  return v5;
}

- (BOOL)_migrateFrom12032To12033:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"raspberries", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"raspberries", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"raspberries", @"k INTEGER")
    && sub_10035CE40((BOOL)v4, 12033);

  return v5;
}

- (BOOL)_migrateFrom12033To12034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"lychees", @"t") && sub_10035CE40((BOOL)v4, 12034);

  return v5;
}

- (BOOL)_migrateFrom12034To12035:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"secondary_funding_source_type INTEGER")&& sub_10000C100((BOOL)v4, @"UPDATE payment_transaction SET secondary_funding_source_type = 1 WHERE payment_transaction.transaction_type=5;")
    && sub_10035CE40((BOOL)v4, 12035);

  return v5;
}

- (BOOL)_migrateFrom12035To12036:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"oranges", @"l INTEGER")
    && sub_10035CE40((BOOL)v4, 12036);

  return v5;
}

- (BOOL)_migrateFrom12036To12037:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS maps_merchant (pid INTEGER, identifier INTEGER, result_provider_identifier INTEGER, name TEXT, phone_number TEXT, url TEXT, location_latitude REAL, location_longitude REAL, postal_address TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"maps_merchant_pid INTEGER")
    && sub_10000C100((BOOL)v4, @"INSERT INTO    maps_merchant(   identifier, result_provider_identifier, name, phone_number, url, location_latitude, location_longitude, postal_address) SELECT    * FROM(   SELECT        pt.merchant_maps_identifier,       pt.merchant_result_provider_identifier,       pt.merchant_maps_name,       pt.merchant_phone_number,       pt.merchant_url,       pt.merchant_location_latitude,       pt.merchant_location_longitude,       pt.merchant_postal_address    FROM        payment_transaction AS pt    WHERE        (pt.merchant_maps_identifier IS NOT null AND pt.merchant_maps_identifier IS NOT 0)    ORDER BY        pt.transaction_date DESC) AS sorted_merchants GROUP BY    sorted_merchants.merchant_maps_identifier")&& sub_10000C100((BOOL)v4, @"UPDATE    payment_transaction SET    maps_merchant_pid = (SELECT m.pid FROM maps_merchant AS m WHERE m.identifier = payment_transaction.merchant_maps_identifier) WHERE    payment_transaction.merchant_maps_identifier != 0")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_maps_name")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_phone_number")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_maps_identifier")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_result_provider_identifier")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_url")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_postal_address")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_location_latitude")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"merchant_location_longitude"))
  {
    sub_10035CE40((BOOL)v4, 12037);
    BOOL v5 = 1;
  }
  else
  {
    BOOL v5 = 0;
  }

  return v5;
}

- (BOOL)_migrateFrom12037To12038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transit_network_identifier (pid INTEGER, payment_application_pid INTEGER, identifier TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12038);

  return v5;
}

- (BOOL)_migrateFrom12038To12039:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"maps_merchant", @"a TEXT")
    && sub_10035CE40((BOOL)v4, 12039);

  return v5;
}

- (BOOL)_migrateFrom12039To12040:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS blueberries (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_10035D060((BOOL)v4, @"raspberries", @"k")
    && sub_10035D008((BOOL)v4, @"raspberries", @"k INTEGER")
    && sub_10035CE40((BOOL)v4, 12040);

  return v5;
}

- (BOOL)_migrateFrom12040To12041:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS plantains (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"u INTEGER")
    && sub_10035CE40((BOOL)v4, 12041);

  return v5;
}

- (BOOL)_migrateFrom12041To12042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"b INTEGER")
    && sub_10035CE40((BOOL)v4, 12042);

  return v5;
}

- (BOOL)_migrateFrom12042To12043:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS jackfruits (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cantaloupes (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"apples", @"i INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"v TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"w INTEGER")
    && sub_10035CE40((BOOL)v4, 12043);

  return v5;
}

- (BOOL)_migrateFrom12043To12044:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"raspberries", @"l INTEGER")
    && sub_10035CE40((BOOL)v4, 12044);

  return v5;
}

- (BOOL)_migrateFrom12044To12045:(id)a3 context:(id)a4
{
  id v5 = a3;
  [a4 addAutomaticSelectionCriteriaRegeneration];
  BOOL v6 = sub_10035D008((BOOL)v5, @"payment_automatic_selection_criterion", @"mask BLOB")
    && sub_10035D008((BOOL)v5, @"payment_automatic_selection_criterion_tci", @"is_primary INTEGER")&& sub_10035CE40((BOOL)v5, 12045);

  return v6;
}

- (BOOL)_migrateFrom12045To12046:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"maps_merchant", @"b BLOB")
    && sub_10035D008((BOOL)v4, @"plantains", @"f BLOB")
    && sub_10035CE40((BOOL)v4, 12046);

  return v5;
}

- (BOOL)_migrateFrom12046To12047:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"x INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"y TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"z INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"aa INTEGER")
    && sub_10035D008((BOOL)v4, @"maps_merchant", @"c INTEGER")
    && sub_10035D008((BOOL)v4, @"maps_merchant", @"d TEXT")
    && sub_10035D008((BOOL)v4, @"maps_merchant", @"e INTEGER")
    && sub_10035D008((BOOL)v4, @"maps_merchant", @"f INTEGER")
    && sub_10035D060((BOOL)v4, @"maps_merchant", @"b")
    && sub_10035D008((BOOL)v4, @"plantains", @"g INTEGER")
    && sub_10035D008((BOOL)v4, @"plantains", @"h TEXT")
    && sub_10035D008((BOOL)v4, @"plantains", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"plantains", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"plantains", @"k INTEGER")
    && sub_10035D060((BOOL)v4, @"plantains", @"f")
    && sub_10035CE40((BOOL)v4, 12047);

  return v5;
}

- (BOOL)_migrateFrom12047To12048:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"supports_instant_funds_in INTEGER")&& sub_10035CE40((BOOL)v4, 12048);

  return v5;
}

- (BOOL)_migrateFrom12048To12049:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS guavas (pid INTEGER, a TEXT, b INTEGER, c REAL, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12049);

  return v5;
}

- (BOOL)_migrateFrom12049To12050:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS balance_reminder (pid INTEGER, pass_pid INTEGER, balance_identifier TEXT, threshold TEXT, enabled INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 12050))
  {
    id v7 = +[PKPassPreferencesManager sharedInstance];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_1003F5EF0;
    void v11[3] = &unk_10074F8B8;
    id v12 = v5;
    id v13 = v7;
    id v8 = v7;
    [v6 addDatabasePopulationOperation:v11];

    BOOL v9 = 1;
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

- (BOOL)_migrateFrom12050To12051:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"ab TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"ac INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"ad INTEGER")
    && sub_10035CE40((BOOL)v4, 12051);

  return v5;
}

- (BOOL)_migrateFrom12051To12052:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transit_network_identifier", @"network_order INTEGER")&& sub_10035CE40((BOOL)v4, 12052);

  return v5;
}

- (BOOL)_migrateFrom12052To12053:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS discovery_item (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, type INTEGER, rule_identifier TEXT, triggers BLOB, layout_url TEXT, supported_localizations BLOB, os_version_requirement_range BLOB, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12053);

  return v5;
}

- (BOOL)_migrateFrom12053To12054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"identity_verification_for_disbursements_required INTEGER")&& sub_10035CE40((BOOL)v4, 12054);

  return v5;
}

- (BOOL)_migrateFrom12054To12055:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rule (pid INTEGER, identifier TEXT, predicate_format TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12055);

  return v5;
}

- (BOOL)_migrateFrom12055To12056:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"fee_percentage INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"minimum_fee INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"maximum_fee INTEGER")&& sub_10035CE40((BOOL)v4, 12056);

  return v5;
}

- (BOOL)_migrateFrom12056To12057:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS durian (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS fig (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS prune (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12057);

  return v5;
}

- (BOOL)_migrateFrom12057To12058:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"raspberries", @"m INTEGER")
    && sub_10035CE40((BOOL)v4, 12058);

  return v5;
}

- (BOOL)_migrateFrom12058To12059:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS starfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12059);

  return v5;
}

- (BOOL)_migrateFrom12059To12060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"payment_transaction", @"z")
    && sub_10035D060((BOOL)v4, @"payment_transaction", @"aa")
    && sub_10035D060((BOOL)v4, @"maps_merchant", @"e")
    && sub_10035D060((BOOL)v4, @"maps_merchant", @"f")
    && sub_10035D060((BOOL)v4, @"plantains", @"j")
    && sub_10035D060((BOOL)v4, @"plantains", @"k")
    && sub_10035D008((BOOL)v4, @"maps_merchant", @"g BLOB")
    && sub_10035D008((BOOL)v4, @"plantains", @"l BLOB")
    && sub_10035CE40((BOOL)v4, 12060);

  return v5;
}

- (BOOL)_migrateFrom12060To12061:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"oranges", @"m INTEGER")
    && sub_10035D008((BOOL)v4, @"oranges", @"n INTEGER")
    && sub_10035CE40((BOOL)v4, 12061);

  return v5;
}

- (BOOL)_migrateFrom12061To12062:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"requires_clearing_merchant_cleanup INTEGER")&& sub_10035CE40((BOOL)v4, 12062);

  return v5;
}

- (BOOL)_migrateFrom12062To12063:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS papaya (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e BLOB, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k BLOB, l BLOB, m INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12063);

  return v5;
}

- (BOOL)_migrateFrom12063To12064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pears", @"i INTEGER")
    && sub_10035D008((BOOL)v4, @"pears", @"j INTEGER")
    && sub_10035CE40((BOOL)v4, 12064);

  return v5;
}

- (BOOL)_migrateFrom12064To12065:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS coconuts (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peaches (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"grapes", @"f INTEGER")
    && sub_10035CE40((BOOL)v4, 12065);

  return v5;
}

- (BOOL)_migrateFrom12065To12066:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS whitney (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS williamson (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12066);

  return v5;
}

- (BOOL)_migrateFrom12066To12067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"oranges", @"o INTEGER")
    && sub_10035CE40((BOOL)v4, 12067);

  return v5;
}

- (BOOL)_migrateFrom12067To12068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS passionfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12068);

  return v5;
}

- (BOOL)_migrateFrom12068To12069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"DELETE FROM durian;")
    && sub_10000C100((BOOL)v4, @"DELETE FROM fig;")
    && sub_10000C100((BOOL)v4, @"DELETE FROM prune;")
    && sub_10035D060((BOOL)v4, @"durian", @"b")
    && sub_10035D008((BOOL)v4, @"durian", @"b TEXT")
    && sub_10035D060((BOOL)v4, @"fig", @"d")
    && sub_10035D008((BOOL)v4, @"fig", @"d TEXT")
    && sub_10035D060((BOOL)v4, @"fig", @"e")
    && sub_10035D008((BOOL)v4, @"fig", @"e TEXT")
    && sub_10035D060((BOOL)v4, @"fig", @"f")
    && sub_10035D008((BOOL)v4, @"fig", @"f TEXT")
    && sub_10035D008((BOOL)v4, @"durian", @"k TEXT")
    && sub_10035CE40((BOOL)v4, 12069);

  return v5;
}

- (BOOL)_migrateFrom12069To12070:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pineapples", @"t INTEGER")
    && sub_10035CE40((BOOL)v4, 12070);

  return v5;
}

- (BOOL)_migrateFrom12070To12071:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_10035CE40((BOOL)v6, 12071);
  if (os_variant_has_internal_ui())
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1003F6AC0;
    v10[3] = &unk_10074F8B8;
    id v11 = v6;
    id v12 = self;
    [v7 addDatabasePopulationOperation:v10];
  }
  return v8;
}

- (BOOL)_migrateFrom12071To12072:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"ae TEXT")
    && sub_10035CE40((BOOL)v4, 12072);

  return v5;
}

- (BOOL)_migrateFrom12072To12073:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"ag TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"ah TEXT")
    && sub_10035CE40((BOOL)v4, 12073);

  return v5;
}

- (BOOL)_migrateFrom12073To12074:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"clementines", @"m TEXT")
    && sub_10035CE40((BOOL)v4, 12074);

  return v5;
}

- (BOOL)_migrateFrom12074To12075:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"durian", @"l TEXT")
    && sub_10035CE40((BOOL)v4, 12075);

  return v5;
}

- (BOOL)_migrateFrom12075To12076:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"af TEXT")
    && sub_10035CE40((BOOL)v4, 12076);

  return v5;
}

- (BOOL)_migrateFrom12076To12077:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"oranges", @"p INTEGER")
    && sub_10035D008((BOOL)v4, @"clementines", @"n INTEGER")
    && sub_10035CE40((BOOL)v4, 12077);

  return v5;
}

- (BOOL)_migrateFrom12077To12078:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"oranges", @"q INTEGER")
    && sub_10035D008((BOOL)v4, @"oranges", @"r INTEGER")
    && sub_10035CE40((BOOL)v4, 12078);

  return v5;
}

- (BOOL)_migrateFrom12078To12079:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"requires_merchant_reprocessing INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"last_merchant_reprocessing_date INTEGER")&& sub_10035D060((BOOL)v4, @"payment_transaction", @"requires_clearing_merchant_cleanup")&& sub_10035D060((BOOL)v4, @"pineapples", @"t")&& sub_10035D008((BOOL)v4, @"pineapples", @"t TEXT")&& sub_10035CE40((BOOL)v4, 12079);

  return v5;
}

- (BOOL)_migrateFrom12079To12080:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"maps_merchant", @"h TEXT")
    && sub_10035CE40((BOOL)v4, 12080);

  return v5;
}

- (BOOL)_migrateFrom12080To12081:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS palisades (pid INTEGER, a TEXT NOT NULL UNIQUE, b TEXT NOT NULL, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS shasta (pid INTEGER, a TEXT NOT NULL UNIQUE, b INTEGER REFERENCES whitney(pid) ON DELETE CASCADE, c INTEGER DEFAULT 0, d TEXT NOT NULL, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12081);

  return v5;
}

- (BOOL)_migrateFrom12081To12082:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12082);

  return v5;
}

- (BOOL)_migrateWhitneyFrom1To2:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"e TEXT")
    && sub_10035CE40((BOOL)v4, 12083);

  return v5;
}

- (BOOL)_migrateFrom12083To12084:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"lychees", @"t TEXT")
    && sub_10035CE40((BOOL)v4, 12084);

  return v5;
}

- (BOOL)_migrateFrom12084To12085:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"maps_merchant", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"plantains", @"m TEXT")
    && sub_10035CE40((BOOL)v4, 12085);

  return v5;
}

- (BOOL)_migrateFrom12085To12086:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 12086);

  return v5;
}

- (BOOL)_migrateFrom12086To12087:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"discovery_item", @"relevant_date_range_start_date INTEGER")&& sub_10035D008((BOOL)v4, @"discovery_item", @"relevant_date_range_end_date INTEGER")&& sub_10035D008((BOOL)v4, @"papaya", @"n INTEGER")&& sub_10035D008((BOOL)v4, @"papaya", @"o INTEGER")&& sub_10035CE40((BOOL)v4, 12087);

  return v5;
}

- (BOOL)_migrateFrom12087To12088:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"discovery_item", @"item_order INTEGER")
    && sub_10035D008((BOOL)v4, @"discovery_item", @"view_count INTEGER")
    && sub_10035D008((BOOL)v4, @"discovery_item", @"max_view_count INTEGER")
    && sub_10035D008((BOOL)v4, @"papaya", @"p INTEGER")
    && sub_10035D008((BOOL)v4, @"papaya", @"q INTEGER")
    && sub_10035D008((BOOL)v4, @"papaya", @"r INTEGER")
    && sub_10035CE40((BOOL)v4, 12088);

  return v5;
}

- (BOOL)_migrateFrom12088To12089:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"blackberries", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"blackberries", @"j TEXT")
    && sub_10035CE40((BOOL)v4, 12089);

  return v5;
}

- (BOOL)_migrateFrom12089To12090:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"lychees", @"u INTEGER")
    && sub_10035D008((BOOL)v4, @"lychees", @"v TEXT")
    && sub_10035CE40((BOOL)v4, 12090);

  return v5;
}

- (BOOL)_migrateFrom12090To12091:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"city_code INTEGER")
    && sub_10035CE40((BOOL)v4, 12091);

  return v5;
}

- (BOOL)_migrateFrom12091To12092:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"papaya", @"s INTEGER")
    && sub_10035CE40((BOOL)v4, 12092);

  return v5;
}

- (BOOL)_migrateFrom12092To12093:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"discovery_item", @"should_badge INTEGER")
    && sub_10035CE40((BOOL)v4, 12093);

  return v5;
}

- (BOOL)_migrateFrom12093To12094:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"bananas", @"l INTEGER")
    && sub_10035D008((BOOL)v4, @"bananas", @"m INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"u INTEGER")
    && sub_10035D008((BOOL)v4, @"pineapples", @"v INTEGER")
    && sub_10035CE40((BOOL)v4, 12094);

  return v5;
}

- (BOOL)_migrateFrom12094To12095:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_10035CE40((BOOL)a3, 12095);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom12095To12096:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"use_raw_merchant_data INTEGER")
    && sub_10035CE40((BOOL)v4, 12096);

  return v5;
}

- (BOOL)_migrateWhitneyFrom2To3:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"f TEXT")
    && sub_10035CE40((BOOL)v4, 12097);

  return v5;
}

- (BOOL)_migrateFrom12097To12098:(id)a3 context:(id)a4
{
  return sub_10035CE40((BOOL)a3, 12098);
}

- (BOOL)_migrateFrom12XXXTo13000:(id)a3 context:(id)a4
{
  return sub_10035CE40((BOOL)a3, 13000);
}

- (BOOL)_migrateFrom13000To13001:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"issue_report_identifier TEXT")
    && sub_10035CE40((BOOL)v4, 13001);

  return v5;
}

- (BOOL)_migrateFrom13001To13002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"suppress_notifications INTEGER")&& sub_10035CE40((BOOL)v4, 13002);

  return v5;
}

- (BOOL)_migrateFrom13002To13003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_setup_product_configurations (pid INTEGER, identifier TEXT, partner_identifier TEXT, type INTEGER, state INTEGER, feature_identifier INTEGER, dirty_state_identifier TEXT, last_updated_date INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 13003);

  return v5;
}

- (BOOL)_migrateFrom13003To13004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"passionfruits", @"h")
    && sub_10035D008((BOOL)v4, @"passionfruits", @"i INTEGER")
    && sub_10035D008((BOOL)v4, @"passionfruits", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"passionfruits", @"k INTEGER")
    && sub_10035CE40((BOOL)v4, 13004);

  return v5;
}

- (BOOL)_migrateWhitneyFrom3To4:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"g TEXT")
    && sub_10035CE40((BOOL)v4, 13005);

  return v5;
}

- (BOOL)_migrateFrom13005To13006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v7 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS missing_remote_assets (pid INTEGER, unique_id TEXT NOT NULL UNIQUE, download_retries_count INTEGER DEFAULT 0, PRIMARY KEY (pid, download_retries_count));")
    && ((sub_10035DB74(v4, @"notification_service"),
         BOOL v5 = objc_claimAutoreleasedReturnValue(),
         unsigned __int8 v6 = [v5 containsObject:@"registration_url"],
         v5,
         (v6 & 1) != 0)
     || sub_10035D008((BOOL)v4, @"notification_service", @"registration_url TEXT"))
    && sub_10035CE40((BOOL)v4, 13006);

  return v7;
}

- (BOOL)_migrateFrom13006To13007:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_10035CE40((BOOL)v6, 13007);
  if (v8)
  {
    objc_initWeak(&location, self);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1003F807C;
    v10[3] = &unk_100735E20;
    objc_copyWeak(&v11, &location);
    [v7 addPostMigrationOperation:v10];
    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }

  return v8;
}

- (BOOL)_migrateFrom13007To13008:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"nfc", @"requires_authentication INTEGER")
    && sub_10035CE40((BOOL)v4, 13008);

  return v5;
}

- (BOOL)_migrateFrom13008To13009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS kiwi (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS currant (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS raisin (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS gojiberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peanut (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f INTEGER, g INTEGER, i TEXT, j TEXT, k TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS acorn (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS squash (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 13009);

  return v5;
}

- (BOOL)_migrateFrom13009To13010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"plantains", @"n TEXT")
    && sub_10035D008((BOOL)v4, @"plantains", @"o TEXT")
    && sub_10035CE40((BOOL)v4, 13010);

  return v5;
}

- (BOOL)_migrateFrom13010To13011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"kiwi", @"l INTEGER")
    && sub_10035CE40((BOOL)v4, 13011);

  return v5;
}

- (BOOL)migratePalisadesFrom1To2:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"palisades", @"c TEXT")
    && sub_10035D008((BOOL)v4, @"palisades", @"d TEXT")
    && sub_10035D008((BOOL)v4, @"palisades", @"e BLOB")
    && sub_10035D008((BOOL)v4, @"palisades", @"f INT")
    && sub_10035D008((BOOL)v4, @"palisades", @"g INT")
    && sub_10035D008((BOOL)v4, @"shasta", @"e BLOB")
    && sub_10035D008((BOOL)v4, @"shasta", @"f INT")
    && sub_10035CE40((BOOL)v4, 13012);

  return v5;
}

- (BOOL)_addHumphreysTableMigration:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS humphreys (pid INTEGER, a NULLABLE INTEGER REFERENCES williamson(pid) ON DELETE CASCADE, b NULLABLE INTEGER REFERENCES shasta(pid) ON DELETE CASCADE, c INTEGER, d TEXT,e TEXT,PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 13013);

  return v5;
}

- (BOOL)_addKeithTableMigration:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS keith (pid INTEGER, a NULLABLE INTEGER REFERENCES whitney(pid) ON DELETE CASCADE, b NULLABLE INTEGER REFERENCES williamson(pid) ON DELETE CASCADE, c INTEGER, d INTEGER, e TEXT, f TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"whitney", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 13014);

  return v5;
}

- (BOOL)_migrateFrom13014To13015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"apples", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"currant", @"g INTEGER")
    && sub_10035CE40((BOOL)v4, 13015);

  return v5;
}

- (BOOL)_migrateFrom13015To13016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"strawberries", @"m INTEGER")
    && sub_10035CE40((BOOL)v4, 13016);

  return v5;
}

- (BOOL)_migrateFrom13016To13017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"humphreys", @"f BOOL")
    && sub_10035D008((BOOL)v4, @"humphreys", @"g INTEGER")
    && sub_10035D008((BOOL)v4, @"humphreys", @"h BLOB")
    && sub_10035D060((BOOL)v4, @"keith", @"b")
    && sub_10035D008((BOOL)v4, @"keith", @"g INTEGER")
    && sub_10035CE40((BOOL)v4, 13017);

  return v5;
}

- (BOOL)_migrateFrom13017To13018:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"fuzzy_matched INTEGER")
    && sub_10035CE40((BOOL)v4, 13018);

  return v5;
}

- (BOOL)_migrateFrom13018To13019:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"peanut", @"j")
    && sub_10035D060((BOOL)v4, @"peanut", @"k")
    && sub_10035D008((BOOL)v4, @"peanut", @"l BLOB")
    && sub_10035D008((BOOL)v4, @"peanut", @"m BLOB")
    && sub_10035CE40((BOOL)v4, 13019);

  return v5;
}

- (BOOL)_migrateFrom13019To13020:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DB74(v4, @"payment_transaction");
  BOOL v6 = ([v5 containsObject:@"fuzzy_mached"] & 1) == 0
    && sub_10035CE40((BOOL)v4, 13020);

  return v6;
}

- (BOOL)_migrateFrom13020To13021:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"oranges", @"s INTEGER")
    && sub_10035D008((BOOL)v4, @"oranges", @"t INTEGER")
    && sub_10035D008((BOOL)v4, @"oranges", @"u INTEGER")
    && sub_10035D008((BOOL)v4, @"currant", @"h TEXT")
    && sub_10035D008((BOOL)v4, @"currant", @"i INTEGER")
    && sub_10035D008((BOOL)v4, @"kiwi", @"m TEXT")
    && sub_10035D008((BOOL)v4, @"raisin", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 13021);

  return v5;
}

- (BOOL)_migrateFrom13021To13022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"strawberries", @"m")
    && sub_10035D008((BOOL)v4, @"strawberries", @"m TEXT")
    && sub_10035CE40((BOOL)v4, 13022);

  return v5;
}

- (BOOL)_migrateFrom13022To13023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"raisin", @"i INTEGER")
    && sub_10035D008((BOOL)v4, @"raisin", @"j INTEGER")
    && sub_10035CE40((BOOL)v4, 13023);

  return v5;
}

- (BOOL)_migrateFrom13023To13024:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS cloud_store_token (pid INTEGER, zone_name TEXT, token_data BLOB, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 13024))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F8A78;
    v9[3] = &unk_10072E1E8;
    id v10 = v5;
    [v6 addPostMigrationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom13024To13025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"discovery_item", @"priority INTEGER")
    && sub_10035CE40((BOOL)v4, 13025);

  return v5;
}

- (BOOL)_migrateFrom13025To13100:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tap_to_radar_prompt (pid INTEGER, reason TEXT, last_prompt_date INTEGER, prompt_count INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 13100);

  return v5;
}

- (BOOL)_migrateFrom13100To13101:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rainier (pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER,h TEXT, i TEXT, j INTEGER, k TEXT,PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 13101);

  return v5;
}

- (BOOL)_migrateFrom13101To13102:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS cloud_store_zone (pid INTEGER, zone_name TEXT, container_name TEXT, token_data BLOB, subscription_id TEXT, fetch_timestamp INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 13102))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F8DB0;
    v9[3] = &unk_10072E1E8;
    id v10 = v5;
    [v6 addPostMigrationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom13102To13103:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"associated_account_pid INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"identifier TEXT")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"role INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"alt_dsid TEXT")&& sub_10035CE40((BOOL)v4, 13103);

  return v5;
}

- (BOOL)_migrateFrom13103To13104:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rincon (pid INTEGER, a TEXT, b INTEGER, c INTEGER, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 13104);

  return v5;
}

- (BOOL)_migrateFrom13104To13105:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS transit_applet_state_balance (pid INTEGER, transit_applet_state_pid INTEGER REFERENCES transit_applet_state(pid) ON DELETE CASCADE, pass_pid INTEGER NOT NULL REFERENCES pass(pid) ON DELETE CASCADE, identifier TEXT, currency TEXT, exponent INTEGER, balance INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS payment_transaction_amount (pid INTEGER, payment_transaction_pid, currency TEXT, exponent INTEGER, amount INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 13105))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003F9A04;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom13105To13106:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"raisin", @"k INTEGER")
    && sub_10035CE40((BOOL)v4, 13106);

  return v5;
}

- (BOOL)_migrateFrom13106To13107:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS applet_state_dirty (pid INTEGER, payment_application_pid INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 13107);

  return v5;
}

- (BOOL)_migrateFrom13107To13108:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"cloud_store_zone_names TEXT")
    && sub_10035D008((BOOL)v4, @"pears", @"cloud_store_zone_names TEXT")
    && sub_10035CE40((BOOL)v4, 13108);

  return v5;
}

- (BOOL)_migrateFrom13108To13109:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transaction_receipt (pid INTEGER, unique_id TEXT, receipt_provider_identifier TEXT, receipt_identifier TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"receipt_provider_identifier TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"receipt_provider_url TEXT")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"receipt_identifier TEXT")&& sub_10035CE40((BOOL)v4, 13109);

  return v5;
}

- (BOOL)_migrateFrom13109To13110:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"b INTEGER")
    && sub_10035D008((BOOL)v4, @"pass", @"auxiliary_capability_registered INTEGER")
    && sub_10035CE40((BOOL)v4, 13110);

  return v5;
}

- (BOOL)_migrateFrom13110To13111:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"discovery_item", @"hardware_version_range BLOB")
    && sub_10035D008((BOOL)v4, @"papaya", @"t BLOB")
    && sub_10035CE40((BOOL)v4, 13111);

  return v5;
}

- (BOOL)_migrateFrom13111To13112:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS index_item (pid INTEGER, identifier TEXT, domain_identifier TEXT, type INTEGER, status INTEGER, last_modified_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, action_try_count INTEGER, searchable_item BLOB, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_identifier ON index_item (identifier);")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_domain_identifier ON index_item (domain_identifier);")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_status ON index_item (status);")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS index_fetched_metadata (type INTEGER, status INTEGER, PRIMARY KEY (type));")
    && sub_10035CE40((BOOL)v4, 13112);

  return v5;
}

- (BOOL)_migrateFrom13112To13113:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"i BLOB")
    && sub_10035D008((BOOL)v4, @"whitney", @"j TEXT")
    && sub_10035D008((BOOL)v4, @"humphreys", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"palisades", @"h TEXT")
    && sub_10035CE40((BOOL)v4, 13113);

  return v5;
}

- (BOOL)_migrateFrom13113To13114:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS commute_plan_reminder (pid INTEGER, pass_pid INTEGER, commute_plan_identifier TEXT, time_interval REAL, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 13114))
  {
    BOOL v7 = +[PKPassPreferencesManager sharedInstance];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_1003FA304;
    void v11[3] = &unk_10074F8B8;
    id v12 = v5;
    id v13 = v7;
    id v8 = v7;
    [v6 addDatabasePopulationOperation:v11];

    BOOL v9 = 1;
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

- (BOOL)_migrateFrom13114To13115:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS e_mei_shan (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d BLOB, e INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 13115);

  return v5;
}

- (BOOL)_migrateFrom13115To13116:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_account_additional_push_topics (pid INTEGER, peer_payment_account_pid INTEGER, preferences TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_preferences (pid INTEGER, peer_payment_account_pid INTEGER, requires_confirmation BOOL, can_receive_formal_payment_requests BOOL, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_preferences_restriction (pid INTEGER, peer_payment_preferences_pid INTEGER, account_identifier TEXT, restriction_type INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_preferences_notification (pid INTEGER, peer_payment_preferences_pid INTEGER, account_identifier TEXT, notification_type INTEGER, value BOOL, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 13116);

  return v5;
}

- (BOOL)_migrateFrom13116To13117:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS discovery_notification (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, rule_identifier TEXT, os_version_requirement_range BLOB, hardware_version_range BLOB, relevant_date_range_start_date INTEGER, relevant_date_range_end_date INTEGER, action_type INTEGER, title_key TEXT, message_key TEXT, action_title_key TEXT, action_info BLOB, scheduled_delivery_date INTEGER, delivered INTEGER,PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 13117);

  return v5;
}

- (BOOL)_migrateFrom13117To13118:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"palisades", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"palisades", @"j TEXT")
    && sub_10035CE40((BOOL)v4, 13118);

  return v5;
}

- (BOOL)_migrateFrom13118To13119:(id)a3 context:(id)a4
{
  return sub_10035CE40((BOOL)a3, 13119);
}

- (BOOL)_migrateFrom13119To13120:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"expiration_date", @"transit_applet_state_balance");

  if (v5) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = sub_10035D008((BOOL)v4, @"transit_applet_state_balance", @"expiration_date INTEGER");
  }
  BOOL v7 = sub_10035DD18(v4, @"last_refresh_sequence_number", @"transit_applet_state");

  if (v7)
  {
    if (!v6) {
      goto LABEL_11;
    }
LABEL_9:
    LOBYTE(v6) = sub_10035CE40((BOOL)v4, 13120);
    goto LABEL_11;
  }
  if (v6)
  {
    if (!sub_10035D008((BOOL)v4, @"transit_applet_state", @"last_refresh_sequence_number INTEGER"))
    {
      LOBYTE(v6) = 0;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
LABEL_11:

  return v6;
}

- (BOOL)_migrateFrom13120To13400:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"keith", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 13400);

  return v5;
}

- (BOOL)_migrateFrom13400To13401:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"supports_service_mode INTEGER")
    && sub_10035CE40((BOOL)v5, 13401))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003FA7C0;
    v9[3] = &unk_10072E1E8;
    id v10 = v5;
    [v6 addPostMigrationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom13401To13402:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035D008((BOOL)v5, @"whitney", @"k INTEGER")
    && sub_10035CE40((BOOL)v5, 13402);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1003FA9BC;
  v10[3] = &unk_10074F890;
  id v11 = v5;
  id v8 = v5;
  [v6 addDatabasePopulationOperation:v10];

  return v7;
}

- (BOOL)_migrateFrom13402To13403:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction_amount", @"label TEXT")
    && sub_10035CE40((BOOL)v4, 13403);

  return v5;
}

- (BOOL)_migrateFrom13403To13404:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"transit_applet_state", @"applet_state_dirty INTEGER")
    && sub_10035CE40((BOOL)v4, 13404);

  return v5;
}

- (BOOL)_migrateFrom13404To13405:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"top_left_background_title TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"top_right_background_title TEXT")
    && sub_10035CE40((BOOL)v4, 13405);

  return v5;
}

- (BOOL)_migrateFrom13405To13406:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_setup_product_configurations", @"notification_title TEXT")&& sub_10035D008((BOOL)v4, @"payment_setup_product_configurations", @"notification_message TEXT")&& sub_10035CE40((BOOL)v4, 13406);

  return v5;
}

- (BOOL)_migrateFrom13406To13500:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction_amount", @"preformatted_string TEXT")&& sub_10035CE40((BOOL)v4, 13500);

  return v5;
}

- (BOOL)_migrateFrom13500To13501:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_balance", @"preformatted_string TEXT")
    && sub_10035CE40((BOOL)v4, 13501);

  return v5;
}

- (BOOL)_preparePaymentTransactionAmountTableForOperations:(id)a3
{
  id v3 = a3;
  if (sub_10000C100((BOOL)v3, @"CREATE TABLE IF NOT EXISTS payment_transaction_amount_copy (pid INTEGER, payment_transaction_pid INTEGER, label TEXT, currency TEXT, exponent INTEGER, amount INTEGER, preformatted_string TEXT, PRIMARY KEY (pid));"))
  {
    id v4 = +[SQLiteMetaEntity anyInDatabase:v3 withType:@"table" name:@"payment_transaction_amount"];
    BOOL v5 = [v4 SQL];

    id v6 = +[SQLiteTable tableWithSQL:v5];
    BOOL v7 = v6;
    if (v6)
    {
      id v8 = [v6 columnNames];
      BOOL v9 = +[SQLiteTable SQLToInsertColumnNames:v8 fromTableNamed:@"payment_transaction_amount" intoTableNamed:@"payment_transaction_amount_copy"];
      BOOL v10 = sub_10000C100((BOOL)v3, v9)
         && sub_10035D8B4((BOOL)v3, @"payment_transaction_amount")
         && sub_10035D91C((BOOL)v3, @"payment_transaction_amount_copy", @"payment_transaction_amount");
    }
    else
    {
      BOOL v10 = 0;
    }
  }
  else
  {
    BOOL v10 = 0;
  }

  return v10;
}

- (BOOL)_migrateFrom13501To14000:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Starting _migrateFrom13501To14000", buf, 2u);
  }

  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Altering payment_transaction_amount to remove cascaded delete", buf, 2u);
  }

  [(PDDatabaseManager *)self _preparePaymentTransactionAmountTableForOperations:v6];
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Finished altering payment_transaction_amount", buf, 2u);
  }

  BOOL v9 = sub_10035DB74(v6, @"payment_transaction");
  BOOL v10 = sub_10035DB74(v6, @"payment_application");
  id v11 = sub_10035DB74(v6, @"pass");
  *(void *)buf = 0;
  long long v43 = buf;
  uint64_t v44 = 0x2020000000;
  BOOL v45 = 0;
  BOOL v45 = sub_10000C100((BOOL)v6, @"CREATE TABLE IF NOT EXISTS transaction_source (pid INTEGER, identifier  TEXT, type INTEGER, PRIMARY KEY (pid));");
  if (([v9 containsObject:@"source_pid"] & 1) == 0)
  {
    id v12 = v43;
    if (v43[24])
    {
      BOOL v13 = sub_10035D008((BOOL)v6, @"payment_transaction", @"source_pid INTEGER");
      id v12 = v43;
    }
    else
    {
      BOOL v13 = 0;
    }
    v12[24] = v13;
  }
  if (([v11 containsObject:@"transaction_source_pid"] & 1) == 0)
  {
    id v14 = v43;
    if (v43[24])
    {
      BOOL v15 = sub_10035D008((BOOL)v6, @"pass", @"transaction_source_pid INTEGER");
      id v14 = v43;
    }
    else
    {
      BOOL v15 = 0;
    }
    v14[24] = v15;
  }
  if (([v10 containsObject:@"transaction_source_pid"] & 1) == 0)
  {
    char v16 = v43;
    if (v43[24])
    {
      BOOL v17 = sub_10035D008((BOOL)v6, @"payment_application", @"transaction_source_pid INTEGER");
      char v16 = v43;
    }
    else
    {
      BOOL v17 = 0;
    }
    v16[24] = v17;
  }
  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472;
  v40[2] = sub_1003FB59C;
  v40[3] = &unk_10074F9D0;
  id v18 = v6;
  id v41 = v18;
  id v19 = objc_retainBlock(v40);
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 3221225472;
  v38[2] = sub_1003FB7E4;
  v38[3] = &unk_10074F9F8;
  id v20 = v18;
  id v39 = v20;
  id v21 = objc_retainBlock(v38);
  if (!v43[24]) {
    goto LABEL_29;
  }
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_1003FB9F4;
  v32[3] = &unk_10074FA20;
  id v22 = v20;
  id v33 = v22;
  id v35 = v21;
  id v23 = v19;
  id v36 = v23;
  id v34 = v9;
  id v37 = buf;
  sub_100012DC8((uint64_t)v22, @"SELECT pid, payment_application_pid, pass_pid FROM payment_transaction", v32);
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_1003FBF24;
  v29[3] = &unk_10074FA48;
  id v24 = v22;
  id v30 = v24;
  id v31 = v23;
  [v7 addDatabasePopulationOperation:v29];

  if (v43[24])
  {
    BOOL v25 = sub_10035CE40((BOOL)v24, 14000);
    v43[24] = v25;
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v26 = @"NO";
      if (v25) {
        CFStringRef v26 = @"YES";
      }
      *(_DWORD *)long long v46 = 138412290;
      CFStringRef v47 = v26;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Finished _migrateFrom13501To14000 with success %@", v46, 0xCu);
    }

    BOOL v27 = v43[24] != 0;
  }
  else
  {
LABEL_29:
    BOOL v27 = 0;
  }

  _Block_object_dispose(buf, 8);
  return v27;
}

- (BOOL)_migrateFrom14000To14001:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (sub_10035D008((BOOL)v6, @"payment_transaction", @"peer_payment_account_identifier TEXT")&& sub_10035D008((BOOL)v6, @"peer_payment_account", @"transaction_source_pid INTEGER")&& sub_10035CE40((BOOL)v6, 14001))
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    id v13[2] = sub_1003FC36C;
    v13[3] = &unk_10074A7A0;
    id v14 = v6;
    sub_100012DC8((uint64_t)v14, @"SELECT pid, associated_account_pid FROM peer_payment_account", v13);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_1003FC4CC;
    void v11[3] = &unk_10072E198;
    void v11[4] = self;
    id v12 = objc_alloc_init((Class)NSMutableDictionary);
    id v8 = v12;
    [v7 addPostMigrationOperation:v11];

    BOOL v9 = 1;
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

- (BOOL)_migrateFrom14001To14002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"c TEXT") && sub_10035CE40((BOOL)v4, 14002);

  return v5;
}

- (BOOL)_migrateFrom14002To14003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS world_region (pid INTEGER, parent_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, type INTEGER, latitude REAL, longitude REAL, latitude_region REAL, longitude_region REAL, radius REAL, identifier TEXT, muid INTEGER, result_provider_identifier INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS world_region_localized_content (pid INTEGER, world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, name TEXT, locale_identifier TEXT, status INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS world_region_mapping (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid), world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, match_try_count INTEGER, last_modified_date INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14003);

  return v5;
}

- (BOOL)_migrateFrom14003To14004:(id)a3 context:(id)a4
{
  id v4 = a3;
  LODWORD(v5) = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_database (pid INTEGER, container_name TEXT, scope INTEGER, subscription_id TEXT, PRIMARY KEY (pid));")
             && sub_10035D008((BOOL)v4, @"cloud_store_zone", @"container_database_pid INTEGER")&& sub_10035D008((BOOL)v4, @"cloud_store_zone", @"zone_owner TEXT");
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_1003FC980;
  v13[3] = &unk_10074FA70;
  id v6 = v4;
  id v14 = v6;
  id v7 = objc_retainBlock(v13);
  if (v5)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1003FCAEC;
    v10[3] = &unk_10074FA98;
    id v5 = v6;
    id v11 = v5;
    id v12 = v7;
    sub_100012DC8((uint64_t)v5, @"SELECT pid FROM cloud_store_zone", v10);
    BOOL v8 = sub_10035D060((BOOL)v5, @"cloud_store_zone", @"container_name");

    LOBYTE(v5) = v8 && sub_10035CE40((BOOL)v5, 14004);
  }

  return (char)v5;
}

- (BOOL)_migrateFrom14004To14005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_zone_share_participant (pid INTEGER, cloud_store_zone_pid INTEGER, participant_handle TEXT, lookup_info BLOB, invitation_token BLOB, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14005);

  return v5;
}

- (BOOL)_migrateFrom14005To14006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D5D0((BOOL)v4, @"peer_payment_preferences_notification", @"account_identifier", @"alt_dsid")&& sub_10035D5D0((BOOL)v4, @"peer_payment_preferences_restriction", @"account_identifier", @"alt_dsid")&& sub_10035CE40((BOOL)v4, 14006);

  return v5;
}

- (BOOL)_migrateFrom14006To14007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"index_fetched_metadata", @"version INTEGER")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS index_metadata (version INTEGER, PRIMARY KEY (version));")
    && sub_10035CE40((BOOL)v4, 14007);

  return v5;
}

- (BOOL)_migrateFrom14007To14008:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"rincon", @"d TEXT")
    && sub_10035D008((BOOL)v4, @"rincon", @"e TEXT")
    && sub_10035D008((BOOL)v4, @"rincon", @"f TEXT")
    && sub_10035CE40((BOOL)v4, 14008);

  return v5;
}

- (BOOL)_migrateFrom14008To14009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_account_invitation (pid INTEGER, peer_payment_account_pid INTEGER, alt_dsid TEXT, status INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14009);

  return v5;
}

- (BOOL)_migrateFrom14009To14010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS world_region_transaction ON world_region_mapping(payment_transaction_pid);")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS world_region_localized_content_name ON world_region_localized_content(name COLLATE NOCASE);")
    && sub_10035D008((BOOL)v4, @"world_region_mapping", @"last_error_domain TEXT")
    && sub_10035D008((BOOL)v4, @"world_region_mapping", @"last_error_code INTEGER")
    && sub_10035D008((BOOL)v4, @"world_region", @"latitude_delta REAL")
    && sub_10035D008((BOOL)v4, @"world_region", @"longitude_delta REAL")
    && sub_10035D008((BOOL)v4, @"world_region", @"abbreviation_code TEXT")
    && sub_10035D060((BOOL)v4, @"world_region", @"latitude_region")
    && sub_10035D060((BOOL)v4, @"world_region", @"longitude_region")
    && sub_10035D060((BOOL)v4, @"world_region", @"radius")
    && sub_10000C100((BOOL)v4, @"DELETE FROM world_region;")
    && sub_10000C100((BOOL)v4, @"DELETE FROM world_region_mapping;")
    && sub_10000C100((BOOL)v4, @"DELETE FROM world_region_localized_content;")
    && sub_10035CE40((BOOL)v4, 14010);

  return v5;
}

- (BOOL)_migrateFrom14010To14011:(id)a3 context:(id)a4
{
  id v5 = a3;
  [a4 addAutomaticSelectionCriteriaRegeneration];
  BOOL v6 = sub_10035D008((BOOL)v5, @"payment_automatic_selection_criterion", @"supports_in_session_express INTEGER")&& sub_10035CE40((BOOL)v5, 14011);

  return v6;
}

- (BOOL)_migrateFrom14011To14012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"state_reason INTEGER")
    && sub_10035CE40((BOOL)v4, 14012);

  return v5;
}

- (BOOL)_migrateFrom14012To14013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"barcode_identifier TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"payment_pin_format INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"requested_auth_mechanisms INTEGER")&& sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_authentication (pid INTEGER, processed_auth_mechanisms INTEGER, complete INTEGER, auth_data_payment_pin BLOB, auth_data_transaction_signature BLOB, auth_data_user_confirmation BLOB, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 14013);

  return v5;
}

- (BOOL)_migrateFrom14013To14014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"primary_funding_source_description TEXT")&& sub_10035CE40((BOOL)v4, 14014);

  return v5;
}

- (BOOL)_migrateFrom14014To14015:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (!sub_10035D8B4((BOOL)v4, @"world_region_mapping"))
  {
    sub_10000C100((BOOL)v4, @"DELETE FROM payment_transaction WHERE pid IN (SELECT pt.pid FROM payment_transaction pt LEFT JOIN transaction_source tr ON tr.pid = pt.source_pid WHERE tr.pid IS NULL);");
    goto LABEL_6;
  }
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS world_region_mapping (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, match_try_count INTEGER, last_modified_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, PRIMARY KEY (pid));");
  sub_10000C100((BOOL)v4, @"DELETE FROM payment_transaction WHERE pid IN (SELECT pt.pid FROM payment_transaction pt LEFT JOIN transaction_source tr ON tr.pid = pt.source_pid WHERE tr.pid IS NULL);");
  if (v5)
  {
    if (sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS world_region_transaction ON world_region_mapping(payment_transaction_pid);"))
    {
      LOBYTE(v5) = sub_10035CE40((BOOL)v4, 14015);
      goto LABEL_7;
    }
LABEL_6:
    LOBYTE(v5) = 0;
  }
LABEL_7:

  return v5;
}

- (BOOL)_migrateFrom14015To14016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"h", @"keith");
  BOOL v6 = (v5 || sub_10035D008((BOOL)v4, @"keith", @"h INTEGER"))
    && sub_10035CE40((BOOL)v4, 14016);

  return v6;
}

- (BOOL)_migrateFrom14016To14017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_tag (payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, tag INTEGER);")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_tag_index ON payment_transaction_tag(payment_transaction_pid);")
    && sub_10035CE40((BOOL)v4, 14017);

  return v5;
}

- (BOOL)_migrateFrom14017To14018:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_10035DD18(v5, @"supports_service_mode", @"payment_application");

  if (!v7)
  {
    if (!sub_10035D008((BOOL)v5, @"payment_application", @"supports_service_mode INTEGER"))
    {
      BOOL v8 = 0;
      goto LABEL_6;
    }
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1003FD3E4;
    v10[3] = &unk_10072E1E8;
    id v11 = v5;
    [v6 addPostMigrationOperation:v10];
  }
  BOOL v8 = sub_10035CE40((BOOL)v5, 14018);
LABEL_6:

  return v8;
}

- (BOOL)_migrateFrom14018To14019:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_10035DD18(v5, @"k", @"whitney");

  if (v7) {
    goto LABEL_3;
  }
  BOOL v8 = sub_10035D008((BOOL)v5, @"whitney", @"k INTEGER");
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1003FD600;
  v10[3] = &unk_10074F890;
  id v11 = v5;
  [v6 addDatabasePopulationOperation:v10];

  if (v8) {
LABEL_3:
  }
    LOBYTE(v8) = sub_10035CE40((BOOL)v5, 14019);

  return v8;
}

- (BOOL)_migrateFrom14019To14020:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"nominal_amount INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"has_additional_offers BOOL")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_amount_modifiers (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, modifier_type TEXT, modifier_description TEXT, modifier_order INTEGER, amount INTEGER, currency TEXT, exponent INTEGER, PRIMARY KEY(pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_awards (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, award_type TEXT, award_description TEXT, award_order INTEGER, relevant_account_name TEXT, amount INTEGER, currency TEXT, exponent INTEGER, PRIMARY KEY(pid));")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_authentication_index ON payment_transaction_authentication(payment_transaction_pid);")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_amount_modifiers_index ON payment_transaction_amount_modifiers(payment_transaction_pid);")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_awards_index ON payment_transaction_awards(payment_transaction_pid);")
    && sub_10035CE40((BOOL)v4, 14020);

  return v5;
}

- (BOOL)_migrateFrom14020To14021:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_group", @"internal_group_order BLOB")
    && sub_10035CE40((BOOL)v4, 14021);

  return v5;
}

- (BOOL)_migrateFrom14021To14022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"label", @"payment_transaction_amount");

  BOOL v6 = (v5 || sub_10035D008((BOOL)v4, @"payment_transaction_amount", @"label TEXT"))
    && sub_10035CE40((BOOL)v4, 14022);

  return v6;
}

- (BOOL)_migrateFrom14022To14023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"applet_state_dirty", @"transit_applet_state");

  BOOL v6 = (v5
     || sub_10035D008((BOOL)v4, @"transit_applet_state", @"applet_state_dirty INTEGER"))
    && sub_10035CE40((BOOL)v4, 14023);

  return v6;
}

- (BOOL)_migrateFrom14023To14024:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"top_left_background_title", @"pass");

  if (v5) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = sub_10035D008((BOOL)v4, @"pass", @"top_left_background_title TEXT");
  }
  id v7 = sub_10035DD18(v4, @"top_right_background_title", @"pass");

  if (v7)
  {
    if (!v6) {
      goto LABEL_11;
    }
LABEL_9:
    LOBYTE(v6) = sub_10035CE40((BOOL)v4, 14024);
    goto LABEL_11;
  }
  if (v6)
  {
    if (!sub_10035D008((BOOL)v4, @"pass", @"top_right_background_title TEXT"))
    {
      LOBYTE(v6) = 0;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
LABEL_11:

  return v6;
}

- (BOOL)_migrateFrom14024To14025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"person_to_person_restriction_type INTEGER")&& sub_10035CE40((BOOL)v4, 14025);

  return v5;
}

- (BOOL)_migrateFrom14025To14026:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"associated_account_last_updated_date INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"associated_account_proactive_fetch_period INTEGER")&& sub_10035CE40((BOOL)v4, 14026);

  return v5;
}

- (BOOL)_migrateFrom14026To14027:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_additional_push_topics", @"associated_accounts TEXT")&& sub_10035CE40((BOOL)v4, 14027);

  return v5;
}

- (BOOL)_migrateFrom14027To14028:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS barcode_fetch (pid INTEGER, next_background_fetch_date INTEGER, background_fetch_retry_level INTEGER, pass_pid INTEGER REFERENCES pass(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS next_background_fetch_date_index ON barcode_fetch(next_background_fetch_date);")
    && sub_10035CE40((BOOL)v4, 14028);

  return v5;
}

- (BOOL)_migrateFrom14028To14029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_associated_account_removal_record (pid INTEGER, peer_payment_account_pid INTEGER, alt_dsid TEXT, reason INTEGER, date INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14029);

  return v5;
}

- (BOOL)_migrateFrom14029To14030:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"notification_title", @"payment_setup_product_configurations");

  if (v5) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = sub_10035D008((BOOL)v4, @"payment_setup_product_configurations", @"notification_title TEXT");
  }
  id v7 = sub_10035DD18(v4, @"notification_message", @"payment_setup_product_configurations");

  if (v7)
  {
    if (!v6) {
      goto LABEL_11;
    }
LABEL_9:
    LOBYTE(v6) = sub_10035CE40((BOOL)v4, 14030);
    goto LABEL_11;
  }
  if (v6)
  {
    if (!sub_10035D008((BOOL)v4, @"payment_setup_product_configurations", @"notification_message TEXT"))
    {
      LOBYTE(v6) = 0;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
LABEL_11:

  return v6;
}

- (BOOL)_migrateFrom14030To14031:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D120((BOOL)v4, @"rincon", &off_10078C570, 0)
    && sub_10035D008((BOOL)v4, @"rincon", @"c TEXT")
    && sub_10035CE40((BOOL)v4, 14031);

  return v5;
}

- (BOOL)_migrateFrom14031To14032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"dpan_identifier TEXT")
    && sub_10035CE40((BOOL)v4, 14032);

  return v5;
}

- (BOOL)_migrateFrom14032To14033:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_transaction", @"eligible_eligible_rewards_percent_aggregate INTEGER")&& sub_10035D008((BOOL)v5, @"payment_transaction", @"eligible_rewards_cash_aggregate INTEGER")&& sub_10035CE40((BOOL)v5, 14033))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1003FE09C;
    v9[3] = &unk_10072E1E8;
    id v10 = v5;
    [v6 addPostMigrationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom14033To14034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_associated_account_removal_record", @"has_presented_notification INTEGER")&& sub_10035CE40((BOOL)v4, 14034);

  return v5;
}

- (BOOL)_migrateFrom14034To14035:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction_awards", @"award_identifier TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction_awards", @"award_subtype TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction_awards", @"localized_amount TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction_awards", @"has_deep_link BOOL")
    && sub_10035CE40((BOOL)v4, 14035);

  return v5;
}

- (BOOL)_migrateFrom14035To14036:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (!sub_10035D008((BOOL)v4, @"payment_transaction", @"feature INTEGER")) {
    goto LABEL_5;
  }
  if (!sub_10035D5D0((BOOL)v4, @"payment_transaction", @"b", @"account_identifier")) {
    goto LABEL_5;
  }
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_1003FE510;
  v9[3] = &unk_10074A7A0;
  id v5 = v4;
  id v10 = v5;
  sub_100012DC8((uint64_t)v5, @"SELECT pid, peer_payment_account_identifier from payment_transaction;", v9);
  BOOL v6 = sub_10035D060((BOOL)v5, @"payment_transaction", @"peer_payment_account_identifier");

  if (v6) {
    BOOL v7 = sub_10035CE40((BOOL)v5, 14036);
  }
  else {
LABEL_5:
  }
    BOOL v7 = 0;

  return v7;
}

- (BOOL)_migrateFrom14036To14037:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D5D0((BOOL)v4, @"payment_transaction", @"feature", @"account_type")
    && sub_10035CE40((BOOL)v4, 14037);

  return v5;
}

- (BOOL)_migrateFrom14037To14038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_application_barcode_service_metadata (pid INTEGER, payment_application_pid INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, evaluated_policy_domain_state BLOB, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 14038);

  return v5;
}

- (BOOL)_migrateFrom14038To14039:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"nonce BLOB")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"signing_key_material BLOB")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"partial_signature BLOB")
    && sub_10035CE40((BOOL)v4, 14039);

  return v5;
}

- (BOOL)_migrateFrom14039To14040:(id)a3 context:(id)a4
{
  id v5 = a3;
  [(PDDatabaseManager *)self _populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:v5];
  LOBYTE(self) = sub_10035CE40((BOOL)v5, 14040);

  return (char)self;
}

- (void)_populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:(id)a3
{
  id v4 = a3;
  id v5 = [(PDDatabaseManager *)self dbPeerPaymentAccount];
  BOOL v6 = [v5 associatedPassUniqueID];
  +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"SELECT transaction_source.identifier from payment_application, transaction_source, pass WHERE pass.unique_id = \"%@\" AND payment_application.pass_pid = pass.pid AND transaction_source.pid = payment_application.transaction_source_pid;",
  BOOL v7 = v6);

  uint64_t v19 = 0;
  id v20 = &v19;
  uint64_t v21 = 0x3032000000;
  id v22 = sub_100020D6C;
  id v23 = sub_1000211A8;
  id v24 = objc_alloc_init((Class)NSMutableSet);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_1003FEA6C;
  v18[3] = &unk_10073AE78;
  void v18[4] = &v19;
  sub_100012DC8((uint64_t)v4, v7, v18);
  BOOL v8 = [(id)v20[5] anyObject];
  BOOL v9 = [v5 identifier];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_1003FEAE4;
  v13[3] = &unk_10074FAC0;
  id v10 = v4;
  id v14 = v10;
  id v11 = v8;
  id v15 = v11;
  id v12 = v9;
  id v16 = v12;
  BOOL v17 = self;
  sub_100012DC8((uint64_t)v10, @"SELECT pid, account_identifier, account_type, source_pid from payment_transaction;",
    v13);

  _Block_object_dispose(&v19, 8);
}

- (BOOL)_migrateFrom14040To14041:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_10035DD18(v4, @"preformatted_string", @"payment_transaction_amount");

  BOOL v6 = (v5
     || sub_10035D008((BOOL)v4, @"payment_transaction_amount", @"preformatted_string TEXT"))&& sub_10035CE40((BOOL)v4, 14041);

  return v6;
}

- (BOOL)_migrateFrom14041To14042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"pass", @"top_left_background_title")
    && sub_10035D060((BOOL)v4, @"pass", @"top_right_background_title")
    && sub_10035CE40((BOOL)v4, 14042);

  return v5;
}

- (BOOL)_migrateFrom14042To14043:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"preformatted_string", @"payment_balance");

  BOOL v6 = (v5 || sub_10035D008((BOOL)v4, @"payment_balance", @"preformatted_string TEXT"))
    && sub_10035CE40((BOOL)v4, 14043);

  return v6;
}

- (BOOL)_migrateFrom14043To14044:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_provided_title TEXT")
    && sub_10035CE40((BOOL)v4, 14044);

  return v5;
}

- (BOOL)_migrateFrom14044To14045:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"currant", @"order_index INTEGER")
    && sub_10035CE40((BOOL)v4, 14045);

  return v5;
}

- (BOOL)_migrateFrom14045To14046:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pineapples", @"total_balance INTEGER")
    && sub_10035CE40((BOOL)v4, 14046);

  return v5;
}

- (BOOL)_migrateFrom14046To14047:(id)a3 context:(id)a4
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_1003FF178;
  v7[3] = &unk_10072E1E8;
  id v8 = a3;
  id v5 = v8;
  [a4 addPostMigrationOperation:v7];
  LOBYTE(a4) = sub_10035CE40((BOOL)v5, 14047);

  return (char)a4;
}

- (BOOL)_migrateFrom14047To14048:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"provisioning_credential_hash TEXT")
    && sub_10035CE40((BOOL)v4, 14048);

  return v5;
}

- (BOOL)_migrateFrom14048To14049:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"associated_account_next_possible_fetch_date INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"associated_account_backoff_level INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"account_next_possible_fetch_date INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"account_backoff_level INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"associated_account_state_dirty INTEGER")
    && sub_10035CE40((BOOL)v4, 14049);

  return v5;
}

- (BOOL)_migrateFrom14049To14050:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction_awards", @"claim_expiry_date INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction_awards", @"redeem_expiry_date INTEGER")&& sub_10035D008((BOOL)v4, @"payment_transaction_awards", @"claim_expired BOOL")&& sub_10035D008((BOOL)v4, @"payment_transaction_awards", @"redeem_expired BOOL")&& sub_10035CE40((BOOL)v4, 14050);

  return v5;
}

- (BOOL)_migrateFrom14050To14051:(id)a3 context:(id)a4
{
  id v5 = a3;
  [(PDDatabaseManager *)self _populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:v5];
  LOBYTE(self) = sub_10035CE40((BOOL)v5, 14051);

  return (char)self;
}

- (BOOL)_migrateFrom14051To14052:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"durian", @"m INTEGER DEFAULT 1")
    && sub_10035D008((BOOL)v4, @"durian", @"n TEXT")
    && sub_10035D008((BOOL)v4, @"durian", @"o TEXT")
    && sub_10035CE40((BOOL)v4, 14052);

  return v5;
}

- (BOOL)_migrateFrom14052To14053:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"transaction_source_pid", @"pass");

  BOOL v6 = (v5 || sub_10035D008((BOOL)v4, @"pass", @"transaction_source_pid INTEGER"))
    && sub_10035CE40((BOOL)v4, 14053);

  return v6;
}

- (BOOL)_migrateFrom14053To14054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"os_version_requirement_range BLOB")&& sub_10035CE40((BOOL)v4, 14054);

  return v5;
}

- (BOOL)_migrateFrom14054To14055:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"is_coarse_location INTEGER")
    && sub_10035CE40((BOOL)v4, 14055);

  return v5;
}

- (BOOL)_migrateFrom14055To14056:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pears", @"k TEXT")
    && sub_10035CE40((BOOL)v4, 14056);

  return v5;
}

- (BOOL)_migrateFrom14056To14057:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"rule", @"os_version_requirement_range BLOB")
    && sub_10035CE40((BOOL)v4, 14057);

  return v5;
}

- (BOOL)_migrateFrom14057To14058:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"displayed_associated_account_active_notification INTEGER")&& sub_10000C100((BOOL)v4, @"UPDATE peer_payment_account SET displayed_associated_account_active_notification = 1 WHERE associated_account_pid IS NOT NULL")&& sub_10035CE40((BOOL)v4, 14058);

  return v5;
}

- (BOOL)_migrateFrom14058To14059:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_invitation", @"registration_result INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account_invitation", @"remote_registration_request_level INTEGER")&& sub_10035CE40((BOOL)v4, 14059);

  return v5;
}

- (BOOL)_migrateFrom14059To14060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS gooseberry (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"plum", @"e TEXT")
    && sub_10035D008((BOOL)v4, @"pears", @"l INTEGER")
    && sub_10035D008((BOOL)v4, @"pears", @"m TEXT")
    && sub_10035CE40((BOOL)v4, 14060);

  return v5;
}

- (BOOL)_migrateFrom14060To14061:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"lychees", @"cancellable BOOL")
    && sub_10035D008((BOOL)v4, @"lychees", @"cancellation_expiry_date INTEGER")
    && sub_10035CE40((BOOL)v4, 14061);

  return v5;
}

- (BOOL)_migrateFrom14061To14062:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peanuts (pid INTEGER, account_pid INTEGER, last_updated_date INTEGER, dirty INTEGER, PRIMARY KEY(pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS almonds (pid INTEGER, peanuts_pid INTEGER, zone_name TEXT, account_identifier TEXT, account_type INTEGER, access INTEGER, mode INTEGER, a TEXT, b TEXT, PRIMARY KEY(pid));")
    && sub_10035D008((BOOL)v4, @"plum", @"f TEXT")
    && sub_10035CE40((BOOL)v4, 14062);

  return v5;
}

- (BOOL)_migrateFrom14062To14063:(id)a3 context:(id)a4
{
  id v5 = a3;
  if ([(PDDatabaseManager *)self _preparePaymentTransactionAmountTableForOperations:v5])
  {
    BOOL v6 = sub_10035CE40((BOOL)v5, 14063);
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

- (BOOL)_migrateFrom14063To14064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"strawberries", @"n INTEGER")
    && sub_10035D008((BOOL)v4, @"strawberries", @"o INTEGER")
    && sub_10035D008((BOOL)v4, @"pears", @"n TEXT")
    && sub_10035D008((BOOL)v4, @"durian", @"p TEXT")
    && sub_10035CE40((BOOL)v4, 14064);

  return v5;
}

- (BOOL)_migrateFrom14064To14065:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"gooseberry", @"transaction_source_pid INTEGER")
    && sub_10035CE40((BOOL)v4, 14065);

  return v5;
}

- (BOOL)_migrateFrom14065To14066:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"grapes", @"alt_dsid TEXT")
    && sub_10035CE40((BOOL)v4, 14066);

  return v5;
}

- (BOOL)_migrateFrom14066To14067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"gooseberry", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"gooseberry", @"j TEXT")
    && sub_10035CE40((BOOL)v4, 14067);

  return v5;
}

- (BOOL)_migrateFrom14067To14068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"durian", @"q TEXT")
    && sub_10035D008((BOOL)v4, @"plum", @"g TEXT")
    && sub_10035CE40((BOOL)v4, 14068);

  return v5;
}

- (BOOL)_migrateFrom14068To14069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction_authentication", @"data_collected_auth_mechanisms INTEGER")&& sub_10035CE40((BOOL)v4, 14069);

  return v5;
}

- (BOOL)_migrateFrom14069To14070:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"maps_merchant", @"last_processed_date INTEGER")
    && sub_10035D008((BOOL)v4, @"plantains", @"last_processed_date INTEGER")
    && sub_10035CE40((BOOL)v4, 14070);

  return v5;
}

- (BOOL)_migrateFrom14070To14400:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = PKLogFacilityTypeGetObject();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Starting _migrateFrom14069To14400...", buf, 2u);
  }

  *(void *)buf = 0;
  uint64_t v19 = buf;
  uint64_t v20 = 0x2020000000;
  BOOL v21 = 0;
  BOOL v9 = sub_10000C100((BOOL)v6, @"CREATE TABLE IF NOT EXISTS payment_transaction_archive (pid INTEGER, payment_transaction_pid INTEGER, PRIMARY KEY(pid));");
  BOOL v10 = 0;
  if (v9) {
    BOOL v10 = sub_10000C100((BOOL)v6, @"CREATE TABLE IF NOT EXISTS payment_transaction_archive_location (pid INTEGER, archive_pid INTEGER, type INTEGER, cloud_store_zone_pid INTEGER, archived INTEGER, PRIMARY KEY(pid));");
  }
  BOOL v21 = v10;
  if (!v19[24]) {
    goto LABEL_9;
  }
  BOOL v11 = sub_10035D008((BOOL)v6, @"payment_transaction", @"archive_pid INTEGER");
  v19[24] = v11;
  if (!v11) {
    goto LABEL_9;
  }
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_1003FFFF4;
  void v15[3] = &unk_10073AE50;
  void v15[4] = self;
  id v12 = v6;
  id v16 = v12;
  BOOL v17 = buf;
  sub_100012DC8((uint64_t)v12, @"SELECT pid FROM payment_transaction", v15);

  if (v19[24])
  {
    BOOL v13 = sub_10035CE40((BOOL)v12, 14400);
    v19[24] = v13;
  }
  else
  {
LABEL_9:
    BOOL v13 = 0;
  }
  _Block_object_dispose(buf, 8);

  return v13;
}

- (BOOL)_migrateFrom14400To14401:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS prickly_pear (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14401);

  return v5;
}

- (BOOL)_migrateFrom14401To14402:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"blackberries", @"k TEXT")
    && sub_10035CE40((BOOL)v4, 14402);

  return v5;
}

- (BOOL)_migrateFrom14402To14403:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_fetch_periods (pid INTEGER, account_pid INTEGER, account_fetch_period INTEGER, extended_account_fetch_period INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14403);

  return v5;
}

- (BOOL)_migrateFrom14403To14404:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_endpoint_backoff (pid INTEGER, account_pid INTEGER, account_type INTEGER, endpoint_type INTEGER, backoff_level INTEGER, next_fetch INTEGER, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 14404);

  return v5;
}

- (BOOL)_migrateFrom14404To14405:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS breadfruit (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 14405);

  return v5;
}

- (BOOL)_migrateFrom14405To14406:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"durian", @"r INTEGER")
    && sub_10035CE40((BOOL)v4, 14406);

  return v5;
}

- (BOOL)_migrateFrom14406To14407:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 1;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100400D20;
  v10[3] = &unk_100732630;
  id v7 = v5;
  id v11 = v7;
  id v12 = &v13;
  sub_100012DC8((uint64_t)v7, @"SELECT pid, associated_account_next_possible_fetch_date, associated_account_backoff_level, account_next_possible_fetch_date, account_backoff_level from peer_payment_account;",
    v10);
  char v8 = *((unsigned char *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom14407To14408:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"prickly_pear", @"f INTEGER")
    && sub_10035CE40((BOOL)v4, 14408);

  return v5;
}

- (BOOL)_migrateFrom14408To14409:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"account_fetch_periods", @"c INTEGER")
    && sub_10035D008((BOOL)v4, @"plum", @"pu TEXT")
    && sub_10035CE40((BOOL)v4, 14409);

  return v5;
}

- (BOOL)_migrateFrom14409To14410:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"c INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_application", @"d TEXT")
    && sub_10035D008((BOOL)v4, @"payment_application", @"e TEXT")
    && sub_10035CE40((BOOL)v4, 14410);

  return v5;
}

- (BOOL)_migrateFrom14410To14411:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"auxiliary_payment_type INTEGER")&& sub_10035CE40((BOOL)v5, 14411))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom14411To14412:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"DROP INDEX payment_transaction_tag_index")
    && sub_10000C100((BOOL)v4, @"DROP TABLE payment_transaction_tag")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_transaction_tag (pid INTEGER, payment_transaction_pid INTEGER, type INTEGER, localized_title TEXT, locale_identifier TEXT, rank INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_tag_index ON payment_transaction_tag(payment_transaction_pid);")
    && sub_10035CE40((BOOL)v4, 14412);

  return v5;
}

- (BOOL)_migrateFrom14412To14413:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS persimmon (pid INTEGER, account_pid INTEGER, last_updated_date INTEGER, created_date INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cucamelon (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS lucuma (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS atemoya (pid INTEGER, a INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, terms_url TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14413);

  return v5;
}

- (BOOL)_migrateFrom14413To14414:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS huckleberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14414);

  return v5;
}

- (BOOL)_migrateFrom14414To14415:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"f INTEGER")
    && sub_10035CE40((BOOL)v5, 14415))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom14415To14416:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS marionberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, n INTEGER, o INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS boysenberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, m TEXT, n TEXT, o INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS loganberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14416);

  return v5;
}

- (BOOL)_migrateFrom14416To14417:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"durian", @"n")
    && sub_10035D060((BOOL)v4, @"durian", @"q")
    && sub_10035D060((BOOL)v4, @"durian", @"r")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS chestnut (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 14417);

  return v5;
}

- (BOOL)_migrateFrom14417To14418:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"strawberries", @"os_version_requirement_range BLOB")
    && sub_10035CE40((BOOL)v4, 14418);

  return v5;
}

- (BOOL)_migrateFrom14418To14419:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"fig", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 14419);

  return v5;
}

- (BOOL)_migrateFrom14419To14420:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"strawberries", @"p INTEGER")
    && sub_10035D008((BOOL)v4, @"strawberries", @"q INTEGER")
    && sub_10035CE40((BOOL)v4, 14420);

  return v5;
}

- (BOOL)_migrateFrom14420To14421:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"durian", @"feature_product INTEGER")
    && sub_10035CE40((BOOL)v4, 14421);

  return v5;
}

- (BOOL)_migrateFrom14421To14422:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"created_date INTEGER")
    && sub_10035CE40((BOOL)v4, 14422);

  return v5;
}

- (BOOL)_migrateFrom14422To14423:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"identified_date INTEGER")
    && sub_10035CE40((BOOL)v4, 14423);

  return v5;
}

- (BOOL)_migrateFrom14423To14424:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_application_merchant_support (pid INTEGER, payment_application_pid INTEGER NOT NULL, merchant_country_code TEXT, supported INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14424);

  return v5;
}

- (BOOL)_migrateFrom14424To14425:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"prickly_pear", @"g INTEGER")
    && sub_10035CE40((BOOL)v4, 14425);

  return v5;
}

- (BOOL)_migrateFrom14425To14426:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"d TEXT") && sub_10035CE40((BOOL)v4, 14426);

  return v5;
}

- (BOOL)_migrateFrom14426To14427:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"g INTEGER")
    && sub_10035CE40((BOOL)v4, 14427);

  return v5;
}

- (BOOL)_migrateFrom14427To14428:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS jostaberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pineberry (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h TEXT, i TEXT, j INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14428);

  return v5;
}

- (BOOL)_migrateFrom14428To14429:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS honey (pid INTEGER, a INTEGER, PRIMARY KEY(pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS water (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 14429);

  return v5;
}

- (BOOL)_migrateFrom14429To14430:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"plum", @"physical_cards TEXT")
    && sub_10035CE40((BOOL)v4, 14430);

  return v5;
}

- (BOOL)_migrateFrom14430To14431:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"sorting_state INTEGER")
    && sub_10035CE40((BOOL)v4, 14431);

  return v5;
}

- (BOOL)_migrateFrom14431To14432:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS mulberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14432);

  return v5;
}

- (BOOL)_migrateFrom14432To14433:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"chestnut", @"g TEXT")
    && sub_10035D008((BOOL)v4, @"chestnut", @"h TEXT")
    && sub_10035CE40((BOOL)v4, 14433);

  return v5;
}

- (BOOL)_migrateFrom14433To14434:(id)a3 context:(id)a4
{
  return sub_10035CE40((BOOL)a3, 14434);
}

- (BOOL)_migrateFrom14434To14435:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D978(v4);
  unsigned int v6 = [v5 containsObject:@"pass_annotations"];

  if (v6) {
    sub_10035D91C((BOOL)v4, @"pass_annotations", @"cherries");
  }
  else {
    sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cherries (a INTEGER, b INTEGER, PRIMARY KEY (a));");
  }
  BOOL v7 = sub_10035D060((BOOL)v4, @"pass", @"sorting_state") && sub_10035CE40((BOOL)v4, 14435);

  return v7;
}

- (BOOL)_migrateFrom14435To14436:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS ice_cream_banana (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS carambola (pid INTEGER, a INTEGER NOT NULL, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER NOT NULL, g INTEGER NOT NULL, h INTEGER NOT NULL, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14436);

  return v5;
}

- (BOOL)_migrateFrom14436To14437:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035D978(v5);
  unsigned int v8 = [v7 containsObject:@"cherries"];

  if (v8)
  {
    if (!sub_10035D8B4((BOOL)v5, @"cherries")
      || !sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS pass_annotations (pass_pid INTEGER, sorting_state INTEGER, archived_timestamp INTEGER, PRIMARY KEY (pass_pid));")
      || !sub_10035CE40((BOOL)v5, 14437))
    {
LABEL_9:
      BOOL v9 = 0;
      goto LABEL_10;
    }
  }
  else if (!sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS pass_annotations (pass_pid INTEGER, sorting_state INTEGER, archived_timestamp INTEGER, PRIMARY KEY (pass_pid));") {
         || !sub_10035CE40((BOOL)v5, 14437))
  }
  {
    goto LABEL_9;
  }
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100401C98;
  void v11[3] = &unk_10074F890;
  id v12 = v5;
  [v6 addDatabasePopulationOperation:v11];

  BOOL v9 = 1;
LABEL_10:

  return v9;
}

- (BOOL)_migrateFrom14437To14438:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"raspberries", @"n TEXT")
    && sub_10035D008((BOOL)v4, @"raspberries", @"o INTEGER")
    && sub_10035CE40((BOOL)v4, 14438);

  return v5;
}

- (BOOL)_migrateFrom14438To14439:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035DD18(v5, @"l", @"whitney");

  if (v7) {
    goto LABEL_3;
  }
  BOOL v8 = sub_10035D008((BOOL)v5, @"whitney", @"l INTEGER");
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100402064;
  v10[3] = &unk_10074F890;
  id v11 = v5;
  [v6 addDatabasePopulationOperation:v10];

  if (v8) {
LABEL_3:
  }
    LOBYTE(v8) = sub_10035CE40((BOOL)v5, 14439);

  return v8;
}

- (BOOL)_migrateFrom14439To14440:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"blackberries", @"activation_code_hash TEXT")
    && sub_10035CE40((BOOL)v4, 14440);

  return v5;
}

- (BOOL)_migrateFrom14440To14441:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"f", @"whitney");

  BOOL v6 = (v5 || sub_10035D008((BOOL)v4, @"whitney", @"f TEXT"))
    && sub_10035CE40((BOOL)v4, 14441);

  return v6;
}

- (BOOL)_migrateFrom14441To14442:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"kiwi", @"n TEXT") && sub_10035CE40((BOOL)v4, 14442);

  return v5;
}

- (BOOL)_migrateFrom14442To14443:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"zm TEXT")
    && sub_10035CE40((BOOL)v4, 14443);

  return v5;
}

- (BOOL)_migrateFrom14443To14444:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"clementines", @"o INTEGER")
    && sub_10035CE40((BOOL)v4, 14444);

  return v5;
}

- (BOOL)_migrateFrom14444To14445:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_pending_family_member (pid INTEGER, account_pid INTEGER, invite_email TEXT, invite_date INTEGER, displayed_notification INTEGER, alt_dsid TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14445);

  return v5;
}

- (BOOL)_migrateFrom14445To14446:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"gooseberry", @"k INTEGER")
    && sub_10035CE40((BOOL)v4, 14446);

  return v5;
}

- (BOOL)_migrateFrom14446To14447:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"e TEXT") && sub_10035CE40((BOOL)v4, 14447);

  return v5;
}

- (BOOL)_migrateFrom14447To14448:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"plum", @"servicing_token TEXT")
    && sub_10035CE40((BOOL)v4, 14448);

  return v5;
}

- (BOOL)_migrateFrom14448To14449:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"mulberry", @"d INTEGER")
    && sub_10035CE40((BOOL)v4, 14449);

  return v5;
}

- (BOOL)_migrateFrom14449To14450:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"h INTEGER DEFAULT 1")
    && sub_10035CE40((BOOL)v4, 14450);

  return v5;
}

- (BOOL)_migrateFrom14450To14451:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"mute_ready_for_use_notification INTEGER DEFAULT 0")&& sub_10035CE40((BOOL)v4, 14451);

  return v5;
}

- (BOOL)_migrateFrom14451To14452:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"m TEXT")
    && sub_10035CE40((BOOL)v4, 14452);

  return v5;
}

- (BOOL)_migrateFrom14452To14453:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"raspberries", @"p INTEGER")
    && sub_10035CE40((BOOL)v4, 14453);

  return v5;
}

- (BOOL)_migrateFrom14453To14454:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"discovery_item", @"entitled_to_force_large_card INTEGER")&& sub_10035CE40((BOOL)v4, 14454);

  return v5;
}

- (BOOL)_migrateFrom14454To14455:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS change_history_event (pid INTEGER, identifier TEXT, type INTEGER, record_type INTEGER, record_uniqueID TEXT, timestamp INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14455);

  return v5;
}

- (BOOL)_migrateFrom14455To14456:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"rincon", @"e INTEGER DEFAULT 1")
    && sub_10035CE40((BOOL)v4, 14456);

  return v5;
}

- (BOOL)_migrateFrom14456To14457:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D5D0((BOOL)v4, @"persimmon", @"account_pid", @"a")
    && sub_10035D5D0((BOOL)v4, @"persimmon", @"last_updated_date", @"b")
    && sub_10035D5D0((BOOL)v4, @"persimmon", @"created_date", @"c")
    && sub_10035D008((BOOL)v4, @"persimmon", @"d INTEGER")
    && sub_10035D008((BOOL)v4, @"persimmon", @"e TEXT")
    && sub_10035D008((BOOL)v4, @"persimmon", @"f INTEGER")
    && sub_10035D008((BOOL)v4, @"persimmon", @"g TEXT")
    && sub_10035D008((BOOL)v4, @"persimmon", @"h INTEGER")
    && sub_10035D008((BOOL)v4, @"persimmon", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"persimmon", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"persimmon", @"k INTEGER")
    && sub_10035D008((BOOL)v4, @"persimmon", @"l TEXT")
    && sub_10035CE40((BOOL)v4, 14457);

  return v5;
}

- (BOOL)_migrateFrom14457To14458:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cucamelon", @"f TEXT")
    && sub_10035CE40((BOOL)v4, 14458);

  return v5;
}

- (BOOL)_migrateFrom14458To14459:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D8B4((BOOL)v4, @"lucuma")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS lucuma (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g TEXT, h INTEGER, i TEXT, j INTEGER, k TEXT, l INTEGER, m TEXT, n INTEGER, o TEXT, p INTEGER, q TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14459);

  return v5;
}

- (BOOL)_migrateFrom14459To14460:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"breadfruit", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 14460);

  return v5;
}

- (BOOL)_migrateFrom14460To14461:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS salmonberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14461);

  return v5;
}

- (int64_t)_migrationAmountDecimalDigitsVersion:(id)a3
{
  id v3 = a3;
  id v4 = sub_10035D978(v3);
  BOOL v5 = +[NSSet setWithArray:v4];

  if ([v5 containsObject:@"apricots"])
  {
    uint64_t v9 = 0;
    BOOL v10 = &v9;
    uint64_t v11 = 0x2020000000;
    uint64_t v12 = 0;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100402ED0;
    v8[3] = &unk_10073AE78;
    void v8[4] = &v9;
    sub_100012DC8((uint64_t)v3, @"SELECT COALESCE(MAX(a),0) from apricots;", v8);
    int64_t v6 = v10[3];
    _Block_object_dispose(&v9, 8);
  }
  else
  {
    int64_t v6 = 0;
  }

  return v6;
}

- (BOOL)_migrateAmountDecimalDigitsToVersion:(int64_t)a3 inDatabase:(id)a4
{
  id v5 = a4;
  int64_t v6 = sub_10035D978(v5);
  BOOL v7 = +[NSSet setWithArray:v6];

  BOOL v8 = ([v7 containsObject:@"apricots"] & 1) != 0
    || sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS apricots (a INTEGER); ");
  uint64_t v9 = +[NSString stringWithFormat:@"INSERT INTO apricots VALUES (%ld)", a3];
  if (v8) {
    LOBYTE(v8) = sub_10000C100((BOOL)v5, v9);
  }

  return v8;
}

- (BOOL)_migrateTableFrom2To4DecimalDigitsPrecision:(id)a3
{
  id v3 = a3;
  id v4 = sub_10035D978(v3);
  id v5 = +[NSSet setWithArray:v4];

  if ([v5 containsObject:@"apples"]
    && !sub_10000C100((BOOL)v3, @"UPDATE apples SET e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END ")|| [v5 containsObject:@"avocados"]&& !sub_10000C100((BOOL)v3, @"UPDATE avocados SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END ")|| objc_msgSend(v5, "containsObject:", @"bananas")&& !sub_10000C100((BOOL)v3, @"UPDATE bananas SET d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END, k = CASE WHEN k == 9223372036854775807 THEN k ELSE k * 100 END, l = CASE WHEN l == 9223372036854775807 THEN l ELSE l * 100 END, m = CASE WHEN m == 9223372036854775807 THEN m ELSE m * 100 END ")|| objc_msgSend(v5, "containsObject:", @"breadfruit")&& !sub_10000C100((BOOL)v3, @"UPDATE breadfruit SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END ")|| objc_msgSend(v5, "containsObject:", @"coconuts")&& !sub_10000C100((BOOL)v3, @"UPDATE coconuts SET b = CASE WHEN b == 9223372036854775807 THEN b ELSE b * 100 END, c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END ")|| objc_msgSend(v5, "containsObject:", @"credit_account_merge_summary")
    && !sub_10000C100((BOOL)v3, @"UPDATE credit_account_merge_summary SET total_balance = CASE WHEN total_balance == 9223372036854775807 THEN total_balance ELSE total_balance * 100 END ")|| [v5 containsObject:@"credit_account_merge_summary_account_details"]&& !sub_10000C100((BOOL)v3, @"UPDATE credit_account_merge_summary_account_details SET current_balance = CASE WHEN current_balance == 9223372036854775807 THEN current_balance ELSE current_balance * 100 END, statement_balance = CASE WHEN statement_balance == 9223372036854775807 THEN statement_balance ELSE statement_balance * 100 END ")|| objc_msgSend(v5, "containsObject:", @"currant")&& !sub_10000C100((BOOL)v3, @"UPDATE currant SET d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END ")|| objc_msgSend(v5, "containsObject:", @"fig")&& !sub_10000C100((BOOL)v3, @"UPDATE fig SET h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END ")|| objc_msgSend(v5, "containsObject:", @"gojiberry")&& !sub_10000C100((BOOL)v3, @"UPDATE gojiberry SET f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END ")|| objc_msgSend(v5, "containsObject:", @"ice_cream_banana")
    && !sub_10000C100((BOOL)v3, @"UPDATE ice_cream_banana SET e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END ")|| [v5 containsObject:@"jostaberry"]&& !sub_10000C100((BOOL)v3, @"UPDATE jostaberry SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END ")|| objc_msgSend(v5, "containsObject:", @"kiwi")&& !sub_10000C100((BOOL)v3, @"UPDATE kiwi SET h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END ")|| objc_msgSend(v5, "containsObject:", @"lucuma")&& !sub_10000C100((BOOL)v3, @"UPDATE lucuma SET f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END, l = CASE WHEN l == 9223372036854775807 THEN l ELSE l * 100 END, n = CASE WHEN n == 9223372036854775807 THEN n ELSE n * 100 END, p = CASE WHEN p == 9223372036854775807 THEN p ELSE p * 100 END ")|| objc_msgSend(v5, "containsObject:", @"lychees")&& !sub_10000C100((BOOL)v3, @"UPDATE lychees SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END ")|| objc_msgSend(v5, "containsObject:", @"marionberry")
    && !sub_10000C100((BOOL)v3, @"UPDATE marionberry SET g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END ")|| [v5 containsObject:@"mulberry"]&& !sub_10000C100((BOOL)v3, @"UPDATE mulberry SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END ")|| objc_msgSend(v5, "containsObject:", @"oranges")&& !sub_10000C100((BOOL)v3, @"UPDATE oranges SET b = CASE WHEN b == 9223372036854775807 THEN b ELSE b * 100 END, c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END, k = CASE WHEN k == 9223372036854775807 THEN k ELSE k * 100 END, m = CASE WHEN m == 9223372036854775807 THEN m ELSE m * 100 END, p = CASE WHEN p == 9223372036854775807 THEN p ELSE p * 100 END, r = CASE WHEN r == 9223372036854775807 THEN r ELSE r * 100 END, s = CASE WHEN s == 9223372036854775807 THEN s ELSE s * 100 END, t = CASE WHEN t == 9223372036854775807 THEN t ELSE t * 100 END, u = CASE WHEN u == 9223372036854775807 THEN u ELSE u * 100 END ")|| objc_msgSend(v5, "containsObject:", @"payment_application")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_application SET in_app_pin_required_amount = CASE WHEN in_app_pin_required_amount == 9223372036854775807 THEN in_app_pin_required_amount ELSE in_app_pin_required_amount * 100 END ")|| objc_msgSend(v5, "containsObject:", @"payment_balance")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_balance SET value = CASE WHEN value == 9223372036854775807 THEN value ELSE value * 100 END WHERE currency_code <> 'XXX'")|| objc_msgSend(v5, "containsObject:", @"payment_transaction")
    && !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END, c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, eligible_eligible_rewards_percent_aggregate = CASE WHEN eligible_eligible_rewards_percent_aggregate == 9223372036854775807 THEN eligible_eligible_rewards_percent_aggregate ELSE eligible_eligible_rewards_percent_aggregate * 100 END, eligible_rewards_cash_aggregate = CASE WHEN eligible_rewards_cash_aggregate == 9223372036854775807 THEN eligible_rewards_cash_aggregate ELSE eligible_rewards_cash_aggregate * 100 END, foreign_exchange_information_destination_amount = CASE WHEN foreign_exchange_information_destination_amount == 9223372036854775807 THEN foreign_exchange_information_destination_amount ELSE foreign_exchange_information_destination_amount * 100 END, nominal_amount = CASE WHEN nominal_amount == 9223372036854775807 THEN nominal_amount ELSE nominal_amount * 100 END, primary_funding_source_amount = CASE WHEN primary_funding_source_amount == 9223372036854775807 THEN primary_funding_source_amount ELSE primary_funding_source_amount * 100 END, secondary_funding_source_amount = CASE WHEN secondary_funding_source_amount == 9223372036854775807 THEN secondary_funding_source_amount ELSE secondary_funding_source_amount * 100 END, subtotal_amount = CASE WHEN subtotal_amount == 9223372036854775807 THEN subtotal_amount ELSE subtotal_amount * 100 END ")|| [v5 containsObject:@"payment_transaction_amount"]&& !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_amount SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END WHERE currency <> 'XXX' OR currency IS NULL")|| objc_msgSend(v5, "containsObject:", @"payment_transaction_amount_modifiers")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_amount_modifiers SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END WHERE currency <> 'XXX' OR currency IS NULL")|| objc_msgSend(v5, "containsObject:", @"payment_transaction_awards")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_awards SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END WHERE currency <> 'XXX' OR currency IS NULL")|| objc_msgSend(v5, "containsObject:", @"payment_transaction_fee")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_fee SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END ")|| objc_msgSend(v5, "containsObject:", @"payment_transaction_tag")
    && !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_tag SET rank = CASE WHEN rank == 9223372036854775807 THEN rank ELSE rank * 100 END ")|| [v5 containsObject:@"peer_payment_account"]&& !sub_10000C100((BOOL)v3, @"UPDATE peer_payment_account SET current_balance_amount = CASE WHEN current_balance_amount == 9223372036854775807 THEN current_balance_amount ELSE current_balance_amount * 100 END, maximum_balance_amount = CASE WHEN maximum_balance_amount == 9223372036854775807 THEN maximum_balance_amount ELSE maximum_balance_amount * 100 END ")|| objc_msgSend(v5, "containsObject:", @"peer_payment_account_feature_descriptor")&& !sub_10000C100((BOOL)v3, @"UPDATE peer_payment_account_feature_descriptor SET fee_percentage = CASE WHEN fee_percentage == 9223372036854775807 THEN fee_percentage ELSE fee_percentage * 100 END, maximum_amount = CASE WHEN maximum_amount == 9223372036854775807 THEN maximum_amount ELSE maximum_amount * 100 END, maximum_fee = CASE WHEN maximum_fee == 9223372036854775807 THEN maximum_fee ELSE maximum_fee * 100 END, minimum_amount = CASE WHEN minimum_amount == 9223372036854775807 THEN minimum_amount ELSE minimum_amount * 100 END, minimum_fee = CASE WHEN minimum_fee == 9223372036854775807 THEN minimum_fee ELSE minimum_fee * 100 END ")|| objc_msgSend(v5, "containsObject:", @"persimmon")&& !sub_10000C100((BOOL)v3, @"UPDATE persimmon SET d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, k = CASE WHEN k == 9223372036854775807 THEN k ELSE k * 100 END ")|| objc_msgSend(v5, "containsObject:", @"pineapples")&& !sub_10000C100((BOOL)v3, @"UPDATE pineapples SET g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END, k = CASE WHEN k == 9223372036854775807 THEN k ELSE k * 100 END, l = CASE WHEN l == 9223372036854775807 THEN l ELSE l * 100 END, m = CASE WHEN m == 9223372036854775807 THEN m ELSE m * 100 END, n = CASE WHEN n == 9223372036854775807 THEN n ELSE n * 100 END, o = CASE WHEN o == 9223372036854775807 THEN o ELSE o * 100 END, p = CASE WHEN p == 9223372036854775807 THEN p ELSE p * 100 END, q = CASE WHEN q == 9223372036854775807 THEN q ELSE q * 100 END, r = CASE WHEN r == 9223372036854775807 THEN r ELSE r * 100 END, total_balance = CASE WHEN total_balance == 9223372036854775807 THEN total_balance ELSE total_balance * 100 END, u = CASE WHEN u == 9223372036854775807 THEN u ELSE u * 100 END, v = CASE WHEN v == 9223372036854775807 THEN v ELSE v * 100 END ")|| objc_msgSend(v5, "containsObject:", @"pineberry")
    && !sub_10000C100((BOOL)v3, @"UPDATE pineberry SET g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END ")|| [v5 containsObject:@"prickly_pear"]&& !sub_10000C100((BOOL)v3, @"UPDATE prickly_pear SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END ")|| objc_msgSend(v5, "containsObject:", @"raisin")&& !sub_10000C100((BOOL)v3, @"UPDATE raisin SET e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END ")|| objc_msgSend(v5, "containsObject:", @"rambutans")&& !sub_10000C100((BOOL)v3, @"UPDATE rambutans SET b = CASE WHEN b == 9223372036854775807 THEN b ELSE b * 100 END ")|| objc_msgSend(v5, "containsObject:", @"starfruits")&& !sub_10000C100((BOOL)v3, @"UPDATE starfruits SET d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END ")|| objc_msgSend(v5, "containsObject:", @"strawberries")
    && !sub_10000C100((BOOL)v3, @"UPDATE strawberries SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END ")|| [v5 containsObject:@"tomatoes"]&& !sub_10000C100((BOOL)v3, @"UPDATE tomatoes SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END ")|| objc_msgSend(v5, "containsObject:", @"transit_applet_state")&& !sub_10000C100((BOOL)v3, @"UPDATE transit_applet_state SET balance = CASE WHEN balance == 9223372036854775807 THEN balance ELSE balance * 100 END ")|| objc_msgSend(v5, "containsObject:", @"transit_applet_state_balance")&& !sub_10000C100((BOOL)v3, @"UPDATE transit_applet_state_balance SET balance = CASE WHEN balance == 9223372036854775807 THEN balance ELSE balance * 100 END WHERE currency <> 'XXX' OR currency IS NULL"))
  {
    BOOL v6 = 0;
  }
  else if ([v5 containsObject:@"watermelons"])
  {
    BOOL v6 = sub_10000C100((BOOL)v3, @"UPDATE watermelons SET f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END ");
  }
  else
  {
    BOOL v6 = 1;
  }

  return v6;
}

- (BOOL)_migrateFrom14461To14462:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1004037C8;
  v10[3] = &unk_10074FAE8;
  uint64_t v12 = &v13;
  void v10[4] = self;
  id v8 = v6;
  id v11 = v8;
  sub_10000817C((uint64_t)v8, v10);
  LOBYTE(v6) = *((unsigned char *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return (char)v6;
}

- (BOOL)_migrateFrom14462To14463:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"durian", @"q TEXT")
    && sub_10035CE40((BOOL)v4, 14463);

  return v5;
}

- (BOOL)_migrateFrom14463To14464:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pears", @"o TEXT")
    && sub_10035CE40((BOOL)v4, 14464);

  return v5;
}

- (BOOL)_migrateFrom14464To14465:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"boysenberry", @"p INTEGER")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"q INTEGER")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"r TEXT")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"s TEXT")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"t TEXT")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"u INTEGER")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"v INTEGER")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"w INTEGER")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"x INTEGER")
    && sub_10035CE40((BOOL)v4, 14465);

  return v5;
}

- (BOOL)_migrateFrom14465To14466:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"discovery_item", @"triggers")
    && sub_10035D008((BOOL)v4, @"discovery_item", @"trigger_rule_identifier TEXT")
    && sub_10035CE40((BOOL)v4, 14466);

  return v5;
}

- (BOOL)_migrateFrom14466To14467:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor (pid INTEGER, default_state_identifier TEXT, default_state_enabled INTEGER, pass_pid INTEGER, metadata_pid INTEGER, state_pid INTEGER, internal_tile_order INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_metadata (pid INTEGER, identifier TEXT, type TEXT, style TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_rke (pid INTEGER, metadata_pid INTEGER, vehicle_functions BLOB, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state (pid INTEGER, action_state_pid INTEGER, state_metadata_pid INTEGER, accessory_pid INTEGER, image_pid INTEGER, type TEXT, enabled INTEGER, selected INTEGER, action BLOB, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tile_descriptor_tile_state_collection (pid INTEGER, descriptor_pid INTEGER, state_pid INTEGER, state_identifier TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_default (pid INTEGER, state_pid INTEGER, title TEXT, body TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_accessory (pid INTEGER, type TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_button (pid INTEGER, accessory_pid INTEGER, title TEXT, spinner_enabled INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_spinner (pid INTEGER, accessory_pid INTEGER, spinner_enabled INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_metadata(pid INTEGER, type TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_metadata_rke (pid INTEGER, state_metadata_pid INTEGER, vehicle_function_states BLOB, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_image (pid INTEGER,iconName TEXT,tint TEXT, symbol TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor_state (pid INTEGER, supported INTEGER, enabled INTEGER, state_identifier TEXT, state_override_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14467);

  return v5;
}

- (BOOL)_migrateFrom14467To14468:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"marionberry", @"h")
    && sub_10035D060((BOOL)v4, @"marionberry", @"k")
    && sub_10035D060((BOOL)v4, @"marionberry", @"l")
    && sub_10035D060((BOOL)v4, @"pineberry", @"h")
    && sub_10035D060((BOOL)v4, @"pineberry", @"i")
    && sub_10035D060((BOOL)v4, @"pineberry", @"j")
    && sub_10035D008((BOOL)v4, @"pineberry", @"h INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"gc TEXT")
    && sub_10035D008((BOOL)v4, @"marionberry", @"ic TEXT")
    && sub_10035D008((BOOL)v4, @"marionberry", @"jc TEXT")
    && sub_10035D008((BOOL)v4, @"marionberry", @"p INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"q INTEGER")
    && sub_10035D008((BOOL)v4, @"jostaberry", @"cc TEXT")
    && sub_10035D008((BOOL)v4, @"jostaberry", @"dc TEXT")
    && sub_10035D008((BOOL)v4, @"jostaberry", @"ec TEXT")
    && sub_10035D008((BOOL)v4, @"jostaberry", @"gc TEXT")
    && sub_10035D008((BOOL)v4, @"jostaberry", @"h INTEGER")
    && sub_10035D008((BOOL)v4, @"pineberry", @"gc TEXT")
    && sub_10035D008((BOOL)v4, @"persimmon", @"m TEXT")
    && sub_10035D060((BOOL)v4, @"lucuma", @"e")
    && sub_10035D8B4((BOOL)v4, @"loganberry")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tamarillo (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, i TEXT, j TEXT, k TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14468);

  return v5;
}

- (BOOL)_migrateFrom14468To14469:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_tile_metadata", @"selectable INTEGER")
    && sub_10035CE40((BOOL)v4, 14469);

  return v5;
}

- (BOOL)_migrateFrom14469To14470:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D8B4((BOOL)v4, @"tamarillo")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tamarillo (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS chikoo (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, PRIMARY KEY (pid));")
    && sub_10035D060((BOOL)v4, @"pineberry", @"h")
    && sub_10035CE40((BOOL)v4, 14470);

  return v5;
}

- (BOOL)_migrateFrom14470To14471:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS akebi (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14471);

  return v5;
}

- (BOOL)_migrateFrom14471To14472:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"cucamelon", @"f") && sub_10035CE40((BOOL)v4, 14472);

  return v5;
}

- (BOOL)_migrateFrom14472To14473:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"account_fetch_periods", @"blocked_endpoints TEXT")
    && sub_10035CE40((BOOL)v4, 14473);

  return v5;
}

- (BOOL)_migrateFrom14473To14474:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"account_fetch_after_transaction_wait_period INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"account_fetch_after_transaction_wait_tolerance INTEGER")&& sub_10035CE40((BOOL)v4, 14474);

  return v5;
}

- (BOOL)_migrateFrom14474To14475:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS credit_account_merge_summary (pid INTEGER, credit_account_summary_pid INTEGER, merge_date INTEGER, total_balance INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS credit_account_merge_summary_account_details (pid INTEGER, credit_account_merge_summary_pid INTEGER, account_identifier TEXT, owner_alt_dsid TEXT, statement_balance INTEGER, current_balance INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 14475);

  return v5;
}

- (BOOL)_migrateFrom14475To14476:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"oranges", @"remaining_statement_balance_for_interest_calculation INTEGER")&& sub_10035CE40((BOOL)v4, 14476);

  return v5;
}

- (BOOL)_migrateFrom14476To15000:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DB74(v4, @"discovery_item");
  unsigned int v6 = [v5 containsObject:@"triggers"];

  BOOL v7 = (!v6
     || sub_10035D060((BOOL)v4, @"discovery_item", @"triggers")
     && sub_10035D008((BOOL)v4, @"discovery_item", @"trigger_rule_identifier TEXT"))
    && sub_10035CE40((BOOL)v4, 15000);

  return v7;
}

- (BOOL)_migrateFrom15000To15001:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035D978(v5);
  id v8 = +[NSSet setWithArray:v7];

  if ([v8 containsObject:@"elderberry"]
    || [v8 containsObject:@"apricots"])
  {
    BOOL v9 = sub_10035CE40((BOOL)v5, 15001);
  }
  else
  {
    uint64_t v16 = 0;
    BOOL v17 = &v16;
    uint64_t v18 = 0x2020000000;
    char v19 = 0;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_1004043FC;
    void v11[3] = &unk_10074FB10;
    uint64_t v15 = &v16;
    id v12 = v8;
    id v13 = v5;
    id v14 = @"UPDATE pineapples SET g = g / 100 ";
    sub_10000817C((uint64_t)v13, v11);
    BOOL v9 = *((unsigned char *)v17 + 24) != 0;

    _Block_object_dispose(&v16, 8);
  }

  return v9;
}

- (BOOL)_migrateFrom15001To15002:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = sub_10035D978(v6);
  BOOL v9 = +[NSSet setWithArray:v8];

  if ([v9 containsObject:@"elderberry"])
  {
    uint64_t v23 = 0;
    id v24 = &v23;
    uint64_t v25 = 0x2020000000;
    char v26 = 0;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    id v13[2] = sub_100404734;
    v13[3] = &unk_10074FAE8;
    uint64_t v15 = &v23;
    void v13[4] = self;
    id v14 = v6;
    sub_10000817C((uint64_t)v14, v13);
    BOOL v10 = *((unsigned char *)v24 + 24) != 0;
    id v11 = v14;
LABEL_6:

    _Block_object_dispose(&v23, 8);
    goto LABEL_7;
  }
  if ([(PDDatabaseManager *)self _migrationAmountDecimalDigitsVersion:v6] < 1)
  {
    uint64_t v23 = 0;
    id v24 = &v23;
    uint64_t v25 = 0x2020000000;
    char v26 = 0;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_100404698;
    void v16[3] = &unk_10074A7C8;
    id v22 = &v23;
    id v17 = v9;
    id v18 = v6;
    char v19 = @"UPDATE pineapples SET e = e / 100 ";
    uint64_t v20 = @"UPDATE oranges SET p = p / 100 ";
    BOOL v21 = self;
    sub_10000817C((uint64_t)v18, v16);
    BOOL v10 = *((unsigned char *)v24 + 24) != 0;

    id v11 = v17;
    goto LABEL_6;
  }
  BOOL v10 = sub_10035CE40((BOOL)v6, 15002);
LABEL_7:

  return v10;
}

- (BOOL)_migrateFrom15002To15003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"live_render_background_type TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"f TEXT")
    && sub_10035CE40((BOOL)v4, 15003);

  return v5;
}

- (BOOL)_migrateFrom15003To15004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"palisades", @"k INT")
    && sub_10035CE40((BOOL)v4, 15004);

  return v5;
}

- (BOOL)_migrateFrom15004To15005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"atemoya", @"terms_url") && sub_10035CE40((BOOL)v4, 15005);

  return v5;
}

- (BOOL)_migrateFrom15005To15006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DB74(v4, @"oranges");
  if (![v5 containsObject:@"remaining_statement_balance_for_interest_calculation"])
  {
    if (!sub_10035D008((BOOL)v4, @"oranges", @"remaining_statement_balance_for_interest_calculation INTEGER"))goto LABEL_3; {
LABEL_5:
    }
    BOOL v6 = sub_10035CE40((BOOL)v4, 15006);
    goto LABEL_6;
  }
  if (sub_10000C100((BOOL)v4, @"UPDATE oranges SET remaining_statement_balance_for_interest_calculation = remaining_statement_balance_for_interest_calculation * 100 "))
  {
    goto LABEL_5;
  }
LABEL_3:
  BOOL v6 = 0;
LABEL_6:

  return v6;
}

- (BOOL)_migrateFrom15006To15007:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_10000C100((BOOL)v6, @"CREATE TABLE IF NOT EXISTS ranging_suspension_reason (pid INTEGER, applet_subcredential_pid INTEGER, payment_application_pid INTEGER, ranging_suspension_reasons INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v6, 15007);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100404A4C;
  void v11[3] = &unk_10074F8B8;
  void v11[4] = self;
  id v12 = v6;
  id v9 = v6;
  [v7 addDatabasePopulationOperation:v11];

  return v8;
}

- (BOOL)_migrateNSNotFoundTo4DecimalDigits:(id)a3
{
  id v3 = a3;
  id v4 = sub_10035D978(v3);
  BOOL v5 = +[NSSet setWithArray:v4];

  if ([v5 containsObject:@"apples"]
    && !sub_10000C100((BOOL)v3, @"UPDATE apples SET e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END ")|| [v5 containsObject:@"avocados"]&& !sub_10000C100((BOOL)v3, @"UPDATE avocados SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END ")|| objc_msgSend(v5, "containsObject:", @"bananas")&& !sub_10000C100((BOOL)v3, @"UPDATE bananas SET d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 922337203685477580700 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 922337203685477580700 THEN 9223372036854775807 ELSE l END, m = CASE WHEN m == 922337203685477580700 THEN 9223372036854775807 ELSE m END ")|| objc_msgSend(v5, "containsObject:", @"breadfruit")&& !sub_10000C100((BOOL)v3, @"UPDATE breadfruit SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END ")|| objc_msgSend(v5, "containsObject:", @"coconuts")&& !sub_10000C100((BOOL)v3, @"UPDATE coconuts SET b = CASE WHEN b == 922337203685477580700 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END ")|| objc_msgSend(v5, "containsObject:", @"credit_account_merge_summary")
    && !sub_10000C100((BOOL)v3, @"UPDATE credit_account_merge_summary SET total_balance = CASE WHEN total_balance == 922337203685477580700 THEN 9223372036854775807 ELSE total_balance END ")|| [v5 containsObject:@"credit_account_merge_summary_account_details"]&& !sub_10000C100((BOOL)v3, @"UPDATE credit_account_merge_summary_account_details SET current_balance = CASE WHEN current_balance == 922337203685477580700 THEN 9223372036854775807 ELSE current_balance END, statement_balance = CASE WHEN statement_balance == 922337203685477580700 THEN 9223372036854775807 ELSE statement_balance END ")|| objc_msgSend(v5, "containsObject:", @"currant")&& !sub_10000C100((BOOL)v3, @"UPDATE currant SET d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END ")|| objc_msgSend(v5, "containsObject:", @"fig")&& !sub_10000C100((BOOL)v3, @"UPDATE fig SET h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END ")|| objc_msgSend(v5, "containsObject:", @"gojiberry")&& !sub_10000C100((BOOL)v3, @"UPDATE gojiberry SET f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END ")|| objc_msgSend(v5, "containsObject:", @"ice_cream_banana")
    && !sub_10000C100((BOOL)v3, @"UPDATE ice_cream_banana SET e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END ")|| [v5 containsObject:@"jostaberry"]&& !sub_10000C100((BOOL)v3, @"UPDATE jostaberry SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END ")|| objc_msgSend(v5, "containsObject:", @"kiwi")&& !sub_10000C100((BOOL)v3, @"UPDATE kiwi SET h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END ")|| objc_msgSend(v5, "containsObject:", @"lucuma")&& !sub_10000C100((BOOL)v3, @"UPDATE lucuma SET f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END, l = CASE WHEN l == 922337203685477580700 THEN 9223372036854775807 ELSE l END, n = CASE WHEN n == 922337203685477580700 THEN 9223372036854775807 ELSE n END, p = CASE WHEN p == 922337203685477580700 THEN 9223372036854775807 ELSE p END ")|| objc_msgSend(v5, "containsObject:", @"lychees")&& !sub_10000C100((BOOL)v3, @"UPDATE lychees SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END ")|| objc_msgSend(v5, "containsObject:", @"marionberry")
    && !sub_10000C100((BOOL)v3, @"UPDATE marionberry SET g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END ")|| [v5 containsObject:@"mulberry"]&& !sub_10000C100((BOOL)v3, @"UPDATE mulberry SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END ")|| objc_msgSend(v5, "containsObject:", @"oranges")&& !sub_10000C100((BOOL)v3, @"UPDATE oranges SET b = CASE WHEN b == 922337203685477580700 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 922337203685477580700 THEN 9223372036854775807 ELSE k END, m = CASE WHEN m == 922337203685477580700 THEN 9223372036854775807 ELSE m END, p = CASE WHEN p == 922337203685477580700 THEN 9223372036854775807 ELSE p END, r = CASE WHEN r == 922337203685477580700 THEN 9223372036854775807 ELSE r END, s = CASE WHEN s == 922337203685477580700 THEN 9223372036854775807 ELSE s END, t = CASE WHEN t == 922337203685477580700 THEN 9223372036854775807 ELSE t END, u = CASE WHEN u == 922337203685477580700 THEN 9223372036854775807 ELSE u END ")|| objc_msgSend(v5, "containsObject:", @"payment_application")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_application SET in_app_pin_required_amount = CASE WHEN in_app_pin_required_amount == 922337203685477580700 THEN 9223372036854775807 ELSE in_app_pin_required_amount END ")|| objc_msgSend(v5, "containsObject:", @"payment_balance")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_balance SET value = CASE WHEN value == 922337203685477580700 THEN 9223372036854775807 ELSE value END WHERE currency_code <> 'XXX'")|| objc_msgSend(v5, "containsObject:", @"payment_transaction")
    && !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END, c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, eligible_eligible_rewards_percent_aggregate = CASE WHEN eligible_eligible_rewards_percent_aggregate == 922337203685477580700 THEN 9223372036854775807 ELSE eligible_eligible_rewards_percent_aggregate END, eligible_rewards_cash_aggregate = CASE WHEN eligible_rewards_cash_aggregate == 922337203685477580700 THEN 9223372036854775807 ELSE eligible_rewards_cash_aggregate END, foreign_exchange_information_destination_amount = CASE WHEN foreign_exchange_information_destination_amount == 922337203685477580700 THEN 9223372036854775807 ELSE foreign_exchange_information_destination_amount END, nominal_amount = CASE WHEN nominal_amount == 922337203685477580700 THEN 9223372036854775807 ELSE nominal_amount END, primary_funding_source_amount = CASE WHEN primary_funding_source_amount == 922337203685477580700 THEN 9223372036854775807 ELSE primary_funding_source_amount END, secondary_funding_source_amount = CASE WHEN secondary_funding_source_amount == 922337203685477580700 THEN 9223372036854775807 ELSE secondary_funding_source_amount END, subtotal_amount = CASE WHEN subtotal_amount == 922337203685477580700 THEN 9223372036854775807 ELSE subtotal_amount END ")|| [v5 containsObject:@"payment_transaction_amount"]&& !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_amount SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END WHERE currency <> 'XXX' OR currency IS NULL")|| objc_msgSend(v5, "containsObject:", @"payment_transaction_amount_modifiers")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_amount_modifiers SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END WHERE currency <> 'XXX' OR currency IS NULL")|| objc_msgSend(v5, "containsObject:", @"payment_transaction_awards")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_awards SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END WHERE currency <> 'XXX' OR currency IS NULL")|| objc_msgSend(v5, "containsObject:", @"payment_transaction_fee")&& !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_fee SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END ")|| objc_msgSend(v5, "containsObject:", @"payment_transaction_tag")
    && !sub_10000C100((BOOL)v3, @"UPDATE payment_transaction_tag SET rank = CASE WHEN rank == 922337203685477580700 THEN 9223372036854775807 ELSE rank END ")|| [v5 containsObject:@"peer_payment_account"]&& !sub_10000C100((BOOL)v3, @"UPDATE peer_payment_account SET current_balance_amount = CASE WHEN current_balance_amount == 922337203685477580700 THEN 9223372036854775807 ELSE current_balance_amount END, maximum_balance_amount = CASE WHEN maximum_balance_amount == 922337203685477580700 THEN 9223372036854775807 ELSE maximum_balance_amount END ")|| objc_msgSend(v5, "containsObject:", @"peer_payment_account_feature_descriptor")&& !sub_10000C100((BOOL)v3, @"UPDATE peer_payment_account_feature_descriptor SET fee_percentage = CASE WHEN fee_percentage == 922337203685477580700 THEN 9223372036854775807 ELSE fee_percentage END, maximum_amount = CASE WHEN maximum_amount == 922337203685477580700 THEN 9223372036854775807 ELSE maximum_amount END, maximum_fee = CASE WHEN maximum_fee == 922337203685477580700 THEN 9223372036854775807 ELSE maximum_fee END, minimum_amount = CASE WHEN minimum_amount == 922337203685477580700 THEN 9223372036854775807 ELSE minimum_amount END, minimum_fee = CASE WHEN minimum_fee == 922337203685477580700 THEN 9223372036854775807 ELSE minimum_fee END ")|| objc_msgSend(v5, "containsObject:", @"persimmon")&& !sub_10000C100((BOOL)v3, @"UPDATE persimmon SET d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, k = CASE WHEN k == 922337203685477580700 THEN 9223372036854775807 ELSE k END ")|| objc_msgSend(v5, "containsObject:", @"pineapples")&& !sub_10000C100((BOOL)v3, @"UPDATE pineapples SET g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 922337203685477580700 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 922337203685477580700 THEN 9223372036854775807 ELSE l END, m = CASE WHEN m == 922337203685477580700 THEN 9223372036854775807 ELSE m END, n = CASE WHEN n == 922337203685477580700 THEN 9223372036854775807 ELSE n END, o = CASE WHEN o == 922337203685477580700 THEN 9223372036854775807 ELSE o END, p = CASE WHEN p == 922337203685477580700 THEN 9223372036854775807 ELSE p END, q = CASE WHEN q == 922337203685477580700 THEN 9223372036854775807 ELSE q END, r = CASE WHEN r == 922337203685477580700 THEN 9223372036854775807 ELSE r END, total_balance = CASE WHEN total_balance == 922337203685477580700 THEN 9223372036854775807 ELSE total_balance END, u = CASE WHEN u == 922337203685477580700 THEN 9223372036854775807 ELSE u END, v = CASE WHEN v == 922337203685477580700 THEN 9223372036854775807 ELSE v END ")|| objc_msgSend(v5, "containsObject:", @"pineberry")
    && !sub_10000C100((BOOL)v3, @"UPDATE pineberry SET g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END ")|| [v5 containsObject:@"prickly_pear"]&& !sub_10000C100((BOOL)v3, @"UPDATE prickly_pear SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END ")|| objc_msgSend(v5, "containsObject:", @"raisin")&& !sub_10000C100((BOOL)v3, @"UPDATE raisin SET e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END ")|| objc_msgSend(v5, "containsObject:", @"rambutans")&& !sub_10000C100((BOOL)v3, @"UPDATE rambutans SET b = CASE WHEN b == 922337203685477580700 THEN 9223372036854775807 ELSE b END ")|| objc_msgSend(v5, "containsObject:", @"starfruits")&& !sub_10000C100((BOOL)v3, @"UPDATE starfruits SET d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END ")|| objc_msgSend(v5, "containsObject:", @"strawberries")
    && !sub_10000C100((BOOL)v3, @"UPDATE strawberries SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END ")|| [v5 containsObject:@"tomatoes"]&& !sub_10000C100((BOOL)v3, @"UPDATE tomatoes SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END ")|| objc_msgSend(v5, "containsObject:", @"transit_applet_state")&& !sub_10000C100((BOOL)v3, @"UPDATE transit_applet_state SET balance = CASE WHEN balance == 922337203685477580700 THEN 9223372036854775807 ELSE balance END ")|| objc_msgSend(v5, "containsObject:", @"transit_applet_state_balance")&& !sub_10000C100((BOOL)v3, @"UPDATE transit_applet_state_balance SET balance = CASE WHEN balance == 922337203685477580700 THEN 9223372036854775807 ELSE balance END WHERE currency <> 'XXX' OR currency IS NULL"))
  {
    BOOL v6 = 0;
  }
  else if ([v5 containsObject:@"watermelons"])
  {
    BOOL v6 = sub_10000C100((BOOL)v3, @"UPDATE watermelons SET f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END ");
  }
  else
  {
    BOOL v6 = 1;
  }

  return v6;
}

- (BOOL)_migrateFrom15007To15008:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(PDDatabaseManager *)self _migrationAmountDecimalDigitsVersion:v6] < 3)
  {
    uint64_t v13 = 0;
    id v14 = &v13;
    uint64_t v15 = 0x2020000000;
    char v16 = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100405548;
    v10[3] = &unk_10074FAE8;
    id v12 = &v13;
    void v10[4] = self;
    id v11 = v6;
    sub_10000817C((uint64_t)v11, v10);
    BOOL v8 = *((unsigned char *)v14 + 24) != 0;

    _Block_object_dispose(&v13, 8);
  }
  else
  {
    BOOL v8 = sub_10035CE40((BOOL)v6, 15008);
  }

  return v8;
}

- (BOOL)_migrateFrom15008To15009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_tile_descriptor_state", @"in_progress INTEGER")
    && sub_10035CE40((BOOL)v4, 15009);

  return v5;
}

- (BOOL)_migrateFrom15009To15010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"UPDATE pass SET live_render_background_type = 'appleCash' WHERE has_live_rendered_background != 0 AND live_render_background_type IS NULL;")
    && sub_10035D060((BOOL)v4, @"pass", @"has_live_rendered_background")
    && sub_10035CE40((BOOL)v4, 15010);

  return v5;
}

- (BOOL)_migrateFrom15010To15011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"persimmon", @"n TEXT")
    && sub_10035D008((BOOL)v4, @"persimmon", @"o TEXT")
    && sub_10035D008((BOOL)v4, @"persimmon", @"p TEXT")
    && sub_10035D008((BOOL)v4, @"persimmon", @"q INTEGER")
    && sub_10035CE40((BOOL)v4, 15011);

  return v5;
}

- (BOOL)_migrateFrom15011To15012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS feijoa (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15012);

  return v5;
}

- (BOOL)_migrateFrom15012To15013:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_reader_id (pid INTEGER, payment_automatic_selection_criterion_pid INTEGER, reader_id BLOB, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 15013))
  {
    [v6 addAutomaticSelectionCriteriaRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15013To15014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"DELETE FROM discovery_item WHERE identifier IS NULL OR identifier = '';")
    && sub_10000C100((BOOL)v4, @"DELETE FROM discovery_notification WHERE identifier IS NULL OR identifier = '';")
    && sub_10000C100((BOOL)v4, @"DELETE FROM papaya WHERE a IS NULL OR a = '';")
    && sub_10035CE40((BOOL)v4, 15014);

  return v5;
}

- (BOOL)_migrateFrom15014To15015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"discovery_item", @"max_view_count_large_card INTEGER")
    && sub_10035D008((BOOL)v4, @"discovery_item", @"hit_max_large_view_count INTEGER")
    && sub_10035CE40((BOOL)v4, 15015);

  return v5;
}

- (BOOL)_migrateFrom15015To15016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"DELETE FROM rule WHERE identifier IS NULL OR identifier = '';")
    && sub_10035CE40((BOOL)v4, 15016);

  return v5;
}

- (BOOL)_migrateFrom15016To15017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = PKCurrentUserAltDSID();
  id v6 = +[NSString stringWithFormat:@"UPDATE grapes SET alt_dsid = \"%@\" WHERE alt_dsid IS NULL", v5];

  BOOL v7 = sub_10000C100((BOOL)v4, v6) && sub_10035CE40((BOOL)v4, 15017);
  return v7;
}

- (BOOL)_migrateFrom15017To15018:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS secure_element_pass_field (pid INTEGER, key TEXT, unit_type TEXT, source INTEGER, field_order INTEGER, pass_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS secure_element_pass_field_foreign_identifier (pid INTEGER, foreign_reference_identifier TEXT, field_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 15018))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_100405ACC;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15018To15019:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_payment_funding_source (pid INTEGER, account_pid INTEGER, identifier TEXT, type INTEGER, account_suffix TEXT,bank_name TEXT,PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"plum", @"funding_sources TEXT")
    && sub_10035D008((BOOL)v4, @"account_fetch_periods", @"funding_sources_fetch_period INTEGER")&& sub_10035CE40((BOOL)v4, 15019);

  return v5;
}

- (BOOL)_migrateFrom15019To15020:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"n INTEGER")
    && sub_10035CE40((BOOL)v4, 15020);

  return v5;
}

- (BOOL)_migrateFrom15020To15021:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"signing_date INTEGER")
    && sub_10035CE40((BOOL)v5, 15021))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_100405DF8;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15021To15022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_record (pid INTEGER, record_name TEXT, record_type TEXT, zone_pid INTEGER, hash INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15022);

  return v5;
}

- (BOOL)_migrateFrom15022To15023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"chikoo", @"k TEXT")
    && sub_10035CE40((BOOL)v4, 15023);

  return v5;
}

- (BOOL)_migrateFrom15023To15024:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"plum", @"virtual_cards TEXT")
    && sub_10035CE40((BOOL)v4, 15024);

  return v5;
}

- (BOOL)_migrateFrom15024To15025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"cucamelon", @"d")
    && sub_10035D060((BOOL)v4, @"cucamelon", @"e")
    && sub_10035CE40((BOOL)v4, 15025);

  return v5;
}

- (BOOL)_migrateFrom15025To15026:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS jabuticaba (pid INTEGER, identifier TEXT, a TEXT, b INTEGER, c TEXT, d TEXT,PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS mangosteen (pid INTEGER, ra TEXT, rb TEXT, rc TEXT,PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15026);

  return v5;
}

- (BOOL)_migrateFrom15026To15027:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"pass", @"shipping_address_seed TEXT")
    && sub_10035CE40((BOOL)v5, 15027))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_100406174;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15027To15028:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"i TEXT")
    && sub_10035D008((BOOL)v5, @"payment_application", @"j INTEGER")
    && sub_10035CE40((BOOL)v5, 15028))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15028To15029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cherimoya (pid INTEGER, a TEXT, b TEXT, c TEXT,d TEXT,e BOOL,f TEXT,g INTEGER,h TEXT,PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS kiwano (pid INTEGER, a INTEGER, b TEXT, c TEXT,d TEXT,e TEXT,f TEXT,g TEXT,PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS loquat (pid INTEGER, a INTEGER, b TEXT, c TEXT,d TEXT,e TEXT,f BOOL,g INTEGER,h TEXT,i TEXT,j TEXT,k BLOB,PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15029);

  return v5;
}

- (BOOL)_migrateFrom15029To15030:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_10035CE40((BOOL)v6, 15030);
  objc_initWeak(&location, self);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10040646C;
  void v11[3] = &unk_10074FB38;
  objc_copyWeak(&v13, &location);
  id v9 = v6;
  id v12 = v9;
  [v7 addDatabasePopulationOperation:v11];

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);

  return v8;
}

- (BOOL)_migrateFrom15030To15031:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"persimmon", @"r TEXT")
    && sub_10035CE40((BOOL)v4, 15031);

  return v5;
}

- (BOOL)_migrateFrom15031To15032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS broccoli (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS carrot (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15032);

  return v5;
}

- (BOOL)_migrateFrom15032To15033:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pears", @"p INTEGER")
    && sub_10035CE40((BOOL)v4, 15033);

  return v5;
}

- (BOOL)_migrateFrom15033To15034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"boysenberry", @"y INTEGER")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"z TEXT")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"aa TEXT")
    && sub_10035D008((BOOL)v4, @"boysenberry", @"bb TEXT")
    && sub_10035CE40((BOOL)v4, 15034);

  return v5;
}

- (BOOL)_migrateFrom15034To15035:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"k BOOL DEFAULT 0")
    && sub_10035CE40((BOOL)v5, 15035))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15035To15036:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS romanesco (pid INTEGER, a TEXT, b TEXT, c BLOB, d TEXT, e INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"mangosteen", @"rd BOOL")
    && sub_10035CE40((BOOL)v4, 15036);

  return v5;
}

- (BOOL)_migrateFrom15036To15037:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2020000000;
  char v17 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1004069B4;
  v10[3] = &unk_10074FAE8;
  id v13 = &v14;
  id v8 = v6;
  id v11 = v8;
  id v12 = self;
  [(PDDatabaseManager *)self performTransactionWithBlock:v10];
  [v7 addPassDaemonDataRegeneration];
  LOBYTE(self) = *((unsigned char *)v15 + 24);

  _Block_object_dispose(&v14, 8);
  return (char)self;
}

- (BOOL)_migrateFrom15037To15038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"UPDATE blackberries SET a = (SELECT pears.pid FROM pears JOIN clementines ON clementines.a = pears.pid WHERE clementines.pid = blackberries.a) WHERE blackberries.a != 0;")
    && sub_10035CE40((BOOL)v4, 15038);

  return v5;
}

- (BOOL)_migrateFrom15038To15039:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035CE40((BOOL)v5, 15039);
  if (v7)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_100406BD0;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];
  }
  return v7;
}

- (BOOL)_migrateFrom15039To15040:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"lucuma", @"b")
    && sub_10035D060((BOOL)v4, @"lucuma", @"c")
    && sub_10035D060((BOOL)v4, @"lucuma", @"h")
    && sub_10035D060((BOOL)v4, @"lucuma", @"i")
    && sub_10035D060((BOOL)v4, @"lucuma", @"j")
    && sub_10035D060((BOOL)v4, @"lucuma", @"k")
    && sub_10035D060((BOOL)v4, @"cucamelon", @"c")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS quinoa (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS wasabi (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j TEXT, k INTEGER, l TEXT, m INTEGER, n TEXT, o INTEGER, p TEXT, q INTEGER, r TEXT, s INTEGER, t TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15040);

  return v5;
}

- (BOOL)_migrateFrom15040To15041:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"l TEXT")
    && sub_10035CE40((BOOL)v5, 15041))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15041To15042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS chickpeas (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h TEXT, i INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"marionberry", @"r INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"s TEXT")
    && sub_10035D008((BOOL)v4, @"marionberry", @"t INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"u TEXT")
    && sub_10035D008((BOOL)v4, @"marionberry", @"v TEXT")
    && sub_10035CE40((BOOL)v4, 15042);

  return v5;
}

- (BOOL)_migrateFrom15042To15043:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS asparagus (pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS oregano (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e TEXT, PRIMARY KEY (pid));")
    && sub_10035D060((BOOL)v4, @"jostaberry", @"g")
    && sub_10035D060((BOOL)v4, @"jostaberry", @"gc")
    && sub_10035D060((BOOL)v4, @"jostaberry", @"e")
    && sub_10035D060((BOOL)v4, @"jostaberry", @"ec")
    && sub_10035D060((BOOL)v4, @"pineberry", @"c")
    && sub_10035D060((BOOL)v4, @"pineberry", @"e")
    && sub_10035D060((BOOL)v4, @"chickpeas", @"g")
    && sub_10035CE40((BOOL)v4, 15043);

  return v5;
}

- (BOOL)_tranansaction_migrateLegacyCarKeySharesInDatabase:(id)a3
{
  id v18 = a3;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v4 = [(PDDatabaseManager *)self delegate];
  BOOL v5 = [v4 storedPasses];

  id v6 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        if ([v10 passType] == (id)1)
        {
          id v11 = v10;
          id v12 = objc_alloc_init((Class)PKSecureElement);
          id v13 = [v12 secureElementIdentifiers];
          [v11 updateDevicePaymentApplicationsWithSecureElementIdentifiers:v13];

          if ([v11 isCarKeyPass])
          {
            uint64_t v14 = PDSharesFromLegacyCarKeyTables(v11, self->_database);
            uint64_t v15 = [v11 uniqueID];
            [(PDDatabaseManager *)self updatePassSharesForPassUniqueIdentifier:v15 passShares:v14];
          }
        }
      }
      id v7 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v7);
  }

  BOOL v16 = sub_10035D8B4((BOOL)v18, @"shasta")
     && sub_10035D8B4((BOOL)v18, @"humphreys")
     && sub_10035D8B4((BOOL)v18, @"williamson")
     && sub_10035D8B4((BOOL)v18, @"keith");

  return v16;
}

- (BOOL)_migrateFrom15043To15044:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS waffle (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e BOOL, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"mangosteen", @"re BOOL")
    && sub_10035D008((BOOL)v4, @"mangosteen", @"rf TEXT")
    && sub_10035D008((BOOL)v4, @"mangosteen", @"rg INTEGER")
    && sub_10035D060((BOOL)v4, @"pass", @"auxiliary_capability_registered")
    && sub_10035CE40((BOOL)v4, 15044);

  return v5;
}

- (BOOL)_migrateFrom15044To15045:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"is_shell_pass INTEGER")
    && sub_10035CE40((BOOL)v4, 15045);

  return v5;
}

- (BOOL)_migrateFrom15045To15046:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"marionberry", @"w INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"x TEXT")
    && sub_10035CE40((BOOL)v4, 15046);

  return v5;
}

- (BOOL)_migrateFrom15046To15047:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"asparagus", @"b INTEGER")
    && sub_10035CE40((BOOL)v4, 15047);

  return v5;
}

- (BOOL)_migrateFrom15047To15048:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS okra (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS splitpea (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15048);

  return v5;
}

- (BOOL)_migrateFrom15048To15049:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"clementines", @"p INTEGER")
    && sub_10035CE40((BOOL)v4, 15049);

  return v5;
}

- (BOOL)_migrateFrom15049To15050:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"marionberry", @"y INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"yc TEXT")
    && sub_10035D008((BOOL)v4, @"marionberry", @"z INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"zc TEXT")
    && sub_10035D008((BOOL)v4, @"marionberry", @"aa INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"aac TEXT")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS parsnip (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15050);

  return v5;
}

- (BOOL)_migrateFrom15050To15051:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"persimmon", @"s INTEGER")
    && sub_10035CE40((BOOL)v4, 15051);

  return v5;
}

- (BOOL)_migrateFrom15051To15052:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D060((BOOL)v5, @"payment_application", @"h")
    && sub_10035D008((BOOL)v5, @"payment_application", @"h INTEGER")
    && sub_10035CE40((BOOL)v5, 15052))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15052To15053:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"cloud_kit_metadata BLOB")
    && sub_10035CE40((BOOL)v4, 15053);

  return v5;
}

- (BOOL)_migrateFrom15053To15054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"durian", @"r INTEGER")
    && sub_10035CE40((BOOL)v4, 15054);

  return v5;
}

- (BOOL)_migrateFrom15054To15055:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"marionberry", @"bb INTEGER")
    && sub_10035CE40((BOOL)v4, 15055);

  return v5;
}

- (BOOL)_migrateFrom15055To15056:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pears", @"transaction_source_pid INTEGER")
    && sub_10035D008((BOOL)v4, @"strawberries", @"r TEXT")
    && sub_10035CE40((BOOL)v4, 15056);

  return v5;
}

- (BOOL)_migrateFrom15056To15057:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS corn (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15057);

  return v5;
}

- (BOOL)_migrateFrom15057To15058:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS melomakarono (pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15058);

  return v5;
}

- (BOOL)_migrateFrom15058To15059:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cardiff (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15059);

  return v5;
}

- (BOOL)_migrateFrom15059To15060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"is_cloud_kit_securely_archived INTEGER")
    && sub_10035D008((BOOL)v4, @"pass", @"cloud_kit_secure_metadata BLOB")
    && sub_10035CE40((BOOL)v4, 15060);

  return v5;
}

- (BOOL)_migrateFrom15060To15061:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D978(v4);
  unsigned int v6 = [v5 containsObject:@"payment_setup_product_configurations"];

  if (v6)
  {
    if (!sub_10035D8B4((BOOL)v4, @"payment_setup_product_configurations")
      || !sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_setup_features (pid INTEGER, identifiers BLOB, localized_display_name TEXT, feature_type INTEGER, feature_state INTEGER, supported_options INTEGER, supported_devices INTEGER, product_identifier TEXT, partner_identifier TEXT, feature_identifier INTEGER, dirty_state_identifier TEXT, last_updated_date INTEGER, product_type INTEGER, product_state INTEGER, notification_title TEXT, notification_message TEXT, PRIMARY KEY (pid));"))
    {
      goto LABEL_4;
    }
LABEL_6:
    BOOL v7 = sub_10035CE40((BOOL)v4, 15061);
    goto LABEL_7;
  }
  if (sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_setup_features (pid INTEGER, identifiers BLOB, localized_display_name TEXT, feature_type INTEGER, feature_state INTEGER, supported_options INTEGER, supported_devices INTEGER, product_identifier TEXT, partner_identifier TEXT, feature_identifier INTEGER, dirty_state_identifier TEXT, last_updated_date INTEGER, product_type INTEGER, product_state INTEGER, notification_title TEXT, notification_message TEXT, PRIMARY KEY (pid));"))
  {
    goto LABEL_6;
  }
LABEL_4:
  BOOL v7 = 0;
LABEL_7:

  return v7;
}

- (BOOL)_migrateFrom15061To15062:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"amount_added_to_auth INTEGER")
    && sub_10035CE40((BOOL)v4, 15062);

  return v5;
}

- (BOOL)_migrateFrom15062To15063:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"marionberry", @"cc INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"ccc INTEGER")
    && sub_10035CE40((BOOL)v4, 15063);

  return v5;
}

- (BOOL)_migrateFrom15063To15064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pomegranate (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, i TEXT, j TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cranberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS eggplant (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rhubarb (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j TEXT, k TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15064);

  return v5;
}

- (BOOL)_migrateFrom15064To15065:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"lucuma", @"r INTEGER")
    && sub_10035D008((BOOL)v4, @"lucuma", @"s TEXT")
    && sub_10035CE40((BOOL)v4, 15065);

  return v5;
}

- (BOOL)_migrateFrom15065To15066:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS application_message_registration (pid INTEGER, created_date INTEGER, priority INTEGER, source TEXT, identifier TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15066);

  return v5;
}

- (BOOL)_migrateFrom15066To15067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS zucchini (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, p TEXT, q INTEGER, r INTEGER, s TEXT, t TEXT, u INTEGER, v TEXT, w BOOL, x INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15067);

  return v5;
}

- (BOOL)_migrateFrom15067To15068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS muffin (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS avocado_toast (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS eggs_benedict (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"mangosteen", @"rh BOOL")
    && sub_10035D008((BOOL)v4, @"mangosteen", @"ri BOOL")
    && sub_10035D008((BOOL)v4, @"jabuticaba", @"e INTEGER")
    && sub_10035D060((BOOL)v4, @"jabuticaba", @"d")
    && sub_10035D008((BOOL)v4, @"jabuticaba", @"d INTEGER")
    && sub_10035D008((BOOL)v4, @"romanesco", @"f TEXT")
    && sub_10035D008((BOOL)v4, @"romanesco", @"g TEXT")
    && sub_10035D008((BOOL)v4, @"romanesco", @"h TEXT")
    && sub_10035D008((BOOL)v4, @"whitney", @"o TEXT")
    && sub_10035D060((BOOL)v4, @"kiwano", @"c")
    && sub_10035D060((BOOL)v4, @"kiwano", @"d")
    && sub_10035D060((BOOL)v4, @"loquat", @"c")
    && sub_10035D060((BOOL)v4, @"loquat", @"d")
    && sub_10035D008((BOOL)v4, @"kiwano", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 15068);

  return v5;
}

- (BOOL)_migrateFrom15068To15069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"rincon", @"f TEXT")
    && sub_10035D008((BOOL)v4, @"rincon", @"g INTEGER")
    && sub_10035D060((BOOL)v4, @"mangosteen", @"ri")
    && sub_10035D008((BOOL)v4, @"mangosteen", @"ri INTEGER")
    && sub_10035CE40((BOOL)v4, 15069);

  return v5;
}

- (BOOL)_migrateFrom15069To15070:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS peer_payment_requests (pid INTEGER, request_token TEXT, peer_payment_account_pid INTEGER, requester_address TEXT, amount INTEGER, currency TEXT, memo TEXT, session_id TEXT, expiry_date INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15070);

  return v5;
}

- (BOOL)_migrateFrom15070To15071:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS yuzu (pid INTEGER, a TEXT, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tomatillo (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e INTEGER, f INTEGER, g BOOL, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"apples", @"k TEXT")
    && sub_10035D008((BOOL)v4, @"apples", @"l TEXT")
    && sub_10035CE40((BOOL)v4, 15071);

  return v5;
}

- (BOOL)_migrateFrom15071To15072:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pineberry", @"h INTEGER")
    && sub_10035D008((BOOL)v4, @"pineberry", @"hc TEXT")
    && sub_10035D008((BOOL)v4, @"pineberry", @"i INTEGER")
    && sub_10035D008((BOOL)v4, @"pineberry", @"ic TEXT")
    && sub_10035D008((BOOL)v4, @"pineberry", @"j INTEGER")
    && sub_10035D008((BOOL)v4, @"pineberry", @"jc TEXT")
    && sub_10035CE40((BOOL)v4, 15072);

  return v5;
}

- (BOOL)_migrateFrom15072To15073:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS quince (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, ea TEXT, eb TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15073);

  return v5;
}

- (BOOL)_migrateFrom15073To15074:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = sub_10035D978(v6);
  unsigned __int8 v9 = [v8 containsObject:@"waffle"];

  BOOL v10 = ((v9 & 1) != 0
      || [(PDDatabaseManager *)self _migrateFrom15043To15044:v6 context:v7])
     && sub_10035D008((BOOL)v6, @"waffle", @"f INTEGER")
     && sub_10035CE40((BOOL)v6, 15074);

  return v10;
}

- (BOOL)_migrateFrom15074To15075:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transit_applet_state_commute_plan (pid INTEGER, transit_applet_state_pid INTEGER REFERENCES transit_applet_state(pid) ON DELETE CASCADE, pass_pid INTEGER NOT NULL REFERENCES pass(pid) ON DELETE CASCADE, identifier TEXT, status TEXT, start_date INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15075);

  return v5;
}

- (BOOL)_migrateFrom15075To15076:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS associated_reader_id (pid INTEGER, automatic_selection_criterion_pid INTEGER, reader_id BLOB, priority INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS associated_reader_id_reader_ca (pid INTEGER, associated_reader_id_pid INTEGER, public_key BLOB, attestation BLOB, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 15076))
  {
    [v6 addAutomaticSelectionCriteriaRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15076To15077:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"yuzu", @"g TEXT")
    && sub_10035D008((BOOL)v4, @"yuzu", @"h TEXT")
    && sub_10035D008((BOOL)v4, @"yuzu", @"i BLOB")
    && sub_10035CE40((BOOL)v4, 15077);

  return v5;
}

- (BOOL)_migrateFrom15077To15078:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"rhubarb", @"l TEXT")
    && sub_10035CE40((BOOL)v4, 15078);

  return v5;
}

- (BOOL)_migrateFrom15078To15079:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"cranberry", @"h") && sub_10035CE40((BOOL)v4, 15079);

  return v5;
}

- (BOOL)_migrateFrom15079To15080:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS potato (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 15080);

  return v5;
}

- (BOOL)_migrateFrom15080To15081:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"eggplant", @"a")
    && sub_10035D060((BOOL)v4, @"eggplant", @"g")
    && sub_10035D008((BOOL)v4, @"eggplant", @"m INTEGER")
    && sub_10035CE40((BOOL)v4, 15081);

  return v5;
}

- (BOOL)_migrateFrom15081To15082:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_requests", @"requestee_address TEXT")
    && sub_10035D008((BOOL)v4, @"peer_payment_requests", @"actions TEXT")
    && sub_10035CE40((BOOL)v4, 15082);

  return v5;
}

- (BOOL)_migrateFrom15082To15083:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_historical_balance (pid INTEGER, account_pid INTEGER, balance INTEGER, date INTEGER, type INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE UNIQUE INDEX IF NOT EXISTS history_index ON account_historical_balance (account_pid, date, type);")
    && sub_10035CE40((BOOL)v4, 15083);

  return v5;
}

- (BOOL)_migrateFrom15083To15084:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"water", @"e INTEGER")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS tamarind (pid INTEGER, a INTEGER, b INTEGER, c TEXT, PRIMARY KEY(pid));")
    && sub_10035CE40((BOOL)v4, 15084);

  return v5;
}

- (BOOL)_migrateFrom15084To16000:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_10035CE40((BOOL)a3, 16000);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom16000To16001:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"p TEXT")
    && sub_10035CE40((BOOL)v4, 16001);

  return v5;
}

- (BOOL)_migrateFrom16001To16002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pomegranate", @"k TEXT")
    && sub_10035D008((BOOL)v4, @"pomegranate", @"l TEXT")
    && sub_10035D008((BOOL)v4, @"pomegranate", @"m TEXT")
    && sub_10035D008((BOOL)v4, @"pomegranate", @"n TEXT")
    && sub_10035CE40((BOOL)v4, 16002);

  return v5;
}

- (BOOL)_migrateFrom16002To16003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pineberry", @"l TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"afi INTEGER")
    && sub_10035CE40((BOOL)v4, 16003);

  return v5;
}

- (BOOL)_migrateFrom16003To16004:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035D008((BOOL)v5, @"cherimoya", @"k TEXT")
    && sub_10035D060((BOOL)v5, @"cherimoya", @"e")
    && sub_10035CE40((BOOL)v5, 16004);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100408A38;
  v10[3] = &unk_10074F890;
  id v11 = v5;
  id v8 = v5;
  [v6 addDatabasePopulationOperation:v10];

  return v7;
}

- (BOOL)_migrateFrom16004To16005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"romanesco", @"i TEXT")
    && sub_10035CE40((BOOL)v4, 16005);

  return v5;
}

- (BOOL)_migrateFrom16005To16006:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = sub_10035D978(self->_database);
  unsigned int v9 = [v8 containsObject:@"shasta"];

  if (v9)
  {
    BOOL v10 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "CarKeyDatabaseMigration: Legacy table found, migrating.", buf, 2u);
    }

    *(void *)buf = 0;
    uint64_t v15 = buf;
    uint64_t v16 = 0x2020000000;
    char v17 = 0;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    id v13[2] = sub_100408DCC;
    v13[3] = &unk_100730D00;
    void v13[4] = self;
    void v13[5] = buf;
    [(PDDatabaseManager *)self performTransactionWithBlock:v13];
    if (v15[24]) {
      [v7 addPassDaemonDataRegeneration];
    }
    _Block_object_dispose(buf, 8);
  }
  BOOL v11 = sub_10035CE40((BOOL)v6, 16006);

  return v11;
}

- (BOOL)_migrateFrom16006To16007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS radish (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16007);

  return v5;
}

- (BOOL)_migrateFrom16007To16008:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"requires_location INTEGER")
    && sub_10035CE40((BOOL)v4, 16008);

  return v5;
}

- (BOOL)_migrateFrom16008To16009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_requests", @"request_date INTEGER")
    && sub_10035D008((BOOL)v4, @"peer_payment_requests", @"last_dismissed_date INTEGER")
    && sub_10035CE40((BOOL)v4, 16009);

  return v5;
}

- (BOOL)_migrateFrom16009To16010:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_10035CE40((BOOL)a3, 16010);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom16010To16011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"device_score_encrypted_payload_version INTEGER")&& sub_10035CE40((BOOL)v4, 16011);

  return v5;
}

- (BOOL)_migrateFrom16011To16012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS nashi (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS ume (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16012);

  return v5;
}

- (BOOL)_migrateFrom16012To16013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_setup_features", @"discovery_card_identitifer TEXT")&& sub_10035CE40((BOOL)v4, 16013);

  return v5;
}

- (BOOL)_migrateFrom16013To16014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"eggplant", @"m")
    && sub_10035D008((BOOL)v4, @"eggplant", @"n TEXT")
    && sub_10035D060((BOOL)v4, @"potato", @"a")
    && sub_10035D008((BOOL)v4, @"potato", @"f TEXT")
    && sub_10035D060((BOOL)v4, @"pomegranate", @"j")
    && sub_10035CE40((BOOL)v4, 16014);

  return v5;
}

- (BOOL)_migrateFrom16014To16015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS daikon (pid INTEGER, a INTEGER, b INTEGER, c TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"quince", @"ma TEXT")
    && sub_10035D008((BOOL)v4, @"quince", @"mb TEXT")
    && sub_10035D008((BOOL)v4, @"quince", @"n TEXT")
    && sub_10035D008((BOOL)v4, @"quince", @"o TEXT")
    && sub_10035D008((BOOL)v4, @"quince", @"p TEXT")
    && sub_10035CE40((BOOL)v4, 16015);

  return v5;
}

- (BOOL)_migrateFrom16015To16016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"quince", @"p")
    && sub_10035D008((BOOL)v4, @"quince", @"p INTEGER")
    && sub_10035CE40((BOOL)v4, 16016);

  return v5;
}

- (BOOL)_migrateFrom16016To16017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"melomakarono", @"c TEXT")
    && sub_10035CE40((BOOL)v4, 16017);

  return v5;
}

- (BOOL)_migrateFrom16017To16018:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035CE40((BOOL)v5, 16018);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1004093F0;
  v10[3] = &unk_10074F890;
  id v11 = v5;
  id v8 = v5;
  [v6 addDatabasePopulationOperation:v10];

  return v7;
}

- (BOOL)_migrateFrom16018To16019:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"palisades", @"l TEXT")
    && sub_10035CE40((BOOL)v4, 16019);

  return v5;
}

- (BOOL)_migrateFrom16019To16020:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10035D008((BOOL)v5, @"payment_application", @"m INTEGER")
    && sub_10035CE40((BOOL)v5, 16020))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom16020To16021:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"yuzu", @"j INTEGER")
    && sub_10035CE40((BOOL)v4, 16021);

  return v5;
}

- (BOOL)_migrateFrom16021To16022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_additional_push_topics", @"requests TEXT")&& sub_10035D008((BOOL)v4, @"peer_payment_requests", @"status TEXT")&& sub_10035CE40((BOOL)v4, 16022);

  return v5;
}

- (BOOL)_migrateFrom16022To16023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"strawberries", @"s INTEGER")
    && sub_10035CE40((BOOL)v4, 16023);

  return v5;
}

- (BOOL)_migrateFrom16023To16024:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_10035CE40((BOOL)a3, 16024);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom16024To16025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_setup_features", @"expiry_date INTEGER")
    && sub_10035CE40((BOOL)v4, 16025);

  return v5;
}

- (BOOL)_migrateFrom16025To16026:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"discovery_item", @"clientData BLOB")
    && sub_10035CE40((BOOL)v4, 16026);

  return v5;
}

- (BOOL)_migrateFrom16026To16027:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"tamarind", @"d TEXT")
    && sub_10035CE40((BOOL)v4, 16027);

  return v5;
}

- (BOOL)_migrateFrom16027To16028:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"is_merchant_token_transaction INTEGER")&& sub_10035CE40((BOOL)v4, 16028);

  return v5;
}

- (BOOL)_migrateFrom16028To16029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"zucchini", @"y INTEGER")
    && sub_10035D008((BOOL)v4, @"zucchini", @"z INTEGER")
    && sub_10035CE40((BOOL)v4, 16029);

  return v5;
}

- (BOOL)_migrateFrom16029To16030:(id)a3 context:(id)a4
{
  id v5 = a3;
  [a4 addPassDaemonDataRegeneration];
  BOOL v6 = sub_10035D008((BOOL)v5, @"loquat", @"m INTEGER")
    && sub_10035CE40((BOOL)v5, 16030);

  return v6;
}

- (BOOL)_migrateFrom16030To16031:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"daikon", @"d INTEGER")
    && sub_10035CE40((BOOL)v4, 16031);

  return v5;
}

- (BOOL)_migrateFrom16031To16032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"eggplant", @"o INTEGER")
    && sub_10035D008((BOOL)v4, @"eggplant", @"p INTEGER")
    && sub_10035CE40((BOOL)v4, 16032);

  return v5;
}

- (BOOL)_migrateFrom16032To16033:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"persimmon", @"t INTEGER")
    && sub_10035CE40((BOOL)v4, 16033);

  return v5;
}

- (BOOL)_migrateFrom16033To16034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"rincon", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 16034);

  return v5;
}

- (BOOL)_migrateFrom16034To16035:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS device_environment (pid INTEGER, client_identifier TEXT, country_code TEXT, device_language TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16035);

  return v5;
}

- (BOOL)_migrateFrom16035To16036:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"quince", @"q TEXT")
    && sub_10035D008((BOOL)v4, @"quince", @"r INTEGER")
    && sub_10035D008((BOOL)v4, @"quince", @"s INTEGER")
    && sub_10035CE40((BOOL)v4, 16036);

  return v5;
}

- (BOOL)_migrateFrom16036To16037:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cloud_store_zone", @"did_finish_initial_sync INTEGER")
    && sub_10000C100((BOOL)v4, @"UPDATE cloud_store_zone SET did_finish_initial_sync = 1 WHERE token_data IS NOT NULL")&& sub_10035CE40((BOOL)v4, 16037);

  return v5;
}

- (BOOL)_migrateFrom16037To16038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"jostaberry", @"display_name TEXT")
    && sub_10035CE40((BOOL)v4, 16038);

  return v5;
}

- (BOOL)_migrateFrom16038To16039:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS lemon (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16039);

  return v5;
}

- (BOOL)_migrateFrom16039To16040:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS mirabelle (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"apples", @"m TEXT")
    && sub_10035CE40((BOOL)v4, 16040);

  return v5;
}

- (BOOL)_migrateFrom16040To16041:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"quince", @"t TEXT")
    && sub_10035CE40((BOOL)v4, 16041);

  return v5;
}

- (BOOL)_migrateFrom16041To16042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"discovery_item", @"hit_max_large_view_count")
    && sub_10035CE40((BOOL)v4, 16042);

  return v5;
}

- (BOOL)_migrateFrom16042To16043:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"n INTEGER")
    && sub_10035CE40((BOOL)v4, 16043);

  return v5;
}

- (BOOL)_migrateFrom16043To16044:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"marionberry", @"f")
    && sub_10035D008((BOOL)v4, @"marionberry", @"dd INTEGER")
    && sub_10035CE40((BOOL)v4, 16044);

  return v5;
}

- (BOOL)_migrateFrom16044To16045:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"persimmon", @"u INTEGER")
    && sub_10035CE40((BOOL)v4, 16045);

  return v5;
}

- (BOOL)_migrateFrom16045To16046:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"application_message_registration", @"badge BOOL")
    && sub_10035CE40((BOOL)v4, 16046);

  return v5;
}

- (BOOL)_migrateFrom16046To16047:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction_amount", @"pending INTEGER DEFAULT 0")&& sub_10035D008((BOOL)v4, @"payment_transaction_amount", @"unit_identifier TEXT")&& sub_10035CE40((BOOL)v4, 16047);

  return v5;
}

- (BOOL)_migrateFrom16047To16048:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"nfc", @"a INTEGER DEFAULT 0")
    && sub_10035CE40((BOOL)v4, 16048);

  return v5;
}

- (BOOL)_migrateFrom16048To16049:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"salmonberry", @"e INTEGER")
    && sub_10035CE40((BOOL)v4, 16049);

  return v5;
}

- (BOOL)_migrateFrom16049To16050:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"jostaberry", @"i INTEGER")
    && sub_10035D060((BOOL)v4, @"jostaberry", @"display_name")
    && sub_10035CE40((BOOL)v4, 16050);

  return v5;
}

- (BOOL)_migrateFrom16050To16051:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pomegranate", @"o TEXT")
    && sub_10035D008((BOOL)v4, @"pomegranate", @"p TEXT")
    && sub_10035CE40((BOOL)v4, 16051);

  return v5;
}

- (BOOL)_migrateFrom16051To16052:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_share_backoff (pid INTEGER, cloud_store_zone_pid INTEGER, recipient_handle TEXT, backoff_type INTEGER, backoff_level INTEGER, next_fetch INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16052);

  return v5;
}

- (BOOL)_migrateFrom16052To16053:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"carambola", @"f")
    && sub_10035D008((BOOL)v4, @"carambola", @"f INTEGER")
    && sub_10035D060((BOOL)v4, @"carambola", @"g")
    && sub_10035D008((BOOL)v4, @"carambola", @"g INTEGER")
    && sub_10035D060((BOOL)v4, @"carambola", @"h")
    && sub_10035D008((BOOL)v4, @"carambola", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 16053);

  return v5;
}

- (BOOL)_migrateFrom16053To16054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS celery (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16054);

  return v5;
}

- (BOOL)_migrateFrom16054To16055:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS guanabana (pid INTEGER, a INTEGER, b INTEGER, bc TEXT, c INTEGER, cc TEXT, d INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16055);

  return v5;
}

- (BOOL)_migrateFrom16055To16056:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"huckleberry", @"i INTEGER")
    && sub_10035CE40((BOOL)v4, 16056);

  return v5;
}

- (BOOL)_migrateFrom16056To16057:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"recurring BOOL")
    && sub_10035CE40((BOOL)v4, 16057);

  return v5;
}

- (BOOL)_migrateFrom16057To16058:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS bokchoy (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, m INTEGER, n TEXT, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t BLOB,PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16058);

  return v5;
}

- (BOOL)_migrateFrom16058To16059:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_additional_push_topics", @"endpoint TEXT")&& sub_10035CE40((BOOL)v4, 16059);

  return v5;
}

- (BOOL)_migrateFrom16059To16060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS onion (pid INTEGER, type TEXT, uniqueIdentifier TEXT,status TEXT, created_at INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS leek (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16060);

  return v5;
}

- (BOOL)_migrateFrom16060To16061:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035D008((BOOL)v5, @"pass", @"supports_issuer_binding INTEGER DEFAULT 0")
    && sub_10035CE40((BOOL)v5, 16061);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_10040A698;
  v10[3] = &unk_10074F890;
  id v11 = v5;
  id v8 = v5;
  [v6 addDatabasePopulationOperation:v10];

  return v7;
}

- (BOOL)_migrateFrom16061To16062:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"bokchoy", @"u INTEGER")
    && sub_10035CE40((BOOL)v4, 16062);

  return v5;
}

- (BOOL)_migrateFrom16062To16063:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_statement_metadata (pid INTEGER, statement_identifier TEXT, account_identifier TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_statement_transaction_metadata (pid INTEGER, account_statement_metadata_pid INTEGER, transaction_identifier TEXT, originator_altdsid TEXT, zone_name TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16063);

  return v5;
}

- (BOOL)_migrateFrom16063To16064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"account_statement_metadata", @"has_been_processed INTEGER")&& sub_10035D008((BOOL)v4, @"account_statement_metadata", @"processed_attempt_count INTENGER")&& sub_10035D008((BOOL)v4, @"account_statement_metadata", @"last_processed_date INTEGER")&& sub_10035CE40((BOOL)v4, 16064);

  return v5;
}

- (BOOL)_migrateFrom16064To16065:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"huckleberry", @"j INTEGER")
    && sub_10035CE40((BOOL)v4, 16065);

  return v5;
}

- (BOOL)_migrateFrom16065To16066:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"a BLOB")
    && sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"b BLOB")
    && sub_10035CE40((BOOL)v4, 16066);

  return v5;
}

- (BOOL)_migrateFrom16066To16067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"merchant_fallback_logo_image_url TEXT")&& sub_10035CE40((BOOL)v4, 16067);

  return v5;
}

- (BOOL)_migrateFrom16067To16068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_application_usage_summary (pid INTEGER, pass_unique_identifier TEXT, payment_application_identifier TEXT, last_used INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_remote_credential (pid INTEGER, base_pid INTEGER, a TEXT, b INTEGER, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_shareable_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_account_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"onion", @"should_auto_provision INTEGER")
    && sub_10035CE40((BOOL)v4, 16068);

  return v5;
}

- (BOOL)_migrateFrom16068To16069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS basil (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cilantro (pid INTEGER, a INTEGER, b INTEGER, c TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16069);

  return v5;
}

- (BOOL)_migrateFrom16069To16070:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS rosemary (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16070);

  return v5;
}

- (BOOL)_migrateFrom16070To16071:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pears", @"block_all_account_access INTEGER")
    && sub_10035CE40((BOOL)v4, 16071);

  return v5;
}

- (BOOL)_migrateFrom16071To16072:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"bokchoy", @"v TEXT")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"w TEXT")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"x TEXT")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"y TEXT")
    && sub_10035D060((BOOL)v4, @"bokchoy", @"q")
    && sub_10035CE40((BOOL)v4, 16072);

  return v5;
}

- (BOOL)_migrateFrom16072To16073:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction_archive", @"bokchoy_pid INTEGER")
    && sub_10035CE40((BOOL)v4, 16073);

  return v5;
}

- (BOOL)_migrateFrom16073To16074:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"honey", @"b TEXT")
    && sub_10035D008((BOOL)v4, @"honey", @"c BLOB")
    && sub_10035CE40((BOOL)v4, 16074);

  return v5;
}

- (BOOL)_migrateFrom16074To16075:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DD18(v4, @"accessory_pid", @"pass_tile_state_default");

  if (v5) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = sub_10035D008((BOOL)v4, @"pass_tile_state_default", @"accessory_pid INTEGER")
  }
      && sub_10000C100((BOOL)v4, @"UPDATE pass_tile_state_default SET accessory_pid = (SELECT accessory_pid FROM pass_tile_state                  WHERE pass_tile_state_default.state_pid = pid);")
      && sub_10035D060((BOOL)v4, @"pass_tile_state", @"accessory_pid");
  BOOL v7 = sub_10035DD18(v4, @"secondary_accessory_pid", @"pass_tile_state_default");

  if (v7)
  {
    if (!v6) {
      goto LABEL_16;
    }
LABEL_12:
    if (sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_image (pid INTEGER, accessory_pid INTEGER, image_pid INTEGER, PRIMARY KEY (pid));")
      && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_check_in (pid INTEGER, state_pid INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));"))
    {
      LOBYTE(v6) = sub_10035CE40((BOOL)v4, 16075);
      goto LABEL_16;
    }
LABEL_15:
    LOBYTE(v6) = 0;
    goto LABEL_16;
  }
  if (v6)
  {
    if (!sub_10035D008((BOOL)v4, @"pass_tile_state_default", @"secondary_accessory_pid INTEGER"))goto LABEL_15; {
    goto LABEL_12;
    }
  }
LABEL_16:

  return v6;
}

- (BOOL)_migrateFrom16075To16076:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS garlic (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16076);

  return v5;
}

- (BOOL)_migrateFrom16076To16077:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"onion", @"provisioning_state BLOB")
    && sub_10035CE40((BOOL)v4, 16077);

  return v5;
}

- (BOOL)_migrateFrom16077To16078:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS change_history_event_retry_details (pid INTEGER, event_unique_identifier TEXT, event_record_type INTEGER, retry_date INTEGER, retry_interval INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16078);

  return v5;
}

- (BOOL)_migrateFrom16078To16079:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"a INTEGER")
    && sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"c BLOB")
    && sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"d TEXT")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"z INTEGER")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"aa TEXT")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"ab INTEGER")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"ac INTEGER")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"ad INTEGER")
    && sub_10035CE40((BOOL)v4, 16079);

  return v5;
}

- (BOOL)_migrateFrom16079To16080:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (sub_10035D008((BOOL)v4, @"jostaberry", @"j INTEGER")
    && sub_10035CE40((BOOL)v4, 16080))
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_10040B154;
    v7[3] = &unk_10074A7A0;
    id v8 = v4;
    sub_100012DC8((uint64_t)v8, @"SELECT pid FROM jostaberry", v7);

    BOOL v5 = 1;
  }
  else
  {
    BOOL v5 = 0;
  }

  return v5;
}

- (BOOL)_migrateFrom16080To16081:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D978(v4);
  unsigned int v6 = [v5 containsObject:@"basil"];

  if (v6) {
    BOOL v7 = sub_10035D8B4((BOOL)v4, @"basil");
  }
  else {
    BOOL v7 = 1;
  }
  id v8 = sub_10035D978(v4);
  unsigned int v9 = [v8 containsObject:@"cilantro"];

  int v10 = (v9 ^ 1) & v7;
  if (((v9 ^ 1) & 1) == 0 && v7) {
    int v10 = sub_10035D8B4((BOOL)v4, @"cilantro");
  }
  id v11 = sub_10035D978(v4);
  unsigned int v12 = [v11 containsObject:@"rosemary"];

  if (!v12)
  {
    if (!v10) {
      goto LABEL_15;
    }
    if (!sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS apple_balance_dtu_promotion_configuration (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, l INTEGER, PRIMARY KEY (pid));")) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (v10)
  {
    if (!sub_10035D8B4((BOOL)v4, @"rosemary")
      || !sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS apple_balance_dtu_promotion_configuration (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, l INTEGER, PRIMARY KEY (pid));"))
    {
LABEL_11:
      LOBYTE(v10) = 0;
      goto LABEL_15;
    }
LABEL_14:
    LOBYTE(v10) = sub_10035CE40((BOOL)v4, 16081);
  }
LABEL_15:

  return v10;
}

- (BOOL)_migrateFrom16081To16082:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035DB74(v4, @"peer_payment_account_additional_push_topics");
  unsigned __int8 v6 = [v5 containsObject:@"endpoint"];

  BOOL v7 = (v6 & 1) != 0
    || sub_10035D008((BOOL)v4, @"peer_payment_account_additional_push_topics", @"endpoint TEXT");
  id v8 = sub_10035DB74(v4, @"payment_transaction");
  unsigned __int8 v9 = [v8 containsObject:@"recurring"];

  if (v9)
  {
    if (!v7) {
      goto LABEL_11;
    }
LABEL_9:
    LOBYTE(v7) = sub_10035CE40((BOOL)v4, 16082);
    goto LABEL_11;
  }
  if (v7)
  {
    if (!sub_10035D008((BOOL)v4, @"payment_transaction", @"recurring BOOL"))
    {
      LOBYTE(v7) = 0;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
LABEL_11:

  return v7;
}

- (BOOL)_migrateFrom16082To16083:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"marionberry", @"cr INTEGER")
    && sub_10035CE40((BOOL)v4, 16083);

  return v5;
}

- (BOOL)_migrateFrom16083To16084:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D8B4((BOOL)v4, @"account_statement_metadata")
    && sub_10035D8B4((BOOL)v4, @"account_statement_transaction_metadata")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_statement_metadata (pid INTEGER, statement_identifier TEXT, account_identifier TEXT, opening_date INTEGER, closing_date INTEGER, has_been_processed INTEGER, last_report_date INTEGER, report_count INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_statement_metadata_item (pid INTEGER, account_statement_metadata_pid INTEGER, identifier TEXT, type INTEGER, account_event_type INTEGER, originator_altdsid TEXT, zone_name TEXT, has_been_processed INTEGER, processed_attempt_count INTENGER, last_processed_date INTEGER, last_report_date INTEGER, report_count INTEGER, error INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16084);

  return v5;
}

- (BOOL)_migrateFrom16084To16085:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pending_provisioning_remote_credential", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"onion", @"provisioning_attempt_counter INTEGER")
    && sub_10035CE40((BOOL)v4, 16085);

  return v5;
}

- (BOOL)_migrateFrom16085To16086:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"bokchoy", @"ae INTEGER")
    && sub_10035CE40((BOOL)v4, 16086);

  return v5;
}

- (BOOL)_migrateFrom16086To16087:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application_usage_summary", @"last_used_transaction INTEGER")&& sub_10035D008((BOOL)v4, @"pending_provisioning_account_credential", @"c TEXT")&& sub_10035D008((BOOL)v4, @"pending_provisioning_remote_credential", @"j INTEGER")&& sub_10035CE40((BOOL)v4, 16087);

  return v5;
}

- (BOOL)_migrateFrom16087To16088:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"lychees", @"w INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"interest_reassessment BOOL")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"associated_statement_identifiers TEXT")&& sub_10035CE40((BOOL)v4, 16088);

  return v5;
}

- (BOOL)_migrateFrom16088To16089:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"q INTEGER")
    && sub_10035CE40((BOOL)v4, 16089);

  return v5;
}

- (BOOL)_migrateFrom16089To16090:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"e INTEGER")
    && sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"f INTEGER")
    && sub_10035D008((BOOL)v4, @"bokchoy", @"af INTEGER")
    && sub_10035D008((BOOL)v4, @"peer_payment_account", @"b INTEGER")
    && sub_10035CE40((BOOL)v4, 16090);

  return v5;
}

- (BOOL)_migrateFrom16090To16091:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_container_change_event (pid INTEGER, identifier TEXT, change_type INTEGER, event_type INTEGER, timestamp INTEGER, container_identifier TEXT, begin_interval_event_identifier TEXT, begin_interval_event_pid INTEGER, operation_group_name TEXT, operation_group_name_suffix TEXT, error_description TEXT, change_token BLOB, state_name TEXT, object_names TEXT, time_interval INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16091);

  return v5;
}

- (BOOL)_migrateFrom16091To16092:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"tomatoes", @"k TEXT")
    && sub_10035D008((BOOL)v4, @"tomatoes", @"l TEXT")
    && sub_10035D008((BOOL)v4, @"tomatoes", @"m TEXT")
    && sub_10035D008((BOOL)v4, @"tomatoes", @"n INTEGER")
    && sub_10035D008((BOOL)v4, @"tomatoes", @"o INTEGER")
    && sub_10035D008((BOOL)v4, @"tomatoes", @"p TEXT")
    && sub_10035D008((BOOL)v4, @"tomatoes", @"q TEXT")
    && sub_10035D008((BOOL)v4, @"tomatoes", @"r INTEGER")
    && sub_10035D008((BOOL)v4, @"tomatoes", @"s INTEGER")
    && sub_10035CE40((BOOL)v4, 16092);

  return v5;
}

- (BOOL)_migrateFrom16092To16093:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pomegranate", @"fcc_step_up_required INTEGER")
    && sub_10035CE40((BOOL)v4, 16093);

  return v5;
}

- (BOOL)_migrateFrom16093To16094:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"peer_payment_account", @"b")
    && sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"g INTEGER")
    && sub_10035CE40((BOOL)v4, 16094);

  return v5;
}

- (BOOL)_migrateFrom16094To16095:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"original_provisioning_date INTEGER")
    && sub_10035D008((BOOL)v4, @"pending_provisioning_remote_credential", @"k INTEGER")
    && sub_10035D060((BOOL)v4, @"pending_provisioning_remote_credential", @"h")
    && sub_10035CE40((BOOL)v4, 16095);

  return v5;
}

- (BOOL)_migrateFrom16095To16096:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_tile_state", @"actions BLOB")
    && sub_10035D008((BOOL)v4, @"pass_tile_state_check_in", @"available_from INTEGER")
    && sub_10035D008((BOOL)v4, @"pass_tile_state_check_in", @"available_from_utc_offset INTEGER")&& sub_10035CE40((BOOL)v4, 16096);

  return v5;
}

- (BOOL)_migrateFrom16096To16097:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"strawberries", @"savings_interest_rate INTEGER")
    && sub_10035CE40((BOOL)v4, 16097);

  return v5;
}

- (BOOL)_migrateFrom16097To16098:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_receipt (pid INTEGER, a TEXT, b TEXT, c INTEGER, d TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"pending_provisioning_remote_credential", @"l TEXT")
    && sub_10035D008((BOOL)v4, @"pending_provisioning_remote_credential", @"m TEXT")
    && sub_10035CE40((BOOL)v4, 16098);

  return v5;
}

- (BOOL)_migrateFrom16098To16099:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_provisioning_metadata (pid INTEGER, a INTEGER, b TEXT, c TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16099);

  return v5;
}

- (BOOL)_migrateFrom16099To16100:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"garlic", @"h BLOB")
    && sub_10035D008((BOOL)v4, @"garlic", @"i BLOB")
    && sub_10035D008((BOOL)v4, @"garlic", @"j BLOB")
    && sub_10035CE40((BOOL)v4, 16100);

  return v5;
}

- (BOOL)_migrateFrom16100To16101:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 1;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_10040BE50;
  v10[3] = &unk_100732608;
  id v7 = v5;
  id v11 = v7;
  unsigned int v12 = &v13;
  sub_10000817C((uint64_t)v7, v10);
  char v8 = *((unsigned char *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom16101To16102:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_live_render (pid INTEGER, pass_pid INTEGER, enabled INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"pass", @"live_rendering_requires_enablement INTEGER")
    && sub_10035CE40((BOOL)v4, 16102);

  return v5;
}

- (BOOL)_migrateFrom16102To16103:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS credit_recovery_payment_plan (pid INTEGER, identifier TEXT, account_identifier TEXT, enrolled INTEGER, display_name TEXT, enrollment_date INTEGER, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"oranges", @"recovery_payment_plans_supported INTEGER")
    && sub_10035D008((BOOL)v4, @"plum", @"recovery_payment_plans TEXT")
    && sub_10035D008((BOOL)v4, @"account_fetch_periods", @"recovery_payment_plans_fetch_period INTEGER")&& sub_10035CE40((BOOL)v4, 16103);

  return v5;
}

- (BOOL)_migrateFrom16103To16104:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_10035D978(v5);
  char v8 = +[NSSet setWithArray:v7];

  uint64_t v73 = 0;
  id v74 = &v73;
  uint64_t v75 = 0x2020000000;
  char v76 = 0;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10040C6C8;
  v12[3] = &unk_10074FB60;
  BOOL v72 = &v73;
  id v9 = v8;
  id v13 = v9;
  id v10 = v5;
  id v14 = v10;
  uint64_t v15 = @"UPDATE ice_cream_banana SET e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END ";
  char v16 = @"UPDATE payment_transaction_amount_modifiers SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END ";
  char v17 = @"UPDATE starfruits SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  id v18 = @"UPDATE strawberries SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  long long v19 = @"UPDATE peer_payment_account SET current_balance_amount = CASE WHEN current_balance_amount == 9223372036854775807 THEN 9223372036854775807 ELSE current_balance_amount END, maximum_balance_amount = CASE WHEN maximum_balance_amount == 9223372036854775807 THEN 9223372036854775807 ELSE maximum_balance_amount END";
  long long v20 = @"UPDATE payment_application SET in_app_pin_required_amount = CASE WHEN in_app_pin_required_amount == 9223372036854775807 THEN 9223372036854775807 ELSE in_app_pin_required_amount END";
  long long v21 = @"UPDATE persimmon SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END";
  long long v22 = @"UPDATE mulberry SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END";
  uint64_t v23 = @"UPDATE payment_transaction_fee SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END";
  id v24 = @"UPDATE payment_balance SET value = CASE WHEN value == 9223372036854775807 THEN 9223372036854775807 ELSE value END WHERE currency_code <> 'XXX'";
  uint64_t v25 = @"UPDATE transit_applet_state_balance SET balance = CASE WHEN balance == 9223372036854775807 THEN 9223372036854775807 ELSE balance END WHERE currency <> 'XXX' OR currency IS NULL";
  char v26 = @"UPDATE avocados SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END";
  BOOL v27 = @"UPDATE apples SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END";
  id v28 = @"UPDATE lucuma SET f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END, l = CASE WHEN l == 9223372036854775807 THEN 9223372036854775807 ELSE l END, n = CASE WHEN n == 9223372036854775807 THEN 9223372036854775807 ELSE n END, p = CASE WHEN p == 9223372036854775807 THEN 9223372036854775807 ELSE p END ";
  long long v29 = @"UPDATE watermelons SET f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END ";
  id v30 = @"UPDATE fig SET h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END ";
  id v31 = @"UPDATE payment_transaction_tag SET rank = CASE WHEN rank == 9223372036854775807 THEN 9223372036854775807 ELSE rank END ";
  id v32 = @"UPDATE jostaberry SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  id v33 = @"UPDATE tomatoes SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END ";
  id v34 = @"UPDATE oranges SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, t = CASE WHEN t == 9223372036854775807 THEN 9223372036854775807 ELSE t END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, m = CASE WHEN m == 9223372036854775807 THEN 9223372036854775807 ELSE m END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END, remaining_statement_balance_for_interest_calculation = CASE WHEN remaining_statement_balance_for_interest_calculation == 9223372036854775807 THEN 9223372036854775807 ELSE remaining_statement_balance_for_interest_calculation END, s = CASE WHEN s == 9223372036854775807 THEN 9223372036854775807 ELSE s END, p = CASE WHEN p == 9223372036854775807 THEN 9223372036854775807 ELSE p END, u = CASE WHEN u == 9223372036854775807 THEN 9223372036854775807 ELSE u END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END ";
  id v35 = @"UPDATE bananas SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 9223372036854775807 THEN 9223372036854775807 ELSE l END, m = CASE WHEN m == 9223372036854775807 THEN 9223372036854775807 ELSE m END ";
  id v36 = @"UPDATE kiwi SET h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END ";
  id v37 = @"UPDATE peer_payment_account_feature_descriptor SET minimum_amount = CASE WHEN minimum_amount == 9223372036854775807 THEN 9223372036854775807 ELSE minimum_amount END, maximum_amount = CASE WHEN maximum_amount == 9223372036854775807 THEN 9223372036854775807 ELSE maximum_amount END, fee_percentage = CASE WHEN fee_percentage == 9223372036854775807 THEN 9223372036854775807 ELSE fee_percentage END, minimum_fee = CASE WHEN minimum_fee == 9223372036854775807 THEN 9223372036854775807 ELSE minimum_fee END, maximum_fee = CASE WHEN maximum_fee == 9223372036854775807 THEN 9223372036854775807 ELSE maximum_fee END ";
  uint64_t v38 = @"UPDATE breadfruit SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END ";
  id v39 = @"UPDATE coconuts SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  uint64_t v40 = @"UPDATE raisin SET e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END ";
  id v41 = @"UPDATE lychees SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END ";
  long long v42 = @"UPDATE payment_transaction_amount SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END WHERE preformatted_string IS NULL";
  long long v43 = @"UPDATE payment_transaction SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END, subtotal_amount = CASE WHEN subtotal_amount == 9223372036854775807 THEN 9223372036854775807 ELSE subtotal_amount END, foreign_exchange_information_destination_amount = CASE WHEN foreign_exchange_information_destination_amount == 9223372036854775807 THEN 9223372036854775807 ELSE foreign_exchange_information_destination_amount END, primary_funding_source_amount = CASE WHEN primary_funding_source_amount == 9223372036854775807 THEN 9223372036854775807 ELSE primary_funding_source_amount END, secondary_funding_source_amount = CASE WHEN secondary_funding_source_amount == 9223372036854775807 THEN 9223372036854775807 ELSE secondary_funding_source_amount END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, nominal_amount = CASE WHEN nominal_amount == 9223372036854775807 THEN 9223372036854775807 ELSE nominal_amount END, eligible_eligible_rewards_percent_aggregate = CASE WHEN eligible_eligible_rewards_percent_aggregate == 9223372036854775807 THEN 9223372036854775807 ELSE eligible_eligible_rewards_percent_aggregate END, eligible_rewards_cash_aggregate = CASE WHEN eligible_rewards_cash_aggregate == 9223372036854775807 THEN 9223372036854775807 ELSE eligible_rewards_cash_aggregate END, amount_added_to_auth = CASE WHEN amount_added_to_auth == 9223372036854775807 THEN 9223372036854775807 ELSE amount_added_to_auth END ";
  uint64_t v44 = @"UPDATE transit_applet_state SET balance = CASE WHEN balance == 9223372036854775807 THEN 9223372036854775807 ELSE balance END ";
  BOOL v45 = @"UPDATE prickly_pear SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END ";
  long long v46 = @"UPDATE payment_transaction_awards SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END, exponent = CASE WHEN exponent == 9223372036854775807 THEN 9223372036854775807 ELSE exponent END WHERE currency <> 'XXX' OR currency IS NULL";
  CFStringRef v47 = @"UPDATE pineapples SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, total_balance = CASE WHEN total_balance == 9223372036854775807 THEN 9223372036854775807 ELSE total_balance END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 9223372036854775807 THEN 9223372036854775807 ELSE l END, m = CASE WHEN m == 9223372036854775807 THEN 9223372036854775807 ELSE m END, u = CASE WHEN u == 9223372036854775807 THEN 9223372036854775807 ELSE u END, v = CASE WHEN v == 9223372036854775807 THEN 9223372036854775807 ELSE v END, n = CASE WHEN n == 9223372036854775807 THEN 9223372036854775807 ELSE n END, o = CASE WHEN o == 9223372036854775807 THEN 9223372036854775807 ELSE o END, p = CASE WHEN p == 9223372036854775807 THEN 9223372036854775807 ELSE p END, q = CASE WHEN q == 9223372036854775807 THEN 9223372036854775807 ELSE q END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END ";
  long long v48 = @"UPDATE gojiberry SET f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END ";
  long long v49 = @"UPDATE rambutans SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END ";
  long long v50 = @"UPDATE currant SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END ";
  long long v51 = @"UPDATE account_historical_balance SET balance = CASE WHEN balance == 9223372036854775807 THEN 9223372036854775807 ELSE balance END ";
  long long v52 = @"UPDATE lemon SET f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END ";
  long long v53 = @"UPDATE tomatillo SET e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END ";
  long long v54 = @"UPDATE carrot SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  long long v55 = @"UPDATE celery SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END ";
  long long v56 = @"UPDATE apple_balance_dtu_promotion_configuration SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END ";
  long long v57 = @"UPDATE credit_account_merge_summary SET total_balance = CASE WHEN total_balance == 9223372036854775807 THEN 9223372036854775807 ELSE total_balance END ";
  uint64_t v58 = @"UPDATE credit_account_merge_summary_account_details SET statement_balance = CASE WHEN statement_balance == 9223372036854775807 THEN 9223372036854775807 ELSE statement_balance END, current_balance = CASE WHEN current_balance == 9223372036854775807 THEN 9223372036854775807 ELSE current_balance END ";
  uint64_t v59 = @"UPDATE feijoa SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  id v60 = @"UPDATE quinoa SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END ";
  id v61 = @"UPDATE okra SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  uint64_t v62 = @"UPDATE oregano SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  id v63 = @"UPDATE wasabi SET j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, m = CASE WHEN m == 9223372036854775807 THEN 9223372036854775807 ELSE m END, o = CASE WHEN o == 9223372036854775807 THEN 9223372036854775807 ELSE o END, q = CASE WHEN q == 9223372036854775807 THEN 9223372036854775807 ELSE q END, s = CASE WHEN s == 9223372036854775807 THEN 9223372036854775807 ELSE s END ";
  id v64 = @"UPDATE guanabana SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END ";
  uint64_t v65 = @"UPDATE marionberry SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, y = CASE WHEN y == 9223372036854775807 THEN 9223372036854775807 ELSE y END, z = CASE WHEN z == 9223372036854775807 THEN 9223372036854775807 ELSE z END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END, t = CASE WHEN t == 9223372036854775807 THEN 9223372036854775807 ELSE t END, aa = CASE WHEN aa == 9223372036854775807 THEN 9223372036854775807 ELSE aa END, w = CASE WHEN w == 9223372036854775807 THEN 9223372036854775807 ELSE w END, cc = CASE WHEN cc == 9223372036854775807 THEN 9223372036854775807 ELSE cc END ";
  id v66 = @"UPDATE pineberry SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END ";
  id v67 = @"UPDATE peer_payment_requests SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END ";
  id v68 = @"UPDATE bokchoy SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, u = CASE WHEN u == 9223372036854775807 THEN 9223372036854775807 ELSE u END ";
  uint64_t v69 = @"UPDATE rhubarb SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  id v70 = @"UPDATE eggplant SET o = CASE WHEN o == 9223372036854775807 THEN 9223372036854775807 ELSE o END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 9223372036854775807 THEN 9223372036854775807 ELSE l END ";
  id v71 = @"UPDATE cranberry SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END  ";
  sub_10000817C((uint64_t)v10, v12);
  LOBYTE(v7) = *((unsigned char *)v74 + 24);

  _Block_object_dispose(&v73, 8);
  return (char)v7;
}

- (BOOL)_migrateFrom16104To16105:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"payment_network_identifier INTEGER")&& sub_10035CE40((BOOL)v4, 16105);

  return v5;
}

- (BOOL)_migrateFrom16105To16106:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS savings_account_step_up_details (pid INTEGER, details_pid INTEGER, threshold_exceeded INTEGER, needed_by INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16106);

  return v5;
}

- (BOOL)_migrateFrom16106To16107:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"tamarillo", @"e INTEGER")
    && sub_10035D008((BOOL)v4, @"tamarillo", @"ec TEXT")
    && sub_10000C100((BOOL)v4, @"UPDATE tamarillo SET e = (SELECT j FROM pineberry WHERE pineberry.pid = tamarillo.a), ec = (SELECT jc FROM pineberry WHERE pineberry.pid = tamarillo.a)")&& sub_10035D060((BOOL)v4, @"pineberry", @"j")&& sub_10035D060((BOOL)v4, @"pineberry", @"jc")&& sub_10035CE40((BOOL)v4, 16107);

  return v5;
}

- (BOOL)_migrateFrom16107To16108:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS relevant_pass_dates (pid INTEGER,pass_pid INTEGER, start_date INTEGER, end_date INTEGER, relevant_date INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 16108))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_10040D1A4;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom16108To16109:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"blackberries", @"expiration_month INTEGER")
    && sub_10035D008((BOOL)v4, @"blackberries", @"expiration_year INTEGER")
    && sub_10035CE40((BOOL)v4, 16109);

  return v5;
}

- (BOOL)_migrateFrom16109To16110:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cloud_store_record_fetch_task (pid INTEGER, type INTEGER, status INTEGER, transaction_source_pid INTEGER, cloud_store_zone_pid INTEGER, start_date INTEGER, end_date INTEGER, backoff_level INTEGER, next_possible_fetch_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, last_error_description TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"cloud_store_record", @"record_data BLOB")
    && sub_10035CE40((BOOL)v4, 16110);

  return v5;
}

- (BOOL)_migrateFrom16110To16111:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"account_fetch_periods", @"physical_cards_fetch_period INTEGER")&& sub_10035CE40((BOOL)v4, 16111);

  return v5;
}

- (BOOL)_migrateFrom16111To16112:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS transactions_to_delete_from_finance (pid INTEGER, transaction_identifier TEXT NOT NULL, account_identifier TEXT NOT NULL, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"update_sequence_number INTEGER NOT NULL DEFAULT 0")&& sub_10035D008((BOOL)v4, @"payment_transaction", @"needs_sync_to_finance INTEGER NOT NULL DEFAULT 1")&& sub_10000C100((BOOL)v4, @"CREATE INDEX IF NOT EXISTS payment_transaction_needs_sync_to_finance_daemon ON payment_transaction (needs_sync_to_finance);")
    && sub_10035CE40((BOOL)v4, 16112);

  return v5;
}

- (BOOL)_migrateFrom16112To16113:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"g TEXT") && sub_10035CE40((BOOL)v4, 16113);

  return v5;
}

- (BOOL)_migrateFrom16113To16114:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_funding_details_bank_account (pid INTEGER, account_funding_source_pid INTEGER, account_identifier TEXT, account_number TEXT, routing_number TEXT, name TEXT, status INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_funding_source_verification (pid INTEGER, account_funding_details_pid INTEGER, status INTEGER, options TEXT, pending_attempt_pid INTEGER, failed_attempt_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_funding_source_verification_attempt (pid INTEGER, type INTEGER, sent_date INTEGER, expiry_date INTEGER, failure_reason INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS account_funding_source_verification_action (pid INTEGER, account_funding_source_verification_pid INTEGER, type INTEGER, verification_options TEXT, PRIMARY KEY (pid));")
    && sub_10035D060((BOOL)v4, @"account_payment_funding_source", @"bank_name")
    && sub_10035CE40((BOOL)v4, 16114);

  return v5;
}

- (BOOL)_migrateFrom16114To16115:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS nutmeg (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16114);

  return v5;
}

- (BOOL)_migrateFrom16115To16116:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pineberry", @"subtype INTEGER")
    && sub_10035CE40((BOOL)v4, 16116);

  return v5;
}

- (BOOL)_migrateFrom16116To16117:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS elephant (pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cow (pid INTEGER, c_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, k INTEGER, l INTEGER, m TEXT, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r TEXT, s TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pig (pid INTEGER, i_pid INTEGER, a INTEGER, b INTEGER, c TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS giraffe (pid INTEGER, i_pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS dog (pid INTEGER, i_pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cat (pid INTEGER, i_pid INTEGER, a TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 16117);

  return v5;
}

- (BOOL)_migrateFrom16117To16118:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_application", @"funding_source_payment_type INTEGER")&& sub_10035CE40((BOOL)v4, 16118);

  return v5;
}

- (BOOL)_migrateFrom16118To17000:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_tile_descriptor", @"group_descriptor_pid INTEGER")
    && sub_10035D008((BOOL)v4, @"pass_tile_metadata", @"show_in_prearm INTEGER DEFAULT 1")&& sub_10035D008((BOOL)v4, @"pass_tile_metadata", @"context_identifier TEXT")&& sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_horizontal_flow_group (pid INTEGER, metadata_pid INTEGER, columns INTEGER, width_class TEXT, height_class TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_vertical_flow_group (pid INTEGER, metadata_pid INTEGER, rows INTEGER, width_class TEXT, height_class TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_group (pid INTEGER, state_pid INTEGER, header TEXT, footer TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_state_default_v2 (pid INTEGER, state_pid INTEGER, title_value_pid INTEGER, body_value_pid INTEGER, footer_value_pid INTEGER, preferred_style TEXT, accessory_pid INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value (pid INTEGER, type TEXT, content BLOB, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value_date (pid INTEGER, value_pid INTEGER, date_style INTEGER, time_style INTEGER, ignores_time_zone INTEGER, is_relative INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value_number (pid INTEGER, value_pid INTEGER, number_style INTEGER, currency_code TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value_foreign_reference (pid INTEGER, value_pid INTEGER, foreign_reference_type TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17000);

  return v5;
}

- (BOOL)_migrateFrom17000To17001:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS breakfast_burrito (pid INTEGER, ia TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_stateful_transfer (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17001);

  return v5;
}

- (BOOL)_migrateFrom17001To17002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"cow", @"f")
    && sub_10035D060((BOOL)v4, @"cow", @"g")
    && sub_10035D060((BOOL)v4, @"cow", @"n")
    && sub_10035CE40((BOOL)v4, 17002);

  return v5;
}

- (BOOL)_migrateFrom17002To17003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cinnamon (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e BLOB, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17003);

  return v5;
}

- (BOOL)_migrateFrom17003To17004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS allspice (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17004);

  return v5;
}

- (BOOL)_migrateFrom17004To17005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"cloud_store_record_fetch_task", @"last_error_description")
    && sub_10035D008((BOOL)v4, @"cloud_store_record_fetch_task", @"last_error_description TEXT")&& sub_10035CE40((BOOL)v4, 17005);

  return v5;
}

- (BOOL)_migrateFrom17005To17006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"rhubarb", @"m INTEGER")
    && sub_10035CE40((BOOL)v4, 17006);

  return v5;
}

- (BOOL)_migrateFrom17006To17007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cowboy (pid INTEGER, c_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17007);

  return v5;
}

- (BOOL)_migrateFrom17007To17008:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_10035CE40((BOOL)a3, 17008);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom17008To17009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS duck (pid INTEGER, a INTEGER, b TEXT, c INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS hedgehog (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS owl (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h TEXT, i INTEGER, j TEXT, k INTEGER, l INTEGER, m INTEGER, n TEXT, o INTEGER, p INTEGER, q TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS reindeer (pid INTEGER, a INTEGER, b TEXT, c TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17009);

  return v5;
}

- (BOOL)_migrateFrom17009To17010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS coffeebeans (pid INTEGER, pass_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17010);

  return v5;
}

- (BOOL)_migrateFrom17010To17011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"marionberry", @"ee INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"eec TEXT")
    && sub_10035D008((BOOL)v4, @"marionberry", @"ff INTEGER")
    && sub_10035D008((BOOL)v4, @"marionberry", @"ffc TEXT")
    && sub_10035CE40((BOOL)v4, 17011);

  return v5;
}

- (BOOL)_migrateFrom17011To17012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"ca INTEGER")
    && sub_10035CE40((BOOL)v4, 17012);

  return v5;
}

- (BOOL)_migrateFrom17012To17013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_preferences", @"dirty BOOL")
    && sub_10035D008((BOOL)v4, @"peer_payment_preferences", @"last_updated_date INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_preferences_restriction", @"a INTEGER")&& sub_10035D008((BOOL)v4, @"peer_payment_account", @"b INTEGER")&& sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS paprika (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17013);

  return v5;
}

- (BOOL)_migrateFrom17013To17014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor_state_participant (pid INTEGER, participant_identifier TEXT, pass_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17014);

  return v5;
}

- (BOOL)_migrateFrom17014To17015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS dark_chocolate (pid INTEGER, pass_pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17015);

  return v5;
}

- (BOOL)_migrateFrom17015To17016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS seaside (pid INTEGER, a INTEGER, b REAL, c REAL, d TEXT, e INTEGER, f TEXT, g BLOB, h BLOB, i TEXT, j INTEGER, k TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17016);

  return v5;
}

- (BOOL)_migrateFrom17016To17017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_precursor_pass (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17017);

  return v5;
}

- (BOOL)_migrateFrom17017To17018:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_tile_value_text (pid INTEGER, content TEXT, value_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10035D060((BOOL)v4, @"pass_tile_value", @"content")
    && sub_10035D008((BOOL)v4, @"pass_tile_metadata_horizontal_flow_group", @"maximumRows INTEGER")&& sub_10035D008((BOOL)v4, @"pass_tile_value_date", @"content TEXT")&& sub_10035D008((BOOL)v4, @"pass_tile_value_number", @"currency_content INTEGER")&& sub_10035D008((BOOL)v4, @"pass_tile_value_number", @"decimal_content DECIMAL")&& sub_10035D008((BOOL)v4, @"pass_tile_value_foreign_reference", @"content TEXT")&& sub_10035CE40((BOOL)v4, 17018);

  return v5;
}

- (BOOL)_migrateFrom17018To17019:(id)a3 context:(id)a4
{
  id v4 = a3;
  +[PassAuxiliaryRegistrationRequirement updateRegistrationStatusTo:1 role:2 type:3 inDatabase:v4];
  BOOL v5 = sub_10035D008((BOOL)v4, @"whitney", @"r TEXT")
    && sub_10035D008((BOOL)v4, @"whitney", @"s TEXT")
    && sub_10035D008((BOOL)v4, @"whitney", @"t TEXT")
    && sub_10035D008((BOOL)v4, @"whitney", @"u TEXT")
    && sub_10035D008((BOOL)v4, @"breakfast_burrito", @"ib TEXT")
    && sub_10035CE40((BOOL)v4, 17019);

  return v5;
}

- (BOOL)_migrateFrom17019To17020:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cowboy", @"i TEXT")
    && sub_10035D008((BOOL)v4, @"cow", @"t TEXT")
    && sub_10035CE40((BOOL)v4, 17020);

  return v5;
}

- (BOOL)_migrateFrom17020To17021:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"honey", @"d TEXT")
    && sub_10035CE40((BOOL)v4, 17021);

  return v5;
}

- (BOOL)_migrateFrom17021To17022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_endpoint_metadata (pid INTEGER, pass_pid INTEGER, last_updated INTEGER, is_dirty INTEGER, type INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17022);

  return v5;
}

- (BOOL)_migrateFrom17022To17023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS granola_bar (pid INTEGER, rp INTEGER, it INTEGER, a INTEGER, b INTEGER, c TEXT, rt INTEGER, d INTEGER, e INTEGER, f TEXT, g TEXT, h INTEGER, i TEXT, j INTEGER, k TEXT, m INTEGER, n TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17023);

  return v5;
}

- (BOOL)_migrateFrom17023To17024:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"cow", @"o")
    && sub_10035D060((BOOL)v4, @"cow", @"p")
    && sub_10035D060((BOOL)v4, @"cow", @"q")
    && sub_10035CE40((BOOL)v4, 17024);

  return v5;
}

- (BOOL)_migrateFrom17024To17025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"transit_applet_state_commute_plan", @"unique_identifier TEXT")&& sub_10035D008((BOOL)v4, @"carambola", @"i TEXT")&& sub_10035CE40((BOOL)v4, 17025);

  return v5;
}

- (BOOL)_migrateFrom17025To17026:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account_feature_descriptor", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 17026);

  return v5;
}

- (BOOL)_migrateFrom17026To17027:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"cow", @"i")
    && sub_10035D008((BOOL)v4, @"cow", @"u TEXT")
    && sub_10035D008((BOOL)v4, @"cow", @"v TEXT")
    && sub_10035CE40((BOOL)v4, 17027);

  return v5;
}

- (BOOL)_migrateFrom17027To17028:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"coffeebeans", @"order_index INTEGER")
    && sub_10035D060((BOOL)v4, @"cowboy", @"g")
    && sub_10035D008((BOOL)v4, @"pig", @"d INTEGER")
    && sub_10035CE40((BOOL)v4, 17028);

  return v5;
}

- (BOOL)_migrateFrom17028To17029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS green_eggs_ham (pid INTEGER, la TEXT, lb TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17029);

  return v5;
}

- (BOOL)_migrateFrom17029To17030:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cow", @"w INTEGER")
    && sub_10035CE40((BOOL)v4, 17030);

  return v5;
}

- (BOOL)_migrateFrom17030To17031:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cow", @"x TEXT") && sub_10035CE40((BOOL)v4, 17031);

  return v5;
}

- (BOOL)_migrateFrom17031To17032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"transfer_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"sell_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"bag_policy_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"order_food_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"transit_information_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"parking_information_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"directions_information_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"merchandise_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"accessibility_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"purchase_parking_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"add_on_url TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"contact_venue_phone_number TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"contact_venue_email TEXT")
    && sub_10035D008((BOOL)v4, @"pass", @"contact_venue_website TEXT")
    && sub_10035CE40((BOOL)v4, 17032);

  return v5;
}

- (BOOL)_migrateFrom17032To17033:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (sub_10035D008((BOOL)v4, @"pass", @"contactless_activation_grouping_type INTEGER"))
  {
    BOOL v5 = +[NSString stringWithFormat:@"UPDATE pass SET contactless_activation_grouping_type = CASE WHEN payment_option_selectable > 0 THEN 1 ELSE 0 END"];
    BOOL v6 = sub_10000C100((BOOL)v4, v5)
      && sub_10035D060((BOOL)v4, @"pass", @"payment_option_selectable")
      && sub_10035CE40((BOOL)v4, 17033);
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

- (BOOL)_migrateFrom17033To17034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"loquat", @"n TEXT")
    && sub_10035D008((BOOL)v4, @"loquat", @"o TEXT")
    && sub_10035D008((BOOL)v4, @"loquat", @"p TEXT")
    && sub_10035D008((BOOL)v4, @"loquat", @"q INTEGER")
    && sub_10035D008((BOOL)v4, @"kiwano", @"i INTEGER")
    && sub_10035CE40((BOOL)v4, 17034);

  return v5;
}

- (BOOL)_migrateFrom17034To17035:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pending_provisioning_identity_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e BLOB, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"pending_provisioning_receipt", @"e BLOB")
    && sub_10035D008((BOOL)v4, @"pending_provisioning_receipt", @"f INTEGER")
    && sub_10035CE40((BOOL)v4, 17035);

  return v5;
}

- (BOOL)_migrateFrom17035To17036:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"supports_automatic_foreground_vibrancy INTEGER")&& sub_10035D008((BOOL)v4, @"pass", @"supports_automatic_label_vibrancy INTEGER")&& sub_10035CE40((BOOL)v4, 17036);

  return v5;
}

- (BOOL)_migrateFrom17036To17037:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_10035CE40((BOOL)v6, 17037);
  if (v8)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_10040EC08;
    v10[3] = &unk_10074F8B8;
    void v10[4] = self;
    id v11 = v6;
    [v7 addDatabasePopulationOperation:v10];
  }
  return v8;
}

- (BOOL)_migrateFrom17037To17038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D8B4((BOOL)v4, @"duck")
    && sub_10035D8B4((BOOL)v4, @"hedgehog")
    && sub_10035D8B4((BOOL)v4, @"owl")
    && sub_10035D8B4((BOOL)v4, @"reindeer")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"iit INTEGER")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"iimu TEXT")
    && sub_10035CE40((BOOL)v4, 17038);

  return v5;
}

- (BOOL)_migrateFrom17038To17039:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pending_provisioning_stateful_transfer", @"d TEXT")
    && sub_10035D008((BOOL)v4, @"pending_provisioning_stateful_transfer", @"e TEXT")
    && sub_10035CE40((BOOL)v4, 17039);

  return v5;
}

- (BOOL)_migrateFrom17039To17040:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cumin (pid INTEGER, a INTEGER, b TEXT, c BLOB, PRIMARY KEY (pid));")
    && sub_10035D008((BOOL)v4, @"payment_transaction", @"cb TEXT")
    && sub_10035D008((BOOL)v4, @"payment_transaction_archive", @"cumin_pid INTEGER")
    && sub_10035CE40((BOOL)v4, 17040);

  return v5;
}

- (BOOL)_migrateFrom17040To17041:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_tile_metadata_horizontal_flow_group", @"action_group INTEGER")&& sub_10035CE40((BOOL)v4, 17041);

  return v5;
}

- (BOOL)_migrateFrom17041To17042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass_tile_image", @"hasColorContent BOOL DEFAULT 0")
    && sub_10035D008((BOOL)v4, @"pass_tile_state_default_v2", @"body_image_pid INTEGER")
    && sub_10035CE40((BOOL)v4, 17042);

  return v5;
}

- (BOOL)_migrateFrom17042To17043:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_10000C100((BOOL)v5, @"CREATE TABLE IF NOT EXISTS whitney_agrk (pid INTEGER, applet_subcredential_pid INTEGER, data BLOB, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v5, 17043))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom17043To17044:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS pass_relevancy_model (pid INTEGER, pass_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17044);

  return v5;
}

- (BOOL)_migrateFrom17044To17045:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D8B4((BOOL)v4, @"seaside") && sub_10035CE40((BOOL)v4, 17045);

  return v5;
}

- (BOOL)_migrateFrom17045To17046:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D060((BOOL)v4, @"pass_tile_metadata_horizontal_flow_group", @"action_group")
    && sub_10035D008((BOOL)v4, @"pass_tile_metadata_horizontal_flow_group", @"group_style TEXT")&& sub_10035CE40((BOOL)v4, 17046);

  return v5;
}

- (BOOL)_migrateFrom17046To17047:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"payment_transaction", @"top_up_type INTEGER")
    && sub_10035CE40((BOOL)v4, 17047);

  return v5;
}

- (BOOL)_migrateFrom17047To17048:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"footer_background_color TEXT")
    && sub_10035CE40((BOOL)v4, 17048);

  return v5;
}

- (BOOL)_migrateFrom17048To17049:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035CE40((BOOL)v5, 17049);
  if (v7)
  {
    [v6 addPassStyleRegeneration];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_10040F228;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];
  }
  return v7;
}

- (BOOL)_migrateFrom17049To17050:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_10035DB74(v4, @"pass_annotations");
  unsigned __int8 v6 = [v5 containsObject:@"archived_timestamp"];

  BOOL v7 = ((v6 & 1) != 0
     || sub_10035D008((BOOL)v4, @"pass_annotations", @"archived_timestamp INTEGER"))
    && sub_10035CE40((BOOL)v4, 17050);

  return v7;
}

- (BOOL)_migrateFrom17050To17051:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035CE40((BOOL)v5, 17051);
  if (v7)
  {
    PDSetDatabaseManagerHasPerformedContactlessActivationGroupingTypeRepair();
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_10040F5C4;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];
  }
  return v7;
}

- (BOOL)_migrateFrom17051To17052:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"pass", @"suppress_header_darkening INTEGER")
    && sub_10035CE40((BOOL)v4, 17052);

  return v5;
}

- (BOOL)_migrateFrom17052To17053:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"peer_payment_account", @"amount_remaining_until_identity_verification INTEGER")&& sub_10035CE40((BOOL)v4, 17053);

  return v5;
}

- (BOOL)_migrateFrom17053To17054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"kiwi", @"temp_a TEXT")
    && sub_10000C100((BOOL)v4, @"UPDATE kiwi SET temp_a=(SELECT pears.a FROM pears INNER JOIN clementines ON clementines.a=pears.pid INNER JOIN kiwi ON kiwi.a=clementines.pid)")&& sub_10035D060((BOOL)v4, @"kiwi", @"a")&& sub_10035D5D0((BOOL)v4, @"kiwi", @"temp_a", @"a")&& sub_10035CE40((BOOL)v4, 17054);

  return v5;
}

- (BOOL)_migrateFrom17054To17055:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cow", @"y BOOL")
    && sub_10035D008((BOOL)v4, @"cow", @"z TEXT")
    && sub_10035D008((BOOL)v4, @"cow", @"aa TEXT")
    && sub_10035D008((BOOL)v4, @"cow", @"ab TEXT")
    && sub_10035CE40((BOOL)v4, 17055);

  return v5;
}

- (BOOL)_migrateFrom17055To17056:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = [(PDDatabaseManager *)self secureElement];
  id v9 = [v8 secureElementIdentifiers];

  +[NSMapTable strongToStrongObjectsMapTable];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_10040FA24;
  v17[3] = &unk_100731A60;
  id v18 = v9;
  id v19 = v6;
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  id v20 = v10;
  id v11 = v6;
  id v12 = v9;
  [v7 addDatabasePopulationOperation:v17];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_10040FD78;
  void v15[3] = &unk_10072E1E8;
  id v16 = v10;
  id v13 = v10;
  [v7 addPostMigrationOperation:v15];

  LOBYTE(v7) = sub_10035CE40((BOOL)v11, 17056);
  return (char)v7;
}

- (BOOL)_migrateFrom17056To17057:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cowboy", @"ma BOOL")
    && sub_10035D008((BOOL)v4, @"cowboy", @"mb BOOL")
    && sub_10035CE40((BOOL)v4, 17057);

  return v5;
}

- (BOOL)_migrateFrom17057To17058:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_10035CE40((BOOL)a3, 17058);
  if (v6) {
    [v5 addPassStyleRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom17058To17059:(id)a3 context:(id)a4
{
  id v6 = a4;
  BOOL v7 = sub_10035CE40((BOOL)a3, 17059);
  if (v7)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1004100C0;
    v9[3] = &unk_10072E1E8;
    void v9[4] = self;
    [v6 addPostMigrationOperation:v9];
  }

  return v7;
}

- (BOOL)_migrateFrom17059To17060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS payment_offer_dynamic_content_icon_variant (pid INTEGER, two_x TEXT, three_x TEXT, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"DELETE from giraffe")
    && sub_10035D008((BOOL)v4, @"giraffe", @"default_variant INTEGER")
    && sub_10035D008((BOOL)v4, @"giraffe", @"light_variant INTEGER")
    && sub_10035D008((BOOL)v4, @"giraffe", @"dark_variant INTEGER")
    && sub_10035D060((BOOL)v4, @"giraffe", @"a")
    && sub_10035D060((BOOL)v4, @"giraffe", @"b")
    && sub_10035CE40((BOOL)v4, 17060);

  return v5;
}

- (BOOL)_migrateFrom17060To17061:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"kiwi", @"temp_a INTEGER")
    && sub_10000C100((BOOL)v4, @"UPDATE kiwi SET temp_a=(SELECT clementines.pid FROM clementines INNER JOIN pears ON pears.pid=clementines.a INNER JOIN kiwi ON kiwi.a=pears.a)")&& sub_10035D060((BOOL)v4, @"kiwi", @"a")&& sub_10035D5D0((BOOL)v4, @"kiwi", @"temp_a", @"a")&& sub_10035CE40((BOOL)v4, 17061);

  return v5;
}

- (BOOL)_migrateFrom17061To17062:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"dark_chocolate", @"h INTEGER")
    && sub_10035CE40((BOOL)v4, 17062);

  return v5;
}

- (BOOL)_migrateFrom17062To17063:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"rhubarb", @"n BOOL")
    && sub_10035D008((BOOL)v4, @"rhubarb", @"q BOOL")
    && sub_10035D008((BOOL)v4, @"rhubarb", @"r BOOL")
    && sub_10035D008((BOOL)v4, @"rhubarb", @"s BOOL")
    && sub_10035CE40((BOOL)v4, 17063);

  return v5;
}

- (BOOL)_migrateFrom17063To17064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cow", @"localized_pay_in_full_subtitle_override TEXT")
    && sub_10035CE40((BOOL)v4, 17064);

  return v5;
}

- (BOOL)_migrateFrom17064To17065:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"honey", @"document_type TEXT NOT NULL DEFAULT 'org.iso.18013.5.1.mDL'")&& sub_10035CE40((BOOL)v4, 17065);

  return v5;
}

- (BOOL)_migrateFrom17065To17066:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"breakfast_burrito", @"ic TEXT")
    && sub_10035CE40((BOOL)v4, 17066);

  return v5;
}

- (BOOL)_migrateFrom17066To17067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS footer_content (pid INTEGER, type INTEGER, footer_text TEXT, installment_criteria_pid INTEGER, PRIMARY KEY (pid));")
    && sub_10000C100((BOOL)v4, @"CREATE TABLE IF NOT EXISTS footer_content_link (pid INTEGER, footer_content_pid INTEGER, link_text TEXT, link_url TEXT, terms_identifier TEXT, analytics_identifier TEXT, PRIMARY KEY (pid));")
    && sub_10035CE40((BOOL)v4, 17067);

  return v5;
}

- (BOOL)_migrateFrom17067To17068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"cow", @"has_preconfigured_offers TEXT")
    && sub_10035CE40((BOOL)v4, 17068);

  return v5;
}

- (BOOL)_migrateFrom17068To17069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_10035D008((BOOL)v4, @"honey", @"e TEXT")
    && sub_10035D008((BOOL)v4, @"honey", @"f TEXT")
    && sub_10035CE40((BOOL)v4, 17069);

  return v5;
}

- (BOOL)_migrateFrom17069To17070:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_10035CE40((BOOL)v5, 17070);
  if (v7)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1004107DC;
    v9[3] = &unk_10074F890;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];
  }
  return v7;
}

- (void)adjustGroupsAfterAddingPass:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  id v11 = sub_100412BC8;
  id v12 = &unk_100738A00;
  id v13 = self;
  id v14 = v4;
  id v6 = v4;
  sub_10000817C((uint64_t)database, &v9);
  BOOL v7 = [(PDDatabaseManager *)self delegate];
  BOOL v8 = [v7 catalogOfRecord];
  [(PDDatabaseManager *)self _applyCatalog:v8];
}

- (void)adjustGroupsBeforeRemovingPass:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  id v11 = sub_100412CC8;
  id v12 = &unk_100738A00;
  id v13 = v4;
  id v14 = self;
  id v6 = v4;
  sub_10000817C((uint64_t)database, &v9);
  BOOL v7 = [(PDDatabaseManager *)self delegate];
  BOOL v8 = [v7 catalogOfRecord];
  [(PDDatabaseManager *)self _applyCatalog:v8];
}

- (void)adjustGroupsAfterUpdatingPass:(id)a3 oldGroupingProfile:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_100412E5C;
  v13[3] = &unk_100733610;
  id v14 = v6;
  id v15 = v7;
  id v16 = self;
  id v9 = v7;
  id v10 = v6;
  sub_10000817C((uint64_t)database, v13);
  id v11 = [(PDDatabaseManager *)self delegate];
  id v12 = [v11 catalogOfRecord];
  [(PDDatabaseManager *)self _applyCatalog:v12];
}

- (id)unexpiredPassesOrderedByGroup
{
  id v3 = objc_alloc_init((Class)NSMutableArray);
  uint64_t database = self->_database;
  BOOL v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472;
  id v10 = sub_10041301C;
  id v11 = &unk_100738A00;
  id v12 = self;
  id v13 = v3;
  id v5 = v3;
  sub_10000817C((uint64_t)database, &v8);
  id v6 = objc_msgSend(v5, "copy", v8, v9, v10, v11, v12);

  return v6;
}

- (id)sortedPassUniqueIdentifiersForGroupContainingPassWithUniqueIdentifier:(id)a3
{
  if (a3)
  {
    id v3 = +[Pass anyInDatabase:self->_database withUniqueID:a3];
    id v4 = [v3 group];

    id v5 = [v4 sortedPassUniqueIdentifiers];
  }
  else
  {
    id v5 = 0;
  }
  return v5;
}

- (void)createGroupsIfNecessary
{
  uint64_t database = self->_database;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100413394;
  v3[3] = &unk_10073AFA8;
  v3[4] = self;
  sub_10000817C((uint64_t)database, v3);
}

- (void)_applyCatalog:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100413B68;
  v7[3] = &unk_100738A00;
  id v8 = v4;
  uint64_t v9 = self;
  id v6 = v4;
  sub_10000817C((uint64_t)database, v7);
}

- (void)_insertPass:(id)a3
{
  id v4 = a3;
  id v5 = [v4 groupingProfile];
  [(PDDatabaseManager *)self _insertPass:v4 groupingProfile:v5];
}

- (void)_insertPass:(id)a3 groupingProfile:(id)a4
{
}

- (void)_insertPass:(id)a3 groupingProfile:(id)a4 insertNewGroupAfter:(id)a5
{
  id v13 = a3;
  id v8 = a5;
  id v9 = a4;
  uint64_t v10 = [(PDDatabaseManager *)self _firstGroupMatchingProfile:v9];
  if (v10)
  {
    id v11 = (void *)v10;
    [(PDDatabaseManager *)self _addPass:v13 toGroup:v10 withGroupingProfile:v9];
  }
  else
  {
    id v12 = +[PDAutomaticGroup createAutomaticGroupForPass:v13 withGroupingProfile:v9];

    id v11 = +[Group insertAutomaticGroup:v12 inDatabase:self->_database];
    [v13 updateWithGroup:v11];
    if (v8) {
      -[PDDatabaseManager _moveGroup:toIndex:](self, "_moveGroup:toIndex:", v11, (char *)[v8 order] + 1);
    }
    id v9 = v12;
  }
}

- (id)_firstGroupMatchingProfile:(id)a3
{
  id v4 = a3;
  id v5 = [v4 passType];
  uint64_t v6 = [v4 groupingID];
  id v7 = (void *)v6;
  if (v5 == (id)1 && !v6)
  {
    id v8 = 0;
    goto LABEL_14;
  }
  id v9 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v10 = [v4 passTypeID];
  id v11 = +[SQLiteComparisonPredicate predicateWithProperty:@"pass_type_id" equalToValue:v10];
  [v9 addObject:v11];

  id v12 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v4 passStyle]);
  id v13 = +[SQLiteComparisonPredicate predicateWithProperty:@"pass_style" equalToValue:v12];
  [v9 addObject:v13];

  id v14 = [(PDDatabaseManager *)self _predicateForGroupingID:v7];
  [v9 addObject:v14];

  if (v5 != (id)1)
  {
    id v15 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v4 isNFCEnabled]);
    id v16 = +[SQLiteComparisonPredicate predicateWithProperty:@"nfc_enabled" equalToValue:v15];
    [v9 addObject:v16];

    id v17 = v4;
    id v18 = [v17 groupingID];
    if (!v18)
    {
      id v19 = [v17 passStyle];
      if (v19 == (id)9) {
        goto LABEL_9;
      }
      if (v19 == (id)4)
      {
        double v20 = 86400.0;
        goto LABEL_11;
      }
      if (v19 == (id)2)
      {
LABEL_9:
        double v20 = 3600.0;
LABEL_11:

        id v17 = [v17 relevantDates];
        id v18 = [(PDDatabaseManager *)self _predicateForDates:v17 leeway:v20];
        [v9 addObject:v18];
      }
    }
  }
  long long v21 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v9];
  id v8 = [(PDDatabaseManager *)self _firstGroupMatchingPredicate:v21];

LABEL_14:
  return v8;
}

- (id)_firstGroupMatchingGroup:(id)a3 withRelevantDates:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [v6 automaticGroup];
  id v9 = [v8 passTypeID];
  uint64_t v10 = [v8 groupingID];
  uint64_t v11 = PKPassTypeForPassTypeIdentifier();
  if (v11 == 1 && v10 == 0)
  {
    BOOL v27 = 0;
    goto LABEL_20;
  }
  uint64_t v13 = v11;
  long long v46 = v7;
  id v14 = objc_alloc_init((Class)NSMutableArray);
  id v43 = v6;
  BOOL v45 = self;
  id v15 = (void *)_SQLValueForEntity();
  id v16 = +[SQLiteComparisonPredicate predicateWithProperty:@"pid" notEqualToValue:v15];
  [v14 addObject:v16];

  id v17 = +[SQLiteComparisonPredicate predicateWithProperty:@"pass_type_id" equalToValue:v9];
  [v14 addObject:v17];

  id v18 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v8 passStyle]);
  id v19 = +[SQLiteComparisonPredicate predicateWithProperty:@"pass_style" equalToValue:v18];
  [v14 addObject:v19];

  double v20 = v45;
  long long v21 = [(PDDatabaseManager *)v45 _predicateForGroupingID:v10];
  [v14 addObject:v21];

  p_superclass = (__objc2_class **)(&OBJC_METACLASS___PaymentTransactionTag + 8);
  if (v13 != 1)
  {
    uint64_t v23 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v8 isNFCEnabled]);
    id v24 = +[SQLiteComparisonPredicate predicateWithProperty:@"nfc_enabled" equalToValue:v23];
    [v14 addObject:v24];

    id v25 = v8;
    char v26 = [v25 groupingID];
    if (v26)
    {
LABEL_7:

      p_superclass = (__objc2_class **)(&OBJC_METACLASS___PaymentTransactionTag + 8);
      goto LABEL_19;
    }
    id v28 = [v25 passStyle];
    if (v28 != (id)9)
    {
      if (v28 == (id)4)
      {
        double v29 = 86400.0;
LABEL_14:

        if ([v46 count]
          && ([v46 firstObject],
              id v30 = objc_claimAutoreleasedReturnValue(),
              [v30 date],
              id v31 = objc_claimAutoreleasedReturnValue(),
              v31,
              v30,
              v31))
        {
          id v32 = [v25 minDate];
          id v33 = [(PDDatabaseManager *)v45 _predicateForDate:v32 matchExactly:0 leeway:v29];

          id v34 = [v25 maxDate];
          id v35 = [(PDDatabaseManager *)v45 _predicateForDate:v34 matchExactly:0 leeway:v29];

          v48[0] = v33;
          v48[1] = v35;
          id v36 = +[NSArray arrayWithObjects:v48 count:2];
          uint64_t v37 = +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:v36];
        }
        else
        {
          uint64_t v38 = objc_msgSend(v25, "minDate", v6);
          id v33 = [(PDDatabaseManager *)v45 _predicateForDate:v38 matchExactly:1 leeway:0.0];

          id v39 = [v25 maxDate];
          id v35 = [(PDDatabaseManager *)v45 _predicateForDate:v39 matchExactly:1 leeway:0.0];

          v47[0] = v33;
          v47[1] = v35;
          id v36 = +[NSArray arrayWithObjects:v47 count:2];
          uint64_t v37 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v36];
        }
        uint64_t v40 = (void *)v37;

        double v20 = v45;
        [v14 addObject:v40];

        p_superclass = &OBJC_METACLASS___PaymentTransactionTag.superclass;
        goto LABEL_19;
      }
      if (v28 != (id)2) {
        goto LABEL_7;
      }
    }
    double v29 = 3600.0;
    goto LABEL_14;
  }
LABEL_19:
  id v41 = objc_msgSend(p_superclass + 69, "predicateMatchingAllPredicates:", v14, v43);
  BOOL v27 = [(PDDatabaseManager *)v20 _firstGroupMatchingPredicate:v41];

  id v6 = v44;
  id v7 = v46;
LABEL_20:

  return v27;
}

- (id)_firstGroupMatchingPredicate:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  CFStringRef v17 = @"group_order";
  id v6 = +[NSArray arrayWithObjects:&v17 count:1];
  id v7 = +[SQLiteEntity queryWithDatabase:database predicate:v4 orderingProperties:v6];

  uint64_t v11 = 0;
  id v12 = &v11;
  uint64_t v13 = 0x3032000000;
  id v14 = sub_100020D7C;
  id v15 = sub_1000211B0;
  id v16 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100414E94;
  v10[3] = &unk_10074FD70;
  void v10[4] = self;
  void v10[5] = &v11;
  [v7 enumeratePersistentIDsUsingBlock:v10];
  id v8 = (id)v12[5];
  _Block_object_dispose(&v11, 8);

  return v8;
}

- (id)_groupAtOrAfterIndex:(unint64_t)a3 bestMatchingUniqueIDs:(id)a4
{
  id v6 = a4;
  id v7 = +[SQLiteCompoundPredicate predicateWithProperty:@"unique_id" equalToValues:v6];
  v31[0] = v7;
  id v8 = +[NSNumber numberWithUnsignedInteger:a3];
  id v9 = +[SQLiteComparisonPredicate predicateWithProperty:@"pass_group.group_order" greaterThanOrEqualToValue:v8];
  v31[1] = v9;
  uint64_t v10 = +[NSArray arrayWithObjects:v31 count:2];

  uint64_t database = self->_database;
  id v12 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v10];
  uint64_t v13 = +[SQLiteEntity queryWithDatabase:database predicate:v12];

  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000;
  BOOL v27 = sub_100020D7C;
  id v28 = sub_1000211B0;
  id v29 = 0;
  v23[0] = 0;
  v23[1] = v23;
  void v23[2] = 0x2020000000;
  v23[3] = 0;
  id v14 = objc_alloc_init((Class)NSCountedSet);
  CFStringRef v30 = @"group_pid";
  id v15 = +[NSArray arrayWithObjects:&v30 count:1];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  void v19[2] = sub_1004151F4;
  v19[3] = &unk_10074FD98;
  void v19[4] = self;
  id v16 = v14;
  id v20 = v16;
  long long v21 = v23;
  long long v22 = &v24;
  [v13 enumeratePersistentIDsAndProperties:v15 usingBlock:v19];

  id v17 = (id)v25[5];
  _Block_object_dispose(v23, 8);
  _Block_object_dispose(&v24, 8);

  return v17;
}

- (void)_fixDuplicateGroupsAtIndex:(unint64_t)a3 preservingGroupPID:(int64_t)a4 maximumNumberOfGroups:(unint64_t)a5
{
  id v8 = +[NSNumber numberWithLongLong:a4];
  id v9 = +[SQLiteComparisonPredicate predicateWithProperty:@"group_pid" notEqualToValue:v8];
  v32[0] = v9;
  uint64_t v10 = +[NSNumber numberWithUnsignedInteger:a3];
  uint64_t v11 = +[SQLiteComparisonPredicate predicateWithProperty:@"pass_group.group_order" equalToValue:v10];
  v32[1] = v11;
  id v12 = +[NSArray arrayWithObjects:v32 count:2];

  uint64_t database = self->_database;
  id v14 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v12];
  id v15 = +[SQLiteEntity queryWithDatabase:database predicate:v14];

  id v16 = objc_alloc_init((Class)NSMutableArray);
  CFStringRef v31 = @"group_pid";
  id v17 = +[NSArray arrayWithObjects:&v31 count:1];
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  v28[2] = sub_100415578;
  v28[3] = &unk_10072ED00;
  v28[4] = self;
  id v18 = v16;
  id v29 = v18;
  [v15 enumeratePersistentIDsAndProperties:v17 usingBlock:v28];

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v19 = v18;
  id v20 = [v19 countByEnumeratingWithState:&v24 objects:v30 count:16];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = *(void *)v25;
    do
    {
      uint64_t v23 = 0;
      do
      {
        if (*(void *)v25 != v22) {
          objc_enumerationMutation(v19);
        }
        objc_msgSend(*(id *)(*((void *)&v24 + 1) + 8 * (void)v23), "updateWithOrder:", a5, (void)v24);
        uint64_t v23 = (char *)v23 + 1;
      }
      while (v21 != v23);
      id v21 = [v19 countByEnumeratingWithState:&v24 objects:v30 count:16];
    }
    while (v21);
  }
}

- (void)_moveGroup:(id)a3 toIndex:(unint64_t)a4
{
  id v6 = a3;
  id v7 = [v6 order];
  if (v7 != (id)a4)
  {
    unint64_t v8 = (unint64_t)v7;
    id v24 = objc_alloc_init((Class)NSMutableArray);
    if (v8 < a4) {
      unint64_t v9 = v8 + 1;
    }
    else {
      unint64_t v9 = a4;
    }
    if (v8 >= a4) {
      unint64_t v10 = v8 - 1;
    }
    else {
      unint64_t v10 = a4;
    }
    uint64_t v11 = +[NSNumber numberWithUnsignedInteger:v9];
    id v12 = +[SQLiteComparisonPredicate predicateWithProperty:@"group_order" greaterThanOrEqualToValue:v11];

    uint64_t v13 = +[NSNumber numberWithUnsignedInteger:v10];
    id v14 = +[SQLiteComparisonPredicate predicateWithProperty:@"group_order" lessThanOrEqualToValue:v13];

    v32[0] = v12;
    v32[1] = v14;
    id v15 = +[NSArray arrayWithObjects:v32 count:2];
    id v16 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v15];

    uint64_t database = self->_database;
    CFStringRef v31 = @"group_order";
    id v18 = +[NSArray arrayWithObjects:&v31 count:1];
    id v19 = +[SQLiteEntity queryWithDatabase:database predicate:v16 orderingProperties:v18];

    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_1004158E0;
    v29[3] = &unk_100730E38;
    void v29[4] = self;
    id v20 = v24;
    id v30 = v20;
    [v19 enumeratePersistentIDsUsingBlock:v29];
    if (v8 >= a4) {
      id v21 = 0;
    }
    else {
      id v21 = [v20 count];
    }
    [v20 insertObject:v6 atIndex:v21];
    uint64_t v22 = self->_database;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    void v25[2] = sub_100415958;
    v25[3] = &unk_1007334D8;
    unint64_t v27 = v8;
    unint64_t v28 = a4;
    id v26 = v20;
    id v23 = v20;
    sub_10000817C((uint64_t)v22, v25);
  }
}

- (void)_removeGroup:(id)a3
{
  id v4 = a3;
  id v5 = (char *)[v4 order];
  [v4 deleteFromDatabase];
  id v6 = objc_alloc_init((Class)NSMutableArray);
  id v7 = +[NSNumber numberWithUnsignedInteger:v5];
  unint64_t v8 = +[SQLiteComparisonPredicate predicateWithProperty:@"group_order" greaterThanValue:v7];

  uint64_t database = self->_database;
  CFStringRef v25 = @"group_order";
  unint64_t v10 = +[NSArray arrayWithObjects:&v25 count:1];
  uint64_t v11 = +[SQLiteEntity queryWithDatabase:database predicate:v8 orderingProperties:v10];

  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_100415CA4;
  v22[3] = &unk_100730E38;
  void v22[4] = self;
  id v12 = v6;
  id v23 = v12;
  [v11 enumeratePersistentIDsUsingBlock:v22];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v13 = v12;
  id v14 = [v13 countByEnumeratingWithState:&v18 objects:v24 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v19;
    do
    {
      id v17 = 0;
      do
      {
        if (*(void *)v19 != v16) {
          objc_enumerationMutation(v13);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * (void)v17), "updateWithOrder:", (char *)v17 + (void)v5, (void)v18);
        id v17 = (char *)v17 + 1;
      }
      while (v15 != v17);
      id v15 = [v13 countByEnumeratingWithState:&v18 objects:v24 count:16];
      id v5 = (char *)v17 + (void)v5;
    }
    while (v15);
  }
}

- (void)_addPass:(id)a3 toGroup:(id)a4 withGroupingProfile:(id)a5
{
  id v16 = a3;
  id v8 = a4;
  id v9 = a5;
  unint64_t v10 = [v8 automaticGroup];
  if ([v10 addPass:v16 withGroupingProfile:v9]) {
    [v8 updateWithAutomaticGroup:v10];
  }
  [v16 updateWithGroup:v8];
  uint64_t v11 = [v9 relevantDates];
  id v12 = [(PDDatabaseManager *)self _firstGroupMatchingGroup:v8 withRelevantDates:v11];

  if (v12)
  {
    do
    {
      [(PDDatabaseManager *)self _mergeGroup:v12 intoGroup:v8];
      id v14 = [v9 relevantDates];
      uint64_t v15 = [(PDDatabaseManager *)self _firstGroupMatchingGroup:v8 withRelevantDates:v14];

      id v12 = (void *)v15;
    }
    while (v15);
  }
}

- (void)_mergeGroup:(id)a3 intoGroup:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [v7 automaticGroup];
  id v9 = objc_alloc_init((Class)NSMutableArray);
  unint64_t v10 = +[Pass queryWithDatabase:self->_database group:v6];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_100416060;
  v22[3] = &unk_10074FCF8;
  id v11 = v9;
  id v23 = v11;
  id v12 = v8;
  id v24 = v12;
  +[Pass enumeratePassesAndGroupingProfilesForQuery:v10 withHandler:v22];
  [v7 updateWithAutomaticGroup:v12];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v13 = v11;
  id v14 = [v13 countByEnumeratingWithState:&v18 objects:v25 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v19;
    do
    {
      id v17 = 0;
      do
      {
        if (*(void *)v19 != v16) {
          objc_enumerationMutation(v13);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * (void)v17), "updateWithGroup:", v7, (void)v18);
        id v17 = (char *)v17 + 1;
      }
      while (v15 != v17);
      id v15 = [v13 countByEnumeratingWithState:&v18 objects:v25 count:16];
    }
    while (v15);
  }

  [(PDDatabaseManager *)self _removeGroup:v6];
}

- (void)_removePass:(id)a3 fromGroup:(id)a4
{
  id v7 = a3;
  id v5 = a4;
  id v6 = [v5 automaticGroup];
  if ([v6 removePass:v7]) {
    [v5 updateWithAutomaticGroup:v6];
  }
  [v7 updateWithGroup:0];
}

- (id)_groupWithPersistentID:(id)a3
{
  id v4 = a3;
  id v5 = [Group alloc];
  id v6 = [v4 longLongValue];

  id v7 = [(SQLiteEntity *)v5 initWithPersistentID:v6 inDatabase:self->_database];
  if ([(SQLiteEntity *)v7 existsInDatabase]) {
    id v8 = v7;
  }
  else {
    id v8 = 0;
  }
  id v9 = v8;

  return v9;
}

- (id)_predicateForGroupingID:(id)a3
{
  if (a3) {
    +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:](SQLiteComparisonPredicate, "predicateWithProperty:equalToValue:", @"grouping_id");
  }
  else {
  id v3 = +[SQLiteNullPredicate isNullPredicateWithProperty:@"grouping_id"];
  }
  return v3;
}

- (id)_predicateForDates:(id)a3 leeway:(double)a4
{
  id v5 = a3;
  id v6 = v5;
  if (v5)
  {
    if ([v5 count] == (id)1)
    {
      id v7 = [v6 firstObject];
      id v8 = [v7 date];
      BOOL v9 = v8 != 0;
    }
    else
    {
      BOOL v9 = 0;
    }
    id v12 = +[PKPassRelevantDate findDateFromDates:v6 option:0];
    id v13 = +[PKPassRelevantDate findDateFromDates:v6 option:3];
    id v14 = v13;
    if (v9)
    {
      uint64_t v15 = [v13 dateByAddingTimeInterval:a4];

      uint64_t v16 = [v12 dateByAddingTimeInterval:-a4];

      id v17 = (void *)_SQLValueForDate();
      unint64_t v10 = +[SQLiteComparisonPredicate predicateWithProperty:@"minimum_date" lessThanOrEqualToValue:v17];

      long long v18 = (void *)_SQLValueForDate();
      id v11 = +[SQLiteComparisonPredicate predicateWithProperty:@"maximum_date" greaterThanOrEqualToValue:v18];
      id v12 = (void *)v16;
      id v14 = (void *)v15;
    }
    else
    {
      long long v19 = (void *)_SQLValueForDate();
      id v11 = +[SQLiteComparisonPredicate predicateWithProperty:@"maximum_date" equalToValue:v19];

      long long v18 = (void *)_SQLValueForDate();
      unint64_t v10 = +[SQLiteComparisonPredicate predicateWithProperty:@"minimum_date" equalToValue:v18];
    }
  }
  else
  {
    unint64_t v10 = +[SQLiteNullPredicate isNullPredicateWithProperty:@"minimum_date"];
    id v11 = +[SQLiteNullPredicate isNullPredicateWithProperty:@"maximum_date"];
  }
  v23[0] = v10;
  v23[1] = v11;
  long long v20 = +[NSArray arrayWithObjects:v23 count:2];
  long long v21 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v20];

  return v21;
}

- (id)_predicateForDate:(id)a3 matchExactly:(BOOL)a4 leeway:(double)a5
{
  id v7 = a3;
  id v8 = v7;
  if (v7)
  {
    BOOL v9 = [v7 dateByAddingTimeInterval:a5];
    unint64_t v10 = [v8 dateByAddingTimeInterval:-a5];
    id v11 = (void *)_SQLValueForDate();
    if (a4)
    {
      id v12 = +[SQLiteComparisonPredicate predicateWithProperty:@"maximum_date" equalToValue:v11];

      id v13 = (void *)_SQLValueForDate();
      id v14 = +[SQLiteComparisonPredicate predicateWithProperty:@"minimum_date" equalToValue:v13];
    }
    else
    {
      id v14 = +[SQLiteComparisonPredicate predicateWithProperty:@"minimum_date" lessThanOrEqualToValue:v11];

      id v13 = (void *)_SQLValueForDate();
      id v12 = +[SQLiteComparisonPredicate predicateWithProperty:@"maximum_date" greaterThanOrEqualToValue:v13];
    }
  }
  else
  {
    id v14 = +[SQLiteNullPredicate isNullPredicateWithProperty:@"minimum_date"];
    id v12 = +[SQLiteNullPredicate isNullPredicateWithProperty:@"maximum_date"];
  }
  v18[0] = v14;
  v18[1] = v12;
  uint64_t v15 = +[NSArray arrayWithObjects:v18 count:2];
  uint64_t v16 = +[SQLiteCompoundPredicate predicateMatchingAllPredicates:v15];

  return v16;
}

- (id)paymentTransactionsToDeleteFromFinanceWithLimit:(int64_t)a3
{
  return +[PaymentTransactionToDeleteFromFinance transactionsToDeleteFromFinanceWithLimit:a3 inDatabase:self->_database];
}

- (void)deletePaymentTransactionsToDeleteFromFinanceWithPIDs:(id)a3
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10041E6C4;
  v5[3] = &unk_100738A00;
  id v6 = a3;
  id v7 = self;
  id v4 = v6;
  [(PDDatabaseManager *)self performTransactionWithBlock:v5];
}

- (void)resetNeedsSyncWithFinanceForTransactions:(id)a3
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10041E884;
  v5[3] = &unk_100738A00;
  id v6 = a3;
  id v7 = self;
  id v4 = v6;
  [(PDDatabaseManager *)self performTransactionWithBlock:v5];
}

- (BOOL)setNeedsSyncWithFinanceForAllTransactions
{
  return +[PaymentTransaction setNeedsSyncWithFinanceForAllTransactionsInDatabase:self->_database];
}

- (void)setNeedsSyncWithFinanceForTransactionsWithAccountIdentifier:(id)a3
{
}

- (id)transactionsThatNeedSyncToFinanceWithAccountIdentifiers:(id)a3 withLimit:(int64_t)a4
{
  return +[PaymentTransaction transactionsThatNeedSyncToFinanceWithAccountIdentifiers:a3 withLimit:a4 inDatabase:self->_database];
}

@end